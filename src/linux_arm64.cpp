// Auto generated by JuleC.
// JuleC version: beta 0.0.3 @master
// Date: 23/7/2023 0.41 (DD/MM/YYYY) (HH.MM)

#include "api/jule.hpp"

#include <dirent.h>
#include <fcntl.h>
#include <cstdio>
#include <sys/stat.h>
#include "std/sys/syscall_unix.hpp"
#include "std/os/proc.hpp"
#include "std/vector/alloc.hpp"
#include "std/jule/parser/parser.hpp"
#include "src/julec/obj/cxx/cxx.hpp"
#include "src/julec/julec.hpp"

struct _10e9b6a10_Importer;
struct _10eeb79b0_Kind;
struct _10f3df410_Lookup;
struct _10e890bb0_RangeSetter;

struct _12ce95080_LazyBuff;


struct _12ce4fe70_DirEntry;


struct _12ce537d0_File;


struct _12ce6e9e0_Status;


struct _10d916690_FloatInfo;


struct _10d916690_DecimalSlice;


struct _10ce72c20_LeftCheat;


struct _10ce72c20_Decimal;


struct _13cfd2d20_Log;


struct _10dba43b0_accept_range;


struct _11ce22a00_Token;


struct _11cec0de0_KindPair;


struct _11ce1fd50_CommentGroup;


struct _11ce1fd50_NamespaceTypeDecl;


struct _11ce1fd50_RefTypeDecl;


struct _11ce1fd50_SlcTypeDecl;


struct _11ce1fd50_TupleTypeDecl;


struct _11ce1fd50_PtrTypeDecl;


struct _11ce1fd50_ArrTypeDecl;


struct _11ce1fd50_MapTypeDecl;


struct _11ce1fd50_RetTypeDecl;


struct _11ce1fd50_TupleExpr;


struct _11ce1fd50_LitExpr;


struct _11ce1fd50_UnsafeExpr;


struct _11ce1fd50_IdentExpr;


struct _11ce1fd50_UnaryExpr;


struct _11ce1fd50_VariadicExpr;


struct _11ce1fd50_CastExpr;


struct _11ce1fd50_NsSelectionExpr;


struct _11ce1fd50_SubIdentExpr;


struct _11ce1fd50_BinopExpr;


struct _11ce1fd50_FieldExprPair;


struct _11ce1fd50_StructLit;


struct _11ce1fd50_BraceLit;


struct _11ce1fd50_KeyValPair;


struct _11ce1fd50_SliceExpr;


struct _11ce1fd50_IndexingExpr;


struct _11ce1fd50_SlicingExpr;


struct _11ce1fd50_LabelSt;


struct _11ce1fd50_FallSt;


struct _11ce1fd50_AssignSt;


struct _11ce1fd50_ScopeTree;


struct _11ce1fd50_RetSt;


struct _11ce1fd50_Iter;


struct _11ce1fd50_WhileKind;


struct _11ce1fd50_RangeKind;


struct _11ce1fd50_Conditional;


struct _11ce1fd50_MatchCase;


struct _10e3d3fd0_FileInfo;


struct _10e3d3e70_Stmt;


struct _10e3d3e70_ScopeParser;


struct _10e3df5b0_CallData;


struct _10e3df5b0_Precedencer;


struct _10e3df5b0_ExprBuilder;


struct _10e5e45f0_Parser;


struct _10e7e4720_TypeBuilder;


struct _10f4ed830_Const;


struct _10e3fc8f0_FieldIns;


struct _10e3fc8f0_StructIns;


struct _10e56a140_RetType;


struct _10e56a140_ParamIns;


struct _10e56a140_FnIns;


struct _10e8ca650_SymbolBuilder;


struct _10e97fcf0_If;


struct _10e97fcf0_Else;


struct _10e97fcf0_Conditional;


struct _10e97fcf0_InfIter;


struct _10e97fcf0_WhileIter;


struct _10e97fcf0_RangeIter;


struct _10e97fcf0_ContSt;


struct _10e97fcf0_BreakSt;


struct _10e97fcf0_Label;


struct _10e97fcf0_GotoSt;


struct _10e97fcf0_Postfix;


struct _10e97fcf0_Assign;


struct _10e97fcf0_MultiAssign;


struct _10e97fcf0_Match;


struct _10e97fcf0_Case;


struct _10e97fcf0_FallSt;


struct _10e97fcf0_RetSt;


struct _10e97fcf0_Recover;


struct _10e97fcf0_ScopeGoto;


struct _10e97fcf0_ScopeChecker;


struct _10e9ca470_BinopExprModel;


struct _10e9ca470_UnaryExprModel;


struct _10e9ca470_GetRefPtrExprModel;


struct _10e9ca470_StructArgExprModel;


struct _10e9ca470_StructLitExprModel;


struct _10e9ca470_AllocStructLitExprModel;


struct _10e9ca470_CastingExprModel;


struct _10e9ca470_FnCallExprModel;


struct _10e9ca470_SliceExprModel;


struct _10e9ca470_IndexigExprModel;


struct _10e9ca470_AnonFnExprModel;


struct _10e9ca470_KeyValPairExprModel;


struct _10e9ca470_MapExprModel;


struct _10e9ca470_SlicingExprModel;


struct _10e9ca470_TraitSubIdentExprModel;


struct _10e9ca470_StructSubIdentExprModel;


struct _10e9ca470_StructStaticIdentExprModel;


struct _10e9ca470_ArrayExprModel;


struct _10e9ca470_CommonIdentExprModel;


struct _10e9ca470_CommonSubIdentExprModel;


struct _10e9ca470_TupleExprModel;


struct _10e9ca470_BuiltinOutCallExprModel;


struct _10e9ca470_BuiltinOutlnCallExprModel;


struct _10e9ca470_BuiltinCloneCallExprModel;


struct _10e9ca470_BuiltinNewCallExprModel;


struct _10e9ca470_BuiltinRealCallExprModel;


struct _10e9ca470_BuiltinDropCallExprModel;


struct _10e9ca470_BuiltinPanicCallExprModel;


struct _10e9ca470_BuiltinMakeCallExprModel;


struct _10e9ca470_BuiltinErrorTraitSubIdentExprModel;


struct _10e9ca470_SizeofExprModel;


struct _10e9ca470_AlignofExprModel;


struct _10e9ca470_RuneExprModel;


struct _10e9ca470_ExplicitDerefExprModel;


struct _10e9b6a10_Package;


struct _10e9847f0_Sema;


struct _10eb9c740_DynamicTypeAnnotation;


struct _10eb9c740_StructLitChecker;


struct _10eb9c740_RangeChecker;


struct _10ee8a260_Data;


struct _10ee8a260_Value;


struct _10ee8a260_Eval;


struct _10eeb79b0_TypeKind;


struct _10eeb79b0_TypeSymbol;


struct _10eeb79b0_Prim;


struct _10eeb79b0_Ref;


struct _10eeb79b0_Slc;


struct _10eeb79b0_Tuple;


struct _10eeb79b0_Map;


struct _10eeb79b0_Arr;


struct _10eeb79b0_Ptr;


struct _10eeb79b0_Referencer;


struct _12ce24da0_PlainImporter;


struct _12ce09d10_IR;


struct _13cf6e710_ScopeDeadCode;


struct _10e890bb0_IndexRangeSetter;


struct _10e890bb0_MapRangeSetter;


struct _10f7d1d90_OrderedDecls;


struct _10eeb79b0_TypeChecker;


struct _10eeb79b0_TypeAlias;


struct _10ee8a260_BinopSolver;


struct _10eb9c740_RetTypeChecker;


struct _10eb9c740_FnCallArgChecker;


struct _10eb9c740_AssignTypeChecker;


struct _10eb9c740_TypeCompatibilityChecker;


struct _10ebc2ad0_Var;


struct _10e9b6a10_ImportInfo;


struct _10e97fcf0_ScopeLabel;


struct _10e97d820_Impl;


struct _10e975f00_Enum;


struct _10e975f00_EnumItem;


struct _10e3d6eb0_Trait;


struct _10e8ca650_Pass;


struct _10e56a140_Fn;


struct _10e56a140_Param;


struct _10e3fc8f0_Field;


struct _10e5e5b00_AssignInfo;


struct _11ce1fd50_Impl;


struct _11ce1fd50_TraitDecl;


struct _11ce1fd50_StructDecl;


struct _11ce1fd50_FieldDecl;


struct _11ce1fd50_EnumDecl;


struct _11ce1fd50_EnumItemDecl;


struct _11ce1fd50_UseDecl;


struct _11ce1fd50_Case;


struct _11ce1fd50_TypeAliasDecl;


struct _11ce1fd50_Else;


struct _11ce1fd50_If;


struct _11ce1fd50_ContSt;


struct _11ce1fd50_BreakSt;


struct _11ce1fd50_VarDecl;


struct _11ce1fd50_FnDecl;


struct _11ce1fd50_ParamDecl;


struct _11ce1fd50_AssignLeft;


struct _11ce1fd50_GotoSt;


struct _11ce1fd50_GenericDecl;


struct _11ce1fd50_FnCallExpr;


struct _11ce1fd50_Expr;


struct _11ce1fd50_IdentTypeDecl;


struct _11ce1fd50_TypeDecl;


struct _11ce1fd50_Directive;


struct _11ce1fd50_Comment;


struct _11ce1fd50_Node;


struct _10dba8790_Vector_0;

struct _10dba8790_Vector_1;

struct _10dba8790_Vector_2;

struct _10dba8790_Vector_3;

struct _10dba8790_Vector_4;

struct _10dba8790_Vector_5;

struct _10dba8790_Vector_6;

struct _10dba8790_Vector_7;

struct _10dba8790_Vector_8;

struct _10dba8790_Vector_9;

struct _10dba8790_Vector_10;

struct _10dba8790_Vector_11;

struct _10dba8790_Vector_12;

struct _10dba8790_Vector_13;

struct _10dba8790_Vector_14;

struct _10dba8790_Vector_15;


struct _11ce078a0_File;


struct _11cec0de0_Lex;


struct _11ce19be0_Ast;


struct _10e3fc8f0_Struct;


struct _10e8ca650_ReferenceStack;


struct _10e97fcf0_Scope;


struct _10ee5c510_SymbolTable;

struct _10e9b6a10_Importer {
	virtual ~_10e9b6a10_Importer(void)   {}

	virtual jule::Ref<_10e9b6a10_ImportInfo> _method_get_import(jule::Str _1629_path) { return {}; }
	virtual std::tuple<jule::Slice<jule::Ref<_11ce19be0_Ast>>,jule::Slice<_13cfd2d20_Log>> _method_import_package(jule::Str _2034_path) { return {}; }
	virtual void _method_imported(jule::Ref<_10e9b6a10_ImportInfo>) {}
};

struct _10eeb79b0_Kind {
	virtual ~_10eeb79b0_Kind(void)   {}

	virtual jule::Str _method_to_str(void) { return {}; }
	virtual jule::Bool _method_equals(jule::Ref<_10eeb79b0_TypeKind> _4621_other) { return {}; }
};

struct _10f3df410_Lookup {
	virtual ~_10f3df410_Lookup(void)   {}

	virtual jule::Ref<_10e9b6a10_ImportInfo> _method_find_package(jule::Str _731_ident) { return {}; }
	virtual jule::Ref<_10e9b6a10_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_10e9b6a10_ImportInfo>)> _833_selector) { return {}; }
	virtual jule::Ref<_10ebc2ad0_Var> _method_find_var(jule::Str _927_ident,jule::Bool _939_cpp_linked) { return {}; }
	virtual jule::Ref<_10eeb79b0_TypeAlias> _method_find_type_alias(jule::Str _1034_ident,jule::Bool _1046_cpp_linked) { return {}; }
	virtual jule::Ref<_10e3fc8f0_Struct> _method_find_struct(jule::Str _1130_ident,jule::Bool _1142_cpp_linked) { return {}; }
	virtual jule::Ref<_10e56a140_Fn> _method_find_fn(jule::Str _1226_ident,jule::Bool _1238_cpp_linked) { return {}; }
	virtual jule::Ref<_10e3d6eb0_Trait> _method_find_trait(jule::Str _1329_ident) { return {}; }
	virtual jule::Ref<_10e975f00_Enum> _method_find_enum(jule::Str _1428_ident) { return {}; }
};

struct _10e890bb0_RangeSetter {
	virtual ~_10e890bb0_RangeSetter(void)   {}

	virtual jule::Str _method_setup_vars(jule::Ref<_10ebc2ad0_Var> _3729_key_a,jule::Ref<_10ebc2ad0_Var> _3746_key_b) { return {}; }
	virtual jule::Str _method_next_steps(jule::Ref<_10ebc2ad0_Var> _3829_key_a,jule::Ref<_10ebc2ad0_Var> _3846_key_b,jule::Str _3859_begin) { return {}; }
};


struct _12ce95080_LazyBuff {
	jule::Ref<_12ce95080_LazyBuff> self{};

	jule::Str _field_path{jule::Str()};
	jule::Slice<jule::U8> _field_buff{jule::Slice<jule::U8>()};
	jule::Int _field_w{jule::Int()};
	jule::Str _field_vol_and_path{jule::Str()};
	jule::Int _field_vol_len{jule::Int()};


	_12ce95080_LazyBuff(jule::Str __param_path, jule::Slice<jule::U8> __param_buff, jule::Int __param_w, jule::Str __param_vol_and_path, jule::Int __param_vol_len)   {
		this->self = jule::Ref<_12ce95080_LazyBuff>::make(this, nullptr);

		this->_field_path = __param_path;
		this->_field_buff = __param_buff;
		this->_field_w = __param_w;
		this->_field_vol_and_path = __param_vol_and_path;
		this->_field_vol_len = __param_vol_len;
	}

	~_12ce95080_LazyBuff(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_12ce95080_LazyBuff(void)   { this->self = jule::Ref<_12ce95080_LazyBuff>::make(this, nullptr); }

	inline jule::U8 _method_index(jule::Int);


	inline void _method_append(jule::U8);


	inline jule::Str _method_string(void);


	inline bool operator==(const _12ce95080_LazyBuff &_Src) {
		return 
			this->_field_path == _Src._field_path &&
			this->_field_buff == _Src._field_buff &&
			this->_field_w == _Src._field_w &&
			this->_field_vol_and_path == _Src._field_vol_and_path &&
			this->_field_vol_len == _Src._field_vol_len;
	}

	inline bool operator!=(const _12ce95080_LazyBuff &_Src) { return !this->operator==(_Src); }
};


struct _12ce4fe70_DirEntry {
	jule::Ref<_12ce4fe70_DirEntry> self{};

	jule::Str _field_name{jule::Str()};
	jule::Ref<_12ce6e9e0_Status> _field_stat{jule::Ref<_12ce6e9e0_Status>()};


	_12ce4fe70_DirEntry(jule::Str __param_name, jule::Ref<_12ce6e9e0_Status> __param_stat)   {
		this->self = jule::Ref<_12ce4fe70_DirEntry>::make(this, nullptr);

		this->_field_name = __param_name;
		this->_field_stat = __param_stat;
	}

	~_12ce4fe70_DirEntry(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_12ce4fe70_DirEntry(void)   { this->self = jule::Ref<_12ce4fe70_DirEntry>::make(this, nullptr); }

	inline bool operator==(const _12ce4fe70_DirEntry &_Src) {
		return 
			this->_field_name == _Src._field_name &&
			this->_field_stat == _Src._field_stat;
	}

	inline bool operator!=(const _12ce4fe70_DirEntry &_Src) { return !this->operator==(_Src); }
};


struct _12ce537d0_File {
	jule::Ref<_12ce537d0_File> self{};

	jule::Int _field_handle{jule::Int()};


	_12ce537d0_File(jule::Int __param_handle)   {
		this->self = jule::Ref<_12ce537d0_File>::make(this, nullptr);

		this->_field_handle = __param_handle;
	}

	~_12ce537d0_File(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_12ce537d0_File(void)   { this->self = jule::Ref<_12ce537d0_File>::make(this, nullptr); }

	inline std::tuple<jule::I64,jule::Int> _method_seek(jule::I64,jule::Int);


	inline std::tuple<jule::Int,jule::Int> _method_read(jule::Slice<jule::U8>);


	inline std::tuple<jule::Int,jule::Int> _method_write(jule::Slice<jule::U8>);


	inline jule::Int _method_close(void);


	inline bool operator==(const _12ce537d0_File &_Src) {
		return 
			this->_field_handle == _Src._field_handle;
	}

	inline bool operator!=(const _12ce537d0_File &_Src) { return !this->operator==(_Src); }
};


struct _12ce6e9e0_Status {
	jule::Ref<_12ce6e9e0_Status> self{};

	jule::Uint _field_mode{jule::Uint()};
	jule::Uint _field_size{jule::Uint()};


	_12ce6e9e0_Status(jule::Uint __param_mode, jule::Uint __param_size)   {
		this->self = jule::Ref<_12ce6e9e0_Status>::make(this, nullptr);

		this->_field_mode = __param_mode;
		this->_field_size = __param_size;
	}

	~_12ce6e9e0_Status(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_12ce6e9e0_Status(void)   { this->self = jule::Ref<_12ce6e9e0_Status>::make(this, nullptr); }

	inline jule::Bool _method_is_dir(void);


	inline jule::Bool _method_is_reg(void);


	inline bool operator==(const _12ce6e9e0_Status &_Src) {
		return 
			this->_field_mode == _Src._field_mode &&
			this->_field_size == _Src._field_size;
	}

	inline bool operator!=(const _12ce6e9e0_Status &_Src) { return !this->operator==(_Src); }
};


struct _10d916690_FloatInfo {
	jule::Ref<_10d916690_FloatInfo> self{};

	jule::Uint _field_mantbits{jule::Uint()};
	jule::Uint _field_expbits{jule::Uint()};
	jule::Int _field_bias{jule::Int()};


	_10d916690_FloatInfo(jule::Uint __param_mantbits, jule::Uint __param_expbits, jule::Int __param_bias)   {
		this->self = jule::Ref<_10d916690_FloatInfo>::make(this, nullptr);

		this->_field_mantbits = __param_mantbits;
		this->_field_expbits = __param_expbits;
		this->_field_bias = __param_bias;
	}

	~_10d916690_FloatInfo(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10d916690_FloatInfo(void)   { this->self = jule::Ref<_10d916690_FloatInfo>::make(this, nullptr); }

	inline bool operator==(const _10d916690_FloatInfo &_Src) {
		return 
			this->_field_mantbits == _Src._field_mantbits &&
			this->_field_expbits == _Src._field_expbits &&
			this->_field_bias == _Src._field_bias;
	}

	inline bool operator!=(const _10d916690_FloatInfo &_Src) { return !this->operator==(_Src); }
};


struct _10d916690_DecimalSlice {
	jule::Ref<_10d916690_DecimalSlice> self{};

	jule::Slice<jule::U8> _field_d{jule::Slice<jule::U8>()};
	jule::Int _field_nd{jule::Int()};
	jule::Int _field_dp{jule::Int()};
	jule::Bool _field_neg{jule::Bool()};


	_10d916690_DecimalSlice(jule::Slice<jule::U8> __param_d, jule::Int __param_nd, jule::Int __param_dp, jule::Bool __param_neg)   {
		this->self = jule::Ref<_10d916690_DecimalSlice>::make(this, nullptr);

		this->_field_d = __param_d;
		this->_field_nd = __param_nd;
		this->_field_dp = __param_dp;
		this->_field_neg = __param_neg;
	}

	~_10d916690_DecimalSlice(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10d916690_DecimalSlice(void)   { this->self = jule::Ref<_10d916690_DecimalSlice>::make(this, nullptr); }

	inline bool operator==(const _10d916690_DecimalSlice &_Src) {
		return 
			this->_field_d == _Src._field_d &&
			this->_field_nd == _Src._field_nd &&
			this->_field_dp == _Src._field_dp &&
			this->_field_neg == _Src._field_neg;
	}

	inline bool operator!=(const _10d916690_DecimalSlice &_Src) { return !this->operator==(_Src); }
};


struct _10ce72c20_LeftCheat {
	jule::Ref<_10ce72c20_LeftCheat> self{};

	jule::Int _field_delta{jule::Int()};
	jule::Str _field_cutoff{jule::Str()};


	_10ce72c20_LeftCheat(jule::Int __param_delta, jule::Str __param_cutoff)   {
		this->self = jule::Ref<_10ce72c20_LeftCheat>::make(this, nullptr);

		this->_field_delta = __param_delta;
		this->_field_cutoff = __param_cutoff;
	}

	~_10ce72c20_LeftCheat(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10ce72c20_LeftCheat(void)   { this->self = jule::Ref<_10ce72c20_LeftCheat>::make(this, nullptr); }

	inline bool operator==(const _10ce72c20_LeftCheat &_Src) {
		return 
			this->_field_delta == _Src._field_delta &&
			this->_field_cutoff == _Src._field_cutoff;
	}

	inline bool operator!=(const _10ce72c20_LeftCheat &_Src) { return !this->operator==(_Src); }
};


struct _10ce72c20_Decimal {
	jule::Ref<_10ce72c20_Decimal> self{};

	jule::Array<jule::U8,800> _field_d{jule::Array<jule::U8,800>()};
	jule::Int _field_nd{jule::Int()};
	jule::Int _field_dp{jule::Int()};
	jule::Bool _field_neg{jule::Bool()};
	jule::Bool _field_trunc{jule::Bool()};


	_10ce72c20_Decimal(jule::Array<jule::U8,800> __param_d, jule::Int __param_nd, jule::Int __param_dp, jule::Bool __param_neg, jule::Bool __param_trunc)   {
		this->self = jule::Ref<_10ce72c20_Decimal>::make(this, nullptr);

		this->_field_d = __param_d;
		this->_field_nd = __param_nd;
		this->_field_dp = __param_dp;
		this->_field_neg = __param_neg;
		this->_field_trunc = __param_trunc;
	}

	~_10ce72c20_Decimal(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10ce72c20_Decimal(void)   { this->self = jule::Ref<_10ce72c20_Decimal>::make(this, nullptr); }

	inline jule::Bool _method_set(jule::Str);


	inline std::tuple<jule::U64,jule::Bool> _method_float_bits(_10d916690_FloatInfo*);


	inline void _method_assign(jule::U64);


	inline void _method_shift(jule::Int);


	inline void _method_round_down(jule::Int);


	inline void _method_round_up(jule::Int);


	inline void _method_round(jule::Int);


	inline jule::U64 _method_rounded_integer(void);


	inline bool operator==(const _10ce72c20_Decimal &_Src) {
		return 
			this->_field_d == _Src._field_d &&
			this->_field_nd == _Src._field_nd &&
			this->_field_dp == _Src._field_dp &&
			this->_field_neg == _Src._field_neg &&
			this->_field_trunc == _Src._field_trunc;
	}

	inline bool operator!=(const _10ce72c20_Decimal &_Src) { return !this->operator==(_Src); }
};


struct _13cfd2d20_Log {
	jule::Ref<_13cfd2d20_Log> self{};

	jule::Int _field_kind{0LLU};
	jule::Int _field_row{jule::Int()};
	jule::Int _field_column{jule::Int()};
	jule::Str _field_path{jule::Str()};
	jule::Str _field_text{jule::Str()};


	_13cfd2d20_Log(jule::Int __param_kind, jule::Int __param_row, jule::Int __param_column, jule::Str __param_path, jule::Str __param_text)   {
		this->self = jule::Ref<_13cfd2d20_Log>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_row = __param_row;
		this->_field_column = __param_column;
		this->_field_path = __param_path;
		this->_field_text = __param_text;
	}

	~_13cfd2d20_Log(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_13cfd2d20_Log(void)   { this->self = jule::Ref<_13cfd2d20_Log>::make(this, nullptr); }

	inline jule::Str _method_flat(void);


	inline jule::Str _method_error(void);


	inline jule::Str _method_to_str(void);


	inline bool operator==(const _13cfd2d20_Log &_Src) {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_row == _Src._field_row &&
			this->_field_column == _Src._field_column &&
			this->_field_path == _Src._field_path &&
			this->_field_text == _Src._field_text;
	}

	inline bool operator!=(const _13cfd2d20_Log &_Src) { return !this->operator==(_Src); }
};


struct _10dba43b0_accept_range {
	jule::Ref<_10dba43b0_accept_range> self{};

	jule::U8 _field_lo{jule::U8()};
	jule::U8 _field_hi{jule::U8()};


	_10dba43b0_accept_range(jule::U8 __param_lo, jule::U8 __param_hi)   {
		this->self = jule::Ref<_10dba43b0_accept_range>::make(this, nullptr);

		this->_field_lo = __param_lo;
		this->_field_hi = __param_hi;
	}

	~_10dba43b0_accept_range(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10dba43b0_accept_range(void)   { this->self = jule::Ref<_10dba43b0_accept_range>::make(this, nullptr); }

	inline bool operator==(const _10dba43b0_accept_range &_Src) {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi;
	}

	inline bool operator!=(const _10dba43b0_accept_range &_Src) { return !this->operator==(_Src); }
};


struct _11ce22a00_Token {
	jule::Ref<_11ce22a00_Token> self{};

	jule::Ref<_11ce078a0_File> _field_file{jule::Ref<_11ce078a0_File>()};
	jule::Int _field_row{jule::Int()};
	jule::Int _field_column{jule::Int()};
	jule::Str _field_kind{jule::Str()};
	jule::Uint _field_id{0LLU};


	_11ce22a00_Token(jule::Ref<_11ce078a0_File> __param_file, jule::Int __param_row, jule::Int __param_column, jule::Str __param_kind, jule::Uint __param_id)   {
		this->self = jule::Ref<_11ce22a00_Token>::make(this, nullptr);

		this->_field_file = __param_file;
		this->_field_row = __param_row;
		this->_field_column = __param_column;
		this->_field_kind = __param_kind;
		this->_field_id = __param_id;
	}

	~_11ce22a00_Token(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce22a00_Token(void)   { this->self = jule::Ref<_11ce22a00_Token>::make(this, nullptr); }

	inline jule::Int _method_prec(void);


	inline bool operator==(const _11ce22a00_Token &_Src) {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_row == _Src._field_row &&
			this->_field_column == _Src._field_column &&
			this->_field_kind == _Src._field_kind &&
			this->_field_id == _Src._field_id;
	}

	inline bool operator!=(const _11ce22a00_Token &_Src) { return !this->operator==(_Src); }
};


struct _11cec0de0_KindPair {
	jule::Ref<_11cec0de0_KindPair> self{};

	jule::Str _field_kind{jule::Str("::", 2)};
	jule::Uint _field_id{0LLU};


	_11cec0de0_KindPair(jule::Str __param_kind, jule::Uint __param_id)   {
		this->self = jule::Ref<_11cec0de0_KindPair>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_id = __param_id;
	}

	~_11cec0de0_KindPair(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11cec0de0_KindPair(void)   { this->self = jule::Ref<_11cec0de0_KindPair>::make(this, nullptr); }

	inline bool operator==(const _11cec0de0_KindPair &_Src) {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_id == _Src._field_id;
	}

	inline bool operator!=(const _11cec0de0_KindPair &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_CommentGroup {
	jule::Ref<_11ce1fd50_CommentGroup> self{};

	jule::Slice<jule::Ref<_11ce1fd50_Comment>> _field_comments{jule::Slice<jule::Ref<_11ce1fd50_Comment>>()};


	_11ce1fd50_CommentGroup(jule::Slice<jule::Ref<_11ce1fd50_Comment>> __param_comments)   {
		this->self = jule::Ref<_11ce1fd50_CommentGroup>::make(this, nullptr);

		this->_field_comments = __param_comments;
	}

	~_11ce1fd50_CommentGroup(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_CommentGroup(void)   { this->self = jule::Ref<_11ce1fd50_CommentGroup>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_CommentGroup &_Src) {
		return 
			this->_field_comments == _Src._field_comments;
	}

	inline bool operator!=(const _11ce1fd50_CommentGroup &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_NamespaceTypeDecl {
	jule::Ref<_11ce1fd50_NamespaceTypeDecl> self{};

	jule::Slice<_11ce22a00_Token> _field_idents{jule::Slice<_11ce22a00_Token>()};
	jule::Ref<_11ce1fd50_IdentTypeDecl> _field_kind{jule::Ref<_11ce1fd50_IdentTypeDecl>()};


	_11ce1fd50_NamespaceTypeDecl(jule::Slice<_11ce22a00_Token> __param_idents, jule::Ref<_11ce1fd50_IdentTypeDecl> __param_kind)   {
		this->self = jule::Ref<_11ce1fd50_NamespaceTypeDecl>::make(this, nullptr);

		this->_field_idents = __param_idents;
		this->_field_kind = __param_kind;
	}

	~_11ce1fd50_NamespaceTypeDecl(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_NamespaceTypeDecl(void)   { this->self = jule::Ref<_11ce1fd50_NamespaceTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_NamespaceTypeDecl &_Src) {
		return 
			this->_field_idents == _Src._field_idents &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _11ce1fd50_NamespaceTypeDecl &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_RefTypeDecl {
	jule::Ref<_11ce1fd50_RefTypeDecl> self{};

	jule::Ref<_11ce1fd50_TypeDecl> _field_elem{jule::Ref<_11ce1fd50_TypeDecl>()};


	_11ce1fd50_RefTypeDecl(jule::Ref<_11ce1fd50_TypeDecl> __param_elem)   {
		this->self = jule::Ref<_11ce1fd50_RefTypeDecl>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_11ce1fd50_RefTypeDecl(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_RefTypeDecl(void)   { this->self = jule::Ref<_11ce1fd50_RefTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_RefTypeDecl &_Src) {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _11ce1fd50_RefTypeDecl &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_SlcTypeDecl {
	jule::Ref<_11ce1fd50_SlcTypeDecl> self{};

	jule::Ref<_11ce1fd50_TypeDecl> _field_elem{jule::Ref<_11ce1fd50_TypeDecl>()};


	_11ce1fd50_SlcTypeDecl(jule::Ref<_11ce1fd50_TypeDecl> __param_elem)   {
		this->self = jule::Ref<_11ce1fd50_SlcTypeDecl>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_11ce1fd50_SlcTypeDecl(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_SlcTypeDecl(void)   { this->self = jule::Ref<_11ce1fd50_SlcTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_SlcTypeDecl &_Src) {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _11ce1fd50_SlcTypeDecl &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_TupleTypeDecl {
	jule::Ref<_11ce1fd50_TupleTypeDecl> self{};

	jule::Slice<jule::Ref<_11ce1fd50_TypeDecl>> _field_types{jule::Slice<jule::Ref<_11ce1fd50_TypeDecl>>()};


	_11ce1fd50_TupleTypeDecl(jule::Slice<jule::Ref<_11ce1fd50_TypeDecl>> __param_types)   {
		this->self = jule::Ref<_11ce1fd50_TupleTypeDecl>::make(this, nullptr);

		this->_field_types = __param_types;
	}

	~_11ce1fd50_TupleTypeDecl(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_TupleTypeDecl(void)   { this->self = jule::Ref<_11ce1fd50_TupleTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_TupleTypeDecl &_Src) {
		return 
			this->_field_types == _Src._field_types;
	}

	inline bool operator!=(const _11ce1fd50_TupleTypeDecl &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_PtrTypeDecl {
	jule::Ref<_11ce1fd50_PtrTypeDecl> self{};

	jule::Ref<_11ce1fd50_TypeDecl> _field_elem{jule::Ref<_11ce1fd50_TypeDecl>()};


	_11ce1fd50_PtrTypeDecl(jule::Ref<_11ce1fd50_TypeDecl> __param_elem)   {
		this->self = jule::Ref<_11ce1fd50_PtrTypeDecl>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_11ce1fd50_PtrTypeDecl(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_PtrTypeDecl(void)   { this->self = jule::Ref<_11ce1fd50_PtrTypeDecl>::make(this, nullptr); }

	inline jule::Bool _method_is_unsafe(void);


	inline bool operator==(const _11ce1fd50_PtrTypeDecl &_Src) {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _11ce1fd50_PtrTypeDecl &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_ArrTypeDecl {
	jule::Ref<_11ce1fd50_ArrTypeDecl> self{};

	jule::Ref<_11ce1fd50_TypeDecl> _field_elem{jule::Ref<_11ce1fd50_TypeDecl>()};
	jule::Ref<_11ce1fd50_Expr> _field_size{jule::Ref<_11ce1fd50_Expr>()};


	_11ce1fd50_ArrTypeDecl(jule::Ref<_11ce1fd50_TypeDecl> __param_elem, jule::Ref<_11ce1fd50_Expr> __param_size)   {
		this->self = jule::Ref<_11ce1fd50_ArrTypeDecl>::make(this, nullptr);

		this->_field_elem = __param_elem;
		this->_field_size = __param_size;
	}

	~_11ce1fd50_ArrTypeDecl(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_ArrTypeDecl(void)   { this->self = jule::Ref<_11ce1fd50_ArrTypeDecl>::make(this, nullptr); }

	inline jule::Bool _method_auto_sized(void);


	inline bool operator==(const _11ce1fd50_ArrTypeDecl &_Src) {
		return 
			this->_field_elem == _Src._field_elem &&
			this->_field_size == _Src._field_size;
	}

	inline bool operator!=(const _11ce1fd50_ArrTypeDecl &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_MapTypeDecl {
	jule::Ref<_11ce1fd50_MapTypeDecl> self{};

	jule::Ref<_11ce1fd50_TypeDecl> _field_key{jule::Ref<_11ce1fd50_TypeDecl>()};
	jule::Ref<_11ce1fd50_TypeDecl> _field_val{jule::Ref<_11ce1fd50_TypeDecl>()};


	_11ce1fd50_MapTypeDecl(jule::Ref<_11ce1fd50_TypeDecl> __param_key, jule::Ref<_11ce1fd50_TypeDecl> __param_val)   {
		this->self = jule::Ref<_11ce1fd50_MapTypeDecl>::make(this, nullptr);

		this->_field_key = __param_key;
		this->_field_val = __param_val;
	}

	~_11ce1fd50_MapTypeDecl(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_MapTypeDecl(void)   { this->self = jule::Ref<_11ce1fd50_MapTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_MapTypeDecl &_Src) {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _11ce1fd50_MapTypeDecl &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_RetTypeDecl {
	jule::Ref<_11ce1fd50_RetTypeDecl> self{};

	jule::Ref<_11ce1fd50_TypeDecl> _field_kind{jule::Ref<_11ce1fd50_TypeDecl>()};
	jule::Slice<_11ce22a00_Token> _field_idents{jule::Slice<_11ce22a00_Token>()};


	_11ce1fd50_RetTypeDecl(jule::Ref<_11ce1fd50_TypeDecl> __param_kind, jule::Slice<_11ce22a00_Token> __param_idents)   {
		this->self = jule::Ref<_11ce1fd50_RetTypeDecl>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_idents = __param_idents;
	}

	~_11ce1fd50_RetTypeDecl(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_RetTypeDecl(void)   { this->self = jule::Ref<_11ce1fd50_RetTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_RetTypeDecl &_Src) {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_idents == _Src._field_idents;
	}

	inline bool operator!=(const _11ce1fd50_RetTypeDecl &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_TupleExpr {
	jule::Ref<_11ce1fd50_TupleExpr> self{};

	jule::Slice<jule::Any> _field_expr{jule::Slice<jule::Any>()};


	_11ce1fd50_TupleExpr(jule::Slice<jule::Any> __param_expr)   {
		this->self = jule::Ref<_11ce1fd50_TupleExpr>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_11ce1fd50_TupleExpr(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_TupleExpr(void)   { this->self = jule::Ref<_11ce1fd50_TupleExpr>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_TupleExpr &_Src) {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _11ce1fd50_TupleExpr &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_LitExpr {
	jule::Ref<_11ce1fd50_LitExpr> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Str _field_value{jule::Str()};


	_11ce1fd50_LitExpr(_11ce22a00_Token __param_token, jule::Str __param_value)   {
		this->self = jule::Ref<_11ce1fd50_LitExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_value = __param_value;
	}

	~_11ce1fd50_LitExpr(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_LitExpr(void)   { this->self = jule::Ref<_11ce1fd50_LitExpr>::make(this, nullptr); }

	inline jule::Bool _method_is_nil(void);


	inline bool operator==(const _11ce1fd50_LitExpr &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_value == _Src._field_value;
	}

	inline bool operator!=(const _11ce1fd50_LitExpr &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_UnsafeExpr {
	jule::Ref<_11ce1fd50_UnsafeExpr> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Any _field_expr{jule::Any()};


	_11ce1fd50_UnsafeExpr(_11ce22a00_Token __param_token, jule::Any __param_expr)   {
		this->self = jule::Ref<_11ce1fd50_UnsafeExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
	}

	~_11ce1fd50_UnsafeExpr(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_UnsafeExpr(void)   { this->self = jule::Ref<_11ce1fd50_UnsafeExpr>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_UnsafeExpr &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _11ce1fd50_UnsafeExpr &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_IdentExpr {
	jule::Ref<_11ce1fd50_IdentExpr> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};


	_11ce1fd50_IdentExpr(_11ce22a00_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked)   {
		this->self = jule::Ref<_11ce1fd50_IdentExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_cpp_linked = __param_cpp_linked;
	}

	~_11ce1fd50_IdentExpr(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_IdentExpr(void)   { this->self = jule::Ref<_11ce1fd50_IdentExpr>::make(this, nullptr); }

	inline jule::Bool _method_is_self(void);


	inline bool operator==(const _11ce1fd50_IdentExpr &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked;
	}

	inline bool operator!=(const _11ce1fd50_IdentExpr &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_UnaryExpr {
	jule::Ref<_11ce1fd50_UnaryExpr> self{};

	_11ce22a00_Token _field_op{_11ce22a00_Token()};
	jule::Any _field_expr{jule::Any()};


	_11ce1fd50_UnaryExpr(_11ce22a00_Token __param_op, jule::Any __param_expr)   {
		this->self = jule::Ref<_11ce1fd50_UnaryExpr>::make(this, nullptr);

		this->_field_op = __param_op;
		this->_field_expr = __param_expr;
	}

	~_11ce1fd50_UnaryExpr(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_UnaryExpr(void)   { this->self = jule::Ref<_11ce1fd50_UnaryExpr>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_UnaryExpr &_Src) {
		return 
			this->_field_op == _Src._field_op &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _11ce1fd50_UnaryExpr &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_VariadicExpr {
	jule::Ref<_11ce1fd50_VariadicExpr> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Any _field_expr{jule::Any()};


	_11ce1fd50_VariadicExpr(_11ce22a00_Token __param_token, jule::Any __param_expr)   {
		this->self = jule::Ref<_11ce1fd50_VariadicExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
	}

	~_11ce1fd50_VariadicExpr(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_VariadicExpr(void)   { this->self = jule::Ref<_11ce1fd50_VariadicExpr>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_VariadicExpr &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _11ce1fd50_VariadicExpr &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_CastExpr {
	jule::Ref<_11ce1fd50_CastExpr> self{};

	jule::Ref<_11ce1fd50_TypeDecl> _field_kind{jule::Ref<_11ce1fd50_TypeDecl>()};
	jule::Any _field_expr{jule::Any()};


	_11ce1fd50_CastExpr(jule::Ref<_11ce1fd50_TypeDecl> __param_kind, jule::Any __param_expr)   {
		this->self = jule::Ref<_11ce1fd50_CastExpr>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_expr = __param_expr;
	}

	~_11ce1fd50_CastExpr(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_CastExpr(void)   { this->self = jule::Ref<_11ce1fd50_CastExpr>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_CastExpr &_Src) {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _11ce1fd50_CastExpr &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_NsSelectionExpr {
	jule::Ref<_11ce1fd50_NsSelectionExpr> self{};

	jule::Slice<_11ce22a00_Token> _field_ns{jule::Slice<_11ce22a00_Token>()};
	_11ce22a00_Token _field_ident{_11ce22a00_Token()};


	_11ce1fd50_NsSelectionExpr(jule::Slice<_11ce22a00_Token> __param_ns, _11ce22a00_Token __param_ident)   {
		this->self = jule::Ref<_11ce1fd50_NsSelectionExpr>::make(this, nullptr);

		this->_field_ns = __param_ns;
		this->_field_ident = __param_ident;
	}

	~_11ce1fd50_NsSelectionExpr(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_NsSelectionExpr(void)   { this->self = jule::Ref<_11ce1fd50_NsSelectionExpr>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_NsSelectionExpr &_Src) {
		return 
			this->_field_ns == _Src._field_ns &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _11ce1fd50_NsSelectionExpr &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_SubIdentExpr {
	jule::Ref<_11ce1fd50_SubIdentExpr> self{};

	jule::Bool _field_is_self{jule::Bool()};
	jule::Any _field_expr{jule::Any()};
	_11ce22a00_Token _field_ident{_11ce22a00_Token()};


	_11ce1fd50_SubIdentExpr(jule::Bool __param_is_self, jule::Any __param_expr, _11ce22a00_Token __param_ident)   {
		this->self = jule::Ref<_11ce1fd50_SubIdentExpr>::make(this, nullptr);

		this->_field_is_self = __param_is_self;
		this->_field_expr = __param_expr;
		this->_field_ident = __param_ident;
	}

	~_11ce1fd50_SubIdentExpr(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_SubIdentExpr(void)   { this->self = jule::Ref<_11ce1fd50_SubIdentExpr>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_SubIdentExpr &_Src) {
		return 
			this->_field_is_self == _Src._field_is_self &&
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _11ce1fd50_SubIdentExpr &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_BinopExpr {
	jule::Ref<_11ce1fd50_BinopExpr> self{};

	jule::Any _field_left{jule::Any()};
	jule::Any _field_right{jule::Any()};
	_11ce22a00_Token _field_op{_11ce22a00_Token()};


	_11ce1fd50_BinopExpr(jule::Any __param_left, jule::Any __param_right, _11ce22a00_Token __param_op)   {
		this->self = jule::Ref<_11ce1fd50_BinopExpr>::make(this, nullptr);

		this->_field_left = __param_left;
		this->_field_right = __param_right;
		this->_field_op = __param_op;
	}

	~_11ce1fd50_BinopExpr(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_BinopExpr(void)   { this->self = jule::Ref<_11ce1fd50_BinopExpr>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_BinopExpr &_Src) {
		return 
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _11ce1fd50_BinopExpr &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_FieldExprPair {
	jule::Ref<_11ce1fd50_FieldExprPair> self{};

	_11ce22a00_Token _field_field{_11ce22a00_Token()};
	jule::Any _field_expr{jule::Any()};


	_11ce1fd50_FieldExprPair(_11ce22a00_Token __param_field, jule::Any __param_expr)   {
		this->self = jule::Ref<_11ce1fd50_FieldExprPair>::make(this, nullptr);

		this->_field_field = __param_field;
		this->_field_expr = __param_expr;
	}

	~_11ce1fd50_FieldExprPair(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_FieldExprPair(void)   { this->self = jule::Ref<_11ce1fd50_FieldExprPair>::make(this, nullptr); }

	inline jule::Bool _method_is_targeted(void);


	inline bool operator==(const _11ce1fd50_FieldExprPair &_Src) {
		return 
			this->_field_field == _Src._field_field &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _11ce1fd50_FieldExprPair &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_StructLit {
	jule::Ref<_11ce1fd50_StructLit> self{};

	jule::Ref<_11ce1fd50_TypeDecl> _field_kind{jule::Ref<_11ce1fd50_TypeDecl>()};
	jule::Slice<jule::Any> _field_exprs{jule::Slice<jule::Any>()};


	_11ce1fd50_StructLit(jule::Ref<_11ce1fd50_TypeDecl> __param_kind, jule::Slice<jule::Any> __param_exprs)   {
		this->self = jule::Ref<_11ce1fd50_StructLit>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_exprs = __param_exprs;
	}

	~_11ce1fd50_StructLit(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_StructLit(void)   { this->self = jule::Ref<_11ce1fd50_StructLit>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_StructLit &_Src) {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _11ce1fd50_StructLit &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_BraceLit {
	jule::Ref<_11ce1fd50_BraceLit> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Slice<jule::Any> _field_exprs{jule::Slice<jule::Any>()};


	_11ce1fd50_BraceLit(_11ce22a00_Token __param_token, jule::Slice<jule::Any> __param_exprs)   {
		this->self = jule::Ref<_11ce1fd50_BraceLit>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_exprs = __param_exprs;
	}

	~_11ce1fd50_BraceLit(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_BraceLit(void)   { this->self = jule::Ref<_11ce1fd50_BraceLit>::make(this, nullptr); }

	inline jule::Bool _method_is_empty(void);


	inline bool operator==(const _11ce1fd50_BraceLit &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _11ce1fd50_BraceLit &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_KeyValPair {
	jule::Ref<_11ce1fd50_KeyValPair> self{};

	jule::Any _field_key{jule::Any()};
	jule::Any _field_val{jule::Any()};
	_11ce22a00_Token _field_colon{_11ce22a00_Token()};


	_11ce1fd50_KeyValPair(jule::Any __param_key, jule::Any __param_val, _11ce22a00_Token __param_colon)   {
		this->self = jule::Ref<_11ce1fd50_KeyValPair>::make(this, nullptr);

		this->_field_key = __param_key;
		this->_field_val = __param_val;
		this->_field_colon = __param_colon;
	}

	~_11ce1fd50_KeyValPair(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_KeyValPair(void)   { this->self = jule::Ref<_11ce1fd50_KeyValPair>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_KeyValPair &_Src) {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val &&
			this->_field_colon == _Src._field_colon;
	}

	inline bool operator!=(const _11ce1fd50_KeyValPair &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_SliceExpr {
	jule::Ref<_11ce1fd50_SliceExpr> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Slice<jule::Any> _field_elems{jule::Slice<jule::Any>()};


	_11ce1fd50_SliceExpr(_11ce22a00_Token __param_token, jule::Slice<jule::Any> __param_elems)   {
		this->self = jule::Ref<_11ce1fd50_SliceExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_elems = __param_elems;
	}

	~_11ce1fd50_SliceExpr(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_SliceExpr(void)   { this->self = jule::Ref<_11ce1fd50_SliceExpr>::make(this, nullptr); }

	inline jule::Bool _method_is_empty(void);


	inline bool operator==(const _11ce1fd50_SliceExpr &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _11ce1fd50_SliceExpr &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_IndexingExpr {
	jule::Ref<_11ce1fd50_IndexingExpr> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Any _field_expr{jule::Any()};
	jule::Any _field_index{jule::Any()};


	_11ce1fd50_IndexingExpr(_11ce22a00_Token __param_token, jule::Any __param_expr, jule::Any __param_index)   {
		this->self = jule::Ref<_11ce1fd50_IndexingExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
		this->_field_index = __param_index;
	}

	~_11ce1fd50_IndexingExpr(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_IndexingExpr(void)   { this->self = jule::Ref<_11ce1fd50_IndexingExpr>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_IndexingExpr &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_index == _Src._field_index;
	}

	inline bool operator!=(const _11ce1fd50_IndexingExpr &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_SlicingExpr {
	jule::Ref<_11ce1fd50_SlicingExpr> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Any _field_expr{jule::Any()};
	jule::Any _field_start{jule::Any()};
	jule::Any _field_to{jule::Any()};


	_11ce1fd50_SlicingExpr(_11ce22a00_Token __param_token, jule::Any __param_expr, jule::Any __param_start, jule::Any __param_to)   {
		this->self = jule::Ref<_11ce1fd50_SlicingExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
		this->_field_start = __param_start;
		this->_field_to = __param_to;
	}

	~_11ce1fd50_SlicingExpr(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_SlicingExpr(void)   { this->self = jule::Ref<_11ce1fd50_SlicingExpr>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_SlicingExpr &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_start == _Src._field_start &&
			this->_field_to == _Src._field_to;
	}

	inline bool operator!=(const _11ce1fd50_SlicingExpr &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_LabelSt {
	jule::Ref<_11ce1fd50_LabelSt> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Str _field_ident{jule::Str()};


	_11ce1fd50_LabelSt(_11ce22a00_Token __param_token, jule::Str __param_ident)   {
		this->self = jule::Ref<_11ce1fd50_LabelSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
	}

	~_11ce1fd50_LabelSt(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_LabelSt(void)   { this->self = jule::Ref<_11ce1fd50_LabelSt>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_LabelSt &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _11ce1fd50_LabelSt &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_FallSt {
	jule::Ref<_11ce1fd50_FallSt> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};


	_11ce1fd50_FallSt(_11ce22a00_Token __param_token)   {
		this->self = jule::Ref<_11ce1fd50_FallSt>::make(this, nullptr);

		this->_field_token = __param_token;
	}

	~_11ce1fd50_FallSt(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_FallSt(void)   { this->self = jule::Ref<_11ce1fd50_FallSt>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_FallSt &_Src) {
		return 
			this->_field_token == _Src._field_token;
	}

	inline bool operator!=(const _11ce1fd50_FallSt &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_AssignSt {
	jule::Ref<_11ce1fd50_AssignSt> self{};

	jule::Bool _field_declarative{jule::Bool()};
	_11ce22a00_Token _field_setter{_11ce22a00_Token()};
	jule::Slice<jule::Ref<_11ce1fd50_AssignLeft>> _field_left{jule::Slice<jule::Ref<_11ce1fd50_AssignLeft>>()};
	jule::Ref<_11ce1fd50_Expr> _field_right{jule::Ref<_11ce1fd50_Expr>()};


	_11ce1fd50_AssignSt(jule::Bool __param_declarative, _11ce22a00_Token __param_setter, jule::Slice<jule::Ref<_11ce1fd50_AssignLeft>> __param_left, jule::Ref<_11ce1fd50_Expr> __param_right)   {
		this->self = jule::Ref<_11ce1fd50_AssignSt>::make(this, nullptr);

		this->_field_declarative = __param_declarative;
		this->_field_setter = __param_setter;
		this->_field_left = __param_left;
		this->_field_right = __param_right;
	}

	~_11ce1fd50_AssignSt(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_AssignSt(void)   { this->self = jule::Ref<_11ce1fd50_AssignSt>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_AssignSt &_Src) {
		return 
			this->_field_declarative == _Src._field_declarative &&
			this->_field_setter == _Src._field_setter &&
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right;
	}

	inline bool operator!=(const _11ce1fd50_AssignSt &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_ScopeTree {
	jule::Ref<_11ce1fd50_ScopeTree> self{};

	jule::Ref<_11ce1fd50_ScopeTree> _field_parent{jule::Ref<_11ce1fd50_ScopeTree>()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_deferred{jule::Bool()};
	jule::Slice<jule::Any> _field_stmts{jule::Slice<jule::Any>()};


	_11ce1fd50_ScopeTree(jule::Ref<_11ce1fd50_ScopeTree> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<jule::Any> __param_stmts)   {
		this->self = jule::Ref<_11ce1fd50_ScopeTree>::make(this, nullptr);

		this->_field_parent = __param_parent;
		this->_field_unsafety = __param_unsafety;
		this->_field_deferred = __param_deferred;
		this->_field_stmts = __param_stmts;
	}

	~_11ce1fd50_ScopeTree(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_ScopeTree(void)   { this->self = jule::Ref<_11ce1fd50_ScopeTree>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_ScopeTree &_Src) {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_deferred == _Src._field_deferred &&
			this->_field_stmts == _Src._field_stmts;
	}

	inline bool operator!=(const _11ce1fd50_ScopeTree &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_RetSt {
	jule::Ref<_11ce1fd50_RetSt> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Ref<_11ce1fd50_Expr> _field_expr{jule::Ref<_11ce1fd50_Expr>()};


	_11ce1fd50_RetSt(_11ce22a00_Token __param_token, jule::Ref<_11ce1fd50_Expr> __param_expr)   {
		this->self = jule::Ref<_11ce1fd50_RetSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
	}

	~_11ce1fd50_RetSt(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_RetSt(void)   { this->self = jule::Ref<_11ce1fd50_RetSt>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_RetSt &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _11ce1fd50_RetSt &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_Iter {
	jule::Ref<_11ce1fd50_Iter> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Any _field_kind{jule::Any()};
	jule::Ref<_11ce1fd50_ScopeTree> _field_scope{jule::Ref<_11ce1fd50_ScopeTree>()};


	_11ce1fd50_Iter(_11ce22a00_Token __param_token, jule::Any __param_kind, jule::Ref<_11ce1fd50_ScopeTree> __param_scope)   {
		this->self = jule::Ref<_11ce1fd50_Iter>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_kind = __param_kind;
		this->_field_scope = __param_scope;
	}

	~_11ce1fd50_Iter(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_Iter(void)   { this->self = jule::Ref<_11ce1fd50_Iter>::make(this, nullptr); }

	inline jule::Bool _method_is_inf(void);


	inline bool operator==(const _11ce1fd50_Iter &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _11ce1fd50_Iter &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_WhileKind {
	jule::Ref<_11ce1fd50_WhileKind> self{};

	jule::Ref<_11ce1fd50_Expr> _field_expr{jule::Ref<_11ce1fd50_Expr>()};
	jule::Any _field_next{jule::Any()};
	_11ce22a00_Token _field_next_token{_11ce22a00_Token()};


	_11ce1fd50_WhileKind(jule::Ref<_11ce1fd50_Expr> __param_expr, jule::Any __param_next, _11ce22a00_Token __param_next_token)   {
		this->self = jule::Ref<_11ce1fd50_WhileKind>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_next = __param_next;
		this->_field_next_token = __param_next_token;
	}

	~_11ce1fd50_WhileKind(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_WhileKind(void)   { this->self = jule::Ref<_11ce1fd50_WhileKind>::make(this, nullptr); }

	inline jule::Bool _method_is_while_next(void);


	inline bool operator==(const _11ce1fd50_WhileKind &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_next == _Src._field_next &&
			this->_field_next_token == _Src._field_next_token;
	}

	inline bool operator!=(const _11ce1fd50_WhileKind &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_RangeKind {
	jule::Ref<_11ce1fd50_RangeKind> self{};

	_11ce22a00_Token _field_in_token{_11ce22a00_Token()};
	jule::Ref<_11ce1fd50_Expr> _field_expr{jule::Ref<_11ce1fd50_Expr>()};
	jule::Ref<_11ce1fd50_VarDecl> _field_key_a{jule::Ref<_11ce1fd50_VarDecl>()};
	jule::Ref<_11ce1fd50_VarDecl> _field_key_b{jule::Ref<_11ce1fd50_VarDecl>()};


	_11ce1fd50_RangeKind(_11ce22a00_Token __param_in_token, jule::Ref<_11ce1fd50_Expr> __param_expr, jule::Ref<_11ce1fd50_VarDecl> __param_key_a, jule::Ref<_11ce1fd50_VarDecl> __param_key_b)   {
		this->self = jule::Ref<_11ce1fd50_RangeKind>::make(this, nullptr);

		this->_field_in_token = __param_in_token;
		this->_field_expr = __param_expr;
		this->_field_key_a = __param_key_a;
		this->_field_key_b = __param_key_b;
	}

	~_11ce1fd50_RangeKind(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_RangeKind(void)   { this->self = jule::Ref<_11ce1fd50_RangeKind>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_RangeKind &_Src) {
		return 
			this->_field_in_token == _Src._field_in_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_key_a == _Src._field_key_a &&
			this->_field_key_b == _Src._field_key_b;
	}

	inline bool operator!=(const _11ce1fd50_RangeKind &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_Conditional {
	jule::Ref<_11ce1fd50_Conditional> self{};

	jule::Ref<_11ce1fd50_If> _field_head{jule::Ref<_11ce1fd50_If>()};
	jule::Slice<jule::Ref<_11ce1fd50_If>> _field_tail{jule::Slice<jule::Ref<_11ce1fd50_If>>()};
	jule::Ref<_11ce1fd50_Else> _field_default{jule::Ref<_11ce1fd50_Else>()};


	_11ce1fd50_Conditional(jule::Ref<_11ce1fd50_If> __param_head, jule::Slice<jule::Ref<_11ce1fd50_If>> __param_tail, jule::Ref<_11ce1fd50_Else> __param_default)   {
		this->self = jule::Ref<_11ce1fd50_Conditional>::make(this, nullptr);

		this->_field_head = __param_head;
		this->_field_tail = __param_tail;
		this->_field_default = __param_default;
	}

	~_11ce1fd50_Conditional(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_Conditional(void)   { this->self = jule::Ref<_11ce1fd50_Conditional>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_Conditional &_Src) {
		return 
			this->_field_head == _Src._field_head &&
			this->_field_tail == _Src._field_tail &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _11ce1fd50_Conditional &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_MatchCase {
	jule::Ref<_11ce1fd50_MatchCase> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Bool _field_type_match{jule::Bool()};
	jule::Ref<_11ce1fd50_Expr> _field_expr{jule::Ref<_11ce1fd50_Expr>()};
	jule::Slice<jule::Ref<_11ce1fd50_Case>> _field_cases{jule::Slice<jule::Ref<_11ce1fd50_Case>>()};
	jule::Ref<_11ce1fd50_Else> _field_default{jule::Ref<_11ce1fd50_Else>()};


	_11ce1fd50_MatchCase(_11ce22a00_Token __param_token, jule::Bool __param_type_match, jule::Ref<_11ce1fd50_Expr> __param_expr, jule::Slice<jule::Ref<_11ce1fd50_Case>> __param_cases, jule::Ref<_11ce1fd50_Else> __param_default)   {
		this->self = jule::Ref<_11ce1fd50_MatchCase>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_type_match = __param_type_match;
		this->_field_expr = __param_expr;
		this->_field_cases = __param_cases;
		this->_field_default = __param_default;
	}

	~_11ce1fd50_MatchCase(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_MatchCase(void)   { this->self = jule::Ref<_11ce1fd50_MatchCase>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_MatchCase &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_type_match == _Src._field_type_match &&
			this->_field_expr == _Src._field_expr &&
			this->_field_cases == _Src._field_cases &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _11ce1fd50_MatchCase &_Src) { return !this->operator==(_Src); }
};


struct _10e3d3fd0_FileInfo {
	jule::Ref<_10e3d3fd0_FileInfo> self{};

	jule::Ref<_11ce19be0_Ast> _field_ast{jule::Ref<_11ce19be0_Ast>()};
	jule::Slice<_13cfd2d20_Log> _field_errors{jule::Slice<_13cfd2d20_Log>()};


	_10e3d3fd0_FileInfo(jule::Ref<_11ce19be0_Ast> __param_ast, jule::Slice<_13cfd2d20_Log> __param_errors)   {
		this->self = jule::Ref<_10e3d3fd0_FileInfo>::make(this, nullptr);

		this->_field_ast = __param_ast;
		this->_field_errors = __param_errors;
	}

	~_10e3d3fd0_FileInfo(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e3d3fd0_FileInfo(void)   { this->self = jule::Ref<_10e3d3fd0_FileInfo>::make(this, nullptr); }

	inline bool operator==(const _10e3d3fd0_FileInfo &_Src) {
		return 
			this->_field_ast == _Src._field_ast &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _10e3d3fd0_FileInfo &_Src) { return !this->operator==(_Src); }
};


struct _10e3d3e70_Stmt {
	jule::Ref<_10e3d3e70_Stmt> self{};

	jule::Slice<_11ce22a00_Token> _field_tokens{jule::Slice<_11ce22a00_Token>()};
	jule::Bool _field_terminated{jule::Bool()};


	_10e3d3e70_Stmt(jule::Slice<_11ce22a00_Token> __param_tokens, jule::Bool __param_terminated)   {
		this->self = jule::Ref<_10e3d3e70_Stmt>::make(this, nullptr);

		this->_field_tokens = __param_tokens;
		this->_field_terminated = __param_terminated;
	}

	~_10e3d3e70_Stmt(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e3d3e70_Stmt(void)   { this->self = jule::Ref<_10e3d3e70_Stmt>::make(this, nullptr); }

	inline bool operator==(const _10e3d3e70_Stmt &_Src) {
		return 
			this->_field_tokens == _Src._field_tokens &&
			this->_field_terminated == _Src._field_terminated;
	}

	inline bool operator!=(const _10e3d3e70_Stmt &_Src) { return !this->operator==(_Src); }
};


struct _10e3d3e70_ScopeParser {
	jule::Ref<_10e3d3e70_ScopeParser> self{};

	jule::Ref<_10e5e45f0_Parser> _field_p{jule::Ref<_10e5e45f0_Parser>()};
	jule::Ref<_11ce1fd50_ScopeTree> _field_s{jule::Ref<_11ce1fd50_ScopeTree>()};
	jule::Slice<jule::Ref<_10e3d3e70_Stmt>> _field_stms{jule::Slice<jule::Ref<_10e3d3e70_Stmt>>()};
	jule::Int _field_pos{jule::Int()};


	_10e3d3e70_ScopeParser(jule::Ref<_10e5e45f0_Parser> __param_p, jule::Ref<_11ce1fd50_ScopeTree> __param_s, jule::Slice<jule::Ref<_10e3d3e70_Stmt>> __param_stms, jule::Int __param_pos)   {
		this->self = jule::Ref<_10e3d3e70_ScopeParser>::make(this, nullptr);

		this->_field_p = __param_p;
		this->_field_s = __param_s;
		this->_field_stms = __param_stms;
		this->_field_pos = __param_pos;
	}

	~_10e3d3e70_ScopeParser(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e3d3e70_ScopeParser(void)   { this->self = jule::Ref<_10e3d3e70_ScopeParser>::make(this, nullptr); }

	inline void _method_stop(void);


	inline jule::Bool _method_stopped(void);


	inline jule::Bool _method_finished(void);


	inline jule::Bool _method_is_last_st(void);


	inline void _method_push_err(_11ce22a00_Token,jule::Str);


	inline void _method_insert_as_next(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_10e3d3e70_Stmt> _method_next(void);


	inline jule::Ref<_11ce1fd50_ScopeTree> _method_build_scope(jule::Slice<_11ce22a00_Token>);


	inline jule::Any _method_build_var_st(jule::Slice<_11ce22a00_Token>);


	inline jule::Any _method_build_ret_st(jule::Slice<_11ce22a00_Token>);


	inline jule::Any _method_build_while_next_iter(jule::Ref<_10e3d3e70_Stmt>);


	inline jule::Ref<_11ce1fd50_WhileKind> _method_build_while_iter_kind(jule::Slice<_11ce22a00_Token>);


	inline jule::Slice<jule::Slice<_11ce22a00_Token>> _method_get_range_kind_keys_tokens(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_VarDecl> _method_build_range_kind_key(jule::Slice<_11ce22a00_Token>);


	inline jule::Slice<jule::Ref<_11ce1fd50_VarDecl>> _method_build_range_kind_keys(jule::Slice<jule::Slice<_11ce22a00_Token>>);


	inline void _method_setup_range_kind_keys_plain(jule::Ref<_11ce1fd50_RangeKind>,jule::Slice<_11ce22a00_Token>);


	inline void _method_setup_range_kind_keys_explicit(jule::Ref<_11ce1fd50_RangeKind>,jule::Slice<_11ce22a00_Token>);


	inline void _method_setup_range_kind_keys(jule::Ref<_11ce1fd50_RangeKind>,jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_RangeKind> _method_build_range_iter_kind(jule::Slice<_11ce22a00_Token>,jule::Slice<_11ce22a00_Token>,_11ce22a00_Token);


	inline jule::Any _method_build_common_iter_kind(jule::Slice<_11ce22a00_Token>,_11ce22a00_Token);


	inline jule::Any _method_build_common_iter(jule::Slice<_11ce22a00_Token>);


	inline jule::Any _method_buid_iter_st(jule::Ref<_10e3d3e70_Stmt>);


	inline jule::Any _method_build_break_st(jule::Slice<_11ce22a00_Token>);


	inline jule::Any _method_build_cont_st(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_If> _method_build_if(jule::Slice<_11ce22a00_Token>*);


	inline jule::Ref<_11ce1fd50_Else> _method_build_else(jule::Slice<_11ce22a00_Token>);


	inline jule::Any _method_build_if_else_chain(jule::Slice<_11ce22a00_Token>);


	inline jule::Any _method_build_comment_st(_11ce22a00_Token);


	inline jule::Any _method_build_call_st(jule::Slice<_11ce22a00_Token>);


	inline jule::Any _method_build_co_call_st(jule::Slice<_11ce22a00_Token>);


	inline jule::Any _method_build_goto_st(jule::Slice<_11ce22a00_Token>);


	inline jule::Any _method_build_fall_st(jule::Slice<_11ce22a00_Token>);


	inline jule::Any _method_build_type_alias_st(jule::Slice<_11ce22a00_Token>);


	inline jule::Slice<jule::Ref<_11ce1fd50_Expr>> _method_build_case_exprs(jule::Slice<_11ce22a00_Token>*,jule::Bool);


	inline jule::Ref<_11ce1fd50_ScopeTree> _method_build_case_scope(jule::Slice<_11ce22a00_Token>*);


	inline std::tuple<jule::Ref<_11ce1fd50_Case>,jule::Bool> _method_build_case(jule::Slice<_11ce22a00_Token>*,jule::Bool);


	inline std::tuple<jule::Slice<jule::Ref<_11ce1fd50_Case>>,jule::Ref<_11ce1fd50_Else>> _method_build_cases(jule::Slice<_11ce22a00_Token>,jule::Bool);


	inline jule::Ref<_11ce1fd50_MatchCase> _method_build_match_case(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_ScopeTree> _method_build_scope_st(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_LabelSt> _method_build_label_st(jule::Slice<_11ce22a00_Token>);


	inline std::tuple<jule::Any,jule::Bool> _method_build_id_st(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_10e5e5b00_AssignInfo> _method_build_assign_info(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_AssignLeft> _method_build_assign_l(jule::Slice<_11ce22a00_Token>);


	inline jule::Slice<jule::Ref<_11ce1fd50_AssignLeft>> _method_build_assign_ls(jule::Slice<jule::Slice<_11ce22a00_Token>>);


	inline std::tuple<jule::Ref<_11ce1fd50_AssignSt>,jule::Bool> _method_build_plain_assign(jule::Slice<_11ce22a00_Token>);


	inline std::tuple<jule::Ref<_11ce1fd50_AssignSt>,jule::Bool> _method_build_decl_assign(jule::Slice<_11ce22a00_Token>);


	inline std::tuple<jule::Ref<_11ce1fd50_AssignSt>,jule::Bool> _method_build_assign_st(jule::Slice<_11ce22a00_Token>);


	inline jule::Any _method_build_st(jule::Ref<_10e3d3e70_Stmt>);


	inline void _method_build(jule::Slice<_11ce22a00_Token>,jule::Ref<_11ce1fd50_ScopeTree>);


	inline bool operator==(const _10e3d3e70_ScopeParser &_Src) {
		return 
			this->_field_p == _Src._field_p &&
			this->_field_s == _Src._field_s &&
			this->_field_stms == _Src._field_stms &&
			this->_field_pos == _Src._field_pos;
	}

	inline bool operator!=(const _10e3d3e70_ScopeParser &_Src) { return !this->operator==(_Src); }
};


struct _10e3df5b0_CallData {
	jule::Ref<_10e3df5b0_CallData> self{};

	jule::Slice<_11ce22a00_Token> _field_expr_tokens{jule::Slice<_11ce22a00_Token>()};
	jule::Slice<_11ce22a00_Token> _field_args_tokens{jule::Slice<_11ce22a00_Token>()};
	jule::Slice<_11ce22a00_Token> _field_generics_tokens{jule::Slice<_11ce22a00_Token>()};


	_10e3df5b0_CallData(jule::Slice<_11ce22a00_Token> __param_expr_tokens, jule::Slice<_11ce22a00_Token> __param_args_tokens, jule::Slice<_11ce22a00_Token> __param_generics_tokens)   {
		this->self = jule::Ref<_10e3df5b0_CallData>::make(this, nullptr);

		this->_field_expr_tokens = __param_expr_tokens;
		this->_field_args_tokens = __param_args_tokens;
		this->_field_generics_tokens = __param_generics_tokens;
	}

	~_10e3df5b0_CallData(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e3df5b0_CallData(void)   { this->self = jule::Ref<_10e3df5b0_CallData>::make(this, nullptr); }

	inline bool operator==(const _10e3df5b0_CallData &_Src) {
		return 
			this->_field_expr_tokens == _Src._field_expr_tokens &&
			this->_field_args_tokens == _Src._field_args_tokens &&
			this->_field_generics_tokens == _Src._field_generics_tokens;
	}

	inline bool operator!=(const _10e3df5b0_CallData &_Src) { return !this->operator==(_Src); }
};


struct _10e3df5b0_Precedencer {
	jule::Ref<_10e3df5b0_Precedencer> self{};

	jule::Slice<jule::Slice<jule::Any>> _field_pairs{jule::Slice<jule::Slice<jule::Any>>()};


	_10e3df5b0_Precedencer(jule::Slice<jule::Slice<jule::Any>> __param_pairs)   {
		this->self = jule::Ref<_10e3df5b0_Precedencer>::make(this, nullptr);

		this->_field_pairs = __param_pairs;
	}

	~_10e3df5b0_Precedencer(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e3df5b0_Precedencer(void)   { this->self = jule::Ref<_10e3df5b0_Precedencer>::make(this, nullptr); }

	inline void _method_set(jule::Int,jule::Any);


	inline jule::Any _method_get_lower(void);


	inline bool operator==(const _10e3df5b0_Precedencer &_Src) {
		return 
			this->_field_pairs == _Src._field_pairs;
	}

	inline bool operator!=(const _10e3df5b0_Precedencer &_Src) { return !this->operator==(_Src); }
};


struct _10e3df5b0_ExprBuilder {
	jule::Ref<_10e3df5b0_ExprBuilder> self{};

	jule::Ref<_10e5e45f0_Parser> _field_p{jule::Ref<_10e5e45f0_Parser>()};


	_10e3df5b0_ExprBuilder(jule::Ref<_10e5e45f0_Parser> __param_p)   {
		this->self = jule::Ref<_10e3df5b0_ExprBuilder>::make(this, nullptr);

		this->_field_p = __param_p;
	}

	~_10e3df5b0_ExprBuilder(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e3df5b0_ExprBuilder(void)   { this->self = jule::Ref<_10e3df5b0_ExprBuilder>::make(this, nullptr); }

	inline void _method_push_err(_11ce22a00_Token,jule::Str,jule::Slice<jule::Any>);


	inline jule::Ref<_11ce1fd50_TupleExpr> _method_build_tuple(jule::Slice<jule::Slice<_11ce22a00_Token>>);


	inline jule::Ref<_11ce1fd50_LitExpr> _method_build_lit(_11ce22a00_Token);


	inline jule::Ref<_11ce1fd50_TypeDecl> _method_build_primitive_type(_11ce22a00_Token);


	inline jule::Any _method_build_single(_11ce22a00_Token);


	inline jule::Ref<_11ce1fd50_IdentExpr> _method_build_cpp_linked_ident(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_UnaryExpr> _method_build_unary(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_SubIdentExpr> _method_build_obj_sub_ident(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_NsSelectionExpr> _method_build_ns_sub_ident(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_TypeDecl> _method_build_type(jule::Slice<_11ce22a00_Token>);


	inline jule::Any _method_build_sub_ident(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_VariadicExpr> _method_build_variadic(jule::Slice<_11ce22a00_Token>);


	inline jule::Any _method_build_op_right(jule::Slice<_11ce22a00_Token>);


	inline jule::Any _method_build_between_parentheses(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_CastExpr> _method_try_build_cast(jule::Slice<_11ce22a00_Token>);


	inline void _method_push_arg(jule::Slice<jule::Ref<_11ce1fd50_Expr>>*,jule::Slice<_11ce22a00_Token>,_11ce22a00_Token);


	inline jule::Slice<jule::Ref<_11ce1fd50_Expr>> _method_build_args(jule::Slice<_11ce22a00_Token>);


	inline jule::Slice<jule::Ref<_11ce1fd50_TypeDecl>> _method_build_call_generics(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_FnCallExpr> _method_build_fn_call(_11ce22a00_Token,jule::Ref<_10e3df5b0_CallData>);


	inline jule::Any _method_build_parentheses_range(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_UnsafeExpr> _method_build_unsafe_expr(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_FnDecl> _method_build_anon_fn(jule::Slice<_11ce22a00_Token>);


	inline jule::Any _method_build_unsafe(jule::Slice<_11ce22a00_Token>);


	inline jule::Slice<jule::Slice<_11ce22a00_Token>> _method_get_brace_range_lit_expr_parts(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_FieldExprPair> _method_build_field_expr_pair(jule::Slice<_11ce22a00_Token>);


	inline jule::Any _method_build_struct_lit_expr(jule::Slice<_11ce22a00_Token>);


	inline jule::Slice<jule::Any> _method_build_struct_lit_exprs(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_StructLit> _method_build_typed_struct_literal(jule::Slice<_11ce22a00_Token>);


	inline jule::Any _method_build_brace_lit_part(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_BraceLit> _method_build_brace_lit(jule::Slice<_11ce22a00_Token>);


	inline jule::Any _method_build_brace_range(jule::Slice<_11ce22a00_Token>);


	inline jule::Slice<jule::Slice<_11ce22a00_Token>> _method_get_enumerable_parts(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_SliceExpr> _method_build_slice(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_IndexingExpr> _method_build_indexing(jule::Slice<_11ce22a00_Token>,jule::Slice<_11ce22a00_Token>,_11ce22a00_Token);


	inline jule::Ref<_11ce1fd50_SlicingExpr> _method_build_slicing(jule::Slice<_11ce22a00_Token>,jule::Slice<_11ce22a00_Token>,jule::Int,_11ce22a00_Token);


	inline jule::Any _method_build_bracket_range(jule::Slice<_11ce22a00_Token>);


	inline jule::Any _method_build_data(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_BinopExpr> _method_build_binop(jule::Slice<_11ce22a00_Token>,jule::Int);


	inline jule::Any _method_build(jule::Slice<_11ce22a00_Token>);


	inline jule::Any _method_build_kind(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_Expr> _method_build_from_tokens(jule::Slice<_11ce22a00_Token>);


	inline bool operator==(const _10e3df5b0_ExprBuilder &_Src) {
		return 
			this->_field_p == _Src._field_p;
	}

	inline bool operator!=(const _10e3df5b0_ExprBuilder &_Src) { return !this->operator==(_Src); }
};


struct _10e5e45f0_Parser {
	jule::Ref<_10e5e45f0_Parser> self{};

	jule::Ref<_11ce19be0_Ast> _field_ast{jule::Ref<_11ce19be0_Ast>()};
	jule::Slice<jule::Ref<_11ce1fd50_Directive>> _field_directives{jule::Slice<jule::Ref<_11ce1fd50_Directive>>()};
	jule::Ref<_11ce1fd50_CommentGroup> _field_comment_group{jule::Ref<_11ce1fd50_CommentGroup>()};
	jule::Slice<_13cfd2d20_Log> _field_errors{jule::Slice<_13cfd2d20_Log>()};


	_10e5e45f0_Parser(jule::Ref<_11ce19be0_Ast> __param_ast, jule::Slice<jule::Ref<_11ce1fd50_Directive>> __param_directives, jule::Ref<_11ce1fd50_CommentGroup> __param_comment_group, jule::Slice<_13cfd2d20_Log> __param_errors)   {
		this->self = jule::Ref<_10e5e45f0_Parser>::make(this, nullptr);

		this->_field_ast = __param_ast;
		this->_field_directives = __param_directives;
		this->_field_comment_group = __param_comment_group;
		this->_field_errors = __param_errors;
	}

	~_10e5e45f0_Parser(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e5e45f0_Parser(void)   { this->self = jule::Ref<_10e5e45f0_Parser>::make(this, nullptr); }

	inline void _method_stop(void);


	inline jule::Bool _method_stopped(void);


	inline void _method_push_err(_11ce22a00_Token,jule::Str,jule::Slice<jule::Any>);


	inline jule::Ref<_11ce1fd50_Expr> _method_build_expr(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_Directive> _method_get_directive(jule::Ref<_11ce1fd50_Comment>);


	inline void _method_push_directive(jule::Ref<_11ce1fd50_Comment>);


	inline void _method_process_comment(jule::Ref<_11ce1fd50_Comment>);


	inline jule::Ref<_11ce1fd50_ScopeTree> _method_build_scope(jule::Slice<_11ce22a00_Token>);


	inline std::tuple<jule::Ref<_11ce1fd50_TypeDecl>,jule::Bool> _method___build_type(jule::Slice<_11ce22a00_Token>,jule::Int*,jule::Bool);


	inline std::tuple<jule::Ref<_11ce1fd50_TypeDecl>,jule::Bool> _method_build_type(jule::Slice<_11ce22a00_Token>,jule::Int*,jule::Bool);


	inline jule::Ref<_11ce1fd50_TypeAliasDecl> _method_build_type_alias_decl(jule::Slice<_11ce22a00_Token>);


	inline void _method_build_var_type_and_expr(jule::Ref<_11ce1fd50_VarDecl>,jule::Slice<_11ce22a00_Token>);


	inline void _method_build_var_common(jule::Ref<_11ce1fd50_VarDecl>,jule::Slice<_11ce22a00_Token>);


	inline void _method_build_var_begin(jule::Ref<_11ce1fd50_VarDecl>,jule::Ref<jule::Int>,jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_VarDecl> _method_build_var(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_GenericDecl> _method_build_generic(jule::Slice<_11ce22a00_Token>);


	inline jule::Slice<jule::Ref<_11ce1fd50_GenericDecl>> _method_build_generics(jule::Slice<_11ce22a00_Token>,_11ce22a00_Token);


	inline jule::Ref<_11ce1fd50_ParamDecl> _method_build_self_param(jule::Slice<_11ce22a00_Token>);


	inline void _method_param_type_begin(jule::Ref<_11ce1fd50_ParamDecl>,jule::Int*,jule::Slice<_11ce22a00_Token>);


	inline void _method_build_param_type(jule::Ref<_11ce1fd50_ParamDecl>,jule::Slice<_11ce22a00_Token>,jule::Bool);


	inline void _method_param_body_id(jule::Ref<_11ce1fd50_ParamDecl>,_11ce22a00_Token);


	inline void _method_build_param_body(jule::Ref<_11ce1fd50_ParamDecl>,jule::Ref<jule::Int>,jule::Slice<_11ce22a00_Token>,jule::Bool);


	inline jule::Ref<_11ce1fd50_ParamDecl> _method_build_param(jule::Slice<_11ce22a00_Token>,jule::Bool);


	inline void _method_check_params(jule::Slice<jule::Ref<_11ce1fd50_ParamDecl>>);


	inline jule::Slice<jule::Ref<_11ce1fd50_ParamDecl>> _method_build_params(jule::Slice<_11ce22a00_Token>,jule::Bool,jule::Bool);


	inline std::tuple<jule::Ref<_11ce1fd50_RetTypeDecl>,jule::Bool> _method_build_multi_ret_type(jule::Slice<_11ce22a00_Token>,jule::Int*);


	inline std::tuple<jule::Ref<_11ce1fd50_RetTypeDecl>,jule::Bool> _method_build_ret_type(jule::Slice<_11ce22a00_Token>,jule::Int*);


	inline jule::Ref<_11ce1fd50_FnDecl> _method_build_fn_prototype(jule::Slice<_11ce22a00_Token>,jule::Int*,jule::Bool,jule::Bool);


	inline jule::Ref<_11ce1fd50_FnDecl> _method_build_fn(jule::Slice<_11ce22a00_Token>,jule::Bool,jule::Bool,jule::Bool);


	inline jule::Slice<_11ce22a00_Token> _method_get_use_decl_selectors(jule::Slice<_11ce22a00_Token>);


	inline void _method_build_cpp_use_decl(jule::Ref<_11ce1fd50_UseDecl>,jule::Slice<_11ce22a00_Token>);


	inline void _method_build_std_use_decl(jule::Ref<_11ce1fd50_UseDecl>,jule::Slice<_11ce22a00_Token>);


	inline void _method_build_ident_use_decl(jule::Ref<_11ce1fd50_UseDecl>,jule::Slice<_11ce22a00_Token>);


	inline void _method_parse_use_decl(jule::Ref<_11ce1fd50_UseDecl>,jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_UseDecl> _method_build_use_decl(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_Expr> _method_build_enum_item_expr(jule::Ref<jule::Int>,jule::Slice<_11ce22a00_Token>);


	inline jule::Slice<jule::Ref<_11ce1fd50_EnumItemDecl>> _method_build_enum_items(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_EnumDecl> _method_build_enum_decl(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_FieldDecl> _method_build_field(jule::Slice<_11ce22a00_Token>);


	inline jule::Slice<jule::Ref<_11ce1fd50_FieldDecl>> _method_build_struct_decl_fields(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_StructDecl> _method_build_struct_decl(jule::Slice<_11ce22a00_Token>);


	inline void _method_check_method_receiver(jule::Ref<_11ce1fd50_FnDecl>);


	inline jule::Slice<jule::Ref<_11ce1fd50_FnDecl>> _method_build_trait_methods(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_TraitDecl> _method_build_trait_decl(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_FnDecl> _method_build_cpp_link_fn(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_VarDecl> _method_build_cpp_link_var(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_StructDecl> _method_build_cpp_link_struct(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_TypeAliasDecl> _method_build_cpp_link_type_alias(jule::Slice<_11ce22a00_Token>);


	inline jule::Any _method_build_cpp_link(jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_FnDecl> _method_get_method(jule::Slice<_11ce22a00_Token>);


	inline void _method_parse_impl_trait(jule::Ref<_11ce1fd50_Impl>,jule::Slice<_11ce22a00_Token>);


	inline void _method_parse_impl_struct(jule::Ref<_11ce1fd50_Impl>,jule::Slice<_11ce22a00_Token>);


	inline void _method_parse_impl_body(jule::Ref<_11ce1fd50_Impl>,jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_Impl> _method_build_impl(jule::Slice<_11ce22a00_Token>);


	inline jule::Any _method_build_node_data(jule::Slice<_11ce22a00_Token>);


	inline void _method_check_comment_group(_11ce1fd50_Node);


	inline void _method_check_directive(_11ce1fd50_Node);


	inline void _method_apply_meta(_11ce1fd50_Node,jule::Bool);


	inline void _method_check_use_decl(_11ce1fd50_Node);


	inline std::tuple<jule::Bool,jule::Any> _method_build_general_scope_node_data(jule::Slice<_11ce22a00_Token>);


	inline _11ce1fd50_Node _method_parse_node(jule::Slice<_11ce22a00_Token>);


	inline void _method_append_node(jule::Slice<_11ce22a00_Token>);


	inline void _method_check_ranges(jule::Slice<_11ce22a00_Token>);


	inline void _method_parse(jule::Ref<_11ce078a0_File>);


	inline bool operator==(const _10e5e45f0_Parser &_Src) {
		return 
			this->_field_ast == _Src._field_ast &&
			this->_field_directives == _Src._field_directives &&
			this->_field_comment_group == _Src._field_comment_group &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _10e5e45f0_Parser &_Src) { return !this->operator==(_Src); }
};


struct _10e7e4720_TypeBuilder {
	jule::Ref<_10e7e4720_TypeBuilder> self{};

	jule::Ref<_10e5e45f0_Parser> _field_p{jule::Ref<_10e5e45f0_Parser>()};
	jule::Slice<_11ce22a00_Token> _field_tokens{jule::Slice<_11ce22a00_Token>()};
	jule::Int* _field_i{nullptr};
	jule::Bool _field_err{jule::Bool()};


	_10e7e4720_TypeBuilder(jule::Ref<_10e5e45f0_Parser> __param_p, jule::Slice<_11ce22a00_Token> __param_tokens, jule::Int* __param_i, jule::Bool __param_err)   {
		this->self = jule::Ref<_10e7e4720_TypeBuilder>::make(this, nullptr);

		this->_field_p = __param_p;
		this->_field_tokens = __param_tokens;
		this->_field_i = __param_i;
		this->_field_err = __param_err;
	}

	~_10e7e4720_TypeBuilder(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e7e4720_TypeBuilder(void)   { this->self = jule::Ref<_10e7e4720_TypeBuilder>::make(this, nullptr); }

	inline void _method_push_err(_11ce22a00_Token,jule::Str);


	inline jule::Ref<_11ce1fd50_TypeDecl> _method_build_prim(void);


	inline jule::Ref<_11ce1fd50_TypeDecl> _method_build_namespace(void);


	inline jule::Slice<jule::Ref<_11ce1fd50_TypeDecl>> _method_build_generics(void);


	inline jule::Slice<jule::Slice<_11ce22a00_Token>> _method_ident_generics(void);


	inline jule::Ref<_11ce1fd50_TypeDecl> _method_build_ident(void);


	inline jule::Ref<_11ce1fd50_TypeDecl> _method_build_cpp_link(void);


	inline jule::Ref<_11ce1fd50_TypeDecl> _method_build_fn(void);


	inline jule::Ref<_11ce1fd50_TypeDecl> _method_build_ptr(void);


	inline jule::Ref<_11ce1fd50_TypeDecl> _method_build_ref(void);


	inline jule::Ref<_11ce1fd50_TypeDecl> _method_build_op(void);


	inline jule::Ref<_11ce1fd50_TypeDecl> _method_build_slc(void);


	inline jule::Ref<_11ce1fd50_TypeDecl> _method_build_arr(void);


	inline jule::Ref<_11ce1fd50_TypeDecl> _method_build_map(jule::Int,jule::Slice<_11ce22a00_Token>);


	inline jule::Ref<_11ce1fd50_TypeDecl> _method_build_enumerable(void);


	inline jule::Ref<_11ce1fd50_TypeDecl> _method_step(void);


	inline std::tuple<jule::Ref<_11ce1fd50_TypeDecl>,jule::Bool> _method_build(void);


	inline bool operator==(const _10e7e4720_TypeBuilder &_Src) {
		return 
			this->_field_p == _Src._field_p &&
			this->_field_tokens == _Src._field_tokens &&
			this->_field_i == _Src._field_i &&
			this->_field_err == _Src._field_err;
	}

	inline bool operator!=(const _10e7e4720_TypeBuilder &_Src) { return !this->operator==(_Src); }
};


struct _10f4ed830_Const {
	jule::Ref<_10f4ed830_Const> self{};

	jule::Any _field_data{jule::Any()};


	_10f4ed830_Const(jule::Any __param_data)   {
		this->self = jule::Ref<_10f4ed830_Const>::make(this, nullptr);

		this->_field_data = __param_data;
	}

	~_10f4ed830_Const(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10f4ed830_Const(void)   { this->self = jule::Ref<_10f4ed830_Const>::make(this, nullptr); }

	inline jule::I64 _method_read_i64(void);


	inline jule::U64 _method_read_u64(void);


	inline jule::Bool _method_read_bool(void);


	inline jule::Str _method_read_str(void);


	inline jule::F64 _method_read_f64(void);


	inline jule::I64 _method_as_i64(void);


	inline jule::U64 _method_as_u64(void);


	inline jule::F64 _method_as_f64(void);


	inline void _method_set_i64(jule::I64);


	inline void _method_set_u64(jule::U64);


	inline void _method_set_bool(jule::Bool);


	inline void _method_set_str(jule::Str);


	inline void _method_set_f64(jule::F64);


	inline void _method_set_nil(void);


	inline void _method_set_by_type(jule::F64,_10f4ed830_Const);


	inline jule::Bool _method_is_i64(void);


	inline jule::Bool _method_is_u64(void);


	inline jule::Bool _method_is_bool(void);


	inline jule::Bool _method_is_str(void);


	inline jule::Bool _method_is_f64(void);


	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_are_same_types(_10f4ed830_Const);


	inline jule::Bool _method_and(_10f4ed830_Const);


	inline jule::Bool _method_or(_10f4ed830_Const);


	inline jule::Bool _method_eqs(_10f4ed830_Const);


	inline jule::Bool _method_lt(_10f4ed830_Const);


	inline jule::Bool _method_gt(_10f4ed830_Const);


	inline jule::Bool _method_add(_10f4ed830_Const);


	inline jule::Bool _method_sub(_10f4ed830_Const);


	inline jule::Bool _method_mul(_10f4ed830_Const);


	inline jule::Bool _method_div(_10f4ed830_Const);


	inline jule::Bool _method_mod(_10f4ed830_Const);


	inline jule::Bool _method_bitwise_and(_10f4ed830_Const);


	inline jule::Bool _method_bitwise_or(_10f4ed830_Const);


	inline jule::Bool _method_xor(_10f4ed830_Const);


	inline jule::Bool _method_lshift(_10f4ed830_Const);


	inline jule::Bool _method_rshift(_10f4ed830_Const);


	inline bool operator==(const _10f4ed830_Const &_Src) {
		return 
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _10f4ed830_Const &_Src) { return !this->operator==(_Src); }
};


struct _10e3fc8f0_FieldIns {
	jule::Ref<_10e3fc8f0_FieldIns> self{};

	jule::Ref<_10e3fc8f0_Field> _field_decl{jule::Ref<_10e3fc8f0_Field>()};
	jule::Ref<_10eeb79b0_TypeKind> _field_kind{jule::Ref<_10eeb79b0_TypeKind>()};


	_10e3fc8f0_FieldIns(jule::Ref<_10e3fc8f0_Field> __param_decl, jule::Ref<_10eeb79b0_TypeKind> __param_kind)   {
		this->self = jule::Ref<_10e3fc8f0_FieldIns>::make(this, nullptr);

		this->_field_decl = __param_decl;
		this->_field_kind = __param_kind;
	}

	~_10e3fc8f0_FieldIns(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e3fc8f0_FieldIns(void)   { this->self = jule::Ref<_10e3fc8f0_FieldIns>::make(this, nullptr); }

	inline bool operator==(const _10e3fc8f0_FieldIns &_Src) {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _10e3fc8f0_FieldIns &_Src) { return !this->operator==(_Src); }
};


struct _10e3fc8f0_StructIns: public _10eeb79b0_Kind {
	jule::Ref<_10e3fc8f0_StructIns> self{};

	jule::Bool _field_checked{jule::Bool()};
	jule::Ref<_10e3fc8f0_Struct> _field_decl{jule::Ref<_10e3fc8f0_Struct>()};
	jule::Slice<jule::Ref<_10eeb79b0_TypeKind>> _field_generics{jule::Slice<jule::Ref<_10eeb79b0_TypeKind>>()};
	jule::Slice<jule::Ref<_10e3fc8f0_FieldIns>> _field_fields{jule::Slice<jule::Ref<_10e3fc8f0_FieldIns>>()};
	jule::Slice<jule::Ref<_10e56a140_Fn>> _field_methods{jule::Slice<jule::Ref<_10e56a140_Fn>>()};
	jule::Bool _field_has_mut{jule::Bool()};


	_10e3fc8f0_StructIns(jule::Bool __param_checked, jule::Ref<_10e3fc8f0_Struct> __param_decl, jule::Slice<jule::Ref<_10eeb79b0_TypeKind>> __param_generics, jule::Slice<jule::Ref<_10e3fc8f0_FieldIns>> __param_fields, jule::Slice<jule::Ref<_10e56a140_Fn>> __param_methods, jule::Bool __param_has_mut)   {
		this->self = jule::Ref<_10e3fc8f0_StructIns>::make(this, nullptr);

		this->_field_checked = __param_checked;
		this->_field_decl = __param_decl;
		this->_field_generics = __param_generics;
		this->_field_fields = __param_fields;
		this->_field_methods = __param_methods;
		this->_field_has_mut = __param_has_mut;
	}

	~_10e3fc8f0_StructIns(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e3fc8f0_StructIns(void)   { this->self = jule::Ref<_10e3fc8f0_StructIns>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_10eeb79b0_TypeKind>);


	inline jule::Ref<_10e56a140_Fn> _method_find_method(jule::Str,jule::Bool);


	inline jule::Ref<_10e3fc8f0_FieldIns> _method_find_field(jule::Str);


	inline bool operator==(const _10e3fc8f0_StructIns &_Src) {
		return 
			this->_field_checked == _Src._field_checked &&
			this->_field_decl == _Src._field_decl &&
			this->_field_generics == _Src._field_generics &&
			this->_field_fields == _Src._field_fields &&
			this->_field_methods == _Src._field_methods &&
			this->_field_has_mut == _Src._field_has_mut;
	}

	inline bool operator!=(const _10e3fc8f0_StructIns &_Src) { return !this->operator==(_Src); }
};


struct _10e56a140_RetType {
	jule::Ref<_10e56a140_RetType> self{};

	jule::Ref<_10eeb79b0_TypeSymbol> _field_kind{jule::Ref<_10eeb79b0_TypeSymbol>()};
	jule::Slice<_11ce22a00_Token> _field_idents{jule::Slice<_11ce22a00_Token>()};


	_10e56a140_RetType(jule::Ref<_10eeb79b0_TypeSymbol> __param_kind, jule::Slice<_11ce22a00_Token> __param_idents)   {
		this->self = jule::Ref<_10e56a140_RetType>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_idents = __param_idents;
	}

	~_10e56a140_RetType(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e56a140_RetType(void)   { this->self = jule::Ref<_10e56a140_RetType>::make(this, nullptr); }

	inline bool operator==(const _10e56a140_RetType &_Src) {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_idents == _Src._field_idents;
	}

	inline bool operator!=(const _10e56a140_RetType &_Src) { return !this->operator==(_Src); }
};


struct _10e56a140_ParamIns {
	jule::Ref<_10e56a140_ParamIns> self{};

	jule::Ref<_10e56a140_Param> _field_decl{jule::Ref<_10e56a140_Param>()};
	jule::Ref<_10eeb79b0_TypeKind> _field_kind{jule::Ref<_10eeb79b0_TypeKind>()};


	_10e56a140_ParamIns(jule::Ref<_10e56a140_Param> __param_decl, jule::Ref<_10eeb79b0_TypeKind> __param_kind)   {
		this->self = jule::Ref<_10e56a140_ParamIns>::make(this, nullptr);

		this->_field_decl = __param_decl;
		this->_field_kind = __param_kind;
	}

	~_10e56a140_ParamIns(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e56a140_ParamIns(void)   { this->self = jule::Ref<_10e56a140_ParamIns>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline bool operator==(const _10e56a140_ParamIns &_Src) {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _10e56a140_ParamIns &_Src) { return !this->operator==(_Src); }
};


struct _10e56a140_FnIns: public _10eeb79b0_Kind {
	jule::Ref<_10e56a140_FnIns> self{};

	jule::Ref<_10e3fc8f0_StructIns> _field_owner{jule::Ref<_10e3fc8f0_StructIns>()};
	jule::Ref<_10e56a140_Fn> _field_decl{jule::Ref<_10e56a140_Fn>()};
	jule::Slice<jule::Ref<_10eeb79b0_TypeKind>> _field_generics{jule::Slice<jule::Ref<_10eeb79b0_TypeKind>>()};
	jule::Slice<jule::Ref<_10e56a140_ParamIns>> _field_params{jule::Slice<jule::Ref<_10e56a140_ParamIns>>()};
	jule::Ref<_10eeb79b0_TypeKind> _field_result{jule::Ref<_10eeb79b0_TypeKind>()};
	jule::Ref<_10e97fcf0_Scope> _field_scope{jule::Ref<_10e97fcf0_Scope>()};
	jule::Fn<jule::Ref<_10ee8a260_Data>(jule::Ref<_10ee8a260_Eval>,jule::Ref<_11ce1fd50_FnCallExpr>,jule::Ref<_10ee8a260_Data>)> _field_caller{jule::Fn<jule::Ref<_10ee8a260_Data>(jule::Ref<_10ee8a260_Eval>,jule::Ref<_11ce1fd50_FnCallExpr>,jule::Ref<_10ee8a260_Data>)>()};
	jule::Bool _field_anon{jule::Bool()};


	_10e56a140_FnIns(jule::Ref<_10e3fc8f0_StructIns> __param_owner, jule::Ref<_10e56a140_Fn> __param_decl, jule::Slice<jule::Ref<_10eeb79b0_TypeKind>> __param_generics, jule::Slice<jule::Ref<_10e56a140_ParamIns>> __param_params, jule::Ref<_10eeb79b0_TypeKind> __param_result, jule::Ref<_10e97fcf0_Scope> __param_scope, jule::Fn<jule::Ref<_10ee8a260_Data>(jule::Ref<_10ee8a260_Eval>,jule::Ref<_11ce1fd50_FnCallExpr>,jule::Ref<_10ee8a260_Data>)> __param_caller, jule::Bool __param_anon)   {
		this->self = jule::Ref<_10e56a140_FnIns>::make(this, nullptr);

		this->_field_owner = __param_owner;
		this->_field_decl = __param_decl;
		this->_field_generics = __param_generics;
		this->_field_params = __param_params;
		this->_field_result = __param_result;
		this->_field_scope = __param_scope;
		this->_field_caller = __param_caller;
		this->_field_anon = __param_anon;
	}

	~_10e56a140_FnIns(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e56a140_FnIns(void)   { this->self = jule::Ref<_10e56a140_FnIns>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_10eeb79b0_TypeKind>);


	inline jule::Bool _method_is_builtin(void);


	inline jule::Bool _method_is_anon(void);


	inline bool operator==(const _10e56a140_FnIns &_Src) {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_decl == _Src._field_decl &&
			this->_field_generics == _Src._field_generics &&
			this->_field_params == _Src._field_params &&
			this->_field_result == _Src._field_result &&
			this->_field_scope == _Src._field_scope &&
			this->_field_caller == _Src._field_caller &&
			this->_field_anon == _Src._field_anon;
	}

	inline bool operator!=(const _10e56a140_FnIns &_Src) { return !this->operator==(_Src); }
};


struct _10e8ca650_SymbolBuilder {
	jule::Ref<_10e8ca650_SymbolBuilder> self{};

	jule::Ref<_10e8ca650_SymbolBuilder> _field_owner{jule::Ref<_10e8ca650_SymbolBuilder>()};
	jule::Trait<_10e9b6a10_Importer> _field_importer{jule::Trait<_10e9b6a10_Importer>()};
	jule::Slice<_13cfd2d20_Log> _field_errors{jule::Slice<_13cfd2d20_Log>()};
	jule::Ref<_11ce19be0_Ast> _field_ast{jule::Ref<_11ce19be0_Ast>()};
	jule::Ref<_10ee5c510_SymbolTable> _field_table{jule::Ref<_10ee5c510_SymbolTable>()};


	_10e8ca650_SymbolBuilder(jule::Ref<_10e8ca650_SymbolBuilder> __param_owner, jule::Trait<_10e9b6a10_Importer> __param_importer, jule::Slice<_13cfd2d20_Log> __param_errors, jule::Ref<_11ce19be0_Ast> __param_ast, jule::Ref<_10ee5c510_SymbolTable> __param_table)   {
		this->self = jule::Ref<_10e8ca650_SymbolBuilder>::make(this, nullptr);

		this->_field_owner = __param_owner;
		this->_field_importer = __param_importer;
		this->_field_errors = __param_errors;
		this->_field_ast = __param_ast;
		this->_field_table = __param_table;
	}

	~_10e8ca650_SymbolBuilder(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e8ca650_SymbolBuilder(void)   { this->self = jule::Ref<_10e8ca650_SymbolBuilder>::make(this, nullptr); }

	inline jule::Ref<_10e8ca650_SymbolBuilder> _method_get_root(void);


	inline void _method_push_err(_11ce22a00_Token,jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_cpp_use_decl_path(jule::Ref<_11ce1fd50_UseDecl>);


	inline jule::Ref<_10e9b6a10_ImportInfo> _method_build_cpp_header_import(jule::Ref<_11ce1fd50_UseDecl>);


	inline jule::Ref<_10e9b6a10_ImportInfo> _method_build_std_import(jule::Ref<_11ce1fd50_UseDecl>);


	inline jule::Ref<_10e9b6a10_ImportInfo> _method_build_ident_import(jule::Ref<_11ce1fd50_UseDecl>);


	inline jule::Ref<_10e9b6a10_ImportInfo> _method_build_import(jule::Ref<_11ce1fd50_UseDecl>);


	inline jule::Bool _method_check_duplicate_use_decl(jule::Ref<_10e9b6a10_ImportInfo>);


	inline void _method_impl_import_selections(jule::Ref<_10e9b6a10_ImportInfo>,jule::Ref<_11ce1fd50_UseDecl>);


	inline jule::Str _method_get_as_link_path(jule::Str);


	inline void _method_push_cross_cycle_error(jule::Ref<_10e8ca650_SymbolBuilder>,jule::Ref<_10e9b6a10_ImportInfo>,_11ce22a00_Token);


	inline jule::Bool _method_check_import_cycles(jule::Ref<_10e9b6a10_ImportInfo>,jule::Ref<_11ce1fd50_UseDecl>);


	inline jule::Bool _method_import_package(jule::Ref<_10e9b6a10_ImportInfo>,jule::Ref<_11ce1fd50_UseDecl>);


	inline jule::Ref<_10e9b6a10_ImportInfo> _method_import_use_decl(jule::Ref<_11ce1fd50_UseDecl>);


	inline void _method_import_use_decls(void);


	inline void _method_append_decl(_11ce1fd50_Node);


	inline void _method_append_decls(void);


	inline void _method_append_impls(void);


	inline void _method_push_directive_pass(jule::Ref<_11ce1fd50_Directive>);


	inline void _method_append_top_directives(void);


	inline void _method_build(void);


	inline bool operator==(const _10e8ca650_SymbolBuilder &_Src) {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_importer == _Src._field_importer &&
			this->_field_errors == _Src._field_errors &&
			this->_field_ast == _Src._field_ast &&
			this->_field_table == _Src._field_table;
	}

	inline bool operator!=(const _10e8ca650_SymbolBuilder &_Src) { return !this->operator==(_Src); }
};


struct _10e97fcf0_If {
	jule::Ref<_10e97fcf0_If> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Ref<_10e97fcf0_Scope> _field_scope{jule::Ref<_10e97fcf0_Scope>()};


	_10e97fcf0_If(jule::Any __param_expr, jule::Ref<_10e97fcf0_Scope> __param_scope)   {
		this->self = jule::Ref<_10e97fcf0_If>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_scope = __param_scope;
	}

	~_10e97fcf0_If(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e97fcf0_If(void)   { this->self = jule::Ref<_10e97fcf0_If>::make(this, nullptr); }

	inline bool operator==(const _10e97fcf0_If &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _10e97fcf0_If &_Src) { return !this->operator==(_Src); }
};


struct _10e97fcf0_Else {
	jule::Ref<_10e97fcf0_Else> self{};

	jule::Ref<_10e97fcf0_Scope> _field_scope{jule::Ref<_10e97fcf0_Scope>()};


	_10e97fcf0_Else(jule::Ref<_10e97fcf0_Scope> __param_scope)   {
		this->self = jule::Ref<_10e97fcf0_Else>::make(this, nullptr);

		this->_field_scope = __param_scope;
	}

	~_10e97fcf0_Else(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e97fcf0_Else(void)   { this->self = jule::Ref<_10e97fcf0_Else>::make(this, nullptr); }

	inline bool operator==(const _10e97fcf0_Else &_Src) {
		return 
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _10e97fcf0_Else &_Src) { return !this->operator==(_Src); }
};


struct _10e97fcf0_Conditional {
	jule::Ref<_10e97fcf0_Conditional> self{};

	jule::Slice<jule::Ref<_10e97fcf0_If>> _field_elifs{jule::Slice<jule::Ref<_10e97fcf0_If>>()};
	jule::Ref<_10e97fcf0_Else> _field_default{jule::Ref<_10e97fcf0_Else>()};


	_10e97fcf0_Conditional(jule::Slice<jule::Ref<_10e97fcf0_If>> __param_elifs, jule::Ref<_10e97fcf0_Else> __param_default)   {
		this->self = jule::Ref<_10e97fcf0_Conditional>::make(this, nullptr);

		this->_field_elifs = __param_elifs;
		this->_field_default = __param_default;
	}

	~_10e97fcf0_Conditional(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e97fcf0_Conditional(void)   { this->self = jule::Ref<_10e97fcf0_Conditional>::make(this, nullptr); }

	inline bool operator==(const _10e97fcf0_Conditional &_Src) {
		return 
			this->_field_elifs == _Src._field_elifs &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _10e97fcf0_Conditional &_Src) { return !this->operator==(_Src); }
};


struct _10e97fcf0_InfIter {
	jule::Ref<_10e97fcf0_InfIter> self{};

	jule::Ref<_10e97fcf0_Scope> _field_scope{jule::Ref<_10e97fcf0_Scope>()};


	_10e97fcf0_InfIter(jule::Ref<_10e97fcf0_Scope> __param_scope)   {
		this->self = jule::Ref<_10e97fcf0_InfIter>::make(this, nullptr);

		this->_field_scope = __param_scope;
	}

	~_10e97fcf0_InfIter(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e97fcf0_InfIter(void)   { this->self = jule::Ref<_10e97fcf0_InfIter>::make(this, nullptr); }

	inline bool operator==(const _10e97fcf0_InfIter &_Src) {
		return 
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _10e97fcf0_InfIter &_Src) { return !this->operator==(_Src); }
};


struct _10e97fcf0_WhileIter {
	jule::Ref<_10e97fcf0_WhileIter> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Any _field_next{jule::Any()};
	jule::Ref<_10e97fcf0_Scope> _field_scope{jule::Ref<_10e97fcf0_Scope>()};


	_10e97fcf0_WhileIter(jule::Any __param_expr, jule::Any __param_next, jule::Ref<_10e97fcf0_Scope> __param_scope)   {
		this->self = jule::Ref<_10e97fcf0_WhileIter>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_next = __param_next;
		this->_field_scope = __param_scope;
	}

	~_10e97fcf0_WhileIter(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e97fcf0_WhileIter(void)   { this->self = jule::Ref<_10e97fcf0_WhileIter>::make(this, nullptr); }

	inline jule::Bool _method_is_while_next(void);


	inline bool operator==(const _10e97fcf0_WhileIter &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_next == _Src._field_next &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _10e97fcf0_WhileIter &_Src) { return !this->operator==(_Src); }
};


struct _10e97fcf0_RangeIter {
	jule::Ref<_10e97fcf0_RangeIter> self{};

	jule::Ref<_10ee8a260_Data> _field_expr{jule::Ref<_10ee8a260_Data>()};
	jule::Ref<_10e97fcf0_Scope> _field_scope{jule::Ref<_10e97fcf0_Scope>()};
	jule::Ref<_10ebc2ad0_Var> _field_key_a{jule::Ref<_10ebc2ad0_Var>()};
	jule::Ref<_10ebc2ad0_Var> _field_key_b{jule::Ref<_10ebc2ad0_Var>()};


	_10e97fcf0_RangeIter(jule::Ref<_10ee8a260_Data> __param_expr, jule::Ref<_10e97fcf0_Scope> __param_scope, jule::Ref<_10ebc2ad0_Var> __param_key_a, jule::Ref<_10ebc2ad0_Var> __param_key_b)   {
		this->self = jule::Ref<_10e97fcf0_RangeIter>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_scope = __param_scope;
		this->_field_key_a = __param_key_a;
		this->_field_key_b = __param_key_b;
	}

	~_10e97fcf0_RangeIter(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e97fcf0_RangeIter(void)   { this->self = jule::Ref<_10e97fcf0_RangeIter>::make(this, nullptr); }

	inline bool operator==(const _10e97fcf0_RangeIter &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope &&
			this->_field_key_a == _Src._field_key_a &&
			this->_field_key_b == _Src._field_key_b;
	}

	inline bool operator!=(const _10e97fcf0_RangeIter &_Src) { return !this->operator==(_Src); }
};


struct _10e97fcf0_ContSt {
	jule::Ref<_10e97fcf0_ContSt> self{};

	jule::Uintptr _field_it{jule::Uintptr()};


	_10e97fcf0_ContSt(jule::Uintptr __param_it)   {
		this->self = jule::Ref<_10e97fcf0_ContSt>::make(this, nullptr);

		this->_field_it = __param_it;
	}

	~_10e97fcf0_ContSt(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e97fcf0_ContSt(void)   { this->self = jule::Ref<_10e97fcf0_ContSt>::make(this, nullptr); }

	inline bool operator==(const _10e97fcf0_ContSt &_Src) {
		return 
			this->_field_it == _Src._field_it;
	}

	inline bool operator!=(const _10e97fcf0_ContSt &_Src) { return !this->operator==(_Src); }
};


struct _10e97fcf0_BreakSt {
	jule::Ref<_10e97fcf0_BreakSt> self{};

	jule::Uintptr _field_it{jule::Uintptr()};
	jule::Uintptr _field_mtch{jule::Uintptr()};


	_10e97fcf0_BreakSt(jule::Uintptr __param_it, jule::Uintptr __param_mtch)   {
		this->self = jule::Ref<_10e97fcf0_BreakSt>::make(this, nullptr);

		this->_field_it = __param_it;
		this->_field_mtch = __param_mtch;
	}

	~_10e97fcf0_BreakSt(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e97fcf0_BreakSt(void)   { this->self = jule::Ref<_10e97fcf0_BreakSt>::make(this, nullptr); }

	inline bool operator==(const _10e97fcf0_BreakSt &_Src) {
		return 
			this->_field_it == _Src._field_it &&
			this->_field_mtch == _Src._field_mtch;
	}

	inline bool operator!=(const _10e97fcf0_BreakSt &_Src) { return !this->operator==(_Src); }
};


struct _10e97fcf0_Label {
	jule::Ref<_10e97fcf0_Label> self{};

	jule::Str _field_ident{jule::Str()};


	_10e97fcf0_Label(jule::Str __param_ident)   {
		this->self = jule::Ref<_10e97fcf0_Label>::make(this, nullptr);

		this->_field_ident = __param_ident;
	}

	~_10e97fcf0_Label(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e97fcf0_Label(void)   { this->self = jule::Ref<_10e97fcf0_Label>::make(this, nullptr); }

	inline bool operator==(const _10e97fcf0_Label &_Src) {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _10e97fcf0_Label &_Src) { return !this->operator==(_Src); }
};


struct _10e97fcf0_GotoSt {
	jule::Ref<_10e97fcf0_GotoSt> self{};

	jule::Str _field_ident{jule::Str()};


	_10e97fcf0_GotoSt(jule::Str __param_ident)   {
		this->self = jule::Ref<_10e97fcf0_GotoSt>::make(this, nullptr);

		this->_field_ident = __param_ident;
	}

	~_10e97fcf0_GotoSt(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e97fcf0_GotoSt(void)   { this->self = jule::Ref<_10e97fcf0_GotoSt>::make(this, nullptr); }

	inline bool operator==(const _10e97fcf0_GotoSt &_Src) {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _10e97fcf0_GotoSt &_Src) { return !this->operator==(_Src); }
};


struct _10e97fcf0_Postfix {
	jule::Ref<_10e97fcf0_Postfix> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_10e97fcf0_Postfix(jule::Any __param_expr, jule::Str __param_op)   {
		this->self = jule::Ref<_10e97fcf0_Postfix>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_op = __param_op;
	}

	~_10e97fcf0_Postfix(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e97fcf0_Postfix(void)   { this->self = jule::Ref<_10e97fcf0_Postfix>::make(this, nullptr); }

	inline bool operator==(const _10e97fcf0_Postfix &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _10e97fcf0_Postfix &_Src) { return !this->operator==(_Src); }
};


struct _10e97fcf0_Assign {
	jule::Ref<_10e97fcf0_Assign> self{};

	jule::Any _field_l{jule::Any()};
	jule::Any _field_r{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_10e97fcf0_Assign(jule::Any __param_l, jule::Any __param_r, jule::Str __param_op)   {
		this->self = jule::Ref<_10e97fcf0_Assign>::make(this, nullptr);

		this->_field_l = __param_l;
		this->_field_r = __param_r;
		this->_field_op = __param_op;
	}

	~_10e97fcf0_Assign(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e97fcf0_Assign(void)   { this->self = jule::Ref<_10e97fcf0_Assign>::make(this, nullptr); }

	inline bool operator==(const _10e97fcf0_Assign &_Src) {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _10e97fcf0_Assign &_Src) { return !this->operator==(_Src); }
};


struct _10e97fcf0_MultiAssign {
	jule::Ref<_10e97fcf0_MultiAssign> self{};

	jule::Slice<jule::Any> _field_l{jule::Slice<jule::Any>()};
	jule::Any _field_r{jule::Any()};


	_10e97fcf0_MultiAssign(jule::Slice<jule::Any> __param_l, jule::Any __param_r)   {
		this->self = jule::Ref<_10e97fcf0_MultiAssign>::make(this, nullptr);

		this->_field_l = __param_l;
		this->_field_r = __param_r;
	}

	~_10e97fcf0_MultiAssign(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e97fcf0_MultiAssign(void)   { this->self = jule::Ref<_10e97fcf0_MultiAssign>::make(this, nullptr); }

	inline bool operator==(const _10e97fcf0_MultiAssign &_Src) {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r;
	}

	inline bool operator!=(const _10e97fcf0_MultiAssign &_Src) { return !this->operator==(_Src); }
};


struct _10e97fcf0_Match {
	jule::Ref<_10e97fcf0_Match> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Bool _field_type_match{jule::Bool()};
	jule::Slice<jule::Ref<_10e97fcf0_Case>> _field_cases{jule::Slice<jule::Ref<_10e97fcf0_Case>>()};
	jule::Ref<_10e97fcf0_Case> _field_default{jule::Ref<_10e97fcf0_Case>()};


	_10e97fcf0_Match(jule::Any __param_expr, jule::Bool __param_type_match, jule::Slice<jule::Ref<_10e97fcf0_Case>> __param_cases, jule::Ref<_10e97fcf0_Case> __param_default)   {
		this->self = jule::Ref<_10e97fcf0_Match>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_type_match = __param_type_match;
		this->_field_cases = __param_cases;
		this->_field_default = __param_default;
	}

	~_10e97fcf0_Match(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e97fcf0_Match(void)   { this->self = jule::Ref<_10e97fcf0_Match>::make(this, nullptr); }

	inline bool operator==(const _10e97fcf0_Match &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_type_match == _Src._field_type_match &&
			this->_field_cases == _Src._field_cases &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _10e97fcf0_Match &_Src) { return !this->operator==(_Src); }
};


struct _10e97fcf0_Case {
	jule::Ref<_10e97fcf0_Case> self{};

	jule::Ref<_10e97fcf0_Match> _field_owner{jule::Ref<_10e97fcf0_Match>()};
	jule::Ref<_10e97fcf0_Scope> _field_scope{jule::Ref<_10e97fcf0_Scope>()};
	jule::Slice<jule::Any> _field_exprs{jule::Slice<jule::Any>()};
	jule::Ref<_10e97fcf0_Case> _field_next{jule::Ref<_10e97fcf0_Case>()};


	_10e97fcf0_Case(jule::Ref<_10e97fcf0_Match> __param_owner, jule::Ref<_10e97fcf0_Scope> __param_scope, jule::Slice<jule::Any> __param_exprs, jule::Ref<_10e97fcf0_Case> __param_next)   {
		this->self = jule::Ref<_10e97fcf0_Case>::make(this, nullptr);

		this->_field_owner = __param_owner;
		this->_field_scope = __param_scope;
		this->_field_exprs = __param_exprs;
		this->_field_next = __param_next;
	}

	~_10e97fcf0_Case(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e97fcf0_Case(void)   { this->self = jule::Ref<_10e97fcf0_Case>::make(this, nullptr); }

	inline jule::Bool _method_is_default(void);


	inline bool operator==(const _10e97fcf0_Case &_Src) {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_scope == _Src._field_scope &&
			this->_field_exprs == _Src._field_exprs &&
			this->_field_next == _Src._field_next;
	}

	inline bool operator!=(const _10e97fcf0_Case &_Src) { return !this->operator==(_Src); }
};


struct _10e97fcf0_FallSt {
	jule::Ref<_10e97fcf0_FallSt> self{};

	jule::Uintptr _field_dest_case{jule::Uintptr()};


	_10e97fcf0_FallSt(jule::Uintptr __param_dest_case)   {
		this->self = jule::Ref<_10e97fcf0_FallSt>::make(this, nullptr);

		this->_field_dest_case = __param_dest_case;
	}

	~_10e97fcf0_FallSt(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e97fcf0_FallSt(void)   { this->self = jule::Ref<_10e97fcf0_FallSt>::make(this, nullptr); }

	inline bool operator==(const _10e97fcf0_FallSt &_Src) {
		return 
			this->_field_dest_case == _Src._field_dest_case;
	}

	inline bool operator!=(const _10e97fcf0_FallSt &_Src) { return !this->operator==(_Src); }
};


struct _10e97fcf0_RetSt {
	jule::Ref<_10e97fcf0_RetSt> self{};

	jule::Slice<jule::Ref<_10ebc2ad0_Var>> _field_vars{jule::Slice<jule::Ref<_10ebc2ad0_Var>>()};
	jule::Any _field_expr{jule::Any()};


	_10e97fcf0_RetSt(jule::Slice<jule::Ref<_10ebc2ad0_Var>> __param_vars, jule::Any __param_expr)   {
		this->self = jule::Ref<_10e97fcf0_RetSt>::make(this, nullptr);

		this->_field_vars = __param_vars;
		this->_field_expr = __param_expr;
	}

	~_10e97fcf0_RetSt(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e97fcf0_RetSt(void)   { this->self = jule::Ref<_10e97fcf0_RetSt>::make(this, nullptr); }

	inline bool operator==(const _10e97fcf0_RetSt &_Src) {
		return 
			this->_field_vars == _Src._field_vars &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _10e97fcf0_RetSt &_Src) { return !this->operator==(_Src); }
};


struct _10e97fcf0_Recover {
	jule::Ref<_10e97fcf0_Recover> self{};

	jule::Ref<_10e56a140_FnIns> _field_handler{jule::Ref<_10e56a140_FnIns>()};
	jule::Any _field_handler_expr{jule::Any()};
	jule::Ref<_10e97fcf0_Scope> _field_scope{jule::Ref<_10e97fcf0_Scope>()};


	_10e97fcf0_Recover(jule::Ref<_10e56a140_FnIns> __param_handler, jule::Any __param_handler_expr, jule::Ref<_10e97fcf0_Scope> __param_scope)   {
		this->self = jule::Ref<_10e97fcf0_Recover>::make(this, nullptr);

		this->_field_handler = __param_handler;
		this->_field_handler_expr = __param_handler_expr;
		this->_field_scope = __param_scope;
	}

	~_10e97fcf0_Recover(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e97fcf0_Recover(void)   { this->self = jule::Ref<_10e97fcf0_Recover>::make(this, nullptr); }

	inline bool operator==(const _10e97fcf0_Recover &_Src) {
		return 
			this->_field_handler == _Src._field_handler &&
			this->_field_handler_expr == _Src._field_handler_expr &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _10e97fcf0_Recover &_Src) { return !this->operator==(_Src); }
};


struct _10e97fcf0_ScopeGoto {
	jule::Ref<_10e97fcf0_ScopeGoto> self{};

	jule::Ref<_11ce1fd50_GotoSt> _field_gt{jule::Ref<_11ce1fd50_GotoSt>()};
	jule::Ref<_10e97fcf0_ScopeChecker> _field_scope{jule::Ref<_10e97fcf0_ScopeChecker>()};
	jule::Int _field_pos{jule::Int()};


	_10e97fcf0_ScopeGoto(jule::Ref<_11ce1fd50_GotoSt> __param_gt, jule::Ref<_10e97fcf0_ScopeChecker> __param_scope, jule::Int __param_pos)   {
		this->self = jule::Ref<_10e97fcf0_ScopeGoto>::make(this, nullptr);

		this->_field_gt = __param_gt;
		this->_field_scope = __param_scope;
		this->_field_pos = __param_pos;
	}

	~_10e97fcf0_ScopeGoto(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e97fcf0_ScopeGoto(void)   { this->self = jule::Ref<_10e97fcf0_ScopeGoto>::make(this, nullptr); }

	inline bool operator==(const _10e97fcf0_ScopeGoto &_Src) {
		return 
			this->_field_gt == _Src._field_gt &&
			this->_field_scope == _Src._field_scope &&
			this->_field_pos == _Src._field_pos;
	}

	inline bool operator!=(const _10e97fcf0_ScopeGoto &_Src) { return !this->operator==(_Src); }
};


struct _10e97fcf0_ScopeChecker: public _10f3df410_Lookup {
	jule::Ref<_10e97fcf0_ScopeChecker> self{};

	jule::Ref<_10e9847f0_Sema> _field_s{jule::Ref<_10e9847f0_Sema>()};
	jule::Ref<_10e56a140_FnIns> _field_owner{jule::Ref<_10e56a140_FnIns>()};
	jule::Ref<_10e97fcf0_ScopeChecker> _field_parent{jule::Ref<_10e97fcf0_ScopeChecker>()};
	jule::Int _field_child_index{jule::Int()};
	jule::Ref<_10ee5c510_SymbolTable> _field_table{jule::Ref<_10ee5c510_SymbolTable>()};
	jule::Ref<_10e97fcf0_Scope> _field_scope{jule::Ref<_10e97fcf0_Scope>()};
	jule::Ref<_11ce1fd50_ScopeTree> _field_tree{jule::Ref<_11ce1fd50_ScopeTree>()};
	jule::Uintptr _field_it{jule::Uintptr()};
	jule::Uintptr _field_cse{jule::Uintptr()};
	jule::Ref<jule::Slice<jule::Ref<_10e97fcf0_ScopeLabel>>> _field_labels{jule::Ref<jule::Slice<jule::Ref<_10e97fcf0_ScopeLabel>>>()};
	jule::Ref<jule::Slice<jule::Ref<_10e97fcf0_ScopeGoto>>> _field_gotos{jule::Ref<jule::Slice<jule::Ref<_10e97fcf0_ScopeGoto>>>()};
	jule::Int _field_i{jule::Int()};


	_10e97fcf0_ScopeChecker(jule::Ref<_10e9847f0_Sema> __param_s, jule::Ref<_10e56a140_FnIns> __param_owner, jule::Ref<_10e97fcf0_ScopeChecker> __param_parent, jule::Int __param_child_index, jule::Ref<_10ee5c510_SymbolTable> __param_table, jule::Ref<_10e97fcf0_Scope> __param_scope, jule::Ref<_11ce1fd50_ScopeTree> __param_tree, jule::Uintptr __param_it, jule::Uintptr __param_cse, jule::Ref<jule::Slice<jule::Ref<_10e97fcf0_ScopeLabel>>> __param_labels, jule::Ref<jule::Slice<jule::Ref<_10e97fcf0_ScopeGoto>>> __param_gotos, jule::Int __param_i)   {
		this->self = jule::Ref<_10e97fcf0_ScopeChecker>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_owner = __param_owner;
		this->_field_parent = __param_parent;
		this->_field_child_index = __param_child_index;
		this->_field_table = __param_table;
		this->_field_scope = __param_scope;
		this->_field_tree = __param_tree;
		this->_field_it = __param_it;
		this->_field_cse = __param_cse;
		this->_field_labels = __param_labels;
		this->_field_gotos = __param_gotos;
		this->_field_i = __param_i;
	}

	~_10e97fcf0_ScopeChecker(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e97fcf0_ScopeChecker(void)   { this->self = jule::Ref<_10e97fcf0_ScopeChecker>::make(this, nullptr); }

	inline jule::Ref<_10e9b6a10_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_10e9b6a10_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_10e9b6a10_ImportInfo>)>);


	inline jule::Ref<_10ebc2ad0_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_10eeb79b0_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_10e3fc8f0_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_10e56a140_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_10e3d6eb0_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_10e975f00_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_unsafe(void);


	inline jule::Bool _method_is_root(void);


	inline jule::Ref<_10e97fcf0_ScopeChecker> _method_get_root(void);


	inline jule::Ref<_10e97fcf0_Label> _method_find_label(jule::Str);


	inline jule::Ref<_10e97fcf0_ScopeLabel> _method_find_label_scope(jule::Str);


	inline jule::Ref<_10e97fcf0_ScopeLabel> _method_find_label_all(jule::Str);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str);


	inline void _method_check_var_decl(jule::Ref<_11ce1fd50_VarDecl>);


	inline void _method_check_type_alias_decl(jule::Ref<_11ce1fd50_TypeAliasDecl>);


	inline jule::Ref<_10e97fcf0_Scope> _method_get_child(void);


	inline void _method_check_child_ssc(jule::Ref<_11ce1fd50_ScopeTree>,jule::Ref<_10e97fcf0_Scope>,jule::Ref<_10e97fcf0_ScopeChecker>);


	inline jule::Ref<_10e97fcf0_Scope> _method_check_child_sc(jule::Ref<_11ce1fd50_ScopeTree>,jule::Ref<_10e97fcf0_ScopeChecker>);


	inline jule::Ref<_10e97fcf0_Scope> _method_check_child(jule::Ref<_11ce1fd50_ScopeTree>);


	inline void _method_check_anon_scope(jule::Ref<_11ce1fd50_ScopeTree>);


	inline jule::Bool _method_try_call_recover(jule::Ref<_10ee8a260_Data>);


	inline void _method_check_expr(jule::Ref<_11ce1fd50_Expr>);


	inline jule::Ref<_10e97fcf0_If> _method_check_if(jule::Ref<_11ce1fd50_If>);


	inline jule::Ref<_10e97fcf0_Else> _method_check_else(jule::Ref<_11ce1fd50_Else>);


	inline void _method_check_conditional(jule::Ref<_11ce1fd50_Conditional>);


	inline jule::Ref<_10e97fcf0_Scope> _method_check_iter_scope_sc(jule::Uintptr,jule::Ref<_11ce1fd50_ScopeTree>,jule::Ref<_10e97fcf0_ScopeChecker>);


	inline jule::Ref<_10e97fcf0_Scope> _method_check_iter_scope(jule::Uintptr,jule::Ref<_11ce1fd50_ScopeTree>);


	inline void _method_check_inf_iter(jule::Ref<_11ce1fd50_Iter>);


	inline void _method_check_while_iter(jule::Ref<_11ce1fd50_Iter>);


	inline void _method_check_range_iter(jule::Ref<_11ce1fd50_Iter>);


	inline void _method_check_iter(jule::Ref<_11ce1fd50_Iter>);


	inline jule::Bool _method_check_valid_cont_label(jule::Uintptr);


	inline jule::Bool _method_check_valid_break_label(jule::Uintptr);


	inline jule::Ref<_10e97fcf0_ContSt> _method_check_cont_valid_scope(jule::Ref<_11ce1fd50_ContSt>);


	inline void _method_check_cont(jule::Ref<_11ce1fd50_ContSt>);


	inline void _method_check_label(jule::Ref<_11ce1fd50_LabelSt>);


	inline void _method_push_goto(jule::Ref<_11ce1fd50_GotoSt>);


	inline void _method_check_postfix(jule::Ref<_11ce1fd50_AssignSt>);


	inline jule::Bool _method_is_new_assign_ident(jule::Str);


	inline void _method_check_single_assign(jule::Ref<_11ce1fd50_AssignSt>);


	inline void _method___process_end_part_of_multi_assign(jule::Ref<_10e97fcf0_MultiAssign>,jule::Ref<_11ce1fd50_AssignSt>,jule::Ref<_11ce1fd50_AssignLeft>,jule::Ref<_10ee8a260_Data>,jule::Ref<_10ee8a260_Data>);


	inline void _method_check_ret_multi_assign(jule::Ref<_11ce1fd50_AssignSt>);


	inline void _method_check_multi_assign(jule::Ref<_11ce1fd50_AssignSt>);


	inline void _method_check_assign_st(jule::Ref<_11ce1fd50_AssignSt>);


	inline jule::Ref<_10e97fcf0_Scope> _method_check_case_scope(jule::Ref<_10e97fcf0_Case>,jule::Ref<_11ce1fd50_ScopeTree>);


	inline jule::Ref<_10e97fcf0_Case> _method_check_case(jule::Ref<_10e97fcf0_Match>,jule::Int,jule::Ref<_11ce1fd50_Case>,jule::Ref<_10ee8a260_Data>);


	inline void _method_check_cases(jule::Ref<_11ce1fd50_MatchCase>,jule::Ref<_10e97fcf0_Match>,jule::Ref<_10ee8a260_Data>);


	inline jule::Ref<_10e97fcf0_Case> _method_check_default(jule::Ref<_10e97fcf0_Match>,jule::Ref<_11ce1fd50_Else>);


	inline void _method_check_type_match(jule::Ref<_11ce1fd50_MatchCase>);


	inline void _method_check_common_match(jule::Ref<_11ce1fd50_MatchCase>);


	inline void _method_check_match(jule::Ref<_11ce1fd50_MatchCase>);


	inline void _method_check_fall(jule::Ref<_11ce1fd50_FallSt>);


	inline jule::Ref<_10e97fcf0_BreakSt> _method_check_break_with_label(jule::Ref<_11ce1fd50_BreakSt>);


	inline jule::Ref<_10e97fcf0_BreakSt> _method_check_plain_break(jule::Ref<_11ce1fd50_BreakSt>);


	inline void _method_check_break(jule::Ref<_11ce1fd50_BreakSt>);


	inline void _method_check_ret(jule::Ref<_11ce1fd50_RetSt>);


	inline void _method_check_node(jule::Any);


	inline void _method_check_tree(void);


	inline void _method_check_same_scope_goto(jule::Ref<_10e97fcf0_ScopeGoto>,jule::Ref<_10e97fcf0_ScopeLabel>);


	inline jule::Bool _method_check_label_parents(jule::Ref<_10e97fcf0_ScopeGoto>,jule::Ref<_10e97fcf0_ScopeLabel>);


	inline void _method_check_goto_scope(jule::Ref<_10e97fcf0_ScopeGoto>,jule::Ref<_10e97fcf0_ScopeLabel>);


	inline void _method_check_diff_scope_goto(jule::Ref<_10e97fcf0_ScopeGoto>,jule::Ref<_10e97fcf0_ScopeLabel>);


	inline void _method_check_goto(jule::Ref<_10e97fcf0_ScopeGoto>,jule::Ref<_10e97fcf0_ScopeLabel>);


	inline void _method_check_gotos(void);


	inline void _method_check_labels(void);


	inline void _method_check_vars(void);


	inline void _method_check_aliases(void);


	inline void _method_check(jule::Ref<_11ce1fd50_ScopeTree>,jule::Ref<_10e97fcf0_Scope>);


	inline jule::Ref<_10e97fcf0_ScopeChecker> _method_new_child_checker(void);


	inline bool operator==(const _10e97fcf0_ScopeChecker &_Src) {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_owner == _Src._field_owner &&
			this->_field_parent == _Src._field_parent &&
			this->_field_child_index == _Src._field_child_index &&
			this->_field_table == _Src._field_table &&
			this->_field_scope == _Src._field_scope &&
			this->_field_tree == _Src._field_tree &&
			this->_field_it == _Src._field_it &&
			this->_field_cse == _Src._field_cse &&
			this->_field_labels == _Src._field_labels &&
			this->_field_gotos == _Src._field_gotos &&
			this->_field_i == _Src._field_i;
	}

	inline bool operator!=(const _10e97fcf0_ScopeChecker &_Src) { return !this->operator==(_Src); }
};


struct _10e9ca470_BinopExprModel {
	jule::Ref<_10e9ca470_BinopExprModel> self{};

	jule::Any _field_left{jule::Any()};
	jule::Any _field_right{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_10e9ca470_BinopExprModel(jule::Any __param_left, jule::Any __param_right, jule::Str __param_op)   {
		this->self = jule::Ref<_10e9ca470_BinopExprModel>::make(this, nullptr);

		this->_field_left = __param_left;
		this->_field_right = __param_right;
		this->_field_op = __param_op;
	}

	~_10e9ca470_BinopExprModel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9ca470_BinopExprModel(void)   { this->self = jule::Ref<_10e9ca470_BinopExprModel>::make(this, nullptr); }

	inline bool operator==(const _10e9ca470_BinopExprModel &_Src) {
		return 
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _10e9ca470_BinopExprModel &_Src) { return !this->operator==(_Src); }
};


struct _10e9ca470_UnaryExprModel {
	jule::Ref<_10e9ca470_UnaryExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_10e9ca470_UnaryExprModel(jule::Any __param_expr, jule::Str __param_op)   {
		this->self = jule::Ref<_10e9ca470_UnaryExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_op = __param_op;
	}

	~_10e9ca470_UnaryExprModel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9ca470_UnaryExprModel(void)   { this->self = jule::Ref<_10e9ca470_UnaryExprModel>::make(this, nullptr); }

	inline bool operator==(const _10e9ca470_UnaryExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _10e9ca470_UnaryExprModel &_Src) { return !this->operator==(_Src); }
};


struct _10e9ca470_GetRefPtrExprModel {
	jule::Ref<_10e9ca470_GetRefPtrExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_10e9ca470_GetRefPtrExprModel(jule::Any __param_expr)   {
		this->self = jule::Ref<_10e9ca470_GetRefPtrExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_10e9ca470_GetRefPtrExprModel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9ca470_GetRefPtrExprModel(void)   { this->self = jule::Ref<_10e9ca470_GetRefPtrExprModel>::make(this, nullptr); }

	inline bool operator==(const _10e9ca470_GetRefPtrExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _10e9ca470_GetRefPtrExprModel &_Src) { return !this->operator==(_Src); }
};


struct _10e9ca470_StructArgExprModel {
	jule::Ref<_10e9ca470_StructArgExprModel> self{};

	jule::Ref<_10e3fc8f0_FieldIns> _field_field{jule::Ref<_10e3fc8f0_FieldIns>()};
	jule::Any _field_expr{jule::Any()};


	_10e9ca470_StructArgExprModel(jule::Ref<_10e3fc8f0_FieldIns> __param_field, jule::Any __param_expr)   {
		this->self = jule::Ref<_10e9ca470_StructArgExprModel>::make(this, nullptr);

		this->_field_field = __param_field;
		this->_field_expr = __param_expr;
	}

	~_10e9ca470_StructArgExprModel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9ca470_StructArgExprModel(void)   { this->self = jule::Ref<_10e9ca470_StructArgExprModel>::make(this, nullptr); }

	inline bool operator==(const _10e9ca470_StructArgExprModel &_Src) {
		return 
			this->_field_field == _Src._field_field &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _10e9ca470_StructArgExprModel &_Src) { return !this->operator==(_Src); }
};


struct _10e9ca470_StructLitExprModel {
	jule::Ref<_10e9ca470_StructLitExprModel> self{};

	jule::Ref<_10e3fc8f0_StructIns> _field_strct{jule::Ref<_10e3fc8f0_StructIns>()};
	jule::Slice<jule::Ref<_10e9ca470_StructArgExprModel>> _field_args{jule::Slice<jule::Ref<_10e9ca470_StructArgExprModel>>()};


	_10e9ca470_StructLitExprModel(jule::Ref<_10e3fc8f0_StructIns> __param_strct, jule::Slice<jule::Ref<_10e9ca470_StructArgExprModel>> __param_args)   {
		this->self = jule::Ref<_10e9ca470_StructLitExprModel>::make(this, nullptr);

		this->_field_strct = __param_strct;
		this->_field_args = __param_args;
	}

	~_10e9ca470_StructLitExprModel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9ca470_StructLitExprModel(void)   { this->self = jule::Ref<_10e9ca470_StructLitExprModel>::make(this, nullptr); }

	inline bool operator==(const _10e9ca470_StructLitExprModel &_Src) {
		return 
			this->_field_strct == _Src._field_strct &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _10e9ca470_StructLitExprModel &_Src) { return !this->operator==(_Src); }
};


struct _10e9ca470_AllocStructLitExprModel {
	jule::Ref<_10e9ca470_AllocStructLitExprModel> self{};

	jule::Ref<_10e9ca470_StructLitExprModel> _field_lit{jule::Ref<_10e9ca470_StructLitExprModel>()};


	_10e9ca470_AllocStructLitExprModel(jule::Ref<_10e9ca470_StructLitExprModel> __param_lit)   {
		this->self = jule::Ref<_10e9ca470_AllocStructLitExprModel>::make(this, nullptr);

		this->_field_lit = __param_lit;
	}

	~_10e9ca470_AllocStructLitExprModel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9ca470_AllocStructLitExprModel(void)   { this->self = jule::Ref<_10e9ca470_AllocStructLitExprModel>::make(this, nullptr); }

	inline bool operator==(const _10e9ca470_AllocStructLitExprModel &_Src) {
		return 
			this->_field_lit == _Src._field_lit;
	}

	inline bool operator!=(const _10e9ca470_AllocStructLitExprModel &_Src) { return !this->operator==(_Src); }
};


struct _10e9ca470_CastingExprModel {
	jule::Ref<_10e9ca470_CastingExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Ref<_10eeb79b0_TypeKind> _field_kind{jule::Ref<_10eeb79b0_TypeKind>()};
	jule::Ref<_10eeb79b0_TypeKind> _field_expr_kind{jule::Ref<_10eeb79b0_TypeKind>()};


	_10e9ca470_CastingExprModel(jule::Any __param_expr, jule::Ref<_10eeb79b0_TypeKind> __param_kind, jule::Ref<_10eeb79b0_TypeKind> __param_expr_kind)   {
		this->self = jule::Ref<_10e9ca470_CastingExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_kind = __param_kind;
		this->_field_expr_kind = __param_expr_kind;
	}

	~_10e9ca470_CastingExprModel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9ca470_CastingExprModel(void)   { this->self = jule::Ref<_10e9ca470_CastingExprModel>::make(this, nullptr); }

	inline bool operator==(const _10e9ca470_CastingExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_kind == _Src._field_kind &&
			this->_field_expr_kind == _Src._field_expr_kind;
	}

	inline bool operator!=(const _10e9ca470_CastingExprModel &_Src) { return !this->operator==(_Src); }
};


struct _10e9ca470_FnCallExprModel {
	jule::Ref<_10e9ca470_FnCallExprModel> self{};

	jule::Ref<_10e56a140_FnIns> _field_func{jule::Ref<_10e56a140_FnIns>()};
	jule::Bool _field_is_co{jule::Bool()};
	jule::Any _field_expr{jule::Any()};
	jule::Slice<jule::Any> _field_args{jule::Slice<jule::Any>()};


	_10e9ca470_FnCallExprModel(jule::Ref<_10e56a140_FnIns> __param_func, jule::Bool __param_is_co, jule::Any __param_expr, jule::Slice<jule::Any> __param_args)   {
		this->self = jule::Ref<_10e9ca470_FnCallExprModel>::make(this, nullptr);

		this->_field_func = __param_func;
		this->_field_is_co = __param_is_co;
		this->_field_expr = __param_expr;
		this->_field_args = __param_args;
	}

	~_10e9ca470_FnCallExprModel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9ca470_FnCallExprModel(void)   { this->self = jule::Ref<_10e9ca470_FnCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _10e9ca470_FnCallExprModel &_Src) {
		return 
			this->_field_func == _Src._field_func &&
			this->_field_is_co == _Src._field_is_co &&
			this->_field_expr == _Src._field_expr &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _10e9ca470_FnCallExprModel &_Src) { return !this->operator==(_Src); }
};


struct _10e9ca470_SliceExprModel {
	jule::Ref<_10e9ca470_SliceExprModel> self{};

	jule::Ref<_10eeb79b0_TypeKind> _field_elem_kind{jule::Ref<_10eeb79b0_TypeKind>()};
	jule::Slice<jule::Any> _field_elems{jule::Slice<jule::Any>()};


	_10e9ca470_SliceExprModel(jule::Ref<_10eeb79b0_TypeKind> __param_elem_kind, jule::Slice<jule::Any> __param_elems)   {
		this->self = jule::Ref<_10e9ca470_SliceExprModel>::make(this, nullptr);

		this->_field_elem_kind = __param_elem_kind;
		this->_field_elems = __param_elems;
	}

	~_10e9ca470_SliceExprModel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9ca470_SliceExprModel(void)   { this->self = jule::Ref<_10e9ca470_SliceExprModel>::make(this, nullptr); }

	inline bool operator==(const _10e9ca470_SliceExprModel &_Src) {
		return 
			this->_field_elem_kind == _Src._field_elem_kind &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _10e9ca470_SliceExprModel &_Src) { return !this->operator==(_Src); }
};


struct _10e9ca470_IndexigExprModel {
	jule::Ref<_10e9ca470_IndexigExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Any _field_index{jule::Any()};


	_10e9ca470_IndexigExprModel(jule::Any __param_expr, jule::Any __param_index)   {
		this->self = jule::Ref<_10e9ca470_IndexigExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_index = __param_index;
	}

	~_10e9ca470_IndexigExprModel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9ca470_IndexigExprModel(void)   { this->self = jule::Ref<_10e9ca470_IndexigExprModel>::make(this, nullptr); }

	inline bool operator==(const _10e9ca470_IndexigExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_index == _Src._field_index;
	}

	inline bool operator!=(const _10e9ca470_IndexigExprModel &_Src) { return !this->operator==(_Src); }
};


struct _10e9ca470_AnonFnExprModel {
	jule::Ref<_10e9ca470_AnonFnExprModel> self{};

	jule::Ref<_10e56a140_FnIns> _field_func{jule::Ref<_10e56a140_FnIns>()};
	jule::Bool _field_global{jule::Bool()};


	_10e9ca470_AnonFnExprModel(jule::Ref<_10e56a140_FnIns> __param_func, jule::Bool __param_global)   {
		this->self = jule::Ref<_10e9ca470_AnonFnExprModel>::make(this, nullptr);

		this->_field_func = __param_func;
		this->_field_global = __param_global;
	}

	~_10e9ca470_AnonFnExprModel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9ca470_AnonFnExprModel(void)   { this->self = jule::Ref<_10e9ca470_AnonFnExprModel>::make(this, nullptr); }

	inline bool operator==(const _10e9ca470_AnonFnExprModel &_Src) {
		return 
			this->_field_func == _Src._field_func &&
			this->_field_global == _Src._field_global;
	}

	inline bool operator!=(const _10e9ca470_AnonFnExprModel &_Src) { return !this->operator==(_Src); }
};


struct _10e9ca470_KeyValPairExprModel {
	jule::Ref<_10e9ca470_KeyValPairExprModel> self{};

	jule::Any _field_key{jule::Any()};
	jule::Any _field_val{jule::Any()};


	_10e9ca470_KeyValPairExprModel(jule::Any __param_key, jule::Any __param_val)   {
		this->self = jule::Ref<_10e9ca470_KeyValPairExprModel>::make(this, nullptr);

		this->_field_key = __param_key;
		this->_field_val = __param_val;
	}

	~_10e9ca470_KeyValPairExprModel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9ca470_KeyValPairExprModel(void)   { this->self = jule::Ref<_10e9ca470_KeyValPairExprModel>::make(this, nullptr); }

	inline bool operator==(const _10e9ca470_KeyValPairExprModel &_Src) {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _10e9ca470_KeyValPairExprModel &_Src) { return !this->operator==(_Src); }
};


struct _10e9ca470_MapExprModel {
	jule::Ref<_10e9ca470_MapExprModel> self{};

	jule::Ref<_10eeb79b0_TypeKind> _field_key_kind{jule::Ref<_10eeb79b0_TypeKind>()};
	jule::Ref<_10eeb79b0_TypeKind> _field_val_kind{jule::Ref<_10eeb79b0_TypeKind>()};
	jule::Slice<jule::Ref<_10e9ca470_KeyValPairExprModel>> _field_entries{jule::Slice<jule::Ref<_10e9ca470_KeyValPairExprModel>>()};


	_10e9ca470_MapExprModel(jule::Ref<_10eeb79b0_TypeKind> __param_key_kind, jule::Ref<_10eeb79b0_TypeKind> __param_val_kind, jule::Slice<jule::Ref<_10e9ca470_KeyValPairExprModel>> __param_entries)   {
		this->self = jule::Ref<_10e9ca470_MapExprModel>::make(this, nullptr);

		this->_field_key_kind = __param_key_kind;
		this->_field_val_kind = __param_val_kind;
		this->_field_entries = __param_entries;
	}

	~_10e9ca470_MapExprModel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9ca470_MapExprModel(void)   { this->self = jule::Ref<_10e9ca470_MapExprModel>::make(this, nullptr); }

	inline bool operator==(const _10e9ca470_MapExprModel &_Src) {
		return 
			this->_field_key_kind == _Src._field_key_kind &&
			this->_field_val_kind == _Src._field_val_kind &&
			this->_field_entries == _Src._field_entries;
	}

	inline bool operator!=(const _10e9ca470_MapExprModel &_Src) { return !this->operator==(_Src); }
};


struct _10e9ca470_SlicingExprModel {
	jule::Ref<_10e9ca470_SlicingExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Any _field_left{jule::Any()};
	jule::Any _field_right{jule::Any()};


	_10e9ca470_SlicingExprModel(jule::Any __param_expr, jule::Any __param_left, jule::Any __param_right)   {
		this->self = jule::Ref<_10e9ca470_SlicingExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_left = __param_left;
		this->_field_right = __param_right;
	}

	~_10e9ca470_SlicingExprModel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9ca470_SlicingExprModel(void)   { this->self = jule::Ref<_10e9ca470_SlicingExprModel>::make(this, nullptr); }

	inline bool operator==(const _10e9ca470_SlicingExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right;
	}

	inline bool operator!=(const _10e9ca470_SlicingExprModel &_Src) { return !this->operator==(_Src); }
};


struct _10e9ca470_TraitSubIdentExprModel {
	jule::Ref<_10e9ca470_TraitSubIdentExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Str _field_ident{jule::Str()};


	_10e9ca470_TraitSubIdentExprModel(jule::Any __param_expr, jule::Str __param_ident)   {
		this->self = jule::Ref<_10e9ca470_TraitSubIdentExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_ident = __param_ident;
	}

	~_10e9ca470_TraitSubIdentExprModel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9ca470_TraitSubIdentExprModel(void)   { this->self = jule::Ref<_10e9ca470_TraitSubIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _10e9ca470_TraitSubIdentExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _10e9ca470_TraitSubIdentExprModel &_Src) { return !this->operator==(_Src); }
};


struct _10e9ca470_StructSubIdentExprModel {
	jule::Ref<_10e9ca470_StructSubIdentExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Ref<_10eeb79b0_TypeKind> _field_expr_kind{jule::Ref<_10eeb79b0_TypeKind>()};
	jule::Ref<_10e56a140_FnIns> _field_method{jule::Ref<_10e56a140_FnIns>()};
	jule::Ref<_10e3fc8f0_FieldIns> _field_field{jule::Ref<_10e3fc8f0_FieldIns>()};


	_10e9ca470_StructSubIdentExprModel(jule::Any __param_expr, jule::Ref<_10eeb79b0_TypeKind> __param_expr_kind, jule::Ref<_10e56a140_FnIns> __param_method, jule::Ref<_10e3fc8f0_FieldIns> __param_field)   {
		this->self = jule::Ref<_10e9ca470_StructSubIdentExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_expr_kind = __param_expr_kind;
		this->_field_method = __param_method;
		this->_field_field = __param_field;
	}

	~_10e9ca470_StructSubIdentExprModel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9ca470_StructSubIdentExprModel(void)   { this->self = jule::Ref<_10e9ca470_StructSubIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _10e9ca470_StructSubIdentExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_expr_kind == _Src._field_expr_kind &&
			this->_field_method == _Src._field_method &&
			this->_field_field == _Src._field_field;
	}

	inline bool operator!=(const _10e9ca470_StructSubIdentExprModel &_Src) { return !this->operator==(_Src); }
};


struct _10e9ca470_StructStaticIdentExprModel {
	jule::Ref<_10e9ca470_StructStaticIdentExprModel> self{};

	jule::Ref<_10e3fc8f0_StructIns> _field_structure{jule::Ref<_10e3fc8f0_StructIns>()};
	jule::Any _field_expr{jule::Any()};
	jule::Ref<_10e56a140_FnIns> _field_method{jule::Ref<_10e56a140_FnIns>()};


	_10e9ca470_StructStaticIdentExprModel(jule::Ref<_10e3fc8f0_StructIns> __param_structure, jule::Any __param_expr, jule::Ref<_10e56a140_FnIns> __param_method)   {
		this->self = jule::Ref<_10e9ca470_StructStaticIdentExprModel>::make(this, nullptr);

		this->_field_structure = __param_structure;
		this->_field_expr = __param_expr;
		this->_field_method = __param_method;
	}

	~_10e9ca470_StructStaticIdentExprModel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9ca470_StructStaticIdentExprModel(void)   { this->self = jule::Ref<_10e9ca470_StructStaticIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _10e9ca470_StructStaticIdentExprModel &_Src) {
		return 
			this->_field_structure == _Src._field_structure &&
			this->_field_expr == _Src._field_expr &&
			this->_field_method == _Src._field_method;
	}

	inline bool operator!=(const _10e9ca470_StructStaticIdentExprModel &_Src) { return !this->operator==(_Src); }
};


struct _10e9ca470_ArrayExprModel {
	jule::Ref<_10e9ca470_ArrayExprModel> self{};

	jule::Ref<_10eeb79b0_Arr> _field_kind{jule::Ref<_10eeb79b0_Arr>()};
	jule::Slice<jule::Any> _field_elems{jule::Slice<jule::Any>()};


	_10e9ca470_ArrayExprModel(jule::Ref<_10eeb79b0_Arr> __param_kind, jule::Slice<jule::Any> __param_elems)   {
		this->self = jule::Ref<_10e9ca470_ArrayExprModel>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_elems = __param_elems;
	}

	~_10e9ca470_ArrayExprModel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9ca470_ArrayExprModel(void)   { this->self = jule::Ref<_10e9ca470_ArrayExprModel>::make(this, nullptr); }

	inline bool operator==(const _10e9ca470_ArrayExprModel &_Src) {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _10e9ca470_ArrayExprModel &_Src) { return !this->operator==(_Src); }
};


struct _10e9ca470_CommonIdentExprModel {
	jule::Ref<_10e9ca470_CommonIdentExprModel> self{};

	jule::Str _field_ident{jule::Str()};


	_10e9ca470_CommonIdentExprModel(jule::Str __param_ident)   {
		this->self = jule::Ref<_10e9ca470_CommonIdentExprModel>::make(this, nullptr);

		this->_field_ident = __param_ident;
	}

	~_10e9ca470_CommonIdentExprModel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9ca470_CommonIdentExprModel(void)   { this->self = jule::Ref<_10e9ca470_CommonIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _10e9ca470_CommonIdentExprModel &_Src) {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _10e9ca470_CommonIdentExprModel &_Src) { return !this->operator==(_Src); }
};


struct _10e9ca470_CommonSubIdentExprModel {
	jule::Ref<_10e9ca470_CommonSubIdentExprModel> self{};

	jule::Ref<_10eeb79b0_TypeKind> _field_expr_kind{jule::Ref<_10eeb79b0_TypeKind>()};
	jule::Any _field_expr{jule::Any()};
	jule::Str _field_ident{jule::Str()};


	_10e9ca470_CommonSubIdentExprModel(jule::Ref<_10eeb79b0_TypeKind> __param_expr_kind, jule::Any __param_expr, jule::Str __param_ident)   {
		this->self = jule::Ref<_10e9ca470_CommonSubIdentExprModel>::make(this, nullptr);

		this->_field_expr_kind = __param_expr_kind;
		this->_field_expr = __param_expr;
		this->_field_ident = __param_ident;
	}

	~_10e9ca470_CommonSubIdentExprModel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9ca470_CommonSubIdentExprModel(void)   { this->self = jule::Ref<_10e9ca470_CommonSubIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _10e9ca470_CommonSubIdentExprModel &_Src) {
		return 
			this->_field_expr_kind == _Src._field_expr_kind &&
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _10e9ca470_CommonSubIdentExprModel &_Src) { return !this->operator==(_Src); }
};


struct _10e9ca470_TupleExprModel {
	jule::Ref<_10e9ca470_TupleExprModel> self{};

	jule::Slice<jule::Ref<_10ee8a260_Data>> _field_datas{jule::Slice<jule::Ref<_10ee8a260_Data>>()};


	_10e9ca470_TupleExprModel(jule::Slice<jule::Ref<_10ee8a260_Data>> __param_datas)   {
		this->self = jule::Ref<_10e9ca470_TupleExprModel>::make(this, nullptr);

		this->_field_datas = __param_datas;
	}

	~_10e9ca470_TupleExprModel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9ca470_TupleExprModel(void)   { this->self = jule::Ref<_10e9ca470_TupleExprModel>::make(this, nullptr); }

	inline bool operator==(const _10e9ca470_TupleExprModel &_Src) {
		return 
			this->_field_datas == _Src._field_datas;
	}

	inline bool operator!=(const _10e9ca470_TupleExprModel &_Src) { return !this->operator==(_Src); }
};


struct _10e9ca470_BuiltinOutCallExprModel {
	jule::Ref<_10e9ca470_BuiltinOutCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_10e9ca470_BuiltinOutCallExprModel(jule::Any __param_expr)   {
		this->self = jule::Ref<_10e9ca470_BuiltinOutCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_10e9ca470_BuiltinOutCallExprModel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9ca470_BuiltinOutCallExprModel(void)   { this->self = jule::Ref<_10e9ca470_BuiltinOutCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _10e9ca470_BuiltinOutCallExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _10e9ca470_BuiltinOutCallExprModel &_Src) { return !this->operator==(_Src); }
};


struct _10e9ca470_BuiltinOutlnCallExprModel {
	jule::Ref<_10e9ca470_BuiltinOutlnCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_10e9ca470_BuiltinOutlnCallExprModel(jule::Any __param_expr)   {
		this->self = jule::Ref<_10e9ca470_BuiltinOutlnCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_10e9ca470_BuiltinOutlnCallExprModel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9ca470_BuiltinOutlnCallExprModel(void)   { this->self = jule::Ref<_10e9ca470_BuiltinOutlnCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _10e9ca470_BuiltinOutlnCallExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _10e9ca470_BuiltinOutlnCallExprModel &_Src) { return !this->operator==(_Src); }
};


struct _10e9ca470_BuiltinCloneCallExprModel {
	jule::Ref<_10e9ca470_BuiltinCloneCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_10e9ca470_BuiltinCloneCallExprModel(jule::Any __param_expr)   {
		this->self = jule::Ref<_10e9ca470_BuiltinCloneCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_10e9ca470_BuiltinCloneCallExprModel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9ca470_BuiltinCloneCallExprModel(void)   { this->self = jule::Ref<_10e9ca470_BuiltinCloneCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _10e9ca470_BuiltinCloneCallExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _10e9ca470_BuiltinCloneCallExprModel &_Src) { return !this->operator==(_Src); }
};


struct _10e9ca470_BuiltinNewCallExprModel {
	jule::Ref<_10e9ca470_BuiltinNewCallExprModel> self{};

	jule::Ref<_10eeb79b0_TypeKind> _field_kind{jule::Ref<_10eeb79b0_TypeKind>()};
	jule::Any _field_init{jule::Any()};


	_10e9ca470_BuiltinNewCallExprModel(jule::Ref<_10eeb79b0_TypeKind> __param_kind, jule::Any __param_init)   {
		this->self = jule::Ref<_10e9ca470_BuiltinNewCallExprModel>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_init = __param_init;
	}

	~_10e9ca470_BuiltinNewCallExprModel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9ca470_BuiltinNewCallExprModel(void)   { this->self = jule::Ref<_10e9ca470_BuiltinNewCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _10e9ca470_BuiltinNewCallExprModel &_Src) {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_init == _Src._field_init;
	}

	inline bool operator!=(const _10e9ca470_BuiltinNewCallExprModel &_Src) { return !this->operator==(_Src); }
};


struct _10e9ca470_BuiltinRealCallExprModel {
	jule::Ref<_10e9ca470_BuiltinRealCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_10e9ca470_BuiltinRealCallExprModel(jule::Any __param_expr)   {
		this->self = jule::Ref<_10e9ca470_BuiltinRealCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_10e9ca470_BuiltinRealCallExprModel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9ca470_BuiltinRealCallExprModel(void)   { this->self = jule::Ref<_10e9ca470_BuiltinRealCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _10e9ca470_BuiltinRealCallExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _10e9ca470_BuiltinRealCallExprModel &_Src) { return !this->operator==(_Src); }
};


struct _10e9ca470_BuiltinDropCallExprModel {
	jule::Ref<_10e9ca470_BuiltinDropCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_10e9ca470_BuiltinDropCallExprModel(jule::Any __param_expr)   {
		this->self = jule::Ref<_10e9ca470_BuiltinDropCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_10e9ca470_BuiltinDropCallExprModel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9ca470_BuiltinDropCallExprModel(void)   { this->self = jule::Ref<_10e9ca470_BuiltinDropCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _10e9ca470_BuiltinDropCallExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _10e9ca470_BuiltinDropCallExprModel &_Src) { return !this->operator==(_Src); }
};


struct _10e9ca470_BuiltinPanicCallExprModel {
	jule::Ref<_10e9ca470_BuiltinPanicCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_10e9ca470_BuiltinPanicCallExprModel(jule::Any __param_expr)   {
		this->self = jule::Ref<_10e9ca470_BuiltinPanicCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_10e9ca470_BuiltinPanicCallExprModel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9ca470_BuiltinPanicCallExprModel(void)   { this->self = jule::Ref<_10e9ca470_BuiltinPanicCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _10e9ca470_BuiltinPanicCallExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _10e9ca470_BuiltinPanicCallExprModel &_Src) { return !this->operator==(_Src); }
};


struct _10e9ca470_BuiltinMakeCallExprModel {
	jule::Ref<_10e9ca470_BuiltinMakeCallExprModel> self{};

	jule::Ref<_10eeb79b0_TypeKind> _field_kind{jule::Ref<_10eeb79b0_TypeKind>()};
	jule::Any _field_len{jule::Any()};
	jule::Any _field_cap{jule::Any()};


	_10e9ca470_BuiltinMakeCallExprModel(jule::Ref<_10eeb79b0_TypeKind> __param_kind, jule::Any __param_len, jule::Any __param_cap)   {
		this->self = jule::Ref<_10e9ca470_BuiltinMakeCallExprModel>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_len = __param_len;
		this->_field_cap = __param_cap;
	}

	~_10e9ca470_BuiltinMakeCallExprModel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9ca470_BuiltinMakeCallExprModel(void)   { this->self = jule::Ref<_10e9ca470_BuiltinMakeCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _10e9ca470_BuiltinMakeCallExprModel &_Src) {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_len == _Src._field_len &&
			this->_field_cap == _Src._field_cap;
	}

	inline bool operator!=(const _10e9ca470_BuiltinMakeCallExprModel &_Src) { return !this->operator==(_Src); }
};


struct _10e9ca470_BuiltinErrorTraitSubIdentExprModel {
	jule::Ref<_10e9ca470_BuiltinErrorTraitSubIdentExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Str _field_ident{jule::Str()};


	_10e9ca470_BuiltinErrorTraitSubIdentExprModel(jule::Any __param_expr, jule::Str __param_ident)   {
		this->self = jule::Ref<_10e9ca470_BuiltinErrorTraitSubIdentExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_ident = __param_ident;
	}

	~_10e9ca470_BuiltinErrorTraitSubIdentExprModel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9ca470_BuiltinErrorTraitSubIdentExprModel(void)   { this->self = jule::Ref<_10e9ca470_BuiltinErrorTraitSubIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _10e9ca470_BuiltinErrorTraitSubIdentExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _10e9ca470_BuiltinErrorTraitSubIdentExprModel &_Src) { return !this->operator==(_Src); }
};


struct _10e9ca470_SizeofExprModel {
	jule::Ref<_10e9ca470_SizeofExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_10e9ca470_SizeofExprModel(jule::Any __param_expr)   {
		this->self = jule::Ref<_10e9ca470_SizeofExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_10e9ca470_SizeofExprModel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9ca470_SizeofExprModel(void)   { this->self = jule::Ref<_10e9ca470_SizeofExprModel>::make(this, nullptr); }

	inline bool operator==(const _10e9ca470_SizeofExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _10e9ca470_SizeofExprModel &_Src) { return !this->operator==(_Src); }
};


struct _10e9ca470_AlignofExprModel {
	jule::Ref<_10e9ca470_AlignofExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_10e9ca470_AlignofExprModel(jule::Any __param_expr)   {
		this->self = jule::Ref<_10e9ca470_AlignofExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_10e9ca470_AlignofExprModel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9ca470_AlignofExprModel(void)   { this->self = jule::Ref<_10e9ca470_AlignofExprModel>::make(this, nullptr); }

	inline bool operator==(const _10e9ca470_AlignofExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _10e9ca470_AlignofExprModel &_Src) { return !this->operator==(_Src); }
};


struct _10e9ca470_RuneExprModel {
	jule::Ref<_10e9ca470_RuneExprModel> self{};

	jule::I32 _field_code{jule::I32()};


	_10e9ca470_RuneExprModel(jule::I32 __param_code)   {
		this->self = jule::Ref<_10e9ca470_RuneExprModel>::make(this, nullptr);

		this->_field_code = __param_code;
	}

	~_10e9ca470_RuneExprModel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9ca470_RuneExprModel(void)   { this->self = jule::Ref<_10e9ca470_RuneExprModel>::make(this, nullptr); }

	inline bool operator==(const _10e9ca470_RuneExprModel &_Src) {
		return 
			this->_field_code == _Src._field_code;
	}

	inline bool operator!=(const _10e9ca470_RuneExprModel &_Src) { return !this->operator==(_Src); }
};


struct _10e9ca470_ExplicitDerefExprModel {
	jule::Ref<_10e9ca470_ExplicitDerefExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_10e9ca470_ExplicitDerefExprModel(jule::Any __param_expr)   {
		this->self = jule::Ref<_10e9ca470_ExplicitDerefExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_10e9ca470_ExplicitDerefExprModel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9ca470_ExplicitDerefExprModel(void)   { this->self = jule::Ref<_10e9ca470_ExplicitDerefExprModel>::make(this, nullptr); }

	inline bool operator==(const _10e9ca470_ExplicitDerefExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _10e9ca470_ExplicitDerefExprModel &_Src) { return !this->operator==(_Src); }
};


struct _10e9b6a10_Package: public _10f3df410_Lookup {
	jule::Ref<_10e9b6a10_Package> self{};

	jule::Slice<jule::Ref<_10ee5c510_SymbolTable>> _field_files{jule::Slice<jule::Ref<_10ee5c510_SymbolTable>>()};


	_10e9b6a10_Package(jule::Slice<jule::Ref<_10ee5c510_SymbolTable>> __param_files)   {
		this->self = jule::Ref<_10e9b6a10_Package>::make(this, nullptr);

		this->_field_files = __param_files;
	}

	~_10e9b6a10_Package(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9b6a10_Package(void)   { this->self = jule::Ref<_10e9b6a10_Package>::make(this, nullptr); }

	inline jule::Ref<_10e9b6a10_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_10e9b6a10_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_10e9b6a10_ImportInfo>)>);


	inline jule::Ref<_10ebc2ad0_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_10eeb79b0_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_10e3fc8f0_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_10e56a140_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_10e3d6eb0_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_10e975f00_Enum> _method_find_enum(jule::Str);


	inline bool operator==(const _10e9b6a10_Package &_Src) {
		return 
			this->_field_files == _Src._field_files;
	}

	inline bool operator!=(const _10e9b6a10_Package &_Src) { return !this->operator==(_Src); }
};


struct _10e9847f0_Sema: public _10f3df410_Lookup {
	jule::Ref<_10e9847f0_Sema> self{};

	jule::Slice<_13cfd2d20_Log> _field_errors{jule::Slice<_13cfd2d20_Log>()};
	jule::Slice<jule::Ref<_10ee5c510_SymbolTable>> _field_files{jule::Slice<jule::Ref<_10ee5c510_SymbolTable>>()};
	jule::Ref<_10ee5c510_SymbolTable> _field_file{jule::Ref<_10ee5c510_SymbolTable>()};


	_10e9847f0_Sema(jule::Slice<_13cfd2d20_Log> __param_errors, jule::Slice<jule::Ref<_10ee5c510_SymbolTable>> __param_files, jule::Ref<_10ee5c510_SymbolTable> __param_file)   {
		this->self = jule::Ref<_10e9847f0_Sema>::make(this, nullptr);

		this->_field_errors = __param_errors;
		this->_field_files = __param_files;
		this->_field_file = __param_file;
	}

	~_10e9847f0_Sema(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9847f0_Sema(void)   { this->self = jule::Ref<_10e9847f0_Sema>::make(this, nullptr); }

	inline jule::Ref<_10e9b6a10_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_10e9b6a10_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_10e9b6a10_ImportInfo>)>);


	inline jule::Ref<_10ebc2ad0_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_10eeb79b0_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_10e3fc8f0_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_10e56a140_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_10e3d6eb0_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_10e975f00_Enum> _method_find_enum(jule::Str);


	inline void _method_set_current_file(jule::Ref<_10ee5c510_SymbolTable>);


	inline void _method_push_err(_11ce22a00_Token,jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_is_accessible_define(jule::Bool,_11ce22a00_Token);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str,jule::Bool);


	inline jule::Bool _method_check_generic_quantity(jule::Int,jule::Int,_11ce22a00_Token);


	inline jule::Bool _method_is_duplicated_import_selection(jule::Uintptr,jule::Str);


	inline void _method_check_import_selections(jule::Ref<_10e9b6a10_ImportInfo>);


	inline jule::Bool _method_check_import(jule::Ref<_10e9b6a10_ImportInfo>);


	inline void _method_check_imports(void);


	inline void _method_impl_file_impls(void);


	inline void _method_impl_impls(void);


	inline void _method_check_enums(void);


	inline jule::Bool _method_check_type_with_refers(jule::Ref<_10eeb79b0_TypeSymbol>,jule::Trait<_10f3df410_Lookup>,jule::Ref<_10eeb79b0_Referencer>);


	inline jule::Bool _method_check_type(jule::Ref<_10eeb79b0_TypeSymbol>,jule::Trait<_10f3df410_Lookup>);


	inline jule::Ref<_10eeb79b0_TypeKind> _method_build_type_with_generics(jule::Ref<_11ce1fd50_TypeDecl>,jule::Slice<jule::Ref<_10eeb79b0_TypeAlias>>);


	inline jule::Ref<_10eeb79b0_TypeKind> _method_build_type(jule::Ref<_11ce1fd50_TypeDecl>);


	inline jule::Ref<_10ee8a260_Data> _method_evalpd(jule::Ref<_11ce1fd50_Expr>,jule::Trait<_10f3df410_Lookup>,jule::Ref<_10eeb79b0_TypeKind>,jule::Ref<_10ebc2ad0_Var>);


	inline jule::Ref<_10ee8a260_Data> _method_evalp(jule::Ref<_11ce1fd50_Expr>,jule::Trait<_10f3df410_Lookup>,jule::Ref<_10eeb79b0_TypeKind>);


	inline jule::Ref<_10ee8a260_Data> _method_eval(jule::Ref<_11ce1fd50_Expr>,jule::Trait<_10f3df410_Lookup>);


	inline void _method_check_assign_type(jule::Ref<_10eeb79b0_TypeKind>,jule::Ref<_10ee8a260_Data>,_11ce22a00_Token,jule::Bool);


	inline jule::Bool _method_check_type_compatibility(jule::Ref<_10eeb79b0_TypeKind>,jule::Ref<_10eeb79b0_TypeKind>,_11ce22a00_Token,jule::Bool);


	inline jule::Ref<_10eeb79b0_TypeKind> _method_build_non_generic_type_kind(jule::Ref<_11ce1fd50_TypeDecl>,jule::Slice<jule::Ref<_11ce1fd50_GenericDecl>>);


	inline void _method_build_fn_non_generic_type_kinds(jule::Ref<_10e56a140_FnIns>);


	inline jule::Ref<_10e56a140_FnIns> _method_get_trait_check_fn_kind(jule::Ref<_10e56a140_Fn>);


	inline jule::Bool _method_reload_fn_ins_types(jule::Ref<_10e56a140_FnIns>);


	inline void _method_check_validity_for_init_expr(jule::Bool,jule::Bool,jule::Ref<_10eeb79b0_TypeKind>,jule::Ref<_10ee8a260_Data>,_11ce22a00_Token);


	inline jule::Bool _method_check_type_alias_decl_kind(jule::Ref<_10eeb79b0_TypeAlias>,jule::Trait<_10f3df410_Lookup>);


	inline void _method_check_type_alias_decl(jule::Ref<_10eeb79b0_TypeAlias>,jule::Trait<_10f3df410_Lookup>);


	inline void _method_check_type_alias_decl_dup(jule::Ref<_10eeb79b0_TypeAlias>);


	inline jule::Bool _method_check_type_alias_decls(void);


	inline void _method_check_enum_items_dup(jule::Ref<_10e975f00_Enum>);


	inline void _method_check_enum_items_str(jule::Ref<_10e975f00_Enum>);


	inline void _method_check_enum_items_int(jule::Ref<_10e975f00_Enum>);


	inline void _method_check_enum_decl(jule::Ref<_10e975f00_Enum>);


	inline jule::Bool _method_check_enum_decls(void);


	inline jule::Bool _method_check_decl_generics(jule::Slice<jule::Ref<_11ce1fd50_GenericDecl>>);


	inline jule::Bool _method_check_fn_decl_params_dup(jule::Ref<_10e56a140_Fn>);


	inline jule::Bool _method_check_fn_decl_result_dup(jule::Ref<_10e56a140_Fn>);


	inline jule::Bool _method_check_fn_decl_types(jule::Ref<_10e56a140_Fn>);


	inline jule::Bool _method_check_fn_decl_prototype(jule::Ref<_10e56a140_Fn>);


	inline void _method_check_trait_decl_method(jule::Ref<_10e56a140_Fn>);


	inline void _method_check_trait_decl_methods(jule::Ref<_10e3d6eb0_Trait>);


	inline void _method_check_trait_decl(jule::Ref<_10e3d6eb0_Trait>);


	inline jule::Bool _method_check_trait_decls(void);


	inline jule::Bool _method_check_trait_impl_methods(jule::Ref<_10e3d6eb0_Trait>,jule::Ref<_10e97d820_Impl>);


	inline jule::Bool _method_impl_to_struct(jule::Ref<_10e3fc8f0_Struct>,jule::Ref<_10e97d820_Impl>);


	inline void _method_impl_trait(jule::Ref<_10e97d820_Impl>);


	inline void _method_impl_struct(jule::Ref<_10e97d820_Impl>);


	inline void _method_impl_impl(jule::Ref<_10e97d820_Impl>);


	inline void _method_check_var_decl(jule::Ref<_10ebc2ad0_Var>,jule::Trait<_10f3df410_Lookup>);


	inline void _method_check_global_var_decl(jule::Ref<_10ebc2ad0_Var>);


	inline jule::Bool _method_check_global_decls(void);


	inline jule::Bool _method_check_struct_trait_impl(jule::Ref<_10e3fc8f0_Struct>,jule::Ref<_10e3d6eb0_Trait>);


	inline jule::Bool _method_check_struct_impls(jule::Ref<_10e3fc8f0_Struct>);


	inline jule::Bool _method_check_struct_fields(jule::Ref<_10e3fc8f0_Struct>);


	inline void _method_check_struct_decl(jule::Ref<_10e3fc8f0_Struct>);


	inline jule::Bool _method_check_struct_decls(void);


	inline void _method_check_fn_decl(jule::Ref<_10e56a140_Fn>);


	inline jule::Bool _method_check_fn_decls(void);


	inline jule::Bool _method_check_directive_pass(_10e8ca650_Pass);


	inline jule::Bool _method_check_passes(void);


	inline jule::Bool _method_check_struct_derive_illegal_cycles(jule::Str,jule::Ref<_10e3fc8f0_Struct>,jule::Ref<_10eeb79b0_TypeKind>);


	inline jule::Bool _method_check_struct_ins_derive_clone(jule::Ref<_10e3fc8f0_StructIns>);


	inline jule::Bool _method_check_struct_derive_clone(jule::Ref<_10e3fc8f0_Struct>);


	inline jule::Bool _method_check_file_derives(void);


	inline void _method_check_package_derives(void);


	inline void _method_check_package_decls(void);


	inline void _method_check_data_for_auto_type(jule::Ref<_10ee8a260_Data>,_11ce22a00_Token);


	inline void _method_check_var(jule::Ref<_10ebc2ad0_Var>);


	inline void _method_check_type_var(jule::Ref<_10ebc2ad0_Var>,jule::Trait<_10f3df410_Lookup>);


	inline void _method_check_global_types(void);


	inline void _method_check_type_method(jule::Ref<_10e3fc8f0_StructIns>,jule::Ref<_10e56a140_Fn>);


	inline void _method_check_type_struct(jule::Ref<_10e3fc8f0_Struct>);


	inline void _method_check_struct_types(void);


	inline void _method_check_rets(jule::Ref<_10e56a140_FnIns>);


	inline void _method_check_fn_ins_sc(jule::Ref<_10e56a140_FnIns>,jule::Ref<_10e97fcf0_ScopeChecker>);


	inline void _method_check_fn_ins(jule::Ref<_10e56a140_FnIns>);


	inline void _method_check_type_fn(jule::Ref<_10e56a140_Fn>);


	inline void _method_precheck_type_fn(jule::Ref<_10e56a140_Fn>);


	inline jule::Bool _method_precheck_fn_types(void);


	inline jule::Bool _method_check_fn_types(void);


	inline void _method_check_package_types(void);


	inline void _method_set_file_sema_fields(void);


	inline void _method_set_sema_fields(void);


	inline void _method_check(jule::Slice<jule::Ref<_10ee5c510_SymbolTable>>);


	inline bool operator==(const _10e9847f0_Sema &_Src) {
		return 
			this->_field_errors == _Src._field_errors &&
			this->_field_files == _Src._field_files &&
			this->_field_file == _Src._field_file;
	}

	inline bool operator!=(const _10e9847f0_Sema &_Src) { return !this->operator==(_Src); }
};


struct _10eb9c740_DynamicTypeAnnotation {
	jule::Ref<_10eb9c740_DynamicTypeAnnotation> self{};

	jule::Ref<_10ee8a260_Eval> _field_e{jule::Ref<_10ee8a260_Eval>()};
	jule::Ref<_10e56a140_FnIns> _field_f{jule::Ref<_10e56a140_FnIns>()};
	jule::Ref<_10e56a140_ParamIns> _field_p{jule::Ref<_10e56a140_ParamIns>()};
	jule::Ref<_10ee8a260_Data> _field_a{jule::Ref<_10ee8a260_Data>()};
	_11ce22a00_Token _field_error_token{_11ce22a00_Token()};
	_10eeb79b0_TypeKind** _field_k{nullptr};


	_10eb9c740_DynamicTypeAnnotation(jule::Ref<_10ee8a260_Eval> __param_e, jule::Ref<_10e56a140_FnIns> __param_f, jule::Ref<_10e56a140_ParamIns> __param_p, jule::Ref<_10ee8a260_Data> __param_a, _11ce22a00_Token __param_error_token, _10eeb79b0_TypeKind** __param_k)   {
		this->self = jule::Ref<_10eb9c740_DynamicTypeAnnotation>::make(this, nullptr);

		this->_field_e = __param_e;
		this->_field_f = __param_f;
		this->_field_p = __param_p;
		this->_field_a = __param_a;
		this->_field_error_token = __param_error_token;
		this->_field_k = __param_k;
	}

	~_10eb9c740_DynamicTypeAnnotation(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10eb9c740_DynamicTypeAnnotation(void)   { this->self = jule::Ref<_10eb9c740_DynamicTypeAnnotation>::make(this, nullptr); }

	inline void _method_push_generic(jule::Ref<_10eeb79b0_TypeKind>,jule::Int);


	inline jule::Bool _method_annotate_prim(jule::Ref<_10eeb79b0_TypeKind>);


	inline jule::Bool _method_annotate_slc(jule::Ref<_10eeb79b0_TypeKind>);


	inline jule::Bool _method_annotate_map(jule::Ref<_10eeb79b0_TypeKind>);


	inline jule::Bool _method_annotate_fn(jule::Ref<_10eeb79b0_TypeKind>);


	inline jule::Bool _method_annotate_ptr(jule::Ref<_10eeb79b0_TypeKind>);


	inline jule::Bool _method_annotate_any(jule::Ref<_10eeb79b0_TypeKind>);


	inline jule::Bool _method_annotate_kind(jule::Ref<_10eeb79b0_TypeKind>);


	inline jule::Bool _method_annotate(void);


	inline bool operator==(const _10eb9c740_DynamicTypeAnnotation &_Src) {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_f == _Src._field_f &&
			this->_field_p == _Src._field_p &&
			this->_field_a == _Src._field_a &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_k == _Src._field_k;
	}

	inline bool operator!=(const _10eb9c740_DynamicTypeAnnotation &_Src) { return !this->operator==(_Src); }
};


struct _10eb9c740_StructLitChecker {
	jule::Ref<_10eb9c740_StructLitChecker> self{};

	jule::Ref<_10ee8a260_Eval> _field_e{jule::Ref<_10ee8a260_Eval>()};
	_11ce22a00_Token _field_error_token{_11ce22a00_Token()};
	jule::Ref<_10e3fc8f0_StructIns> _field_s{jule::Ref<_10e3fc8f0_StructIns>()};
	jule::Slice<jule::Ref<_10e9ca470_StructArgExprModel>> _field_args{jule::Slice<jule::Ref<_10e9ca470_StructArgExprModel>>()};


	_10eb9c740_StructLitChecker(jule::Ref<_10ee8a260_Eval> __param_e, _11ce22a00_Token __param_error_token, jule::Ref<_10e3fc8f0_StructIns> __param_s, jule::Slice<jule::Ref<_10e9ca470_StructArgExprModel>> __param_args)   {
		this->self = jule::Ref<_10eb9c740_StructLitChecker>::make(this, nullptr);

		this->_field_e = __param_e;
		this->_field_error_token = __param_error_token;
		this->_field_s = __param_s;
		this->_field_args = __param_args;
	}

	~_10eb9c740_StructLitChecker(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10eb9c740_StructLitChecker(void)   { this->self = jule::Ref<_10eb9c740_StructLitChecker>::make(this, nullptr); }

	inline void _method_push_err(_11ce22a00_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_match(jule::Ref<_10e3fc8f0_FieldIns>,jule::Ref<_10ee8a260_Data>,_11ce22a00_Token);


	inline void _method_check_pair(jule::Ref<_11ce1fd50_FieldExprPair>,jule::Slice<jule::Any>);


	inline jule::Bool _method_ready_exprs(jule::Slice<jule::Any>);


	inline void _method_check(jule::Slice<jule::Any>);


	inline bool operator==(const _10eb9c740_StructLitChecker &_Src) {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_s == _Src._field_s &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _10eb9c740_StructLitChecker &_Src) { return !this->operator==(_Src); }
};


struct _10eb9c740_RangeChecker {
	jule::Ref<_10eb9c740_RangeChecker> self{};

	jule::Ref<_10e97fcf0_ScopeChecker> _field_sc{jule::Ref<_10e97fcf0_ScopeChecker>()};
	jule::Ref<_11ce1fd50_RangeKind> _field_rang{jule::Ref<_11ce1fd50_RangeKind>()};
	jule::Ref<_10e97fcf0_RangeIter> _field_kind{jule::Ref<_10e97fcf0_RangeIter>()};
	jule::Ref<_10ee8a260_Data> _field_d{jule::Ref<_10ee8a260_Data>()};


	_10eb9c740_RangeChecker(jule::Ref<_10e97fcf0_ScopeChecker> __param_sc, jule::Ref<_11ce1fd50_RangeKind> __param_rang, jule::Ref<_10e97fcf0_RangeIter> __param_kind, jule::Ref<_10ee8a260_Data> __param_d)   {
		this->self = jule::Ref<_10eb9c740_RangeChecker>::make(this, nullptr);

		this->_field_sc = __param_sc;
		this->_field_rang = __param_rang;
		this->_field_kind = __param_kind;
		this->_field_d = __param_d;
	}

	~_10eb9c740_RangeChecker(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10eb9c740_RangeChecker(void)   { this->self = jule::Ref<_10eb9c740_RangeChecker>::make(this, nullptr); }

	inline jule::Ref<_10ebc2ad0_Var> _method_build_var(jule::Ref<_11ce1fd50_VarDecl>);


	inline void _method_set_size_key(void);


	inline void _method_check_slice(void);


	inline void _method_check_array(void);


	inline void _method_check_map_key_a(void);


	inline void _method_check_map_key_b(void);


	inline void _method_check_map(void);


	inline void _method_check_str(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _10eb9c740_RangeChecker &_Src) {
		return 
			this->_field_sc == _Src._field_sc &&
			this->_field_rang == _Src._field_rang &&
			this->_field_kind == _Src._field_kind &&
			this->_field_d == _Src._field_d;
	}

	inline bool operator!=(const _10eb9c740_RangeChecker &_Src) { return !this->operator==(_Src); }
};


struct _10ee8a260_Data {
	jule::Ref<_10ee8a260_Data> self{};

	jule::Ref<_10eeb79b0_TypeKind> _field_kind{jule::Ref<_10eeb79b0_TypeKind>()};
	jule::Ref<_10eeb79b0_TypeKind> _field_cast_kind{jule::Ref<_10eeb79b0_TypeKind>()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Bool _field_lvalue{jule::Bool()};
	jule::Bool _field_variadiced{jule::Bool()};
	jule::Bool _field_is_rune{jule::Bool()};
	jule::Any _field_model{jule::Any()};
	jule::Bool _field_decl{jule::Bool()};
	jule::Ref<_10f4ed830_Const> _field_constant{jule::Ref<_10f4ed830_Const>()};


	_10ee8a260_Data(jule::Ref<_10eeb79b0_TypeKind> __param_kind, jule::Ref<_10eeb79b0_TypeKind> __param_cast_kind, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Bool __param_lvalue, jule::Bool __param_variadiced, jule::Bool __param_is_rune, jule::Any __param_model, jule::Bool __param_decl, jule::Ref<_10f4ed830_Const> __param_constant)   {
		this->self = jule::Ref<_10ee8a260_Data>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_cast_kind = __param_cast_kind;
		this->_field_mutable = __param_mutable;
		this->_field_reference = __param_reference;
		this->_field_lvalue = __param_lvalue;
		this->_field_variadiced = __param_variadiced;
		this->_field_is_rune = __param_is_rune;
		this->_field_model = __param_model;
		this->_field_decl = __param_decl;
		this->_field_constant = __param_constant;
	}

	~_10ee8a260_Data(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10ee8a260_Data(void)   { this->self = jule::Ref<_10ee8a260_Data>::make(this, nullptr); }

	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_is_void(void);


	inline jule::Bool _method_is_const(void);


	inline bool operator==(const _10ee8a260_Data &_Src) {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_cast_kind == _Src._field_cast_kind &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_reference == _Src._field_reference &&
			this->_field_lvalue == _Src._field_lvalue &&
			this->_field_variadiced == _Src._field_variadiced &&
			this->_field_is_rune == _Src._field_is_rune &&
			this->_field_model == _Src._field_model &&
			this->_field_decl == _Src._field_decl &&
			this->_field_constant == _Src._field_constant;
	}

	inline bool operator!=(const _10ee8a260_Data &_Src) { return !this->operator==(_Src); }
};


struct _10ee8a260_Value {
	jule::Ref<_10ee8a260_Value> self{};

	jule::Ref<_11ce1fd50_Expr> _field_expr{jule::Ref<_11ce1fd50_Expr>()};
	jule::Ref<_10ee8a260_Data> _field_data{jule::Ref<_10ee8a260_Data>()};


	_10ee8a260_Value(jule::Ref<_11ce1fd50_Expr> __param_expr, jule::Ref<_10ee8a260_Data> __param_data)   {
		this->self = jule::Ref<_10ee8a260_Value>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_data = __param_data;
	}

	~_10ee8a260_Value(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10ee8a260_Value(void)   { this->self = jule::Ref<_10ee8a260_Value>::make(this, nullptr); }

	inline bool operator==(const _10ee8a260_Value &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _10ee8a260_Value &_Src) { return !this->operator==(_Src); }
};


struct _10ee8a260_Eval {
	jule::Ref<_10ee8a260_Eval> self{};

	jule::Ref<_10e9847f0_Sema> _field_s{jule::Ref<_10e9847f0_Sema>()};
	jule::Trait<_10f3df410_Lookup> _field_lookup{jule::Trait<_10f3df410_Lookup>()};
	jule::Ref<_10eeb79b0_TypeKind> _field_prefix{jule::Ref<_10eeb79b0_TypeKind>()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Ref<_10ebc2ad0_Var> _field_owner{jule::Ref<_10ebc2ad0_Var>()};


	_10ee8a260_Eval(jule::Ref<_10e9847f0_Sema> __param_s, jule::Trait<_10f3df410_Lookup> __param_lookup, jule::Ref<_10eeb79b0_TypeKind> __param_prefix, jule::Bool __param_unsafety, jule::Ref<_10ebc2ad0_Var> __param_owner)   {
		this->self = jule::Ref<_10ee8a260_Eval>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_lookup = __param_lookup;
		this->_field_prefix = __param_prefix;
		this->_field_unsafety = __param_unsafety;
		this->_field_owner = __param_owner;
	}

	~_10ee8a260_Eval(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10ee8a260_Eval(void)   { this->self = jule::Ref<_10ee8a260_Eval>::make(this, nullptr); }

	inline void _method_push_err(_11ce22a00_Token,jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_is_unsafe(void);


	inline jule::Bool _method_is_global(void);


	inline jule::Ref<_10ee8a260_Data> _method_lit_nil(void);


	inline jule::Ref<_10ee8a260_Data> _method_lit_str(jule::Ref<_11ce1fd50_LitExpr>);


	inline jule::Ref<_10ee8a260_Data> _method_lit_bool(jule::Ref<_11ce1fd50_LitExpr>);


	inline jule::Ref<_10ee8a260_Data> _method_lit_rune(jule::Ref<_11ce1fd50_LitExpr>);


	inline jule::Ref<_10ee8a260_Data> _method_lit_float(jule::Ref<_11ce1fd50_LitExpr>);


	inline jule::Ref<_10ee8a260_Data> _method_lit_int(jule::Ref<_11ce1fd50_LitExpr>);


	inline jule::Ref<_10ee8a260_Data> _method_lit_num(jule::Ref<_11ce1fd50_LitExpr>);


	inline jule::Ref<_10ee8a260_Data> _method_eval_lit(jule::Ref<_11ce1fd50_LitExpr>);


	inline jule::Any _method_find_builtins(jule::Str);


	inline jule::Any _method_get_def(jule::Str,jule::Bool);


	inline void _method_push_reference(jule::Ref<_10e8ca650_ReferenceStack>);


	inline void _method_push_reference_to_fn(jule::Ref<_10e56a140_Fn>);


	inline void _method_push_reference_to_var(jule::Ref<_10ebc2ad0_Var>);


	inline void _method_push_reference_to_struct(jule::Ref<_10e3fc8f0_Struct>);


	inline jule::Ref<_10ee8a260_Data> _method_eval_enum(jule::Ref<_10e975f00_Enum>,_11ce22a00_Token);


	inline jule::Ref<_10ee8a260_Data> _method_eval_struct(jule::Ref<_10e3fc8f0_StructIns>,_11ce22a00_Token);


	inline jule::Ref<_10ee8a260_Data> _method_eval_fn_ins(jule::Ref<_10e56a140_FnIns>);


	inline jule::Ref<_10ee8a260_Data> _method_eval_fn(jule::Ref<_10e56a140_Fn>,_11ce22a00_Token);


	inline jule::Bool _method_check_illegal_cycles(jule::Ref<_10ebc2ad0_Var>,_11ce22a00_Token);


	inline jule::Ref<_10ee8a260_Data> _method_eval_var(jule::Ref<_10ebc2ad0_Var>,_11ce22a00_Token);


	inline jule::Ref<_10ee8a260_Data> _method_eval_type_alias(jule::Ref<_10eeb79b0_TypeAlias>,_11ce22a00_Token);


	inline jule::Ref<_10ee8a260_Data> _method_eval_def(jule::Any,_11ce22a00_Token);


	inline jule::Ref<_10ee8a260_Data> _method_eval_ident(jule::Ref<_11ce1fd50_IdentExpr>);


	inline jule::Ref<_10ee8a260_Data> _method_eval_unary_minus(jule::Ref<_10ee8a260_Data>);


	inline jule::Ref<_10ee8a260_Data> _method_eval_unary_plus(jule::Ref<_10ee8a260_Data>);


	inline jule::Ref<_10ee8a260_Data> _method_eval_unary_caret(jule::Ref<_10ee8a260_Data>);


	inline jule::Ref<_10ee8a260_Data> _method_eval_unary_excl(jule::Ref<_10ee8a260_Data>);


	inline jule::Ref<_10ee8a260_Data> _method_eval_unary_star(jule::Ref<_10ee8a260_Data>,_11ce22a00_Token);


	inline jule::Ref<_10ee8a260_Data> _method_eval_unary_amper(jule::Ref<_10ee8a260_Data>);


	inline jule::Ref<_10ee8a260_Data> _method_eval_unary_type_decl(jule::Ref<_10ee8a260_Data>,jule::Ref<_11ce1fd50_UnaryExpr>);


	inline jule::Ref<_10ee8a260_Data> _method_eval_unary(jule::Ref<_11ce1fd50_UnaryExpr>);


	inline jule::Ref<_10ee8a260_Data> _method_eval_variadic(jule::Ref<_11ce1fd50_VariadicExpr>);


	inline jule::Ref<_10ee8a260_Data> _method_eval_unsafe(jule::Ref<_11ce1fd50_UnsafeExpr>);


	inline jule::Ref<_10ee8a260_Data> _method_eval_arr(jule::Ref<_11ce1fd50_SliceExpr>);


	inline jule::Ref<_10ee8a260_Data> _method_eval_exp_slc(jule::Ref<_11ce1fd50_SliceExpr>,jule::Ref<_10eeb79b0_TypeKind>);


	inline jule::Ref<_10ee8a260_Data> _method_eval_slice_expr(jule::Ref<_11ce1fd50_SliceExpr>);


	inline void _method_check_integer_indexing_by_data(jule::Ref<_10ee8a260_Data>,_11ce22a00_Token);


	inline void _method_indexing_ptr(jule::Ref<_10ee8a260_Data>,jule::Ref<_10ee8a260_Data>,jule::Ref<_11ce1fd50_IndexingExpr>);


	inline void _method_indexing_arr(jule::Ref<_10ee8a260_Data>,jule::Ref<_10ee8a260_Data>,jule::Ref<_11ce1fd50_IndexingExpr>);


	inline void _method_indexing_slc(jule::Ref<_10ee8a260_Data>,jule::Ref<_10ee8a260_Data>,jule::Ref<_11ce1fd50_IndexingExpr>);


	inline void _method_indexing_map(jule::Ref<_10ee8a260_Data>,jule::Ref<_10ee8a260_Data>,jule::Ref<_11ce1fd50_IndexingExpr>);


	inline void _method_indexing_str(jule::Ref<_10ee8a260_Data>,jule::Ref<_10ee8a260_Data>,jule::Ref<_11ce1fd50_IndexingExpr>);


	inline void _method_to_indexing(jule::Ref<_10ee8a260_Data>,jule::Ref<_10ee8a260_Data>,jule::Ref<_11ce1fd50_IndexingExpr>);


	inline jule::Ref<_10ee8a260_Data> _method_eval_ident_decl_from_indexing(jule::Ref<_11ce1fd50_IndexingExpr>);


	inline jule::Ref<_10ee8a260_Data> _method_eval_indexing(jule::Ref<_11ce1fd50_IndexingExpr>);


	inline std::tuple<jule::Ref<_10ee8a260_Data>,jule::Ref<_10ee8a260_Data>> _method_eval_slicing_exprs(jule::Ref<_11ce1fd50_SlicingExpr>);


	inline void _method_slicing_arr(jule::Ref<_10ee8a260_Data>);


	inline void _method_slicing_slc(jule::Ref<_10ee8a260_Data>);


	inline void _method_slicing_str(jule::Ref<_10ee8a260_Data>,jule::Ref<_10ee8a260_Data>,jule::Ref<_10ee8a260_Data>);


	inline void _method_check_slicing(jule::Ref<_10ee8a260_Data>,jule::Ref<_10ee8a260_Data>,jule::Ref<_10ee8a260_Data>,jule::Ref<_11ce1fd50_SlicingExpr>);


	inline jule::Ref<_10ee8a260_Data> _method_eval_slicing(jule::Ref<_11ce1fd50_SlicingExpr>);


	inline void _method_cast_ptr(jule::Ref<_10eeb79b0_TypeKind>,jule::Ref<_10ee8a260_Data>,_11ce22a00_Token);


	inline void _method_cast_struct(jule::Ref<_10eeb79b0_TypeKind>,jule::Ref<_10ee8a260_Data>,_11ce22a00_Token);


	inline void _method_cast_ref(jule::Ref<_10eeb79b0_TypeKind>,jule::Ref<_10ee8a260_Data>,_11ce22a00_Token);


	inline void _method_cast_slc(jule::Ref<_10eeb79b0_TypeKind>,jule::Ref<_10ee8a260_Data>,_11ce22a00_Token);


	inline void _method_cast_str(jule::Ref<_10ee8a260_Data>,_11ce22a00_Token);


	inline void _method_cast_int(jule::Ref<_10eeb79b0_TypeKind>,jule::Ref<_10ee8a260_Data>,_11ce22a00_Token);


	inline void _method_cast_num(jule::Ref<_10eeb79b0_TypeKind>,jule::Ref<_10ee8a260_Data>,_11ce22a00_Token);


	inline void _method_cast_prim(jule::Ref<_10eeb79b0_TypeKind>,jule::Ref<_10ee8a260_Data>,_11ce22a00_Token);


	inline jule::Ref<_10ee8a260_Data> _method_eval_cast_by_type_n_data(jule::Ref<_10eeb79b0_TypeKind>,jule::Ref<_10ee8a260_Data>,_11ce22a00_Token);


	inline jule::Ref<_10ee8a260_Data> _method_eval_cast(jule::Ref<_11ce1fd50_CastExpr>);


	inline jule::Ref<_10ee8a260_Data> _method_eval_ns_selection(jule::Ref<_11ce1fd50_NsSelectionExpr>);


	inline jule::Ref<_10ee8a260_Data> _method_eval_struct_lit_explicit(jule::Ref<_10e3fc8f0_StructIns>,jule::Slice<jule::Any>,_11ce22a00_Token);


	inline jule::Ref<_10ee8a260_Data> _method_eval_struct_lit(jule::Ref<_11ce1fd50_StructLit>);


	inline jule::Ref<_10ee8a260_Data> _method_eval_type(jule::Ref<_11ce1fd50_TypeDecl>);


	inline jule::Ref<_10ee8a260_Data> _method_call_type_fn(jule::Ref<_11ce1fd50_FnCallExpr>,jule::Ref<_10ee8a260_Data>);


	inline std::tuple<jule::Bool,jule::Bool> _method_check_fn_call_generics(jule::Ref<_10e56a140_FnIns>,jule::Ref<_11ce1fd50_FnCallExpr>);


	inline jule::Ref<_10ee8a260_Data> _method_call_builtin_fn(jule::Ref<_11ce1fd50_FnCallExpr>,jule::Ref<_10ee8a260_Data>);


	inline jule::Ref<_10ee8a260_Data> _method_call_fn(jule::Ref<_11ce1fd50_FnCallExpr>,jule::Ref<_10ee8a260_Data>);


	inline jule::Ref<_10ee8a260_Data> _method_eval_fn_call(jule::Ref<_11ce1fd50_FnCallExpr>);


	inline jule::Ref<_10ee8a260_Data> _method_eval_enum_static(jule::Ref<_10e975f00_Enum>,_11ce22a00_Token);


	inline jule::Ref<_10ee8a260_Data> _method_eval_struct_static(jule::Ref<_10e3fc8f0_StructIns>,_11ce22a00_Token);


	inline jule::Ref<_10ee8a260_Data> _method_eval_trait_sub_ident(jule::Ref<_10ee8a260_Data>,jule::Ref<_10e3d6eb0_Trait>,_11ce22a00_Token);


	inline jule::Ref<_10ee8a260_Data> _method_eval_struct_sub_ident(jule::Ref<_10ee8a260_Data>,jule::Ref<_10e3fc8f0_StructIns>,jule::Ref<_11ce1fd50_SubIdentExpr>,jule::Bool);


	inline jule::Ref<_10ee8a260_Data> _method_eval_slice_sub_ident(jule::Ref<_10ee8a260_Data>,_11ce22a00_Token);


	inline jule::Ref<_10ee8a260_Data> _method_eval_array_sub_ident(jule::Ref<_10ee8a260_Data>,_11ce22a00_Token);


	inline jule::Ref<_10ee8a260_Data> _method_eval_map_sub_ident(jule::Ref<_10ee8a260_Data>,_11ce22a00_Token);


	inline jule::Ref<_10ee8a260_Data> _method_eval_str_sub_ident(jule::Ref<_10ee8a260_Data>,_11ce22a00_Token);


	inline jule::Ref<_10ee8a260_Data> _method_eval_int_type_static(_11ce22a00_Token);


	inline jule::Ref<_10ee8a260_Data> _method_eval_uint_type_static(_11ce22a00_Token);


	inline jule::Ref<_10ee8a260_Data> _method_eval_i8_type_static(_11ce22a00_Token);


	inline jule::Ref<_10ee8a260_Data> _method_eval_i16_type_static(_11ce22a00_Token);


	inline jule::Ref<_10ee8a260_Data> _method_eval_i32_type_static(_11ce22a00_Token);


	inline jule::Ref<_10ee8a260_Data> _method_eval_i64_type_static(_11ce22a00_Token);


	inline jule::Ref<_10ee8a260_Data> _method_eval_u8_type_static(_11ce22a00_Token);


	inline jule::Ref<_10ee8a260_Data> _method_eval_u16_type_static(_11ce22a00_Token);


	inline jule::Ref<_10ee8a260_Data> _method_eval_u32_type_static(_11ce22a00_Token);


	inline jule::Ref<_10ee8a260_Data> _method_eval_u64_type_static(_11ce22a00_Token);


	inline jule::Ref<_10ee8a260_Data> _method_eval_f32_type_tatic(_11ce22a00_Token);


	inline jule::Ref<_10ee8a260_Data> _method_eval_f64_type_static(_11ce22a00_Token);


	inline jule::Ref<_10ee8a260_Data> _method_eval_prim_static(jule::Str,_11ce22a00_Token);


	inline jule::Ref<_10ee8a260_Data> _method_eval_type_static(jule::Ref<_10ee8a260_Data>,jule::Ref<_11ce1fd50_SubIdentExpr>);


	inline jule::Ref<_10ee8a260_Data> _method_eval_obj_sub_ident(jule::Ref<_10ee8a260_Data>,jule::Ref<_11ce1fd50_SubIdentExpr>);


	inline jule::Ref<_10ee8a260_Data> _method_eval_sub_ident(jule::Ref<_11ce1fd50_SubIdentExpr>);


	inline jule::Ref<_10ee8a260_Data> _method_eval_tuple(jule::Ref<_11ce1fd50_TupleExpr>);


	inline jule::Ref<_10ee8a260_Data> _method_eval_map(jule::Ref<_10eeb79b0_Map>,jule::Ref<_11ce1fd50_BraceLit>);


	inline jule::Ref<_10ee8a260_Data> _method_eval_brace_lit(jule::Ref<_11ce1fd50_BraceLit>);


	inline jule::Ref<_10ee8a260_Data> _method_eval_anon_fn(jule::Ref<_11ce1fd50_FnDecl>);


	inline jule::Ref<_10ee8a260_Data> _method_eval_binop(jule::Ref<_11ce1fd50_BinopExpr>);


	inline jule::Ref<_10ee8a260_Data> _method_eval_expr_kind(jule::Any);


	inline jule::Ref<_10ee8a260_Data> _method_eval(jule::Ref<_11ce1fd50_Expr>);


	inline jule::Ref<_10ee8a260_Data> _method_eval_expr(jule::Ref<_11ce1fd50_Expr>);


	inline bool operator==(const _10ee8a260_Eval &_Src) {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_lookup == _Src._field_lookup &&
			this->_field_prefix == _Src._field_prefix &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_owner == _Src._field_owner;
	}

	inline bool operator!=(const _10ee8a260_Eval &_Src) { return !this->operator==(_Src); }
};


struct _10eeb79b0_TypeKind: public _10eeb79b0_Kind {
	jule::Ref<_10eeb79b0_TypeKind> self{};

	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Str _field_cpp_ident{jule::Str()};
	jule::Trait<_10eeb79b0_Kind> _field_kind{jule::Trait<_10eeb79b0_Kind>()};


	_10eeb79b0_TypeKind(jule::Bool __param_cpp_linked, jule::Str __param_cpp_ident, jule::Trait<_10eeb79b0_Kind> __param_kind)   {
		this->self = jule::Ref<_10eeb79b0_TypeKind>::make(this, nullptr);

		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_cpp_ident = __param_cpp_ident;
		this->_field_kind = __param_kind;
	}

	~_10eeb79b0_TypeKind(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10eeb79b0_TypeKind(void)   { this->self = jule::Ref<_10eeb79b0_TypeKind>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_10eeb79b0_TypeKind>);


	inline jule::Ref<_10eeb79b0_TypeKind> _method_clone(void);


	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_is_void(void);


	inline jule::Ref<_10eeb79b0_Prim> _method_prim(void);


	inline jule::Ref<_10eeb79b0_Ref> _method_ref(void);


	inline jule::Ref<_10eeb79b0_Ptr> _method_ptr(void);


	inline jule::Ref<_10e975f00_Enum> _method_enm(void);


	inline jule::Ref<_10eeb79b0_Arr> _method_arr(void);


	inline jule::Ref<_10eeb79b0_Slc> _method_slc(void);


	inline jule::Ref<_10e56a140_FnIns> _method_fnc(void);


	inline jule::Ref<_10e3fc8f0_StructIns> _method_strct(void);


	inline jule::Ref<_10e3d6eb0_Trait> _method_trt(void);


	inline jule::Ref<_10eeb79b0_Map> _method_map(void);


	inline jule::Ref<_10eeb79b0_Tuple> _method_tup(void);


	inline bool operator==(const _10eeb79b0_TypeKind &_Src) {
		return 
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_cpp_ident == _Src._field_cpp_ident &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _10eeb79b0_TypeKind &_Src) { return !this->operator==(_Src); }
};


struct _10eeb79b0_TypeSymbol {
	jule::Ref<_10eeb79b0_TypeSymbol> self{};

	jule::Ref<_11ce1fd50_TypeDecl> _field_decl{jule::Ref<_11ce1fd50_TypeDecl>()};
	jule::Ref<_10eeb79b0_TypeKind> _field_kind{jule::Ref<_10eeb79b0_TypeKind>()};


	_10eeb79b0_TypeSymbol(jule::Ref<_11ce1fd50_TypeDecl> __param_decl, jule::Ref<_10eeb79b0_TypeKind> __param_kind)   {
		this->self = jule::Ref<_10eeb79b0_TypeSymbol>::make(this, nullptr);

		this->_field_decl = __param_decl;
		this->_field_kind = __param_kind;
	}

	~_10eeb79b0_TypeSymbol(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10eeb79b0_TypeSymbol(void)   { this->self = jule::Ref<_10eeb79b0_TypeSymbol>::make(this, nullptr); }

	inline jule::Bool _method_checked(void);


	inline void _method_remove_kind(void);


	inline bool operator==(const _10eeb79b0_TypeSymbol &_Src) {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _10eeb79b0_TypeSymbol &_Src) { return !this->operator==(_Src); }
};


struct _10eeb79b0_Prim: public _10eeb79b0_Kind {
	jule::Ref<_10eeb79b0_Prim> self{};

	jule::Str _field_kind{jule::Str()};


	_10eeb79b0_Prim(jule::Str __param_kind)   {
		this->self = jule::Ref<_10eeb79b0_Prim>::make(this, nullptr);

		this->_field_kind = __param_kind;
	}

	~_10eeb79b0_Prim(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10eeb79b0_Prim(void)   { this->self = jule::Ref<_10eeb79b0_Prim>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_10eeb79b0_TypeKind>);


	inline jule::Bool _method_is_i8(void);


	inline jule::Bool _method_is_i16(void);


	inline jule::Bool _method_is_i32(void);


	inline jule::Bool _method_is_i64(void);


	inline jule::Bool _method_is_u8(void);


	inline jule::Bool _method_is_u16(void);


	inline jule::Bool _method_is_u32(void);


	inline jule::Bool _method_is_u64(void);


	inline jule::Bool _method_is_f32(void);


	inline jule::Bool _method_is_f64(void);


	inline jule::Bool _method_is_int(void);


	inline jule::Bool _method_is_uint(void);


	inline jule::Bool _method_is_uintptr(void);


	inline jule::Bool _method_is_bool(void);


	inline jule::Bool _method_is_str(void);


	inline jule::Bool _method_is_any(void);


	inline bool operator==(const _10eeb79b0_Prim &_Src) {
		return 
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _10eeb79b0_Prim &_Src) { return !this->operator==(_Src); }
};


struct _10eeb79b0_Ref: public _10eeb79b0_Kind {
	jule::Ref<_10eeb79b0_Ref> self{};

	jule::Ref<_10eeb79b0_TypeKind> _field_elem{jule::Ref<_10eeb79b0_TypeKind>()};


	_10eeb79b0_Ref(jule::Ref<_10eeb79b0_TypeKind> __param_elem)   {
		this->self = jule::Ref<_10eeb79b0_Ref>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_10eeb79b0_Ref(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10eeb79b0_Ref(void)   { this->self = jule::Ref<_10eeb79b0_Ref>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_10eeb79b0_TypeKind>);


	inline bool operator==(const _10eeb79b0_Ref &_Src) {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _10eeb79b0_Ref &_Src) { return !this->operator==(_Src); }
};


struct _10eeb79b0_Slc: public _10eeb79b0_Kind {
	jule::Ref<_10eeb79b0_Slc> self{};

	jule::Ref<_10eeb79b0_TypeKind> _field_elem{jule::Ref<_10eeb79b0_TypeKind>()};


	_10eeb79b0_Slc(jule::Ref<_10eeb79b0_TypeKind> __param_elem)   {
		this->self = jule::Ref<_10eeb79b0_Slc>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_10eeb79b0_Slc(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10eeb79b0_Slc(void)   { this->self = jule::Ref<_10eeb79b0_Slc>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_10eeb79b0_TypeKind>);


	inline bool operator==(const _10eeb79b0_Slc &_Src) {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _10eeb79b0_Slc &_Src) { return !this->operator==(_Src); }
};


struct _10eeb79b0_Tuple: public _10eeb79b0_Kind {
	jule::Ref<_10eeb79b0_Tuple> self{};

	jule::Slice<jule::Ref<_10eeb79b0_TypeKind>> _field_types{jule::Slice<jule::Ref<_10eeb79b0_TypeKind>>()};


	_10eeb79b0_Tuple(jule::Slice<jule::Ref<_10eeb79b0_TypeKind>> __param_types)   {
		this->self = jule::Ref<_10eeb79b0_Tuple>::make(this, nullptr);

		this->_field_types = __param_types;
	}

	~_10eeb79b0_Tuple(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10eeb79b0_Tuple(void)   { this->self = jule::Ref<_10eeb79b0_Tuple>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_10eeb79b0_TypeKind>);


	inline bool operator==(const _10eeb79b0_Tuple &_Src) {
		return 
			this->_field_types == _Src._field_types;
	}

	inline bool operator!=(const _10eeb79b0_Tuple &_Src) { return !this->operator==(_Src); }
};


struct _10eeb79b0_Map: public _10eeb79b0_Kind {
	jule::Ref<_10eeb79b0_Map> self{};

	jule::Ref<_10eeb79b0_TypeKind> _field_key{jule::Ref<_10eeb79b0_TypeKind>()};
	jule::Ref<_10eeb79b0_TypeKind> _field_val{jule::Ref<_10eeb79b0_TypeKind>()};


	_10eeb79b0_Map(jule::Ref<_10eeb79b0_TypeKind> __param_key, jule::Ref<_10eeb79b0_TypeKind> __param_val)   {
		this->self = jule::Ref<_10eeb79b0_Map>::make(this, nullptr);

		this->_field_key = __param_key;
		this->_field_val = __param_val;
	}

	~_10eeb79b0_Map(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10eeb79b0_Map(void)   { this->self = jule::Ref<_10eeb79b0_Map>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_10eeb79b0_TypeKind>);


	inline bool operator==(const _10eeb79b0_Map &_Src) {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _10eeb79b0_Map &_Src) { return !this->operator==(_Src); }
};


struct _10eeb79b0_Arr: public _10eeb79b0_Kind {
	jule::Ref<_10eeb79b0_Arr> self{};

	jule::Bool _field_auto{jule::Bool()};
	jule::Int _field_n{jule::Int()};
	jule::Ref<_10eeb79b0_TypeKind> _field_elem{jule::Ref<_10eeb79b0_TypeKind>()};


	_10eeb79b0_Arr(jule::Bool __param_auto, jule::Int __param_n, jule::Ref<_10eeb79b0_TypeKind> __param_elem)   {
		this->self = jule::Ref<_10eeb79b0_Arr>::make(this, nullptr);

		this->_field_auto = __param_auto;
		this->_field_n = __param_n;
		this->_field_elem = __param_elem;
	}

	~_10eeb79b0_Arr(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10eeb79b0_Arr(void)   { this->self = jule::Ref<_10eeb79b0_Arr>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_10eeb79b0_TypeKind>);


	inline bool operator==(const _10eeb79b0_Arr &_Src) {
		return 
			this->_field_auto == _Src._field_auto &&
			this->_field_n == _Src._field_n &&
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _10eeb79b0_Arr &_Src) { return !this->operator==(_Src); }
};


struct _10eeb79b0_Ptr: public _10eeb79b0_Kind {
	jule::Ref<_10eeb79b0_Ptr> self{};

	jule::Ref<_10eeb79b0_TypeKind> _field_elem{jule::Ref<_10eeb79b0_TypeKind>()};


	_10eeb79b0_Ptr(jule::Ref<_10eeb79b0_TypeKind> __param_elem)   {
		this->self = jule::Ref<_10eeb79b0_Ptr>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_10eeb79b0_Ptr(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10eeb79b0_Ptr(void)   { this->self = jule::Ref<_10eeb79b0_Ptr>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_10eeb79b0_TypeKind>);


	inline jule::Bool _method_is_unsafe(void);


	inline bool operator==(const _10eeb79b0_Ptr &_Src) {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _10eeb79b0_Ptr &_Src) { return !this->operator==(_Src); }
};


struct _10eeb79b0_Referencer {
	jule::Ref<_10eeb79b0_Referencer> self{};

	jule::Str _field_ident{jule::Str()};
	jule::Any _field_owner{jule::Any()};
	jule::Slice<jule::Any>* _field_refs{nullptr};


	_10eeb79b0_Referencer(jule::Str __param_ident, jule::Any __param_owner, jule::Slice<jule::Any>* __param_refs)   {
		this->self = jule::Ref<_10eeb79b0_Referencer>::make(this, nullptr);

		this->_field_ident = __param_ident;
		this->_field_owner = __param_owner;
		this->_field_refs = __param_refs;
	}

	~_10eeb79b0_Referencer(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10eeb79b0_Referencer(void)   { this->self = jule::Ref<_10eeb79b0_Referencer>::make(this, nullptr); }

	inline bool operator==(const _10eeb79b0_Referencer &_Src) {
		return 
			this->_field_ident == _Src._field_ident &&
			this->_field_owner == _Src._field_owner &&
			this->_field_refs == _Src._field_refs;
	}

	inline bool operator!=(const _10eeb79b0_Referencer &_Src) { return !this->operator==(_Src); }
};


struct _12ce24da0_PlainImporter: public _10e9b6a10_Importer {
	jule::Ref<_12ce24da0_PlainImporter> self{};

	jule::Slice<jule::Ref<_10e9b6a10_ImportInfo>> _field_all_packages{jule::Slice<jule::Ref<_10e9b6a10_ImportInfo>>()};


	_12ce24da0_PlainImporter(jule::Slice<jule::Ref<_10e9b6a10_ImportInfo>> __param_all_packages)   {
		this->self = jule::Ref<_12ce24da0_PlainImporter>::make(this, nullptr);

		this->_field_all_packages = __param_all_packages;
	}

	~_12ce24da0_PlainImporter(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_12ce24da0_PlainImporter(void)   { this->self = jule::Ref<_12ce24da0_PlainImporter>::make(this, nullptr); }

	inline jule::Ref<_10e9b6a10_ImportInfo> _method_get_import(jule::Str);


	inline std::tuple<jule::Slice<jule::Ref<_11ce19be0_Ast>>,jule::Slice<_13cfd2d20_Log>> _method_import_package(jule::Str);


	inline void _method_imported(jule::Ref<_10e9b6a10_ImportInfo>);


	inline bool operator==(const _12ce24da0_PlainImporter &_Src) {
		return 
			this->_field_all_packages == _Src._field_all_packages;
	}

	inline bool operator!=(const _12ce24da0_PlainImporter &_Src) { return !this->operator==(_Src); }
};


struct _12ce09d10_IR {
	jule::Ref<_12ce09d10_IR> self{};

	jule::Slice<jule::Str> _field_passes{jule::Slice<jule::Str>()};
	jule::Ref<_10e9b6a10_Package> _field_main{jule::Ref<_10e9b6a10_Package>()};
	jule::Slice<jule::Ref<_10e9b6a10_ImportInfo>> _field_used{jule::Slice<jule::Ref<_10e9b6a10_ImportInfo>>()};


	_12ce09d10_IR(jule::Slice<jule::Str> __param_passes, jule::Ref<_10e9b6a10_Package> __param_main, jule::Slice<jule::Ref<_10e9b6a10_ImportInfo>> __param_used)   {
		this->self = jule::Ref<_12ce09d10_IR>::make(this, nullptr);

		this->_field_passes = __param_passes;
		this->_field_main = __param_main;
		this->_field_used = __param_used;
	}

	~_12ce09d10_IR(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_12ce09d10_IR(void)   { this->self = jule::Ref<_12ce09d10_IR>::make(this, nullptr); }

	inline jule::Slice<jule::Ref<_10e3fc8f0_Struct>> _method_get_all_structures(void);


	inline jule::Slice<jule::Ref<_10ebc2ad0_Var>> _method_get_all_variables(void);


	inline bool operator==(const _12ce09d10_IR &_Src) {
		return 
			this->_field_passes == _Src._field_passes &&
			this->_field_main == _Src._field_main &&
			this->_field_used == _Src._field_used;
	}

	inline bool operator!=(const _12ce09d10_IR &_Src) { return !this->operator==(_Src); }
};


struct _13cf6e710_ScopeDeadCode {
	jule::Ref<_13cf6e710_ScopeDeadCode> self{};

	jule::Ref<_13cf6e710_ScopeDeadCode> _field_parent{jule::Ref<_13cf6e710_ScopeDeadCode>()};
	jule::Ref<_10e97fcf0_Scope> _field_s{jule::Ref<_10e97fcf0_Scope>()};
	_10dba8790_Vector_8* _field_stmts{nullptr};
	jule::Int _field_i{jule::Int()};


	_13cf6e710_ScopeDeadCode(jule::Ref<_13cf6e710_ScopeDeadCode> __param_parent, jule::Ref<_10e97fcf0_Scope> __param_s, _10dba8790_Vector_8* __param_stmts, jule::Int __param_i)   {
		this->self = jule::Ref<_13cf6e710_ScopeDeadCode>::make(this, nullptr);

		this->_field_parent = __param_parent;
		this->_field_s = __param_s;
		this->_field_stmts = __param_stmts;
		this->_field_i = __param_i;
	}

	~_13cf6e710_ScopeDeadCode(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_13cf6e710_ScopeDeadCode(void)   { this->self = jule::Ref<_13cf6e710_ScopeDeadCode>::make(this, nullptr); }

	inline void _method_optimize_child(jule::Ref<_10e97fcf0_Scope>);


	inline void _method_eliminate_followed(void);


	inline void _method_optimize_stmt(jule::Any);


	inline void _method_optimize_stmts(void);


	inline bool operator==(const _13cf6e710_ScopeDeadCode &_Src) {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_s == _Src._field_s &&
			this->_field_stmts == _Src._field_stmts &&
			this->_field_i == _Src._field_i;
	}

	inline bool operator!=(const _13cf6e710_ScopeDeadCode &_Src) { return !this->operator==(_Src); }
};


struct _10e890bb0_IndexRangeSetter: public _10e890bb0_RangeSetter {
	jule::Ref<_10e890bb0_IndexRangeSetter> self{};

	~_10e890bb0_IndexRangeSetter(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e890bb0_IndexRangeSetter(void)   { this->self = jule::Ref<_10e890bb0_IndexRangeSetter>::make(this, nullptr); }

	inline jule::Str _method_setup_vars(jule::Ref<_10ebc2ad0_Var>,jule::Ref<_10ebc2ad0_Var>);


	inline jule::Str _method_next_steps(jule::Ref<_10ebc2ad0_Var>,jule::Ref<_10ebc2ad0_Var>,jule::Str);


	inline bool operator==(const _10e890bb0_IndexRangeSetter &_Src) { return true; }

	inline bool operator!=(const _10e890bb0_IndexRangeSetter &_Src) { return !this->operator==(_Src); }
};


struct _10e890bb0_MapRangeSetter: public _10e890bb0_RangeSetter {
	jule::Ref<_10e890bb0_MapRangeSetter> self{};

	~_10e890bb0_MapRangeSetter(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e890bb0_MapRangeSetter(void)   { this->self = jule::Ref<_10e890bb0_MapRangeSetter>::make(this, nullptr); }

	inline jule::Str _method_setup_vars(jule::Ref<_10ebc2ad0_Var>,jule::Ref<_10ebc2ad0_Var>);


	inline jule::Str _method_next_steps(jule::Ref<_10ebc2ad0_Var>,jule::Ref<_10ebc2ad0_Var>,jule::Str);


	inline bool operator==(const _10e890bb0_MapRangeSetter &_Src) { return true; }

	inline bool operator!=(const _10e890bb0_MapRangeSetter &_Src) { return !this->operator==(_Src); }
};


struct _10f7d1d90_OrderedDecls {
	jule::Ref<_10f7d1d90_OrderedDecls> self{};

	jule::Slice<jule::Ref<_10e3fc8f0_Struct>> _field_structs{jule::Slice<jule::Ref<_10e3fc8f0_Struct>>()};
	jule::Slice<jule::Ref<_10ebc2ad0_Var>> _field_globals{jule::Slice<jule::Ref<_10ebc2ad0_Var>>()};


	_10f7d1d90_OrderedDecls(jule::Slice<jule::Ref<_10e3fc8f0_Struct>> __param_structs, jule::Slice<jule::Ref<_10ebc2ad0_Var>> __param_globals)   {
		this->self = jule::Ref<_10f7d1d90_OrderedDecls>::make(this, nullptr);

		this->_field_structs = __param_structs;
		this->_field_globals = __param_globals;
	}

	~_10f7d1d90_OrderedDecls(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10f7d1d90_OrderedDecls(void)   { this->self = jule::Ref<_10f7d1d90_OrderedDecls>::make(this, nullptr); }

	inline bool operator==(const _10f7d1d90_OrderedDecls &_Src) {
		return 
			this->_field_structs == _Src._field_structs &&
			this->_field_globals == _Src._field_globals;
	}

	inline bool operator!=(const _10f7d1d90_OrderedDecls &_Src) { return !this->operator==(_Src); }
};


struct _10eeb79b0_TypeChecker {
	jule::Ref<_10eeb79b0_TypeChecker> self{};

	jule::Ref<_10e9847f0_Sema> _field_s{jule::Ref<_10e9847f0_Sema>()};
	jule::Trait<_10f3df410_Lookup> _field_lookup{jule::Trait<_10f3df410_Lookup>()};
	jule::Ref<_10eeb79b0_Referencer> _field_referencer{jule::Ref<_10eeb79b0_Referencer>()};
	_11ce22a00_Token _field_error_token{_11ce22a00_Token()};
	jule::Slice<jule::Ref<_11ce1fd50_GenericDecl>> _field_ignore_generics{jule::Slice<jule::Ref<_11ce1fd50_GenericDecl>>()};
	jule::Slice<jule::Ref<_10eeb79b0_TypeAlias>> _field_use_generics{jule::Slice<jule::Ref<_10eeb79b0_TypeAlias>>()};
	jule::Bool _field_not_plain{jule::Bool()};


	_10eeb79b0_TypeChecker(jule::Ref<_10e9847f0_Sema> __param_s, jule::Trait<_10f3df410_Lookup> __param_lookup, jule::Ref<_10eeb79b0_Referencer> __param_referencer, _11ce22a00_Token __param_error_token, jule::Slice<jule::Ref<_11ce1fd50_GenericDecl>> __param_ignore_generics, jule::Slice<jule::Ref<_10eeb79b0_TypeAlias>> __param_use_generics, jule::Bool __param_not_plain)   {
		this->self = jule::Ref<_10eeb79b0_TypeChecker>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_lookup = __param_lookup;
		this->_field_referencer = __param_referencer;
		this->_field_error_token = __param_error_token;
		this->_field_ignore_generics = __param_ignore_generics;
		this->_field_use_generics = __param_use_generics;
		this->_field_not_plain = __param_not_plain;
	}

	~_10eeb79b0_TypeChecker(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10eeb79b0_TypeChecker(void)   { this->self = jule::Ref<_10eeb79b0_TypeChecker>::make(this, nullptr); }

	inline void _method_push_err(_11ce22a00_Token,jule::Str,jule::Slice<jule::Any>);


	inline jule::Ref<_10eeb79b0_Prim> _method_build_prim(jule::Ref<_11ce1fd50_IdentTypeDecl>);


	inline jule::Bool _method_check_illegal_cycles(jule::Ref<_11ce1fd50_IdentTypeDecl>,jule::Any);


	inline jule::Trait<_10eeb79b0_Kind> _method_from_type_alias(jule::Ref<_11ce1fd50_IdentTypeDecl>,jule::Ref<_10eeb79b0_TypeAlias>);


	inline jule::Ref<_10e975f00_Enum> _method_from_enum(jule::Ref<_11ce1fd50_IdentTypeDecl>,jule::Ref<_10e975f00_Enum>);


	inline jule::Bool _method_check_struct_ins(jule::Ref<_10e3fc8f0_StructIns>,_11ce22a00_Token);


	inline void _method_append_used_struct_reference(jule::Ref<_10e3fc8f0_Struct>);


	inline jule::Ref<_10e3fc8f0_StructIns> _method_from_struct(jule::Ref<_11ce1fd50_IdentTypeDecl>,jule::Ref<_10e3fc8f0_Struct>);


	inline jule::Trait<_10eeb79b0_Kind> _method_get_def(jule::Ref<_11ce1fd50_IdentTypeDecl>);


	inline jule::Trait<_10eeb79b0_Kind> _method_build_ident(jule::Ref<_11ce1fd50_IdentTypeDecl>);


	inline jule::Ref<_10eeb79b0_Ref> _method_build_ref_from_type(jule::Ref<_10eeb79b0_TypeKind>);


	inline jule::Ref<_10eeb79b0_Ref> _method_build_ref(jule::Ref<_11ce1fd50_RefTypeDecl>);


	inline jule::Ref<_10eeb79b0_Ptr> _method_build_ptr_from_type(jule::Ref<_10eeb79b0_TypeKind>);


	inline jule::Ref<_10eeb79b0_Ptr> _method_build_ptr(jule::Ref<_11ce1fd50_PtrTypeDecl>);


	inline jule::Ref<_10eeb79b0_Slc> _method_build_slc(jule::Ref<_11ce1fd50_SlcTypeDecl>);


	inline jule::Ref<_10eeb79b0_Arr> _method_build_arr(jule::Ref<_11ce1fd50_ArrTypeDecl>);


	inline jule::Ref<_10eeb79b0_Map> _method_build_map(jule::Ref<_11ce1fd50_MapTypeDecl>);


	inline jule::Ref<_10eeb79b0_Tuple> _method_build_tuple(jule::Ref<_11ce1fd50_TupleTypeDecl>);


	inline jule::Bool _method_check_fn_types(jule::Ref<_10e56a140_FnIns>);


	inline jule::Ref<_10e56a140_FnIns> _method_build_fn(jule::Ref<_11ce1fd50_FnDecl>);


	inline jule::Trait<_10eeb79b0_Kind> _method_build_by_std_namespace(jule::Ref<_11ce1fd50_NamespaceTypeDecl>);


	inline jule::Trait<_10eeb79b0_Kind> _method_build_by_namespace(jule::Ref<_11ce1fd50_NamespaceTypeDecl>);


	inline jule::Ref<_10eeb79b0_TypeKind> _method_build(jule::Any);


	inline jule::Ref<_10eeb79b0_TypeKind> _method_check_decl(jule::Ref<_11ce1fd50_TypeDecl>);


	inline void _method_check(jule::Ref<_10eeb79b0_TypeSymbol>);


	inline bool operator==(const _10eeb79b0_TypeChecker &_Src) {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_lookup == _Src._field_lookup &&
			this->_field_referencer == _Src._field_referencer &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_ignore_generics == _Src._field_ignore_generics &&
			this->_field_use_generics == _Src._field_use_generics &&
			this->_field_not_plain == _Src._field_not_plain;
	}

	inline bool operator!=(const _10eeb79b0_TypeChecker &_Src) { return !this->operator==(_Src); }
};


struct _10eeb79b0_TypeAlias {
	jule::Ref<_10eeb79b0_TypeAlias> self{};

	jule::Ref<_11ce1fd50_ScopeTree> _field_scope{jule::Ref<_11ce1fd50_ScopeTree>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_used{jule::Bool()};
	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_10eeb79b0_TypeSymbol> _field_kind{jule::Ref<_10eeb79b0_TypeSymbol>()};
	jule::Str _field_doc{jule::Str()};
	jule::Slice<jule::Any> _field_refers{jule::Slice<jule::Any>()};


	_10eeb79b0_TypeAlias(jule::Ref<_11ce1fd50_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_used, _11ce22a00_Token __param_token, jule::Str __param_ident, jule::Ref<_10eeb79b0_TypeSymbol> __param_kind, jule::Str __param_doc, jule::Slice<jule::Any> __param_refers)   {
		this->self = jule::Ref<_10eeb79b0_TypeAlias>::make(this, nullptr);

		this->_field_scope = __param_scope;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_used = __param_used;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
		this->_field_doc = __param_doc;
		this->_field_refers = __param_refers;
	}

	~_10eeb79b0_TypeAlias(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10eeb79b0_TypeAlias(void)   { this->self = jule::Ref<_10eeb79b0_TypeAlias>::make(this, nullptr); }

	inline bool operator==(const _10eeb79b0_TypeAlias &_Src) {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_used == _Src._field_used &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_doc == _Src._field_doc &&
			this->_field_refers == _Src._field_refers;
	}

	inline bool operator!=(const _10eeb79b0_TypeAlias &_Src) { return !this->operator==(_Src); }
};


struct _10ee8a260_BinopSolver {
	jule::Ref<_10ee8a260_BinopSolver> self{};

	jule::Ref<_10ee8a260_Eval> _field_e{jule::Ref<_10ee8a260_Eval>()};
	jule::Ref<_10ee8a260_Data> _field_l{jule::Ref<_10ee8a260_Data>()};
	jule::Ref<_10ee8a260_Data> _field_r{jule::Ref<_10ee8a260_Data>()};
	_11ce22a00_Token _field_op{_11ce22a00_Token()};


	_10ee8a260_BinopSolver(jule::Ref<_10ee8a260_Eval> __param_e, jule::Ref<_10ee8a260_Data> __param_l, jule::Ref<_10ee8a260_Data> __param_r, _11ce22a00_Token __param_op)   {
		this->self = jule::Ref<_10ee8a260_BinopSolver>::make(this, nullptr);

		this->_field_e = __param_e;
		this->_field_l = __param_l;
		this->_field_r = __param_r;
		this->_field_op = __param_op;
	}

	~_10ee8a260_BinopSolver(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10ee8a260_BinopSolver(void)   { this->self = jule::Ref<_10ee8a260_BinopSolver>::make(this, nullptr); }

	inline jule::Bool _method_check_type_compatibility(void);


	inline jule::Ref<_10ee8a260_Data> _method_eval_nil(void);


	inline jule::Ref<_10ee8a260_Data> _method_eval_enum(void);


	inline jule::Ref<_10ee8a260_Data> _method_eval_ptr(void);


	inline jule::Ref<_10ee8a260_Data> _method_eval_arr(void);


	inline jule::Ref<_10ee8a260_Data> _method_eval_slc(void);


	inline jule::Ref<_10ee8a260_Data> _method_eval_fn(void);


	inline jule::Ref<_10ee8a260_Data> _method_eval_struct(void);


	inline jule::Ref<_10ee8a260_Data> _method_eval_trait(void);


	inline jule::Ref<_10ee8a260_Data> _method_eval_any(void);


	inline jule::Ref<_10ee8a260_Data> _method_eval_bool(void);


	inline jule::Ref<_10ee8a260_Data> _method_eval_str(void);


	inline void _method_set_type_to_greater(void);


	inline void _method_mod(void);


	inline jule::Ref<_10ee8a260_Data> _method_eval_float(void);


	inline jule::Ref<_10ee8a260_Data> _method_eval_unsig_int(void);


	inline jule::Ref<_10ee8a260_Data> _method_eval_sig_int(void);


	inline jule::Ref<_10ee8a260_Data> _method_eval_prim(void);


	inline jule::Ref<_10ee8a260_Data> _method_eval(void);


	inline void _method_assign_shift(jule::Ref<_10ee8a260_Data>,jule::F64);


	inline void _method_solve_const(jule::Ref<_10ee8a260_Data>);


	inline void _method_post_const(jule::Ref<_10ee8a260_Data>);


	inline void _method_prepare_data(jule::Ref<_10ee8a260_Data>);


	inline void _method_prepare_eval(void);


	inline void _method_check_data(jule::Ref<_10ee8a260_Data>);


	inline void _method_check_datas(void);


	inline jule::Ref<_10ee8a260_Data> _method_solve_explicit(jule::Ref<_10ee8a260_Data>,jule::Ref<_10ee8a260_Data>);


	inline jule::Ref<_10ee8a260_Data> _method_solve(jule::Ref<_11ce1fd50_BinopExpr>);


	inline bool operator==(const _10ee8a260_BinopSolver &_Src) {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _10ee8a260_BinopSolver &_Src) { return !this->operator==(_Src); }
};


struct _10eb9c740_RetTypeChecker {
	jule::Ref<_10eb9c740_RetTypeChecker> self{};

	jule::Ref<_10e97fcf0_ScopeChecker> _field_sc{jule::Ref<_10e97fcf0_ScopeChecker>()};
	jule::Ref<_10e56a140_FnIns> _field_f{jule::Ref<_10e56a140_FnIns>()};
	jule::Slice<jule::Ref<_10eeb79b0_TypeKind>> _field_types{jule::Slice<jule::Ref<_10eeb79b0_TypeKind>>()};
	jule::Slice<jule::Ref<_10ee8a260_Data>> _field_exprs{jule::Slice<jule::Ref<_10ee8a260_Data>>()};
	jule::Slice<jule::Ref<_10ebc2ad0_Var>> _field_vars{jule::Slice<jule::Ref<_10ebc2ad0_Var>>()};
	_11ce22a00_Token _field_error_token{_11ce22a00_Token()};


	_10eb9c740_RetTypeChecker(jule::Ref<_10e97fcf0_ScopeChecker> __param_sc, jule::Ref<_10e56a140_FnIns> __param_f, jule::Slice<jule::Ref<_10eeb79b0_TypeKind>> __param_types, jule::Slice<jule::Ref<_10ee8a260_Data>> __param_exprs, jule::Slice<jule::Ref<_10ebc2ad0_Var>> __param_vars, _11ce22a00_Token __param_error_token)   {
		this->self = jule::Ref<_10eb9c740_RetTypeChecker>::make(this, nullptr);

		this->_field_sc = __param_sc;
		this->_field_f = __param_f;
		this->_field_types = __param_types;
		this->_field_exprs = __param_exprs;
		this->_field_vars = __param_vars;
		this->_field_error_token = __param_error_token;
	}

	~_10eb9c740_RetTypeChecker(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10eb9c740_RetTypeChecker(void)   { this->self = jule::Ref<_10eb9c740_RetTypeChecker>::make(this, nullptr); }

	inline void _method_prepare_types(void);


	inline void _method_prepare_exprs(jule::Ref<_10ee8a260_Data>);


	inline void _method_ret_vars(void);


	inline void _method_check_exprs(void);


	inline jule::Bool _method_check(jule::Ref<_10ee8a260_Data>);


	inline bool operator==(const _10eb9c740_RetTypeChecker &_Src) {
		return 
			this->_field_sc == _Src._field_sc &&
			this->_field_f == _Src._field_f &&
			this->_field_types == _Src._field_types &&
			this->_field_exprs == _Src._field_exprs &&
			this->_field_vars == _Src._field_vars &&
			this->_field_error_token == _Src._field_error_token;
	}

	inline bool operator!=(const _10eb9c740_RetTypeChecker &_Src) { return !this->operator==(_Src); }
};


struct _10eb9c740_FnCallArgChecker {
	jule::Ref<_10eb9c740_FnCallArgChecker> self{};

	jule::Ref<_10ee8a260_Eval> _field_e{jule::Ref<_10ee8a260_Eval>()};
	jule::Slice<jule::Ref<_11ce1fd50_Expr>> _field_args{jule::Slice<jule::Ref<_11ce1fd50_Expr>>()};
	_11ce22a00_Token _field_error_token{_11ce22a00_Token()};
	jule::Ref<_10e56a140_FnIns> _field_f{jule::Ref<_10e56a140_FnIns>()};
	jule::Bool _field_dynamic_annotation{jule::Bool()};
	jule::Slice<jule::Any> _field_arg_models{jule::Slice<jule::Any>()};


	_10eb9c740_FnCallArgChecker(jule::Ref<_10ee8a260_Eval> __param_e, jule::Slice<jule::Ref<_11ce1fd50_Expr>> __param_args, _11ce22a00_Token __param_error_token, jule::Ref<_10e56a140_FnIns> __param_f, jule::Bool __param_dynamic_annotation, jule::Slice<jule::Any> __param_arg_models)   {
		this->self = jule::Ref<_10eb9c740_FnCallArgChecker>::make(this, nullptr);

		this->_field_e = __param_e;
		this->_field_args = __param_args;
		this->_field_error_token = __param_error_token;
		this->_field_f = __param_f;
		this->_field_dynamic_annotation = __param_dynamic_annotation;
		this->_field_arg_models = __param_arg_models;
	}

	~_10eb9c740_FnCallArgChecker(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10eb9c740_FnCallArgChecker(void)   { this->self = jule::Ref<_10eb9c740_FnCallArgChecker>::make(this, nullptr); }

	inline void _method_push_err_token(_11ce22a00_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Slice<jule::Ref<_10e56a140_ParamIns>> _method_get_params(void);


	inline jule::Bool _method_check_counts(jule::Slice<jule::Ref<_10e56a140_ParamIns>>);


	inline jule::Bool _method_check_arg(jule::Ref<_10e56a140_ParamIns>,jule::Ref<_10ee8a260_Data>,_11ce22a00_Token);


	inline jule::Bool _method_push(jule::Ref<_10e56a140_ParamIns>,jule::Ref<_11ce1fd50_Expr>);


	inline jule::Bool _method_push_variadic(jule::Ref<_10e56a140_ParamIns>,jule::Int);


	inline jule::Bool _method_check_args(jule::Slice<jule::Ref<_10e56a140_ParamIns>>);


	inline jule::Bool _method_check_dynamic_type_annotation(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _10eb9c740_FnCallArgChecker &_Src) {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_args == _Src._field_args &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_f == _Src._field_f &&
			this->_field_dynamic_annotation == _Src._field_dynamic_annotation &&
			this->_field_arg_models == _Src._field_arg_models;
	}

	inline bool operator!=(const _10eb9c740_FnCallArgChecker &_Src) { return !this->operator==(_Src); }
};


struct _10eb9c740_AssignTypeChecker {
	jule::Ref<_10eb9c740_AssignTypeChecker> self{};

	jule::Ref<_10e9847f0_Sema> _field_s{jule::Ref<_10e9847f0_Sema>()};
	jule::Ref<_10eeb79b0_TypeKind> _field_dest{jule::Ref<_10eeb79b0_TypeKind>()};
	jule::Ref<_10ee8a260_Data> _field_d{jule::Ref<_10ee8a260_Data>()};
	_11ce22a00_Token _field_error_token{_11ce22a00_Token()};
	jule::Bool _field_deref{jule::Bool()};


	_10eb9c740_AssignTypeChecker(jule::Ref<_10e9847f0_Sema> __param_s, jule::Ref<_10eeb79b0_TypeKind> __param_dest, jule::Ref<_10ee8a260_Data> __param_d, _11ce22a00_Token __param_error_token, jule::Bool __param_deref)   {
		this->self = jule::Ref<_10eb9c740_AssignTypeChecker>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_dest = __param_dest;
		this->_field_d = __param_d;
		this->_field_error_token = __param_error_token;
		this->_field_deref = __param_deref;
	}

	~_10eb9c740_AssignTypeChecker(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10eb9c740_AssignTypeChecker(void)   { this->self = jule::Ref<_10eb9c740_AssignTypeChecker>::make(this, nullptr); }

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_validity(void);


	inline jule::Bool _method_check_const(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _10eb9c740_AssignTypeChecker &_Src) {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_dest == _Src._field_dest &&
			this->_field_d == _Src._field_d &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_deref == _Src._field_deref;
	}

	inline bool operator!=(const _10eb9c740_AssignTypeChecker &_Src) { return !this->operator==(_Src); }
};


struct _10eb9c740_TypeCompatibilityChecker {
	jule::Ref<_10eb9c740_TypeCompatibilityChecker> self{};

	jule::Ref<_10e9847f0_Sema> _field_s{jule::Ref<_10e9847f0_Sema>()};
	jule::Ref<_10eeb79b0_TypeKind> _field_dest{jule::Ref<_10eeb79b0_TypeKind>()};
	jule::Ref<_10eeb79b0_TypeKind> _field_src{jule::Ref<_10eeb79b0_TypeKind>()};
	_11ce22a00_Token _field_error_token{_11ce22a00_Token()};
	jule::Bool _field_deref{jule::Bool()};
	jule::Bool _field_ignore_any{jule::Bool()};


	_10eb9c740_TypeCompatibilityChecker(jule::Ref<_10e9847f0_Sema> __param_s, jule::Ref<_10eeb79b0_TypeKind> __param_dest, jule::Ref<_10eeb79b0_TypeKind> __param_src, _11ce22a00_Token __param_error_token, jule::Bool __param_deref, jule::Bool __param_ignore_any)   {
		this->self = jule::Ref<_10eb9c740_TypeCompatibilityChecker>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_dest = __param_dest;
		this->_field_src = __param_src;
		this->_field_error_token = __param_error_token;
		this->_field_deref = __param_deref;
		this->_field_ignore_any = __param_ignore_any;
	}

	~_10eb9c740_TypeCompatibilityChecker(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10eb9c740_TypeCompatibilityChecker(void)   { this->self = jule::Ref<_10eb9c740_TypeCompatibilityChecker>::make(this, nullptr); }

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_trait(void);


	inline jule::Bool _method_check_ref(void);


	inline jule::Bool _method_check_ptr(void);


	inline jule::Bool _method_check_slc(void);


	inline jule::Bool _method_check_arr(void);


	inline jule::Bool _method_check_map(void);


	inline jule::Bool _method_check_struct(void);


	inline jule::Bool _method_check_fn(void);


	inline jule::Bool _method_check_enum(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _10eb9c740_TypeCompatibilityChecker &_Src) {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_dest == _Src._field_dest &&
			this->_field_src == _Src._field_src &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_deref == _Src._field_deref &&
			this->_field_ignore_any == _Src._field_ignore_any;
	}

	inline bool operator!=(const _10eb9c740_TypeCompatibilityChecker &_Src) { return !this->operator==(_Src); }
};


struct _10ebc2ad0_Var {
	jule::Ref<_10ebc2ad0_Var> self{};

	jule::Ref<_11ce1fd50_ScopeTree> _field_scope{jule::Ref<_11ce1fd50_ScopeTree>()};
	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_constant{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_used{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Str _field_doc{jule::Str()};
	jule::Ref<_10eeb79b0_TypeSymbol> _field_kind{jule::Ref<_10eeb79b0_TypeSymbol>()};
	jule::Ref<_10ee8a260_Value> _field_value{jule::Ref<_10ee8a260_Value>()};
	jule::Ref<_10e8ca650_ReferenceStack> _field_references{jule::Ref<_10e8ca650_ReferenceStack>()};
	jule::Slice<jule::Ref<_10ebc2ad0_Var>> _field_depends{jule::Slice<jule::Ref<_10ebc2ad0_Var>>()};


	_10ebc2ad0_Var(jule::Ref<_11ce1fd50_ScopeTree> __param_scope, _11ce22a00_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_constant, jule::Bool __param_mutable, jule::Bool __param_public, jule::Bool __param_used, jule::Bool __param_statically, jule::Bool __param_reference, jule::Str __param_doc, jule::Ref<_10eeb79b0_TypeSymbol> __param_kind, jule::Ref<_10ee8a260_Value> __param_value, jule::Ref<_10e8ca650_ReferenceStack> __param_references, jule::Slice<jule::Ref<_10ebc2ad0_Var>> __param_depends)   {
		this->self = jule::Ref<_10ebc2ad0_Var>::make(this, nullptr);

		this->_field_scope = __param_scope;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_constant = __param_constant;
		this->_field_mutable = __param_mutable;
		this->_field_public = __param_public;
		this->_field_used = __param_used;
		this->_field_statically = __param_statically;
		this->_field_reference = __param_reference;
		this->_field_doc = __param_doc;
		this->_field_kind = __param_kind;
		this->_field_value = __param_value;
		this->_field_references = __param_references;
		this->_field_depends = __param_depends;
	}

	~_10ebc2ad0_Var(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10ebc2ad0_Var(void)   { this->self = jule::Ref<_10ebc2ad0_Var>::make(this, nullptr); }

	inline jule::Bool _method_is_initialized(void);


	inline jule::Bool _method_is_auto_typed(void);


	inline bool operator==(const _10ebc2ad0_Var &_Src) {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_constant == _Src._field_constant &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_public == _Src._field_public &&
			this->_field_used == _Src._field_used &&
			this->_field_statically == _Src._field_statically &&
			this->_field_reference == _Src._field_reference &&
			this->_field_doc == _Src._field_doc &&
			this->_field_kind == _Src._field_kind &&
			this->_field_value == _Src._field_value &&
			this->_field_references == _Src._field_references &&
			this->_field_depends == _Src._field_depends;
	}

	inline bool operator!=(const _10ebc2ad0_Var &_Src) { return !this->operator==(_Src); }
};


struct _10e9b6a10_ImportInfo: public _10f3df410_Lookup {
	jule::Ref<_10e9b6a10_ImportInfo> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Str _field_path{jule::Str()};
	jule::Str _field_link_path{jule::Str()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_duplicate{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_std{jule::Bool()};
	jule::Bool _field_import_all{jule::Bool()};
	jule::Slice<_11ce22a00_Token> _field_selected{jule::Slice<_11ce22a00_Token>()};
	jule::Ref<_10e9b6a10_Package> _field_package{jule::Ref<_10e9b6a10_Package>()};


	_10e9b6a10_ImportInfo(_11ce22a00_Token __param_token, jule::Str __param_path, jule::Str __param_link_path, jule::Str __param_ident, jule::Bool __param_duplicate, jule::Bool __param_cpp_linked, jule::Bool __param_std, jule::Bool __param_import_all, jule::Slice<_11ce22a00_Token> __param_selected, jule::Ref<_10e9b6a10_Package> __param_package)   {
		this->self = jule::Ref<_10e9b6a10_ImportInfo>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_path = __param_path;
		this->_field_link_path = __param_link_path;
		this->_field_ident = __param_ident;
		this->_field_duplicate = __param_duplicate;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_std = __param_std;
		this->_field_import_all = __param_import_all;
		this->_field_selected = __param_selected;
		this->_field_package = __param_package;
	}

	~_10e9b6a10_ImportInfo(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e9b6a10_ImportInfo(void)   { this->self = jule::Ref<_10e9b6a10_ImportInfo>::make(this, nullptr); }

	inline jule::Ref<_10e9b6a10_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_10e9b6a10_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_10e9b6a10_ImportInfo>)>);


	inline jule::Ref<_10ebc2ad0_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_10eeb79b0_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_10e3fc8f0_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_10e56a140_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_10e3d6eb0_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_10e975f00_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_lookupable(jule::Str);


	inline jule::Bool _method_exist_ident(jule::Str);


	inline bool operator==(const _10e9b6a10_ImportInfo &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_path == _Src._field_path &&
			this->_field_link_path == _Src._field_link_path &&
			this->_field_ident == _Src._field_ident &&
			this->_field_duplicate == _Src._field_duplicate &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_std == _Src._field_std &&
			this->_field_import_all == _Src._field_import_all &&
			this->_field_selected == _Src._field_selected &&
			this->_field_package == _Src._field_package;
	}

	inline bool operator!=(const _10e9b6a10_ImportInfo &_Src) { return !this->operator==(_Src); }
};


struct _10e97fcf0_ScopeLabel {
	jule::Ref<_10e97fcf0_ScopeLabel> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Ref<_10e97fcf0_Label> _field_label{jule::Ref<_10e97fcf0_Label>()};
	jule::Int _field_pos{jule::Int()};
	jule::Ref<_10e97fcf0_ScopeChecker> _field_scope{jule::Ref<_10e97fcf0_ScopeChecker>()};
	jule::Bool _field_used{jule::Bool()};


	_10e97fcf0_ScopeLabel(_11ce22a00_Token __param_token, jule::Ref<_10e97fcf0_Label> __param_label, jule::Int __param_pos, jule::Ref<_10e97fcf0_ScopeChecker> __param_scope, jule::Bool __param_used)   {
		this->self = jule::Ref<_10e97fcf0_ScopeLabel>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_label = __param_label;
		this->_field_pos = __param_pos;
		this->_field_scope = __param_scope;
		this->_field_used = __param_used;
	}

	~_10e97fcf0_ScopeLabel(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e97fcf0_ScopeLabel(void)   { this->self = jule::Ref<_10e97fcf0_ScopeLabel>::make(this, nullptr); }

	inline bool operator==(const _10e97fcf0_ScopeLabel &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label &&
			this->_field_pos == _Src._field_pos &&
			this->_field_scope == _Src._field_scope &&
			this->_field_used == _Src._field_used;
	}

	inline bool operator!=(const _10e97fcf0_ScopeLabel &_Src) { return !this->operator==(_Src); }
};


struct _10e97d820_Impl {
	jule::Ref<_10e97d820_Impl> self{};

	_11ce22a00_Token _field_base{_11ce22a00_Token()};
	_11ce22a00_Token _field_dest{_11ce22a00_Token()};
	jule::Slice<jule::Ref<_10e56a140_Fn>> _field_methods{jule::Slice<jule::Ref<_10e56a140_Fn>>()};


	_10e97d820_Impl(_11ce22a00_Token __param_base, _11ce22a00_Token __param_dest, jule::Slice<jule::Ref<_10e56a140_Fn>> __param_methods)   {
		this->self = jule::Ref<_10e97d820_Impl>::make(this, nullptr);

		this->_field_base = __param_base;
		this->_field_dest = __param_dest;
		this->_field_methods = __param_methods;
	}

	~_10e97d820_Impl(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e97d820_Impl(void)   { this->self = jule::Ref<_10e97d820_Impl>::make(this, nullptr); }

	inline jule::Bool _method_is_trait_impl(void);


	inline jule::Bool _method_is_struct_impl(void);


	inline bool operator==(const _10e97d820_Impl &_Src) {
		return 
			this->_field_base == _Src._field_base &&
			this->_field_dest == _Src._field_dest &&
			this->_field_methods == _Src._field_methods;
	}

	inline bool operator!=(const _10e97d820_Impl &_Src) { return !this->operator==(_Src); }
};


struct _10e975f00_Enum: public _10eeb79b0_Kind {
	jule::Ref<_10e975f00_Enum> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_10eeb79b0_TypeSymbol> _field_kind{jule::Ref<_10eeb79b0_TypeSymbol>()};
	jule::Slice<jule::Ref<_10e975f00_EnumItem>> _field_items{jule::Slice<jule::Ref<_10e975f00_EnumItem>>()};
	jule::Str _field_doc{jule::Str()};


	_10e975f00_Enum(_11ce22a00_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ref<_10eeb79b0_TypeSymbol> __param_kind, jule::Slice<jule::Ref<_10e975f00_EnumItem>> __param_items, jule::Str __param_doc)   {
		this->self = jule::Ref<_10e975f00_Enum>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_public = __param_public;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
		this->_field_items = __param_items;
		this->_field_doc = __param_doc;
	}

	~_10e975f00_Enum(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e975f00_Enum(void)   { this->self = jule::Ref<_10e975f00_Enum>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_10eeb79b0_TypeKind>);


	inline jule::Ref<_10e975f00_EnumItem> _method_find_item(jule::Str);


	inline bool operator==(const _10e975f00_Enum &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_items == _Src._field_items &&
			this->_field_doc == _Src._field_doc;
	}

	inline bool operator!=(const _10e975f00_Enum &_Src) { return !this->operator==(_Src); }
};


struct _10e975f00_EnumItem {
	jule::Ref<_10e975f00_EnumItem> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_10ee8a260_Value> _field_value{jule::Ref<_10ee8a260_Value>()};


	_10e975f00_EnumItem(_11ce22a00_Token __param_token, jule::Str __param_ident, jule::Ref<_10ee8a260_Value> __param_value)   {
		this->self = jule::Ref<_10e975f00_EnumItem>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_value = __param_value;
	}

	~_10e975f00_EnumItem(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e975f00_EnumItem(void)   { this->self = jule::Ref<_10e975f00_EnumItem>::make(this, nullptr); }

	inline jule::Bool _method_auto_expr(void);


	inline bool operator==(const _10e975f00_EnumItem &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_value == _Src._field_value;
	}

	inline bool operator!=(const _10e975f00_EnumItem &_Src) { return !this->operator==(_Src); }
};


struct _10e3d6eb0_Trait: public _10eeb79b0_Kind {
	jule::Ref<_10e3d6eb0_Trait> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_public{jule::Bool()};
	jule::Str _field_doc{jule::Str()};
	jule::Slice<jule::Ref<_10e56a140_Fn>> _field_methods{jule::Slice<jule::Ref<_10e56a140_Fn>>()};
	jule::Slice<jule::Ref<_10e3fc8f0_Struct>> _field_implemented{jule::Slice<jule::Ref<_10e3fc8f0_Struct>>()};


	_10e3d6eb0_Trait(_11ce22a00_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Str __param_doc, jule::Slice<jule::Ref<_10e56a140_Fn>> __param_methods, jule::Slice<jule::Ref<_10e3fc8f0_Struct>> __param_implemented)   {
		this->self = jule::Ref<_10e3d6eb0_Trait>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_public = __param_public;
		this->_field_doc = __param_doc;
		this->_field_methods = __param_methods;
		this->_field_implemented = __param_implemented;
	}

	~_10e3d6eb0_Trait(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e3d6eb0_Trait(void)   { this->self = jule::Ref<_10e3d6eb0_Trait>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_10eeb79b0_TypeKind>);


	inline jule::Bool _method_is_builtin(void);


	inline jule::Ref<_10e56a140_Fn> _method_find_method(jule::Str);


	inline bool operator==(const _10e3d6eb0_Trait &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_public == _Src._field_public &&
			this->_field_doc == _Src._field_doc &&
			this->_field_methods == _Src._field_methods &&
			this->_field_implemented == _Src._field_implemented;
	}

	inline bool operator!=(const _10e3d6eb0_Trait &_Src) { return !this->operator==(_Src); }
};


struct _10e8ca650_Pass {
	jule::Ref<_10e8ca650_Pass> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Str _field_text{jule::Str()};


	_10e8ca650_Pass(_11ce22a00_Token __param_token, jule::Str __param_text)   {
		this->self = jule::Ref<_10e8ca650_Pass>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_text = __param_text;
	}

	~_10e8ca650_Pass(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e8ca650_Pass(void)   { this->self = jule::Ref<_10e8ca650_Pass>::make(this, nullptr); }

	inline bool operator==(const _10e8ca650_Pass &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_text == _Src._field_text;
	}

	inline bool operator!=(const _10e8ca650_Pass &_Src) { return !this->operator==(_Src); }
};


struct _10e56a140_Fn {
	jule::Ref<_10e56a140_Fn> self{};

	jule::Ref<_10e9847f0_Sema> _field_sema{jule::Ref<_10e9847f0_Sema>()};
	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Bool _field_global{jule::Bool()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_11ce1fd50_Directive>> _field_directives{jule::Slice<jule::Ref<_11ce1fd50_Directive>>()};
	jule::Str _field_doc{jule::Str()};
	jule::Ref<_11ce1fd50_ScopeTree> _field_scope{jule::Ref<_11ce1fd50_ScopeTree>()};
	jule::Slice<jule::Ref<_11ce1fd50_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_11ce1fd50_GenericDecl>>()};
	jule::Ref<_10e56a140_RetType> _field_result{jule::Ref<_10e56a140_RetType>()};
	jule::Slice<jule::Ref<_10e56a140_Param>> _field_params{jule::Slice<jule::Ref<_10e56a140_Param>>()};
	jule::Ref<_10e3fc8f0_Struct> _field_owner{jule::Ref<_10e3fc8f0_Struct>()};
	jule::Ref<_10e8ca650_ReferenceStack> _field_references{jule::Ref<_10e8ca650_ReferenceStack>()};
	jule::Slice<jule::Ref<_10e56a140_FnIns>> _field_instances{jule::Slice<jule::Ref<_10e56a140_FnIns>>()};


	_10e56a140_Fn(jule::Ref<_10e9847f0_Sema> __param_sema, _11ce22a00_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Str __param_ident, jule::Slice<jule::Ref<_11ce1fd50_Directive>> __param_directives, jule::Str __param_doc, jule::Ref<_11ce1fd50_ScopeTree> __param_scope, jule::Slice<jule::Ref<_11ce1fd50_GenericDecl>> __param_generics, jule::Ref<_10e56a140_RetType> __param_result, jule::Slice<jule::Ref<_10e56a140_Param>> __param_params, jule::Ref<_10e3fc8f0_Struct> __param_owner, jule::Ref<_10e8ca650_ReferenceStack> __param_references, jule::Slice<jule::Ref<_10e56a140_FnIns>> __param_instances)   {
		this->self = jule::Ref<_10e56a140_Fn>::make(this, nullptr);

		this->_field_sema = __param_sema;
		this->_field_token = __param_token;
		this->_field_global = __param_global;
		this->_field_unsafety = __param_unsafety;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_statically = __param_statically;
		this->_field_ident = __param_ident;
		this->_field_directives = __param_directives;
		this->_field_doc = __param_doc;
		this->_field_scope = __param_scope;
		this->_field_generics = __param_generics;
		this->_field_result = __param_result;
		this->_field_params = __param_params;
		this->_field_owner = __param_owner;
		this->_field_references = __param_references;
		this->_field_instances = __param_instances;
	}

	~_10e56a140_Fn(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e56a140_Fn(void)   { this->self = jule::Ref<_10e56a140_Fn>::make(this, nullptr); }

	inline jule::Bool _method_is_void(void);


	inline jule::Bool _method_is_method(void);


	inline jule::Bool _method_is_entry_point(void);


	inline jule::Bool _method_is_init(void);


	inline jule::Bool _method_is_anon(void);


	inline jule::Bool _method_any_var(void);


	inline jule::Bool _method_parameters_uses_generics(void);


	inline jule::Bool _method_result_uses_generics(void);


	inline jule::Ref<_10e56a140_FnIns> _method_instance_force(void);


	inline jule::Ref<_10e56a140_FnIns> _method_instance(void);


	inline std::tuple<jule::Bool,jule::Int> _method_append_instance(jule::Ref<_10e56a140_FnIns>);


	inline bool operator==(const _10e56a140_Fn &_Src) {
		return 
			this->_field_sema == _Src._field_sema &&
			this->_field_token == _Src._field_token &&
			this->_field_global == _Src._field_global &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_statically == _Src._field_statically &&
			this->_field_ident == _Src._field_ident &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc == _Src._field_doc &&
			this->_field_scope == _Src._field_scope &&
			this->_field_generics == _Src._field_generics &&
			this->_field_result == _Src._field_result &&
			this->_field_params == _Src._field_params &&
			this->_field_owner == _Src._field_owner &&
			this->_field_references == _Src._field_references &&
			this->_field_instances == _Src._field_instances;
	}

	inline bool operator!=(const _10e56a140_Fn &_Src) { return !this->operator==(_Src); }
};


struct _10e56a140_Param {
	jule::Ref<_10e56a140_Param> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_variadic{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Ref<_10eeb79b0_TypeSymbol> _field_kind{jule::Ref<_10eeb79b0_TypeSymbol>()};
	jule::Str _field_ident{jule::Str()};


	_10e56a140_Param(_11ce22a00_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ref<_10eeb79b0_TypeSymbol> __param_kind, jule::Str __param_ident)   {
		this->self = jule::Ref<_10e56a140_Param>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_mutable = __param_mutable;
		this->_field_variadic = __param_variadic;
		this->_field_reference = __param_reference;
		this->_field_kind = __param_kind;
		this->_field_ident = __param_ident;
	}

	~_10e56a140_Param(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e56a140_Param(void)   { this->self = jule::Ref<_10e56a140_Param>::make(this, nullptr); }

	inline jule::Ref<_10e56a140_ParamIns> _method_instance(void);


	inline jule::Bool _method_is_self(void);


	inline jule::Bool _method_is_ref(void);


	inline bool operator==(const _10e56a140_Param &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_reference == _Src._field_reference &&
			this->_field_kind == _Src._field_kind &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _10e56a140_Param &_Src) { return !this->operator==(_Src); }
};


struct _10e3fc8f0_Field {
	jule::Ref<_10e3fc8f0_Field> self{};

	jule::Ref<_10e3fc8f0_Struct> _field_owner{jule::Ref<_10e3fc8f0_Struct>()};
	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_10eeb79b0_TypeSymbol> _field_kind{jule::Ref<_10eeb79b0_TypeSymbol>()};


	_10e3fc8f0_Field(jule::Ref<_10e3fc8f0_Struct> __param_owner, _11ce22a00_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ref<_10eeb79b0_TypeSymbol> __param_kind)   {
		this->self = jule::Ref<_10e3fc8f0_Field>::make(this, nullptr);

		this->_field_owner = __param_owner;
		this->_field_token = __param_token;
		this->_field_public = __param_public;
		this->_field_mutable = __param_mutable;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
	}

	~_10e3fc8f0_Field(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e3fc8f0_Field(void)   { this->self = jule::Ref<_10e3fc8f0_Field>::make(this, nullptr); }

	inline jule::Ref<_10e3fc8f0_FieldIns> _method_instance(void);


	inline bool operator==(const _10e3fc8f0_Field &_Src) {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _10e3fc8f0_Field &_Src) { return !this->operator==(_Src); }
};


struct _10e5e5b00_AssignInfo {
	jule::Ref<_10e5e5b00_AssignInfo> self{};

	jule::Slice<_11ce22a00_Token> _field_l{jule::Slice<_11ce22a00_Token>()};
	jule::Slice<_11ce22a00_Token> _field_r{jule::Slice<_11ce22a00_Token>()};
	_11ce22a00_Token _field_setter{_11ce22a00_Token()};
	jule::Bool _field_ok{jule::Bool()};


	_10e5e5b00_AssignInfo(jule::Slice<_11ce22a00_Token> __param_l, jule::Slice<_11ce22a00_Token> __param_r, _11ce22a00_Token __param_setter, jule::Bool __param_ok)   {
		this->self = jule::Ref<_10e5e5b00_AssignInfo>::make(this, nullptr);

		this->_field_l = __param_l;
		this->_field_r = __param_r;
		this->_field_setter = __param_setter;
		this->_field_ok = __param_ok;
	}

	~_10e5e5b00_AssignInfo(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e5e5b00_AssignInfo(void)   { this->self = jule::Ref<_10e5e5b00_AssignInfo>::make(this, nullptr); }

	inline bool operator==(const _10e5e5b00_AssignInfo &_Src) {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_setter == _Src._field_setter &&
			this->_field_ok == _Src._field_ok;
	}

	inline bool operator!=(const _10e5e5b00_AssignInfo &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_Impl {
	jule::Ref<_11ce1fd50_Impl> self{};

	_11ce22a00_Token _field_base{_11ce22a00_Token()};
	_11ce22a00_Token _field_dest{_11ce22a00_Token()};
	jule::Slice<jule::Ref<_11ce1fd50_FnDecl>> _field_methods{jule::Slice<jule::Ref<_11ce1fd50_FnDecl>>()};


	_11ce1fd50_Impl(_11ce22a00_Token __param_base, _11ce22a00_Token __param_dest, jule::Slice<jule::Ref<_11ce1fd50_FnDecl>> __param_methods)   {
		this->self = jule::Ref<_11ce1fd50_Impl>::make(this, nullptr);

		this->_field_base = __param_base;
		this->_field_dest = __param_dest;
		this->_field_methods = __param_methods;
	}

	~_11ce1fd50_Impl(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_Impl(void)   { this->self = jule::Ref<_11ce1fd50_Impl>::make(this, nullptr); }

	inline jule::Bool _method_is_trait_impl(void);


	inline jule::Bool _method_is_struct_impl(void);


	inline bool operator==(const _11ce1fd50_Impl &_Src) {
		return 
			this->_field_base == _Src._field_base &&
			this->_field_dest == _Src._field_dest &&
			this->_field_methods == _Src._field_methods;
	}

	inline bool operator!=(const _11ce1fd50_Impl &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_TraitDecl {
	jule::Ref<_11ce1fd50_TraitDecl> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_public{jule::Bool()};
	jule::Ref<_11ce1fd50_CommentGroup> _field_doc_comments{jule::Ref<_11ce1fd50_CommentGroup>()};
	jule::Slice<jule::Ref<_11ce1fd50_FnDecl>> _field_methods{jule::Slice<jule::Ref<_11ce1fd50_FnDecl>>()};


	_11ce1fd50_TraitDecl(_11ce22a00_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Ref<_11ce1fd50_CommentGroup> __param_doc_comments, jule::Slice<jule::Ref<_11ce1fd50_FnDecl>> __param_methods)   {
		this->self = jule::Ref<_11ce1fd50_TraitDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_public = __param_public;
		this->_field_doc_comments = __param_doc_comments;
		this->_field_methods = __param_methods;
	}

	~_11ce1fd50_TraitDecl(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_TraitDecl(void)   { this->self = jule::Ref<_11ce1fd50_TraitDecl>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_TraitDecl &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_public == _Src._field_public &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_methods == _Src._field_methods;
	}

	inline bool operator!=(const _11ce1fd50_TraitDecl &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_StructDecl {
	jule::Ref<_11ce1fd50_StructDecl> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_11ce1fd50_FieldDecl>> _field_fields{jule::Slice<jule::Ref<_11ce1fd50_FieldDecl>>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Slice<jule::Ref<_11ce1fd50_Directive>> _field_directives{jule::Slice<jule::Ref<_11ce1fd50_Directive>>()};
	jule::Ref<_11ce1fd50_CommentGroup> _field_doc_comments{jule::Ref<_11ce1fd50_CommentGroup>()};
	jule::Slice<jule::Ref<_11ce1fd50_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_11ce1fd50_GenericDecl>>()};


	_11ce1fd50_StructDecl(_11ce22a00_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ref<_11ce1fd50_FieldDecl>> __param_fields, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ref<_11ce1fd50_Directive>> __param_directives, jule::Ref<_11ce1fd50_CommentGroup> __param_doc_comments, jule::Slice<jule::Ref<_11ce1fd50_GenericDecl>> __param_generics)   {
		this->self = jule::Ref<_11ce1fd50_StructDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_fields = __param_fields;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_directives = __param_directives;
		this->_field_doc_comments = __param_doc_comments;
		this->_field_generics = __param_generics;
	}

	~_11ce1fd50_StructDecl(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_StructDecl(void)   { this->self = jule::Ref<_11ce1fd50_StructDecl>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_StructDecl &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_fields == _Src._field_fields &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_generics == _Src._field_generics;
	}

	inline bool operator!=(const _11ce1fd50_StructDecl &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_FieldDecl {
	jule::Ref<_11ce1fd50_FieldDecl> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_11ce1fd50_TypeDecl> _field_kind{jule::Ref<_11ce1fd50_TypeDecl>()};


	_11ce1fd50_FieldDecl(_11ce22a00_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ref<_11ce1fd50_TypeDecl> __param_kind)   {
		this->self = jule::Ref<_11ce1fd50_FieldDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_public = __param_public;
		this->_field_mutable = __param_mutable;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
	}

	~_11ce1fd50_FieldDecl(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_FieldDecl(void)   { this->self = jule::Ref<_11ce1fd50_FieldDecl>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_FieldDecl &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _11ce1fd50_FieldDecl &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_EnumDecl {
	jule::Ref<_11ce1fd50_EnumDecl> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_11ce1fd50_TypeDecl> _field_kind{jule::Ref<_11ce1fd50_TypeDecl>()};
	jule::Slice<jule::Ref<_11ce1fd50_EnumItemDecl>> _field_items{jule::Slice<jule::Ref<_11ce1fd50_EnumItemDecl>>()};
	jule::Ref<_11ce1fd50_CommentGroup> _field_doc_comments{jule::Ref<_11ce1fd50_CommentGroup>()};


	_11ce1fd50_EnumDecl(_11ce22a00_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ref<_11ce1fd50_TypeDecl> __param_kind, jule::Slice<jule::Ref<_11ce1fd50_EnumItemDecl>> __param_items, jule::Ref<_11ce1fd50_CommentGroup> __param_doc_comments)   {
		this->self = jule::Ref<_11ce1fd50_EnumDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_public = __param_public;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
		this->_field_items = __param_items;
		this->_field_doc_comments = __param_doc_comments;
	}

	~_11ce1fd50_EnumDecl(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_EnumDecl(void)   { this->self = jule::Ref<_11ce1fd50_EnumDecl>::make(this, nullptr); }

	inline jule::Bool _method_default_typed(void);


	inline bool operator==(const _11ce1fd50_EnumDecl &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_items == _Src._field_items &&
			this->_field_doc_comments == _Src._field_doc_comments;
	}

	inline bool operator!=(const _11ce1fd50_EnumDecl &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_EnumItemDecl {
	jule::Ref<_11ce1fd50_EnumItemDecl> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_11ce1fd50_Expr> _field_expr{jule::Ref<_11ce1fd50_Expr>()};


	_11ce1fd50_EnumItemDecl(_11ce22a00_Token __param_token, jule::Str __param_ident, jule::Ref<_11ce1fd50_Expr> __param_expr)   {
		this->self = jule::Ref<_11ce1fd50_EnumItemDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_expr = __param_expr;
	}

	~_11ce1fd50_EnumItemDecl(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_EnumItemDecl(void)   { this->self = jule::Ref<_11ce1fd50_EnumItemDecl>::make(this, nullptr); }

	inline jule::Bool _method_auto_expr(void);


	inline bool operator==(const _11ce1fd50_EnumItemDecl &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _11ce1fd50_EnumItemDecl &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_UseDecl {
	jule::Ref<_11ce1fd50_UseDecl> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Str _field_link_path{jule::Str()};
	jule::Bool _field_full{jule::Bool()};
	jule::Slice<_11ce22a00_Token> _field_selected{jule::Slice<_11ce22a00_Token>()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_std{jule::Bool()};


	_11ce1fd50_UseDecl(_11ce22a00_Token __param_token, jule::Str __param_link_path, jule::Bool __param_full, jule::Slice<_11ce22a00_Token> __param_selected, jule::Bool __param_cpp_linked, jule::Bool __param_std)   {
		this->self = jule::Ref<_11ce1fd50_UseDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_link_path = __param_link_path;
		this->_field_full = __param_full;
		this->_field_selected = __param_selected;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_std = __param_std;
	}

	~_11ce1fd50_UseDecl(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_UseDecl(void)   { this->self = jule::Ref<_11ce1fd50_UseDecl>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_UseDecl &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_link_path == _Src._field_link_path &&
			this->_field_full == _Src._field_full &&
			this->_field_selected == _Src._field_selected &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_std == _Src._field_std;
	}

	inline bool operator!=(const _11ce1fd50_UseDecl &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_Case {
	jule::Ref<_11ce1fd50_Case> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Ref<_11ce1fd50_ScopeTree> _field_scope{jule::Ref<_11ce1fd50_ScopeTree>()};
	jule::Slice<jule::Ref<_11ce1fd50_Expr>> _field_exprs{jule::Slice<jule::Ref<_11ce1fd50_Expr>>()};


	_11ce1fd50_Case(_11ce22a00_Token __param_token, jule::Ref<_11ce1fd50_ScopeTree> __param_scope, jule::Slice<jule::Ref<_11ce1fd50_Expr>> __param_exprs)   {
		this->self = jule::Ref<_11ce1fd50_Case>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_scope = __param_scope;
		this->_field_exprs = __param_exprs;
	}

	~_11ce1fd50_Case(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_Case(void)   { this->self = jule::Ref<_11ce1fd50_Case>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_Case &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_scope == _Src._field_scope &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _11ce1fd50_Case &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_TypeAliasDecl {
	jule::Ref<_11ce1fd50_TypeAliasDecl> self{};

	jule::Ref<_11ce1fd50_ScopeTree> _field_scope{jule::Ref<_11ce1fd50_ScopeTree>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_11ce1fd50_TypeDecl> _field_kind{jule::Ref<_11ce1fd50_TypeDecl>()};
	jule::Ref<_11ce1fd50_CommentGroup> _field_doc_comments{jule::Ref<_11ce1fd50_CommentGroup>()};


	_11ce1fd50_TypeAliasDecl(jule::Ref<_11ce1fd50_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, _11ce22a00_Token __param_token, jule::Str __param_ident, jule::Ref<_11ce1fd50_TypeDecl> __param_kind, jule::Ref<_11ce1fd50_CommentGroup> __param_doc_comments)   {
		this->self = jule::Ref<_11ce1fd50_TypeAliasDecl>::make(this, nullptr);

		this->_field_scope = __param_scope;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
		this->_field_doc_comments = __param_doc_comments;
	}

	~_11ce1fd50_TypeAliasDecl(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_TypeAliasDecl(void)   { this->self = jule::Ref<_11ce1fd50_TypeAliasDecl>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_TypeAliasDecl &_Src) {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_doc_comments == _Src._field_doc_comments;
	}

	inline bool operator!=(const _11ce1fd50_TypeAliasDecl &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_Else {
	jule::Ref<_11ce1fd50_Else> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Ref<_11ce1fd50_ScopeTree> _field_scope{jule::Ref<_11ce1fd50_ScopeTree>()};


	_11ce1fd50_Else(_11ce22a00_Token __param_token, jule::Ref<_11ce1fd50_ScopeTree> __param_scope)   {
		this->self = jule::Ref<_11ce1fd50_Else>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_scope = __param_scope;
	}

	~_11ce1fd50_Else(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_Else(void)   { this->self = jule::Ref<_11ce1fd50_Else>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_Else &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _11ce1fd50_Else &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_If {
	jule::Ref<_11ce1fd50_If> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Ref<_11ce1fd50_Expr> _field_expr{jule::Ref<_11ce1fd50_Expr>()};
	jule::Ref<_11ce1fd50_ScopeTree> _field_scope{jule::Ref<_11ce1fd50_ScopeTree>()};


	_11ce1fd50_If(_11ce22a00_Token __param_token, jule::Ref<_11ce1fd50_Expr> __param_expr, jule::Ref<_11ce1fd50_ScopeTree> __param_scope)   {
		this->self = jule::Ref<_11ce1fd50_If>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
		this->_field_scope = __param_scope;
	}

	~_11ce1fd50_If(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_If(void)   { this->self = jule::Ref<_11ce1fd50_If>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_If &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _11ce1fd50_If &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_ContSt {
	jule::Ref<_11ce1fd50_ContSt> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	_11ce22a00_Token _field_label{_11ce22a00_Token()};


	_11ce1fd50_ContSt(_11ce22a00_Token __param_token, _11ce22a00_Token __param_label)   {
		this->self = jule::Ref<_11ce1fd50_ContSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_label = __param_label;
	}

	~_11ce1fd50_ContSt(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_ContSt(void)   { this->self = jule::Ref<_11ce1fd50_ContSt>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_ContSt &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _11ce1fd50_ContSt &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_BreakSt {
	jule::Ref<_11ce1fd50_BreakSt> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	_11ce22a00_Token _field_label{_11ce22a00_Token()};


	_11ce1fd50_BreakSt(_11ce22a00_Token __param_token, _11ce22a00_Token __param_label)   {
		this->self = jule::Ref<_11ce1fd50_BreakSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_label = __param_label;
	}

	~_11ce1fd50_BreakSt(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_BreakSt(void)   { this->self = jule::Ref<_11ce1fd50_BreakSt>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_BreakSt &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _11ce1fd50_BreakSt &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_VarDecl {
	jule::Ref<_11ce1fd50_VarDecl> self{};

	jule::Ref<_11ce1fd50_ScopeTree> _field_scope{jule::Ref<_11ce1fd50_ScopeTree>()};
	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_constant{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Ref<_11ce1fd50_CommentGroup> _field_doc_comments{jule::Ref<_11ce1fd50_CommentGroup>()};
	jule::Ref<_11ce1fd50_TypeDecl> _field_kind{jule::Ref<_11ce1fd50_TypeDecl>()};
	jule::Ref<_11ce1fd50_Expr> _field_expr{jule::Ref<_11ce1fd50_Expr>()};


	_11ce1fd50_VarDecl(jule::Ref<_11ce1fd50_ScopeTree> __param_scope, _11ce22a00_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_public, jule::Bool __param_mutable, jule::Bool __param_constant, jule::Bool __param_statically, jule::Bool __param_reference, jule::Ref<_11ce1fd50_CommentGroup> __param_doc_comments, jule::Ref<_11ce1fd50_TypeDecl> __param_kind, jule::Ref<_11ce1fd50_Expr> __param_expr)   {
		this->self = jule::Ref<_11ce1fd50_VarDecl>::make(this, nullptr);

		this->_field_scope = __param_scope;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_public = __param_public;
		this->_field_mutable = __param_mutable;
		this->_field_constant = __param_constant;
		this->_field_statically = __param_statically;
		this->_field_reference = __param_reference;
		this->_field_doc_comments = __param_doc_comments;
		this->_field_kind = __param_kind;
		this->_field_expr = __param_expr;
	}

	~_11ce1fd50_VarDecl(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_VarDecl(void)   { this->self = jule::Ref<_11ce1fd50_VarDecl>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_VarDecl &_Src) {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_constant == _Src._field_constant &&
			this->_field_statically == _Src._field_statically &&
			this->_field_reference == _Src._field_reference &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_kind == _Src._field_kind &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _11ce1fd50_VarDecl &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_FnDecl {
	jule::Ref<_11ce1fd50_FnDecl> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Bool _field_global{jule::Bool()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_11ce1fd50_Directive>> _field_directives{jule::Slice<jule::Ref<_11ce1fd50_Directive>>()};
	jule::Ref<_11ce1fd50_CommentGroup> _field_doc_comments{jule::Ref<_11ce1fd50_CommentGroup>()};
	jule::Ref<_11ce1fd50_ScopeTree> _field_scope{jule::Ref<_11ce1fd50_ScopeTree>()};
	jule::Slice<jule::Ref<_11ce1fd50_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_11ce1fd50_GenericDecl>>()};
	jule::Ref<_11ce1fd50_RetTypeDecl> _field_result{jule::Ref<_11ce1fd50_RetTypeDecl>()};
	jule::Slice<jule::Ref<_11ce1fd50_ParamDecl>> _field_params{jule::Slice<jule::Ref<_11ce1fd50_ParamDecl>>()};


	_11ce1fd50_FnDecl(_11ce22a00_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Str __param_ident, jule::Slice<jule::Ref<_11ce1fd50_Directive>> __param_directives, jule::Ref<_11ce1fd50_CommentGroup> __param_doc_comments, jule::Ref<_11ce1fd50_ScopeTree> __param_scope, jule::Slice<jule::Ref<_11ce1fd50_GenericDecl>> __param_generics, jule::Ref<_11ce1fd50_RetTypeDecl> __param_result, jule::Slice<jule::Ref<_11ce1fd50_ParamDecl>> __param_params)   {
		this->self = jule::Ref<_11ce1fd50_FnDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_global = __param_global;
		this->_field_unsafety = __param_unsafety;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_statically = __param_statically;
		this->_field_ident = __param_ident;
		this->_field_directives = __param_directives;
		this->_field_doc_comments = __param_doc_comments;
		this->_field_scope = __param_scope;
		this->_field_generics = __param_generics;
		this->_field_result = __param_result;
		this->_field_params = __param_params;
	}

	~_11ce1fd50_FnDecl(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_FnDecl(void)   { this->self = jule::Ref<_11ce1fd50_FnDecl>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_FnDecl &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_global == _Src._field_global &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_statically == _Src._field_statically &&
			this->_field_ident == _Src._field_ident &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_scope == _Src._field_scope &&
			this->_field_generics == _Src._field_generics &&
			this->_field_result == _Src._field_result &&
			this->_field_params == _Src._field_params;
	}

	inline bool operator!=(const _11ce1fd50_FnDecl &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_ParamDecl {
	jule::Ref<_11ce1fd50_ParamDecl> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_variadic{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Ref<_11ce1fd50_TypeDecl> _field_kind{jule::Ref<_11ce1fd50_TypeDecl>()};
	jule::Str _field_ident{jule::Str()};


	_11ce1fd50_ParamDecl(_11ce22a00_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ref<_11ce1fd50_TypeDecl> __param_kind, jule::Str __param_ident)   {
		this->self = jule::Ref<_11ce1fd50_ParamDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_mutable = __param_mutable;
		this->_field_variadic = __param_variadic;
		this->_field_reference = __param_reference;
		this->_field_kind = __param_kind;
		this->_field_ident = __param_ident;
	}

	~_11ce1fd50_ParamDecl(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_ParamDecl(void)   { this->self = jule::Ref<_11ce1fd50_ParamDecl>::make(this, nullptr); }

	inline jule::Bool _method_is_self(void);


	inline jule::Bool _method_is_ref(void);


	inline bool operator==(const _11ce1fd50_ParamDecl &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_reference == _Src._field_reference &&
			this->_field_kind == _Src._field_kind &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _11ce1fd50_ParamDecl &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_AssignLeft {
	jule::Ref<_11ce1fd50_AssignLeft> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_11ce1fd50_Expr> _field_expr{jule::Ref<_11ce1fd50_Expr>()};


	_11ce1fd50_AssignLeft(_11ce22a00_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Str __param_ident, jule::Ref<_11ce1fd50_Expr> __param_expr)   {
		this->self = jule::Ref<_11ce1fd50_AssignLeft>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_mutable = __param_mutable;
		this->_field_reference = __param_reference;
		this->_field_ident = __param_ident;
		this->_field_expr = __param_expr;
	}

	~_11ce1fd50_AssignLeft(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_AssignLeft(void)   { this->self = jule::Ref<_11ce1fd50_AssignLeft>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_AssignLeft &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_reference == _Src._field_reference &&
			this->_field_ident == _Src._field_ident &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _11ce1fd50_AssignLeft &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_GotoSt {
	jule::Ref<_11ce1fd50_GotoSt> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	_11ce22a00_Token _field_label{_11ce22a00_Token()};


	_11ce1fd50_GotoSt(_11ce22a00_Token __param_token, _11ce22a00_Token __param_label)   {
		this->self = jule::Ref<_11ce1fd50_GotoSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_label = __param_label;
	}

	~_11ce1fd50_GotoSt(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_GotoSt(void)   { this->self = jule::Ref<_11ce1fd50_GotoSt>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_GotoSt &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _11ce1fd50_GotoSt &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_GenericDecl {
	jule::Ref<_11ce1fd50_GenericDecl> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Str _field_ident{jule::Str()};


	_11ce1fd50_GenericDecl(_11ce22a00_Token __param_token, jule::Str __param_ident)   {
		this->self = jule::Ref<_11ce1fd50_GenericDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
	}

	~_11ce1fd50_GenericDecl(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_GenericDecl(void)   { this->self = jule::Ref<_11ce1fd50_GenericDecl>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_GenericDecl &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _11ce1fd50_GenericDecl &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_FnCallExpr {
	jule::Ref<_11ce1fd50_FnCallExpr> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Ref<_11ce1fd50_Expr> _field_expr{jule::Ref<_11ce1fd50_Expr>()};
	jule::Slice<jule::Ref<_11ce1fd50_TypeDecl>> _field_generics{jule::Slice<jule::Ref<_11ce1fd50_TypeDecl>>()};
	jule::Slice<jule::Ref<_11ce1fd50_Expr>> _field_args{jule::Slice<jule::Ref<_11ce1fd50_Expr>>()};
	jule::Bool _field_concurrent{jule::Bool()};


	_11ce1fd50_FnCallExpr(_11ce22a00_Token __param_token, jule::Ref<_11ce1fd50_Expr> __param_expr, jule::Slice<jule::Ref<_11ce1fd50_TypeDecl>> __param_generics, jule::Slice<jule::Ref<_11ce1fd50_Expr>> __param_args, jule::Bool __param_concurrent)   {
		this->self = jule::Ref<_11ce1fd50_FnCallExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
		this->_field_generics = __param_generics;
		this->_field_args = __param_args;
		this->_field_concurrent = __param_concurrent;
	}

	~_11ce1fd50_FnCallExpr(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_FnCallExpr(void)   { this->self = jule::Ref<_11ce1fd50_FnCallExpr>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_FnCallExpr &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_generics == _Src._field_generics &&
			this->_field_args == _Src._field_args &&
			this->_field_concurrent == _Src._field_concurrent;
	}

	inline bool operator!=(const _11ce1fd50_FnCallExpr &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_Expr {
	jule::Ref<_11ce1fd50_Expr> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Any _field_kind{jule::Any()};


	_11ce1fd50_Expr(_11ce22a00_Token __param_token, jule::Any __param_kind)   {
		this->self = jule::Ref<_11ce1fd50_Expr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_kind = __param_kind;
	}

	~_11ce1fd50_Expr(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_Expr(void)   { this->self = jule::Ref<_11ce1fd50_Expr>::make(this, nullptr); }

	inline jule::Bool _method_is_fn_call(void);


	inline bool operator==(const _11ce1fd50_Expr &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _11ce1fd50_Expr &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_IdentTypeDecl {
	jule::Ref<_11ce1fd50_IdentTypeDecl> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Slice<jule::Ref<_11ce1fd50_TypeDecl>> _field_generics{jule::Slice<jule::Ref<_11ce1fd50_TypeDecl>>()};


	_11ce1fd50_IdentTypeDecl(_11ce22a00_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Slice<jule::Ref<_11ce1fd50_TypeDecl>> __param_generics)   {
		this->self = jule::Ref<_11ce1fd50_IdentTypeDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_generics = __param_generics;
	}

	~_11ce1fd50_IdentTypeDecl(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_IdentTypeDecl(void)   { this->self = jule::Ref<_11ce1fd50_IdentTypeDecl>::make(this, nullptr); }

	inline jule::Bool _method_is_prim(void);


	inline bool operator==(const _11ce1fd50_IdentTypeDecl &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_generics == _Src._field_generics;
	}

	inline bool operator!=(const _11ce1fd50_IdentTypeDecl &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_TypeDecl {
	jule::Ref<_11ce1fd50_TypeDecl> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Any _field_kind{jule::Any()};


	_11ce1fd50_TypeDecl(_11ce22a00_Token __param_token, jule::Any __param_kind)   {
		this->self = jule::Ref<_11ce1fd50_TypeDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_kind = __param_kind;
	}

	~_11ce1fd50_TypeDecl(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_TypeDecl(void)   { this->self = jule::Ref<_11ce1fd50_TypeDecl>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_TypeDecl &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _11ce1fd50_TypeDecl &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_Directive {
	jule::Ref<_11ce1fd50_Directive> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Str _field_tag{jule::Str()};
	jule::Slice<jule::Str> _field_args{jule::Slice<jule::Str>()};


	_11ce1fd50_Directive(_11ce22a00_Token __param_token, jule::Str __param_tag, jule::Slice<jule::Str> __param_args)   {
		this->self = jule::Ref<_11ce1fd50_Directive>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_tag = __param_tag;
		this->_field_args = __param_args;
	}

	~_11ce1fd50_Directive(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_Directive(void)   { this->self = jule::Ref<_11ce1fd50_Directive>::make(this, nullptr); }

	inline bool operator==(const _11ce1fd50_Directive &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_tag == _Src._field_tag &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _11ce1fd50_Directive &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_Comment {
	jule::Ref<_11ce1fd50_Comment> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Str _field_text{jule::Str()};


	_11ce1fd50_Comment(_11ce22a00_Token __param_token, jule::Str __param_text)   {
		this->self = jule::Ref<_11ce1fd50_Comment>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_text = __param_text;
	}

	~_11ce1fd50_Comment(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_Comment(void)   { this->self = jule::Ref<_11ce1fd50_Comment>::make(this, nullptr); }

	inline jule::Bool _method_is_directive(void);


	inline bool operator==(const _11ce1fd50_Comment &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_text == _Src._field_text;
	}

	inline bool operator!=(const _11ce1fd50_Comment &_Src) { return !this->operator==(_Src); }
};


struct _11ce1fd50_Node {
	jule::Ref<_11ce1fd50_Node> self{};

	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Any _field_data{jule::Any()};


	_11ce1fd50_Node(_11ce22a00_Token __param_token, jule::Any __param_data)   {
		this->self = jule::Ref<_11ce1fd50_Node>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_data = __param_data;
	}

	~_11ce1fd50_Node(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce1fd50_Node(void)   { this->self = jule::Ref<_11ce1fd50_Node>::make(this, nullptr); }

	inline jule::Bool _method_is_decl(void);


	inline jule::Bool _method_is_comment(void);


	inline jule::Bool _method_is_impl(void);


	inline jule::Bool _method_is_use_decl(void);


	inline bool operator==(const _11ce1fd50_Node &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _11ce1fd50_Node &_Src) { return !this->operator==(_Src); }
};


struct _10dba8790_Vector_0 {
	jule::Ref<_10dba8790_Vector_0> self{};

	StdJuleVectorBuffer<_11ce22a00_Token> _field__buffer{StdJuleVectorBuffer<_11ce22a00_Token>()};


	_10dba8790_Vector_0(StdJuleVectorBuffer<_11ce22a00_Token> __param__buffer)   {
		this->self = jule::Ref<_10dba8790_Vector_0>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_10dba8790_Vector_0(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10dba8790_Vector_0(void)   { this->self = jule::Ref<_10dba8790_Vector_0>::make(this, nullptr); }

	static inline _10dba8790_Vector_0 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline _11ce22a00_Token _method_at(jule::Int);


	inline void _method_set(jule::Int,_11ce22a00_Token);


	inline void _method_push(_11ce22a00_Token);


	inline void _method_push_front(_11ce22a00_Token);


	inline void _method_append(jule::Slice<_11ce22a00_Token>);


	inline void _method_merge(_10dba8790_Vector_0);


	inline void _method_merge_front(_10dba8790_Vector_0);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,_11ce22a00_Token);


	inline _10dba8790_Vector_0 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _10dba8790_Vector_0 &_Src) {
		return true;
	}

	inline bool operator!=(const _10dba8790_Vector_0 &_Src) { return !this->operator==(_Src); }
};

struct _10dba8790_Vector_1 {
	jule::Ref<_10dba8790_Vector_1> self{};

	StdJuleVectorBuffer<jule::Ref<_11ce1fd50_Directive>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_11ce1fd50_Directive>>()};


	_10dba8790_Vector_1(StdJuleVectorBuffer<jule::Ref<_11ce1fd50_Directive>> __param__buffer)   {
		this->self = jule::Ref<_10dba8790_Vector_1>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_10dba8790_Vector_1(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10dba8790_Vector_1(void)   { this->self = jule::Ref<_10dba8790_Vector_1>::make(this, nullptr); }

	static inline _10dba8790_Vector_1 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_11ce1fd50_Directive> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_11ce1fd50_Directive>);


	inline void _method_push(jule::Ref<_11ce1fd50_Directive>);


	inline void _method_push_front(jule::Ref<_11ce1fd50_Directive>);


	inline void _method_append(jule::Slice<jule::Ref<_11ce1fd50_Directive>>);


	inline void _method_merge(_10dba8790_Vector_1);


	inline void _method_merge_front(_10dba8790_Vector_1);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_11ce1fd50_Directive>);


	inline _10dba8790_Vector_1 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _10dba8790_Vector_1 &_Src) {
		return true;
	}

	inline bool operator!=(const _10dba8790_Vector_1 &_Src) { return !this->operator==(_Src); }
};

struct _10dba8790_Vector_2 {
	jule::Ref<_10dba8790_Vector_2> self{};

	StdJuleVectorBuffer<jule::Ref<_11ce1fd50_UseDecl>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_11ce1fd50_UseDecl>>()};


	_10dba8790_Vector_2(StdJuleVectorBuffer<jule::Ref<_11ce1fd50_UseDecl>> __param__buffer)   {
		this->self = jule::Ref<_10dba8790_Vector_2>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_10dba8790_Vector_2(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10dba8790_Vector_2(void)   { this->self = jule::Ref<_10dba8790_Vector_2>::make(this, nullptr); }

	static inline _10dba8790_Vector_2 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_11ce1fd50_UseDecl> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_11ce1fd50_UseDecl>);


	inline void _method_push(jule::Ref<_11ce1fd50_UseDecl>);


	inline void _method_push_front(jule::Ref<_11ce1fd50_UseDecl>);


	inline void _method_append(jule::Slice<jule::Ref<_11ce1fd50_UseDecl>>);


	inline void _method_merge(_10dba8790_Vector_2);


	inline void _method_merge_front(_10dba8790_Vector_2);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_11ce1fd50_UseDecl>);


	inline _10dba8790_Vector_2 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _10dba8790_Vector_2 &_Src) {
		return true;
	}

	inline bool operator!=(const _10dba8790_Vector_2 &_Src) { return !this->operator==(_Src); }
};

struct _10dba8790_Vector_3 {
	jule::Ref<_10dba8790_Vector_3> self{};

	StdJuleVectorBuffer<jule::Ref<_11ce1fd50_Impl>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_11ce1fd50_Impl>>()};


	_10dba8790_Vector_3(StdJuleVectorBuffer<jule::Ref<_11ce1fd50_Impl>> __param__buffer)   {
		this->self = jule::Ref<_10dba8790_Vector_3>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_10dba8790_Vector_3(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10dba8790_Vector_3(void)   { this->self = jule::Ref<_10dba8790_Vector_3>::make(this, nullptr); }

	static inline _10dba8790_Vector_3 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_11ce1fd50_Impl> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_11ce1fd50_Impl>);


	inline void _method_push(jule::Ref<_11ce1fd50_Impl>);


	inline void _method_push_front(jule::Ref<_11ce1fd50_Impl>);


	inline void _method_append(jule::Slice<jule::Ref<_11ce1fd50_Impl>>);


	inline void _method_merge(_10dba8790_Vector_3);


	inline void _method_merge_front(_10dba8790_Vector_3);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_11ce1fd50_Impl>);


	inline _10dba8790_Vector_3 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _10dba8790_Vector_3 &_Src) {
		return true;
	}

	inline bool operator!=(const _10dba8790_Vector_3 &_Src) { return !this->operator==(_Src); }
};

struct _10dba8790_Vector_4 {
	jule::Ref<_10dba8790_Vector_4> self{};

	StdJuleVectorBuffer<jule::Ref<_11ce1fd50_Comment>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_11ce1fd50_Comment>>()};


	_10dba8790_Vector_4(StdJuleVectorBuffer<jule::Ref<_11ce1fd50_Comment>> __param__buffer)   {
		this->self = jule::Ref<_10dba8790_Vector_4>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_10dba8790_Vector_4(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10dba8790_Vector_4(void)   { this->self = jule::Ref<_10dba8790_Vector_4>::make(this, nullptr); }

	static inline _10dba8790_Vector_4 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_11ce1fd50_Comment> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_11ce1fd50_Comment>);


	inline void _method_push(jule::Ref<_11ce1fd50_Comment>);


	inline void _method_push_front(jule::Ref<_11ce1fd50_Comment>);


	inline void _method_append(jule::Slice<jule::Ref<_11ce1fd50_Comment>>);


	inline void _method_merge(_10dba8790_Vector_4);


	inline void _method_merge_front(_10dba8790_Vector_4);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_11ce1fd50_Comment>);


	inline _10dba8790_Vector_4 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _10dba8790_Vector_4 &_Src) {
		return true;
	}

	inline bool operator!=(const _10dba8790_Vector_4 &_Src) { return !this->operator==(_Src); }
};

struct _10dba8790_Vector_5 {
	jule::Ref<_10dba8790_Vector_5> self{};

	StdJuleVectorBuffer<_11ce1fd50_Node> _field__buffer{StdJuleVectorBuffer<_11ce1fd50_Node>()};


	_10dba8790_Vector_5(StdJuleVectorBuffer<_11ce1fd50_Node> __param__buffer)   {
		this->self = jule::Ref<_10dba8790_Vector_5>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_10dba8790_Vector_5(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10dba8790_Vector_5(void)   { this->self = jule::Ref<_10dba8790_Vector_5>::make(this, nullptr); }

	static inline _10dba8790_Vector_5 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline _11ce1fd50_Node _method_at(jule::Int);


	inline void _method_set(jule::Int,_11ce1fd50_Node);


	inline void _method_push(_11ce1fd50_Node);


	inline void _method_push_front(_11ce1fd50_Node);


	inline void _method_append(jule::Slice<_11ce1fd50_Node>);


	inline void _method_merge(_10dba8790_Vector_5);


	inline void _method_merge_front(_10dba8790_Vector_5);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,_11ce1fd50_Node);


	inline _10dba8790_Vector_5 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _10dba8790_Vector_5 &_Src) {
		return true;
	}

	inline bool operator!=(const _10dba8790_Vector_5 &_Src) { return !this->operator==(_Src); }
};

struct _10dba8790_Vector_6 {
	jule::Ref<_10dba8790_Vector_6> self{};

	StdJuleVectorBuffer<_10e8ca650_Pass> _field__buffer{StdJuleVectorBuffer<_10e8ca650_Pass>()};


	_10dba8790_Vector_6(StdJuleVectorBuffer<_10e8ca650_Pass> __param__buffer)   {
		this->self = jule::Ref<_10dba8790_Vector_6>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_10dba8790_Vector_6(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10dba8790_Vector_6(void)   { this->self = jule::Ref<_10dba8790_Vector_6>::make(this, nullptr); }

	static inline _10dba8790_Vector_6 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline _10e8ca650_Pass _method_at(jule::Int);


	inline void _method_set(jule::Int,_10e8ca650_Pass);


	inline void _method_push(_10e8ca650_Pass);


	inline void _method_push_front(_10e8ca650_Pass);


	inline void _method_append(jule::Slice<_10e8ca650_Pass>);


	inline void _method_merge(_10dba8790_Vector_6);


	inline void _method_merge_front(_10dba8790_Vector_6);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,_10e8ca650_Pass);


	inline _10dba8790_Vector_6 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _10dba8790_Vector_6 &_Src) {
		return true;
	}

	inline bool operator!=(const _10dba8790_Vector_6 &_Src) { return !this->operator==(_Src); }
};

struct _10dba8790_Vector_7 {
	jule::Ref<_10dba8790_Vector_7> self{};

	StdJuleVectorBuffer<jule::Ref<_10e9b6a10_ImportInfo>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_10e9b6a10_ImportInfo>>()};


	_10dba8790_Vector_7(StdJuleVectorBuffer<jule::Ref<_10e9b6a10_ImportInfo>> __param__buffer)   {
		this->self = jule::Ref<_10dba8790_Vector_7>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_10dba8790_Vector_7(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10dba8790_Vector_7(void)   { this->self = jule::Ref<_10dba8790_Vector_7>::make(this, nullptr); }

	static inline _10dba8790_Vector_7 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_10e9b6a10_ImportInfo> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_10e9b6a10_ImportInfo>);


	inline void _method_push(jule::Ref<_10e9b6a10_ImportInfo>);


	inline void _method_push_front(jule::Ref<_10e9b6a10_ImportInfo>);


	inline void _method_append(jule::Slice<jule::Ref<_10e9b6a10_ImportInfo>>);


	inline void _method_merge(_10dba8790_Vector_7);


	inline void _method_merge_front(_10dba8790_Vector_7);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_10e9b6a10_ImportInfo>);


	inline _10dba8790_Vector_7 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _10dba8790_Vector_7 &_Src) {
		return true;
	}

	inline bool operator!=(const _10dba8790_Vector_7 &_Src) { return !this->operator==(_Src); }
};

struct _10dba8790_Vector_8 {
	jule::Ref<_10dba8790_Vector_8> self{};

	StdJuleVectorBuffer<jule::Any> _field__buffer{StdJuleVectorBuffer<jule::Any>()};


	_10dba8790_Vector_8(StdJuleVectorBuffer<jule::Any> __param__buffer)   {
		this->self = jule::Ref<_10dba8790_Vector_8>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_10dba8790_Vector_8(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10dba8790_Vector_8(void)   { this->self = jule::Ref<_10dba8790_Vector_8>::make(this, nullptr); }

	static inline _10dba8790_Vector_8 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Any _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Any);


	inline void _method_push(jule::Any);


	inline void _method_push_front(jule::Any);


	inline void _method_append(jule::Slice<jule::Any>);


	inline void _method_merge(_10dba8790_Vector_8);


	inline void _method_merge_front(_10dba8790_Vector_8);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Any);


	inline _10dba8790_Vector_8 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _10dba8790_Vector_8 &_Src) {
		return true;
	}

	inline bool operator!=(const _10dba8790_Vector_8 &_Src) { return !this->operator==(_Src); }
};

struct _10dba8790_Vector_9 {
	jule::Ref<_10dba8790_Vector_9> self{};

	StdJuleVectorBuffer<jule::Ref<_10ebc2ad0_Var>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_10ebc2ad0_Var>>()};


	_10dba8790_Vector_9(StdJuleVectorBuffer<jule::Ref<_10ebc2ad0_Var>> __param__buffer)   {
		this->self = jule::Ref<_10dba8790_Vector_9>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_10dba8790_Vector_9(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10dba8790_Vector_9(void)   { this->self = jule::Ref<_10dba8790_Vector_9>::make(this, nullptr); }

	static inline _10dba8790_Vector_9 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_10ebc2ad0_Var> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_10ebc2ad0_Var>);


	inline void _method_push(jule::Ref<_10ebc2ad0_Var>);


	inline void _method_push_front(jule::Ref<_10ebc2ad0_Var>);


	inline void _method_append(jule::Slice<jule::Ref<_10ebc2ad0_Var>>);


	inline void _method_merge(_10dba8790_Vector_9);


	inline void _method_merge_front(_10dba8790_Vector_9);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_10ebc2ad0_Var>);


	inline _10dba8790_Vector_9 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _10dba8790_Vector_9 &_Src) {
		return true;
	}

	inline bool operator!=(const _10dba8790_Vector_9 &_Src) { return !this->operator==(_Src); }
};

struct _10dba8790_Vector_10 {
	jule::Ref<_10dba8790_Vector_10> self{};

	StdJuleVectorBuffer<jule::Ref<_10eeb79b0_TypeAlias>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_10eeb79b0_TypeAlias>>()};


	_10dba8790_Vector_10(StdJuleVectorBuffer<jule::Ref<_10eeb79b0_TypeAlias>> __param__buffer)   {
		this->self = jule::Ref<_10dba8790_Vector_10>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_10dba8790_Vector_10(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10dba8790_Vector_10(void)   { this->self = jule::Ref<_10dba8790_Vector_10>::make(this, nullptr); }

	static inline _10dba8790_Vector_10 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_10eeb79b0_TypeAlias> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_10eeb79b0_TypeAlias>);


	inline void _method_push(jule::Ref<_10eeb79b0_TypeAlias>);


	inline void _method_push_front(jule::Ref<_10eeb79b0_TypeAlias>);


	inline void _method_append(jule::Slice<jule::Ref<_10eeb79b0_TypeAlias>>);


	inline void _method_merge(_10dba8790_Vector_10);


	inline void _method_merge_front(_10dba8790_Vector_10);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_10eeb79b0_TypeAlias>);


	inline _10dba8790_Vector_10 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _10dba8790_Vector_10 &_Src) {
		return true;
	}

	inline bool operator!=(const _10dba8790_Vector_10 &_Src) { return !this->operator==(_Src); }
};

struct _10dba8790_Vector_11 {
	jule::Ref<_10dba8790_Vector_11> self{};

	StdJuleVectorBuffer<jule::Ref<_10e56a140_Fn>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_10e56a140_Fn>>()};


	_10dba8790_Vector_11(StdJuleVectorBuffer<jule::Ref<_10e56a140_Fn>> __param__buffer)   {
		this->self = jule::Ref<_10dba8790_Vector_11>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_10dba8790_Vector_11(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10dba8790_Vector_11(void)   { this->self = jule::Ref<_10dba8790_Vector_11>::make(this, nullptr); }

	static inline _10dba8790_Vector_11 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_10e56a140_Fn> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_10e56a140_Fn>);


	inline void _method_push(jule::Ref<_10e56a140_Fn>);


	inline void _method_push_front(jule::Ref<_10e56a140_Fn>);


	inline void _method_append(jule::Slice<jule::Ref<_10e56a140_Fn>>);


	inline void _method_merge(_10dba8790_Vector_11);


	inline void _method_merge_front(_10dba8790_Vector_11);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_10e56a140_Fn>);


	inline _10dba8790_Vector_11 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _10dba8790_Vector_11 &_Src) {
		return true;
	}

	inline bool operator!=(const _10dba8790_Vector_11 &_Src) { return !this->operator==(_Src); }
};

struct _10dba8790_Vector_12 {
	jule::Ref<_10dba8790_Vector_12> self{};

	StdJuleVectorBuffer<jule::Ref<_10e3fc8f0_Struct>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_10e3fc8f0_Struct>>()};


	_10dba8790_Vector_12(StdJuleVectorBuffer<jule::Ref<_10e3fc8f0_Struct>> __param__buffer)   {
		this->self = jule::Ref<_10dba8790_Vector_12>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_10dba8790_Vector_12(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10dba8790_Vector_12(void)   { this->self = jule::Ref<_10dba8790_Vector_12>::make(this, nullptr); }

	static inline _10dba8790_Vector_12 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_10e3fc8f0_Struct> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_10e3fc8f0_Struct>);


	inline void _method_push(jule::Ref<_10e3fc8f0_Struct>);


	inline void _method_push_front(jule::Ref<_10e3fc8f0_Struct>);


	inline void _method_append(jule::Slice<jule::Ref<_10e3fc8f0_Struct>>);


	inline void _method_merge(_10dba8790_Vector_12);


	inline void _method_merge_front(_10dba8790_Vector_12);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_10e3fc8f0_Struct>);


	inline _10dba8790_Vector_12 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _10dba8790_Vector_12 &_Src) {
		return true;
	}

	inline bool operator!=(const _10dba8790_Vector_12 &_Src) { return !this->operator==(_Src); }
};

struct _10dba8790_Vector_13 {
	jule::Ref<_10dba8790_Vector_13> self{};

	StdJuleVectorBuffer<jule::Ref<_10e3d6eb0_Trait>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_10e3d6eb0_Trait>>()};


	_10dba8790_Vector_13(StdJuleVectorBuffer<jule::Ref<_10e3d6eb0_Trait>> __param__buffer)   {
		this->self = jule::Ref<_10dba8790_Vector_13>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_10dba8790_Vector_13(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10dba8790_Vector_13(void)   { this->self = jule::Ref<_10dba8790_Vector_13>::make(this, nullptr); }

	static inline _10dba8790_Vector_13 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_10e3d6eb0_Trait> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_10e3d6eb0_Trait>);


	inline void _method_push(jule::Ref<_10e3d6eb0_Trait>);


	inline void _method_push_front(jule::Ref<_10e3d6eb0_Trait>);


	inline void _method_append(jule::Slice<jule::Ref<_10e3d6eb0_Trait>>);


	inline void _method_merge(_10dba8790_Vector_13);


	inline void _method_merge_front(_10dba8790_Vector_13);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_10e3d6eb0_Trait>);


	inline _10dba8790_Vector_13 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _10dba8790_Vector_13 &_Src) {
		return true;
	}

	inline bool operator!=(const _10dba8790_Vector_13 &_Src) { return !this->operator==(_Src); }
};

struct _10dba8790_Vector_14 {
	jule::Ref<_10dba8790_Vector_14> self{};

	StdJuleVectorBuffer<jule::Ref<_10e975f00_Enum>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_10e975f00_Enum>>()};


	_10dba8790_Vector_14(StdJuleVectorBuffer<jule::Ref<_10e975f00_Enum>> __param__buffer)   {
		this->self = jule::Ref<_10dba8790_Vector_14>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_10dba8790_Vector_14(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10dba8790_Vector_14(void)   { this->self = jule::Ref<_10dba8790_Vector_14>::make(this, nullptr); }

	static inline _10dba8790_Vector_14 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_10e975f00_Enum> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_10e975f00_Enum>);


	inline void _method_push(jule::Ref<_10e975f00_Enum>);


	inline void _method_push_front(jule::Ref<_10e975f00_Enum>);


	inline void _method_append(jule::Slice<jule::Ref<_10e975f00_Enum>>);


	inline void _method_merge(_10dba8790_Vector_14);


	inline void _method_merge_front(_10dba8790_Vector_14);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_10e975f00_Enum>);


	inline _10dba8790_Vector_14 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _10dba8790_Vector_14 &_Src) {
		return true;
	}

	inline bool operator!=(const _10dba8790_Vector_14 &_Src) { return !this->operator==(_Src); }
};

struct _10dba8790_Vector_15 {
	jule::Ref<_10dba8790_Vector_15> self{};

	StdJuleVectorBuffer<jule::Ref<_10e97d820_Impl>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_10e97d820_Impl>>()};


	_10dba8790_Vector_15(StdJuleVectorBuffer<jule::Ref<_10e97d820_Impl>> __param__buffer)   {
		this->self = jule::Ref<_10dba8790_Vector_15>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_10dba8790_Vector_15(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10dba8790_Vector_15(void)   { this->self = jule::Ref<_10dba8790_Vector_15>::make(this, nullptr); }

	static inline _10dba8790_Vector_15 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_10e97d820_Impl> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_10e97d820_Impl>);


	inline void _method_push(jule::Ref<_10e97d820_Impl>);


	inline void _method_push_front(jule::Ref<_10e97d820_Impl>);


	inline void _method_append(jule::Slice<jule::Ref<_10e97d820_Impl>>);


	inline void _method_merge(_10dba8790_Vector_15);


	inline void _method_merge_front(_10dba8790_Vector_15);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_10e97d820_Impl>);


	inline _10dba8790_Vector_15 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _10dba8790_Vector_15 &_Src) {
		return true;
	}

	inline bool operator!=(const _10dba8790_Vector_15 &_Src) { return !this->operator==(_Src); }
};


struct _11ce078a0_File {
	jule::Ref<_11ce078a0_File> self{};

	jule::Str _field__path{jule::Str()};
	_10dba8790_Vector_0 _field__tokens{_10dba8790_Vector_0()};


	_11ce078a0_File(jule::Str __param__path, _10dba8790_Vector_0 __param__tokens)   {
		this->self = jule::Ref<_11ce078a0_File>::make(this, nullptr);

		this->_field__path = __param__path;
		this->_field__tokens = __param__tokens;
	}

	~_11ce078a0_File(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce078a0_File(void)   { this->self = jule::Ref<_11ce078a0_File>::make(this, nullptr); }

	inline jule::Bool _method_is_ok(void);


	inline jule::Str _method_path(void);


	inline jule::Str _method_dir(void);


	inline jule::Str _method_name(void);


	inline jule::Uintptr _method_addr(void);


	inline _10dba8790_Vector_0 _method_tokens(void);


	inline bool operator==(const _11ce078a0_File &_Src) {
		return 
			this->_field__path == _Src._field__path &&
			this->_field__tokens == _Src._field__tokens;
	}

	inline bool operator!=(const _11ce078a0_File &_Src) { return !this->operator==(_Src); }
};


struct _11cec0de0_Lex {
	jule::Ref<_11cec0de0_Lex> self{};

	jule::Bool _field_first_token_of_line{jule::Bool()};
	_10dba8790_Vector_0 _field_tokens{_10dba8790_Vector_0()};
	jule::Slice<jule::U8> _field_data{jule::Slice<jule::U8>()};
	jule::Ref<_11ce078a0_File> _field_file{jule::Ref<_11ce078a0_File>()};
	jule::Int _field_pos{jule::Int()};
	jule::Int _field_column{jule::Int()};
	jule::Int _field_row{jule::Int()};
	jule::Slice<_13cfd2d20_Log> _field_errors{jule::Slice<_13cfd2d20_Log>()};


	_11cec0de0_Lex(jule::Bool __param_first_token_of_line, _10dba8790_Vector_0 __param_tokens, jule::Slice<jule::U8> __param_data, jule::Ref<_11ce078a0_File> __param_file, jule::Int __param_pos, jule::Int __param_column, jule::Int __param_row, jule::Slice<_13cfd2d20_Log> __param_errors)   {
		this->self = jule::Ref<_11cec0de0_Lex>::make(this, nullptr);

		this->_field_first_token_of_line = __param_first_token_of_line;
		this->_field_tokens = __param_tokens;
		this->_field_data = __param_data;
		this->_field_file = __param_file;
		this->_field_pos = __param_pos;
		this->_field_column = __param_column;
		this->_field_row = __param_row;
		this->_field_errors = __param_errors;
	}

	~_11cec0de0_Lex(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11cec0de0_Lex(void)   { this->self = jule::Ref<_11cec0de0_Lex>::make(this, nullptr); }

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err_tok(_11ce22a00_Token,jule::Str);


	inline void _method_lex(void);


	inline jule::Str _method_id(jule::Slice<jule::U8>);


	inline jule::Slice<jule::U8> _method_resume(void);


	inline void _method_lex_line_comment(_11ce22a00_Token*);


	inline void _method_lex_range_comment(void);


	inline jule::Str _method_num(jule::Slice<jule::U8>);


	inline jule::Str _method_escape_seq(jule::Slice<jule::U8>);


	inline jule::Str _method_get_rune(jule::Slice<jule::U8>,jule::Bool);


	inline jule::Str _method_lex_rune(jule::Slice<jule::U8>);


	inline jule::Str _method_lex_str(void);


	inline void _method_new_line(void);


	inline jule::Bool _method_is_op(jule::Slice<jule::U8>,jule::Str,jule::Uint,_11ce22a00_Token*);


	inline jule::Bool _method_lex_basic_ops(jule::Slice<jule::U8>,_11ce22a00_Token*);


	inline jule::Bool _method_lex_id(jule::Slice<jule::U8>,_11ce22a00_Token*);


	inline jule::Bool _method_lex_num(jule::Slice<jule::U8>,_11ce22a00_Token*);


	inline _11ce22a00_Token _method_token(void);


	inline bool operator==(const _11cec0de0_Lex &_Src) {
		return 
			this->_field_first_token_of_line == _Src._field_first_token_of_line &&
			this->_field_tokens == _Src._field_tokens &&
			this->_field_data == _Src._field_data &&
			this->_field_file == _Src._field_file &&
			this->_field_pos == _Src._field_pos &&
			this->_field_column == _Src._field_column &&
			this->_field_row == _Src._field_row &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _11cec0de0_Lex &_Src) { return !this->operator==(_Src); }
};


struct _11ce19be0_Ast {
	jule::Ref<_11ce19be0_Ast> self{};

	jule::Ref<_11ce078a0_File> _field_file{jule::Ref<_11ce078a0_File>()};
	_10dba8790_Vector_1 _field_top_directives{_10dba8790_Vector_1()};
	_10dba8790_Vector_2 _field_use_decls{_10dba8790_Vector_2()};
	_10dba8790_Vector_3 _field_impls{_10dba8790_Vector_3()};
	_10dba8790_Vector_4 _field_comments{_10dba8790_Vector_4()};
	_10dba8790_Vector_5 _field_decls{_10dba8790_Vector_5()};


	_11ce19be0_Ast(jule::Ref<_11ce078a0_File> __param_file, _10dba8790_Vector_1 __param_top_directives, _10dba8790_Vector_2 __param_use_decls, _10dba8790_Vector_3 __param_impls, _10dba8790_Vector_4 __param_comments, _10dba8790_Vector_5 __param_decls)   {
		this->self = jule::Ref<_11ce19be0_Ast>::make(this, nullptr);

		this->_field_file = __param_file;
		this->_field_top_directives = __param_top_directives;
		this->_field_use_decls = __param_use_decls;
		this->_field_impls = __param_impls;
		this->_field_comments = __param_comments;
		this->_field_decls = __param_decls;
	}

	~_11ce19be0_Ast(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_11ce19be0_Ast(void)   { this->self = jule::Ref<_11ce19be0_Ast>::make(this, nullptr); }

	inline bool operator==(const _11ce19be0_Ast &_Src) {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_top_directives == _Src._field_top_directives &&
			this->_field_use_decls == _Src._field_use_decls &&
			this->_field_impls == _Src._field_impls &&
			this->_field_comments == _Src._field_comments &&
			this->_field_decls == _Src._field_decls;
	}

	inline bool operator!=(const _11ce19be0_Ast &_Src) { return !this->operator==(_Src); }
};


struct _10e3fc8f0_Struct {
	jule::Ref<_10e3fc8f0_Struct> self{};

	jule::Ref<_10e9847f0_Sema> _field_sema{jule::Ref<_10e9847f0_Sema>()};
	jule::Slice<jule::Ref<_10e3fc8f0_Struct>> _field_depends{jule::Slice<jule::Ref<_10e3fc8f0_Struct>>()};
	jule::Slice<jule::Ref<_10e3fc8f0_Struct>> _field_uses{jule::Slice<jule::Ref<_10e3fc8f0_Struct>>()};
	_11ce22a00_Token _field_token{_11ce22a00_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_10e3fc8f0_Field>> _field_fields{jule::Slice<jule::Ref<_10e3fc8f0_Field>>()};
	_10dba8790_Vector_11 _field_methods{_10dba8790_Vector_11()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Slice<jule::Ref<_11ce1fd50_Directive>> _field_directives{jule::Slice<jule::Ref<_11ce1fd50_Directive>>()};
	jule::Str _field_doc{jule::Str()};
	jule::Slice<jule::Ref<_11ce1fd50_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_11ce1fd50_GenericDecl>>()};
	jule::Slice<jule::Ref<_10e3d6eb0_Trait>> _field_implements{jule::Slice<jule::Ref<_10e3d6eb0_Trait>>()};
	jule::Ref<_10e8ca650_ReferenceStack> _field_references{jule::Ref<_10e8ca650_ReferenceStack>()};
	jule::Slice<jule::Ref<_10e3fc8f0_StructIns>> _field_instances{jule::Slice<jule::Ref<_10e3fc8f0_StructIns>>()};


	_10e3fc8f0_Struct(jule::Ref<_10e9847f0_Sema> __param_sema, jule::Slice<jule::Ref<_10e3fc8f0_Struct>> __param_depends, jule::Slice<jule::Ref<_10e3fc8f0_Struct>> __param_uses, _11ce22a00_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ref<_10e3fc8f0_Field>> __param_fields, _10dba8790_Vector_11 __param_methods, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ref<_11ce1fd50_Directive>> __param_directives, jule::Str __param_doc, jule::Slice<jule::Ref<_11ce1fd50_GenericDecl>> __param_generics, jule::Slice<jule::Ref<_10e3d6eb0_Trait>> __param_implements, jule::Ref<_10e8ca650_ReferenceStack> __param_references, jule::Slice<jule::Ref<_10e3fc8f0_StructIns>> __param_instances)   {
		this->self = jule::Ref<_10e3fc8f0_Struct>::make(this, nullptr);

		this->_field_sema = __param_sema;
		this->_field_depends = __param_depends;
		this->_field_uses = __param_uses;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_fields = __param_fields;
		this->_field_methods = __param_methods;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_directives = __param_directives;
		this->_field_doc = __param_doc;
		this->_field_generics = __param_generics;
		this->_field_implements = __param_implements;
		this->_field_references = __param_references;
		this->_field_instances = __param_instances;
	}

	~_10e3fc8f0_Struct(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e3fc8f0_Struct(void)   { this->self = jule::Ref<_10e3fc8f0_Struct>::make(this, nullptr); }

	inline jule::Ref<_10e3fc8f0_StructIns> _method_instance(void);


	inline jule::Ref<_10e3fc8f0_StructIns> _method_append_instance(jule::Ref<_10e3fc8f0_StructIns>);


	inline jule::Ref<_10e56a140_Fn> _method_find_method(jule::Str,jule::Bool);


	inline jule::Ref<_10e3fc8f0_Field> _method_find_field(jule::Str);


	inline jule::Bool _method_is_implements(jule::Ref<_10e3d6eb0_Trait>);


	inline jule::Bool _method_is_derives(jule::Str);


	inline jule::Bool _method_is_uses(jule::Ref<_10e3fc8f0_Struct>);


	inline bool operator==(const _10e3fc8f0_Struct &_Src) {
		return 
			this->_field_sema == _Src._field_sema &&
			this->_field_depends == _Src._field_depends &&
			this->_field_uses == _Src._field_uses &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_fields == _Src._field_fields &&
			this->_field_methods == _Src._field_methods &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc == _Src._field_doc &&
			this->_field_generics == _Src._field_generics &&
			this->_field_implements == _Src._field_implements &&
			this->_field_references == _Src._field_references &&
			this->_field_instances == _Src._field_instances;
	}

	inline bool operator!=(const _10e3fc8f0_Struct &_Src) { return !this->operator==(_Src); }
};


struct _10e8ca650_ReferenceStack {
	jule::Ref<_10e8ca650_ReferenceStack> self{};

	_10dba8790_Vector_8 _field_buffer{_10dba8790_Vector_8()};


	_10e8ca650_ReferenceStack(_10dba8790_Vector_8 __param_buffer)   {
		this->self = jule::Ref<_10e8ca650_ReferenceStack>::make(this, nullptr);

		this->_field_buffer = __param_buffer;
	}

	~_10e8ca650_ReferenceStack(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e8ca650_ReferenceStack(void)   { this->self = jule::Ref<_10e8ca650_ReferenceStack>::make(this, nullptr); }

	inline jule::Int _method_len(void);


	inline jule::Any _method_at(jule::Int);


	inline void _method_push(jule::Any);


	inline void _method_remove(jule::Int);


	inline jule::Bool _method_exist_0(jule::Ref<_10ebc2ad0_Var>);
	inline jule::Bool _method_exist_1(jule::Ref<_10e56a140_Fn>);


	inline bool operator==(const _10e8ca650_ReferenceStack &_Src) {
		return 
			this->_field_buffer == _Src._field_buffer;
	}

	inline bool operator!=(const _10e8ca650_ReferenceStack &_Src) { return !this->operator==(_Src); }
};


struct _10e97fcf0_Scope {
	jule::Ref<_10e97fcf0_Scope> self{};

	jule::Ref<_10e97fcf0_Scope> _field_parent{jule::Ref<_10e97fcf0_Scope>()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_deferred{jule::Bool()};
	_10dba8790_Vector_8 _field_stmts{_10dba8790_Vector_8()};


	_10e97fcf0_Scope(jule::Ref<_10e97fcf0_Scope> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, _10dba8790_Vector_8 __param_stmts)   {
		this->self = jule::Ref<_10e97fcf0_Scope>::make(this, nullptr);

		this->_field_parent = __param_parent;
		this->_field_unsafety = __param_unsafety;
		this->_field_deferred = __param_deferred;
		this->_field_stmts = __param_stmts;
	}

	~_10e97fcf0_Scope(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10e97fcf0_Scope(void)   { this->self = jule::Ref<_10e97fcf0_Scope>::make(this, nullptr); }

	inline bool operator==(const _10e97fcf0_Scope &_Src) {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_deferred == _Src._field_deferred &&
			this->_field_stmts == _Src._field_stmts;
	}

	inline bool operator!=(const _10e97fcf0_Scope &_Src) { return !this->operator==(_Src); }
};


struct _10ee5c510_SymbolTable: public _10f3df410_Lookup {
	jule::Ref<_10ee5c510_SymbolTable> self{};

	jule::Ref<_11ce078a0_File> _field_file{jule::Ref<_11ce078a0_File>()};
	_10dba8790_Vector_6 _field_passes{_10dba8790_Vector_6()};
	_10dba8790_Vector_7 _field_imports{_10dba8790_Vector_7()};
	_10dba8790_Vector_9 _field_vars{_10dba8790_Vector_9()};
	_10dba8790_Vector_10 _field_type_aliases{_10dba8790_Vector_10()};
	_10dba8790_Vector_12 _field_structs{_10dba8790_Vector_12()};
	_10dba8790_Vector_11 _field_funcs{_10dba8790_Vector_11()};
	_10dba8790_Vector_13 _field_traits{_10dba8790_Vector_13()};
	_10dba8790_Vector_14 _field_enums{_10dba8790_Vector_14()};
	_10dba8790_Vector_15 _field_impls{_10dba8790_Vector_15()};


	_10ee5c510_SymbolTable(jule::Ref<_11ce078a0_File> __param_file, _10dba8790_Vector_6 __param_passes, _10dba8790_Vector_7 __param_imports, _10dba8790_Vector_9 __param_vars, _10dba8790_Vector_10 __param_type_aliases, _10dba8790_Vector_12 __param_structs, _10dba8790_Vector_11 __param_funcs, _10dba8790_Vector_13 __param_traits, _10dba8790_Vector_14 __param_enums, _10dba8790_Vector_15 __param_impls)   {
		this->self = jule::Ref<_10ee5c510_SymbolTable>::make(this, nullptr);

		this->_field_file = __param_file;
		this->_field_passes = __param_passes;
		this->_field_imports = __param_imports;
		this->_field_vars = __param_vars;
		this->_field_type_aliases = __param_type_aliases;
		this->_field_structs = __param_structs;
		this->_field_funcs = __param_funcs;
		this->_field_traits = __param_traits;
		this->_field_enums = __param_enums;
		this->_field_impls = __param_impls;
	}

	~_10ee5c510_SymbolTable(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_10ee5c510_SymbolTable(void)   { this->self = jule::Ref<_10ee5c510_SymbolTable>::make(this, nullptr); }

	inline jule::Ref<_10e9b6a10_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_10e9b6a10_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_10e9b6a10_ImportInfo>)>);


	inline jule::Ref<_10ebc2ad0_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_10eeb79b0_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_10e3fc8f0_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_10e56a140_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_10e3d6eb0_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_10e975f00_Enum> _method_find_enum(jule::Str);


	inline jule::Ref<_10ebc2ad0_Var> _method___find_var(jule::Str,jule::Bool,jule::Bool);


	inline jule::Ref<_10eeb79b0_TypeAlias> _method___find_type_alias(jule::Str,jule::Bool,jule::Bool);


	inline jule::Any _method_def_by_ident(jule::Str,jule::Bool);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str,jule::Bool);


	inline bool operator==(const _10ee5c510_SymbolTable &_Src) {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_passes == _Src._field_passes &&
			this->_field_imports == _Src._field_imports &&
			this->_field_vars == _Src._field_vars &&
			this->_field_type_aliases == _Src._field_type_aliases &&
			this->_field_structs == _Src._field_structs &&
			this->_field_funcs == _Src._field_funcs &&
			this->_field_traits == _Src._field_traits &&
			this->_field_enums == _Src._field_enums &&
			this->_field_impls == _Src._field_impls;
	}

	inline bool operator!=(const _10ee5c510_SymbolTable &_Src) { return !this->operator==(_Src); }
};


inline jule::Int _11ce06ae0_get_last_errno(void);
inline jule::Str _11ce07810_byte_ptr_to_str(jule::U8*);
inline jule::Int _11ce07810_stat(jule::U8*,struct stat*);
inline jule::Int _11ce07810_open(jule::U8*,jule::Int,jule::Int);
inline jule::U8* _11ce07810_getcwd(jule::U8*,jule::Uint);
inline DIR* _11ce07810_opendir(jule::U8*);
inline struct dirent* _11ce07810_readdir(DIR*);
inline jule::Int _11ce07810_closedir(DIR*);
inline jule::I64 _11ce071f0_seek(jule::Int,jule::I64,jule::Int);
inline jule::Int _11ce071f0_read(jule::Int,void*,jule::Uint);
inline jule::Int _11ce071f0_close(jule::Int);
inline jule::Int _11ce071f0_write(jule::Int,void*,jule::Uint);
inline void _11ce071f0_exit(jule::Int);
inline void _10cf2f5b0_free(void*);
inline jule::Int _10cf088c0_get_last_os_error(void);
inline std::tuple<jule::Str,jule::Int> _10cf1adb0_getwd(void);
inline void _10cf1adb0_exit(jule::Int);
inline jule::Str _10cf1adb0_executable(void);
inline void _10cf1adb0_init(void);
inline jule::Bool _10cf24fb0_is_path_sep(jule::U8);
inline std::tuple<jule::Str,jule::Int> _10cf25d70___getwd(void);
inline jule::Str _12ce95080_clean(jule::Str);
inline jule::Str _12ce95080_from_slash(jule::Str);
inline jule::Str _12ce95080_join(jule::Slice<jule::Str>);
inline jule::Str _12ce95080_ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _12ce95080_abs(jule::Str);
inline jule::Str _12ce95080_base(jule::Str);
inline jule::Str _12ce95080_dir(jule::Str);
inline jule::Str _12ce95080_volume_name(jule::Str);
inline jule::Bool _10cf08a20_is_abs(jule::Str);
inline jule::Int _10cf08a20_volume_name_len(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _10cf08a20___abs(jule::Str);
inline jule::Str _10cf08a20_str_join(jule::Slice<jule::Str>,jule::Str);
inline jule::Str _10cf08a20___join(jule::Slice<jule::Str>);
inline jule::Int _12ce3bcd0_get_last_fs_error(void);
inline std::tuple<jule::Ref<_12ce537d0_File>,jule::Int> _12ce3e8f0_open(jule::Str,jule::Int,jule::Int);
inline std::tuple<jule::Ref<_12ce6e9e0_Status>,jule::Int> _12ce49290_stat(jule::Str);
inline std::tuple<jule::Slice<jule::U8>,jule::Int> _12ce537d0_read_file(jule::Str);
inline std::tuple<jule::Slice<jule::Ref<_12ce4fe70_DirEntry>>,jule::Int> _12ce583c0_read_dir(jule::Str);
inline jule::Int _10e2c0220_leading_zeros64(jule::U64);
inline jule::Int _10e2c0220_trailing_zeros(jule::Uint);
inline jule::Int _10e2c0220_trailing_zeros32(jule::U32);
inline jule::Int _10e2c0220_trailing_zeros64(jule::U64);
inline jule::Int _10e2c0220_len32(jule::U32);
inline jule::Int _10e2c0220_len64(jule::U64);
inline std::tuple<jule::U64,jule::U64> _10e2c0220_add64(jule::U64,jule::U64,jule::U64);
inline std::tuple<jule::U64,jule::U64> _10e2c0220_mul64(jule::U64,jule::U64);
inline jule::U32 _10dc3cbe0_f32_bits(jule::F32);
inline jule::F32 _10dc3cbe0_f32_from_bits(jule::U32);
inline jule::U64 _10dc3cbe0_f64_bits(jule::F64);
inline jule::F64 _10dc3cbe0_f64_from_bits(jule::U64);
inline jule::F64 _10dd389b0_nan(void);
inline jule::Bool _10dd389b0_is_nan(jule::F64);
inline jule::F64 _10dd389b0_inf(jule::Int);
inline jule::Bool _10dd389b0_is_inf(jule::F64,jule::Int);
inline jule::F64 _10dd42e50_abs(jule::F64);
inline std::tuple<jule::F64,jule::F64> _10de1b5a0_modf(jule::F64);
inline jule::Str _10d916690_fmt_float(jule::F64,jule::U8,jule::Int,jule::Int);
inline jule::Slice<jule::U8> _10d916690_generic_ftoa(jule::Slice<jule::U8>,jule::F64,jule::U8,jule::Int,jule::Int);
inline jule::Slice<jule::U8> _10d916690_big_ftoa(jule::Slice<jule::U8>,jule::Int,jule::U8,jule::Bool,jule::U64,jule::Int,_10d916690_FloatInfo*);
inline jule::Slice<jule::U8> _10d916690_fmt_digits(jule::Slice<jule::U8>,jule::Bool,jule::Bool,_10d916690_DecimalSlice,jule::Int,jule::U8);
inline void _10d916690_round_shortest(_10ce72c20_Decimal*,jule::U64,jule::Int,_10d916690_FloatInfo*);
inline jule::Slice<jule::U8> _10d916690_fmt_e(jule::Slice<jule::U8>,jule::Bool,_10d916690_DecimalSlice,jule::Int,jule::U8);
inline jule::Slice<jule::U8> _10d916690_fmt_f(jule::Slice<jule::U8>,jule::Bool,_10d916690_DecimalSlice,jule::Int);
inline jule::Slice<jule::U8> _10d916690_fmt_b(jule::Slice<jule::U8>,jule::Bool,jule::U64,jule::Int,_10d916690_FloatInfo*);
inline jule::Slice<jule::U8> _10d916690_fmt_x(jule::Slice<jule::U8>,jule::Int,jule::U8,jule::Bool,jule::U64,jule::Int,_10d916690_FloatInfo*);
inline jule::Int _10d916690_min(jule::Int,jule::Int);
inline jule::Int _10d916690_max(jule::Int,jule::Int);
inline jule::U8 _10ce6f0a0_lower(jule::U8);
inline std::tuple<jule::U64,jule::Int> _10ce6f0a0_parse_uint(jule::Str,jule::Int,jule::Int);
inline std::tuple<jule::I64,jule::Int> _10ce6f0a0_parse_int(jule::Str,jule::Int,jule::Int);
inline std::tuple<jule::F64,jule::Bool> _10ce703a0_eisel_lemire64(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _10ce703a0_eisel_lemire32(jule::U64,jule::Int,jule::Bool);
inline jule::Int _10cec8240_common_prefix_len_ignore_case(jule::Str,jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Bool> _10cec8240_special(jule::Str);
inline std::tuple<jule::U64,jule::Int,jule::Bool,jule::Bool,jule::Bool,jule::Int,jule::Bool> _10cec8240_read_float(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _10cec8240_atof64exact(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _10cec8240_atof32exact(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F64,jule::Int> _10cec8240_atof_hex(jule::Str,_10d916690_FloatInfo*,jule::U64,jule::Int,jule::Bool,jule::Bool);
inline std::tuple<jule::F32,jule::Int,jule::Int> _10cec8240_atof32(jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Int> _10cec8240_atof64(jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Int> _10cec8240_parse_float_prefix(jule::Str,jule::Int);
inline std::tuple<jule::F64,jule::Int> _10cec8240_parse_float(jule::Str,jule::Int);
inline void _10ce72a70_ryu_ftoa_fixed32(_10d916690_DecimalSlice*,jule::U32,jule::Int,jule::Int);
inline void _10ce72a70_ryu_ftoa_fixed64(_10d916690_DecimalSlice*,jule::U64,jule::Int,jule::Int);
inline void _10ce72a70_format_decimal(_10d916690_DecimalSlice*,jule::U64,jule::Bool,jule::Bool,jule::Int);
inline void _10ce72a70_ryu_ftoa_shortest(_10d916690_DecimalSlice*,jule::U64,jule::Int,_10d916690_FloatInfo*);
inline jule::Int _10ce72a70_mul_by_log2_log10(jule::Int);
inline jule::Int _10ce72a70_mul_by_log10_log2(jule::Int);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::Int> _10ce72a70_compute_bounds(jule::U64,jule::Int,_10d916690_FloatInfo*);
inline void _10ce72a70_ryu_digits(_10d916690_DecimalSlice*,jule::U64,jule::U64,jule::U64,jule::Bool,jule::Bool);
inline void _10ce72a70_ryu_digits32(_10d916690_DecimalSlice*,jule::U32,jule::U32,jule::U32,jule::Bool,jule::Bool,jule::Int);
inline std::tuple<jule::U32,jule::Int,jule::Bool> _10ce72a70_mult64bit_pow10(jule::U32,jule::Int,jule::Int);
inline std::tuple<jule::U64,jule::Int,jule::Bool> _10ce72a70_mult128bit_pow10(jule::U64,jule::Int,jule::Int);
inline jule::Bool _10ce72a70_divisible_by_pow5(jule::U64,jule::Int);
inline std::tuple<jule::U32,jule::U32> _10ce72a70_divmod1e9(jule::U64);
inline void _10ce72c20_trim(_10ce72c20_Decimal*);
inline void _10ce72c20_right_shift(_10ce72c20_Decimal*,jule::Uint);
inline jule::Bool _10ce72c20_prefix_is_less_than(jule::Slice<jule::U8>,jule::Str);
inline void _10ce72c20_left_shift(_10ce72c20_Decimal*,jule::Uint);
inline jule::Bool _10ce72c20_should_round_up(_10ce72c20_Decimal*,jule::Int);
inline jule::Str _10daf8c40_fmt_uint(jule::U64,jule::Int);
inline jule::Str _10daf8c40_fmt_int(jule::I64,jule::Int);
inline jule::Str _10daf8c40_itoa(jule::Int);
inline jule::Str _10daf8c40_small(jule::Int);
inline jule::Bool _10daf8c40_is_power_of_two(jule::Int);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _10daf8c40_fmt_bits(jule::Slice<jule::U8>,jule::U64,jule::Int,jule::Bool,jule::Bool);
inline jule::Bool _11ce23cb0_is_std_header_path(jule::Str);
inline jule::Bool _11ce23cb0_is_valid_header_ext(jule::Str);
inline jule::Bool _11ce23cb0_is_valid_cpp_ext(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _10d890250_check_os(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _10d890250_check_arch(jule::Str);
inline jule::Bool _10d890250_is_pass_file_annotation(jule::Str);
inline jule::Str _10d8aeab0_errorf(jule::Str,jule::Slice<jule::Any>);
inline jule::Str _10d8aeab0_arg_to_str(jule::Any);
inline jule::Int _10d8aeab0_find_next_fmt(jule::Str);
inline jule::Str _10d8aeab0_apply_fmt(jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _13cfd67b0_is_top_directive(jule::Str);
inline jule::Bool _13cfdfa50_is_windows(jule::Str);
inline jule::Bool _13cfdfa50_is_darwin(jule::Str);
inline jule::Bool _13cfdfa50_is_linux(jule::Str);
inline jule::Bool _13cfdfa50_is_i386(jule::Str);
inline jule::Bool _13cfdfa50_is_amd64(jule::Str);
inline jule::Bool _13cfdfa50_is_arm(jule::Str);
inline jule::Bool _13cfdfa50_is_arm64(jule::Str);
inline jule::Bool _13cfdfa50_is_unix(jule::Str);
inline jule::Bool _13cfdfa50_is_32bit(jule::Str);
inline jule::Bool _13cfdfa50_is_64bit(jule::Str);
inline void _13cfea710_exit_err(jule::Str);
inline void _13cfea710_init(void);
inline std::tuple<jule::I32,jule::Int> _10dba43b0_decode_rune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::Int> _10dba43b0_decode_rune_str(jule::Str);
inline jule::Bool _11ce22a00_is_unary_op(jule::Str);
inline jule::Bool _11ce22a00_is_str(jule::Str);
inline jule::Bool _11ce22a00_is_raw_str(jule::Str);
inline jule::Bool _11ce22a00_is_rune(jule::Str);
inline jule::Bool _11ce22a00_is_bool(jule::Str);
inline jule::Bool _11ce22a00_contains_any(jule::Str,jule::Str);
inline jule::Bool _11ce22a00_is_float(jule::Str);
inline jule::Bool _11ce22a00_is_num(jule::Str);
inline jule::Bool _11ce22a00_is_ignore_ident(jule::Str);
inline jule::Bool _11ce22a00_is_anon_ident(jule::Str);
inline jule::Bool _11ce22a00_is_space(jule::I32);
inline jule::Bool _11ce22a00_is_letter(jule::I32);
inline jule::Bool _11ce22a00_is_ident_rune(jule::Str);
inline jule::Bool _11ce22a00_is_decimal(jule::U8);
inline jule::Bool _11ce22a00_is_binary(jule::U8);
inline jule::Bool _11ce22a00_is_octal(jule::U8);
inline jule::Bool _11ce22a00_is_hex(jule::U8);
inline jule::Bool _11ce22a00_is_assign(jule::Uint);
inline jule::Bool _11ce22a00_is_postfix_op(jule::Str);
inline jule::Bool _11ce22a00_is_assign_op(jule::Str);
inline jule::Ref<_11ce078a0_File> _11ce078a0_new_file_set(jule::Str);
inline _13cfd2d20_Log _11cec0de0_make_err(jule::Int,jule::Int,jule::Ref<_11ce078a0_File>,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _11cec0de0_bytes_has_prefix(jule::Slice<jule::U8>,jule::Str);
inline jule::Str _11cec0de0_float_fmt_e(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _11cec0de0_float_fmt_p(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _11cec0de0_float_fmt_dotnp(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _11cec0de0_float_fmt_dotfp(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _11cec0de0_float_fmt_dotp(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _11cec0de0_float_num(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _11cec0de0_common_num(jule::Slice<jule::U8>);
inline jule::Str _11cec0de0_binary_num(jule::Slice<jule::U8>);
inline jule::Bool _11cec0de0_is_float_fmt_e(jule::U8,jule::Int);
inline jule::Bool _11cec0de0_is_float_fmt_p(jule::U8,jule::Int);
inline jule::Bool _11cec0de0_is_float_fmt_dotnp(jule::Slice<jule::U8>,jule::Int);
inline jule::Bool _11cec0de0_is_float_fmt_dotp(jule::Slice<jule::U8>,jule::Int);
inline jule::Bool _11cec0de0_is_float_fmt_dotfp(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _11cec0de0_octal_num(jule::Slice<jule::U8>);
inline jule::Str _11cec0de0_hex_num(jule::Slice<jule::U8>);
inline jule::Str _11cec0de0_hex_escape(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _11cec0de0_big_unicode_point_escape(jule::Slice<jule::U8>);
inline jule::Str _11cec0de0_little_unicode_point_escape(jule::Slice<jule::U8>);
inline jule::Str _11cec0de0_hex_byte_escape(jule::Slice<jule::U8>);
inline jule::Str _11cec0de0_byte_escape(jule::Slice<jule::U8>);
inline jule::Slice<_13cfd2d20_Log> _11cec0de0_lex(jule::Ref<_11ce078a0_File>,jule::Slice<jule::U8>);
inline jule::Ref<_10e3d3fd0_FileInfo> _10e3d3fd0_parse_file(jule::Ref<_11ce078a0_File>);
inline std::tuple<jule::Ref<_11ce19be0_Ast>,jule::Slice<_13cfd2d20_Log>> _10e3d3fd0_parse_fileset(jule::Ref<_11ce078a0_File>);
inline jule::Ref<_11ce1fd50_ScopeTree> _10e3d3e70_new_scope(void);
inline std::tuple<jule::Bool,jule::Bool> _10e3d3e70_is_st(_11ce22a00_Token,_11ce22a00_Token);
inline std::tuple<jule::Int,jule::Bool> _10e3d3e70_next_st_pos(jule::Slice<_11ce22a00_Token>,jule::Int);
inline std::tuple<jule::Slice<_11ce22a00_Token>,jule::Bool> _10e3d3e70_skip_st(jule::Int*,jule::Slice<_11ce22a00_Token>);
inline jule::Slice<jule::Ref<_10e3d3e70_Stmt>> _10e3d3e70_split_stms(jule::Slice<_11ce22a00_Token>);
inline jule::Slice<_11ce22a00_Token> _10e3df5b0_is_fn_call(jule::Slice<_11ce22a00_Token>);
inline jule::Ref<_10e3df5b0_CallData> _10e3df5b0_get_call_data(jule::Slice<_11ce22a00_Token>);
inline jule::Slice<_11ce22a00_Token> _10e3df5b0_get_block_expr(jule::Slice<_11ce22a00_Token>);
inline std::tuple<jule::Slice<_11ce22a00_Token>,jule::Slice<_11ce22a00_Token>> _10e3df5b0_split_colon(jule::Slice<_11ce22a00_Token>);
inline jule::Slice<_11ce22a00_Token> _10e3df5b0_eliminate_comments(jule::Slice<_11ce22a00_Token>);
inline jule::Int _10e3df5b0_find_lowest_prec_op(jule::Slice<_11ce22a00_Token>);
inline jule::Ref<_11ce1fd50_IdentExpr> _10e3df5b0_build_ident_expr(_11ce22a00_Token);
inline std::tuple<jule::Slice<_11ce22a00_Token>,jule::Int> _10e3df5b0_get_range_expr_tokens(jule::Slice<_11ce22a00_Token>);
inline jule::Bool _10e5e5b00_check_assign_tokens(jule::Slice<_11ce22a00_Token>);
inline _13cfd2d20_Log _10e5e45f0_make_err(jule::Int,jule::Int,jule::Ref<_11ce078a0_File>,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<_11ce22a00_Token> _10e5e45f0_range(jule::Int*,jule::Str,jule::Str,jule::Slice<_11ce22a00_Token>);
inline std::tuple<jule::Slice<_11ce22a00_Token>,jule::Slice<_11ce22a00_Token>> _10e5e45f0_range_last(jule::Slice<_11ce22a00_Token>);
inline std::tuple<jule::Slice<jule::Slice<_11ce22a00_Token>>,jule::Slice<_13cfd2d20_Log>> _10e5e45f0_parts(jule::Slice<_11ce22a00_Token>,jule::Uint,jule::Bool);
inline _13cfd2d20_Log _10e5e45f0_compiler_err(_11ce22a00_Token,jule::Str,jule::Slice<jule::Any>);
inline jule::Ref<_11ce1fd50_Comment> _10e5e45f0_build_comment(_11ce22a00_Token);
inline jule::Str _10e5e45f0_tokstoa(jule::Slice<_11ce22a00_Token>);
inline jule::Ref<_11ce1fd50_TypeDecl> _10e7e4720_build_void_type(void);
inline jule::Ref<_11ce1fd50_TypeDecl> _10e7e4720_build_prim_type(_11ce22a00_Token);
inline std::tuple<jule::Slice<_11ce22a00_Token>,jule::Int> _10e7e4720_split_map_range(jule::Slice<_11ce22a00_Token>,jule::Int*);
inline jule::Ref<_10f4ed830_Const> _10f4ed830_new_i64(jule::I64);
inline jule::Ref<_10f4ed830_Const> _10f4ed830_new_u64(jule::U64);
inline jule::Ref<_10f4ed830_Const> _10f4ed830_new_bool(jule::Bool);
inline jule::Ref<_10f4ed830_Const> _10f4ed830_new_str(jule::Str);
inline jule::Ref<_10f4ed830_Const> _10f4ed830_new_f64(jule::F64);
inline jule::Ref<_10f4ed830_Const> _10f4ed830_new_nil(void);
inline void _10f4ed830_lshift_unsig(_10f4ed830_Const*,_10f4ed830_Const);
inline void _10f4ed830_rshift_unsig(_10f4ed830_Const*,_10f4ed830_Const);
inline jule::Str _10f521350_real_kind_of(jule::Str);
inline jule::Int _10f521350_bitsize_of(jule::Str);
inline jule::Str _10f521350_int_from_bits(jule::U64);
inline jule::Str _10f521350_uint_from_bits(jule::U64);
inline jule::Str _10f521350_float_from_bits(jule::U64);
inline jule::Bool _10f521350_check_bit_float(jule::Str,jule::Int);
inline jule::U64 _10f521350_bitsize_of_float(jule::F64);
inline jule::U64 _10f521350_bitsize_of_int(jule::I64);
inline jule::U64 _10f521350_bitsize_of_uint(jule::U64);
inline void _10f521350_init(void);
inline jule::F64 _10f53b9f0_min_of(jule::Str);
inline jule::F64 _10f53b9f0_max_of(jule::Str);
inline jule::Bool _10f51ba00_is_i8_compatible(jule::Str);
inline jule::Bool _10f51ba00_is_i16_compatible(jule::Str);
inline jule::Bool _10f51ba00_is_i32_compatible(jule::Str);
inline jule::Bool _10f51ba00_is_i64_compatible(jule::Str);
inline jule::Bool _10f51ba00_is_u8_compatible(jule::Str);
inline jule::Bool _10f51ba00_is_u16_compatible(jule::Str);
inline jule::Bool _10f51ba00_is_u32_compatible(jule::Str);
inline jule::Bool _10f51ba00_is_u64_compatible(jule::Str);
inline jule::Bool _10f51ba00_is_f32_compatible(jule::Str);
inline jule::Bool _10f51ba00_is_f64_compatible(jule::Str);
inline jule::Bool _10f51ba00_types_are_compatible(jule::Str,jule::Str);
inline jule::Bool _10f51ba00_is_i16_greater(jule::Str);
inline jule::Bool _10f51ba00_is_i32_greater(jule::Str);
inline jule::Bool _10f51ba00_is_i64_greater(jule::Str);
inline jule::Bool _10f51ba00_is_u8_greater(jule::Str);
inline jule::Bool _10f51ba00_is_u16_greater(jule::Str);
inline jule::Bool _10f51ba00_is_u32_greater(jule::Str);
inline jule::Bool _10f51ba00_is_u64_greater(jule::Str);
inline jule::Bool _10f51ba00_is_f32_greater(jule::Str);
inline jule::Bool _10f51ba00_is_f64_greater(jule::Str);
inline jule::Bool _10f51ba00_is_greater(jule::Str,jule::Str);
inline jule::Bool _10f5ea650_is_sig_int(jule::Str);
inline jule::Bool _10f5ea650_is_unsig_int(jule::Str);
inline jule::Bool _10f5ea650_is_int(jule::Str);
inline jule::Bool _10f5ea650_is_float(jule::Str);
inline jule::Bool _10f5ea650_is_num(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _10f668c10_is_byte_lit(jule::Str);
inline jule::I32 _10f668c10_to_rune(jule::Slice<jule::U8>);
inline jule::Str _10f668c10_to_raw_str(jule::Slice<jule::U8>);
inline jule::Str _10f668c10_to_str(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _10f668c10_try_btoa_common_esq(jule::Slice<jule::U8>);
inline jule::I32 _10f668c10_rune_from_esq_seq(jule::Slice<jule::U8>,jule::Int*);
inline jule::Str _10f668c10_str_esq_seq(jule::Slice<jule::U8>,jule::Int*);
inline jule::Ref<_10e8ca650_ReferenceStack> _10e8ca650_new_reference_stack(void);
inline jule::Str _10e8ca650_str_repeat(jule::Str,jule::Int);
inline jule::Str _10e8ca650_build_doc(jule::Ref<_11ce1fd50_CommentGroup>);
inline jule::Ref<_10eeb79b0_TypeSymbol> _10e8ca650_build_type(jule::Ref<_11ce1fd50_TypeDecl>);
inline jule::Ref<_10ee8a260_Value> _10e8ca650_build_expr(jule::Ref<_11ce1fd50_Expr>);
inline jule::Ref<_10eeb79b0_TypeAlias> _10e8ca650_build_type_alias(jule::Ref<_11ce1fd50_TypeAliasDecl>);
inline jule::Ref<_10e3fc8f0_Field> _10e8ca650_build_field(jule::Ref<_11ce1fd50_FieldDecl>);
inline jule::Slice<jule::Ref<_10e3fc8f0_Field>> _10e8ca650_build_fields(jule::Slice<jule::Ref<_11ce1fd50_FieldDecl>>);
inline jule::Ref<_10e3fc8f0_Struct> _10e8ca650_build_struct(jule::Ref<_11ce1fd50_StructDecl>);
inline jule::Ref<_10e56a140_Param> _10e8ca650_build_param(jule::Ref<_11ce1fd50_ParamDecl>);
inline jule::Slice<jule::Ref<_10e56a140_Param>> _10e8ca650_build_params(jule::Slice<jule::Ref<_11ce1fd50_ParamDecl>>);
inline jule::Ref<_10e56a140_RetType> _10e8ca650_build_ret_type(jule::Ref<_11ce1fd50_RetTypeDecl>);
inline jule::Ref<_10e56a140_Fn> _10e8ca650_build_fn(jule::Ref<_11ce1fd50_FnDecl>);
inline jule::Slice<jule::Ref<_10e56a140_Fn>> _10e8ca650_build_methods(jule::Slice<jule::Ref<_11ce1fd50_FnDecl>>);
inline jule::Ref<_10e3d6eb0_Trait> _10e8ca650_build_trait(jule::Ref<_11ce1fd50_TraitDecl>);
inline jule::Ref<_10e975f00_EnumItem> _10e8ca650_build_enum_item(jule::Ref<_11ce1fd50_EnumItemDecl>);
inline jule::Slice<jule::Ref<_10e975f00_EnumItem>> _10e8ca650_build_enum_items(jule::Slice<jule::Ref<_11ce1fd50_EnumItemDecl>>);
inline jule::Ref<_10e975f00_Enum> _10e8ca650_build_enum(jule::Ref<_11ce1fd50_EnumDecl>);
inline jule::Ref<_10ebc2ad0_Var> _10e8ca650_build_var(jule::Ref<_11ce1fd50_VarDecl>);
inline jule::Ref<_10e97d820_Impl> _10e8ca650_build_impl(jule::Ref<_11ce1fd50_Impl>);
inline jule::Ref<_10e97fcf0_ScopeChecker> _10e97fcf0_new_scope_checker_base(jule::Ref<_10e9847f0_Sema>,jule::Ref<_10e56a140_FnIns>);
inline jule::Ref<_10e97fcf0_ScopeChecker> _10e97fcf0_new_scope_checker(jule::Ref<_10e9847f0_Sema>,jule::Ref<_10e56a140_FnIns>);
inline jule::Ref<_10e97fcf0_ScopeLabel> _10e97fcf0_find_label_parent(jule::Str,jule::Ref<_10e97fcf0_ScopeChecker>);
inline jule::Int _10e97fcf0_count_match_type(jule::Ref<_10e97fcf0_Match>,jule::Ref<_10eeb79b0_TypeKind>);
inline jule::Slice<jule::Ref<_10ee8a260_Data>> _10e97fcf0_get_datas_from_tuple_data(jule::Ref<_10ee8a260_Data>);
inline jule::Slice<jule::Any> _10e97fcf0_get_expr_models(jule::Any);
inline jule::Bool _10e97fcf0_check_mut(jule::Ref<_10e9847f0_Sema>,jule::Ref<_10ee8a260_Data>,jule::Ref<_10ee8a260_Data>,_11ce22a00_Token);
inline jule::Bool _10e97fcf0_check_assign(jule::Ref<_10e9847f0_Sema>,jule::Ref<_10ee8a260_Data>,jule::Ref<_10ee8a260_Data>,_11ce22a00_Token);
inline jule::Bool _10e97fcf0_is_valid_ast_st_for_next_st(jule::Any);
inline jule::Bool _10e97fcf0_is_valid_st_for_next_st(jule::Any);
inline jule::Bool _10e97fcf0_st_is_def(jule::Any);
inline jule::Ref<_10ebc2ad0_Var> _10e9b6a10_find_var_in_package(jule::Slice<jule::Ref<_10ee5c510_SymbolTable>>,jule::Str,jule::Bool);
inline jule::Ref<_10eeb79b0_TypeAlias> _10e9b6a10_find_type_alias_in_package(jule::Slice<jule::Ref<_10ee5c510_SymbolTable>>,jule::Str,jule::Bool);
inline jule::Ref<_10e3fc8f0_Struct> _10e9b6a10_find_struct_in_package(jule::Slice<jule::Ref<_10ee5c510_SymbolTable>>,jule::Str,jule::Bool);
inline jule::Ref<_10e56a140_Fn> _10e9b6a10_find_fn_in_package(jule::Slice<jule::Ref<_10ee5c510_SymbolTable>>,jule::Str,jule::Bool);
inline jule::Ref<_10e3d6eb0_Trait> _10e9b6a10_find_trait_in_package(jule::Slice<jule::Ref<_10ee5c510_SymbolTable>>,jule::Str);
inline jule::Ref<_10e975f00_Enum> _10e9b6a10_find_enum_in_package(jule::Slice<jule::Ref<_10ee5c510_SymbolTable>>,jule::Str);
inline _13cfd2d20_Log _10e9847f0_compiler_err(_11ce22a00_Token,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _10e9847f0_imp_is_lookupable(jule::Ref<_10e9b6a10_ImportInfo>,jule::Str);
inline jule::Slice<jule::Ref<_10ebc2ad0_Var>> _10e9847f0_build_ret_vars(jule::Ref<_10e56a140_FnIns>);
inline jule::Slice<jule::Ref<_10ebc2ad0_Var>> _10e9847f0_build_param_vars(jule::Ref<_10e56a140_FnIns>);
inline jule::Slice<jule::Ref<_10eeb79b0_TypeAlias>> _10e9847f0_build_generic_type_aliases(jule::Ref<_10e56a140_FnIns>);
inline jule::Ref<_10ee5c510_SymbolTable> _10e9847f0_find_file(jule::Slice<jule::Ref<_10ee5c510_SymbolTable>>,jule::Ref<_11ce078a0_File>);
inline std::tuple<jule::Bool,jule::Bool> _10e9847f0_conditional_has_ret(jule::Ref<_10e97fcf0_Conditional>);
inline jule::Bool _10e9847f0_match_has_ret(jule::Ref<_10e97fcf0_Match>);
inline std::tuple<jule::Bool,jule::Bool,jule::Bool> _10e9847f0___has_ret(jule::Ref<_10e97fcf0_Scope>);
inline jule::Bool _10e9847f0_has_ret(jule::Ref<_10e97fcf0_Scope>);
inline jule::Slice<jule::Ref<_10eeb79b0_TypeKind>> _10eb9c740_get_fn_result_types(jule::Ref<_10e56a140_FnIns>);
inline jule::Bool _10eb9c740_trait_has_reference_receiver(jule::Ref<_10e3d6eb0_Trait>);
inline jule::Bool _10eb9c740_float_assignable(jule::Str,jule::Ref<_10ee8a260_Data>);
inline jule::Bool _10eb9c740_sig_assignable(jule::Str,jule::Ref<_10ee8a260_Data>);
inline jule::Bool _10eb9c740_unsig_assignable(jule::Str,jule::Ref<_10ee8a260_Data>);
inline jule::Bool _10eb9c740_int_assignable(jule::Str,jule::Ref<_10ee8a260_Data>);
inline jule::Any _10ee8a260_find_builtins_import(jule::Str,jule::Ref<_10e9b6a10_ImportInfo>);
inline jule::Any _10ee8a260_find_builtins_sema(jule::Str,jule::Ref<_10e9847f0_Sema>);
inline jule::Bool _10ee8a260_is_ok_for_shifting(jule::Ref<_10ee8a260_Data>);
inline jule::Bool _10ee8a260_is_instanced_struct(jule::Ref<_10e3fc8f0_StructIns>);
inline void _10ee8a260_normalize_bitsize(jule::Ref<_10ee8a260_Data>);
inline void _10ee8a260_normalize_type(jule::Ref<_10ee8a260_Data>);
inline void _10ee8a260_apply_cast_kind_model(jule::Ref<_10ee8a260_Data>);
inline void _10ee8a260_apply_cast_kind(jule::Ref<_10ee8a260_Data>);
inline jule::Ref<_10ee8a260_Data> _10ee8a260_build_void_data(void);
inline jule::Str _10ee8a260_kind_by_bitsize(jule::Any);
inline jule::Str _10ee8a260_check_data_for_integer_indexing(jule::Ref<_10ee8a260_Data>);
inline jule::Bool _10eeb79b0_can_get_ptr(jule::Ref<_10ee8a260_Data>);
inline jule::Bool _10eeb79b0_is_lvalue(jule::Ref<_10eeb79b0_TypeKind>);
inline jule::Bool _10eeb79b0_is_mut(jule::Ref<_10eeb79b0_TypeKind>);
inline jule::Bool _10eeb79b0_supports_clonning(jule::Ref<_10eeb79b0_TypeKind>);
inline jule::Bool _10eeb79b0_is_nil_compatible(jule::Ref<_10eeb79b0_TypeKind>);
inline jule::Bool _10eeb79b0_is_valid_for_ref(jule::Ref<_10eeb79b0_TypeKind>);
inline jule::Bool _10eeb79b0_is_variadicable(jule::Ref<_10eeb79b0_TypeKind>);
inline jule::Str _10eeb79b0_build_link_path_by_tokens(jule::Slice<_11ce22a00_Token>);
inline jule::Ref<_10eeb79b0_Prim> _10eeb79b0_build_prim_type(jule::Str);
inline jule::Bool _10eeb79b0_is_prim(jule::Str);
inline std::tuple<jule::Ref<_10ee5c510_SymbolTable>,jule::Slice<_13cfd2d20_Log>> _10f32caf0_build_symbols(jule::Ref<_11ce19be0_Ast>,jule::Trait<_10e9b6a10_Importer>,jule::Ref<_10e8ca650_SymbolBuilder>);
inline std::tuple<jule::Ref<_10e9b6a10_Package>,jule::Slice<_13cfd2d20_Log>> _10f32caf0___analyze_package(jule::Slice<jule::Ref<_11ce19be0_Ast>>,jule::Trait<_10e9b6a10_Importer>);
inline std::tuple<jule::Ref<_10e9b6a10_Package>,jule::Slice<_13cfd2d20_Log>> _10f32caf0_analyze_package(jule::Slice<jule::Ref<_11ce19be0_Ast>>,jule::Trait<_10e9b6a10_Importer>);
inline void _10f3f9210_init(void);
inline jule::Ref<_10e56a140_FnIns> _10f3f9210_find_builtin_fn(jule::Str);
inline jule::Ref<_10eeb79b0_TypeAlias> _10f3f9210_find_builtin_type_alias(jule::Str);
inline jule::Ref<_10e3d6eb0_Trait> _10f3f9210_find_builtin_trait(jule::Str);
inline jule::Any _10f3f9210_find_builtin_def(jule::Str);
inline jule::Any _10f3f9210_find_builtin_def_std_mem(jule::Str);
inline jule::Any _10f3f9210_find_package_builtin_def(jule::Str,jule::Str);
inline jule::Ref<_10ee8a260_Data> _10f3f9210_builtin_caller_common_plain(jule::Ref<_10ee8a260_Eval>,jule::Ref<_11ce1fd50_FnCallExpr>,jule::Ref<_10ee8a260_Data>);
inline jule::Ref<_10ee8a260_Data> _10f3f9210_builtin_caller_common(jule::Ref<_10ee8a260_Eval>,jule::Ref<_11ce1fd50_FnCallExpr>,jule::Ref<_10ee8a260_Data>);
inline jule::Ref<_10ee8a260_Data> _10f3f9210_builtin_caller_common_mut(jule::Ref<_10ee8a260_Eval>,jule::Ref<_11ce1fd50_FnCallExpr>,jule::Ref<_10ee8a260_Data>);
inline jule::Ref<_10ee8a260_Data> _10f3f9210_builtin_caller_out(jule::Ref<_10ee8a260_Eval>,jule::Ref<_11ce1fd50_FnCallExpr>,jule::Ref<_10ee8a260_Data>);
inline jule::Ref<_10ee8a260_Data> _10f3f9210_builtin_caller_outln(jule::Ref<_10ee8a260_Eval>,jule::Ref<_11ce1fd50_FnCallExpr>,jule::Ref<_10ee8a260_Data>);
inline jule::Ref<_10ee8a260_Data> _10f3f9210_builtin_caller_new(jule::Ref<_10ee8a260_Eval>,jule::Ref<_11ce1fd50_FnCallExpr>,jule::Ref<_10ee8a260_Data>);
inline jule::Ref<_10ee8a260_Data> _10f3f9210_builtin_caller_real(jule::Ref<_10ee8a260_Eval>,jule::Ref<_11ce1fd50_FnCallExpr>,jule::Ref<_10ee8a260_Data>);
inline jule::Ref<_10ee8a260_Data> _10f3f9210_builtin_caller_drop(jule::Ref<_10ee8a260_Eval>,jule::Ref<_11ce1fd50_FnCallExpr>,jule::Ref<_10ee8a260_Data>);
inline jule::Ref<_10ee8a260_Data> _10f3f9210_builtin_caller_panic(jule::Ref<_10ee8a260_Eval>,jule::Ref<_11ce1fd50_FnCallExpr>,jule::Ref<_10ee8a260_Data>);
inline jule::Ref<_10ee8a260_Data> _10f3f9210_builtin_caller_make(jule::Ref<_10ee8a260_Eval>,jule::Ref<_11ce1fd50_FnCallExpr>,jule::Ref<_10ee8a260_Data>);
inline jule::Ref<_10ee8a260_Data> _10f3f9210_builtin_caller_append(jule::Ref<_10ee8a260_Eval>,jule::Ref<_11ce1fd50_FnCallExpr>,jule::Ref<_10ee8a260_Data>);
inline jule::Ref<_10ee8a260_Data> _10f3f9210_builtin_caller_copy(jule::Ref<_10ee8a260_Eval>,jule::Ref<_11ce1fd50_FnCallExpr>,jule::Ref<_10ee8a260_Data>);
inline jule::Ref<_10ee8a260_Data> _10f3f9210_builtin_caller_recover(jule::Ref<_10ee8a260_Eval>,jule::Ref<_11ce1fd50_FnCallExpr>,jule::Ref<_10ee8a260_Data>);
inline jule::Ref<_10ee8a260_Data> _10f3f9210_builtin_caller_clone(jule::Ref<_10ee8a260_Eval>,jule::Ref<_11ce1fd50_FnCallExpr>,jule::Ref<_10ee8a260_Data>);
inline jule::Ref<_10ee8a260_Data> _10f3f9210_builtin_caller_std_mem_size_of(jule::Ref<_10ee8a260_Eval>,jule::Ref<_11ce1fd50_FnCallExpr>,jule::Ref<_10ee8a260_Data>);
inline jule::Ref<_10ee8a260_Data> _10f3f9210_builtin_caller_std_mem_align_of(jule::Ref<_10ee8a260_Eval>,jule::Ref<_11ce1fd50_FnCallExpr>,jule::Ref<_10ee8a260_Data>);
inline void _12ce24da0_exit_err(jule::Str);
inline jule::Slice<jule::U8> _12ce24da0_read_buff(jule::Str);
inline _13cfd2d20_Log _12ce24da0_flat_compiler_err(jule::Str);
inline std::tuple<jule::Slice<jule::Ref<_12ce4fe70_DirEntry>>,jule::Str> _12ce24da0_read_package_dirents(jule::Str);
inline jule::Slice<jule::Str> _12ce09d10_get_all_unique_passes(jule::Ref<_10e9b6a10_Package>,jule::Slice<jule::Ref<_10e9b6a10_ImportInfo>>);
inline std::tuple<jule::Ref<_12ce09d10_IR>,jule::Slice<_13cfd2d20_Log>> _12ce09d10_build_ir(jule::Str);
inline jule::Bool _13cf78d70_is_exist_0(jule::Slice<jule::Any>,jule::Ref<_10e56a140_Fn>);
inline jule::Bool _13cf78d70_is_exist_1(jule::Slice<jule::Any>,jule::Ref<_10ebc2ad0_Var>);
inline jule::Bool _13cf78d70_is_exist_2(jule::Slice<jule::Any>,jule::Ref<_10e3fc8f0_Struct>);
inline jule::Bool _13cf78d70_is_exist_3(jule::Slice<jule::Any>,jule::Ref<_10e3d6eb0_Trait>);
inline jule::Bool _13cf78d70_is_exist_ref(jule::Slice<jule::Any>,jule::Any);
inline jule::Bool _13cf78d70_is_dead(jule::Any);
inline void _13cf78d70_drop_ref(jule::Slice<jule::Any>*,jule::Int);
inline jule::Bool _13cf78d70_is_all_references_are_dead_0(jule::Ref<_10e8ca650_ReferenceStack>);
inline jule::Bool _13cf78d70_is_all_references_are_dead_1(jule::Ref<_10e8ca650_ReferenceStack>);
inline jule::Bool _13cf78d70_is_all_references_are_dead_2(jule::Ref<_10e8ca650_ReferenceStack>);
inline jule::Bool _13cf78d70_is_fn_dead(jule::Ref<_10e56a140_Fn>);
inline jule::Bool _13cf78d70_is_var_dead(jule::Ref<_10ebc2ad0_Var>);
inline jule::Bool _13cf78d70_is_struct_dead(jule::Ref<_10e3fc8f0_Struct>);
inline jule::Bool _13cf78d70_is_trait_dead(jule::Ref<_10e3d6eb0_Trait>);
inline void _13cf78d70_eliminate_dead_functions(_10dba8790_Vector_11*);
inline void _13cf78d70_eliminate_dead_globals(jule::Ref<_10e9b6a10_Package>);
inline void _13cf78d70_eliminate_dead_functions_package(jule::Ref<_10e9b6a10_Package>);
inline void _13cf78d70_eliminate_dead_structs(jule::Ref<_10e9b6a10_Package>);
inline void _13cf78d70_eliminate_dead_traits(jule::Ref<_10e9b6a10_Package>);
inline void _13cf78d70_eliminate_dead_code_package(jule::Ref<_10e9b6a10_Package>);
inline void _13cf78d70_eliminate_dead_code(jule::Ref<_12ce09d10_IR>);
inline void _13cf6e710_eliminate_dead_code_of_scope(jule::Ref<_10e97fcf0_Scope>);
inline void _12ce1e490_push_opt_level(jule::Int);
inline jule::Bool _12ce1e490_is_opt_enabled(jule::Str);
inline jule::Str _10e890bb0_gen_if(jule::Ref<_10e97fcf0_If>);
inline jule::Str _10e890bb0_gen_conditional(jule::Ref<_10e97fcf0_Conditional>);
inline jule::Str _10e890bb0_gen_inf_iter(jule::Ref<_10e97fcf0_InfIter>);
inline jule::Str _10e890bb0_gen_while_iter(jule::Ref<_10e97fcf0_WhileIter>);
inline jule::Trait<_10e890bb0_RangeSetter> _10e890bb0_get_range_setter(jule::Ref<_10e97fcf0_RangeIter>);
inline jule::Str _10e890bb0_gen_range_iter(jule::Ref<_10e97fcf0_RangeIter>);
inline jule::Str _10e890bb0_gen_cont(jule::Ref<_10e97fcf0_ContSt>);
inline jule::Str _10e890bb0_gen_label(jule::Ref<_10e97fcf0_Label>);
inline jule::Str _10e890bb0_gen_goto(jule::Ref<_10e97fcf0_GotoSt>);
inline jule::Str _10e890bb0_gen_postfix(jule::Ref<_10e97fcf0_Postfix>);
inline jule::Str _10e890bb0_gen_assign(jule::Ref<_10e97fcf0_Assign>);
inline jule::Str _10e890bb0_gen_multi_assign(jule::Ref<_10e97fcf0_MultiAssign>);
inline jule::Str _10e890bb0_gen_case(jule::Ref<_10e97fcf0_Match>,jule::Ref<_10e97fcf0_Case>);
inline jule::Str _10e890bb0_gen_match(jule::Ref<_10e97fcf0_Match>);
inline jule::Str _10e890bb0_gen_fall_st(jule::Ref<_10e97fcf0_FallSt>);
inline jule::Str _10e890bb0_gen_break_st(jule::Ref<_10e97fcf0_BreakSt>);
inline jule::Str _10e890bb0_gen_ret_vars(jule::Ref<_10e97fcf0_RetSt>);
inline jule::Str _10e890bb0_gen_ret_expr_tuple(jule::Ref<_10e97fcf0_RetSt>);
inline jule::Str _10e890bb0_gen_ret_expr(jule::Ref<_10e97fcf0_RetSt>);
inline jule::Str _10e890bb0_gen_ret_st(jule::Ref<_10e97fcf0_RetSt>);
inline jule::Str _10e890bb0_gen_recover(jule::Ref<_10e97fcf0_Recover>);
inline jule::Str _10e890bb0_gen_data_expr(jule::Ref<_10ee8a260_Data>);
inline jule::Str _10e890bb0_gen_st(jule::Any);
inline jule::Str _10e890bb0_gen_scope(jule::Ref<_10e97fcf0_Scope>);
inline jule::Str _10e890bb0_gen_fn_scope(jule::Ref<_10e56a140_FnIns>);
inline jule::Str _10e890bb0_gen_method_scope(jule::Ref<_10e56a140_FnIns>);
inline jule::Str _10f32ecc0_get_accessor(jule::Ref<_10eeb79b0_TypeKind>);
inline jule::Str _10f32ecc0_decompose_common_esq(jule::U8);
inline jule::Str _10f32ecc0_sbtoa(jule::U8);
inline jule::Str _10f32ecc0_get_str_model(jule::Ref<_10f4ed830_Const>);
inline jule::Str _10f32ecc0_get_bool_model(jule::Ref<_10f4ed830_Const>);
inline jule::Str _10f32ecc0_get_nil_model(void);
inline jule::Str _10f32ecc0_gen_float_special_cases(jule::F64);
inline jule::Str _10f32ecc0_get_f32_model(jule::Ref<_10f4ed830_Const>);
inline jule::Str _10f32ecc0_get_f64_model(jule::Ref<_10f4ed830_Const>);
inline jule::Str _10f32ecc0_get_float_model(jule::Ref<_10ee8a260_Data>);
inline jule::Str _10f32ecc0_i64toa(jule::I64);
inline jule::Str _10f32ecc0_get_i64_model(jule::Ref<_10f4ed830_Const>);
inline jule::Str _10f32ecc0_get_u64_model(jule::Ref<_10f4ed830_Const>);
inline jule::Str _10f32ecc0_gen_const_expr(jule::Ref<_10ee8a260_Data>);
inline jule::Str _10f32ecc0_gen_const_expr_model(jule::Ref<_10f4ed830_Const>);
inline jule::Str _10f32ecc0_gen_binop_expr_model(jule::Ref<_10e9ca470_BinopExprModel>);
inline jule::Str _10f32ecc0_gen_var_expr_model(jule::Ref<_10ebc2ad0_Var>);
inline jule::Str _10f32ecc0_gen_struct_expr_model(jule::Ref<_10e3fc8f0_Struct>);
inline jule::Str _10f32ecc0_gen_struct_ins_expr_model(jule::Ref<_10e3fc8f0_StructIns>);
inline jule::Str _10f32ecc0_gen_unary_expr_model(jule::Ref<_10e9ca470_UnaryExprModel>);
inline jule::Str _10f32ecc0_gen_get_ref_ptr_expr_model(jule::Ref<_10e9ca470_GetRefPtrExprModel>);
inline jule::Str _10f32ecc0_gen_cpp_struct_lit_expr_model(jule::Ref<_10e9ca470_StructLitExprModel>);
inline jule::Str _10f32ecc0_gen_struct_lit_expr_model(jule::Ref<_10e9ca470_StructLitExprModel>);
inline jule::Str _10f32ecc0_gen_alloc_struct_lit_expr_model(jule::Ref<_10e9ca470_AllocStructLitExprModel>);
inline jule::Str _10f32ecc0_gen_casting_expr_model(jule::Ref<_10e9ca470_CastingExprModel>);
inline jule::Str _10f32ecc0_gen_arg_expr_models(jule::Slice<jule::Any>);
inline jule::Str _10f32ecc0_gen_fn_call_expr_model(jule::Ref<_10e9ca470_FnCallExprModel>);
inline jule::Str _10f32ecc0_gen_slice_expr_model(jule::Ref<_10e9ca470_SliceExprModel>);
inline jule::Str _10f32ecc0_gen_indexing_expr_model(jule::Ref<_10e9ca470_IndexigExprModel>);
inline jule::Str _10f32ecc0_gen_anon_fn_expr_model(jule::Ref<_10e9ca470_AnonFnExprModel>);
inline jule::Str _10f32ecc0_gen_map_expr_model(jule::Ref<_10e9ca470_MapExprModel>);
inline jule::Str _10f32ecc0_gen_slicing_expr_model(jule::Ref<_10e9ca470_SlicingExprModel>);
inline jule::Str _10f32ecc0_gen_trait_sub_ident_expr_model(jule::Ref<_10e9ca470_TraitSubIdentExprModel>);
inline jule::Str _10f32ecc0_gen_struct_sub_ident_expr_model(jule::Ref<_10e9ca470_StructSubIdentExprModel>);
inline jule::Str _10f32ecc0_gen_common_ident_expr_model(jule::Ref<_10e9ca470_CommonIdentExprModel>);
inline jule::Str _10f32ecc0_gen_common_sub_ident_expr_model(jule::Ref<_10e9ca470_CommonSubIdentExprModel>);
inline jule::Str _10f32ecc0_gen_array_expr_model(jule::Ref<_10e9ca470_ArrayExprModel>);
inline jule::Str _10f32ecc0_gen_fn_ins_expr_model(jule::Ref<_10e56a140_FnIns>);
inline jule::Str _10f32ecc0_gen_tuple_expr_model(jule::Ref<_10e9ca470_TupleExprModel>);
inline jule::Str _10f32ecc0_gen_builtin_new_call_expr_model(jule::Ref<_10e9ca470_BuiltinNewCallExprModel>);
inline jule::Str _10f32ecc0_gen_builtin_out_call_expr_model(jule::Ref<_10e9ca470_BuiltinOutCallExprModel>);
inline jule::Str _10f32ecc0_gen_builtin_outln_call_expr_model(jule::Ref<_10e9ca470_BuiltinOutlnCallExprModel>);
inline jule::Str _10f32ecc0_gen_builtin_real_call_expr_model(jule::Ref<_10e9ca470_BuiltinRealCallExprModel>);
inline jule::Str _10f32ecc0_gen_builtin_drop_call_expr_model(jule::Ref<_10e9ca470_BuiltinDropCallExprModel>);
inline jule::Str _10f32ecc0_gen_builtin_panic_call_expr_model(jule::Ref<_10e9ca470_BuiltinPanicCallExprModel>);
inline jule::Str _10f32ecc0_gen_builtin_make_call_expr_model(jule::Ref<_10e9ca470_BuiltinMakeCallExprModel>);
inline jule::Str _10f32ecc0_gen_builtin_clone_call_expr_model(jule::Ref<_10e9ca470_BuiltinCloneCallExprModel>);
inline jule::Str _10f32ecc0_gen_sizeof_expr_model(jule::Ref<_10e9ca470_SizeofExprModel>);
inline jule::Str _10f32ecc0_gen_alignof_expr_model(jule::Ref<_10e9ca470_AlignofExprModel>);
inline jule::Str _10f32ecc0_gen_rune_expr_model(jule::Ref<_10e9ca470_RuneExprModel>);
inline jule::Str _10f32ecc0_gen_builtin_error_trait_sub_ident_expr_model(jule::Ref<_10e9ca470_BuiltinErrorTraitSubIdentExprModel>);
inline jule::Str _10f32ecc0_gen_explicit_deref_expr_model(jule::Ref<_10e9ca470_ExplicitDerefExprModel>);
inline jule::Str _10f32ecc0_gen_struct_static_ident_expr_model(jule::Ref<_10e9ca470_StructStaticIdentExprModel>);
inline jule::Str _10f32ecc0_gen_expr_model(jule::Any);
inline jule::Str _10f32ecc0_gen_expr(jule::Any);
inline jule::Str _10f32ecc0_gen_val(jule::Ref<_10ee8a260_Value>);
inline jule::Str _10f32ecc0_get_init_expr(jule::Ref<_10eeb79b0_TypeKind>);
inline jule::Str _10f7a0fa0_get_derive_fn_decl_clone(jule::Ref<_10e3fc8f0_Struct>);
inline jule::Str _10f7a0fa0_get_derive_fn_def_clone(jule::Ref<_10e3fc8f0_Struct>);
inline jule::Str _10eb3a1d0_as_ident(jule::Str);
inline jule::Str _10eb3a1d0_as_jt(jule::Str);
inline jule::Str _10eb3a1d0_get_ptr_as_ident(jule::Uintptr);
inline jule::Str _10eb3a1d0_as_out_ident(jule::Str,jule::Uintptr);
inline jule::Str _10eb3a1d0_as_local_ident(jule::Int,jule::Int,jule::Str);
inline jule::Str _10eb3a1d0_fn_out_ident(jule::Ref<_10e56a140_Fn>);
inline jule::Str _10eb3a1d0_fn_ins_out_ident(jule::Ref<_10e56a140_FnIns>);
inline jule::Str _10eb3a1d0_trait_out_ident(jule::Ref<_10e3d6eb0_Trait>);
inline jule::Str _10eb3a1d0_param_out_ident(jule::Ref<_10e56a140_Param>);
inline jule::Str _10eb3a1d0_struct_out_ident(jule::Ref<_10e3fc8f0_Struct>);
inline jule::Str _10eb3a1d0_struct_ins_out_ident(jule::Ref<_10e3fc8f0_StructIns>);
inline jule::Str _10eb3a1d0_field_out_ident(jule::Ref<_10e3fc8f0_Field>);
inline jule::Str _10eb3a1d0_var_out_ident(jule::Ref<_10ebc2ad0_Var>);
inline jule::Str _10eb3a1d0_iter_begin_label_ident(jule::Uintptr);
inline jule::Str _10eb3a1d0_iter_end_label_ident(jule::Uintptr);
inline jule::Str _10eb3a1d0_iter_next_label_ident(jule::Uintptr);
inline jule::Str _10eb3a1d0_label_ident(jule::Str);
inline jule::Str _10eb3a1d0_match_end_label_ident(jule::Uintptr);
inline jule::Str _10eb3a1d0_case_begin_label_ident(jule::Uintptr);
inline jule::Str _10eb3a1d0_case_end_label_ident(jule::Uintptr);
inline jule::Bool _10f7a32c0_has_directive(jule::Slice<jule::Ref<_11ce1fd50_Directive>>,jule::Str);
inline jule::Str _10f7a32c0_gen_prim_kind(jule::Ref<_10eeb79b0_Prim>);
inline jule::Str _10f7a32c0_gen_tuple_kind(jule::Ref<_10eeb79b0_Tuple>);
inline jule::Str _10f7a32c0_as_ref_kind(jule::Str);
inline jule::Str _10f7a32c0_gen_ref_kind(jule::Ref<_10eeb79b0_Ref>);
inline jule::Str _10f7a32c0_gen_ptr_kind(jule::Ref<_10eeb79b0_Ptr>);
inline jule::Str _10f7a32c0_gen_enum_kind(jule::Ref<_10e975f00_Enum>);
inline jule::Str _10f7a32c0_as_slice_kind(jule::Ref<_10eeb79b0_TypeKind>);
inline jule::Str _10f7a32c0_gen_slice_kind(jule::Ref<_10eeb79b0_Slc>);
inline jule::Str _10f7a32c0_gen_map_kind(jule::Ref<_10eeb79b0_Map>);
inline jule::Str _10f7a32c0_gen_trait_kind_from_ident(jule::Str);
inline jule::Str _10f7a32c0_gen_trait_kind(jule::Ref<_10e3d6eb0_Trait>);
inline jule::Str _10f7a32c0_gen_struct_kind(jule::Ref<_10e3fc8f0_Struct>);
inline jule::Str _10f7a32c0_gen_struct_kind_ins(jule::Ref<_10e3fc8f0_StructIns>);
inline jule::Str _10f7a32c0_gen_array_kind(jule::Ref<_10eeb79b0_Arr>);
inline jule::Str _10f7a32c0_gen_fn_anon_decl(jule::Ref<_10e56a140_FnIns>);
inline jule::Str _10f7a32c0_gen_fn_kind(jule::Ref<_10e56a140_FnIns>);
inline jule::Str _10f7a32c0_gen_type_kind(jule::Ref<_10eeb79b0_TypeKind>);
inline void _10f7d1d90_add_indent(void);
inline void _10f7d1d90_done_indent(void);
inline jule::Str _10f7d1d90_indent(void);
inline jule::Bool _10f7d1d90_is_cpp_header_file(jule::Str);
inline jule::Str _10f7d1d90_gen_links(jule::Ref<_12ce09d10_IR>);
inline jule::Str _10f7d1d90_gen_fn_result(jule::Ref<_10e56a140_Fn>);
inline jule::Str _10f7d1d90_gen_fn_ins_result(jule::Ref<_10e56a140_FnIns>);
inline jule::Str _10f7d1d90_gen_param_prototype(jule::Ref<_10e56a140_Param>);
inline jule::Str _10f7d1d90_gen_param_ins(jule::Ref<_10e56a140_ParamIns>);
inline jule::Str _10f7d1d90_gen_param_ins_prototype(jule::Ref<_10e56a140_ParamIns>);
inline jule::Str _10f7d1d90_gen_param(jule::Ref<_10e56a140_Param>);
inline jule::Str _10f7d1d90_gen_params(jule::Slice<jule::Ref<_10e56a140_Param>>);
inline jule::Str _10f7d1d90_gen_params_ins(jule::Slice<jule::Ref<_10e56a140_ParamIns>>);
inline jule::Str _10f7d1d90_gen_params_prototypes(jule::Slice<jule::Ref<_10e56a140_ParamIns>>);
inline jule::Str _10f7d1d90_gen_trait(jule::Ref<_10e3d6eb0_Trait>);
inline jule::Str _10f7d1d90_gen_traits_tbl(jule::Ref<_10ee5c510_SymbolTable>);
inline jule::Str _10f7d1d90_gen_traits_pkg(jule::Ref<_10e9b6a10_Package>);
inline jule::Str _10f7d1d90_gen_traits(jule::Ref<_12ce09d10_IR>);
inline jule::Str _10f7d1d90_gen_trait_prototype(jule::Ref<_10e3d6eb0_Trait>);
inline jule::Str _10f7d1d90_gen_trait_prototypes(jule::Ref<_10e9b6a10_Package>);
inline jule::Str _10f7d1d90_gen_struct_plain_prototype(jule::Ref<_10e3fc8f0_Struct>);
inline jule::Str _10f7d1d90_gen_struct_plain_prototypes(jule::Slice<jule::Ref<_10e3fc8f0_Struct>>);
inline jule::Str _10f7d1d90_gen_struct_traits(jule::Ref<_10e3fc8f0_Struct>);
inline jule::Str _10f7d1d90_gen_field_decl(jule::Ref<_10e3fc8f0_FieldIns>);
inline jule::Str _10f7d1d90_gen_struct_self_field_type_kind(jule::Ref<_10e3fc8f0_StructIns>);
inline jule::Str _10f7d1d90_gen_struct_self_field(jule::Ref<_10e3fc8f0_StructIns>);
inline jule::Str _10f7d1d90_gen_struct_self_field_init_st(jule::Ref<_10e3fc8f0_StructIns>);
inline jule::Str _10f7d1d90_gen_struct_constructor(jule::Ref<_10e3fc8f0_StructIns>);
inline jule::Str _10f7d1d90_gen_struct_destructor(jule::Ref<_10e3fc8f0_StructIns>);
inline jule::Str _10f7d1d90_gen_struct_operators(jule::Ref<_10e3fc8f0_StructIns>);
inline jule::Str _10f7d1d90_gen_struct_derive_defs_prototypes(jule::Ref<_10e3fc8f0_StructIns>);
inline jule::Str _10f7d1d90_gen_struct_ins_prototype(jule::Ref<_10e3fc8f0_StructIns>);
inline jule::Str _10f7d1d90_gen_struct_prototype(jule::Ref<_10e3fc8f0_Struct>);
inline jule::Str _10f7d1d90_gen_struct_prototypes(jule::Slice<jule::Ref<_10e3fc8f0_Struct>>);
inline jule::Str _10f7d1d90_gen_fn_decl_head(jule::Ref<_10e56a140_FnIns>,jule::Bool);
inline jule::Str _10f7d1d90_gen_fn_prototype(jule::Ref<_10e56a140_Fn>,jule::Bool);
inline jule::Str _10f7d1d90_gen_fn_prototypes(jule::Ref<_10e9b6a10_Package>);
inline jule::Str _10f7d1d90_gen_prototypes(jule::Ref<_12ce09d10_IR>,jule::Slice<jule::Ref<_10e3fc8f0_Struct>>);
inline jule::Str _10f7d1d90_gen_var(jule::Ref<_10ebc2ad0_Var>);
inline jule::Str _10f7d1d90_gen_globals(jule::Slice<jule::Ref<_10ebc2ad0_Var>>);
inline jule::Str _10f7d1d90_gen_fn(jule::Ref<_10e56a140_Fn>);
inline jule::Str _10f7d1d90_gen_pkg_fns(jule::Ref<_10e9b6a10_Package>);
inline jule::Str _10f7d1d90_gen_struct_method_defs(jule::Ref<_10e3fc8f0_StructIns>);
inline jule::Str _10f7d1d90_gen_struct_ostream(jule::Ref<_10e3fc8f0_StructIns>);
inline jule::Str _10f7d1d90_gen_struct_derive_defs(jule::Ref<_10e3fc8f0_StructIns>);
inline jule::Str _10f7d1d90_gen_struct_ins(jule::Ref<_10e3fc8f0_StructIns>);
inline jule::Str _10f7d1d90_gen_struct(jule::Ref<_10e3fc8f0_Struct>);
inline jule::Str _10f7d1d90_gen_structs(jule::Slice<jule::Ref<_10e3fc8f0_Struct>>);
inline jule::Str _10f7d1d90_gen_fns(jule::Ref<_12ce09d10_IR>);
inline jule::Str _10f7d1d90_gen_init_caller(jule::Ref<_12ce09d10_IR>);
inline void _10f7d1d90_append_standard(jule::Str*,jule::Str,jule::Str);
inline jule::Str _10f7d1d90_gen(jule::Ref<_12ce09d10_IR>);
inline jule::Bool _10f7a37c0_is_struct_ordered(jule::Slice<jule::Ref<_10e3fc8f0_Struct>>,jule::Ref<_10e3fc8f0_Struct>);
inline void _10f7a37c0_order_structures(jule::Slice<jule::Ref<_10e3fc8f0_Struct>>);
inline jule::Bool _10f7a37c0_is_var_ordered(jule::Slice<jule::Ref<_10ebc2ad0_Var>>,jule::Ref<_10ebc2ad0_Var>);
inline void _10f7a37c0_order_variables(jule::Slice<jule::Ref<_10ebc2ad0_Var>>);
inline jule::Str _13ce08d20_str_repeat(jule::Str,jule::Int);
inline void _13ce08d20_print_error_message(jule::Str);
inline void _13ce08d20_help(void);
inline void _13ce08d20_version(void);
inline void _13ce08d20_tool_distos(void);
inline void _13ce08d20_tool_distarch(void);
inline void _13ce08d20_tool(void);
inline jule::Bool _13ce08d20_process_command(void);
inline void _13ce08d20_init(void);
inline std::tuple<jule::Str,jule::Str> _13ce08d20_get_option(jule::Slice<jule::Str>,jule::Int*);
inline jule::Str _13ce08d20_get_option_value(jule::Slice<jule::Str>,jule::Int*);
inline void _13ce08d20_parse_out_option(jule::Slice<jule::Str>,jule::Int*);
inline void _13ce08d20_parse_opt_option(jule::Slice<jule::Str>,jule::Int*);
inline void _13ce08d20_check_target_arch(jule::Str);
inline void _13ce08d20_check_target_os(jule::Str);
inline void _13ce08d20_parse_target_option(jule::Slice<jule::Str>,jule::Int*);
inline void _13ce08d20_parse_compiler_option(jule::Slice<jule::Str>,jule::Int*);
inline jule::Str _13ce08d20_parse_options(jule::Slice<jule::Str>);
inline void _13ce08d20_write_output(jule::Str,jule::Str);
inline void _13ce08d20_clear_objects(void);
inline void _13ce08d20_compile_ir(jule::Str,jule::Str);
inline void _13ce08d20_do_spell(jule::Str,jule::Str,jule::Str);
inline void _13ce08d20_exit_err(jule::Str);
inline void _13ce08d20_check_mode(void);
inline void _13ce08d20_check_compiler(void);
inline void _13ce08d20_set(void);
inline void _13ce08d20_print_logs(jule::Slice<_13cfd2d20_Log>);
inline jule::Bool _13ce08d20_is_cpp_source_file(jule::Str);
inline std::tuple<jule::Str,jule::Str> _13ce08d20_gen_compile_cmd(jule::Str,jule::Ref<_12ce09d10_IR>);
inline jule::Str _13ce08d20_get_compile_path(void);
inline void _13ce08d20_apply_target_independent_optimizations(jule::Ref<_12ce09d10_IR>);
void entry_point(void);


static jule::Str _13ce08d20_COMPILER = jule::Str("", 0);
static jule::Str _13ce08d20_COMPILER_PATH = jule::Str("", 0);
static jule::Str _13ce08d20_OUT_DIR = jule::Str("dist", 4);
static jule::Int _13ce08d20_MODE = 0LLU;
static jule::Str _13ce08d20_OUT_NAME = jule::Str("ir.cpp", 6);
static jule::Str _13ce08d20_OUT = jule::Str("", 0);
static jule::Slice<jule::Str> _10cf1adb0_ARGS = nullptr;
static jule::Slice<jule::Str> _10cf1adb0_ENV = nullptr;
static jule::Array<jule::U8,32> _10e2c0220_DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
static jule::Array<jule::U8,64> _10e2c0220_DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
static _10d916690_FloatInfo _10d916690_F32_INFO = _10d916690_FloatInfo(23LLU,8LLU,-127LL);
static _10d916690_FloatInfo _10d916690_F64_INFO = _10d916690_FloatInfo(52LLU,11LLU,-1023LL);
static jule::Array<jule::Array<jule::U64,2>,696> _10ce703a0_DETAILED_POWS_OF_TEN = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
static jule::Slice<jule::Int> _10cec8240_POWTAB = jule::Slice<jule::Int>({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
static jule::Slice<jule::F64> _10cec8240_F64_POW10 = jule::Slice<jule::F64>({1e+00,1e+01,1e+02,1e+03,1e+04,1e+05,1e+06,1e+07,1e+08,1e+09,1e+10,1e+11,1e+12,1e+13,1e+14,1e+15,1e+16,1e+17,1e+18,1e+19,1e+20,1e+21,1e+22});
static jule::Slice<jule::F32> _10cec8240_F32_POW10 = jule::Slice<jule::F32>({1e+00,1e+01,1e+02,1e+03,1e+04,1e+05,1e+06,1e+07,1e+08,1e+09,1e+10});
static jule::Array<jule::U64,20> _10ce72a70_U64_POW10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
static jule::Slice<_10ce72c20_LeftCheat> _10ce72c20_LEFTCHEATS = jule::Slice<_10ce72c20_LeftCheat>({_10ce72c20_LeftCheat(0LL,jule::Str("", 0)),_10ce72c20_LeftCheat(1LL,jule::Str("5", 1)),_10ce72c20_LeftCheat(1LL,jule::Str("25", 2)),_10ce72c20_LeftCheat(1LL,jule::Str("125", 3)),_10ce72c20_LeftCheat(2LL,jule::Str("625", 3)),_10ce72c20_LeftCheat(2LL,jule::Str("3125", 4)),_10ce72c20_LeftCheat(2LL,jule::Str("15625", 5)),_10ce72c20_LeftCheat(3LL,jule::Str("78125", 5)),_10ce72c20_LeftCheat(3LL,jule::Str("390625", 6)),_10ce72c20_LeftCheat(3LL,jule::Str("1953125", 7)),_10ce72c20_LeftCheat(4LL,jule::Str("9765625", 7)),_10ce72c20_LeftCheat(4LL,jule::Str("48828125", 8)),_10ce72c20_LeftCheat(4LL,jule::Str("244140625", 9)),_10ce72c20_LeftCheat(4LL,jule::Str("1220703125", 10)),_10ce72c20_LeftCheat(5LL,jule::Str("6103515625", 10)),_10ce72c20_LeftCheat(5LL,jule::Str("30517578125", 11)),_10ce72c20_LeftCheat(5LL,jule::Str("152587890625", 12)),_10ce72c20_LeftCheat(6LL,jule::Str("762939453125", 12)),_10ce72c20_LeftCheat(6LL,jule::Str("3814697265625", 13)),_10ce72c20_LeftCheat(6LL,jule::Str("19073486328125", 14)),_10ce72c20_LeftCheat(7LL,jule::Str("95367431640625", 14)),_10ce72c20_LeftCheat(7LL,jule::Str("476837158203125", 15)),_10ce72c20_LeftCheat(7LL,jule::Str("2384185791015625", 16)),_10ce72c20_LeftCheat(7LL,jule::Str("11920928955078125", 17)),_10ce72c20_LeftCheat(8LL,jule::Str("59604644775390625", 17)),_10ce72c20_LeftCheat(8LL,jule::Str("298023223876953125", 18)),_10ce72c20_LeftCheat(8LL,jule::Str("1490116119384765625", 19)),_10ce72c20_LeftCheat(9LL,jule::Str("7450580596923828125", 19)),_10ce72c20_LeftCheat(9LL,jule::Str("37252902984619140625", 20)),_10ce72c20_LeftCheat(9LL,jule::Str("186264514923095703125", 21)),_10ce72c20_LeftCheat(10LL,jule::Str("931322574615478515625", 21)),_10ce72c20_LeftCheat(10LL,jule::Str("4656612873077392578125", 22)),_10ce72c20_LeftCheat(10LL,jule::Str("23283064365386962890625", 23)),_10ce72c20_LeftCheat(10LL,jule::Str("116415321826934814453125", 24)),_10ce72c20_LeftCheat(11LL,jule::Str("582076609134674072265625", 24)),_10ce72c20_LeftCheat(11LL,jule::Str("2910383045673370361328125", 25)),_10ce72c20_LeftCheat(11LL,jule::Str("14551915228366851806640625", 26)),_10ce72c20_LeftCheat(12LL,jule::Str("72759576141834259033203125", 26)),_10ce72c20_LeftCheat(12LL,jule::Str("363797880709171295166015625", 27)),_10ce72c20_LeftCheat(12LL,jule::Str("1818989403545856475830078125", 28)),_10ce72c20_LeftCheat(13LL,jule::Str("9094947017729282379150390625", 28)),_10ce72c20_LeftCheat(13LL,jule::Str("45474735088646411895751953125", 29)),_10ce72c20_LeftCheat(13LL,jule::Str("227373675443232059478759765625", 30)),_10ce72c20_LeftCheat(13LL,jule::Str("1136868377216160297393798828125", 31)),_10ce72c20_LeftCheat(14LL,jule::Str("5684341886080801486968994140625", 31)),_10ce72c20_LeftCheat(14LL,jule::Str("28421709430404007434844970703125", 32)),_10ce72c20_LeftCheat(14LL,jule::Str("142108547152020037174224853515625", 33)),_10ce72c20_LeftCheat(15LL,jule::Str("710542735760100185871124267578125", 33)),_10ce72c20_LeftCheat(15LL,jule::Str("3552713678800500929355621337890625", 34)),_10ce72c20_LeftCheat(15LL,jule::Str("17763568394002504646778106689453125", 35)),_10ce72c20_LeftCheat(16LL,jule::Str("88817841970012523233890533447265625", 35)),_10ce72c20_LeftCheat(16LL,jule::Str("444089209850062616169452667236328125", 36)),_10ce72c20_LeftCheat(16LL,jule::Str("2220446049250313080847263336181640625", 37)),_10ce72c20_LeftCheat(16LL,jule::Str("11102230246251565404236316680908203125", 38)),_10ce72c20_LeftCheat(17LL,jule::Str("55511151231257827021181583404541015625", 38)),_10ce72c20_LeftCheat(17LL,jule::Str("277555756156289135105907917022705078125", 39)),_10ce72c20_LeftCheat(17LL,jule::Str("1387778780781445675529539585113525390625", 40)),_10ce72c20_LeftCheat(18LL,jule::Str("6938893903907228377647697925567626953125", 40)),_10ce72c20_LeftCheat(18LL,jule::Str("34694469519536141888238489627838134765625", 41)),_10ce72c20_LeftCheat(18LL,jule::Str("173472347597680709441192448139190673828125", 42)),_10ce72c20_LeftCheat(19LL,jule::Str("867361737988403547205962240695953369140625", 42))});
static jule::Array<jule::Str,4> _11ce23cb0_CPP_HEADER_EXTS = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
static jule::Array<jule::Str,3> _11ce23cb0_CPP_EXTS = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
static jule::Array<jule::Str,1> _11ce23cb0_OBJECTIVE_CPP_EXTS = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
static jule::Map<jule::Str,jule::Str> _10d8aeab0_ERRORS = jule::Map<jule::Str,jule::Str>({{jule::Str("stdlib_not_exist", 16),jule::Str("standard library directory not found", 36)},{jule::Str("file_not_useable", 16),jule::Str("file is not useable for this operating system or architecture", 61)},{jule::Str("file_not_jule", 13),jule::Str("this is not jule source file: @", 31)},{jule::Str("no_entry_point", 14),jule::Str("entry point (main) function is not defined", 42)},{jule::Str("duplicated_ident", 16),jule::Str("duplicated identifier for declarations in scope: @", 50)},{jule::Str("extra_closed_parentheses", 24),jule::Str("extra closed parentheses", 24)},{jule::Str("extra_closed_braces", 19),jule::Str("extra closed braces", 19)},{jule::Str("extra_closed_brackets", 21),jule::Str("extra closed brackets", 21)},{jule::Str("wait_close_parentheses", 22),jule::Str("parentheses waiting to close", 28)},{jule::Str("wait_close_brace", 16),jule::Str("brace waiting to close", 22)},{jule::Str("wait_close_bracket", 18),jule::Str("bracket are waiting to close", 28)},{jule::Str("expected_parentheses_close", 26),jule::Str("was expected parentheses close", 30)},{jule::Str("expected_brace_close", 20),jule::Str("was expected brace close", 24)},{jule::Str("expected_bracket_close", 22),jule::Str("was expected bracket close", 26)},{jule::Str("body_not_exist", 14),jule::Str("body is not exist", 17)},{jule::Str("operator_overflow", 17),jule::Str("operator overflow", 17)},{jule::Str("incompatible_types", 18),jule::Str("@ and @ data-types are not compatible", 37)},{jule::Str("operator_not_for_juletype", 25),jule::Str("@ operator is not defined for @ type", 36)},{jule::Str("operator_not_for_float", 22),jule::Str("@ operator is not defined for float type(s)", 43)},{jule::Str("operator_not_for_int", 20),jule::Str("@ operator is not defined for integer type(s)", 45)},{jule::Str("operator_not_for_uint", 21),jule::Str("@ operator is not defined for unsigned integer type(s)", 54)},{jule::Str("ident_not_exist", 15),jule::Str("identifier is not exist: @", 26)},{jule::Str("not_function_call", 17),jule::Str("value is not function", 21)},{jule::Str("argument_overflow", 17),jule::Str("argument overflow", 17)},{jule::Str("fn_have_ret", 11),jule::Str("@ function cannot have return type", 34)},{jule::Str("fn_have_parameters", 18),jule::Str("@ function cannot have parameter(s)", 35)},{jule::Str("fn_is_unsafe", 12),jule::Str("@ function cannot unsafe", 24)},{jule::Str("require_ret_expr", 16),jule::Str("return statements of non-void functions should have return expression", 69)},{jule::Str("void_function_ret_expr", 22),jule::Str("void functions is cannot returns any value", 42)},{jule::Str("bitshift_must_unsigned", 22),jule::Str("bit shifting value is must be unsigned", 38)},{jule::Str("logical_not_bool", 16),jule::Str("logical expression is have only boolean type values", 51)},{jule::Str("assign_const", 12),jule::Str("constants is can't assign", 25)},{jule::Str("assign_require_lvalue", 21),jule::Str("assignment required lvalue", 26)},{jule::Str("assign_type_not_support_value", 29),jule::Str("type is not support assignment", 30)},{jule::Str("invalid_token", 13),jule::Str("undefined code content: @", 25)},{jule::Str("invalid_syntax", 14),jule::Str("invalid syntax", 14)},{jule::Str("invalid_type", 12),jule::Str("invalid data-type", 17)},{jule::Str("invalid_numeric_range", 21),jule::Str("arithmetic value overflow", 25)},{jule::Str("invalid_operator", 16),jule::Str("invalid operator", 16)},{jule::Str("invalid_expr_unary_operator", 27),jule::Str("invalid expression for unary @ operator", 39)},{jule::Str("invalid_escape_sequence", 23),jule::Str("invalid escape sequence", 23)},{jule::Str("invalid_type_source", 19),jule::Str("invalid data-type source", 24)},{jule::Str("invalid_preprocessor", 20),jule::Str("invalid preprocessor directive", 30)},{jule::Str("invalid_pragma_directive", 24),jule::Str("invalid pragma directive", 24)},{jule::Str("invalid_type_for_const", 22),jule::Str("@ is invalid data-type for constant", 35)},{jule::Str("invalid_value_for_key", 21),jule::Str("\"@\" is invalid value for the \"@\" key", 36)},{jule::Str("invalid_expr", 12),jule::Str("invalid expression", 18)},{jule::Str("invalid_cpp_ext", 15),jule::Str("invalid C++ extension: @", 24)},{jule::Str("invalid_label", 13),jule::Str("invalid label", 13)},{jule::Str("missing_autotype_value", 22),jule::Str("auto type declarations should have a initializer", 48)},{jule::Str("missing_type", 12),jule::Str("data-type missing", 17)},{jule::Str("missing_expr", 12),jule::Str("expression missing", 18)},{jule::Str("missing_block_comment", 21),jule::Str("missing block comment close", 27)},{jule::Str("missing_rune_end", 16),jule::Str("rune is not finished", 20)},{jule::Str("missing_ret", 11),jule::Str("missing return at end of function", 33)},{jule::Str("missing_string_end", 18),jule::Str("string is not finished", 22)},{jule::Str("missing_multi_ret", 17),jule::Str("missing return expressions for multi return", 43)},{jule::Str("missing_multi_assign_idents", 27),jule::Str("missing identifier(s) for multiple assignment", 45)},{jule::Str("missing_use_path", 16),jule::Str("missing path of use statement", 29)},{jule::Str("missing_pragma_directive", 24),jule::Str("missing pragma directive", 24)},{jule::Str("missing_goto_label", 18),jule::Str("missing label identifier for goto statement", 43)},{jule::Str("missing_expr_for", 16),jule::Str("missing expression for @", 24)},{jule::Str("missing_generics", 16),jule::Str("missing generics", 16)},{jule::Str("missing_receiver", 16),jule::Str("missing receiver parameter", 26)},{jule::Str("missing_function_parentheses", 28),jule::Str("missing function parentheses", 28)},{jule::Str("expr_not_const", 14),jule::Str("expressions is not constant expression", 38)},{jule::Str("nil_for_autotype", 16),jule::Str("nil is cannot use with auto type definitions", 44)},{jule::Str("void_for_autotype", 17),jule::Str("void data is cannot use for auto type definitions", 49)},{jule::Str("rune_empty", 10),jule::Str("rune is cannot empty", 20)},{jule::Str("rune_overflow", 13),jule::Str("rune is should be single", 24)},{jule::Str("not_supports_indexing", 21),jule::Str("@ data type is not support indexing", 35)},{jule::Str("not_supports_slicing", 20),jule::Str("@ data type is not support slicing", 34)},{jule::Str("already_const", 13),jule::Str("define is already constant", 26)},{jule::Str("already_variadic", 16),jule::Str("define is already variadic", 26)},{jule::Str("already_reference", 17),jule::Str("define is already reference", 27)},{jule::Str("duplicate_use_decl", 18),jule::Str("duplicate use declaration: @", 28)},{jule::Str("ignore_ident", 12),jule::Str("ignore operator cannot use as identifier for this declaration", 61)},{jule::Str("overflow_multi_assign_idents", 28),jule::Str("overflow multi assignment identifers", 36)},{jule::Str("overflow_ret", 12),jule::Str("overflow return expressions", 27)},{jule::Str("break_at_out_of_valid_scope", 27),jule::Str("break keyword is cannot used at out of iteration and match cases", 64)},{jule::Str("continue_at_out_of_valid_scope", 30),jule::Str("continue keyword is cannot used at out of iteration", 51)},{jule::Str("iter_while_require_bool_expr", 28),jule::Str("while iterations must be have boolean expression", 48)},{jule::Str("iter_range_require_enumerable_expr", 34),jule::Str("range iterations must be have enumerable expression", 51)},{jule::Str("much_range_vars", 15),jule::Str("range variables can be maximum two", 34)},{jule::Str("if_require_bool_expr", 20),jule::Str("if conditions must be have boolean expression", 45)},{jule::Str("else_have_expr", 14),jule::Str("else's cannot have any expression", 33)},{jule::Str("variadic_parameter_not_last", 27),jule::Str("variadic parameter can only be last parameter", 45)},{jule::Str("variadic_with_non_variadicable", 30),jule::Str("@ data-type is not variadicable", 31)},{jule::Str("more_args_with_variadiced", 25),jule::Str("variadic argument can't use with more argument", 46)},{jule::Str("type_not_supports_casting", 25),jule::Str("@ data-type not supports casting", 32)},{jule::Str("type_not_supports_casting_to", 28),jule::Str("@ data-type not supports casting to @ data-type", 47)},{jule::Str("use_at_content", 14),jule::Str("use declaration must be start of source code", 44)},{jule::Str("use_not_found", 13),jule::Str("used directory path not found/access: @", 39)},{jule::Str("used_package_has_errors", 23),jule::Str("used package has errors: @", 26)},{jule::Str("def_not_support_pub", 19),jule::Str("define is not supports pub modifier", 35)},{jule::Str("obj_not_support_sub_fields", 26),jule::Str("object @ is not supports sub fields", 35)},{jule::Str("obj_have_not_ident", 18),jule::Str("object is not have sub field in this identifier: @", 50)},{jule::Str("type_not_support_sub_fields", 27),jule::Str("type @ is not supports sub fields", 33)},{jule::Str("type_have_not_ident", 19),jule::Str("type @ is not have sub field in this identifier: @", 50)},{jule::Str("doc_couldnt_generated", 21),jule::Str("@: documentation could not generated because Jule source code has an errors", 75)},{jule::Str("declared_but_not_used", 21),jule::Str("@ declared but not used", 23)},{jule::Str("expr_not_func_call", 18),jule::Str("statement must have function call expression", 44)},{jule::Str("label_exist", 11),jule::Str("label is already exist in this identifier: @", 44)},{jule::Str("label_not_exist", 15),jule::Str("not exist any label in this identifier: @", 41)},{jule::Str("goto_jumps_declarations", 23),jule::Str("goto @ jumps over declaration(s)", 32)},{jule::Str("fn_not_has_parameter", 20),jule::Str("function is not has parameter in this identifier: @", 51)},{jule::Str("already_has_expr", 16),jule::Str("@ already has expression", 24)},{jule::Str("argument_must_target_to_field", 29),jule::Str("argument must target to field", 29)},{jule::Str("overflow_limits", 15),jule::Str("overflow the limit of data-type", 31)},{jule::Str("generics_overflow", 17),jule::Str("overflow generics", 17)},{jule::Str("has_generics", 12),jule::Str("define has generics", 19)},{jule::Str("not_has_generics", 16),jule::Str("define not has generics", 23)},{jule::Str("type_not_supports_generics", 26),jule::Str("type @ not supports generics", 28)},{jule::Str("divide_by_zero", 14),jule::Str("divide by zero", 14)},{jule::Str("trait_have_not_ident", 20),jule::Str("trait @ have not any define in this identifier: @", 49)},{jule::Str("not_impl_trait_def", 18),jule::Str("trait @ derived but not implemented trait's @ define", 52)},{jule::Str("dynamic_type_annotation_failed", 30),jule::Str("dynamic type annotation failed", 30)},{jule::Str("fallthrough_wrong_use", 21),jule::Str("fallthrough keyword can only useable at end of the case scopes", 62)},{jule::Str("fallthrough_into_final_case", 27),jule::Str("fallthrough cannot useable at final case", 40)},{jule::Str("unsafe_behavior_at_out_of_unsafe_scope", 38),jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54)},{jule::Str("ref_method_used_with_not_ref_instance", 37),jule::Str("reference method cannot use with non-reference instance", 55)},{jule::Str("method_as_anonymous_fn", 22),jule::Str("methods cannot use as anonymous function", 40)},{jule::Str("genericed_fn_as_anonymous_fn", 28),jule::Str("genericed functions cannot use as anonymous function", 52)},{jule::Str("illegal_cycle_refers_itself", 27),jule::Str("illegal cycle in declaration, @ refers to itself", 48)},{jule::Str("illegal_cross_cycle", 19),jule::Str("illegal cross cycle in declarations;\n@", 38)},{jule::Str("assignment_to_non_mut", 21),jule::Str("cannot assign to immutable define", 33)},{jule::Str("assignment_non_mut_to_mut", 25),jule::Str("cannot assign mutable type used immutable define to mutable define", 66)},{jule::Str("ret_with_mut_typed_non_mut", 26),jule::Str("mutable typed return expressions should be mutable", 50)},{jule::Str("mutable_operation_on_immutable", 30),jule::Str("mutable operation cannot used with immutable define", 51)},{jule::Str("trait_has_reference_parametered_function", 40),jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88)},{jule::Str("enum_have_not_field", 19),jule::Str("enum have not any field: @", 26)},{jule::Str("duplicate_match_type", 20),jule::Str("type is already checked: @", 26)},{jule::Str("cpp_linked_variable_has_expr", 28),jule::Str("cpp linked variables cannot have expression", 43)},{jule::Str("cpp_linked_variable_is_const", 28),jule::Str("cpp linked variables cannot constant", 36)},{jule::Str("const_var_not_have_expr", 23),jule::Str("constant variable must have initialize expression", 49)},{jule::Str("ref_refs_ref", 12),jule::Str("references cannot reference to another reference", 48)},{jule::Str("ref_refs_ptr", 12),jule::Str("references cannot reference to pointer", 38)},{jule::Str("ref_refs_array", 14),jule::Str("references cannot reference to array", 36)},{jule::Str("ref_refs_enum", 13),jule::Str("references cannot reference to enum", 35)},{jule::Str("ptr_points_ref", 14),jule::Str("pointers cannot point to reference", 34)},{jule::Str("ptr_points_enum", 15),jule::Str("pointers cannot point to enum", 29)},{jule::Str("missing_expr_for_unary", 22),jule::Str("missing expression for unary operator", 37)},{jule::Str("invalid_op_for_unary", 20),jule::Str("invalid_operator_for_unary: @", 29)},{jule::Str("use_decl_at_body", 16),jule::Str("use declarations must declared before other declarations", 56)},{jule::Str("pwd_cannot_set", 14),jule::Str("current working directory cannot set", 36)},{jule::Str("array_auto_sized", 16),jule::Str("array must have explicit size", 29)},{jule::Str("namespace_not_exist", 19),jule::Str("namespace not exist: @", 22)},{jule::Str("impl_base_not_exist", 19),jule::Str("any valid base definition is not exist in this identifier: @", 60)},{jule::Str("impl_dest_not_exist", 19),jule::Str("any valid destination definition is not exist in this identifier: @", 67)},{jule::Str("struct_already_have_ident", 25),jule::Str("struct @ already have a define in this identifier: @", 52)},{jule::Str("unsafe_ptr_indexing", 19),jule::Str("unsafe pointers not supports indexing", 37)},{jule::Str("method_has_generic_with_same_ident", 34),jule::Str("methods cannot have same generic identifier with owner same time", 64)},{jule::Str("tuple_assign_to_single", 22),jule::Str("tuples cannot assign to single define in same time", 50)},{jule::Str("missing_compile_path", 20),jule::Str("missing compile path", 20)},{jule::Str("array_size_is_not_int", 21),jule::Str("array size must be integer", 26)},{jule::Str("array_size_is_negative", 22),jule::Str("array size must be positive integer", 35)},{jule::Str("builtin_as_anonymous_fn", 23),jule::Str("built-in define cannot use as anonymous function", 48)},{jule::Str("type_case_has_not_valid_expr", 28),jule::Str("type-case must be have <any> or trait typed expression", 54)},{jule::Str("illegal_impl_out_of_package", 27),jule::Str("illegal implementation via definition from out of package", 57)},{jule::Str("method_not_invoked", 18),jule::Str("methods should be invoked", 25)},{jule::Str("duplicated_import_selection", 27),jule::Str("duplicated identifier selection: @", 34)},{jule::Str("ident_is_not_accessible", 23),jule::Str("identifier is not accessible: @", 31)},{jule::Str("invalid_stmt_for_next", 21),jule::Str("invalid statement for while-next", 32)},{jule::Str("modulo_with_not_int", 19),jule::Str("module operator must be used with integer type", 46)},{jule::Str("pkg_illegal_cycle_refers_itself", 31),jule::Str("illegal cycle in use declaration, package @ refers to itself", 60)},{jule::Str("pkg_illegal_cross_cycle", 23),jule::Str("illegal cross cycle in use declarations;\n@", 42)},{jule::Str("refers_to", 9),jule::Str("@ refers to @", 13)},{jule::Str("no_file_in_entry_package", 24),jule::Str("there is no Jule source code in this package: @", 47)},{jule::Str("no_member_in_enum", 17),jule::Str("there is no member for enum: @", 30)},{jule::Str("type_is_not_derives", 19),jule::Str("type \"@\" is not derives: @", 26)},{jule::Str("clone_with_mut", 14),jule::Str("clonning is unnecessary for mutable defines", 43)},{jule::Str("clone_non_lvalue", 16),jule::Str("non-lvalue expressions cannot be clone", 38)},{jule::Str("clone_immut_struct", 18),jule::Str("struct \"@\" is not breaks immutability, do not needs clonning", 60)},{jule::Str("internal_type_not_supports_clone", 32),jule::Str("internal types of \"@\" is not supports clonning", 46)},{jule::Str("type_not_compatible_for_derive", 30),jule::Str("type \"@\" is not compatible to derive \"@\"", 40)},{jule::Str("pass_directive_not_starts_with_dash", 35),jule::Str("the pass directive must be start with dash", 42)},{jule::Str("derive_illegal_cycle_refers_itself", 34),jule::Str("illegal cycle for \"@\" derive, struct \"@\" refers to itself", 57)},{jule::Str("derive_illegal_cross_cycle", 26),jule::Str("illegal cross cycle for \"@\" derive;\n@", 37)},{jule::Str("invalid_expr_for_binop", 22),jule::Str("invalid expression used for binary operation", 44)},{jule::Str("cpp_linked_struct_for_ref", 25),jule::Str("cpp-linked structures cannot supports reference counting", 56)},{jule::Str("trait_method_has_generics", 25),jule::Str("trait methods cannot have generics", 34)},{jule::Str("enum_as_map_val", 15),jule::Str("maps do not support enums as map key type", 41)},{jule::Str("global_not_static", 17),jule::Str("global variables must be static", 31)},{jule::Str("static_is_auto_typed", 20),jule::Str("static variables must be have type annotation", 45)},{jule::Str("static_not_have_expr", 20),jule::Str("static variables must be have initialize expression", 51)},{jule::Str("static_function_has_receiver", 28),jule::Str("static functions cannot have receiver parameter", 47)},{jule::Str("reference_assign_non_lvalue", 27),jule::Str("references requires lvalue for assignment", 41)},{jule::Str("mut_reference_points_to_immut", 29),jule::Str("mutable reference cannot point to immutable data", 48)},{jule::Str("reference_not_initialized", 25),jule::Str("reference variables must be have lvalue initialize expression", 61)},{jule::Str("constant_reference", 18),jule::Str("references cannot be constant", 29)}});
static jule::Array<jule::Str,4> _13cfd67b0_DIRECTIVES = jule::Array<jule::Str,4>({jule::Str("cdef", 4),jule::Str("typedef", 7),jule::Str("derive", 6),jule::Str("pass", 4)});
static jule::Array<jule::Str,3> _13cfdfa50_DISTOS = jule::Array<jule::Str,3>({jule::Str("windows", 7),jule::Str("linux", 5),jule::Str("darwin", 6)});
static jule::Array<jule::Str,4> _13cfdfa50_DISTARCH = jule::Array<jule::Str,4>({jule::Str("arm", 3),jule::Str("arm64", 5),jule::Str("amd64", 5),jule::Str("i386", 4)});
static jule::Str _13cfea710_PATH_STDLIB = jule::Str("", 0);
static jule::Str _13cfea710_PATH_EXEC = jule::Str("", 0);
static jule::Str _13cfea710_PATH_WD = jule::Str("", 0);
static jule::Str _13cfea710_PATH_API = jule::Str("", 0);
static jule::Array<jule::I32,5> _11ce22a00_SPACES = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
static jule::Array<jule::Str,6> _11ce22a00_UNARY_OPS = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
static jule::Array<jule::Str,2> _11ce22a00_POSTFIX_OPS = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
static jule::Array<jule::Str,11> _11ce22a00_ASSING_OPS = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
static jule::Array<_11cec0de0_KindPair,46> _11cec0de0_KEYWORDS = jule::Array<_11cec0de0_KindPair,46>({_11cec0de0_KindPair(jule::Str("i8", 2),1LLU),_11cec0de0_KindPair(jule::Str("i16", 3),1LLU),_11cec0de0_KindPair(jule::Str("i32", 3),1LLU),_11cec0de0_KindPair(jule::Str("i64", 3),1LLU),_11cec0de0_KindPair(jule::Str("u8", 2),1LLU),_11cec0de0_KindPair(jule::Str("u16", 3),1LLU),_11cec0de0_KindPair(jule::Str("u32", 3),1LLU),_11cec0de0_KindPair(jule::Str("u64", 3),1LLU),_11cec0de0_KindPair(jule::Str("f32", 3),1LLU),_11cec0de0_KindPair(jule::Str("f64", 3),1LLU),_11cec0de0_KindPair(jule::Str("uint", 4),1LLU),_11cec0de0_KindPair(jule::Str("int", 3),1LLU),_11cec0de0_KindPair(jule::Str("uintptr", 7),1LLU),_11cec0de0_KindPair(jule::Str("bool", 4),1LLU),_11cec0de0_KindPair(jule::Str("str", 3),1LLU),_11cec0de0_KindPair(jule::Str("any", 3),1LLU),_11cec0de0_KindPair(jule::Str("true", 4),6LLU),_11cec0de0_KindPair(jule::Str("false", 5),6LLU),_11cec0de0_KindPair(jule::Str("nil", 3),6LLU),_11cec0de0_KindPair(jule::Str("const", 5),9LLU),_11cec0de0_KindPair(jule::Str("ret", 3),4LLU),_11cec0de0_KindPair(jule::Str("type", 4),10LLU),_11cec0de0_KindPair(jule::Str("for", 3),12LLU),_11cec0de0_KindPair(jule::Str("break", 5),13LLU),_11cec0de0_KindPair(jule::Str("continue", 8),14LLU),_11cec0de0_KindPair(jule::Str("in", 2),15LLU),_11cec0de0_KindPair(jule::Str("if", 2),16LLU),_11cec0de0_KindPair(jule::Str("else", 4),17LLU),_11cec0de0_KindPair(jule::Str("use", 3),19LLU),_11cec0de0_KindPair(jule::Str("pub", 3),21LLU),_11cec0de0_KindPair(jule::Str("goto", 4),22LLU),_11cec0de0_KindPair(jule::Str("enum", 4),24LLU),_11cec0de0_KindPair(jule::Str("struct", 6),25LLU),_11cec0de0_KindPair(jule::Str("co", 2),26LLU),_11cec0de0_KindPair(jule::Str("match", 5),27LLU),_11cec0de0_KindPair(jule::Str("self", 4),28LLU),_11cec0de0_KindPair(jule::Str("trait", 5),29LLU),_11cec0de0_KindPair(jule::Str("impl", 4),30LLU),_11cec0de0_KindPair(jule::Str("cpp", 3),31LLU),_11cec0de0_KindPair(jule::Str("fall", 4),32LLU),_11cec0de0_KindPair(jule::Str("fn", 2),33LLU),_11cec0de0_KindPair(jule::Str("let", 3),34LLU),_11cec0de0_KindPair(jule::Str("unsafe", 6),35LLU),_11cec0de0_KindPair(jule::Str("mut", 3),36LLU),_11cec0de0_KindPair(jule::Str("defer", 5),37LLU),_11cec0de0_KindPair(jule::Str("static", 6),38LLU)});
static jule::Array<_11cec0de0_KindPair,38> _11cec0de0_BASIC_OPS = jule::Array<_11cec0de0_KindPair,38>({_11cec0de0_KindPair(jule::Str("::", 2),23LLU),_11cec0de0_KindPair(jule::Str(":", 1),11LLU),_11cec0de0_KindPair(jule::Str(";", 1),5LLU),_11cec0de0_KindPair(jule::Str(",", 1),8LLU),_11cec0de0_KindPair(jule::Str("...", 3),7LLU),_11cec0de0_KindPair(jule::Str(".", 1),20LLU),_11cec0de0_KindPair(jule::Str("+=", 2),7LLU),_11cec0de0_KindPair(jule::Str("-=", 2),7LLU),_11cec0de0_KindPair(jule::Str("*=", 2),7LLU),_11cec0de0_KindPair(jule::Str("/=", 2),7LLU),_11cec0de0_KindPair(jule::Str("%=", 2),7LLU),_11cec0de0_KindPair(jule::Str("<<=", 3),7LLU),_11cec0de0_KindPair(jule::Str(">>=", 3),7LLU),_11cec0de0_KindPair(jule::Str("^=", 2),7LLU),_11cec0de0_KindPair(jule::Str("&=", 2),7LLU),_11cec0de0_KindPair(jule::Str("|=", 2),7LLU),_11cec0de0_KindPair(jule::Str("==", 2),7LLU),_11cec0de0_KindPair(jule::Str("!=", 2),7LLU),_11cec0de0_KindPair(jule::Str(">=", 2),7LLU),_11cec0de0_KindPair(jule::Str("<=", 2),7LLU),_11cec0de0_KindPair(jule::Str("&&", 2),7LLU),_11cec0de0_KindPair(jule::Str("||", 2),7LLU),_11cec0de0_KindPair(jule::Str("<<", 2),7LLU),_11cec0de0_KindPair(jule::Str(">>", 2),7LLU),_11cec0de0_KindPair(jule::Str("++", 2),7LLU),_11cec0de0_KindPair(jule::Str("--", 2),7LLU),_11cec0de0_KindPair(jule::Str("+", 1),7LLU),_11cec0de0_KindPair(jule::Str("-", 1),7LLU),_11cec0de0_KindPair(jule::Str("*", 1),7LLU),_11cec0de0_KindPair(jule::Str("/", 1),7LLU),_11cec0de0_KindPair(jule::Str("%", 1),7LLU),_11cec0de0_KindPair(jule::Str("&", 1),7LLU),_11cec0de0_KindPair(jule::Str("|", 1),7LLU),_11cec0de0_KindPair(jule::Str("^", 1),7LLU),_11cec0de0_KindPair(jule::Str("!", 1),7LLU),_11cec0de0_KindPair(jule::Str("<", 1),7LLU),_11cec0de0_KindPair(jule::Str(">", 1),7LLU),_11cec0de0_KindPair(jule::Str("=", 1),7LLU)});
static jule::Str _10f521350_SYS_INT = jule::Str("", 0);
static jule::Str _10f521350_SYS_UINT = jule::Str("", 0);
static jule::Ref<_10e56a140_FnIns> _10f3f9210_BUILTIN_FN_OUT = jule::new_struct<_10e56a140_FnIns>(new( std::nothrow ) _10e56a140_FnIns());
static jule::Ref<_10e56a140_FnIns> _10f3f9210_BUILTIN_FN_OUTLN = jule::new_struct<_10e56a140_FnIns>(new( std::nothrow ) _10e56a140_FnIns());
static jule::Ref<_10e56a140_FnIns> _10f3f9210_BUILTIN_FN_NEW = jule::new_struct<_10e56a140_FnIns>(new( std::nothrow ) _10e56a140_FnIns());
static jule::Ref<_10e56a140_FnIns> _10f3f9210_BUILTIN_FN_DROP = jule::new_struct<_10e56a140_FnIns>(new( std::nothrow ) _10e56a140_FnIns());
static jule::Ref<_10e56a140_FnIns> _10f3f9210_BUILTIN_FN_PANIC = jule::new_struct<_10e56a140_FnIns>(new( std::nothrow ) _10e56a140_FnIns());
static jule::Ref<_10e56a140_FnIns> _10f3f9210_BUILTIN_FN_MAKE = jule::new_struct<_10e56a140_FnIns>(new( std::nothrow ) _10e56a140_FnIns());
static jule::Ref<_10e56a140_FnIns> _10f3f9210_BUILTIN_FN_APPEND = jule::new_struct<_10e56a140_FnIns>(new( std::nothrow ) _10e56a140_FnIns());
static jule::Ref<_10e56a140_FnIns> _10f3f9210_BUILTIN_FN_RECOVER = jule::new_struct<_10e56a140_FnIns>(new( std::nothrow ) _10e56a140_FnIns());
static jule::Ref<_10e56a140_FnIns> _10f3f9210_BUILTIN_FN_CLONE = jule::new_struct<_10e56a140_FnIns>(new( std::nothrow ) _10e56a140_FnIns());
static jule::Ref<_10e56a140_FnIns> _10f3f9210_BUILTIN_FN_STD_MEM_SIZE_OF = jule::new_struct<_10e56a140_FnIns>(new( std::nothrow ) _10e56a140_FnIns());
static jule::Ref<_10e56a140_FnIns> _10f3f9210_BUILTIN_FN_STD_MEM_ALIGN_OF = jule::new_struct<_10e56a140_FnIns>(new( std::nothrow ) _10e56a140_FnIns());
static jule::Ref<_10e56a140_FnIns> _10f3f9210_BUILTIN_FN_REAL = jule::new_struct<_10e56a140_FnIns>(new( std::nothrow ) _10e56a140_FnIns(jule::Ref<_10e3fc8f0_StructIns>(),jule::Ref<_10e56a140_Fn>(),jule::Slice<jule::Ref<_10eeb79b0_TypeKind>>(),jule::Slice<jule::Ref<_10e56a140_ParamIns>>(),jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_10e97fcf0_Scope>(),jule::Fn<jule::Ref<_10ee8a260_Data>(jule::Ref<_10ee8a260_Eval>,jule::Ref<_11ce1fd50_FnCallExpr>,jule::Ref<_10ee8a260_Data>)>(),jule::Bool()));
static jule::Ref<_10e56a140_FnIns> _10f3f9210_BUILTIN_FN_COPY = jule::new_struct<_10e56a140_FnIns>(new( std::nothrow ) _10e56a140_FnIns(jule::Ref<_10e3fc8f0_StructIns>(),jule::Ref<_10e56a140_Fn>(),jule::Slice<jule::Ref<_10eeb79b0_TypeKind>>(),jule::Slice<jule::Ref<_10e56a140_ParamIns>>(),jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("int", 3)))),jule::Ref<_10e97fcf0_Scope>(),jule::Fn<jule::Ref<_10ee8a260_Data>(jule::Ref<_10ee8a260_Eval>,jule::Ref<_11ce1fd50_FnCallExpr>,jule::Ref<_10ee8a260_Data>)>(),jule::Bool()));
static jule::Ref<_10eeb79b0_TypeAlias> _10f3f9210_BUILTIN_TYPE_ALIAS_BYTE = jule::new_struct<_10eeb79b0_TypeAlias>(new( std::nothrow ) _10eeb79b0_TypeAlias(jule::Ref<_11ce1fd50_ScopeTree>(),true,jule::Bool(),jule::Bool(),_11ce22a00_Token(),jule::Str(),jule::new_struct<_10eeb79b0_TypeSymbol>(new( std::nothrow ) _10eeb79b0_TypeSymbol(jule::Ref<_11ce1fd50_TypeDecl>(),jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("u8", 2)))))),jule::Str(),jule::Slice<jule::Any>()));
static jule::Ref<_10eeb79b0_TypeAlias> _10f3f9210_BUILTIN_TYPE_ALIAS_RUNE = jule::new_struct<_10eeb79b0_TypeAlias>(new( std::nothrow ) _10eeb79b0_TypeAlias(jule::Ref<_11ce1fd50_ScopeTree>(),true,jule::Bool(),jule::Bool(),_11ce22a00_Token(),jule::Str(),jule::new_struct<_10eeb79b0_TypeSymbol>(new( std::nothrow ) _10eeb79b0_TypeSymbol(jule::Ref<_11ce1fd50_TypeDecl>(),jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("i32", 3)))))),jule::Str(),jule::Slice<jule::Any>()));
static jule::Ref<_10e3d6eb0_Trait> _10f3f9210_BUILTIN_TRAIT_ERROR = jule::new_struct<_10e3d6eb0_Trait>(new( std::nothrow ) _10e3d6eb0_Trait(_11ce22a00_Token(),jule::Str("Error", 5),true,jule::Str(),jule::Slice<jule::Ref<_10e56a140_Fn>>({jule::new_struct<_10e56a140_Fn>(new( std::nothrow ) _10e56a140_Fn(jule::Ref<_10e9847f0_Sema>(),_11ce22a00_Token(),jule::Bool(),jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str("error", 5),jule::Slice<jule::Ref<_11ce1fd50_Directive>>(),jule::Str(),jule::Ref<_11ce1fd50_ScopeTree>(),jule::Slice<jule::Ref<_11ce1fd50_GenericDecl>>(),jule::new_struct<_10e56a140_RetType>(new( std::nothrow ) _10e56a140_RetType(jule::new_struct<_10eeb79b0_TypeSymbol>(new( std::nothrow ) _10eeb79b0_TypeSymbol(jule::new_struct<_11ce1fd50_TypeDecl>(new( std::nothrow ) _11ce1fd50_TypeDecl(_11ce22a00_Token(),jule::new_struct<_11ce1fd50_IdentTypeDecl>(new( std::nothrow ) _11ce1fd50_IdentTypeDecl(_11ce22a00_Token(),jule::Str("str", 3),jule::Bool(),jule::Slice<jule::Ref<_11ce1fd50_TypeDecl>>())))),jule::Ref<_10eeb79b0_TypeKind>())),jule::Slice<_11ce22a00_Token>())),jule::Slice<jule::Ref<_10e56a140_Param>>({jule::new_struct<_10e56a140_Param>(new( std::nothrow ) _10e56a140_Param(_11ce22a00_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_10eeb79b0_TypeSymbol>(),jule::Str("self", 4)))}),jule::Ref<_10e3fc8f0_Struct>(),jule::Ref<_10e8ca650_ReferenceStack>(),jule::Slice<jule::Ref<_10e56a140_FnIns>>()))}),jule::Slice<jule::Ref<_10e3fc8f0_Struct>>()));
static jule::Slice<jule::Any> _13cf78d70_deads = nullptr;
static jule::Slice<jule::Any> _13cf78d70_checking = nullptr;
static jule::Any _13cf78d70_current = jule::Any(nullptr);
static jule::Slice<jule::Str> _12ce1e490_OPTIMIZATIONS = nullptr;
static jule::U64 _10f7d1d90_INDENT = 0LLU;
static jule::Array<_10dba43b0_accept_range,16> _10dba43b0_ACCEPT_RANGES = jule::Array<_10dba43b0_accept_range,16>({_10dba43b0_accept_range(128LLU,191LLU),_10dba43b0_accept_range(160LLU,191LLU),_10dba43b0_accept_range(128LLU,159LLU),_10dba43b0_accept_range(144LLU,191LLU),_10dba43b0_accept_range(128LLU,143LLU)});
static jule::Array<jule::U8,256> _10dba43b0_FIRST = jule::Array<jule::U8,256>({});
static jule::Str _13cfea710_ARCH = jule::Str("arm64", 5);
static jule::Str _13cfea710_OS = jule::Str("linux", 5);
static jule::Array<jule::Array<jule::Str,2>,3> _13ce08d20_HELP_MAP = jule::Array<jule::Array<jule::Str,2>,3>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)})});

inline jule::U8 _12ce95080_LazyBuff::_method_index(jule::Int _6624_i) {
	if (((*this)._field_buff != nullptr)) {
		return (*this)._field_buff[static_cast<jule::Int>(_6624_i)];
	}
	return (*this)._field_path[static_cast<jule::Int>(_6624_i)];
}



inline void _12ce95080_LazyBuff::_method_append(jule::U8 _7325_c) {
	if (((*this)._field_buff == nullptr)) {
		if ((((*this)._field_w < static_cast<jule::I64>((*this)._field_path.len())) && ((*this)._field_path[static_cast<jule::Int>((*this)._field_w)] == _7325_c))) {
			((*this)._field_w)++;
			return;
		}
		(*this)._field_buff=jule::Slice<jule::U8>::alloc(static_cast<jule::Int>(static_cast<jule::I64>((*this)._field_path.len())));
		static_cast<jule::Int>(copy((*this)._field_buff,static_cast<jule::Slice<jule::U8>>((*this)._field_path.slice(0LL,static_cast<jule::Int>((*this)._field_w)))));
	}
	(*this)._field_buff[static_cast<jule::Int>((*this)._field_w)]=_7325_c;
	((*this)._field_w)++;
}



inline jule::Str _12ce95080_LazyBuff::_method_string(void) {
	if (((*this)._field_buff == nullptr)) {
		return (*this)._field_vol_and_path.slice(0LL,static_cast<jule::Int>(((*this)._field_vol_len + (*this)._field_w)));
	}
	return ((*this)._field_vol_and_path.slice(0LL,static_cast<jule::Int>((*this)._field_vol_len)) + static_cast<jule::Str>((*this)._field_buff.slice(0LL,static_cast<jule::Int>((*this)._field_w))));
}







std::ostream &operator<<(std::ostream &_Stream, const _12ce95080_LazyBuff &_Src) {
	_Stream << "LazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "vol_and_path:" << _Src._field_vol_and_path << ", ";
	_Stream << "vol_len:" << _Src._field_vol_len;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _12ce4fe70_DirEntry &_Src) {
	_Stream << "DirEntry{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "stat:" << _Src._field_stat;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::I64,jule::Int> _12ce537d0_File::_method_seek(jule::I64 _5527_offset,jule::Int _5540_origin) {
	jule::I64 _5613_pos = static_cast<jule::I64>(_11ce071f0_seek((*this)._field_handle,_5527_offset,static_cast<jule::Int>(_5540_origin)));
	return std::make_tuple(_5613_pos,0LLU);
}



inline std::tuple<jule::Int,jule::Int> _12ce537d0_File::_method_read(jule::Slice<jule::U8> _7031_buff) {
	jule::Int _7047_n{jule::Int()};
	if ((static_cast<jule::I64>(_7031_buff.len()) == 0LL)) {
		_7047_n = 0LL;
		return std::make_tuple(_7047_n,0LLU);
	}
	_7047_n=static_cast<jule::Int>(static_cast<jule::Int>(_11ce071f0_read((*this)._field_handle,(&_7031_buff[static_cast<jule::Int>(0LL)]),static_cast<jule::Uint>(static_cast<jule::I64>(_7031_buff.len())))));
	if ((_7047_n == -1LL)) {
		_7047_n=0LL;
		_7047_n = _7047_n;
		return std::make_tuple(_7047_n,_12ce3bcd0_get_last_fs_error());
	}
	_7047_n = _7047_n;
	return std::make_tuple(_7047_n,0LLU);
}



inline std::tuple<jule::Int,jule::Int> _12ce537d0_File::_method_write(jule::Slice<jule::U8> _8928_buff) {
	jule::Int _8944_n{jule::Int()};
	if ((static_cast<jule::I64>(_8928_buff.len()) == 0LL)) {
		_8944_n = 0LL;
		return std::make_tuple(_8944_n,0LLU);
	}
	_8944_n=static_cast<jule::Int>(static_cast<jule::Int>(_11ce071f0_write((*this)._field_handle,(&_8928_buff[static_cast<jule::Int>(0LL)]),static_cast<jule::Uint>(static_cast<jule::I64>(_8928_buff.len())))));
	if ((_8944_n == -1LL)) {
		_8944_n=0LL;
		_8944_n = _8944_n;
		return std::make_tuple(_8944_n,_12ce3bcd0_get_last_fs_error());
	}
	_8944_n = _8944_n;
	return std::make_tuple(_8944_n,0LLU);
}



inline jule::Int _12ce537d0_File::_method_close(void) {
	if ((static_cast<jule::Int>(_11ce071f0_close((*this)._field_handle)) == -1LL)) {
		return _12ce3bcd0_get_last_fs_error();
	}
	return 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _12ce537d0_File &_Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _12ce6e9e0_Status::_method_is_dir(void) {
	return (((*this)._field_mode & 16384LL) == 16384LL);
}



inline jule::Bool _12ce6e9e0_Status::_method_is_reg(void) {
	return (((*this)._field_mode & 32768LL) == 32768LL);
}







std::ostream &operator<<(std::ostream &_Stream, const _12ce6e9e0_Status &_Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10d916690_FloatInfo &_Src) {
	_Stream << "FloatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10d916690_DecimalSlice &_Src) {
	_Stream << "DecimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10ce72c20_LeftCheat &_Src) {
	_Stream << "LeftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _10ce72c20_Decimal::_method_set(jule::Str _22922_s) {
	jule::Bool _22932_ok{jule::Bool()};
	jule::Int _23017_i = 0LL;
	(*this)._field_neg=false;
	(*this)._field_trunc=false;
	if ((_23017_i >= static_cast<jule::I64>(_22922_s.len()))) {
		return _22932_ok;
	}
	{
		auto _match_expr{ true };
		if (!((_22922_s[static_cast<jule::Int>(_23017_i)] == '+') == _match_expr)) { goto _case_end_4561943952; }
		_case_begin_4561943952:;
		{
			(_23017_i)++;
		}
		goto _match_end_4561944896;
		_case_end_4561943952:;
		if (!((_22922_s[static_cast<jule::Int>(_23017_i)] == '-') == _match_expr)) { goto _case_end_4561944064; }
		_case_begin_4561944064:;
		{
			(*this)._field_neg=true;
			(_23017_i)++;
		}
		goto _match_end_4561944896;
		_case_end_4561944064:;
		_match_end_4561944896:;
	}
	jule::Bool _24717_sawdot = false;
	jule::Bool _24817_sawdigits = false;
	_iter_begin_4561950096:;
	if (!((_23017_i < static_cast<jule::I64>(_22922_s.len())))) { goto _iter_end_4561950096; }
	{
		{
			auto _match_expr{ true };
			if (!((_22922_s[static_cast<jule::Int>(_23017_i)] == '.') == _match_expr)) { goto _case_end_4561952512; }
			_case_begin_4561952512:;
			{
				if (_24717_sawdot) {
					return _22932_ok;
				}
				_24717_sawdot=true;
				(*this)._field_dp=(*this)._field_nd;
				goto _iter_next_4561950096;
			}
			goto _match_end_4561952208;
			_case_end_4561952512:;
			if (!((('0' <= _22922_s[static_cast<jule::Int>(_23017_i)]) && (_22922_s[static_cast<jule::Int>(_23017_i)] <= '9')) == _match_expr)) { goto _case_end_4561952624; }
			_case_begin_4561952624:;
			{
				_24817_sawdigits=true;
				if (((_22922_s[static_cast<jule::Int>(_23017_i)] == '0') && ((*this)._field_nd == 0LL))) {
					((*this)._field_dp)--;
					goto _iter_next_4561950096;
				}
				if (((*this)._field_nd < 800LL)) {
					(*this)._field_d[static_cast<jule::Int>((*this)._field_nd)]=_22922_s[static_cast<jule::Int>(_23017_i)];
					((*this)._field_nd)++;
				} else if ((_22922_s[static_cast<jule::Int>(_23017_i)] != '0')) {
					(*this)._field_trunc=true;
				}
				goto _iter_next_4561950096;
			}
			goto _match_end_4561952208;
			_case_end_4561952624:;
			_match_end_4561952208:;
		}
		goto _iter_end_4561950096;
	}
	_iter_next_4561950096:;
	(_23017_i)++;
	goto _iter_begin_4561950096;
	_iter_end_4561950096:;
	if ((!_24817_sawdigits)) {
		return _22932_ok;
	}
	if ((!_24717_sawdot)) {
		(*this)._field_dp=(*this)._field_nd;
	}
	if (((_23017_i < static_cast<jule::I64>(_22922_s.len())) && (static_cast<jule::U8>(_10ce6f0a0_lower(_22922_s[static_cast<jule::Int>(_23017_i)])) == 'e'))) {
		(_23017_i)++;
		if ((_23017_i >= static_cast<jule::I64>(_22922_s.len()))) {
			return _22932_ok;
		}
		jule::Int _29121_esign = 1LL;
		if ((_22922_s[static_cast<jule::Int>(_23017_i)] == '+')) {
			(_23017_i)++;
		} else if ((_22922_s[static_cast<jule::Int>(_23017_i)] == '-')) {
			(_23017_i)++;
			_29121_esign=-1LL;
		}
		if ((((_23017_i >= static_cast<jule::I64>(_22922_s.len())) || (_22922_s[static_cast<jule::Int>(_23017_i)] < '0')) || (_22922_s[static_cast<jule::Int>(_23017_i)] > '9'))) {
			return _22932_ok;
		}
		jule::Int _30121_e = 0LL;
		_iter_begin_4561979600:;
		if (!(((_23017_i < static_cast<jule::I64>(_22922_s.len())) && (('0' <= _22922_s[static_cast<jule::Int>(_23017_i)]) && (_22922_s[static_cast<jule::Int>(_23017_i)] <= '9'))))) { goto _iter_end_4561979600; }
		{
			if ((_30121_e < 10000LL)) {
				_30121_e=(((_30121_e * 10LL) + static_cast<jule::Int>(_22922_s[static_cast<jule::Int>(_23017_i)])) - '0');
			}
		}
		_iter_next_4561979600:;
		(_23017_i)++;
		goto _iter_begin_4561979600;
		_iter_end_4561979600:;
		(*this)._field_dp+=(_30121_e * _29121_esign);
	}
	if ((_23017_i != static_cast<jule::I64>(_22922_s.len()))) {
		return _22932_ok;
	}
	_22932_ok=true;
	return _22932_ok;
}



inline std::tuple<jule::U64,jule::Bool> _10ce72c20_Decimal::_method_float_bits(_10d916690_FloatInfo* _31836_flt) {
	jule::Bool _31863_overflow{jule::Bool()};
	jule::U64 _31855_b{jule::U64()};
	jule::Int _31917_exp = 0LL;
	jule::U64 _32017_mant = 0LLU;
	if (((*this)._field_nd == 0LL)) {
		_32017_mant=0LL;
		_31917_exp=_31836_flt->_field_bias;
		goto _julec_label_out;
	}
	if (((*this)._field_dp > 310LL)) {
		goto _julec_label_overflow;
	}
	if (((*this)._field_dp < -330LL)) {
		_32017_mant=0LL;
		_31917_exp=_31836_flt->_field_bias;
		goto _julec_label_out;
	}
	_31917_exp=0LL;
	_iter_begin_4562008368:;
	if (!(((*this)._field_dp > 0LL))) { goto _iter_end_4562008368; }
	{
		jule::Int _34521_n = 0LL;
		if (((*this)._field_dp >= static_cast<jule::I64>(_10cec8240_POWTAB.len()))) {
			_34521_n=27LL;
		} else {
			_34521_n=_10cec8240_POWTAB[static_cast<jule::Int>((*this)._field_dp)];
		}
		(*this)._method_shift(static_cast<jule::Int>((-_34521_n)));
		_31917_exp+=_34521_n;
	}
	_iter_next_4562008368:;
	goto _iter_begin_4562008368;
	_iter_end_4562008368:;
	_iter_begin_4562009072:;
	if (!((((*this)._field_dp < 0LL) || (((*this)._field_dp == 0LL) && ((*this)._field_d[static_cast<jule::Int>(0LL)] < '5'))))) { goto _iter_end_4562009072; }
	{
		jule::Int _35521_n = 0LL;
		if ((static_cast<jule::Int>((-(*this)._field_dp)) >= static_cast<jule::I64>(_10cec8240_POWTAB.len()))) {
			_35521_n=27LL;
		} else {
			_35521_n=_10cec8240_POWTAB[static_cast<jule::Int>(static_cast<jule::Int>((-(*this)._field_dp)))];
		}
		(*this)._method_shift(_35521_n);
		_31917_exp-=_35521_n;
	}
	_iter_next_4562009072:;
	goto _iter_begin_4562009072;
	_iter_end_4562009072:;
	(_31917_exp)--;
	if ((_31917_exp < (_31836_flt->_field_bias + 1LL))) {
		jule::Int _37217_n = ((_31836_flt->_field_bias + 1LL) - _31917_exp);
		(*this)._method_shift(static_cast<jule::Int>((-_37217_n)));
		_31917_exp+=_37217_n;
	}
	if (((_31917_exp - _31836_flt->_field_bias) >= static_cast<jule::Int>((static_cast<jule::Int>((1LL << _31836_flt->_field_expbits)) - 1LL)))) {
		goto _julec_label_overflow;
	}
	(*this)._method_shift(static_cast<jule::Int>(static_cast<jule::Uint>((1LL + _31836_flt->_field_mantbits))));
	_32017_mant=static_cast<jule::U64>((*this)._method_rounded_integer());
	if ((_32017_mant == static_cast<jule::Int>((2LL << _31836_flt->_field_mantbits)))) {
		_32017_mant>>=1LL;
		(_31917_exp)++;
		if (((_31917_exp - _31836_flt->_field_bias) >= static_cast<jule::Int>((static_cast<jule::Int>((1LL << _31836_flt->_field_expbits)) - 1LL)))) {
			goto _julec_label_overflow;
		}
	}
	if (((_32017_mant & static_cast<jule::Int>((1LL << _31836_flt->_field_mantbits))) == 0LL)) {
		_31917_exp=_31836_flt->_field_bias;
	}
	goto _julec_label_out;
	_julec_label_overflow:;
	_32017_mant=0LL;
	_31917_exp=static_cast<jule::Int>((static_cast<jule::Int>((static_cast<jule::Int>((1LL << _31836_flt->_field_expbits)) - 1LL)) + _31836_flt->_field_bias));
	_31863_overflow=true;
	_julec_label_out:;
	jule::U64 _40817_bits = (_32017_mant & static_cast<jule::Uint>((static_cast<jule::Uint>((static_cast<jule::U64>(1LLU) << _31836_flt->_field_mantbits)) - 1LL)));
	_40817_bits|=static_cast<jule::U64>((static_cast<jule::U64>(((_31917_exp - _31836_flt->_field_bias) & static_cast<jule::Int>((static_cast<jule::Int>((1LL << _31836_flt->_field_expbits)) - 1LL)))) << _31836_flt->_field_mantbits));
	if ((*this)._field_neg) {
		_40817_bits|=static_cast<jule::Int>((static_cast<jule::Int>((1LL << _31836_flt->_field_mantbits)) << _31836_flt->_field_expbits));
	}
	_31855_b = _40817_bits;
	_31863_overflow = _31863_overflow;
	return std::make_tuple(_31855_b,_31863_overflow);
}



inline void _10ce72c20_Decimal::_method_assign(jule::U64 _15229_v) {
	jule::Array<jule::U8,24> _15317_buf = jule::Array<jule::U8,24>({});
	jule::Int _15617_n = 0LL;
	_iter_begin_4562064656:;
	if (!((_15229_v > 0LL))) { goto _iter_end_4562064656; }
	{
		jule::U64 _15817_v1 = jule::div(_15229_v,10LL);
		_15229_v-=static_cast<jule::U64>((10LL * _15817_v1));
		_15317_buf[static_cast<jule::Int>(_15617_n)]=static_cast<jule::U8>((_15229_v + '0'));
		(_15617_n)++;
		_15229_v=_15817_v1;
	}
	_iter_next_4562064656:;
	goto _iter_begin_4562064656;
	_iter_end_4562064656:;
	(*this)._field_nd=0LL;
	(_15617_n)--;
	_iter_begin_4562063216:;
	if (!((_15617_n >= 0LL))) { goto _iter_end_4562063216; }
	{
		(*this)._field_d[static_cast<jule::Int>((*this)._field_nd)]=_15317_buf[static_cast<jule::Int>(_15617_n)];
		((*this)._field_nd)++;
	}
	_iter_next_4562063216:;
	(_15617_n)--;
	goto _iter_begin_4562063216;
	_iter_end_4562063216:;
	(*this)._field_dp=(*this)._field_nd;
	{
		_10ce72c20_trim((&(*this)));
	}
}



inline void _10ce72c20_Decimal::_method_shift(jule::Int _17728_k) {
	{
		auto _match_expr{ true };
		if (!(((*this)._field_nd == 0LL) == _match_expr)) { goto _case_end_4562078944; }
		goto _match_end_4562078624;
		_case_end_4562078944:;
		if (!((_17728_k > 0LL) == _match_expr)) { goto _case_end_4562079056; }
		_case_begin_4562079056:;
		{
			_iter_begin_4562080864:;
			if (!((_17728_k > 60LL))) { goto _iter_end_4562080864; }
			{
				{
					_10ce72c20_left_shift((&(*this)),60LLU);
				}
				_17728_k-=60LL;
			}
			_iter_next_4562080864:;
			goto _iter_begin_4562080864;
			_iter_end_4562080864:;
			{
				_10ce72c20_left_shift((&(*this)),static_cast<jule::Uint>(_17728_k));
			}
		}
		goto _match_end_4562078624;
		_case_end_4562079056:;
		if (!((_17728_k < 0LL) == _match_expr)) { goto _case_end_4562079168; }
		_case_begin_4562079168:;
		{
			_iter_begin_4562085680:;
			if (!((_17728_k < -60LL))) { goto _iter_end_4562085680; }
			{
				{
					_10ce72c20_right_shift((&(*this)),60LLU);
				}
				_17728_k+=60LL;
			}
			_iter_next_4562085680:;
			goto _iter_begin_4562085680;
			_iter_end_4562085680:;
			{
				_10ce72c20_right_shift((&(*this)),static_cast<jule::Uint>(static_cast<jule::Int>((-_17728_k))));
			}
		}
		goto _match_end_4562078624;
		_case_end_4562079168:;
		_match_end_4562078624:;
	}
}



inline void _10ce72c20_Decimal::_method_round_down(jule::Int _19729_nd) {
	if (((_19729_nd < 0LL) || (_19729_nd >= (*this)._field_nd))) {
		return;
	}
	(*this)._field_nd=_19729_nd;
	{
		_10ce72c20_trim((&(*this)));
	}
}



inline void _10ce72c20_Decimal::_method_round_up(jule::Int _20627_nd) {
	if (((_20627_nd < 0LL) || (_20627_nd >= (*this)._field_nd))) {
		return;
	}
	jule::Int _21217_i = (_20627_nd - 1LL);
	_iter_begin_4562097840:;
	if (!((_21217_i >= 0LL))) { goto _iter_end_4562097840; }
	{
		jule::U8 _21417_c = (*this)._field_d[static_cast<jule::Int>(_21217_i)];
		if ((_21417_c < '9')) {
			((*this)._field_d[static_cast<jule::Int>(_21217_i)])++;
			(*this)._field_nd=(_21217_i + 1LL);
			return;
		}
	}
	_iter_next_4562097840:;
	(_21217_i)--;
	goto _iter_begin_4562097840;
	_iter_end_4562097840:;
	(*this)._field_d[static_cast<jule::Int>(0LL)]='1';
	(*this)._field_nd=1LL;
	((*this)._field_dp)++;
}



inline void _10ce72c20_Decimal::_method_round(jule::Int _23324_nd) {
	if (((_23324_nd < 0LL) || (_23324_nd >= (*this)._field_nd))) {
		return;
	}
	if (_10ce72c20_should_round_up((&(*this)),_23324_nd)) {
		(*this)._method_round_up(_23324_nd);
	} else {
		(*this)._method_round_down(_23324_nd);
	}
}



inline jule::U64 _10ce72c20_Decimal::_method_rounded_integer(void) {
	if (((*this)._field_dp > 20LL)) {
		return jule::MAX_U64;
	}
	jule::Int _25017_i = 0LL;
	jule::U64 _25117_n = 0LLU;
	_iter_begin_4562118544:;
	if (!(((_25017_i < (*this)._field_dp) && (_25017_i < (*this)._field_nd)))) { goto _iter_end_4562118544; }
	{
		_25117_n=((_25117_n * 10LL) + static_cast<jule::U64>(((*this)._field_d[static_cast<jule::Int>(_25017_i)] - '0')));
	}
	_iter_next_4562118544:;
	(_25017_i)++;
	goto _iter_begin_4562118544;
	_iter_end_4562118544:;
	_iter_begin_4562119936:;
	if (!((_25017_i < (*this)._field_dp))) { goto _iter_end_4562119936; }
	{
		_25117_n*=10LL;
	}
	_iter_next_4562119936:;
	(_25017_i)++;
	goto _iter_begin_4562119936;
	_iter_end_4562119936:;
	if (_10ce72c20_should_round_up((&(*this)),(*this)._field_dp)) {
		(_25117_n)++;
	}
	return _25117_n;
}







std::ostream &operator<<(std::ostream &_Stream, const _10ce72c20_Decimal &_Src) {
	_Stream << "Decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _13cfd2d20_Log::_method_flat(void) {
	return (*this)._field_text;
}



inline jule::Str _13cfd2d20_Log::_method_error(void) {
	jule::Str _2817_log = jule::Str("", 0);
	_2817_log+=(*this)._field_path;
	_2817_log+=jule::Str(":", 1);
	_2817_log+=_10daf8c40_itoa((*this)._field_row);
	_2817_log+=jule::Str(":", 1);
	_2817_log+=_10daf8c40_itoa((*this)._field_column);
	_2817_log+=jule::Str(" ", 1);
	_2817_log+=(*this)._field_text;
	return _2817_log;
}



inline jule::Str _13cfd2d20_Log::_method_to_str(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(0LLU == _match_expr)) { goto _case_end_4562450000; }
		_case_begin_4562450000:;
		{
			return (*this)._method_flat();
		}
		goto _match_end_4562448400;
		_case_end_4562450000:;
		if (!(1LLU == _match_expr)) { goto _case_end_4562449152; }
		_case_begin_4562449152:;
		{
			return (*this)._method_error();
		}
		goto _match_end_4562448400;
		_case_end_4562449152:;
		_case_begin_4562436592:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4562448400;
		_case_end_4562436592:;
		_match_end_4562448400:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _13cfd2d20_Log &_Src) {
	_Stream << "Log{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10dba43b0_accept_range &_Src) {
	_Stream << "accept_range{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline jule::Int _11ce22a00_Token::_method_prec(void) {
	if (((*this)._field_id != 7LLU)) {
		return -1LL;
	}
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(jule::Str("*", 1) == _match_expr || jule::Str("%", 1) == _match_expr || jule::Str("/", 1) == _match_expr || jule::Str(">>", 2) == _match_expr || jule::Str("<<", 2) == _match_expr || jule::Str("&", 1) == _match_expr)) { goto _case_end_4697942672; }
		_case_begin_4697942672:;
		{
			return 5LL;
		}
		goto _match_end_4697941696;
		_case_end_4697942672:;
		if (!(jule::Str("+", 1) == _match_expr || jule::Str("-", 1) == _match_expr || jule::Str("|", 1) == _match_expr || jule::Str("^", 1) == _match_expr)) { goto _case_end_4697942784; }
		_case_begin_4697942784:;
		{
			return 4LL;
		}
		goto _match_end_4697941696;
		_case_end_4697942784:;
		if (!(jule::Str("==", 2) == _match_expr || jule::Str("!=", 2) == _match_expr || jule::Str("=", 1) == _match_expr || jule::Str("<", 1) == _match_expr || jule::Str("<=", 2) == _match_expr || jule::Str(">", 1) == _match_expr || jule::Str(">=", 2) == _match_expr)) { goto _case_end_4697942896; }
		_case_begin_4697942896:;
		{
			return 3LL;
		}
		goto _match_end_4697941696;
		_case_end_4697942896:;
		if (!(jule::Str("&&", 2) == _match_expr)) { goto _case_end_4697943232; }
		_case_begin_4697943232:;
		{
			return 2LL;
		}
		goto _match_end_4697941696;
		_case_end_4697943232:;
		if (!(jule::Str("||", 2) == _match_expr)) { goto _case_end_4697943344; }
		_case_begin_4697943344:;
		{
			return 1LL;
		}
		goto _match_end_4697941696;
		_case_end_4697943344:;
		_case_begin_4697941808:;
		{
			return -1LL;
		}
		goto _match_end_4697941696;
		_case_end_4697941808:;
		_match_end_4697941696:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce22a00_Token &_Src) {
	_Stream << "Token{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11cec0de0_KindPair &_Src) {
	_Stream << "KindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_CommentGroup &_Src) {
	_Stream << "CommentGroup{";
	_Stream << "comments:" << _Src._field_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_NamespaceTypeDecl &_Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "idents:" << _Src._field_idents << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_RefTypeDecl &_Src) {
	_Stream << "RefTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_SlcTypeDecl &_Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_TupleTypeDecl &_Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _11ce1fd50_PtrTypeDecl::_method_is_unsafe(void) {
	return (!jule::real((*this)._field_elem));
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_PtrTypeDecl &_Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _11ce1fd50_ArrTypeDecl::_method_auto_sized(void) {
	return (!jule::real((*this)._field_size));
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_ArrTypeDecl &_Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_MapTypeDecl &_Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_RetTypeDecl &_Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_TupleExpr &_Src) {
	_Stream << "TupleExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _11ce1fd50_LitExpr::_method_is_nil(void) {
	return ((*this)._field_value == jule::Str("nil", 3));
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_LitExpr &_Src) {
	_Stream << "LitExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_UnsafeExpr &_Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _11ce1fd50_IdentExpr::_method_is_self(void) {
	return ((*this)._field_ident == jule::Str("self", 4));
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_IdentExpr &_Src) {
	_Stream << "IdentExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_UnaryExpr &_Src) {
	_Stream << "UnaryExpr{";
	_Stream << "op:" << _Src._field_op << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_VariadicExpr &_Src) {
	_Stream << "VariadicExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_CastExpr &_Src) {
	_Stream << "CastExpr{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_NsSelectionExpr &_Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "ns:" << _Src._field_ns << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_SubIdentExpr &_Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "is_self:" << _Src._field_is_self << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_BinopExpr &_Src) {
	_Stream << "BinopExpr{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _11ce1fd50_FieldExprPair::_method_is_targeted(void) {
	return ((*this)._field_field._field_id != 0LLU);
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_FieldExprPair &_Src) {
	_Stream << "FieldExprPair{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_StructLit &_Src) {
	_Stream << "StructLit{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _11ce1fd50_BraceLit::_method_is_empty(void) {
	return (static_cast<jule::I64>((*this)._field_exprs.len()) == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_BraceLit &_Src) {
	_Stream << "BraceLit{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_KeyValPair &_Src) {
	_Stream << "KeyValPair{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val << ", ";
	_Stream << "colon:" << _Src._field_colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _11ce1fd50_SliceExpr::_method_is_empty(void) {
	return (static_cast<jule::I64>((*this)._field_elems.len()) == 0LL);
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_SliceExpr &_Src) {
	_Stream << "SliceExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_IndexingExpr &_Src) {
	_Stream << "IndexingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_SlicingExpr &_Src) {
	_Stream << "SlicingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "start:" << _Src._field_start << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_LabelSt &_Src) {
	_Stream << "LabelSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_FallSt &_Src) {
	_Stream << "FallSt{";
	_Stream << "token:" << _Src._field_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_AssignSt &_Src) {
	_Stream << "AssignSt{";
	_Stream << "declarative:" << _Src._field_declarative << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_ScopeTree &_Src) {
	_Stream << "ScopeTree{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_RetSt &_Src) {
	_Stream << "RetSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _11ce1fd50_Iter::_method_is_inf(void) {
	return ((*this)._field_kind == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_Iter &_Src) {
	_Stream << "Iter{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _11ce1fd50_WhileKind::_method_is_while_next(void) {
	return ((*this)._field_next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_WhileKind &_Src) {
	_Stream << "WhileKind{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "next_token:" << _Src._field_next_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_RangeKind &_Src) {
	_Stream << "RangeKind{";
	_Stream << "in_token:" << _Src._field_in_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_Conditional &_Src) {
	_Stream << "Conditional{";
	_Stream << "head:" << _Src._field_head << ", ";
	_Stream << "tail:" << _Src._field_tail << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_MatchCase &_Src) {
	_Stream << "MatchCase{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e3d3fd0_FileInfo &_Src) {
	_Stream << "FileInfo{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e3d3e70_Stmt &_Src) {
	_Stream << "Stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _10e3d3e70_ScopeParser::_method_stop(void) {
	(*this)._field_pos=-1LL;
}



inline jule::Bool _10e3d3e70_ScopeParser::_method_stopped(void) {
	return ((*this)._field_pos == -1LL);
}



inline jule::Bool _10e3d3e70_ScopeParser::_method_finished(void) {
	return ((*this)._field_pos >= static_cast<jule::I64>((*this)._field_stms.len()));
}



inline jule::Bool _10e3d3e70_ScopeParser::_method_is_last_st(void) {
	return (((*this)._field_pos + 1LL) >= static_cast<jule::I64>((*this)._field_stms.len()));
}



inline void _10e3d3e70_ScopeParser::_method_push_err(_11ce22a00_Token _15127_token,jule::Str _15141_key) {
	(*this)._field_p->_method_push_err(_15127_token,_15141_key,jule::Slice<jule::Any>({}));
}



inline void _10e3d3e70_ScopeParser::_method_insert_as_next(jule::Slice<_11ce22a00_Token> _15337_tokens) {
	(*this)._field_stms=append((*this)._field_stms.slice(0LL,static_cast<jule::Int>(((*this)._field_pos + 1LL))),(*this)._field_stms.slice(static_cast<jule::Int>((*this)._field_pos)));
	(*this)._field_stms[static_cast<jule::Int>(((*this)._field_pos + 1LL))]=jule::new_struct<_10e3d3e70_Stmt>(new( std::nothrow ) _10e3d3e70_Stmt(_15337_tokens,jule::Bool()));
}



inline jule::Ref<_10e3d3e70_Stmt> _10e3d3e70_ScopeParser::_method_next(void) {
	((*this)._field_pos)++;
	return (*this)._field_stms[static_cast<jule::Int>((*this)._field_pos)];
}



inline jule::Ref<_11ce1fd50_ScopeTree> _10e3d3e70_ScopeParser::_method_build_scope(jule::Slice<_11ce22a00_Token> _16334_tokens) {
	jule::Ref<_11ce1fd50_ScopeTree> _16417_s = _10e3d3e70_new_scope();
	_16417_s->_field_parent=(*this)._field_s;
	_10e3d3e70_ScopeParser _16617_ssp = _10e3d3e70_ScopeParser((*this)._field_p,jule::Ref<_11ce1fd50_ScopeTree>(),jule::Slice<jule::Ref<_10e3d3e70_Stmt>>(),jule::Int());
	_16617_ssp._method_build(_16334_tokens,_16417_s);
	return _16417_s;
}



inline jule::Any _10e3d3e70_ScopeParser::_method_build_var_st(jule::Slice<_11ce22a00_Token> _17335_tokens) {
	jule::Ref<_11ce1fd50_VarDecl> _17417_v = (*this)._field_p->_method_build_var(_17335_tokens);
	_17417_v->_field_scope=(*this)._field_s;
	return _17417_v;
}



inline jule::Any _10e3d3e70_ScopeParser::_method_build_ret_st(jule::Slice<_11ce22a00_Token> _17935_tokens) {
	jule::Ref<_11ce1fd50_RetSt> _18017_st = jule::new_struct<_11ce1fd50_RetSt>(new( std::nothrow ) _11ce1fd50_RetSt(_17935_tokens[static_cast<jule::Int>(0LL)],jule::Ref<_11ce1fd50_Expr>()));
	if ((static_cast<jule::I64>(_17935_tokens.len()) > 1LL)) {
		_17935_tokens=_17935_tokens.slice(static_cast<jule::Int>(1LL));
		_18017_st->_field_expr=(*this)._field_p->_method_build_expr(_17935_tokens);
	}
	return _18017_st;
}



inline jule::Any _10e3d3e70_ScopeParser::_method_build_while_next_iter(jule::Ref<_10e3d3e70_Stmt> _19044_s) {
	jule::Ref<_11ce1fd50_Iter> _19117_it = jule::new_struct<_11ce1fd50_Iter>(new( std::nothrow ) _11ce1fd50_Iter(_19044_s->_field_tokens[static_cast<jule::Int>(0LL)],jule::Any(),jule::Ref<_11ce1fd50_ScopeTree>()));
	jule::Slice<_11ce22a00_Token> _19417_tokens = _19044_s->_field_tokens.slice(static_cast<jule::Int>(1LL));
	jule::Ref<_11ce1fd50_WhileKind> _19517_kind = jule::new_struct<_11ce1fd50_WhileKind>(new( std::nothrow ) _11ce1fd50_WhileKind());
	if ((static_cast<jule::I64>(_19417_tokens.len()) > 0LL)) {
		_19517_kind->_field_expr=(*this)._field_p->_method_build_expr(_19417_tokens);
	}
	if ((*this)._method_is_last_st()) {
		(*this)._method_push_err(_19117_it->_field_token,jule::Str("invalid_syntax", 14));
		return nullptr;
	}
	_19417_tokens=(*this)._method_next()->_field_tokens;
	jule::Slice<_11ce22a00_Token> _20717_st_tokens = _10e3df5b0_get_block_expr(_19417_tokens);
	if ((static_cast<jule::I64>(_20717_st_tokens.len()) > 0LL)) {
		jule::Ref<_10e3d3e70_Stmt> _20921_s = jule::new_struct<_10e3d3e70_Stmt>(new( std::nothrow ) _10e3d3e70_Stmt(_20717_st_tokens,_19044_s->_field_terminated));
		_19517_kind->_field_next_token=_20717_st_tokens[static_cast<jule::Int>(0LL)];
		_19517_kind->_field_next=(*this)._method_build_st(_20921_s);
	}
	jule::I64 _21717_i = static_cast<jule::I64>(_20717_st_tokens.len());
	jule::Slice<_11ce22a00_Token> _21817_block_tokens = _10e5e45f0_range((&_21717_i),jule::Str("{", 1),jule::Str("}", 1),_19417_tokens);
	if ((_21817_block_tokens == nullptr)) {
		(*this)._method_stop();
		(*this)._method_push_err(_19117_it->_field_token,jule::Str("body_not_exist", 14));
		return nullptr;
	}
	if ((_21717_i < static_cast<jule::I64>(_19417_tokens.len()))) {
		(*this)._method_push_err(_19417_tokens[static_cast<jule::Int>(_21717_i)],jule::Str("invalid_syntax", 14));
	}
	_19117_it->_field_scope=(*this)._method_build_scope(_21817_block_tokens);
	_19117_it->_field_kind=jule::Any(_19517_kind);
	return _19117_it;
}



inline jule::Ref<_11ce1fd50_WhileKind> _10e3d3e70_ScopeParser::_method_build_while_iter_kind(jule::Slice<_11ce22a00_Token> _23444_tokens) {
	return jule::new_struct<_11ce1fd50_WhileKind>(new( std::nothrow ) _11ce1fd50_WhileKind((*this)._field_p->_method_build_expr(_23444_tokens),jule::Any(),_11ce22a00_Token()));
}



inline jule::Slice<jule::Slice<_11ce22a00_Token>> _10e3d3e70_ScopeParser::_method_get_range_kind_keys_tokens(jule::Slice<_11ce22a00_Token> _24049_toks) {
	jule::Slice<jule::Slice<_11ce22a00_Token>> _24118_vars{};
	jule::Slice<_13cfd2d20_Log> _24124_errs{};
	std::tie(_24118_vars,_24124_errs) = _10e5e45f0_parts(_24049_toks,8LLU,true);
	(*this)._field_p->_field_errors=append((*this)._field_p->_field_errors,_24124_errs);
	return _24118_vars;
}



inline jule::Ref<_11ce1fd50_VarDecl> _10e3d3e70_ScopeParser::_method_build_range_kind_key(jule::Slice<_11ce22a00_Token> _24643_tokens) {
	if ((static_cast<jule::I64>(_24643_tokens.len()) == 0LL)) {
		return jule::new_ref<_11ce1fd50_VarDecl>();
	}
	jule::Ref<_11ce1fd50_VarDecl> _25017_key = jule::new_struct<_11ce1fd50_VarDecl>(new( std::nothrow ) _11ce1fd50_VarDecl(jule::Ref<_11ce1fd50_ScopeTree>(),_24643_tokens[static_cast<jule::Int>(0LL)],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_11ce1fd50_CommentGroup>(),jule::Ref<_11ce1fd50_TypeDecl>(),jule::Ref<_11ce1fd50_Expr>()));
	if ((_25017_key->_field_token._field_id == 36LLU)) {
		_25017_key->_field_mutable=true;
		if ((static_cast<jule::I64>(_24643_tokens.len()) == 1LL)) {
			(*this)._method_push_err(_25017_key->_field_token,jule::Str("invalid_syntax", 14));
		}
		_25017_key->_field_token=_24643_tokens[static_cast<jule::Int>(1LL)];
	} else if ((static_cast<jule::I64>(_24643_tokens.len()) > 1LL)) {
		(*this)._method_push_err(_24643_tokens[static_cast<jule::Int>(1LL)],jule::Str("invalid_syntax", 14));
	}
	if ((_25017_key->_field_token._field_id != 2LLU)) {
		(*this)._method_push_err(_25017_key->_field_token,jule::Str("invalid_syntax", 14));
		return jule::new_ref<_11ce1fd50_VarDecl>();
	}
	_25017_key->_field_ident=_25017_key->_field_token._field_kind;
	return _25017_key;
}



inline jule::Slice<jule::Ref<_11ce1fd50_VarDecl>> _10e3d3e70_ScopeParser::_method_build_range_kind_keys(jule::Slice<jule::Slice<_11ce22a00_Token>> _27044_parts) {
	jule::Slice<jule::Ref<_11ce1fd50_VarDecl>> _27117_keys = nullptr;
	{
		auto &__julec_range_expr = _27044_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Slice<_11ce22a00_Token> _10e3d3e70_tokens{jule::Slice<_11ce22a00_Token>()};_10e3d3e70_tokens = *__julec_range_begin;
			_iter_begin_4700092128:;
			{
				_27117_keys=append(_27117_keys,jule::Slice<jule::Ref<_11ce1fd50_VarDecl>>({(*this)._method_build_range_kind_key(_10e3d3e70_tokens)}));
			}
			_iter_next_4700092128:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e3d3e70_tokens = *__julec_range_begin; goto _iter_begin_4700092128; }
			_iter_end_4700092128:;
		}
	}
	return _27117_keys;
}



inline void _10e3d3e70_ScopeParser::_method_setup_range_kind_keys_plain(jule::Ref<_11ce1fd50_RangeKind> _27850_rng,jule::Slice<_11ce22a00_Token> _27871_tokens) {
	jule::Slice<jule::Slice<_11ce22a00_Token>> _27917_key_tokens = (*this)._method_get_range_kind_keys_tokens(_27871_tokens);
	if ((static_cast<jule::I64>(_27917_key_tokens.len()) == 0LL)) {
		return;
	}
	if ((static_cast<jule::I64>(_27917_key_tokens.len()) > 2LL)) {
		(*this)._method_push_err(_27850_rng->_field_in_token,jule::Str("much_range_vars", 15));
	}
	jule::Slice<jule::Ref<_11ce1fd50_VarDecl>> _28617_keys = (*this)._method_build_range_kind_keys(_27917_key_tokens);
	_27850_rng->_field_key_a=_28617_keys[static_cast<jule::Int>(0LL)];
	if ((static_cast<jule::I64>(_28617_keys.len()) > 1LL)) {
		_27850_rng->_field_key_b=_28617_keys[static_cast<jule::Int>(1LL)];
	}
}



inline void _10e3d3e70_ScopeParser::_method_setup_range_kind_keys_explicit(jule::Ref<_11ce1fd50_RangeKind> _29353_rng,jule::Slice<_11ce22a00_Token> _29374_tokens) {
	jule::Int _29417_i = 0LL;
	jule::Slice<_11ce22a00_Token> _29517_rang = _10e5e45f0_range((&_29417_i),jule::Str("(", 1),jule::Str(")", 1),_29374_tokens);
	if ((_29417_i < static_cast<jule::I64>(_29374_tokens.len()))) {
		(*this)._method_push_err(_29353_rng->_field_in_token,jule::Str("invalid_syntax", 14));
	}
	(*this)._method_setup_range_kind_keys_plain(_29353_rng,_29517_rang);
}



inline void _10e3d3e70_ScopeParser::_method_setup_range_kind_keys(jule::Ref<_11ce1fd50_RangeKind> _30244_rng,jule::Slice<_11ce22a00_Token> _30265_tokens) {
	if ((_30265_tokens[static_cast<jule::Int>(0LL)]._field_id == 3LLU)) {
		if ((_30265_tokens[static_cast<jule::Int>(0LL)]._field_kind != jule::Str("(", 1))) {
			(*this)._method_push_err(_30265_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14));
			return;
		}
		(*this)._method_setup_range_kind_keys_explicit(_30244_rng,_30265_tokens);
		return;
	}
	(*this)._method_setup_range_kind_keys_plain(_30244_rng,_30265_tokens);
}



inline jule::Ref<_11ce1fd50_RangeKind> _10e3d3e70_ScopeParser::_method_build_range_iter_kind(jule::Slice<_11ce22a00_Token> _31444_var_tokens,jule::Slice<_11ce22a00_Token> _31469_expr_tokens,_11ce22a00_Token _31491_in_token) {
	jule::Ref<_11ce1fd50_RangeKind> _31517_rng = jule::new_struct<_11ce1fd50_RangeKind>(new( std::nothrow ) _11ce1fd50_RangeKind(_31491_in_token,jule::Ref<_11ce1fd50_Expr>(),jule::Ref<_11ce1fd50_VarDecl>(),jule::Ref<_11ce1fd50_VarDecl>()));
	if ((static_cast<jule::I64>(_31469_expr_tokens.len()) == 0LL)) {
		(*this)._method_push_err(_31517_rng->_field_in_token,jule::Str("missing_expr", 12));
		return _31517_rng;
	}
	_31517_rng->_field_expr=(*this)._field_p->_method_build_expr(_31469_expr_tokens);
	if ((static_cast<jule::I64>(_31444_var_tokens.len()) > 0LL)) {
		(*this)._method_setup_range_kind_keys(_31517_rng,_31444_var_tokens);
	}
	return _31517_rng;
}



inline jule::Any _10e3d3e70_ScopeParser::_method_build_common_iter_kind(jule::Slice<_11ce22a00_Token> _32945_tokens,_11ce22a00_Token _32962_err_tok) {
	jule::Int _33017_brace_n = 0LL;
	{
		auto &__julec_range_expr = _32945_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e3d3e70_i{jule::Int()};_10e3d3e70_i = 0;
			_11ce22a00_Token _10e3d3e70_tok{_11ce22a00_Token()};_10e3d3e70_tok = *__julec_range_begin;
			_iter_begin_4700153376:;
			{
				if ((_10e3d3e70_tok._field_id == 3LLU)) {
					{
						auto _match_expr{ _10e3d3e70_tok._field_kind };
						if (!(jule::Str("{", 1) == _match_expr || jule::Str("[", 1) == _match_expr || jule::Str("(", 1) == _match_expr)) { goto _case_end_4700159120; }
						_case_begin_4700159120:;
						{
							(_33017_brace_n)++;
							goto _iter_next_4700153376;
						}
						goto _match_end_4700156736;
						_case_end_4700159120:;
						_case_begin_4700157616:;
						{
							(_33017_brace_n)--;
						}
						goto _match_end_4700156736;
						_case_end_4700157616:;
						_match_end_4700156736:;
					}
				}
				if ((_33017_brace_n != 0LL)) {
					goto _iter_next_4700153376;
				}
				{
					auto _match_expr{ _10e3d3e70_tok._field_id };
					if (!(15LLU == _match_expr)) { goto _case_end_4700160800; }
					_case_begin_4700160800:;
					{
						jule::Slice<_11ce22a00_Token> _34925_decl_tokens = _32945_tokens.slice(0LL,static_cast<jule::Int>(_10e3d3e70_i));
						jule::Slice<_11ce22a00_Token> _35025_expr_tokens = _32945_tokens.slice(static_cast<jule::Int>((_10e3d3e70_i + 1LL)));
						return (*this)._method_build_range_iter_kind(_34925_decl_tokens,_35025_expr_tokens,_10e3d3e70_tok);
					}
					goto _match_end_4700160688;
					_case_end_4700160800:;
					_match_end_4700160688:;
				}
			}
			_iter_next_4700153376:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e3d3e70_i; _10e3d3e70_tok = *__julec_range_begin; goto _iter_begin_4700153376; }
			_iter_end_4700153376:;
		}
	}
	return (*this)._method_build_while_iter_kind(_32945_tokens);
}



inline jule::Any _10e3d3e70_ScopeParser::_method_build_common_iter(jule::Slice<_11ce22a00_Token> _35740_tokens) {
	jule::Ref<_11ce1fd50_Iter> _35817_it = jule::new_struct<_11ce1fd50_Iter>(new( std::nothrow ) _11ce1fd50_Iter(_35740_tokens[static_cast<jule::Int>(0LL)],jule::Any(),jule::Ref<_11ce1fd50_ScopeTree>()));
	_35740_tokens=_35740_tokens.slice(static_cast<jule::Int>(1LL));
	if ((static_cast<jule::I64>(_35740_tokens.len()) == 0LL)) {
		(*this)._method_stop();
		(*this)._method_push_err(_35817_it->_field_token,jule::Str("body_not_exist", 14));
		return nullptr;
	}
	jule::Slice<_11ce22a00_Token> _36717_expr_tokens = _10e3df5b0_get_block_expr(_35740_tokens);
	if ((static_cast<jule::I64>(_36717_expr_tokens.len()) > 0LL)) {
		_35817_it->_field_kind=(*this)._method_build_common_iter_kind(_36717_expr_tokens,_35817_it->_field_token);
	}
	jule::I64 _37117_i = static_cast<jule::I64>(_36717_expr_tokens.len());
	jule::Slice<_11ce22a00_Token> _37217_scope_tokens = _10e5e45f0_range((&_37117_i),jule::Str("{", 1),jule::Str("}", 1),_35740_tokens);
	if ((_37217_scope_tokens == nullptr)) {
		(*this)._method_stop();
		(*this)._method_push_err(_35817_it->_field_token,jule::Str("body_not_exist", 14));
		return nullptr;
	}
	if ((_37117_i < static_cast<jule::I64>(_35740_tokens.len()))) {
		(*this)._method_push_err(_35740_tokens[static_cast<jule::Int>(_37117_i)],jule::Str("invalid_syntax", 14));
	}
	_35817_it->_field_scope=(*this)._method_build_scope(_37217_scope_tokens);
	return _35817_it;
}



inline jule::Any _10e3d3e70_ScopeParser::_method_buid_iter_st(jule::Ref<_10e3d3e70_Stmt> _38535_st) {
	if (_38535_st->_field_terminated) {
		return (*this)._method_build_while_next_iter(_38535_st);
	}
	return (*this)._method_build_common_iter(_38535_st->_field_tokens);
}



inline jule::Any _10e3d3e70_ScopeParser::_method_build_break_st(jule::Slice<_11ce22a00_Token> _39237_tokens) {
	jule::Ref<_11ce1fd50_BreakSt> _39317_brk = jule::new_struct<_11ce1fd50_BreakSt>(new( std::nothrow ) _11ce1fd50_BreakSt(_39237_tokens[static_cast<jule::Int>(0LL)],_11ce22a00_Token()));
	if ((static_cast<jule::I64>(_39237_tokens.len()) > 1LL)) {
		if ((_39237_tokens[static_cast<jule::Int>(1LL)]._field_id != 2LLU)) {
			(*this)._method_push_err(_39237_tokens[static_cast<jule::Int>(1LL)],jule::Str("invalid_syntax", 14));
		} else {
			_39317_brk->_field_label=_39237_tokens[static_cast<jule::Int>(1LL)];
			if ((static_cast<jule::I64>(_39237_tokens.len()) > 2LL)) {
				(*this)._method_push_err(_39237_tokens[static_cast<jule::Int>(1LL)],jule::Str("invalid_syntax", 14));
			}
		}
	}
	return _39317_brk;
}



inline jule::Any _10e3d3e70_ScopeParser::_method_build_cont_st(jule::Slice<_11ce22a00_Token> _40936_tokens) {
	jule::Ref<_11ce1fd50_ContSt> _41017_cont = jule::new_struct<_11ce1fd50_ContSt>(new( std::nothrow ) _11ce1fd50_ContSt(_40936_tokens[static_cast<jule::Int>(0LL)],_11ce22a00_Token()));
	if ((static_cast<jule::I64>(_40936_tokens.len()) > 1LL)) {
		if ((_40936_tokens[static_cast<jule::Int>(1LL)]._field_id != 2LLU)) {
			(*this)._method_push_err(_40936_tokens[static_cast<jule::Int>(1LL)],jule::Str("invalid_syntax", 14));
		} else {
			_41017_cont->_field_label=_40936_tokens[static_cast<jule::Int>(1LL)];
			if ((static_cast<jule::I64>(_40936_tokens.len()) > 2LL)) {
				(*this)._method_push_err(_40936_tokens[static_cast<jule::Int>(1LL)],jule::Str("invalid_syntax", 14));
			}
		}
	}
	return _41017_cont;
}



inline jule::Ref<_11ce1fd50_If> _10e3d3e70_ScopeParser::_method_build_if(jule::Slice<_11ce22a00_Token>* _42638_tokens) {
	jule::Ref<_11ce1fd50_If> _42717_model = jule::new_struct<_11ce1fd50_If>(new( std::nothrow ) _11ce1fd50_If((*_42638_tokens)[static_cast<jule::Int>(0LL)],jule::Ref<_11ce1fd50_Expr>(),jule::Ref<_11ce1fd50_ScopeTree>()));
	(*_42638_tokens)=(*_42638_tokens).slice(static_cast<jule::Int>(1LL));
	jule::Slice<_11ce22a00_Token> _43117_expr_tokens = _10e3df5b0_get_block_expr((*_42638_tokens));
	jule::Int _43217_i = 0LL;
	if ((static_cast<jule::I64>(_43117_expr_tokens.len()) == 0LL)) {
		(*this)._method_push_err(_42717_model->_field_token,jule::Str("missing_expr", 12));
	} else {
		_43217_i=static_cast<jule::I64>(_43117_expr_tokens.len());
	}
	jule::Slice<_11ce22a00_Token> _43817_scope_tokens = _10e5e45f0_range((&_43217_i),jule::Str("{", 1),jule::Str("}", 1),(*_42638_tokens));
	if ((_43817_scope_tokens == nullptr)) {
		(*this)._method_stop();
		(*this)._method_push_err(_42717_model->_field_token,jule::Str("body_not_exist", 14));
		return jule::new_ref<_11ce1fd50_If>();
	}
	if ((_43217_i < static_cast<jule::I64>((*_42638_tokens).len()))) {
		if (((*_42638_tokens)[static_cast<jule::Int>(_43217_i)]._field_id == 17LLU)) {
			(*_42638_tokens)=(*_42638_tokens).slice(static_cast<jule::Int>(_43217_i));
		} else {
			(*this)._method_push_err((*_42638_tokens)[static_cast<jule::Int>(_43217_i)],jule::Str("invalid_syntax", 14));
			(*_42638_tokens)=nullptr;
		}
	}
	_42717_model->_field_expr=(*this)._field_p->_method_build_expr(_43117_expr_tokens);
	_42717_model->_field_scope=(*this)._method_build_scope(_43817_scope_tokens);
	return _42717_model;
}



inline jule::Ref<_11ce1fd50_Else> _10e3d3e70_ScopeParser::_method_build_else(jule::Slice<_11ce22a00_Token> _45733_tokens) {
	jule::Ref<_11ce1fd50_Else> _45817_els = jule::new_struct<_11ce1fd50_Else>(new( std::nothrow ) _11ce1fd50_Else(_45733_tokens[static_cast<jule::Int>(0LL)],jule::Ref<_11ce1fd50_ScopeTree>()));
	_45733_tokens=_45733_tokens.slice(static_cast<jule::Int>(1LL));
	jule::Int _46217_i = 0LL;
	jule::Slice<_11ce22a00_Token> _46317_scope_tokens = _10e5e45f0_range((&_46217_i),jule::Str("{", 1),jule::Str("}", 1),_45733_tokens);
	if ((_46317_scope_tokens == nullptr)) {
		if ((_46217_i < static_cast<jule::I64>(_45733_tokens.len()))) {
			(*this)._method_push_err(_45817_els->_field_token,jule::Str("else_have_expr", 14));
		} else {
			(*this)._method_stop();
			(*this)._method_push_err(_45817_els->_field_token,jule::Str("body_not_exist", 14));
		}
		return jule::new_ref<_11ce1fd50_Else>();
	}
	if ((_46217_i < static_cast<jule::I64>(_45733_tokens.len()))) {
		(*this)._method_push_err(_45733_tokens[static_cast<jule::Int>(_46217_i)],jule::Str("invalid_syntax", 14));
	}
	_45817_els->_field_scope=(*this)._method_build_scope(_46317_scope_tokens);
	return _45817_els;
}



inline jule::Any _10e3d3e70_ScopeParser::_method_build_if_else_chain(jule::Slice<_11ce22a00_Token> _48042_tokens) {
	jule::Ref<_11ce1fd50_Conditional> _48117_chain = jule::new_struct<_11ce1fd50_Conditional>(new( std::nothrow ) _11ce1fd50_Conditional((*this)._method_build_if((&_48042_tokens)),jule::Slice<jule::Ref<_11ce1fd50_If>>(),jule::Ref<_11ce1fd50_Else>()));
	if ((!jule::real(_48117_chain->_field_head))) {
		return nullptr;
	}
	_iter_begin_4700288128:;
	if (!((_48042_tokens != nullptr))) { goto _iter_end_4700288128; }
	{
		if ((_48042_tokens[static_cast<jule::Int>(0LL)]._field_id != 17LLU)) {
			goto _iter_end_4700288128;
		}
		if (((static_cast<jule::I64>(_48042_tokens.len()) > 1LL) && (_48042_tokens[static_cast<jule::Int>(1LL)]._field_id == 16LLU))) {
			_48042_tokens=_48042_tokens.slice(static_cast<jule::Int>(1LL));
			jule::Ref<_11ce1fd50_If> _49325_elif = (*this)._method_build_if((&_48042_tokens));
			_48117_chain->_field_tail=append(_48117_chain->_field_tail,jule::Slice<jule::Ref<_11ce1fd50_If>>({_49325_elif}));
			goto _iter_next_4700288128;
		}
		_48117_chain->_field_default=(*this)._method_build_else(_48042_tokens);
		goto _iter_end_4700288128;
	}
	_iter_next_4700288128:;
	goto _iter_begin_4700288128;
	_iter_end_4700288128:;
	return _48117_chain;
}



inline jule::Any _10e3d3e70_ScopeParser::_method_build_comment_st(_11ce22a00_Token _50335_token) {
	return _10e5e45f0_build_comment(_50335_token);
}



inline jule::Any _10e3d3e70_ScopeParser::_method_build_call_st(jule::Slice<_11ce22a00_Token> _50736_tokens) {
	_11ce22a00_Token _50813_token = _50736_tokens[static_cast<jule::Int>(0LL)];
	if ((_10e3df5b0_is_fn_call(_50736_tokens) == nullptr)) {
		(*this)._method_push_err(_50813_token,jule::Str("expr_not_func_call", 18));
	}
	jule::Ref<_11ce1fd50_Expr> _51217_expr = (*this)._field_p->_method_build_expr(_50736_tokens);
	if ((jule::real(_51217_expr) && (!_51217_expr->_method_is_fn_call()))) {
		(*this)._method_push_err(_50813_token,jule::Str("invalid_syntax", 14));
	}
	return _51217_expr;
}



inline jule::Any _10e3d3e70_ScopeParser::_method_build_co_call_st(jule::Slice<_11ce22a00_Token> _51939_tokens) {
	_51939_tokens=_51939_tokens.slice(static_cast<jule::Int>(1LL));
	jule::Any _52117_cc = (*this)._method_build_call_st(_51939_tokens);
	_52117_cc.operator jule::Ref<_11ce1fd50_Expr>()->_field_kind.operator jule::Ref<_11ce1fd50_FnCallExpr>()->_field_concurrent=true;
	return _52117_cc;
}



inline jule::Any _10e3d3e70_ScopeParser::_method_build_goto_st(jule::Slice<_11ce22a00_Token> _52636_tokens) {
	jule::Ref<_11ce1fd50_GotoSt> _52717_gt = jule::new_struct<_11ce1fd50_GotoSt>(new( std::nothrow ) _11ce1fd50_GotoSt(_52636_tokens[static_cast<jule::Int>(0LL)],_11ce22a00_Token()));
	if ((static_cast<jule::I64>(_52636_tokens.len()) == 1LL)) {
		(*this)._method_push_err(_52717_gt->_field_token,jule::Str("missing_goto_label", 18));
		return nullptr;
	} else if ((static_cast<jule::I64>(_52636_tokens.len()) > 2LL)) {
		(*this)._method_push_err(_52636_tokens[static_cast<jule::Int>(2LL)],jule::Str("invalid_syntax", 14));
	}
	_11ce22a00_Token _53617_ident_token = _52636_tokens[static_cast<jule::Int>(1LL)];
	if ((_53617_ident_token._field_id != 2LLU)) {
		(*this)._method_push_err(_53617_ident_token,jule::Str("invalid_syntax", 14));
		return _52717_gt;
	}
	_52717_gt->_field_label=_53617_ident_token;
	return _52717_gt;
}



inline jule::Any _10e3d3e70_ScopeParser::_method_build_fall_st(jule::Slice<_11ce22a00_Token> _54536_tokens) {
	jule::Ref<_11ce1fd50_FallSt> _54617_fll = jule::new_struct<_11ce1fd50_FallSt>(new( std::nothrow ) _11ce1fd50_FallSt(_54536_tokens[static_cast<jule::Int>(0LL)]));
	if ((static_cast<jule::I64>(_54536_tokens.len()) > 1LL)) {
		(*this)._method_push_err(_54536_tokens[static_cast<jule::Int>(1LL)],jule::Str("invalid_syntax", 14));
	}
	return _54617_fll;
}



inline jule::Any _10e3d3e70_ScopeParser::_method_build_type_alias_st(jule::Slice<_11ce22a00_Token> _55542_tokens) {
	jule::Ref<_11ce1fd50_TypeAliasDecl> _55617_tad = (*this)._field_p->_method_build_type_alias_decl(_55542_tokens);
	_55617_tad->_field_scope=(*this)._field_s;
	return _55617_tad;
}



inline jule::Slice<jule::Ref<_11ce1fd50_Expr>> _10e3d3e70_ScopeParser::_method_build_case_exprs(jule::Slice<_11ce22a00_Token>* _56146_tokens,jule::Bool _56164_type_match) {
	jule::Slice<jule::Ref<_11ce1fd50_Expr>> _56217_exprs = nullptr;
	jule::Fn<void(jule::Slice<_11ce22a00_Token>,_11ce22a00_Token)> _56313_push_expr = jule::Fn<void(jule::Slice<_11ce22a00_Token>,_11ce22a00_Token)>([&](jule::Slice<_11ce22a00_Token> _56332_tokens,_11ce22a00_Token _56353_token) mutable -> void {
		if ((static_cast<jule::I64>(_56332_tokens.len()) > 0LL)) {
			if (_56164_type_match) {
				jule::Int _56629_i = 0LL;
				jule::Ref<_11ce1fd50_TypeDecl> _56730_t{};
				jule::Bool _56733_ok{};
				std::tie(_56730_t,_56733_ok) = (*this)._field_p->_method_build_type(_56332_tokens,(&_56629_i),true);
				if (_56733_ok) {
					_56217_exprs=append(_56217_exprs,jule::Slice<jule::Ref<_11ce1fd50_Expr>>({jule::new_struct<_11ce1fd50_Expr>(new( std::nothrow ) _11ce1fd50_Expr(_56353_token,_56730_t))}));
				}
				if ((_56629_i < static_cast<jule::I64>(_56332_tokens.len()))) {
					(*this)._method_push_err(_56332_tokens[static_cast<jule::Int>(_56629_i)],jule::Str("invalid_syntax", 14));
				}
				return;
			}
			_56217_exprs=append(_56217_exprs,jule::Slice<jule::Ref<_11ce1fd50_Expr>>({(*this)._field_p->_method_build_expr(_56332_tokens)}));
		}
	});
	jule::Int _58317_brace_n = 0LL;
	jule::Int _58417_j = 0LL;
	{
		auto &__julec_range_expr = (*_56146_tokens);
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e3d3e70_i{jule::Int()};_10e3d3e70_i = 0;
			_11ce22a00_Token _10e3d3e70_tok{_11ce22a00_Token()};_10e3d3e70_tok = *__julec_range_begin;
			_iter_begin_4700385888:;
			{
				if ((_10e3d3e70_tok._field_id == 3LLU)) {
					{
						auto _match_expr{ _10e3d3e70_tok._field_kind };
						if (!(jule::Str("(", 1) == _match_expr || jule::Str("{", 1) == _match_expr || jule::Str("[", 1) == _match_expr)) { goto _case_end_4700391200; }
						_case_begin_4700391200:;
						{
							(_58317_brace_n)++;
						}
						goto _match_end_4700388816;
						_case_end_4700391200:;
						_case_begin_4700389696:;
						{
							(_58317_brace_n)--;
						}
						goto _match_end_4700388816;
						_case_end_4700389696:;
						_match_end_4700388816:;
					}
					goto _iter_next_4700385888;
				} else if ((_58317_brace_n != 0LL)) {
					goto _iter_next_4700385888;
				}
				{
					auto _match_expr{ true };
					if (!(((_10e3d3e70_tok._field_id == 7LLU) && (_10e3d3e70_tok._field_kind == jule::Str("|", 1))) == _match_expr)) { goto _case_end_4700392496; }
					_case_begin_4700392496:;
					{
						_56313_push_expr((*_56146_tokens).slice(static_cast<jule::Int>(_58417_j),static_cast<jule::Int>(_10e3d3e70_i)),_10e3d3e70_tok);
						_58417_j=(_10e3d3e70_i + 1LL);
					}
					goto _match_end_4700391504;
					_case_end_4700392496:;
					if (!((_10e3d3e70_tok._field_id == 11LLU) == _match_expr)) { goto _case_end_4700392608; }
					_case_begin_4700392608:;
					{
						_56313_push_expr((*_56146_tokens).slice(static_cast<jule::Int>(_58417_j),static_cast<jule::Int>(_10e3d3e70_i)),_10e3d3e70_tok);
						(*_56146_tokens)=(*_56146_tokens).slice(static_cast<jule::Int>((_10e3d3e70_i + 1LL)));
						return _56217_exprs;
					}
					goto _match_end_4700391504;
					_case_end_4700392608:;
					_match_end_4700391504:;
				}
			}
			_iter_next_4700385888:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e3d3e70_i; _10e3d3e70_tok = *__julec_range_begin; goto _iter_begin_4700385888; }
			_iter_end_4700385888:;
		}
	}
	(*this)._method_push_err((*_56146_tokens)[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14));
	(*_56146_tokens)=nullptr;
	return nullptr;
}



inline jule::Ref<_11ce1fd50_ScopeTree> _10e3d3e70_ScopeParser::_method_build_case_scope(jule::Slice<_11ce22a00_Token>* _61646_tokens) {
	jule::Int _61717_n = 0LL;
	_iter_begin_4700408944:;
	{
		jule::Int _61921_i = 0LL;
		jule::Slice<_11ce22a00_Token> _62022_next{};
		std::tie(_62022_next,std::ignore) = _10e3d3e70_skip_st((&_61921_i),(*_61646_tokens).slice(static_cast<jule::Int>(_61717_n)));
		if ((static_cast<jule::I64>(_62022_next.len()) == 0LL)) {
			goto _iter_end_4700408944;
		}
		_11ce22a00_Token _62417_tok = _62022_next[static_cast<jule::Int>(0LL)];
		if (((_62417_tok._field_id != 7LLU) || (_62417_tok._field_kind != jule::Str("|", 1)))) {
			_61717_n+=static_cast<jule::I64>(_62022_next.len());
			goto _iter_next_4700408944;
		}
		jule::Ref<_11ce1fd50_ScopeTree> _62921_scope = (*this)._method_build_scope((*_61646_tokens).slice(0LL,static_cast<jule::Int>(_61717_n)));
		(*_61646_tokens)=(*_61646_tokens).slice(static_cast<jule::Int>(_61717_n));
		return _62921_scope;
	}
	_iter_next_4700408944:;
	goto _iter_begin_4700408944;
	_iter_end_4700408944:;
	jule::Ref<_11ce1fd50_ScopeTree> _63317_scope = (*this)._method_build_scope((*_61646_tokens));
	(*_61646_tokens)=nullptr;
	return _63317_scope;
}



inline std::tuple<jule::Ref<_11ce1fd50_Case>,jule::Bool> _10e3d3e70_ScopeParser::_method_build_case(jule::Slice<_11ce22a00_Token>* _63840_tokens,jule::Bool _63858_type_match) {
	jule::Ref<_11ce1fd50_Case> _63917_c = jule::new_struct<_11ce1fd50_Case>(new( std::nothrow ) _11ce1fd50_Case((*_63840_tokens)[static_cast<jule::Int>(0LL)],jule::Ref<_11ce1fd50_ScopeTree>(),jule::Slice<jule::Ref<_11ce1fd50_Expr>>()));
	(*_63840_tokens)=(*_63840_tokens).slice(static_cast<jule::Int>(1LL));
	_63917_c->_field_exprs=(*this)._method_build_case_exprs(_63840_tokens,_63858_type_match);
	_63917_c->_field_scope=(*this)._method_build_case_scope(_63840_tokens);
	jule::Bool _64513_is_default = (static_cast<jule::I64>(_63917_c->_field_exprs.len()) == 0LL);
	return std::make_tuple(_63917_c,_64513_is_default);
}



inline std::tuple<jule::Slice<jule::Ref<_11ce1fd50_Case>>,jule::Ref<_11ce1fd50_Else>> _10e3d3e70_ScopeParser::_method_build_cases(jule::Slice<_11ce22a00_Token> _64934_tokens,jule::Bool _64951_type_match) {
	jule::Slice<jule::Ref<_11ce1fd50_Case>> _65017_cases = nullptr;
	jule::Ref<_11ce1fd50_Else> _65117_def = jule::new_ref<_11ce1fd50_Else>();
	_iter_begin_4700450736:;
	if (!((static_cast<jule::I64>(_64934_tokens.len()) > 0LL))) { goto _iter_end_4700450736; }
	{
		_11ce22a00_Token _65321_tok = _64934_tokens[static_cast<jule::Int>(0LL)];
		if ((_65321_tok._field_id == 18LLU)) {
			_64934_tokens=_64934_tokens.slice(static_cast<jule::Int>(1LL));
			goto _iter_next_4700450736;
		}
		if (((_65321_tok._field_id != 7LLU) || (_65321_tok._field_kind != jule::Str("|", 1)))) {
			(*this)._method_push_err(_65321_tok,jule::Str("invalid_syntax", 14));
			goto _iter_end_4700450736;
		}
		jule::Ref<_11ce1fd50_Case> _66422_c{};
		jule::Bool _66425_is_default{};
		std::tie(_66422_c,_66425_is_default) = (*this)._method_build_case((&_64934_tokens),_64951_type_match);
		if (_66425_is_default) {
			_66422_c->_field_token=_65321_tok;
			if ((!jule::real(_65117_def))) {
				_65117_def=jule::new_struct<_11ce1fd50_Else>(new( std::nothrow ) _11ce1fd50_Else(_66422_c->_field_token,_66422_c->_field_scope));
			} else {
				(*this)._method_push_err(_65321_tok,jule::Str("invalid_syntax", 14));
			}
		} else {
			_65017_cases=append(_65017_cases,jule::Slice<jule::Ref<_11ce1fd50_Case>>({_66422_c}));
		}
	}
	_iter_next_4700450736:;
	goto _iter_begin_4700450736;
	_iter_end_4700450736:;
	return std::make_tuple(_65017_cases,_65117_def);
}



inline jule::Ref<_11ce1fd50_MatchCase> _10e3d3e70_ScopeParser::_method_build_match_case(jule::Slice<_11ce22a00_Token> _68239_tokens) {
	jule::Ref<_11ce1fd50_MatchCase> _68317_m = jule::new_struct<_11ce1fd50_MatchCase>(new( std::nothrow ) _11ce1fd50_MatchCase(_68239_tokens[static_cast<jule::Int>(0LL)],jule::Bool(),jule::Ref<_11ce1fd50_Expr>(),jule::Slice<jule::Ref<_11ce1fd50_Case>>(),jule::Ref<_11ce1fd50_Else>()));
	_68239_tokens=_68239_tokens.slice(static_cast<jule::Int>(1LL));
	if (((static_cast<jule::I64>(_68239_tokens.len()) > 0LL) && (_68239_tokens[static_cast<jule::Int>(0LL)]._field_id == 10LLU))) {
		_68317_m->_field_type_match=true;
		_68239_tokens=_68239_tokens.slice(static_cast<jule::Int>(1LL));
	}
	jule::Slice<_11ce22a00_Token> _69317_expr_tokens = _10e3df5b0_get_block_expr(_68239_tokens);
	if ((static_cast<jule::I64>(_69317_expr_tokens.len()) > 0LL)) {
		_68317_m->_field_expr=(*this)._field_p->_method_build_expr(_69317_expr_tokens);
	} else if (_68317_m->_field_type_match) {
		(*this)._method_push_err(_68317_m->_field_token,jule::Str("missing_expr", 12));
	}
	jule::I64 _70017_i = static_cast<jule::I64>(_69317_expr_tokens.len());
	jule::Slice<_11ce22a00_Token> _70117_block_toks = _10e5e45f0_range((&_70017_i),jule::Str("{", 1),jule::Str("}", 1),_68239_tokens);
	if ((_70117_block_toks == nullptr)) {
		(*this)._method_stop();
		(*this)._method_push_err(_68317_m->_field_token,jule::Str("body_not_exist", 14));
		return jule::new_ref<_11ce1fd50_MatchCase>();
	}
	std::tie(_68317_m->_field_cases,_68317_m->_field_default) = (*this)._method_build_cases(_70117_block_toks,_68317_m->_field_type_match);
	return _68317_m;
}



inline jule::Ref<_11ce1fd50_ScopeTree> _10e3d3e70_ScopeParser::_method_build_scope_st(jule::Slice<_11ce22a00_Token> _71237_tokens) {
	jule::Bool _71317_is_unsafe = false;
	jule::Bool _71417_is_deferred = false;
	_11ce22a00_Token _71517_token = _71237_tokens[static_cast<jule::Int>(0LL)];
	if ((_71517_token._field_id == 35LLU)) {
		_71317_is_unsafe=true;
		_71237_tokens=_71237_tokens.slice(static_cast<jule::Int>(1LL));
		if ((static_cast<jule::I64>(_71237_tokens.len()) == 0LL)) {
			(*this)._method_push_err(_71517_token,jule::Str("invalid_syntax", 14));
			return jule::new_ref<_11ce1fd50_ScopeTree>();
		}
		_71517_token=_71237_tokens[static_cast<jule::Int>(0LL)];
		if ((_71517_token._field_id == 37LLU)) {
			_71417_is_deferred=true;
			_71237_tokens=_71237_tokens.slice(static_cast<jule::Int>(1LL));
			if ((static_cast<jule::I64>(_71237_tokens.len()) == 0LL)) {
				(*this)._method_push_err(_71517_token,jule::Str("invalid_syntax", 14));
				return jule::new_ref<_11ce1fd50_ScopeTree>();
			}
		}
	} else if ((_71517_token._field_id == 37LLU)) {
		_71417_is_deferred=true;
		_71237_tokens=_71237_tokens.slice(static_cast<jule::Int>(1LL));
		if ((static_cast<jule::I64>(_71237_tokens.len()) == 0LL)) {
			(*this)._method_push_err(_71517_token,jule::Str("invalid_syntax", 14));
			return jule::new_ref<_11ce1fd50_ScopeTree>();
		}
	}
	jule::Int _74117_i = 0LL;
	jule::Slice<_11ce22a00_Token> _74217_scope_tokens = _10e5e45f0_range((&_74117_i),jule::Str("{", 1),jule::Str("}", 1),_71237_tokens);
	if ((_74217_scope_tokens == nullptr)) {
		(*this)._method_push_err(_71517_token,jule::Str("invalid_syntax", 14));
		return jule::new_ref<_11ce1fd50_ScopeTree>();
	} else if ((_74117_i < static_cast<jule::I64>(_71237_tokens.len()))) {
		(*this)._method_push_err(_71237_tokens[static_cast<jule::Int>(_74117_i)],jule::Str("invalid_syntax", 14));
	}
	jule::Ref<_11ce1fd50_ScopeTree> _74917_scope = (*this)._method_build_scope(_74217_scope_tokens);
	_74917_scope->_field_unsafety=_71317_is_unsafe;
	_74917_scope->_field_deferred=_71417_is_deferred;
	return _74917_scope;
}



inline jule::Ref<_11ce1fd50_LabelSt> _10e3d3e70_ScopeParser::_method_build_label_st(jule::Slice<_11ce22a00_Token> _75537_tokens) {
	jule::Ref<_11ce1fd50_LabelSt> _75617_lbl = jule::new_struct<_11ce1fd50_LabelSt>(new( std::nothrow ) _11ce1fd50_LabelSt(_75537_tokens[static_cast<jule::Int>(0LL)],_75537_tokens[static_cast<jule::Int>(0LL)]._field_kind));
	if ((static_cast<jule::I64>(_75537_tokens.len()) > 2LL)) {
		_75537_tokens=_75537_tokens.slice(static_cast<jule::Int>(2LL));
		(*this)._method_insert_as_next(_75537_tokens);
	}
	return _75617_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _10e3d3e70_ScopeParser::_method_build_id_st(jule::Slice<_11ce22a00_Token> _77034_tokens) {
	jule::Bool _77063_ok{jule::Bool()};
	if ((static_cast<jule::I64>(_77034_tokens.len()) == 1LL)) {
		return std::make_tuple(jule::Any(),_77063_ok);
	}
	_11ce22a00_Token _77517_token = _77034_tokens[static_cast<jule::Int>(1LL)];
	{
		auto _match_expr{ _77517_token._field_id };
		if (!(11LLU == _match_expr)) { goto _case_end_4700551760; }
		_case_begin_4700551760:;
		{
			_77063_ok = true;
			return std::make_tuple((*this)._method_build_label_st(_77034_tokens),_77063_ok);
		}
		goto _match_end_4700554496;
		_case_end_4700551760:;
		_match_end_4700554496:;
	}
	return std::make_tuple(jule::Any(),_77063_ok);
}



inline jule::Ref<_10e5e5b00_AssignInfo> _10e3d3e70_ScopeParser::_method_build_assign_info(jule::Slice<_11ce22a00_Token> _78440_tokens) {
	jule::Ref<_10e5e5b00_AssignInfo> _78517_info = jule::new_struct<_10e5e5b00_AssignInfo>(new( std::nothrow ) _10e5e5b00_AssignInfo(jule::Slice<_11ce22a00_Token>(),jule::Slice<_11ce22a00_Token>(),_11ce22a00_Token(),true));
	jule::Int _78817_brace_n = 0LL;
	{
		auto &__julec_range_expr = _78440_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e3d3e70_i{jule::Int()};_10e3d3e70_i = 0;
			_11ce22a00_Token _10e3d3e70_token{_11ce22a00_Token()};_10e3d3e70_token = *__julec_range_begin;
			_iter_begin_4700564688:;
			{
				if ((_10e3d3e70_token._field_id == 3LLU)) {
					{
						auto _match_expr{ _10e3d3e70_token._field_kind };
						if (!(jule::Str("{", 1) == _match_expr || jule::Str("[", 1) == _match_expr || jule::Str("(", 1) == _match_expr)) { goto _case_end_4700570272; }
						_case_begin_4700570272:;
						{
							(_78817_brace_n)++;
						}
						goto _match_end_4700567888;
						_case_end_4700570272:;
						_case_begin_4700568768:;
						{
							(_78817_brace_n)--;
						}
						goto _match_end_4700567888;
						_case_end_4700568768:;
						_match_end_4700567888:;
					}
				}
				{
					auto _match_expr{ true };
					if (!((_78817_brace_n > 0LL) == _match_expr)) { goto _case_end_4700567152; }
					_case_begin_4700567152:;
					{
						goto _iter_next_4700564688;
					}
					goto _match_end_4700568976;
					_case_end_4700567152:;
					if (!((_10e3d3e70_token._field_id != 7LLU) == _match_expr)) { goto _case_end_4700571264; }
					_case_begin_4700571264:;
					{
						goto _iter_next_4700564688;
					}
					goto _match_end_4700568976;
					_case_end_4700571264:;
					if (!((!_11ce22a00_is_assign_op(_10e3d3e70_token._field_kind)) == _match_expr)) { goto _case_end_4700571376; }
					_case_begin_4700571376:;
					{
						goto _iter_next_4700564688;
					}
					goto _match_end_4700568976;
					_case_end_4700571376:;
					_match_end_4700568976:;
				}
				_78517_info->_field_l=_78440_tokens.slice(0LL,static_cast<jule::Int>(_10e3d3e70_i));
				if ((static_cast<jule::I64>(_78517_info->_field_l.len()) == 0LL)) {
					_78517_info->_field_ok=false;
				}
				_78517_info->_field_setter=_10e3d3e70_token;
				if (((_10e3d3e70_i + 1LL) >= static_cast<jule::I64>(_78440_tokens.len()))) {
					_78517_info->_field_r=nullptr;
					_78517_info->_field_ok=_11ce22a00_is_postfix_op(_78517_info->_field_setter._field_kind);
					goto _iter_end_4700564688;
				}
				_78517_info->_field_r=_78440_tokens.slice(static_cast<jule::Int>((_10e3d3e70_i + 1LL)));
				if (_11ce22a00_is_postfix_op(_78517_info->_field_setter._field_kind)) {
					if ((static_cast<jule::I64>(_78517_info->_field_r.len()) > 0LL)) {
						(*this)._method_push_err(_78517_info->_field_r[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14));
						_78517_info->_field_r=nullptr;
					}
				}
				goto _iter_end_4700564688;
			}
			_iter_next_4700564688:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e3d3e70_i; _10e3d3e70_token = *__julec_range_begin; goto _iter_begin_4700564688; }
			_iter_end_4700564688:;
		}
	}
	return _78517_info;
}



inline jule::Ref<_11ce1fd50_AssignLeft> _10e3d3e70_ScopeParser::_method_build_assign_l(jule::Slice<_11ce22a00_Token> _83137_tokens) {
	jule::Ref<_11ce1fd50_AssignLeft> _83217_l = jule::new_struct<_11ce1fd50_AssignLeft>(new( std::nothrow ) _11ce1fd50_AssignLeft(_83137_tokens[static_cast<jule::Int>(0LL)],jule::Bool(),jule::Bool(),jule::Str(),jule::Ref<_11ce1fd50_Expr>()));
	if ((_83137_tokens[static_cast<jule::Int>(0LL)]._field_id == 2LLU)) {
		_83217_l->_field_ident=_83217_l->_field_token._field_kind;
	}
	_83217_l->_field_expr=(*this)._field_p->_method_build_expr(_83137_tokens);
	return _83217_l;
}



inline jule::Slice<jule::Ref<_11ce1fd50_AssignLeft>> _10e3d3e70_ScopeParser::_method_build_assign_ls(jule::Slice<jule::Slice<_11ce22a00_Token>> _84438_parts) {
	jule::Slice<jule::Ref<_11ce1fd50_AssignLeft>> _84517_lefts = nullptr;
	{
		auto &__julec_range_expr = _84438_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Slice<_11ce22a00_Token> _10e3d3e70_part{jule::Slice<_11ce22a00_Token>()};_10e3d3e70_part = *__julec_range_begin;
			_iter_begin_4700605504:;
			{
				jule::Ref<_11ce1fd50_AssignLeft> _84721_l = (*this)._method_build_assign_l(_10e3d3e70_part);
				_84517_lefts=append(_84517_lefts,jule::Slice<jule::Ref<_11ce1fd50_AssignLeft>>({_84721_l}));
			}
			_iter_next_4700605504:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e3d3e70_part = *__julec_range_begin; goto _iter_begin_4700605504; }
			_iter_end_4700605504:;
		}
	}
	return _84517_lefts;
}



inline std::tuple<jule::Ref<_11ce1fd50_AssignSt>,jule::Bool> _10e3d3e70_ScopeParser::_method_build_plain_assign(jule::Slice<_11ce22a00_Token> _85441_tokens) {
	jule::Ref<_10e5e5b00_AssignInfo> _85517_info = (*this)._method_build_assign_info(_85441_tokens);
	if ((!_85517_info->_field_ok)) {
		return std::make_tuple(jule::new_ref<_11ce1fd50_AssignSt>(),false);
	}
	jule::Ref<_11ce1fd50_AssignSt> _86017_assign = jule::new_struct<_11ce1fd50_AssignSt>(new( std::nothrow ) _11ce1fd50_AssignSt(jule::Bool(),_85517_info->_field_setter,jule::Slice<jule::Ref<_11ce1fd50_AssignLeft>>(),jule::Ref<_11ce1fd50_Expr>()));
	jule::Slice<jule::Slice<_11ce22a00_Token>> _86418_parts{};
	jule::Slice<_13cfd2d20_Log> _86425_errs{};
	std::tie(_86418_parts,_86425_errs) = _10e5e45f0_parts(_85517_info->_field_l,8LLU,true);
	if ((static_cast<jule::I64>(_86425_errs.len()) > 0LL)) {
		(*this)._field_p->_field_errors=append((*this)._field_p->_field_errors,_86425_errs);
		return std::make_tuple(jule::new_ref<_11ce1fd50_AssignSt>(),false);
	}
	_86017_assign->_field_left=(*this)._method_build_assign_ls(_86418_parts);
	if ((_85517_info->_field_r != nullptr)) {
		_86017_assign->_field_right=(*this)._field_p->_method_build_expr(_85517_info->_field_r);
	}
	return std::make_tuple(_86017_assign,true);
}



inline std::tuple<jule::Ref<_11ce1fd50_AssignSt>,jule::Bool> _10e3d3e70_ScopeParser::_method_build_decl_assign(jule::Slice<_11ce22a00_Token> _87840_tokens) {
	if ((static_cast<jule::I64>(_87840_tokens.len()) < 1LL)) {
		return std::make_tuple(jule::new_ref<_11ce1fd50_AssignSt>(),false);
	}
	_87840_tokens=_87840_tokens.slice(static_cast<jule::Int>(1LL));
	_11ce22a00_Token _88413_token = _87840_tokens[static_cast<jule::Int>(0LL)];
	if (((_88413_token._field_id != 3LLU) || (_88413_token._field_kind != jule::Str("(", 1)))) {
		return std::make_tuple(jule::new_ref<_11ce1fd50_AssignSt>(),false);
	}
	jule::Ref<_11ce1fd50_AssignSt> _88917_assign = jule::new_struct<_11ce1fd50_AssignSt>(new( std::nothrow ) _11ce1fd50_AssignSt(true,_11ce22a00_Token(),jule::Slice<jule::Ref<_11ce1fd50_AssignLeft>>(),jule::Ref<_11ce1fd50_Expr>()));
	jule::Int _89317_i = 0LL;
	jule::Slice<_11ce22a00_Token> _89417_rang = _10e5e45f0_range((&_89317_i),jule::Str("(", 1),jule::Str(")", 1),_87840_tokens);
	if ((_89417_rang == nullptr)) {
		(*this)._method_push_err(_88413_token,jule::Str("invalid_syntax", 14));
		return std::make_tuple(jule::new_ref<_11ce1fd50_AssignSt>(),false);
	} else if (((_89317_i + 1LL) < static_cast<jule::I64>(_87840_tokens.len()))) {
		_88917_assign->_field_setter=_87840_tokens[static_cast<jule::Int>(_89317_i)];
		(_89317_i)++;
		_88917_assign->_field_right=(*this)._field_p->_method_build_expr(_87840_tokens.slice(static_cast<jule::Int>(_89317_i)));
	}
	jule::Slice<jule::Slice<_11ce22a00_Token>> _90518_parts{};
	jule::Slice<_13cfd2d20_Log> _90525_errs{};
	std::tie(_90518_parts,_90525_errs) = _10e5e45f0_parts(_89417_rang,8LLU,true);
	if ((static_cast<jule::I64>(_90525_errs.len()) > 0LL)) {
		(*this)._field_p->_field_errors=append((*this)._field_p->_field_errors,_90525_errs);
		return std::make_tuple(jule::new_ref<_11ce1fd50_AssignSt>(),false);
	}
	{
		auto &__julec_range_expr = _90518_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Slice<_11ce22a00_Token> _10e3d3e70_part{jule::Slice<_11ce22a00_Token>()};_10e3d3e70_part = *__julec_range_begin;
			_iter_begin_4700669696:;
			{
				jule::Bool _91221_is_mut = false;
				jule::Bool _91321_is_ref = false;
				_11ce22a00_Token _91517_token = _10e3d3e70_part[static_cast<jule::Int>(0LL)];
				if ((_91517_token._field_id == 36LLU)) {
					_91221_is_mut=true;
					_10e3d3e70_part=_10e3d3e70_part.slice(static_cast<jule::Int>(1LL));
					if ((static_cast<jule::I64>(_10e3d3e70_part.len()) == 0LL)) {
						(*this)._method_push_err(_91517_token,jule::Str("invalid_syntax", 14));
						goto _iter_next_4700669696;
					}
				}
				if (((_10e3d3e70_part[static_cast<jule::Int>(0LL)]._field_id == 7LLU) && (_10e3d3e70_part[static_cast<jule::Int>(0LL)]._field_kind == jule::Str("&", 1)))) {
					_91321_is_ref=true;
					_10e3d3e70_part=_10e3d3e70_part.slice(static_cast<jule::Int>(1LL));
					if ((static_cast<jule::I64>(_10e3d3e70_part.len()) == 0LL)) {
						(*this)._method_push_err(_91517_token,jule::Str("invalid_syntax", 14));
						goto _iter_next_4700669696;
					}
				}
				if ((((_10e3d3e70_part[static_cast<jule::Int>(0LL)]._field_id != 2LLU) && (_10e3d3e70_part[static_cast<jule::Int>(0LL)]._field_id != 3LLU)) && (_10e3d3e70_part[static_cast<jule::Int>(0LL)]._field_kind != jule::Str("(", 1)))) {
					(*this)._method_push_err(_91517_token,jule::Str("invalid_syntax", 14));
					goto _iter_next_4700669696;
				}
				jule::Ref<_11ce1fd50_AssignLeft> _94121_l = (*this)._method_build_assign_l(_10e3d3e70_part);
				_94121_l->_field_mutable=_91221_is_mut;
				_94121_l->_field_reference=_91321_is_ref;
				_88917_assign->_field_left=append(_88917_assign->_field_left,jule::Slice<jule::Ref<_11ce1fd50_AssignLeft>>({_94121_l}));
			}
			_iter_next_4700669696:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e3d3e70_part = *__julec_range_begin; goto _iter_begin_4700669696; }
			_iter_end_4700669696:;
		}
	}
	return std::make_tuple(_88917_assign,true);
}



inline std::tuple<jule::Ref<_11ce1fd50_AssignSt>,jule::Bool> _10e3d3e70_ScopeParser::_method_build_assign_st(jule::Slice<_11ce22a00_Token> _95038_tokens) {
	if ((!_10e5e5b00_check_assign_tokens(_95038_tokens))) {
		return std::make_tuple(jule::new_ref<_11ce1fd50_AssignSt>(),false);
	}
	{
		auto _match_expr{ _95038_tokens[static_cast<jule::Int>(0LL)]._field_id };
		if (!(34LLU == _match_expr)) { goto _case_end_4700711296; }
		_case_begin_4700711296:;
		{
			return (*this)._method_build_decl_assign(_95038_tokens);
		}
		goto _match_end_4700709712;
		_case_end_4700711296:;
		_case_begin_4700709824:;
		{
			return (*this)._method_build_plain_assign(_95038_tokens);
		}
		goto _match_end_4700709712;
		_case_end_4700709824:;
		_match_end_4700709712:;
	}
}



inline jule::Any _10e3d3e70_ScopeParser::_method_build_st(jule::Ref<_10e3d3e70_Stmt> _96131_st) {
	_11ce22a00_Token _96217_token = _96131_st->_field_tokens[static_cast<jule::Int>(0LL)];
	if ((_96217_token._field_id == 2LLU)) {
		jule::Any _96422_s{};
		jule::Bool _96425_ok{};
		std::tie(_96422_s,_96425_ok) = (*this)._method_build_id_st(_96131_st->_field_tokens);
		if (_96425_ok) {
			return _96422_s;
		}
	}
	jule::Ref<_11ce1fd50_AssignSt> _97018_s{};
	jule::Bool _97021_ok{};
	std::tie(_97018_s,_97021_ok) = (*this)._method_build_assign_st(_96131_st->_field_tokens);
	if (_97021_ok) {
		return _97018_s;
	}
	{
		auto _match_expr{ _96217_token._field_id };
		if (!(38LLU == _match_expr || 9LLU == _match_expr || 34LLU == _match_expr || 36LLU == _match_expr)) { goto _case_end_4700729472; }
		_case_begin_4700729472:;
		{
			return (*this)._method_build_var_st(_96131_st->_field_tokens);
		}
		goto _match_end_4700724944;
		_case_end_4700729472:;
		if (!(4LLU == _match_expr)) { goto _case_end_4700728896; }
		_case_begin_4700728896:;
		{
			return (*this)._method_build_ret_st(_96131_st->_field_tokens);
		}
		goto _match_end_4700724944;
		_case_end_4700728896:;
		if (!(12LLU == _match_expr)) { goto _case_end_4700725808; }
		_case_begin_4700725808:;
		{
			return (*this)._method_buid_iter_st(_96131_st);
		}
		goto _match_end_4700724944;
		_case_end_4700725808:;
		if (!(13LLU == _match_expr)) { goto _case_end_4700725920; }
		_case_begin_4700725920:;
		{
			return (*this)._method_build_break_st(_96131_st->_field_tokens);
		}
		goto _match_end_4700724944;
		_case_end_4700725920:;
		if (!(14LLU == _match_expr)) { goto _case_end_4700726032; }
		_case_begin_4700726032:;
		{
			return (*this)._method_build_cont_st(_96131_st->_field_tokens);
		}
		goto _match_end_4700724944;
		_case_end_4700726032:;
		if (!(16LLU == _match_expr)) { goto _case_end_4700726144; }
		_case_begin_4700726144:;
		{
			return (*this)._method_build_if_else_chain(_96131_st->_field_tokens);
		}
		goto _match_end_4700724944;
		_case_end_4700726144:;
		if (!(18LLU == _match_expr)) { goto _case_end_4700729648; }
		_case_begin_4700729648:;
		{
			return (*this)._method_build_comment_st(_96217_token);
		}
		goto _match_end_4700724944;
		_case_end_4700729648:;
		if (!(26LLU == _match_expr)) { goto _case_end_4700729760; }
		_case_begin_4700729760:;
		{
			return (*this)._method_build_co_call_st(_96131_st->_field_tokens);
		}
		goto _match_end_4700724944;
		_case_end_4700729760:;
		if (!(22LLU == _match_expr)) { goto _case_end_4700729872; }
		_case_begin_4700729872:;
		{
			return (*this)._method_build_goto_st(_96131_st->_field_tokens);
		}
		goto _match_end_4700724944;
		_case_end_4700729872:;
		if (!(32LLU == _match_expr)) { goto _case_end_4700729984; }
		_case_begin_4700729984:;
		{
			return (*this)._method_build_fall_st(_96131_st->_field_tokens);
		}
		goto _match_end_4700724944;
		_case_end_4700729984:;
		if (!(10LLU == _match_expr)) { goto _case_end_4700730096; }
		_case_begin_4700730096:;
		{
			return (*this)._method_build_type_alias_st(_96131_st->_field_tokens);
		}
		goto _match_end_4700724944;
		_case_end_4700730096:;
		if (!(27LLU == _match_expr)) { goto _case_end_4700730208; }
		_case_begin_4700730208:;
		{
			return (*this)._method_build_match_case(_96131_st->_field_tokens);
		}
		goto _match_end_4700724944;
		_case_end_4700730208:;
		if (!(35LLU == _match_expr || 37LLU == _match_expr)) { goto _case_end_4700730320; }
		_case_begin_4700730320:;
		{
			return (*this)._method_build_scope_st(_96131_st->_field_tokens);
		}
		goto _match_end_4700724944;
		_case_end_4700730320:;
		if (!(3LLU == _match_expr)) { goto _case_end_4700730432; }
		_case_begin_4700730432:;
		{
			if ((_96217_token._field_kind == jule::Str("{", 1))) {
				return (*this)._method_build_scope_st(_96131_st->_field_tokens);
			}
		}
		goto _match_end_4700724944;
		_case_end_4700730432:;
		_case_begin_4700725136:;
		{
			if ((_10e3df5b0_is_fn_call(_96131_st->_field_tokens) != nullptr)) {
				return (*this)._method_build_call_st(_96131_st->_field_tokens);
			}
		}
		goto _match_end_4700724944;
		_case_end_4700725136:;
		_match_end_4700724944:;
	}
	(*this)._method_push_err(_96217_token,jule::Str("invalid_syntax", 14));
	return nullptr;
}



inline void _10e3d3e70_ScopeParser::_method_build(jule::Slice<_11ce22a00_Token> _103728_tokens,jule::Ref<_11ce1fd50_ScopeTree> _103749_s) {
	if ((!jule::real(_103749_s))) {
		return;
	}
	(*this)._field_stms=_10e3d3e70_split_stms(_103728_tokens);
	(*this)._field_pos=-1LL;
	(*this)._field_s=_103749_s;
	_iter_begin_4700760176:;
	if (!(((!(*this)._method_is_last_st()) && (!(*this)._method_finished())))) { goto _iter_end_4700760176; }
	{
		jule::Ref<_10e3d3e70_Stmt> _104621_st = (*this)._method_next();
		jule::Any _104721_data = (*this)._method_build_st(_104621_st);
		if ((_104721_data != nullptr)) {
			(*this)._field_s->_field_stmts=append((*this)._field_s->_field_stmts,jule::Slice<jule::Any>({_104721_data}));
		}
		if ((*this)._method_stopped()) {
			goto _iter_end_4700760176;
		}
	}
	_iter_next_4700760176:;
	goto _iter_begin_4700760176;
	_iter_end_4700760176:;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e3d3e70_ScopeParser &_Src) {
	_Stream << "ScopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stms:" << _Src._field_stms << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e3df5b0_CallData &_Src) {
	_Stream << "CallData{";
	_Stream << "expr_tokens:" << _Src._field_expr_tokens << ", ";
	_Stream << "args_tokens:" << _Src._field_args_tokens << ", ";
	_Stream << "generics_tokens:" << _Src._field_generics_tokens;
	_Stream << "}";
	return _Stream;
}



inline void _10e3df5b0_Precedencer::_method_set(jule::Int _15422_level,jule::Any _15434_expr) {
	{
		auto &__julec_range_expr = (*this)._field_pairs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e3df5b0_i{jule::Int()};_10e3df5b0_i = 0;
			jule::Slice<jule::Any> _10e3df5b0_pair{jule::Slice<jule::Any>()};_10e3df5b0_pair = *__julec_range_begin;
			_iter_begin_4700791328:;
			{
				jule::Int _15617_pair_level = _10e3df5b0_pair[static_cast<jule::Int>(0LL)].operator jule::Int();
				if ((_15422_level > _15617_pair_level)) {
					jule::Slice<jule::Slice<jule::Any>> _15825_first = (*this)._field_pairs.slice(0LL,static_cast<jule::Int>(_10e3df5b0_i));
					jule::Slice<jule::Slice<jule::Any>> _15925_buffer = jule::Slice<jule::Slice<jule::Any>>({jule::Slice<jule::Any>({jule::Any(_15422_level),_15434_expr})});
					jule::Slice<jule::Slice<jule::Any>> _16025_appended = append(_15925_buffer,(*this)._field_pairs.slice(static_cast<jule::Int>(_10e3df5b0_i)));
					(*this)._field_pairs=append(_15825_first,_16025_appended);
					return;
				}
			}
			_iter_next_4700791328:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e3df5b0_i; _10e3df5b0_pair = *__julec_range_begin; goto _iter_begin_4700791328; }
			_iter_end_4700791328:;
		}
	}
	(*this)._field_pairs=append((*this)._field_pairs,jule::Slice<jule::Slice<jule::Any>>({jule::Slice<jule::Any>({jule::Any(_15422_level),_15434_expr})}));
}



inline jule::Any _10e3df5b0_Precedencer::_method_get_lower(void) {
	jule::I64 _16917_i = static_cast<jule::I64>((static_cast<jule::I64>((*this)._field_pairs.len()) - 1LL));
	_iter_begin_4700809408:;
	if (!((_16917_i >= 0LL))) { goto _iter_end_4700809408; }
	{
		jule::Any _17121_data = (*this)._field_pairs[static_cast<jule::Int>(_16917_i)][static_cast<jule::Int>(1LL)];
		if ((_17121_data != nullptr)) {
			return _17121_data;
		}
	}
	_iter_next_4700809408:;
	(_16917_i)--;
	goto _iter_begin_4700809408;
	_iter_end_4700809408:;
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e3df5b0_Precedencer &_Src) {
	_Stream << "Precedencer{";
	_Stream << "pairs:" << _Src._field_pairs;
	_Stream << "}";
	return _Stream;
}



inline void _10e3df5b0_ExprBuilder::_method_push_err(_11ce22a00_Token _28627_token,jule::Str _28641_key,jule::Slice<jule::Any> _28651_args) {
	(*this)._field_p->_method_push_err(_28627_token,_28641_key,_28651_args);
}



inline jule::Ref<_11ce1fd50_TupleExpr> _10e3df5b0_ExprBuilder::_method_build_tuple(jule::Slice<jule::Slice<_11ce22a00_Token>> _29034_parts) {
	jule::Ref<_11ce1fd50_TupleExpr> _29117_tuple = jule::new_struct<_11ce1fd50_TupleExpr>(new( std::nothrow ) _11ce1fd50_TupleExpr(jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_29034_parts.len())))));
	{
		auto &__julec_range_expr = _29034_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e3df5b0_i{jule::Int()};_10e3df5b0_i = 0;
			jule::Slice<_11ce22a00_Token> _10e3df5b0_part{jule::Slice<_11ce22a00_Token>()};_10e3df5b0_part = *__julec_range_begin;
			_iter_begin_4700844752:;
			{
				_29117_tuple->_field_expr[static_cast<jule::Int>(_10e3df5b0_i)]=(*this)._method_build(_10e3df5b0_part);
			}
			_iter_next_4700844752:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e3df5b0_i; _10e3df5b0_part = *__julec_range_begin; goto _iter_begin_4700844752; }
			_iter_end_4700844752:;
		}
	}
	return _29117_tuple;
}



inline jule::Ref<_11ce1fd50_LitExpr> _10e3df5b0_ExprBuilder::_method_build_lit(_11ce22a00_Token _30028_token) {
	return jule::new_struct<_11ce1fd50_LitExpr>(new( std::nothrow ) _11ce1fd50_LitExpr(_30028_token,_30028_token._field_kind));
}



inline jule::Ref<_11ce1fd50_TypeDecl> _10e3df5b0_ExprBuilder::_method_build_primitive_type(_11ce22a00_Token _30739_token) {
	return _10e7e4720_build_prim_type(_30739_token);
}



inline jule::Any _10e3df5b0_ExprBuilder::_method_build_single(_11ce22a00_Token _31135_token) {
	{
		auto _match_expr{ _31135_token._field_id };
		if (!(6LLU == _match_expr)) { goto _case_end_4700863488; }
		_case_begin_4700863488:;
		{
			return (*this)._method_build_lit(_31135_token);
		}
		goto _match_end_4700859760;
		_case_end_4700863488:;
		if (!(2LLU == _match_expr || 28LLU == _match_expr)) { goto _case_end_4700863600; }
		_case_begin_4700863600:;
		{
			return _10e3df5b0_build_ident_expr(_31135_token);
		}
		goto _match_end_4700859760;
		_case_end_4700863600:;
		if (!(1LLU == _match_expr)) { goto _case_end_4700863712; }
		_case_begin_4700863712:;
		{
			return (*this)._method_build_primitive_type(_31135_token);
		}
		goto _match_end_4700859760;
		_case_end_4700863712:;
		_case_begin_4700860400:;
		{
			(*this)._method_push_err(_31135_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return nullptr;
		}
		goto _match_end_4700859760;
		_case_end_4700860400:;
		_match_end_4700859760:;
	}
}



inline jule::Ref<_11ce1fd50_IdentExpr> _10e3df5b0_ExprBuilder::_method_build_cpp_linked_ident(jule::Slice<_11ce22a00_Token> _32945_tokens) {
	if ((_32945_tokens[static_cast<jule::Int>(0LL)]._field_id != 31LLU)) {
		return jule::new_ref<_11ce1fd50_IdentExpr>();
	} else if ((_32945_tokens[static_cast<jule::Int>(1LL)]._field_id != 20LLU)) {
		(*this)._method_push_err(_32945_tokens[static_cast<jule::Int>(1LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11ce1fd50_IdentExpr>();
	}
	_11ce22a00_Token _33617_token = _32945_tokens[static_cast<jule::Int>(2LL)];
	if ((_33617_token._field_id != 2LLU)) {
		(*this)._method_push_err(_32945_tokens[static_cast<jule::Int>(2LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11ce1fd50_IdentExpr>();
	}
	jule::Ref<_11ce1fd50_IdentExpr> _34117_expr = _10e3df5b0_build_ident_expr(_33617_token);
	_34117_expr->_field_cpp_linked=true;
	return _34117_expr;
}



inline jule::Ref<_11ce1fd50_UnaryExpr> _10e3df5b0_ExprBuilder::_method_build_unary(jule::Slice<_11ce22a00_Token> _34634_tokens) {
	_11ce22a00_Token _34717_op = _34634_tokens[static_cast<jule::Int>(0LL)];
	if ((static_cast<jule::I64>(_34634_tokens.len()) == 1LL)) {
		(*this)._method_push_err(_34717_op,jule::Str("missing_expr_for_unary", 22),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11ce1fd50_UnaryExpr>();
	} else if ((!_11ce22a00_is_unary_op(_34717_op._field_kind))) {
		(*this)._method_push_err(_34717_op,jule::Str("invalid_op_for_unary", 20),jule::Slice<jule::Any>({jule::Any(_34717_op._field_kind)}));
		return jule::new_ref<_11ce1fd50_UnaryExpr>();
	}
	_34634_tokens=_34634_tokens.slice(static_cast<jule::Int>(1LL));
	return jule::new_struct<_11ce1fd50_UnaryExpr>(new( std::nothrow ) _11ce1fd50_UnaryExpr(_34717_op,(*this)._method_build(_34634_tokens)));
}



inline jule::Ref<_11ce1fd50_SubIdentExpr> _10e3df5b0_ExprBuilder::_method_build_obj_sub_ident(jule::Slice<_11ce22a00_Token> _36742_tokens) {
	jule::I64 _36817_i = static_cast<jule::I64>((static_cast<jule::I64>(_36742_tokens.len()) - 1LL));
	_11ce22a00_Token _36917_ident_token = _36742_tokens[static_cast<jule::Int>(_36817_i)];
	(_36817_i)--;
	_36742_tokens=_36742_tokens.slice(0LL,static_cast<jule::Int>(_36817_i));
	if ((static_cast<jule::I64>(_36742_tokens.len()) == 0LL)) {
		(*this)._method_push_err(_36917_ident_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11ce1fd50_SubIdentExpr>();
	}
	return jule::new_struct<_11ce1fd50_SubIdentExpr>(new( std::nothrow ) _11ce1fd50_SubIdentExpr(jule::Bool(),(*this)._method_build(_36742_tokens),_36917_ident_token));
}



inline jule::Ref<_11ce1fd50_NsSelectionExpr> _10e3df5b0_ExprBuilder::_method_build_ns_sub_ident(jule::Slice<_11ce22a00_Token> _38241_tokens) {
	jule::Ref<_11ce1fd50_NsSelectionExpr> _38317_ns = jule::new_struct<_11ce1fd50_NsSelectionExpr>(new( std::nothrow ) _11ce1fd50_NsSelectionExpr());
	{
		auto &__julec_range_expr = _38241_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e3df5b0_i{jule::Int()};_10e3df5b0_i = 0;
			_11ce22a00_Token _10e3df5b0_token{_11ce22a00_Token()};_10e3df5b0_token = *__julec_range_begin;
			_iter_begin_4700915104:;
			{
				if (((_10e3df5b0_i % 2LL) == 0LL)) {
					if ((_10e3df5b0_token._field_id != 2LLU)) {
						(*this)._method_push_err(_10e3df5b0_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
					}
					_38317_ns->_field_ns=append(_38317_ns->_field_ns,jule::Slice<_11ce22a00_Token>({_10e3df5b0_token}));
				} else if ((_10e3df5b0_token._field_id != 23LLU)) {
					(*this)._method_push_err(_10e3df5b0_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				}
			}
			_iter_next_4700915104:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e3df5b0_i; _10e3df5b0_token = *__julec_range_begin; goto _iter_begin_4700915104; }
			_iter_end_4700915104:;
		}
	}
	_38317_ns->_field_ident=_38317_ns->_field_ns[static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_38317_ns->_field_ns.len()) - 1LL)))];
	_38317_ns->_field_ns=_38317_ns->_field_ns.slice(0LL,static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_38317_ns->_field_ns.len()) - 1LL))));
	return _38317_ns;
}



inline jule::Ref<_11ce1fd50_TypeDecl> _10e3df5b0_ExprBuilder::_method_build_type(jule::Slice<_11ce22a00_Token> _39933_tokens) {
	jule::Int _40017_i = 0LL;
	jule::Ref<_11ce1fd50_TypeDecl> _40118_t{};
	jule::Bool _40121_ok{};
	std::tie(_40118_t,_40121_ok) = (*this)._field_p->_method_build_type(_39933_tokens,(&_40017_i),false);
	if ((!_40121_ok)) {
		(*this)._method_push_err(_39933_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11ce1fd50_TypeDecl>();
	}
	if ((_40017_i < static_cast<jule::I64>(_39933_tokens.len()))) {
		(*this)._method_push_err(_39933_tokens[static_cast<jule::Int>(_40017_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	return _40118_t;
}



inline jule::Any _10e3df5b0_ExprBuilder::_method_build_sub_ident(jule::Slice<_11ce22a00_Token> _41338_tokens) {
	jule::I64 _41413_i = static_cast<jule::I64>((static_cast<jule::I64>(_41338_tokens.len()) - 2LL));
	_11ce22a00_Token _41513_token = _41338_tokens[static_cast<jule::Int>(_41413_i)];
	{
		auto _match_expr{ _41513_token._field_id };
		if (!(20LLU == _match_expr)) { goto _case_end_4700950432; }
		_case_begin_4700950432:;
		{
			return (*this)._method_build_obj_sub_ident(_41338_tokens);
		}
		goto _match_end_4700952864;
		_case_end_4700950432:;
		if (!(23LLU == _match_expr)) { goto _case_end_4700952976; }
		_case_begin_4700952976:;
		{
			return (*this)._method_build_ns_sub_ident(_41338_tokens);
		}
		goto _match_end_4700952864;
		_case_end_4700952976:;
		if (!(3LLU == _match_expr)) { goto _case_end_4700953088; }
		_case_begin_4700953088:;
		{
			if ((_41513_token._field_kind == jule::Str("]", 1))) {
				return (*this)._method_build_type(_41338_tokens);
			}
		}
		goto _match_end_4700952864;
		_case_end_4700953088:;
		_match_end_4700952864:;
	}
	(*this)._method_push_err(_41513_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	return nullptr;
}



inline jule::Ref<_11ce1fd50_VariadicExpr> _10e3df5b0_ExprBuilder::_method_build_variadic(jule::Slice<_11ce22a00_Token> _43437_tokens) {
	_11ce22a00_Token _43517_token = _43437_tokens[static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_43437_tokens.len()) - 1LL)))];
	_43437_tokens=_43437_tokens.slice(0LL,static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_43437_tokens.len()) - 1LL))));
	return jule::new_struct<_11ce1fd50_VariadicExpr>(new( std::nothrow ) _11ce1fd50_VariadicExpr(_43517_token,(*this)._method_build(_43437_tokens)));
}



inline jule::Any _10e3df5b0_ExprBuilder::_method_build_op_right(jule::Slice<_11ce22a00_Token> _44337_tokens) {
	_11ce22a00_Token _44417_token = _44337_tokens[static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_44337_tokens.len()) - 1LL)))];
	{
		auto _match_expr{ _44417_token._field_kind };
		if (!(jule::Str("...", 3) == _match_expr)) { goto _case_end_4700975248; }
		_case_begin_4700975248:;
		{
			return (*this)._method_build_variadic(_44337_tokens);
		}
		goto _match_end_4700974832;
		_case_end_4700975248:;
		_case_begin_4700974944:;
		{
			(*this)._method_push_err(_44417_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return nullptr;
		}
		goto _match_end_4700974832;
		_case_end_4700974944:;
		_match_end_4700974832:;
	}
}



inline jule::Any _10e3df5b0_ExprBuilder::_method_build_between_parentheses(jule::Slice<_11ce22a00_Token> _45548_tokens) {
	_11ce22a00_Token _45613_token = _45548_tokens[static_cast<jule::Int>(0LL)];
	_45548_tokens=_45548_tokens.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_45548_tokens.len()) - 1LL))));
	if ((static_cast<jule::I64>(_45548_tokens.len()) == 0LL)) {
		(*this)._method_push_err(_45613_token,jule::Str("missing_expr", 12),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	return (*this)._method_build(_45548_tokens);
}



inline jule::Ref<_11ce1fd50_CastExpr> _10e3df5b0_ExprBuilder::_method_try_build_cast(jule::Slice<_11ce22a00_Token> _46537_tokens) {
	jule::Int _46617_range_n = 0LL;
	_11ce22a00_Token _46713_error_token = _46537_tokens[static_cast<jule::Int>(0LL)];
	{
		auto &__julec_range_expr = _46537_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e3df5b0_i{jule::Int()};_10e3df5b0_i = 0;
			_11ce22a00_Token _10e3df5b0_token{_11ce22a00_Token()};_10e3df5b0_token = *__julec_range_begin;
			_iter_begin_4700992976:;
			{
				if ((_10e3df5b0_token._field_id == 3LLU)) {
					{
						auto _match_expr{ _10e3df5b0_token._field_kind };
						if (!(jule::Str("{", 1) == _match_expr || jule::Str("[", 1) == _match_expr || jule::Str("(", 1) == _match_expr)) { goto _case_end_4701001040; }
						_case_begin_4701001040:;
						{
							(_46617_range_n)++;
							goto _iter_next_4700992976;
						}
						goto _match_end_4700998656;
						_case_end_4701001040:;
						_case_begin_4700999536:;
						{
							(_46617_range_n)--;
						}
						goto _match_end_4700998656;
						_case_end_4700999536:;
						_match_end_4700998656:;
					}
				}
				if ((_46617_range_n > 0LL)) {
					goto _iter_next_4700992976;
				} else if (((_10e3df5b0_i + 1LL) == static_cast<jule::I64>(_46537_tokens.len()))) {
					return jule::new_ref<_11ce1fd50_CastExpr>();
				}
				jule::Slice<_11ce22a00_Token> _48821_type_tokens = _46537_tokens.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(_10e3df5b0_i));
				jule::Slice<_11ce22a00_Token> _48921_expr_tokens = _46537_tokens.slice(static_cast<jule::Int>((_10e3df5b0_i + 1LL)));
				if ((static_cast<jule::I64>(_48921_expr_tokens.len()) == 0LL)) {
					return jule::new_ref<_11ce1fd50_CastExpr>();
				}
				_11ce22a00_Token _49617_token = _48921_expr_tokens[static_cast<jule::Int>(0LL)];
				if (((_49617_token._field_id != 3LLU) || (_49617_token._field_kind != jule::Str("(", 1)))) {
					return jule::new_ref<_11ce1fd50_CastExpr>();
				}
				jule::Ref<_11ce1fd50_CastExpr> _50121_cast = jule::new_struct<_11ce1fd50_CastExpr>(new( std::nothrow ) _11ce1fd50_CastExpr());
				if ((static_cast<jule::I64>(_48921_expr_tokens.len()) == 2LL)) {
					(*this)._method_push_err(_46713_error_token,jule::Str("missing_expr", 12),jule::Slice<jule::Any>({}));
				}
				jule::Int _50821_type_index = 0LL;
				jule::Ref<_11ce1fd50_TypeDecl> _50922_t{};
				jule::Bool _50925_ok{};
				std::tie(_50922_t,_50925_ok) = (*this)._field_p->_method_build_type(_48821_type_tokens,(&_50821_type_index),true);
				if ((_50925_ok && (_50821_type_index < static_cast<jule::I64>(_48821_type_tokens.len())))) {
					(*this)._method_push_err(_48821_type_tokens[static_cast<jule::Int>(_50821_type_index)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				} else if ((!_50925_ok)) {
					return _50121_cast;
				}
				_50121_cast->_field_kind=_50922_t;
				jule::Int _51721_i = 0LL;
				_10e5e45f0_range((&_51721_i),jule::Str("(", 1),jule::Str(")", 1),_48921_expr_tokens);
				if ((_51721_i < static_cast<jule::I64>(_48921_expr_tokens.len()))) {
					return jule::new_ref<_11ce1fd50_CastExpr>();
				}
				_50121_cast->_field_expr=(*this)._method_build(_48921_expr_tokens.slice(0LL,static_cast<jule::Int>(_51721_i)));
				return _50121_cast;
			}
			_iter_next_4700992976:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e3df5b0_i; _10e3df5b0_token = *__julec_range_begin; goto _iter_begin_4700992976; }
			_iter_end_4700992976:;
		}
	}
	return jule::new_ref<_11ce1fd50_CastExpr>();
}



inline void _10e3df5b0_ExprBuilder::_method_push_arg(jule::Slice<jule::Ref<_11ce1fd50_Expr>>* _53038_args,jule::Slice<_11ce22a00_Token> _53058_tokens,_11ce22a00_Token _53075_err_token) {
	if ((static_cast<jule::I64>(_53058_tokens.len()) == 0LL)) {
		(*this)._method_push_err(_53075_err_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return;
	}
	(*_53038_args)=append((*_53038_args),jule::Slice<jule::Ref<_11ce1fd50_Expr>>({(*this)._method_build_from_tokens(_53058_tokens)}));
}



inline jule::Slice<jule::Ref<_11ce1fd50_Expr>> _10e3df5b0_ExprBuilder::_method_build_args(jule::Slice<_11ce22a00_Token> _53833_tokens) {
	if ((static_cast<jule::I64>(_53833_tokens.len()) < 2LL)) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_11ce1fd50_Expr>> _54417_args = nullptr;
	jule::Int _54517_last = 0LL;
	jule::Int _54617_range_n = 0LL;
	_53833_tokens=_53833_tokens.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_53833_tokens.len()) - 1LL))));
	{
		auto &__julec_range_expr = _53833_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e3df5b0_i{jule::Int()};_10e3df5b0_i = 0;
			_11ce22a00_Token _10e3df5b0_token{_11ce22a00_Token()};_10e3df5b0_token = *__julec_range_begin;
			_iter_begin_4701058560:;
			{
				if ((_10e3df5b0_token._field_id == 3LLU)) {
					{
						auto _match_expr{ _10e3df5b0_token._field_kind };
						if (!(jule::Str("{", 1) == _match_expr || jule::Str("[", 1) == _match_expr || jule::Str("(", 1) == _match_expr)) { goto _case_end_4701065072; }
						_case_begin_4701065072:;
						{
							(_54617_range_n)++;
						}
						goto _match_end_4701062688;
						_case_end_4701065072:;
						_case_begin_4701063568:;
						{
							(_54617_range_n)--;
						}
						goto _match_end_4701062688;
						_case_end_4701063568:;
						_match_end_4701062688:;
					}
				}
				if (((_54617_range_n > 0LL) || (_10e3df5b0_token._field_id != 8LLU))) {
					goto _iter_next_4701058560;
				}
				{
					(*this)._method_push_arg((&_54417_args),_53833_tokens.slice(static_cast<jule::Int>(_54517_last),static_cast<jule::Int>(_10e3df5b0_i)),_10e3df5b0_token);
				}
				_54517_last=(_10e3df5b0_i + 1LL);
			}
			_iter_next_4701058560:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e3df5b0_i; _10e3df5b0_token = *__julec_range_begin; goto _iter_begin_4701058560; }
			_iter_end_4701058560:;
		}
	}
	if ((_54517_last < static_cast<jule::I64>(_53833_tokens.len()))) {
		if ((_54517_last == 0LL)) {
			if ((static_cast<jule::I64>(_53833_tokens.len()) > 0LL)) {
				{
					(*this)._method_push_arg((&_54417_args),_53833_tokens.slice(static_cast<jule::Int>(_54517_last)),_53833_tokens[static_cast<jule::Int>(_54517_last)]);
				}
			}
		} else {
			{
				(*this)._method_push_arg((&_54417_args),_53833_tokens.slice(static_cast<jule::Int>(_54517_last)),_53833_tokens[static_cast<jule::Int>((_54517_last - 1LL))]);
			}
		}
	}
	return _54417_args;
}



inline jule::Slice<jule::Ref<_11ce1fd50_TypeDecl>> _10e3df5b0_ExprBuilder::_method_build_call_generics(jule::Slice<_11ce22a00_Token> _58142_tokens) {
	if ((static_cast<jule::I64>(_58142_tokens.len()) == 0LL)) {
		return nullptr;
	}
	_58142_tokens=_58142_tokens.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_58142_tokens.len()) - 1LL))));
	jule::Slice<jule::Slice<_11ce22a00_Token>> _58718_parts{};
	jule::Slice<_13cfd2d20_Log> _58725_errs{};
	std::tie(_58718_parts,_58725_errs) = _10e5e45f0_parts(_58142_tokens,8LLU,true);
	jule::Slice<jule::Ref<_11ce1fd50_TypeDecl>> _58817_generics = jule::Slice<jule::Ref<_11ce1fd50_TypeDecl>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_58718_parts.len())));
	(*this)._field_p->_field_errors=append((*this)._field_p->_field_errors,_58725_errs);
	{
		auto &__julec_range_expr = _58718_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e3df5b0_i{jule::Int()};_10e3df5b0_i = 0;
			jule::Slice<_11ce22a00_Token> _10e3df5b0_part{jule::Slice<_11ce22a00_Token>()};_10e3df5b0_part = *__julec_range_begin;
			_iter_begin_4701095104:;
			{
				if ((static_cast<jule::I64>(_10e3df5b0_part.len()) == 0LL)) {
					goto _iter_next_4701095104;
				}
				jule::Int _59421_j = 0LL;
				jule::Ref<_11ce1fd50_TypeDecl> _59522_generic{};
				std::tie(_59522_generic,std::ignore) = (*this)._field_p->_method_build_type(_10e3df5b0_part,(&_59421_j),true);
				if ((_59421_j < static_cast<jule::I64>(_10e3df5b0_part.len()))) {
					(*this)._method_push_err(_10e3df5b0_part[static_cast<jule::Int>(_59421_j)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				}
				_58817_generics[static_cast<jule::Int>(_10e3df5b0_i)]=_59522_generic;
			}
			_iter_next_4701095104:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e3df5b0_i; _10e3df5b0_part = *__julec_range_begin; goto _iter_begin_4701095104; }
			_iter_end_4701095104:;
		}
	}
	return _58817_generics;
}



inline jule::Ref<_11ce1fd50_FnCallExpr> _10e3df5b0_ExprBuilder::_method_build_fn_call(_11ce22a00_Token _60536_token,jule::Ref<_10e3df5b0_CallData> _60554_data) {
	return jule::new_struct<_11ce1fd50_FnCallExpr>(new( std::nothrow ) _11ce1fd50_FnCallExpr(_60536_token,(*this)._method_build_from_tokens(_60554_data->_field_expr_tokens),(*this)._method_build_call_generics(_60554_data->_field_generics_tokens),(*this)._method_build_args(_60554_data->_field_args_tokens),jule::Bool()));
}



inline jule::Any _10e3df5b0_ExprBuilder::_method_build_parentheses_range(jule::Slice<_11ce22a00_Token> _61446_tokens) {
	_11ce22a00_Token _61517_token = _61446_tokens[static_cast<jule::Int>(0LL)];
	{
		auto _match_expr{ _61517_token._field_id };
		if (!(3LLU == _match_expr)) { goto _case_end_4701122080; }
		_case_begin_4701122080:;
		{
			{
				auto _match_expr{ _61517_token._field_kind };
				if (!(jule::Str("(", 1) == _match_expr)) { goto _case_end_4701124960; }
				_case_begin_4701124960:;
				{
					jule::Ref<_11ce1fd50_CastExpr> _62025_expr = (*this)._method_try_build_cast(_61446_tokens);
					if (jule::real(_62025_expr)) {
						return _62025_expr;
					}
				}
				goto _match_end_4701126160;
				_case_end_4701124960:;
				_match_end_4701126160:;
			}
		}
		goto _match_end_4701124176;
		_case_end_4701122080:;
		_match_end_4701124176:;
	}
	jule::Ref<_10e3df5b0_CallData> _62717_data = _10e3df5b0_get_call_data(_61446_tokens);
	if ((static_cast<jule::I64>(_62717_data->_field_expr_tokens.len()) == 0LL)) {
		return (*this)._method_build_between_parentheses(_62717_data->_field_args_tokens);
	}
	return (*this)._method_build_fn_call(_61517_token,_62717_data);
}



inline jule::Ref<_11ce1fd50_UnsafeExpr> _10e3df5b0_ExprBuilder::_method_build_unsafe_expr(jule::Slice<_11ce22a00_Token> _63840_tokens) {
	_11ce22a00_Token _63917_token = _63840_tokens[static_cast<jule::Int>(0LL)];
	_63840_tokens=_63840_tokens.slice(static_cast<jule::Int>(1LL));
	jule::Int _64117_i = 0LL;
	jule::Slice<_11ce22a00_Token> _64217_range_tokens = _10e5e45f0_range((&_64117_i),jule::Str("{", 1),jule::Str("}", 1),_63840_tokens);
	if ((static_cast<jule::I64>(_64217_range_tokens.len()) == 0LL)) {
		(*this)._method_push_err(_63840_tokens[static_cast<jule::Int>(0LL)],jule::Str("missing_expr", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11ce1fd50_UnsafeExpr>();
	}
	return jule::new_struct<_11ce1fd50_UnsafeExpr>(new( std::nothrow ) _11ce1fd50_UnsafeExpr(_63917_token,(*this)._method_build_from_tokens(_64217_range_tokens)->_field_kind));
}



inline jule::Ref<_11ce1fd50_FnDecl> _10e3df5b0_ExprBuilder::_method_build_anon_fn(jule::Slice<_11ce22a00_Token> _65336_tokens) {
	return (*this)._field_p->_method_build_fn(_65336_tokens,false,true,false);
}



inline jule::Any _10e3df5b0_ExprBuilder::_method_build_unsafe(jule::Slice<_11ce22a00_Token> _65735_tokens) {
	if ((static_cast<jule::I64>(_65735_tokens.len()) == 0LL)) {
		(*this)._method_push_err(_65735_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	{
		auto _match_expr{ _65735_tokens[static_cast<jule::Int>(1LL)]._field_id };
		if (!(33LLU == _match_expr)) { goto _case_end_4701164768; }
		_case_begin_4701164768:;
		{
			return (*this)._method_build_anon_fn(_65735_tokens);
		}
		goto _match_end_4701163184;
		_case_end_4701164768:;
		_case_begin_4701163296:;
		{
			return (*this)._method_build_unsafe_expr(_65735_tokens);
		}
		goto _match_end_4701163184;
		_case_end_4701163296:;
		_match_end_4701163184:;
	}
}



inline jule::Slice<jule::Slice<_11ce22a00_Token>> _10e3df5b0_ExprBuilder::_method_get_brace_range_lit_expr_parts(jule::Slice<_11ce22a00_Token> _67453_tokens) {
	if ((static_cast<jule::I64>(_67453_tokens.len()) < 2LL)) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_11ce22a00_Token>> _68017_parts = nullptr;
	jule::Fn<void(jule::Slice<_11ce22a00_Token>,_11ce22a00_Token)> _68213_push = jule::Fn<void(jule::Slice<_11ce22a00_Token>,_11ce22a00_Token)>([&](jule::Slice<_11ce22a00_Token> _68227_part,_11ce22a00_Token _68242_error_token) mutable -> void {
		if ((static_cast<jule::I64>(_68227_part.len()) == 0LL)) {
			(*this)._method_push_err(_68242_error_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		_68017_parts=append(_68017_parts,jule::Slice<jule::Slice<_11ce22a00_Token>>({_68227_part}));
	});
	jule::Int _69017_last = 0LL;
	jule::Int _69117_range_n = 0LL;
	_67453_tokens=_67453_tokens.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_67453_tokens.len()) - 1LL))));
	{
		auto &__julec_range_expr = _67453_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e3df5b0_i{jule::Int()};_10e3df5b0_i = 0;
			_11ce22a00_Token _10e3df5b0_token{_11ce22a00_Token()};_10e3df5b0_token = *__julec_range_begin;
			_iter_begin_4701183888:;
			{
				if ((_10e3df5b0_token._field_id == 3LLU)) {
					{
						auto _match_expr{ _10e3df5b0_token._field_kind };
						if (!(jule::Str("{", 1) == _match_expr || jule::Str("[", 1) == _match_expr || jule::Str("(", 1) == _match_expr)) { goto _case_end_4701191936; }
						_case_begin_4701191936:;
						{
							(_69117_range_n)++;
						}
						goto _match_end_4701189552;
						_case_end_4701191936:;
						_case_begin_4701190432:;
						{
							(_69117_range_n)--;
						}
						goto _match_end_4701189552;
						_case_end_4701190432:;
						_match_end_4701189552:;
					}
				}
				if (((_69117_range_n > 0LL) || (_10e3df5b0_token._field_id != 8LLU))) {
					goto _iter_next_4701183888;
				}
				_68213_push(_67453_tokens.slice(static_cast<jule::Int>(_69017_last),static_cast<jule::Int>(_10e3df5b0_i)),_10e3df5b0_token);
				_69017_last=(_10e3df5b0_i + 1LL);
			}
			_iter_next_4701183888:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e3df5b0_i; _10e3df5b0_token = *__julec_range_begin; goto _iter_begin_4701183888; }
			_iter_end_4701183888:;
		}
	}
	if ((_69017_last < static_cast<jule::I64>(_67453_tokens.len()))) {
		if ((_69017_last == 0LL)) {
			if ((static_cast<jule::I64>(_67453_tokens.len()) > 0LL)) {
				_68213_push(_67453_tokens.slice(static_cast<jule::Int>(_69017_last)),_67453_tokens[static_cast<jule::Int>(_69017_last)]);
			}
		} else {
			_68213_push(_67453_tokens.slice(static_cast<jule::Int>(_69017_last)),_67453_tokens[static_cast<jule::Int>((_69017_last - 1LL))]);
		}
	}
	return _68017_parts;
}



inline jule::Ref<_11ce1fd50_FieldExprPair> _10e3df5b0_ExprBuilder::_method_build_field_expr_pair(jule::Slice<_11ce22a00_Token> _72544_tokens) {
	jule::Ref<_11ce1fd50_FieldExprPair> _72617_pair = jule::new_struct<_11ce1fd50_FieldExprPair>(new( std::nothrow ) _11ce1fd50_FieldExprPair(_72544_tokens[static_cast<jule::Int>(0LL)],jule::Any()));
	_72544_tokens=_72544_tokens.slice(static_cast<jule::Int>(2LL));
	_72617_pair->_field_expr=(*this)._method_build_from_tokens(_72544_tokens)->_field_kind;
	return _72617_pair;
}



inline jule::Any _10e3df5b0_ExprBuilder::_method_build_struct_lit_expr(jule::Slice<_11ce22a00_Token> _73444_tokens) {
	_11ce22a00_Token _73513_token = _73444_tokens[static_cast<jule::Int>(0LL)];
	if ((_73513_token._field_id == 2LLU)) {
		if ((static_cast<jule::I64>(_73444_tokens.len()) > 1LL)) {
			_11ce22a00_Token _73821_token = _73444_tokens[static_cast<jule::Int>(1LL)];
			if ((_73821_token._field_id == 11LLU)) {
				return (*this)._method_build_field_expr_pair(_73444_tokens);
			}
		}
	}
	return (*this)._method_build_from_tokens(_73444_tokens);
}



inline jule::Slice<jule::Any> _10e3df5b0_ExprBuilder::_method_build_struct_lit_exprs(jule::Slice<_11ce22a00_Token> _74745_tokens) {
	jule::Slice<jule::Slice<_11ce22a00_Token>> _74817_parts = (*this)._method_get_brace_range_lit_expr_parts(_74745_tokens);
	if ((static_cast<jule::I64>(_74817_parts.len()) == 0LL)) {
		return nullptr;
	}
	jule::Slice<jule::Any> _75317_pairs = jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_74817_parts.len())));
	{
		auto &__julec_range_expr = _74817_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e3df5b0_i{jule::Int()};_10e3df5b0_i = 0;
			jule::Slice<_11ce22a00_Token> _10e3df5b0_part{jule::Slice<_11ce22a00_Token>()};_10e3df5b0_part = *__julec_range_begin;
			_iter_begin_4701233808:;
			{
				_75317_pairs[static_cast<jule::Int>(_10e3df5b0_i)]=(*this)._method_build_struct_lit_expr(_10e3df5b0_part);
			}
			_iter_next_4701233808:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e3df5b0_i; _10e3df5b0_part = *__julec_range_begin; goto _iter_begin_4701233808; }
			_iter_end_4701233808:;
		}
	}
	return _75317_pairs;
}



inline jule::Ref<_11ce1fd50_StructLit> _10e3df5b0_ExprBuilder::_method_build_typed_struct_literal(jule::Slice<_11ce22a00_Token> _76049_tokens) {
	jule::Int _76117_i = 0LL;
	jule::Ref<_11ce1fd50_TypeDecl> _76218_t{};
	jule::Bool _76221_ok{};
	std::tie(_76218_t,_76221_ok) = (*this)._field_p->_method_build_type(_76049_tokens,(&_76117_i),true);
	if ((!_76221_ok)) {
		return jule::new_ref<_11ce1fd50_StructLit>();
	} else if ((_76117_i >= static_cast<jule::I64>(_76049_tokens.len()))) {
		(*this)._method_push_err(_76049_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11ce1fd50_StructLit>();
	}
	_76049_tokens=_76049_tokens.slice(static_cast<jule::Int>(_76117_i));
	_11ce22a00_Token _77113_token = _76049_tokens[static_cast<jule::Int>(0LL)];
	if (((_77113_token._field_id != 3LLU) || (_77113_token._field_kind != jule::Str("{", 1)))) {
		(*this)._method_push_err(_77113_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11ce1fd50_StructLit>();
	}
	return jule::new_struct<_11ce1fd50_StructLit>(new( std::nothrow ) _11ce1fd50_StructLit(_76218_t,(*this)._method_build_struct_lit_exprs(_76049_tokens)));
}



inline jule::Any _10e3df5b0_ExprBuilder::_method_build_brace_lit_part(jule::Slice<_11ce22a00_Token> _78343_tokens) {
	jule::Slice<_11ce22a00_Token> _78418_l{};
	jule::Slice<_11ce22a00_Token> _78425_r{};
	std::tie(_78418_l,_78425_r) = _10e3df5b0_split_colon(_78343_tokens);
	if ((_78418_l != nullptr)) {
		return jule::new_struct<_11ce1fd50_KeyValPair>(new( std::nothrow ) _11ce1fd50_KeyValPair((*this)._method_build_from_tokens(_78418_l)->_field_kind,(*this)._method_build_from_tokens(_78425_r)->_field_kind,_78343_tokens[static_cast<jule::Int>(static_cast<jule::I64>(_78418_l.len()))]));
	}
	return (*this)._method_build_from_tokens(_78343_tokens);
}



inline jule::Ref<_11ce1fd50_BraceLit> _10e3df5b0_ExprBuilder::_method_build_brace_lit(jule::Slice<_11ce22a00_Token> _79638_tokens) {
	jule::Ref<_11ce1fd50_BraceLit> _79717_lit = jule::new_struct<_11ce1fd50_BraceLit>(new( std::nothrow ) _11ce1fd50_BraceLit(_79638_tokens[static_cast<jule::Int>(0LL)],jule::Slice<jule::Any>()));
	jule::Slice<jule::Slice<_11ce22a00_Token>> _80117_parts = (*this)._method_get_brace_range_lit_expr_parts(_79638_tokens);
	if ((_80117_parts == nullptr)) {
		return _79717_lit;
	}
	_79717_lit->_field_exprs=jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_80117_parts.len())));
	{
		auto &__julec_range_expr = _80117_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e3df5b0_i{jule::Int()};_10e3df5b0_i = 0;
			jule::Slice<_11ce22a00_Token> _10e3df5b0_part{jule::Slice<_11ce22a00_Token>()};_10e3df5b0_part = *__julec_range_begin;
			_iter_begin_4701278928:;
			{
				_79717_lit->_field_exprs[static_cast<jule::Int>(_10e3df5b0_i)]=(*this)._method_build_brace_lit_part(_10e3df5b0_part);
			}
			_iter_next_4701278928:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e3df5b0_i; _10e3df5b0_part = *__julec_range_begin; goto _iter_begin_4701278928; }
			_iter_end_4701278928:;
		}
	}
	return _79717_lit;
}



inline jule::Any _10e3df5b0_ExprBuilder::_method_build_brace_range(jule::Slice<_11ce22a00_Token> _81440_tokens) {
	jule::Slice<_11ce22a00_Token> _81514_expr_tokens{};
	jule::Int _81527_range_n{};
	std::tie(_81514_expr_tokens,_81527_range_n) = _10e3df5b0_get_range_expr_tokens(_81440_tokens);
	{
		auto _match_expr{ true };
		if (!((static_cast<jule::I64>(_81514_expr_tokens.len()) == 0LL) == _match_expr)) { goto _case_end_4701288960; }
		_case_begin_4701288960:;
		{
			return (*this)._method_build_brace_lit(_81440_tokens);
		}
		goto _match_end_4701288448;
		_case_end_4701288960:;
		if (!((_81527_range_n > 0LL) == _match_expr)) { goto _case_end_4701289072; }
		_case_begin_4701289072:;
		{
			(*this)._method_push_err(_81440_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return nullptr;
		}
		goto _match_end_4701288448;
		_case_end_4701289072:;
		_match_end_4701288448:;
	}
	{
		auto _match_expr{ _81514_expr_tokens[static_cast<jule::Int>(0LL)]._field_id };
		if (!(35LLU == _match_expr)) { goto _case_end_4701297488; }
		_case_begin_4701297488:;
		{
			return (*this)._method_build_unsafe(_81440_tokens);
		}
		goto _match_end_4701296160;
		_case_end_4701297488:;
		if (!(33LLU == _match_expr)) { goto _case_end_4701296464; }
		_case_begin_4701296464:;
		{
			return (*this)._method_build_anon_fn(_81440_tokens);
		}
		goto _match_end_4701296160;
		_case_end_4701296464:;
		if (!(2LLU == _match_expr || 31LLU == _match_expr)) { goto _case_end_4701296576; }
		_case_begin_4701296576:;
		{
			return (*this)._method_build_typed_struct_literal(_81440_tokens);
		}
		goto _match_end_4701296160;
		_case_end_4701296576:;
		_case_begin_4701286384:;
		{
			(*this)._method_push_err(_81514_expr_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return nullptr;
		}
		goto _match_end_4701296160;
		_case_end_4701286384:;
		_match_end_4701296160:;
	}
}



inline jule::Slice<jule::Slice<_11ce22a00_Token>> _10e3df5b0_ExprBuilder::_method_get_enumerable_parts(jule::Slice<_11ce22a00_Token> _84443_tokens) {
	_84443_tokens=_84443_tokens.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_84443_tokens.len()) - 1LL))));
	jule::Slice<jule::Slice<_11ce22a00_Token>> _84618_parts{};
	jule::Slice<_13cfd2d20_Log> _84625_errors{};
	std::tie(_84618_parts,_84625_errors) = _10e5e45f0_parts(_84443_tokens,8LLU,true);
	(*this)._field_p->_field_errors=append((*this)._field_p->_field_errors,_84625_errors);
	return _84618_parts;
}



inline jule::Ref<_11ce1fd50_SliceExpr> _10e3df5b0_ExprBuilder::_method_build_slice(jule::Slice<_11ce22a00_Token> _85134_tokens) {
	jule::Ref<_11ce1fd50_SliceExpr> _85217_slc = jule::new_struct<_11ce1fd50_SliceExpr>(new( std::nothrow ) _11ce1fd50_SliceExpr(_85134_tokens[static_cast<jule::Int>(0LL)],jule::Slice<jule::Any>()));
	jule::Slice<jule::Slice<_11ce22a00_Token>> _85617_parts = (*this)._method_get_enumerable_parts(_85134_tokens);
	if ((static_cast<jule::I64>(_85617_parts.len()) == 0LL)) {
		return _85217_slc;
	}
	_85217_slc->_field_elems=jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_85617_parts.len())));
	{
		auto &__julec_range_expr = _85617_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e3df5b0_i{jule::Int()};_10e3df5b0_i = 0;
			jule::Slice<_11ce22a00_Token> _10e3df5b0_p{jule::Slice<_11ce22a00_Token>()};_10e3df5b0_p = *__julec_range_begin;
			_iter_begin_4701323536:;
			{
				_85217_slc->_field_elems[static_cast<jule::Int>(_10e3df5b0_i)]=(*this)._method_build_from_tokens(_10e3df5b0_p)->_field_kind;
			}
			_iter_next_4701323536:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e3df5b0_i; _10e3df5b0_p = *__julec_range_begin; goto _iter_begin_4701323536; }
			_iter_end_4701323536:;
		}
	}
	return _85217_slc;
}



inline jule::Ref<_11ce1fd50_IndexingExpr> _10e3df5b0_ExprBuilder::_method_build_indexing(jule::Slice<_11ce22a00_Token> _86937_expr_tokens,jule::Slice<_11ce22a00_Token> _87013_tokens,_11ce22a00_Token _87034_error_token) {
	_87013_tokens=_87013_tokens.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_87013_tokens.len()) - 1LL))));
	return jule::new_struct<_11ce1fd50_IndexingExpr>(new( std::nothrow ) _11ce1fd50_IndexingExpr(_87034_error_token,(*this)._method_build_from_tokens(_86937_expr_tokens)->_field_kind,(*this)._method_build_from_tokens(_87013_tokens)->_field_kind));
}



inline jule::Ref<_11ce1fd50_SlicingExpr> _10e3df5b0_ExprBuilder::_method_build_slicing(jule::Slice<_11ce22a00_Token> _87936_expr_tokens,jule::Slice<_11ce22a00_Token> _87962_slicing_tokens,jule::Int _8809_colon,_11ce22a00_Token _88021_error_token) {
	jule::Ref<_11ce1fd50_SlicingExpr> _88117_slc = jule::new_struct<_11ce1fd50_SlicingExpr>(new( std::nothrow ) _11ce1fd50_SlicingExpr(_88021_error_token,(*this)._method_build_from_tokens(_87936_expr_tokens)->_field_kind,jule::Any(),jule::Any()));
	jule::Slice<_11ce22a00_Token> _88617_start_expr_tokens = _87962_slicing_tokens.slice(0LL,static_cast<jule::Int>(_8809_colon));
	if ((static_cast<jule::I64>(_88617_start_expr_tokens.len()) > 0LL)) {
		_88117_slc->_field_start=(*this)._method_build_from_tokens(_88617_start_expr_tokens)->_field_kind;
	}
	jule::Slice<_11ce22a00_Token> _89117_to_expr_tokens = _87962_slicing_tokens.slice(static_cast<jule::Int>((_8809_colon + 1LL)));
	if ((static_cast<jule::I64>(_89117_to_expr_tokens.len()) > 0LL)) {
		_88117_slc->_field_to=(*this)._method_build_from_tokens(_89117_to_expr_tokens)->_field_kind;
	}
	return _88117_slc;
}



inline jule::Any _10e3df5b0_ExprBuilder::_method_build_bracket_range(jule::Slice<_11ce22a00_Token> _89942_tokens) {
	_11ce22a00_Token _90017_error_token = _89942_tokens[static_cast<jule::Int>(0LL)];
	jule::Slice<_11ce22a00_Token> _90118_expr_tokens{};
	jule::Int _90131_range_n{};
	std::tie(_90118_expr_tokens,_90131_range_n) = _10e3df5b0_get_range_expr_tokens(_89942_tokens);
	{
		auto _match_expr{ true };
		if (!((static_cast<jule::I64>(_90118_expr_tokens.len()) == 0LL) == _match_expr)) { goto _case_end_4701365648; }
		_case_begin_4701365648:;
		{
			return (*this)._method_build_slice(_89942_tokens);
		}
		goto _match_end_4701365376;
		_case_end_4701365648:;
		if (!(((static_cast<jule::I64>(_90118_expr_tokens.len()) == 0LL) || (_90131_range_n > 0LL)) == _match_expr)) { goto _case_end_4701365760; }
		_case_begin_4701365760:;
		{
			(*this)._method_push_err(_90017_error_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return nullptr;
		}
		goto _match_end_4701365376;
		_case_end_4701365760:;
		_match_end_4701365376:;
	}
	_89942_tokens=_89942_tokens.slice(static_cast<jule::Int>(static_cast<jule::I64>(_90118_expr_tokens.len())));
	jule::Int _92017_i = 0LL;
	jule::Slice<_11ce22a00_Token> _92118_slicing_tokens{};
	jule::Int _92134_colon{};
	std::tie(_92118_slicing_tokens,_92134_colon) = _10e7e4720_split_map_range(_89942_tokens,(&_92017_i));
	if ((_92134_colon != -1LL)) {
		return (*this)._method_build_slicing(_90118_expr_tokens,_92118_slicing_tokens,_92134_colon,_90017_error_token);
	}
	return (*this)._method_build_indexing(_90118_expr_tokens,_89942_tokens,_90017_error_token);
}



inline jule::Any _10e3df5b0_ExprBuilder::_method_build_data(jule::Slice<_11ce22a00_Token> _92833_tokens) {
	{
		auto _match_expr{ static_cast<jule::I64>(_92833_tokens.len()) };
		if (!(0LL == _match_expr)) { goto _case_end_4701384656; }
		_case_begin_4701384656:;
		{
			return nullptr;
		}
		goto _match_end_4701384544;
		_case_end_4701384656:;
		if (!(1LL == _match_expr)) { goto _case_end_4701384768; }
		_case_begin_4701384768:;
		{
			return (*this)._method_build_single(_92833_tokens[static_cast<jule::Int>(0LL)]);
		}
		goto _match_end_4701384544;
		_case_end_4701384768:;
		if (!(3LL == _match_expr)) { goto _case_end_4701384880; }
		_case_begin_4701384880:;
		{
			if ((_92833_tokens[static_cast<jule::Int>(0LL)]._field_id == 31LLU)) {
				return (*this)._method_build_cpp_linked_ident(_92833_tokens);
			}
		}
		goto _match_end_4701384544;
		_case_end_4701384880:;
		_match_end_4701384544:;
	}
	_11ce22a00_Token _94217_token = _92833_tokens[static_cast<jule::Int>(0LL)];
	{
		auto _match_expr{ _94217_token._field_id };
		if (!(7LLU == _match_expr)) { goto _case_end_4701384272; }
		_case_begin_4701384272:;
		{
			if (((static_cast<jule::I64>(_92833_tokens.len()) > 1LL) && (_94217_token._field_kind == jule::Str("*", 1)))) {
				_94217_token=_92833_tokens[static_cast<jule::Int>(1LL)];
				if (((_94217_token._field_id == 1LLU) || (_94217_token._field_id == 35LLU))) {
					return (*this)._method_build_type(_92833_tokens);
				}
			}
			return (*this)._method_build_unary(_92833_tokens);
		}
		goto _match_end_4701393712;
		_case_end_4701384272:;
		if (!(3LLU == _match_expr)) { goto _case_end_4701393824; }
		_case_begin_4701393824:;
		{
			if (((_94217_token._field_kind != jule::Str("[", 1)) || (static_cast<jule::I64>(_92833_tokens.len()) < 3LL))) {
				goto _match_end_4701393712;
			}
			_11ce22a00_Token _96017_next = _92833_tokens[static_cast<jule::Int>(1LL)];
			if (((_96017_next._field_id != 3LLU) || (_96017_next._field_kind != jule::Str("]", 1)))) {
				goto _match_end_4701393712;
			}
			return (*this)._method_build_type(_92833_tokens);
		}
		goto _match_end_4701393712;
		_case_end_4701393824:;
		_match_end_4701393712:;
	}
	_94217_token=_92833_tokens[static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_92833_tokens.len()) - 1LL)))];
	{
		auto _match_expr{ _94217_token._field_id };
		if (!(2LLU == _match_expr)) { goto _case_end_4701411536; }
		_case_begin_4701411536:;
		{
			return (*this)._method_build_sub_ident(_92833_tokens);
		}
		goto _match_end_4701411408;
		_case_end_4701411536:;
		if (!(1LLU == _match_expr)) { goto _case_end_4701411648; }
		_case_begin_4701411648:;
		{
			return (*this)._method_build_type(_92833_tokens);
		}
		goto _match_end_4701411408;
		_case_end_4701411648:;
		if (!(7LLU == _match_expr)) { goto _case_end_4701411760; }
		_case_begin_4701411760:;
		{
			return (*this)._method_build_op_right(_92833_tokens);
		}
		goto _match_end_4701411408;
		_case_end_4701411760:;
		if (!(3LLU == _match_expr)) { goto _case_end_4701411872; }
		_case_begin_4701411872:;
		{
			{
				auto _match_expr{ _94217_token._field_kind };
				if (!(jule::Str(")", 1) == _match_expr)) { goto _case_end_4701417456; }
				_case_begin_4701417456:;
				{
					return (*this)._method_build_parentheses_range(_92833_tokens);
				}
				goto _match_end_4701417664;
				_case_end_4701417456:;
				if (!(jule::Str("}", 1) == _match_expr)) { goto _case_end_4701417824; }
				_case_begin_4701417824:;
				{
					return (*this)._method_build_brace_range(_92833_tokens);
				}
				goto _match_end_4701417664;
				_case_end_4701417824:;
				if (!(jule::Str("]", 1) == _match_expr)) { goto _case_end_4701417936; }
				_case_begin_4701417936:;
				{
					return (*this)._method_build_bracket_range(_92833_tokens);
				}
				goto _match_end_4701417664;
				_case_end_4701417936:;
				_match_end_4701417664:;
			}
		}
		goto _match_end_4701411408;
		_case_end_4701411872:;
		_match_end_4701411408:;
	}
	(*this)._method_push_err(_92833_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	return nullptr;
}



inline jule::Ref<_11ce1fd50_BinopExpr> _10e3df5b0_ExprBuilder::_method_build_binop(jule::Slice<_11ce22a00_Token> _99734_tokens,jule::Int _99751_i) {
	jule::Slice<_11ce22a00_Token> _99817_left_tokens = _99734_tokens.slice(0LL,static_cast<jule::Int>(_99751_i));
	jule::Slice<_11ce22a00_Token> _99917_right_tokens = _99734_tokens.slice(static_cast<jule::Int>((_99751_i + 1LL)));
	if ((static_cast<jule::I64>(_99817_left_tokens.len()) == 0LL)) {
		(*this)._method_push_err(_99734_tokens[static_cast<jule::Int>(_99751_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11ce1fd50_BinopExpr>();
	}
	if ((static_cast<jule::I64>(_99917_right_tokens.len()) == 0LL)) {
		(*this)._method_push_err(_99734_tokens[static_cast<jule::Int>(_99751_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11ce1fd50_BinopExpr>();
	}
	return jule::new_struct<_11ce1fd50_BinopExpr>(new( std::nothrow ) _11ce1fd50_BinopExpr((*this)._method_build(_99817_left_tokens),(*this)._method_build(_99917_right_tokens),_99734_tokens[static_cast<jule::Int>(_99751_i)]));
}



inline jule::Any _10e3df5b0_ExprBuilder::_method_build(jule::Slice<_11ce22a00_Token> _101828_tokens) {
	jule::Int _101913_i = static_cast<jule::Int>(_10e3df5b0_find_lowest_prec_op(_101828_tokens));
	if ((_101913_i == -1LL)) {
		return (*this)._method_build_data(_101828_tokens);
	}
	return (*this)._method_build_binop(_101828_tokens,_101913_i);
}



inline jule::Any _10e3df5b0_ExprBuilder::_method_build_kind(jule::Slice<_11ce22a00_Token> _102633_tokens) {
	jule::Slice<jule::Slice<_11ce22a00_Token>> _102718_parts{};
	jule::Slice<_13cfd2d20_Log> _102725_errors{};
	std::tie(_102718_parts,_102725_errors) = _10e5e45f0_parts(_102633_tokens,8LLU,true);
	if ((_102725_errors != nullptr)) {
		(*this)._field_p->_field_errors=append((*this)._field_p->_field_errors,_102725_errors);
		return nullptr;
	} else if ((static_cast<jule::I64>(_102718_parts.len()) > 1LL)) {
		return (*this)._method_build_tuple(_102718_parts);
	}
	return (*this)._method_build(_102633_tokens);
}



inline jule::Ref<_11ce1fd50_Expr> _10e3df5b0_ExprBuilder::_method_build_from_tokens(jule::Slice<_11ce22a00_Token> _103740_tokens) {
	_103740_tokens=_10e3df5b0_eliminate_comments(_103740_tokens);
	if ((static_cast<jule::I64>(_103740_tokens.len()) == 0LL)) {
		return jule::new_ref<_11ce1fd50_Expr>();
	}
	return jule::new_struct<_11ce1fd50_Expr>(new( std::nothrow ) _11ce1fd50_Expr(_103740_tokens[static_cast<jule::Int>(0LL)],(*this)._method_build_kind(_103740_tokens)));
}







std::ostream &operator<<(std::ostream &_Stream, const _10e3df5b0_ExprBuilder &_Src) {
	_Stream << "ExprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}



inline void _10e5e45f0_Parser::_method_stop(void) {
	jule::drop((*this)._field_ast);
}



inline jule::Bool _10e5e45f0_Parser::_method_stopped(void) {
	return (!jule::real((*this)._field_ast));
}



inline void _10e5e45f0_Parser::_method_push_err(_11ce22a00_Token _23227_token,jule::Str _23241_key,jule::Slice<jule::Any> _23251_args) {
	(*this)._field_errors=append((*this)._field_errors,jule::Slice<_13cfd2d20_Log>({_10e5e45f0_compiler_err(_23227_token,_23241_key,_23251_args)}));
}



inline jule::Ref<_11ce1fd50_Expr> _10e5e45f0_Parser::_method_build_expr(jule::Slice<_11ce22a00_Token> _23634_tokens) {
	jule::Ref<_10e3df5b0_ExprBuilder> _23717_ep = jule::new_struct<_10e3df5b0_ExprBuilder>(new( std::nothrow ) _10e3df5b0_ExprBuilder(this->self));
	jule::Ref<_11ce1fd50_Expr> _23817_expr = _23717_ep->_method_build_from_tokens(_23634_tokens);
	return _23817_expr;
}



inline jule::Ref<_11ce1fd50_Directive> _10e5e45f0_Parser::_method_get_directive(jule::Ref<_11ce1fd50_Comment> _24228_c) {
	if ((static_cast<jule::I64>(_24228_c->_field_text.len()) <= static_cast<jule::I64>(jule::Str("jule:", 5).len()))) {
		return jule::new_ref<_11ce1fd50_Directive>();
	}
	jule::Ref<_11ce1fd50_Directive> _24717_d = jule::new_struct<_11ce1fd50_Directive>(new( std::nothrow ) _11ce1fd50_Directive(_24228_c->_field_token,jule::Str(),jule::Slice<jule::Str>()));
	jule::Str _25113_pragma = _24228_c->_field_token._field_kind.slice(static_cast<jule::Int>(static_cast<jule::I64>(jule::Str("jule:", 5).len())));
	jule::Slice<jule::Str> _25217_parts = _25113_pragma.split(jule::Str(" ", 1),-1LL);
	_24717_d->_field_tag=_25217_parts[static_cast<jule::Int>(0LL)];
	_24717_d->_field_args=_25217_parts.slice(static_cast<jule::Int>(1LL));
	jule::Bool _25817_ok = false;
	{
		auto &__julec_range_expr = _13cfd67b0_DIRECTIVES;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _10e5e45f0_kind{jule::Str("cdef", 4)};_10e5e45f0_kind = *__julec_range_begin;
			_iter_begin_4701501152:;
			{
				if ((_24717_d->_field_tag == _10e5e45f0_kind)) {
					_25817_ok=true;
					goto _iter_end_4701501152;
				}
			}
			_iter_next_4701501152:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e5e45f0_kind = *__julec_range_begin; goto _iter_begin_4701501152; }
			_iter_end_4701501152:;
		}
	}
	if ((!_25817_ok)) {
		return jule::new_ref<_11ce1fd50_Directive>();
	}
	return _24717_d;
}



inline void _10e5e45f0_Parser::_method_push_directive(jule::Ref<_11ce1fd50_Comment> _27233_c) {
	jule::Ref<_11ce1fd50_Directive> _27317_d = (*this)._method_get_directive(_27233_c);
	if ((!jule::real(_27317_d))) {
		return;
	}
	{
		auto &__julec_range_expr = (*this)._field_directives;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11ce1fd50_Directive> _10e5e45f0_pd{jule::Ref<_11ce1fd50_Directive>()};_10e5e45f0_pd = *__julec_range_begin;
			_iter_begin_4701510288:;
			{
				if ((_27317_d->_field_tag == _10e5e45f0_pd->_field_tag)) {
					return;
				}
			}
			_iter_next_4701510288:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e5e45f0_pd = *__julec_range_begin; goto _iter_begin_4701510288; }
			_iter_end_4701510288:;
		}
	}
	(*this)._field_directives=append((*this)._field_directives,jule::Slice<jule::Ref<_11ce1fd50_Directive>>({_27317_d}));
}



inline void _10e5e45f0_Parser::_method_process_comment(jule::Ref<_11ce1fd50_Comment> _28838_c) {
	if (_28838_c->_method_is_directive()) {
		(*this)._method_push_directive(_28838_c);
		return;
	}
	if ((!jule::real((*this)._field_comment_group))) {
		(*this)._field_comment_group=jule::new_struct<_11ce1fd50_CommentGroup>(new( std::nothrow ) _11ce1fd50_CommentGroup());
	}
	(*this)._field_comment_group->_field_comments=append((*this)._field_comment_group->_field_comments,jule::Slice<jule::Ref<_11ce1fd50_Comment>>({_28838_c}));
}



inline jule::Ref<_11ce1fd50_ScopeTree> _10e5e45f0_Parser::_method_build_scope(jule::Slice<_11ce22a00_Token> _29935_tokens) {
	jule::Ref<_11ce1fd50_ScopeTree> _30017_s = _10e3d3e70_new_scope();
	_10e3d3e70_ScopeParser _30117_sp = _10e3d3e70_ScopeParser(this->self,jule::Ref<_11ce1fd50_ScopeTree>(),jule::Slice<jule::Ref<_10e3d3e70_Stmt>>(),jule::Int());
	_30117_sp._method_build(_29935_tokens,_30017_s);
	return _30017_s;
}



inline std::tuple<jule::Ref<_11ce1fd50_TypeDecl>,jule::Bool> _10e5e45f0_Parser::_method___build_type(jule::Slice<_11ce22a00_Token> _30843_tokens,jule::Int* _30913_i,jule::Bool _30922_err) {
	_10e7e4720_TypeBuilder _31017_tb = _10e7e4720_TypeBuilder(this->self,_30843_tokens,_30913_i,_30922_err);
	return _31017_tb._method_build();
}



inline std::tuple<jule::Ref<_11ce1fd50_TypeDecl>,jule::Bool> _10e5e45f0_Parser::_method_build_type(jule::Slice<_11ce22a00_Token> _32041_tokens,jule::Int* _32113_i,jule::Bool _32122_err) {
	_11ce22a00_Token _32213_token = _32041_tokens[static_cast<jule::Int>((*_32113_i))];
	jule::Ref<_11ce1fd50_TypeDecl> _32318_t{};
	jule::Bool _32321_ok{};
	std::tie(_32318_t,_32321_ok) = this->self->_method___build_type(_32041_tokens,_32113_i,_32122_err);
	if ((_32122_err && (!_32321_ok))) {
		this->self->_method_push_err(_32213_token,jule::Str("invalid_type", 12),jule::Slice<jule::Any>({}));
	}
	return std::make_tuple(_32318_t,_32321_ok);
}



inline jule::Ref<_11ce1fd50_TypeAliasDecl> _10e5e45f0_Parser::_method_build_type_alias_decl(jule::Slice<_11ce22a00_Token> _33045_tokens) {
	jule::Int _33117_i = 1LL;
	if ((_33117_i >= static_cast<jule::I64>(_33045_tokens.len()))) {
		this->self->_method_push_err(_33045_tokens[static_cast<jule::Int>((_33117_i - 1LL))],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11ce1fd50_TypeAliasDecl>();
	}
	jule::Ref<_11ce1fd50_TypeAliasDecl> _33617_tad = jule::new_struct<_11ce1fd50_TypeAliasDecl>(new( std::nothrow ) _11ce1fd50_TypeAliasDecl(jule::Ref<_11ce1fd50_ScopeTree>(),jule::Bool(),jule::Bool(),_33045_tokens[static_cast<jule::Int>(1LL)],_33045_tokens[static_cast<jule::Int>(1LL)]._field_kind,jule::Ref<_11ce1fd50_TypeDecl>(),jule::Ref<_11ce1fd50_CommentGroup>()));
	_11ce22a00_Token _34017_token = _33045_tokens[static_cast<jule::Int>(_33117_i)];
	if ((_34017_token._field_id != 2LLU)) {
		this->self->_method_push_err(_34017_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	(_33117_i)++;
	if ((_33117_i >= static_cast<jule::I64>(_33045_tokens.len()))) {
		this->self->_method_push_err(_33045_tokens[static_cast<jule::Int>((_33117_i - 1LL))],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return _33617_tad;
	}
	_34017_token=_33045_tokens[static_cast<jule::Int>(_33117_i)];
	if ((_34017_token._field_id != 11LLU)) {
		this->self->_method_push_err(_33045_tokens[static_cast<jule::Int>((_33117_i - 1LL))],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return _33617_tad;
	}
	(_33117_i)++;
	if ((_33117_i >= static_cast<jule::I64>(_33045_tokens.len()))) {
		this->self->_method_push_err(_33045_tokens[static_cast<jule::Int>((_33117_i - 1LL))],jule::Str("missing_type", 12),jule::Slice<jule::Any>({}));
		return _33617_tad;
	}
	jule::Ref<_11ce1fd50_TypeDecl> _35918_t{};
	jule::Bool _35921_ok{};
	std::tie(_35918_t,_35921_ok) = this->self->_method_build_type(_33045_tokens,(&_33117_i),true);
	_33617_tad->_field_kind=_35918_t;
	if ((_35921_ok && (_33117_i < static_cast<jule::I64>(_33045_tokens.len())))) {
		this->self->_method_push_err(_33045_tokens[static_cast<jule::Int>(_33117_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	return _33617_tad;
}



inline void _10e5e45f0_Parser::_method_build_var_type_and_expr(jule::Ref<_11ce1fd50_VarDecl> _36747_v,jule::Slice<_11ce22a00_Token> _36764_tokens) {
	jule::Int _36817_i = 0LL;
	_11ce22a00_Token _36917_tok = _36764_tokens[static_cast<jule::Int>(_36817_i)];
	if ((_36917_tok._field_id == 11LLU)) {
		(_36817_i)++;
		if (((_36817_i >= static_cast<jule::I64>(_36764_tokens.len())) || ((_36764_tokens[static_cast<jule::Int>(_36817_i)]._field_id == 7LLU) && (_36764_tokens[static_cast<jule::Int>(_36817_i)]._field_kind == jule::Str("=", 1))))) {
			this->self->_method_push_err(_36917_tok,jule::Str("missing_type", 12),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Ref<_11ce1fd50_TypeDecl> _37722_t{};
		jule::Bool _37725_ok{};
		std::tie(_37722_t,_37725_ok) = this->self->_method_build_type(_36764_tokens,(&_36817_i),true);
		if (_37725_ok) {
			_36747_v->_field_kind=_37722_t;
			if ((_36817_i >= static_cast<jule::I64>(_36764_tokens.len()))) {
				return;
			}
			_36917_tok=_36764_tokens[static_cast<jule::Int>(_36817_i)];
		}
	}
	if ((_36917_tok._field_id == 7LLU)) {
		if ((_36917_tok._field_kind != jule::Str("=", 1))) {
			this->self->_method_push_err(_36917_tok,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Slice<_11ce22a00_Token> _39221_expr_tokens = _36764_tokens.slice(static_cast<jule::Int>((_36817_i + 1LL)));
		if ((static_cast<jule::I64>(_39221_expr_tokens.len()) == 0LL)) {
			this->self->_method_push_err(_36917_tok,jule::Str("missing_expr", 12),jule::Slice<jule::Any>({}));
			return;
		}
		_36747_v->_field_expr=this->self->_method_build_expr(_39221_expr_tokens);
	} else {
		this->self->_method_push_err(_36917_tok,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
}



inline void _10e5e45f0_Parser::_method_build_var_common(jule::Ref<_11ce1fd50_VarDecl> _40340_v,jule::Slice<_11ce22a00_Token> _40357_tokens) {
	_40340_v->_field_token=_40357_tokens[static_cast<jule::Int>(0LL)];
	if ((_40340_v->_field_token._field_id != 2LLU)) {
		this->self->_method_push_err(_40340_v->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return;
	}
	_40340_v->_field_ident=_40340_v->_field_token._field_kind;
	jule::drop(_40340_v->_field_kind);
	if ((static_cast<jule::I64>(_40357_tokens.len()) > 1LL)) {
		_40357_tokens=_40357_tokens.slice(static_cast<jule::Int>(1LL));
		this->self->_method_build_var_type_and_expr(_40340_v,_40357_tokens);
	}
}



inline void _10e5e45f0_Parser::_method_build_var_begin(jule::Ref<_11ce1fd50_VarDecl> _41738_v,jule::Ref<jule::Int> _41755_i,jule::Slice<_11ce22a00_Token> _41764_tokens) {
	_11ce22a00_Token _41813_tok = _41764_tokens[static_cast<jule::Int>(_41755_i)];
	{
		auto _match_expr{ _41813_tok._field_id };
		if (!(38LLU == _match_expr)) { goto _case_end_4701653488; }
		_case_begin_4701653488:;
		{
			_41738_v->_field_statically=true;
			goto _case_begin_4701655648;
		}
		goto _match_end_4701652576;
		_case_end_4701653488:;
		if (!(34LLU == _match_expr)) { goto _case_end_4701655648; }
		_case_begin_4701655648:;
		{
			(_41755_i)++;
			if ((_41764_tokens[static_cast<jule::Int>(_41755_i)]._field_id == 36LLU)) {
				_41738_v->_field_mutable=true;
				(_41755_i)++;
			}
		}
		goto _match_end_4701652576;
		_case_end_4701655648:;
		if (!(9LLU == _match_expr)) { goto _case_end_4701655760; }
		_case_begin_4701655760:;
		{
			(_41755_i)++;
			if (_41738_v->_field_constant) {
				(*this)._method_push_err(_41813_tok,jule::Str("already_const", 13),jule::Slice<jule::Any>({}));
				goto _match_end_4701652576;
			}
			_41738_v->_field_constant=true;
			if ((!_41738_v->_field_mutable)) {
				goto _match_end_4701652576;
			}
			goto _case_begin_4701652688;
		}
		goto _match_end_4701652576;
		_case_end_4701655760:;
		_case_begin_4701652688:;
		{
			(*this)._method_push_err(_41813_tok,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4701652576;
		_case_end_4701652688:;
		_match_end_4701652576:;
	}
	if ((_41755_i >= static_cast<jule::I64>(_41764_tokens.len()))) {
		(*this)._method_push_err(_41813_tok,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
}



inline jule::Ref<_11ce1fd50_VarDecl> _10e5e45f0_Parser::_method_build_var(jule::Slice<_11ce22a00_Token> _45533_tokens) {
	jule::Ref<jule::Int> _45617_i = jule::new_ref<jule::Int>(0LL);
	jule::Ref<_11ce1fd50_VarDecl> _45717_v = jule::new_struct<_11ce1fd50_VarDecl>(new( std::nothrow ) _11ce1fd50_VarDecl(jule::Ref<_11ce1fd50_ScopeTree>(),_45533_tokens[static_cast<jule::Int>(_45617_i)],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_11ce1fd50_CommentGroup>(),jule::Ref<_11ce1fd50_TypeDecl>(),jule::Ref<_11ce1fd50_Expr>()));
	this->self->_method_build_var_begin(_45717_v,_45617_i,_45533_tokens);
	if ((_45617_i >= static_cast<jule::I64>(_45533_tokens.len()))) {
		return jule::new_ref<_11ce1fd50_VarDecl>();
	}
	_45533_tokens=_45533_tokens.slice(static_cast<jule::Int>(_45617_i));
	if (((_45533_tokens[static_cast<jule::Int>(0LL)]._field_id == 7LLU) && (_45533_tokens[static_cast<jule::Int>(0LL)]._field_kind == jule::Str("&", 1)))) {
		_45717_v->_field_reference=true;
		if ((static_cast<jule::I64>(_45533_tokens.len()) == 1LL)) {
			return jule::new_ref<_11ce1fd50_VarDecl>();
		}
		_45533_tokens=_45533_tokens.slice(static_cast<jule::Int>(1LL));
	}
	this->self->_method_build_var_common(_45717_v,_45533_tokens);
	return _45717_v;
}



inline jule::Ref<_11ce1fd50_GenericDecl> _10e5e45f0_Parser::_method_build_generic(jule::Slice<_11ce22a00_Token> _47736_tokens) {
	if ((static_cast<jule::I64>(_47736_tokens.len()) > 1LL)) {
		(*this)._method_push_err(_47736_tokens[static_cast<jule::Int>(1LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_11ce1fd50_GenericDecl> _48117_g = jule::new_struct<_11ce1fd50_GenericDecl>(new( std::nothrow ) _11ce1fd50_GenericDecl(_47736_tokens[static_cast<jule::Int>(0LL)],jule::Str()));
	if ((_48117_g->_field_token._field_id != 2LLU)) {
		(*this)._method_push_err(_48117_g->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	_48117_g->_field_ident=_48117_g->_field_token._field_kind;
	return _48117_g;
}



inline jule::Slice<jule::Ref<_11ce1fd50_GenericDecl>> _10e5e45f0_Parser::_method_build_generics(jule::Slice<_11ce22a00_Token> _49137_tokens,_11ce22a00_Token _49154_error_token) {
	if ((static_cast<jule::I64>(_49137_tokens.len()) == 0LL)) {
		(*this)._method_push_err(_49154_error_token,jule::Str("missing_expr", 12),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	jule::Slice<jule::Slice<_11ce22a00_Token>> _49718_parts{};
	jule::Slice<_13cfd2d20_Log> _49725_errors{};
	std::tie(_49718_parts,_49725_errors) = _10e5e45f0_parts(_49137_tokens,8LLU,true);
	(*this)._field_errors=append((*this)._field_errors,_49725_errors);
	jule::Slice<jule::Ref<_11ce1fd50_GenericDecl>> _50017_generics = jule::Slice<jule::Ref<_11ce1fd50_GenericDecl>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_49718_parts.len())));
	{
		auto &__julec_range_expr = _49718_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e5e45f0_i{jule::Int()};_10e5e45f0_i = 0;
			jule::Slice<_11ce22a00_Token> _10e5e45f0_part{jule::Slice<_11ce22a00_Token>()};_10e5e45f0_part = *__julec_range_begin;
			_iter_begin_4701713552:;
			{
				if ((static_cast<jule::I64>(_49718_parts.len()) > 0LL)) {
					_50017_generics[static_cast<jule::Int>(_10e5e45f0_i)]=(*this)._method_build_generic(_10e5e45f0_part);
				}
			}
			_iter_next_4701713552:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e5e45f0_i; _10e5e45f0_part = *__julec_range_begin; goto _iter_begin_4701713552; }
			_iter_end_4701713552:;
		}
	}
	return _50017_generics;
}



inline jule::Ref<_11ce1fd50_ParamDecl> _10e5e45f0_Parser::_method_build_self_param(jule::Slice<_11ce22a00_Token> _51039_tokens) {
	if ((static_cast<jule::I64>(_51039_tokens.len()) == 0LL)) {
		return jule::new_ref<_11ce1fd50_ParamDecl>();
	}
	jule::Ref<_11ce1fd50_ParamDecl> _51517_param = jule::new_struct<_11ce1fd50_ParamDecl>(new( std::nothrow ) _11ce1fd50_ParamDecl());
	jule::Int _51817_i = 0LL;
	if ((_51039_tokens[static_cast<jule::Int>(_51817_i)]._field_id == 36LLU)) {
		_51517_param->_field_mutable=true;
		(_51817_i)++;
		if ((_51817_i >= static_cast<jule::I64>(_51039_tokens.len()))) {
			(*this)._method_push_err(_51039_tokens[static_cast<jule::Int>((_51817_i - 1LL))],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_11ce1fd50_ParamDecl>();
		}
	}
	if ((_51039_tokens[static_cast<jule::Int>(_51817_i)]._field_kind == jule::Str("&", 1))) {
		_51517_param->_field_ident=jule::Str("&", 1);
		(_51817_i)++;
		if ((_51817_i >= static_cast<jule::I64>(_51039_tokens.len()))) {
			(*this)._method_push_err(_51039_tokens[static_cast<jule::Int>((_51817_i - 1LL))],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_11ce1fd50_ParamDecl>();
		}
	}
	if ((_51039_tokens[static_cast<jule::Int>(_51817_i)]._field_id == 28LLU)) {
		_51517_param->_field_ident+=jule::Str("self", 4);
		_51517_param->_field_token=_51039_tokens[static_cast<jule::Int>(_51817_i)];
		(_51817_i)++;
		if ((_51817_i < static_cast<jule::I64>(_51039_tokens.len()))) {
			(*this)._method_push_err(_51039_tokens[static_cast<jule::Int>(_51817_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		}
	}
	return _51517_param;
}



inline void _10e5e45f0_Parser::_method_param_type_begin(jule::Ref<_11ce1fd50_ParamDecl> _54946_param,jule::Int* _54969_i,jule::Slice<_11ce22a00_Token> _54978_tokens) {
	_iter_begin_4701749632:;
	if (!(((*_54969_i) < static_cast<jule::I64>(_54978_tokens.len())))) { goto _iter_end_4701749632; }
	{
		_11ce22a00_Token _55117_token = _54978_tokens[static_cast<jule::Int>((*_54969_i))];
		if ((_55117_token._field_id != 7LLU)) {
			return;
		} else if ((_55117_token._field_kind != jule::Str("...", 3))) {
			return;
		}
		if (_54946_param->_field_variadic) {
			(*this)._method_push_err(_55117_token,jule::Str("already_variadic", 16),jule::Slice<jule::Any>({}));
			goto _iter_next_4701749632;
		}
		_54946_param->_field_variadic=true;
	}
	_iter_next_4701749632:;
	((*_54969_i))++;
	goto _iter_begin_4701749632;
	_iter_end_4701749632:;
}



inline void _10e5e45f0_Parser::_method_build_param_type(jule::Ref<_11ce1fd50_ParamDecl> _56640_param,jule::Slice<_11ce22a00_Token> _56663_tokens,jule::Bool _56680_must_pure) {
	jule::Int _56717_i = 0LL;
	if ((!_56680_must_pure)) {
		{
			this->self->_method_param_type_begin(_56640_param,(&_56717_i),_56663_tokens);
		}
		if ((_56717_i >= static_cast<jule::I64>(_56663_tokens.len()))) {
			return;
		}
	}
	std::tie(_56640_param->_field_kind,std::ignore) = this->self->_method_build_type(_56663_tokens,(&_56717_i),true);
	if ((_56717_i < static_cast<jule::I64>(_56663_tokens.len()))) {
		this->self->_method_push_err(_56663_tokens[static_cast<jule::Int>(_56717_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
}



inline void _10e5e45f0_Parser::_method_param_body_id(jule::Ref<_11ce1fd50_ParamDecl> _58032_param,_11ce22a00_Token _58051_token) {
	if (_11ce22a00_is_ignore_ident(_58051_token._field_kind)) {
		_58032_param->_field_ident=jule::Str("<anonymous>", 11);
		return;
	}
	_58032_param->_field_ident=_58051_token._field_kind;
}



inline void _10e5e45f0_Parser::_method_build_param_body(jule::Ref<_11ce1fd50_ParamDecl> _58840_param,jule::Ref<jule::Int> _58863_i,jule::Slice<_11ce22a00_Token> _58876_tokens,jule::Bool _58893_must_pure) {
	this->self->_method_param_body_id(_58840_param,_58876_tokens[static_cast<jule::Int>(_58863_i)]);
	_11ce22a00_Token _59017_tok = _58876_tokens[static_cast<jule::Int>(_58863_i)];
	if (((_58863_i + 1LL) >= static_cast<jule::I64>(_58876_tokens.len()))) {
		return;
	} else if ((static_cast<jule::I64>((static_cast<jule::I64>((static_cast<jule::I64>(_58876_tokens.len()) - _58863_i)) - 1LL)) < 2LL)) {
		this->self->_method_push_err(_59017_tok,jule::Str("missing_type", 12),jule::Slice<jule::Any>({}));
		return;
	}
	_59017_tok=_58876_tokens[static_cast<jule::Int>((_58863_i + 1LL))];
	if ((_59017_tok._field_id != 11LLU)) {
		this->self->_method_build_param_type(_58840_param,_58876_tokens,_58893_must_pure);
		return;
	}
	_58876_tokens=_58876_tokens.slice(static_cast<jule::Int>((_58863_i + 2LL)));
	this->self->_method_build_param_type(_58840_param,_58876_tokens,_58893_must_pure);
}



inline jule::Ref<_11ce1fd50_ParamDecl> _10e5e45f0_Parser::_method_build_param(jule::Slice<_11ce22a00_Token> _60935_tokens,jule::Bool _60952_must_pure) {
	jule::Ref<_11ce1fd50_ParamDecl> _61017_param = jule::new_struct<_11ce1fd50_ParamDecl>(new( std::nothrow ) _11ce1fd50_ParamDecl(_60935_tokens[static_cast<jule::Int>(0LL)],jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_11ce1fd50_TypeDecl>(),jule::Str()));
	if ((_61017_param->_field_token._field_id == 36LLU)) {
		_61017_param->_field_mutable=true;
		if ((static_cast<jule::I64>(_60935_tokens.len()) == 1LL)) {
			this->self->_method_push_err(_60935_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_11ce1fd50_ParamDecl>();
		}
		_60935_tokens=_60935_tokens.slice(static_cast<jule::Int>(1LL));
		_61017_param->_field_token=_60935_tokens[static_cast<jule::Int>(0LL)];
	}
	if ((static_cast<jule::I64>(_60935_tokens.len()) >= 3LL)) {
		if (((_61017_param->_field_token._field_id == 7LLU) && (_61017_param->_field_token._field_kind == jule::Str("&", 1)))) {
			if ((static_cast<jule::I64>(_60935_tokens.len()) == 1LL)) {
				this->self->_method_push_err(_60935_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return jule::new_ref<_11ce1fd50_ParamDecl>();
			}
			if (((_60935_tokens[static_cast<jule::Int>(1LL)]._field_id == 2LLU) && (_60935_tokens[static_cast<jule::Int>(2LL)]._field_id == 11LLU))) {
				_61017_param->_field_reference=true;
				_60935_tokens=_60935_tokens.slice(static_cast<jule::Int>(1LL));
				_61017_param->_field_token=_60935_tokens[static_cast<jule::Int>(0LL)];
			}
		}
	}
	if ((_61017_param->_field_token._field_id != 2LLU)) {
		_61017_param->_field_ident=jule::Str("<anonymous>", 11);
		this->self->_method_build_param_type(_61017_param,_60935_tokens,_60952_must_pure);
	} else {
		jule::Ref<jule::Int> _64621_i = jule::new_ref<jule::Int>(0LL);
		this->self->_method_build_param_body(_61017_param,_64621_i,_60935_tokens,_60952_must_pure);
	}
	return _61017_param;
}



inline void _10e5e45f0_Parser::_method_check_params(jule::Slice<jule::Ref<_11ce1fd50_ParamDecl>> _65335_params) {
	{
		auto &__julec_range_expr = _65335_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11ce1fd50_ParamDecl> _10e5e45f0_param{jule::Ref<_11ce1fd50_ParamDecl>()};_10e5e45f0_param = *__julec_range_begin;
			_iter_begin_4701862352:;
			{
				if ((_10e5e45f0_param->_method_is_self() || jule::real(_10e5e45f0_param->_field_kind))) {
					goto _iter_next_4701862352;
				}
				if ((_10e5e45f0_param->_field_token._field_id == 0LLU)) {
					(*this)._method_push_err(_10e5e45f0_param->_field_token,jule::Str("missing_type", 12),jule::Slice<jule::Any>({}));
				} else {
					_10e5e45f0_param->_field_kind=jule::new_struct<_11ce1fd50_TypeDecl>(new( std::nothrow ) _11ce1fd50_TypeDecl(_10e5e45f0_param->_field_token,jule::new_struct<_11ce1fd50_IdentTypeDecl>(new( std::nothrow ) _11ce1fd50_IdentTypeDecl(_10e5e45f0_param->_field_token,_10e5e45f0_param->_field_token._field_kind,jule::Bool(),jule::Slice<jule::Ref<_11ce1fd50_TypeDecl>>()))));
					_10e5e45f0_param->_field_ident=jule::Str("<anonymous>", 11);
					_10e5e45f0_param->_field_token=_11ce22a00_Token();
				}
			}
			_iter_next_4701862352:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e5e45f0_param = *__julec_range_begin; goto _iter_begin_4701862352; }
			_iter_end_4701862352:;
		}
	}
}



inline jule::Slice<jule::Ref<_11ce1fd50_ParamDecl>> _10e5e45f0_Parser::_method_build_params(jule::Slice<_11ce22a00_Token> _67436_tokens,jule::Bool _67453_method,jule::Bool _67467_must_pure) {
	jule::Slice<jule::Slice<_11ce22a00_Token>> _67518_parts{};
	jule::Slice<_13cfd2d20_Log> _67525_errs{};
	std::tie(_67518_parts,_67525_errs) = _10e5e45f0_parts(_67436_tokens,8LLU,true);
	this->self->_field_errors=append(this->self->_field_errors,_67525_errs);
	if ((static_cast<jule::I64>(_67518_parts.len()) == 0LL)) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_11ce1fd50_ParamDecl>> _68117_params = nullptr;
	if ((_67453_method && (static_cast<jule::I64>(_67518_parts.len()) > 0LL))) {
		jule::Ref<_11ce1fd50_ParamDecl> _68321_param = this->self->_method_build_self_param(_67518_parts[static_cast<jule::Int>(0LL)]);
		if ((jule::real(_68321_param) && _68321_param->_method_is_self())) {
			_68117_params=append(_68117_params,jule::Slice<jule::Ref<_11ce1fd50_ParamDecl>>({_68321_param}));
			_67518_parts=_67518_parts.slice(static_cast<jule::Int>(1LL));
		}
	}
	{
		auto &__julec_range_expr = _67518_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Slice<_11ce22a00_Token> _10e5e45f0_part{jule::Slice<_11ce22a00_Token>()};_10e5e45f0_part = *__julec_range_begin;
			_iter_begin_4701894976:;
			{
				jule::Ref<_11ce1fd50_ParamDecl> _69121_param = this->self->_method_build_param(_10e5e45f0_part,_67467_must_pure);
				if (jule::real(_69121_param)) {
					_68117_params=append(_68117_params,jule::Slice<jule::Ref<_11ce1fd50_ParamDecl>>({_69121_param}));
				}
			}
			_iter_next_4701894976:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e5e45f0_part = *__julec_range_begin; goto _iter_begin_4701894976; }
			_iter_end_4701894976:;
		}
	}
	this->self->_method_check_params(_68117_params);
	return _68117_params;
}



inline std::tuple<jule::Ref<_11ce1fd50_RetTypeDecl>,jule::Bool> _10e5e45f0_Parser::_method_build_multi_ret_type(jule::Slice<_11ce22a00_Token> _70151_tokens,jule::Int* _70172_i) {
	jule::Bool _701100_ok{jule::Bool()};
	jule::Ref<_11ce1fd50_RetTypeDecl> _70183_t{jule::Ref<_11ce1fd50_RetTypeDecl>()};
	_70183_t=jule::new_struct<_11ce1fd50_RetTypeDecl>(new( std::nothrow ) _11ce1fd50_RetTypeDecl());
	((*_70172_i))++;
	if (((*_70172_i) >= static_cast<jule::I64>(_70151_tokens.len()))) {
		((*_70172_i))--;
		std::tie(_70183_t->_field_kind,_701100_ok) = this->self->_method_build_type(_70151_tokens,_70172_i,false);
		return std::make_tuple(_70183_t,_701100_ok);
	}
	((*_70172_i))--;
	jule::Slice<_11ce22a00_Token> _71117_range_tokens = _10e5e45f0_range(_70172_i,jule::Str("(", 1),jule::Str(")", 1),_70151_tokens);
	jule::Slice<jule::Ref<_11ce1fd50_ParamDecl>> _71217_params = this->self->_method_build_params(_71117_range_tokens,false,true);
	jule::Slice<jule::Ref<_11ce1fd50_TypeDecl>> _71417_types = jule::Slice<jule::Ref<_11ce1fd50_TypeDecl>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_71217_params.len())));
	{
		auto &__julec_range_expr = _71217_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e5e45f0_i{jule::Int()};_10e5e45f0_i = 0;
			jule::Ref<_11ce1fd50_ParamDecl> _10e5e45f0_param{jule::Ref<_11ce1fd50_ParamDecl>()};_10e5e45f0_param = *__julec_range_begin;
			_iter_begin_4701921440:;
			{
				_71417_types[static_cast<jule::Int>(_10e5e45f0_i)]=_10e5e45f0_param->_field_kind;
				if ((_10e5e45f0_param->_field_ident != jule::Str("<anonymous>", 11))) {
					_10e5e45f0_param->_field_token._field_kind=_10e5e45f0_param->_field_ident;
				} else {
					_10e5e45f0_param->_field_token._field_kind=jule::Str("_", 1);
				}
				_70183_t->_field_idents=append(_70183_t->_field_idents,jule::Slice<_11ce22a00_Token>({_10e5e45f0_param->_field_token}));
			}
			_iter_next_4701921440:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e5e45f0_i; _10e5e45f0_param = *__julec_range_begin; goto _iter_begin_4701921440; }
			_iter_end_4701921440:;
		}
	}
	if ((static_cast<jule::I64>(_71417_types.len()) > 1LL)) {
		_70183_t->_field_kind=jule::new_struct<_11ce1fd50_TypeDecl>(new( std::nothrow ) _11ce1fd50_TypeDecl(_70151_tokens[static_cast<jule::Int>(0LL)],jule::new_struct<_11ce1fd50_TupleTypeDecl>(new( std::nothrow ) _11ce1fd50_TupleTypeDecl(_71417_types))));
	} else {
		_70183_t->_field_kind=_71417_types[static_cast<jule::Int>(0LL)];
	}
	_701100_ok=true;
	return std::make_tuple(_70183_t,_701100_ok);
}



inline std::tuple<jule::Ref<_11ce1fd50_RetTypeDecl>,jule::Bool> _10e5e45f0_Parser::_method_build_ret_type(jule::Slice<_11ce22a00_Token> _74045_tokens,jule::Int* _74066_i) {
	jule::Bool _74094_ok{jule::Bool()};
	jule::Ref<_11ce1fd50_RetTypeDecl> _74077_t{jule::Ref<_11ce1fd50_RetTypeDecl>()};
	_74077_t=jule::new_struct<_11ce1fd50_RetTypeDecl>(new( std::nothrow ) _11ce1fd50_RetTypeDecl());
	if (((*_74066_i) >= static_cast<jule::I64>(_74045_tokens.len()))) {
		return std::make_tuple(_74077_t,_74094_ok);
	}
	_11ce22a00_Token _74617_token = _74045_tokens[static_cast<jule::Int>((*_74066_i))];
	{
		auto _match_expr{ _74617_token._field_id };
		if (!(3LLU == _match_expr)) { goto _case_end_4701946640; }
		_case_begin_4701946640:;
		{
			if ((_74617_token._field_kind == jule::Str("{", 1))) {
				return std::make_tuple(_74077_t,_74094_ok);
			}
		}
		goto _match_end_4701946336;
		_case_end_4701946640:;
		if (!(7LLU == _match_expr)) { goto _case_end_4701946752; }
		_case_begin_4701946752:;
		{
			if ((_74617_token._field_kind == jule::Str("=", 1))) {
				return std::make_tuple(_74077_t,_74094_ok);
			}
		}
		goto _match_end_4701946336;
		_case_end_4701946752:;
		if (!(11LLU == _match_expr)) { goto _case_end_4701946864; }
		_case_begin_4701946864:;
		{
			if ((((*_74066_i) + 1LL) >= static_cast<jule::I64>(_74045_tokens.len()))) {
				this->self->_method_push_err(_74617_token,jule::Str("missing_type", 12),jule::Slice<jule::Any>({}));
				return std::make_tuple(_74077_t,_74094_ok);
			}
			((*_74066_i))++;
			_74617_token=_74045_tokens[static_cast<jule::Int>((*_74066_i))];
			if ((_74617_token._field_id == 3LLU)) {
				{
					auto _match_expr{ _74617_token._field_kind };
					if (!(jule::Str("(", 1) == _match_expr)) { goto _case_end_4701958560; }
					_case_begin_4701958560:;
					{
						return this->self->_method_build_multi_ret_type(_74045_tokens,_74066_i);
					}
					goto _match_end_4701958384;
					_case_end_4701958560:;
					if (!(jule::Str("{", 1) == _match_expr)) { goto _case_end_4701958672; }
					_case_begin_4701958672:;
					{
						this->self->_method_push_err(_74617_token,jule::Str("missing_type", 12),jule::Slice<jule::Any>({}));
						return std::make_tuple(_74077_t,_74094_ok);
					}
					goto _match_end_4701958384;
					_case_end_4701958672:;
					_match_end_4701958384:;
				}
			}
			std::tie(_74077_t->_field_kind,_74094_ok) = this->self->_method_build_type(_74045_tokens,_74066_i,true);
			return std::make_tuple(_74077_t,_74094_ok);
		}
		goto _match_end_4701946336;
		_case_end_4701946864:;
		_match_end_4701946336:;
	}
	((*_74066_i))++;
	this->self->_method_push_err(_74617_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	return std::make_tuple(_74077_t,_74094_ok);
}



inline jule::Ref<_11ce1fd50_FnDecl> _10e5e45f0_Parser::_method_build_fn_prototype(jule::Slice<_11ce22a00_Token> _78449_tokens,jule::Int* _78470_i,jule::Bool _78479_method,jule::Bool _78493_anon) {
	jule::Ref<_11ce1fd50_FnDecl> _78517_f = jule::new_struct<_11ce1fd50_FnDecl>(new( std::nothrow ) _11ce1fd50_FnDecl(_78449_tokens[static_cast<jule::Int>((*_78470_i))],jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::Slice<jule::Ref<_11ce1fd50_Directive>>(),jule::Ref<_11ce1fd50_CommentGroup>(),jule::Ref<_11ce1fd50_ScopeTree>(),jule::Slice<jule::Ref<_11ce1fd50_GenericDecl>>(),jule::Ref<_11ce1fd50_RetTypeDecl>(),jule::Slice<jule::Ref<_11ce1fd50_ParamDecl>>()));
	if ((_78517_f->_field_token._field_id == 38LLU)) {
		_78517_f->_field_statically=true;
		((*_78470_i))++;
		if (((*_78470_i) >= static_cast<jule::I64>(_78449_tokens.len()))) {
			this->self->_method_push_err(_78517_f->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_11ce1fd50_FnDecl>();
		}
		_78517_f->_field_token=_78449_tokens[static_cast<jule::Int>((*_78470_i))];
	}
	if ((_78517_f->_field_token._field_id == 35LLU)) {
		_78517_f->_field_unsafety=true;
		((*_78470_i))++;
		if (((*_78470_i) >= static_cast<jule::I64>(_78449_tokens.len()))) {
			this->self->_method_push_err(_78517_f->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_11ce1fd50_FnDecl>();
		}
		_78517_f->_field_token=_78449_tokens[static_cast<jule::Int>((*_78470_i))];
	}
	((*_78470_i))++;
	if (((*_78470_i) >= static_cast<jule::I64>(_78449_tokens.len()))) {
		this->self->_method_push_err(_78517_f->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11ce1fd50_FnDecl>();
	}
	if (_78493_anon) {
		_78517_f->_field_ident=jule::Str("<anonymous>", 11);
	} else {
		_11ce22a00_Token _82117_tok = _78449_tokens[static_cast<jule::Int>((*_78470_i))];
		if ((_82117_tok._field_id != 2LLU)) {
			this->self->_method_push_err(_82117_tok,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_11ce1fd50_FnDecl>();
		}
		_78517_f->_field_ident=_82117_tok._field_kind;
		((*_78470_i))++;
	}
	if (((*_78470_i) >= static_cast<jule::I64>(_78449_tokens.len()))) {
		this->self->_method_push_err(_78517_f->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11ce1fd50_FnDecl>();
	}
	_11ce22a00_Token _83513_error_token = _78449_tokens[static_cast<jule::Int>((*_78470_i))];
	jule::Slice<_11ce22a00_Token> _83617_generics_tokens = _10e5e45f0_range(_78470_i,jule::Str("[", 1),jule::Str("]", 1),_78449_tokens);
	if ((_83617_generics_tokens != nullptr)) {
		_78517_f->_field_generics=this->self->_method_build_generics(_83617_generics_tokens,_83513_error_token);
	}
	if ((_78449_tokens[static_cast<jule::Int>((*_78470_i))]._field_kind != jule::Str("(", 1))) {
		this->self->_method_push_err(_78449_tokens[static_cast<jule::Int>((*_78470_i))],jule::Str("missing_function_parentheses", 28),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11ce1fd50_FnDecl>();
	}
	jule::Slice<_11ce22a00_Token> _84617_params_toks = _10e5e45f0_range(_78470_i,jule::Str("(", 1),jule::Str(")", 1),_78449_tokens);
	if ((static_cast<jule::I64>(_84617_params_toks.len()) > 0LL)) {
		_78517_f->_field_params=this->self->_method_build_params(_84617_params_toks,_78479_method,false);
	}
	std::tie(_78517_f->_field_result,std::ignore) = this->self->_method_build_ret_type(_78449_tokens,_78470_i);
	return _78517_f;
}



inline jule::Ref<_11ce1fd50_FnDecl> _10e5e45f0_Parser::_method_build_fn(jule::Slice<_11ce22a00_Token> _85532_tokens,jule::Bool _85549_method,jule::Bool _85563_anon,jule::Bool _85575_prototype) {
	jule::Int _85617_i = 0LL;
	jule::Ref<_11ce1fd50_FnDecl> _85717_f = this->self->_method_build_fn_prototype(_85532_tokens,(&_85617_i),_85549_method,_85563_anon);
	if (_85575_prototype) {
		if ((_85617_i < static_cast<jule::I64>(_85532_tokens.len()))) {
			this->self->_method_push_err(_85532_tokens[static_cast<jule::Int>((_85617_i + 1LL))],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		}
		return _85717_f;
	} else if ((!jule::real(_85717_f))) {
		return _85717_f;
	}
	if ((_85617_i >= static_cast<jule::I64>(_85532_tokens.len()))) {
		this->self->_method_stop();
		this->self->_method_push_err(_85717_f->_field_token,jule::Str("body_not_exist", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11ce1fd50_FnDecl>();
	}
	jule::Slice<_11ce22a00_Token> _87217_block_tokens = _10e5e45f0_range((&_85617_i),jule::Str("{", 1),jule::Str("}", 1),_85532_tokens);
	if ((_87217_block_tokens != nullptr)) {
		_85717_f->_field_scope=this->self->_method_build_scope(_87217_block_tokens);
		_85717_f->_field_scope->_field_unsafety=_85717_f->_field_unsafety;
		if ((_85617_i < static_cast<jule::I64>(_85532_tokens.len()))) {
			this->self->_method_push_err(_85532_tokens[static_cast<jule::Int>(_85617_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		}
	} else {
		this->self->_method_stop();
		this->self->_method_push_err(_85717_f->_field_token,jule::Str("body_not_exist", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11ce1fd50_FnDecl>();
	}
	return _85717_f;
}



inline jule::Slice<_11ce22a00_Token> _10e5e45f0_Parser::_method_get_use_decl_selectors(jule::Slice<_11ce22a00_Token> _88745_tokens) {
	jule::Int _88817_i = 0LL;
	_88745_tokens=_10e5e45f0_range((&_88817_i),jule::Str("{", 1),jule::Str("}", 1),_88745_tokens);
	jule::Slice<jule::Slice<_11ce22a00_Token>> _89018_parts{};
	jule::Slice<_13cfd2d20_Log> _89025_errs{};
	std::tie(_89018_parts,_89025_errs) = _10e5e45f0_parts(_88745_tokens,8LLU,true);
	if ((static_cast<jule::I64>(_89025_errs.len()) > 0LL)) {
		(*this)._field_errors=append((*this)._field_errors,_89025_errs);
		return nullptr;
	}
	jule::Slice<_11ce22a00_Token> _89617_selectors = jule::Slice<_11ce22a00_Token>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_89018_parts.len())));
	{
		auto &__julec_range_expr = _89018_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e5e45f0_i{jule::Int()};_10e5e45f0_i = 0;
			jule::Slice<_11ce22a00_Token> _10e5e45f0_part{jule::Slice<_11ce22a00_Token>()};_10e5e45f0_part = *__julec_range_begin;
			_iter_begin_4702067248:;
			{
				if ((static_cast<jule::I64>(_10e5e45f0_part.len()) > 1LL)) {
					(*this)._method_push_err(_10e5e45f0_part[static_cast<jule::Int>(1LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				}
				_11ce22a00_Token _90121_tok = _10e5e45f0_part[static_cast<jule::Int>(0LL)];
				if (((_90121_tok._field_id != 2LLU) && (_90121_tok._field_id != 28LLU))) {
					(*this)._method_push_err(_90121_tok,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
					goto _iter_next_4702067248;
				}
				_89617_selectors[static_cast<jule::Int>(_10e5e45f0_i)]=_90121_tok;
			}
			_iter_next_4702067248:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e5e45f0_i; _10e5e45f0_part = *__julec_range_begin; goto _iter_begin_4702067248; }
			_iter_end_4702067248:;
		}
	}
	return _89617_selectors;
}



inline void _10e5e45f0_Parser::_method_build_cpp_use_decl(jule::Ref<_11ce1fd50_UseDecl> _91141_decl,jule::Slice<_11ce22a00_Token> _91157_tokens) {
	if ((static_cast<jule::I64>(_91157_tokens.len()) > 2LL)) {
		(*this)._method_push_err(_91157_tokens[static_cast<jule::Int>(2LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	_11ce22a00_Token _91513_token = _91157_tokens[static_cast<jule::Int>(1LL)];
	if (((_91513_token._field_id != 6LLU) || ((_91513_token._field_kind[static_cast<jule::Int>(0LL)] != '`') && (_91513_token._field_kind[static_cast<jule::Int>(0LL)] != '\"')))) {
		(*this)._method_push_err(_91513_token,jule::Str("invalid_expr", 12),jule::Slice<jule::Any>({}));
		return;
	}
	_91141_decl->_field_cpp_linked=true;
	_91141_decl->_field_link_path=_91513_token._field_kind.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_91513_token._field_kind.len()) - 1LL))));
	if ((!_11ce23cb0_is_std_header_path(_91141_decl->_field_link_path))) {
		_91141_decl->_field_link_path=_12ce95080_join(jule::Slice<jule::Str>({_91513_token._field_file->_method_dir(),_91141_decl->_field_link_path}));
	}
}



inline void _10e5e45f0_Parser::_method_build_std_use_decl(jule::Ref<_11ce1fd50_UseDecl> _92741_decl,jule::Slice<_11ce22a00_Token> _92761_tokens) {
	_92741_decl->_field_std=true;
	_11ce22a00_Token _93017_token = _92761_tokens[static_cast<jule::Int>(0LL)];
	if ((static_cast<jule::I64>(_92761_tokens.len()) < 3LL)) {
		(*this)._method_push_err(_93017_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return;
	}
	_92761_tokens=_92761_tokens.slice(static_cast<jule::Int>(2LL));
	_93017_token=_92761_tokens[static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_92761_tokens.len()) - 1LL)))];
	{
		auto _match_expr{ _93017_token._field_id };
		if (!(23LLU == _match_expr)) { goto _case_end_4702117392; }
		_case_begin_4702117392:;
		{
			(*this)._method_push_err(_93017_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4702117216;
		_case_end_4702117392:;
		if (!(3LLU == _match_expr)) { goto _case_end_4702117504; }
		_case_begin_4702117504:;
		{
			if ((_93017_token._field_kind != jule::Str("}", 1))) {
				(*this)._method_push_err(_93017_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			jule::Slice<_11ce22a00_Token> _94821_selectors = nullptr;
			std::tie(_92761_tokens,_94821_selectors) = _10e5e45f0_range_last(_92761_tokens);
			_92741_decl->_field_selected=(*this)._method_get_use_decl_selectors(_94821_selectors);
			if ((static_cast<jule::I64>(_92761_tokens.len()) == 0LL)) {
				(*this)._method_push_err(_93017_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_93017_token=_92761_tokens[static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_92761_tokens.len()) - 1LL)))];
			if ((_93017_token._field_id != 23LLU)) {
				(*this)._method_push_err(_93017_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_92761_tokens=_92761_tokens.slice(0LL,static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_92761_tokens.len()) - 1LL))));
			if ((static_cast<jule::I64>(_92761_tokens.len()) == 0LL)) {
				(*this)._method_push_err(_93017_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
		}
		goto _match_end_4702117216;
		_case_end_4702117504:;
		if (!(7LLU == _match_expr)) { goto _case_end_4702117616; }
		_case_begin_4702117616:;
		{
			if ((_93017_token._field_kind != jule::Str("*", 1))) {
				(*this)._method_push_err(_93017_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_92761_tokens=_92761_tokens.slice(0LL,static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_92761_tokens.len()) - 1LL))));
			if ((static_cast<jule::I64>(_92761_tokens.len()) == 0LL)) {
				(*this)._method_push_err(_93017_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_93017_token=_92761_tokens[static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_92761_tokens.len()) - 1LL)))];
			if ((_93017_token._field_id != 23LLU)) {
				(*this)._method_push_err(_93017_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_92761_tokens=_92761_tokens.slice(0LL,static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_92761_tokens.len()) - 1LL))));
			if ((static_cast<jule::I64>(_92761_tokens.len()) == 0LL)) {
				(*this)._method_push_err(_93017_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_92741_decl->_field_full=true;
		}
		goto _match_end_4702117216;
		_case_end_4702117616:;
		_match_end_4702117216:;
	}
	_92741_decl->_field_link_path=(jule::Str("std::", 5) + _10e5e45f0_tokstoa(_92761_tokens));
}



inline void _10e5e45f0_Parser::_method_build_ident_use_decl(jule::Ref<_11ce1fd50_UseDecl> _99143_decl,jule::Slice<_11ce22a00_Token> _99163_tokens) {
	_99143_decl->_field_std=false;
	_11ce22a00_Token _99417_token = _99163_tokens[static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_99163_tokens.len()) - 1LL)))];
	{
		auto _match_expr{ _99417_token._field_id };
		if (!(23LLU == _match_expr)) { goto _case_end_4702166880; }
		_case_begin_4702166880:;
		{
			(*this)._method_push_err(_99417_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4702168624;
		_case_end_4702166880:;
		if (!(3LLU == _match_expr)) { goto _case_end_4702168736; }
		_case_begin_4702168736:;
		{
			if ((_99417_token._field_kind != jule::Str("}", 1))) {
				(*this)._method_push_err(_99417_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			jule::Slice<_11ce22a00_Token> _100621_selectors = nullptr;
			std::tie(_99163_tokens,_100621_selectors) = _10e5e45f0_range_last(_99163_tokens);
			_99143_decl->_field_selected=(*this)._method_get_use_decl_selectors(_100621_selectors);
			if ((static_cast<jule::I64>(_99163_tokens.len()) == 0LL)) {
				(*this)._method_push_err(_99417_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_99417_token=_99163_tokens[static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_99163_tokens.len()) - 1LL)))];
			if ((_99417_token._field_id != 23LLU)) {
				(*this)._method_push_err(_99417_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_99163_tokens=_99163_tokens.slice(0LL,static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_99163_tokens.len()) - 1LL))));
			if ((static_cast<jule::I64>(_99163_tokens.len()) == 0LL)) {
				(*this)._method_push_err(_99417_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
		}
		goto _match_end_4702168624;
		_case_end_4702168736:;
		if (!(7LLU == _match_expr)) { goto _case_end_4702168848; }
		_case_begin_4702168848:;
		{
			if ((_99417_token._field_kind != jule::Str("*", 1))) {
				(*this)._method_push_err(_99417_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_99163_tokens=_99163_tokens.slice(0LL,static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_99163_tokens.len()) - 1LL))));
			if ((static_cast<jule::I64>(_99163_tokens.len()) == 0LL)) {
				(*this)._method_push_err(_99417_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_99417_token=_99163_tokens[static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_99163_tokens.len()) - 1LL)))];
			if ((_99417_token._field_id != 23LLU)) {
				(*this)._method_push_err(_99417_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_99163_tokens=_99163_tokens.slice(0LL,static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_99163_tokens.len()) - 1LL))));
			if ((static_cast<jule::I64>(_99163_tokens.len()) == 0LL)) {
				(*this)._method_push_err(_99417_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_99143_decl->_field_full=true;
		}
		goto _match_end_4702168624;
		_case_end_4702168848:;
		_match_end_4702168624:;
	}
	_99143_decl->_field_link_path=_10e5e45f0_tokstoa(_99163_tokens);
}



inline void _10e5e45f0_Parser::_method_parse_use_decl(jule::Ref<_11ce1fd50_UseDecl> _105637_decl,jule::Slice<_11ce22a00_Token> _105657_tokens) {
	_11ce22a00_Token _105713_token = _105657_tokens[static_cast<jule::Int>(0LL)];
	if ((_105713_token._field_id == 31LLU)) {
		(*this)._method_build_cpp_use_decl(_105637_decl,_105657_tokens);
		return;
	}
	if ((_105713_token._field_id != 2LLU)) {
		(*this)._method_push_err(_105713_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return;
	}
	
	{
		auto _match_expr{ true };
		if (!((_105713_token._field_kind == jule::Str("std", 3)) == _match_expr)) { goto _case_end_4702225392; }
		_case_begin_4702225392:;
		{
			(*this)._method_build_std_use_decl(_105637_decl,_105657_tokens);
		}
		goto _match_end_4702223584;
		_case_end_4702225392:;
		_case_begin_4702223808:;
		{
			(*this)._method_build_ident_use_decl(_105637_decl,_105657_tokens);
		}
		goto _match_end_4702223584;
		_case_end_4702223808:;
		_match_end_4702223584:;
	}
}



inline jule::Ref<_11ce1fd50_UseDecl> _10e5e45f0_Parser::_method_build_use_decl(jule::Slice<_11ce22a00_Token> _107937_tokens) {
	jule::Ref<_11ce1fd50_UseDecl> _108017_decl = jule::new_struct<_11ce1fd50_UseDecl>(new( std::nothrow ) _11ce1fd50_UseDecl(_107937_tokens[static_cast<jule::Int>(0LL)],jule::Str(),jule::Bool(),jule::Slice<_11ce22a00_Token>(),jule::Bool(),jule::Bool()));
	if ((static_cast<jule::I64>(_107937_tokens.len()) < 2LL)) {
		(*this)._method_push_err(_108017_decl->_field_token,jule::Str("missing_use_path", 16),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11ce1fd50_UseDecl>();
	}
	_107937_tokens=_107937_tokens.slice(static_cast<jule::Int>(1LL));
	(*this)._method_parse_use_decl(_108017_decl,_107937_tokens);
	return _108017_decl;
}



inline jule::Ref<_11ce1fd50_Expr> _10e5e45f0_Parser::_method_build_enum_item_expr(jule::Ref<jule::Int> _109244_i,jule::Slice<_11ce22a00_Token> _109257_tokens) {
	jule::Int _109317_brace_n = 0LL;
	jule::Int _109413_expr_start = _109244_i;
	_iter_begin_4702244144:;
	if (!((_109244_i < static_cast<jule::I64>(_109257_tokens.len())))) { goto _iter_end_4702244144; }
	{
		_11ce22a00_Token _109617_t = _109257_tokens[static_cast<jule::Int>(_109244_i)];
		if ((_109617_t._field_id == 3LLU)) {
			{
				auto _match_expr{ _109617_t._field_kind };
				if (!(jule::Str("{", 1) == _match_expr || jule::Str("[", 1) == _match_expr || jule::Str("(", 1) == _match_expr)) { goto _case_end_4702251760; }
				_case_begin_4702251760:;
				{
					(_109317_brace_n)++;
					goto _iter_next_4702244144;
				}
				goto _match_end_4702249376;
				_case_end_4702251760:;
				_case_begin_4702250256:;
				{
					(_109317_brace_n)--;
				}
				goto _match_end_4702249376;
				_case_end_4702250256:;
				_match_end_4702249376:;
			}
		}
		if ((_109317_brace_n > 0LL)) {
			goto _iter_next_4702244144;
		}
		if (((_109617_t._field_id == 8LLU) || ((_109244_i + 1LL) >= static_cast<jule::I64>(_109257_tokens.len())))) {
			jule::Slice<_11ce22a00_Token> _111525_expr_tokens = nullptr;
			if ((_109617_t._field_id == 8LLU)) {
				_111525_expr_tokens=_109257_tokens.slice(static_cast<jule::Int>(_109413_expr_start),static_cast<jule::Int>(_109244_i));
			} else {
				_111525_expr_tokens=_109257_tokens.slice(static_cast<jule::Int>(_109413_expr_start));
			}
			return this->self->_method_build_expr(_111525_expr_tokens);
		}
	}
	_iter_next_4702244144:;
	(_109244_i)++;
	goto _iter_begin_4702244144;
	_iter_end_4702244144:;
	return jule::new_ref<_11ce1fd50_Expr>();
}



inline jule::Slice<jule::Ref<_11ce1fd50_EnumItemDecl>> _10e5e45f0_Parser::_method_build_enum_items(jule::Slice<_11ce22a00_Token> _112740_tokens) {
	jule::Slice<jule::Ref<_11ce1fd50_EnumItemDecl>> _112817_items = jule::Slice<jule::Ref<_11ce1fd50_EnumItemDecl>>::alloc(static_cast<jule::Int>(0LL));
	jule::Ref<jule::Int> _112917_i = jule::new_ref<jule::Int>(0LL);
	_iter_begin_4702266496:;
	if (!((_112917_i < static_cast<jule::I64>(_112740_tokens.len())))) { goto _iter_end_4702266496; }
	{
		_11ce22a00_Token _113121_t = _112740_tokens[static_cast<jule::Int>(_112917_i)];
		if ((_113121_t._field_id == 18LLU)) {
			goto _iter_next_4702266496;
		}
		jule::Ref<_11ce1fd50_EnumItemDecl> _113621_item = jule::new_struct<_11ce1fd50_EnumItemDecl>(new( std::nothrow ) _11ce1fd50_EnumItemDecl());
		_113621_item->_field_token=_113121_t;
		if ((_113621_item->_field_token._field_id != 2LLU)) {
			this->self->_method_push_err(_113621_item->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		}
		_113621_item->_field_ident=_113621_item->_field_token._field_kind;
		if ((((_112917_i + 1LL) >= static_cast<jule::I64>(_112740_tokens.len())) || (_112740_tokens[static_cast<jule::Int>((_112917_i + 1LL))]._field_id == 8LLU))) {
			if (((_112917_i + 1LL) < static_cast<jule::I64>(_112740_tokens.len()))) {
				(_112917_i)++;
			}
			_112817_items=append(_112817_items,jule::Slice<jule::Ref<_11ce1fd50_EnumItemDecl>>({_113621_item}));
			goto _iter_next_4702266496;
		}
		(_112917_i)++;
		_113121_t=_112740_tokens[static_cast<jule::Int>(_112917_i)];
		if (((_113121_t._field_id != 7LLU) && (_113121_t._field_kind != jule::Str("=", 1)))) {
			this->self->_method_push_err(_112740_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		}
		(_112917_i)++;
		if (((_112917_i >= static_cast<jule::I64>(_112740_tokens.len())) || (_112740_tokens[static_cast<jule::Int>(_112917_i)]._field_id == 8LLU))) {
			this->self->_method_push_err(_112740_tokens[static_cast<jule::Int>(0LL)],jule::Str("missing_expr", 12),jule::Slice<jule::Any>({}));
			goto _iter_next_4702266496;
		}
		_113621_item->_field_expr=this->self->_method_build_enum_item_expr(_112917_i,_112740_tokens);
		_112817_items=append(_112817_items,jule::Slice<jule::Ref<_11ce1fd50_EnumItemDecl>>({_113621_item}));
	}
	_iter_next_4702266496:;
	(_112917_i)++;
	goto _iter_begin_4702266496;
	_iter_end_4702266496:;
	return _112817_items;
}



inline jule::Ref<_11ce1fd50_EnumDecl> _10e5e45f0_Parser::_method_build_enum_decl(jule::Slice<_11ce22a00_Token> _116539_tokens) {
	if (((static_cast<jule::I64>(_116539_tokens.len()) < 2LL) || (static_cast<jule::I64>(_116539_tokens.len()) < 3LL))) {
		this->self->_method_push_err(_116539_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11ce1fd50_EnumDecl>();
	}
	jule::Ref<_11ce1fd50_EnumDecl> _117017_e = jule::new_struct<_11ce1fd50_EnumDecl>(new( std::nothrow ) _11ce1fd50_EnumDecl(_116539_tokens[static_cast<jule::Int>(1LL)],jule::Bool(),jule::Str(),jule::Ref<_11ce1fd50_TypeDecl>(),jule::Slice<jule::Ref<_11ce1fd50_EnumItemDecl>>(),jule::Ref<_11ce1fd50_CommentGroup>()));
	if ((_117017_e->_field_token._field_id != 2LLU)) {
		this->self->_method_push_err(_117017_e->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	_117017_e->_field_ident=_117017_e->_field_token._field_kind;
	jule::Int _117717_i = 2LL;
	if ((_116539_tokens[static_cast<jule::Int>(_117717_i)]._field_id == 11LLU)) {
		(_117717_i)++;
		if ((_117717_i >= static_cast<jule::I64>(_116539_tokens.len()))) {
			this->self->_method_push_err(_116539_tokens[static_cast<jule::Int>((_117717_i - 1LL))],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return _117017_e;
		}
		std::tie(_117017_e->_field_kind,std::ignore) = this->self->_method_build_type(_116539_tokens,(&_117717_i),true);
		if ((_117717_i >= static_cast<jule::I64>(_116539_tokens.len()))) {
			this->self->_method_stop();
			this->self->_method_push_err(_117017_e->_field_token,jule::Str("body_not_exist", 14),jule::Slice<jule::Any>({}));
			return _117017_e;
		}
	} else {
		jule::drop(_117017_e->_field_kind);
	}
	jule::Slice<_11ce22a00_Token> _119317_item_tokens = _10e5e45f0_range((&_117717_i),jule::Str("{", 1),jule::Str("}", 1),_116539_tokens);
	if ((_119317_item_tokens == nullptr)) {
		this->self->_method_stop();
		this->self->_method_push_err(_117017_e->_field_token,jule::Str("body_not_exist", 14),jule::Slice<jule::Any>({}));
		return _117017_e;
	} else if ((_117717_i < static_cast<jule::I64>(_116539_tokens.len()))) {
		this->self->_method_push_err(_116539_tokens[static_cast<jule::Int>(_117717_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	_117017_e->_field_items=this->self->_method_build_enum_items(_119317_item_tokens);
	return _117017_e;
}



inline jule::Ref<_11ce1fd50_FieldDecl> _10e5e45f0_Parser::_method_build_field(jule::Slice<_11ce22a00_Token> _120535_tokens) {
	jule::Ref<_11ce1fd50_FieldDecl> _120617_f = jule::new_struct<_11ce1fd50_FieldDecl>(new( std::nothrow ) _11ce1fd50_FieldDecl());
	_120617_f->_field_public=(_120535_tokens[static_cast<jule::Int>(0LL)]._field_id == 21LLU);
	if (_120617_f->_field_public) {
		if ((static_cast<jule::I64>(_120535_tokens.len()) == 1LL)) {
			this->self->_method_push_err(_120535_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_11ce1fd50_FieldDecl>();
		}
		_120535_tokens=_120535_tokens.slice(static_cast<jule::Int>(1LL));
	}
	_120617_f->_field_mutable=(_120535_tokens[static_cast<jule::Int>(0LL)]._field_id == 36LLU);
	if (_120617_f->_field_mutable) {
		if ((static_cast<jule::I64>(_120535_tokens.len()) == 1LL)) {
			this->self->_method_push_err(_120535_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_11ce1fd50_FieldDecl>();
		}
		_120535_tokens=_120535_tokens.slice(static_cast<jule::Int>(1LL));
	}
	_120617_f->_field_token=_120535_tokens[static_cast<jule::Int>(0LL)];
	if ((_120617_f->_field_token._field_id != 2LLU)) {
		this->self->_method_push_err(_120617_f->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11ce1fd50_FieldDecl>();
	}
	_120617_f->_field_ident=_120617_f->_field_token._field_kind;
	if ((static_cast<jule::I64>(_120535_tokens.len()) == 1LL)) {
		this->self->_method_push_err(_120535_tokens[static_cast<jule::Int>(0LL)],jule::Str("missing_type", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11ce1fd50_FieldDecl>();
	} else if ((_120535_tokens[static_cast<jule::Int>(1LL)]._field_id != 11LLU)) {
		this->self->_method_push_err(_120535_tokens[static_cast<jule::Int>(1LL)],jule::Str("missing_type", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11ce1fd50_FieldDecl>();
	}
	_120535_tokens=_120535_tokens.slice(static_cast<jule::Int>(2LL));
	jule::Int _124217_i = 0LL;
	std::tie(_120617_f->_field_kind,std::ignore) = this->self->_method_build_type(_120535_tokens,(&_124217_i),true);
	if ((_124217_i < static_cast<jule::I64>(_120535_tokens.len()))) {
		this->self->_method_push_err(_120535_tokens[static_cast<jule::Int>(_124217_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11ce1fd50_FieldDecl>();
	}
	return _120617_f;
}



inline jule::Slice<jule::Ref<_11ce1fd50_FieldDecl>> _10e5e45f0_Parser::_method_build_struct_decl_fields(jule::Slice<_11ce22a00_Token> _125248_tokens) {
	jule::Slice<jule::Ref<_11ce1fd50_FieldDecl>> _125317_fields = nullptr;
	jule::Slice<jule::Ref<_10e3d3e70_Stmt>> _125417_stms = _10e3d3e70_split_stms(_125248_tokens);
	{
		auto &__julec_range_expr = _125417_stms;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e3d3e70_Stmt> _10e5e45f0_st{jule::Ref<_10e3d3e70_Stmt>()};_10e5e45f0_st = *__julec_range_begin;
			_iter_begin_4702393840:;
			{
				jule::Slice<_11ce22a00_Token> _125621_tokens = _10e5e45f0_st->_field_tokens;
				if ((_125621_tokens[static_cast<jule::Int>(0LL)]._field_id == 18LLU)) {
					goto _iter_next_4702393840;
				}
				jule::Ref<_11ce1fd50_FieldDecl> _126021_f = this->self->_method_build_field(_125621_tokens);
				_125317_fields=append(_125317_fields,jule::Slice<jule::Ref<_11ce1fd50_FieldDecl>>({_126021_f}));
			}
			_iter_next_4702393840:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e5e45f0_st = *__julec_range_begin; goto _iter_begin_4702393840; }
			_iter_end_4702393840:;
		}
	}
	return _125317_fields;
}



inline jule::Ref<_11ce1fd50_StructDecl> _10e5e45f0_Parser::_method_build_struct_decl(jule::Slice<_11ce22a00_Token> _126641_tokens) {
	if ((static_cast<jule::I64>(_126641_tokens.len()) < 3LL)) {
		this->self->_method_push_err(_126641_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11ce1fd50_StructDecl>();
	}
	jule::Int _127217_i = 1LL;
	jule::Ref<_11ce1fd50_StructDecl> _127317_s = jule::new_struct<_11ce1fd50_StructDecl>(new( std::nothrow ) _11ce1fd50_StructDecl(_126641_tokens[static_cast<jule::Int>(_127217_i)],jule::Str(),jule::Slice<jule::Ref<_11ce1fd50_FieldDecl>>(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ref<_11ce1fd50_Directive>>(),jule::Ref<_11ce1fd50_CommentGroup>(),jule::Slice<jule::Ref<_11ce1fd50_GenericDecl>>()));
	if ((_127317_s->_field_token._field_id != 2LLU)) {
		this->self->_method_push_err(_127317_s->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	(_127217_i)++;
	if ((_127217_i >= static_cast<jule::I64>(_126641_tokens.len()))) {
		this->self->_method_push_err(_126641_tokens[static_cast<jule::Int>(_127217_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return _127317_s;
	}
	_127317_s->_field_ident=_127317_s->_field_token._field_kind;
	_11ce22a00_Token _128613_error_token = _126641_tokens[static_cast<jule::Int>(_127217_i)];
	jule::Slice<_11ce22a00_Token> _128717_generics_tokens = _10e5e45f0_range((&_127217_i),jule::Str("[", 1),jule::Str("]", 1),_126641_tokens);
	if ((_128717_generics_tokens != nullptr)) {
		_127317_s->_field_generics=this->self->_method_build_generics(_128717_generics_tokens,_128613_error_token);
	}
	if ((_127217_i >= static_cast<jule::I64>(_126641_tokens.len()))) {
		this->self->_method_push_err(_126641_tokens[static_cast<jule::Int>(_127217_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return _127317_s;
	}
	jule::Slice<_11ce22a00_Token> _129617_body_tokens = _10e5e45f0_range((&_127217_i),jule::Str("{", 1),jule::Str("}", 1),_126641_tokens);
	if ((_129617_body_tokens == nullptr)) {
		this->self->_method_stop();
		this->self->_method_push_err(_127317_s->_field_token,jule::Str("body_not_exist", 14),jule::Slice<jule::Any>({}));
		return _127317_s;
	}
	if ((_127217_i < static_cast<jule::I64>(_126641_tokens.len()))) {
		this->self->_method_push_err(_126641_tokens[static_cast<jule::Int>(_127217_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	_127317_s->_field_fields=this->self->_method_build_struct_decl_fields(_129617_body_tokens);
	return _127317_s;
}



inline void _10e5e45f0_Parser::_method_check_method_receiver(jule::Ref<_11ce1fd50_FnDecl> _130940_f) {
	if (_130940_f->_field_statically) {
		if (((static_cast<jule::I64>(_130940_f->_field_params.len()) > 0LL) && _130940_f->_field_params[static_cast<jule::Int>(0LL)]->_method_is_self())) {
			(*this)._method_push_err(_130940_f->_field_token,jule::Str("static_function_has_receiver", 28),jule::Slice<jule::Any>({}));
		}
		return;
	}
	if ((static_cast<jule::I64>(_130940_f->_field_params.len()) == 0LL)) {
		(*this)._method_push_err(_130940_f->_field_token,jule::Str("missing_receiver", 16),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_11ce1fd50_ParamDecl> _132213_param = _130940_f->_field_params[static_cast<jule::Int>(0LL)];
	if ((!_132213_param->_method_is_self())) {
		(*this)._method_push_err(_130940_f->_field_token,jule::Str("missing_receiver", 16),jule::Slice<jule::Any>({}));
		return;
	}
}



inline jule::Slice<jule::Ref<_11ce1fd50_FnDecl>> _10e5e45f0_Parser::_method_build_trait_methods(jule::Slice<_11ce22a00_Token> _132943_tokens) {
	jule::Slice<jule::Ref<_11ce1fd50_FnDecl>> _133017_methods = nullptr;
	jule::Slice<jule::Ref<_10e3d3e70_Stmt>> _133117_stms = _10e3d3e70_split_stms(_132943_tokens);
	{
		auto &__julec_range_expr = _133117_stms;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e3d3e70_Stmt> _10e5e45f0_st{jule::Ref<_10e3d3e70_Stmt>()};_10e5e45f0_st = *__julec_range_begin;
			_iter_begin_4702467984:;
			{
				jule::Slice<_11ce22a00_Token> _133321_tokens = _10e3df5b0_eliminate_comments(_10e5e45f0_st->_field_tokens);
				if ((static_cast<jule::I64>(_133321_tokens.len()) == 0LL)) {
					goto _iter_next_4702467984;
				}
				jule::Ref<_11ce1fd50_FnDecl> _133821_f = this->self->_method_build_fn(_133321_tokens,true,false,true);
				if (jule::real(_133821_f)) {
					this->self->_method_check_method_receiver(_133821_f);
					if ((static_cast<jule::I64>(_133821_f->_field_generics.len()) > 0LL)) {
						this->self->_method_push_err(_133821_f->_field_token,jule::Str("trait_method_has_generics", 25),jule::Slice<jule::Any>({}));
					}
					_133821_f->_field_public=true;
					_133017_methods=append(_133017_methods,jule::Slice<jule::Ref<_11ce1fd50_FnDecl>>({_133821_f}));
				}
			}
			_iter_next_4702467984:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e5e45f0_st = *__julec_range_begin; goto _iter_begin_4702467984; }
			_iter_end_4702467984:;
		}
	}
	return _133017_methods;
}



inline jule::Ref<_11ce1fd50_TraitDecl> _10e5e45f0_Parser::_method_build_trait_decl(jule::Slice<_11ce22a00_Token> _135140_tokens) {
	if ((static_cast<jule::I64>(_135140_tokens.len()) < 3LL)) {
		this->self->_method_push_err(_135140_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11ce1fd50_TraitDecl>();
	}
	jule::Ref<_11ce1fd50_TraitDecl> _135617_t = jule::new_struct<_11ce1fd50_TraitDecl>(new( std::nothrow ) _11ce1fd50_TraitDecl(_135140_tokens[static_cast<jule::Int>(1LL)],jule::Str(),jule::Bool(),jule::Ref<_11ce1fd50_CommentGroup>(),jule::Slice<jule::Ref<_11ce1fd50_FnDecl>>()));
	if ((_135617_t->_field_token._field_id != 2LLU)) {
		this->self->_method_push_err(_135617_t->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	_135617_t->_field_ident=_135617_t->_field_token._field_kind;
	jule::Int _136317_i = 2LL;
	jule::Slice<_11ce22a00_Token> _136417_body_tokens = _10e5e45f0_range((&_136317_i),jule::Str("{", 1),jule::Str("}", 1),_135140_tokens);
	if ((_136417_body_tokens == nullptr)) {
		this->self->_method_stop();
		this->self->_method_push_err(_135617_t->_field_token,jule::Str("body_not_exist", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11ce1fd50_TraitDecl>();
	}
	if ((_136317_i < static_cast<jule::I64>(_135140_tokens.len()))) {
		this->self->_method_push_err(_135140_tokens[static_cast<jule::Int>(_136317_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	_135617_t->_field_methods=this->self->_method_build_trait_methods(_136417_body_tokens);
	return _135617_t;
}



inline jule::Ref<_11ce1fd50_FnDecl> _10e5e45f0_Parser::_method_build_cpp_link_fn(jule::Slice<_11ce22a00_Token> _137741_tokens) {
	_137741_tokens=_137741_tokens.slice(static_cast<jule::Int>(1LL));
	jule::Ref<_11ce1fd50_FnDecl> _137917_f = this->self->_method_build_fn(_137741_tokens,false,false,true);
	if (jule::real(_137917_f)) {
		_137917_f->_field_cpp_linked=true;
	}
	return _137917_f;
}



inline jule::Ref<_11ce1fd50_VarDecl> _10e5e45f0_Parser::_method_build_cpp_link_var(jule::Slice<_11ce22a00_Token> _138642_tokens) {
	_138642_tokens=_138642_tokens.slice(static_cast<jule::Int>(1LL));
	jule::Ref<_11ce1fd50_VarDecl> _138817_v = this->self->_method_build_var(_138642_tokens);
	if (jule::real(_138817_v)) {
		_138817_v->_field_cpp_linked=true;
		if (jule::real(_138817_v->_field_expr)) {
			this->self->_method_push_err(_138817_v->_field_token,jule::Str("cpp_linked_variable_has_expr", 28),jule::Slice<jule::Any>({}));
		}
	}
	return _138817_v;
}



inline jule::Ref<_11ce1fd50_StructDecl> _10e5e45f0_Parser::_method_build_cpp_link_struct(jule::Slice<_11ce22a00_Token> _139845_tokens) {
	_139845_tokens=_139845_tokens.slice(static_cast<jule::Int>(1LL));
	jule::Ref<_11ce1fd50_StructDecl> _140017_s = this->self->_method_build_struct_decl(_139845_tokens);
	if (jule::real(_140017_s)) {
		_140017_s->_field_cpp_linked=true;
	}
	return _140017_s;
}



inline jule::Ref<_11ce1fd50_TypeAliasDecl> _10e5e45f0_Parser::_method_build_cpp_link_type_alias(jule::Slice<_11ce22a00_Token> _140749_tokens) {
	_140749_tokens=_140749_tokens.slice(static_cast<jule::Int>(1LL));
	jule::Ref<_11ce1fd50_TypeAliasDecl> _140917_t = this->self->_method_build_type_alias_decl(_140749_tokens);
	if (jule::real(_140917_t)) {
		_140917_t->_field_cpp_linked=true;
	}
	return _140917_t;
}



inline jule::Any _10e5e45f0_Parser::_method_build_cpp_link(jule::Slice<_11ce22a00_Token> _141638_tokens) {
	_11ce22a00_Token _141717_token = _141638_tokens[static_cast<jule::Int>(0LL)];
	if ((static_cast<jule::I64>(_141638_tokens.len()) == 1LL)) {
		this->self->_method_push_err(_141717_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	_141717_token=_141638_tokens[static_cast<jule::Int>(1LL)];
	{
		auto _match_expr{ _141717_token._field_id };
		if (!(33LLU == _match_expr || 35LLU == _match_expr)) { goto _case_end_4702554112; }
		_case_begin_4702554112:;
		{
			return this->self->_method_build_cpp_link_fn(_141638_tokens);
		}
		goto _match_end_4702550672;
		_case_end_4702554112:;
		if (!(9LLU == _match_expr || 34LLU == _match_expr)) { goto _case_end_4702553040; }
		_case_begin_4702553040:;
		{
			return this->self->_method_build_cpp_link_var(_141638_tokens);
		}
		goto _match_end_4702550672;
		_case_end_4702553040:;
		if (!(25LLU == _match_expr)) { goto _case_end_4702553152; }
		_case_begin_4702553152:;
		{
			return this->self->_method_build_cpp_link_struct(_141638_tokens);
		}
		goto _match_end_4702550672;
		_case_end_4702553152:;
		if (!(10LLU == _match_expr)) { goto _case_end_4702553264; }
		_case_begin_4702553264:;
		{
			return this->self->_method_build_cpp_link_type_alias(_141638_tokens);
		}
		goto _match_end_4702550672;
		_case_end_4702553264:;
		_case_begin_4702552080:;
		{
			this->self->_method_push_err(_141717_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4702550672;
		_case_end_4702552080:;
		_match_end_4702550672:;
	}
	return nullptr;
}



inline jule::Ref<_11ce1fd50_FnDecl> _10e5e45f0_Parser::_method_get_method(jule::Slice<_11ce22a00_Token> _144434_tokens) {
	jule::Int _144517_i = 0LL;
	_11ce22a00_Token _144617_token = _144434_tokens[static_cast<jule::Int>(_144517_i)];
	if ((_144617_token._field_id == 38LLU)) {
		if (((_144517_i + 1LL) >= static_cast<jule::I64>(_144434_tokens.len()))) {
			this->self->_method_push_err(_144617_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_11ce1fd50_FnDecl>();
		}
		(_144517_i)++;
		_144617_token=_144434_tokens[static_cast<jule::Int>(_144517_i)];
	}
	if ((_144617_token._field_id == 35LLU)) {
		if (((_144517_i + 1LL) >= static_cast<jule::I64>(_144434_tokens.len()))) {
			this->self->_method_push_err(_144617_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_11ce1fd50_FnDecl>();
		}
		(_144517_i)++;
		_144617_token=_144434_tokens[static_cast<jule::Int>(_144517_i)];
	}
	if ((_144617_token._field_id != 33LLU)) {
		this->self->_method_push_err(_144617_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11ce1fd50_FnDecl>();
	}
	return this->self->_method_build_fn(_144434_tokens,true,false,false);
}



inline void _10e5e45f0_Parser::_method_parse_impl_trait(jule::Ref<_11ce1fd50_Impl> _147340_ipl,jule::Slice<_11ce22a00_Token> _147356_tokens) {
	jule::Slice<jule::Ref<_10e3d3e70_Stmt>> _147417_stms = _10e3d3e70_split_stms(_147356_tokens);
	{
		auto &__julec_range_expr = _147417_stms;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e3d3e70_Stmt> _10e5e45f0_st{jule::Ref<_10e3d3e70_Stmt>()};_10e5e45f0_st = *__julec_range_begin;
			_iter_begin_4702588112:;
			{
				jule::Slice<_11ce22a00_Token> _147621_tokens = _10e5e45f0_st->_field_tokens;
				_11ce22a00_Token _147717_token = _147621_tokens[static_cast<jule::Int>(0LL)];
				{
					auto _match_expr{ _147717_token._field_id };
					if (!(18LLU == _match_expr)) { goto _case_end_4702594960; }
					_case_begin_4702594960:;
					{
						goto _iter_next_4702588112;
					}
					goto _match_end_4702594656;
					_case_end_4702594960:;
					if (!(38LLU == _match_expr || 33LLU == _match_expr || 35LLU == _match_expr)) { goto _case_end_4702595072; }
					_case_begin_4702595072:;
					{
						jule::Ref<_11ce1fd50_FnDecl> _148625_f = this->self->_method_get_method(_147621_tokens);
						if (jule::real(_148625_f)) {
							_148625_f->_field_public=true;
							this->self->_method_check_method_receiver(_148625_f);
							_147340_ipl->_field_methods=append(_147340_ipl->_field_methods,jule::Slice<jule::Ref<_11ce1fd50_FnDecl>>({_148625_f}));
						}
					}
					goto _match_end_4702594656;
					_case_end_4702595072:;
					_case_begin_4702590928:;
					{
						this->self->_method_push_err(_147717_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
						goto _iter_next_4702588112;
					}
					goto _match_end_4702594656;
					_case_end_4702590928:;
					_match_end_4702594656:;
				}
			}
			_iter_next_4702588112:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e5e45f0_st = *__julec_range_begin; goto _iter_begin_4702588112; }
			_iter_end_4702588112:;
		}
	}
}



inline void _10e5e45f0_Parser::_method_parse_impl_struct(jule::Ref<_11ce1fd50_Impl> _150041_ipl,jule::Slice<_11ce22a00_Token> _150057_tokens) {
	jule::Slice<jule::Ref<_10e3d3e70_Stmt>> _150117_stms = _10e3d3e70_split_stms(_150057_tokens);
	{
		auto &__julec_range_expr = _150117_stms;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e3d3e70_Stmt> _10e5e45f0_st{jule::Ref<_10e3d3e70_Stmt>()};_10e5e45f0_st = *__julec_range_begin;
			_iter_begin_4702609120:;
			{
				jule::Slice<_11ce22a00_Token> _150321_tokens = _10e5e45f0_st->_field_tokens;
				_11ce22a00_Token _150421_token = _150321_tokens[static_cast<jule::Int>(0LL)];
				jule::Bool _150521_is_pub = false;
				{
					auto _match_expr{ _150421_token._field_id };
					if (!(18LLU == _match_expr)) { goto _case_end_4702617856; }
					_case_begin_4702617856:;
					{
						goto _iter_next_4702609120;
					}
					goto _match_end_4702617552;
					_case_end_4702617856:;
					if (!(21LLU == _match_expr)) { goto _case_end_4702617968; }
					_case_begin_4702617968:;
					{
						_150521_is_pub=true;
						if ((static_cast<jule::I64>(_150321_tokens.len()) == 1LL)) {
							this->self->_method_push_err(_150321_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
							goto _iter_next_4702609120;
						}
						_150321_tokens=_150321_tokens.slice(static_cast<jule::Int>(1LL));
						if ((static_cast<jule::I64>(_150321_tokens.len()) > 0LL)) {
							_150421_token=_150321_tokens[static_cast<jule::Int>(0LL)];
						}
					}
					goto _match_end_4702617552;
					_case_end_4702617968:;
					_match_end_4702617552:;
				}
				{
					auto _match_expr{ _150421_token._field_id };
					if (!(38LLU == _match_expr || 33LLU == _match_expr || 35LLU == _match_expr)) { goto _case_end_4702629024; }
					_case_begin_4702629024:;
					{
						jule::Ref<_11ce1fd50_FnDecl> _152725_f = this->self->_method_get_method(_150321_tokens);
						if (jule::real(_152725_f)) {
							_152725_f->_field_public=_150521_is_pub;
							this->self->_method_check_method_receiver(_152725_f);
							_150041_ipl->_field_methods=append(_150041_ipl->_field_methods,jule::Slice<jule::Ref<_11ce1fd50_FnDecl>>({_152725_f}));
						}
					}
					goto _match_end_4702628400;
					_case_end_4702629024:;
					_case_begin_4702626576:;
					{
						this->self->_method_push_err(_150421_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
						goto _iter_next_4702609120;
					}
					goto _match_end_4702628400;
					_case_end_4702626576:;
					_match_end_4702628400:;
				}
			}
			_iter_next_4702609120:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e5e45f0_st = *__julec_range_begin; goto _iter_begin_4702609120; }
			_iter_end_4702609120:;
		}
	}
}



inline void _10e5e45f0_Parser::_method_parse_impl_body(jule::Ref<_11ce1fd50_Impl> _154139_ipl,jule::Slice<_11ce22a00_Token> _154155_tokens) {
	if (_154139_ipl->_method_is_trait_impl()) {
		this->self->_method_parse_impl_trait(_154139_ipl,_154155_tokens);
		return;
	}
	this->self->_method_parse_impl_struct(_154139_ipl,_154155_tokens);
}



inline jule::Ref<_11ce1fd50_Impl> _10e5e45f0_Parser::_method_build_impl(jule::Slice<_11ce22a00_Token> _154934_tokens) {
	_11ce22a00_Token _155017_token = _154934_tokens[static_cast<jule::Int>(0LL)];
	if ((static_cast<jule::I64>(_154934_tokens.len()) < 2LL)) {
		this->self->_method_push_err(_155017_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11ce1fd50_Impl>();
	}
	_155017_token=_154934_tokens[static_cast<jule::Int>(1LL)];
	if ((_155017_token._field_id != 2LLU)) {
		this->self->_method_push_err(_155017_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11ce1fd50_Impl>();
	}
	if ((static_cast<jule::I64>(_154934_tokens.len()) < 3LL)) {
		this->self->_method_push_err(_155017_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11ce1fd50_Impl>();
	}
	jule::Ref<_11ce1fd50_Impl> _156417_ipl = jule::new_struct<_11ce1fd50_Impl>(new( std::nothrow ) _11ce1fd50_Impl(_155017_token,_11ce22a00_Token(),jule::Slice<jule::Ref<_11ce1fd50_FnDecl>>()));
	_155017_token=_154934_tokens[static_cast<jule::Int>(2LL)];
	if ((_155017_token._field_id != 12LLU)) {
		if (((_155017_token._field_id == 3LLU) && (_155017_token._field_kind == jule::Str("{", 1)))) {
			std::tie(_156417_ipl->_field_base,_156417_ipl->_field_dest) = std::make_tuple(_156417_ipl->_field_dest,_156417_ipl->_field_base);
			_154934_tokens=_154934_tokens.slice(static_cast<jule::Int>(2LL));
			goto _julec_label_body;
		}
		this->self->_method_push_err(_155017_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11ce1fd50_Impl>();
	}
	if ((static_cast<jule::I64>(_154934_tokens.len()) < 4LL)) {
		this->self->_method_push_err(_155017_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11ce1fd50_Impl>();
	}
	_155017_token=_154934_tokens[static_cast<jule::Int>(3LL)];
	if ((_155017_token._field_id != 2LLU)) {
		this->self->_method_push_err(_155017_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11ce1fd50_Impl>();
	}
	_156417_ipl->_field_dest=_155017_token;
	_154934_tokens=_154934_tokens.slice(static_cast<jule::Int>(4LL));
	_julec_label_body:;
	jule::Int _159317_i = 0LL;
	jule::Slice<_11ce22a00_Token> _159417_body_tokens = _10e5e45f0_range((&_159317_i),jule::Str("{", 1),jule::Str("}", 1),_154934_tokens);
	if ((_159417_body_tokens == nullptr)) {
		this->self->_method_stop();
		this->self->_method_push_err(_156417_ipl->_field_base,jule::Str("body_not_exist", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_11ce1fd50_Impl>();
	}
	if ((_159317_i < static_cast<jule::I64>(_154934_tokens.len()))) {
		this->self->_method_push_err(_154934_tokens[static_cast<jule::Int>(_159317_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	this->self->_method_parse_impl_body(_156417_ipl,_159417_body_tokens);
	return _156417_ipl;
}



inline jule::Any _10e5e45f0_Parser::_method_build_node_data(jule::Slice<_11ce22a00_Token> _160739_tokens) {
	_11ce22a00_Token _160817_token = _160739_tokens[static_cast<jule::Int>(0LL)];
	{
		auto _match_expr{ _160817_token._field_id };
		if (!(19LLU == _match_expr)) { goto _case_end_4702703808; }
		_case_begin_4702703808:;
		{
			return this->self->_method_build_use_decl(_160739_tokens);
		}
		goto _match_end_4702702304;
		_case_end_4702703808:;
		if (!(33LLU == _match_expr || 35LLU == _match_expr)) { goto _case_end_4702702896; }
		_case_begin_4702702896:;
		{
			jule::Ref<_11ce1fd50_FnDecl> _161521_f = this->self->_method_build_fn(_160739_tokens,false,false,false);
			if (jule::real(_161521_f)) {
				_161521_f->_field_global=true;
			}
			return _161521_f;
		}
		goto _match_end_4702702304;
		_case_end_4702702896:;
		if (!(34LLU == _match_expr || 9LLU == _match_expr || 36LLU == _match_expr || 38LLU == _match_expr)) { goto _case_end_4702703008; }
		_case_begin_4702703008:;
		{
			return this->self->_method_build_var(_160739_tokens);
		}
		goto _match_end_4702702304;
		_case_end_4702703008:;
		if (!(10LLU == _match_expr)) { goto _case_end_4702705408; }
		_case_begin_4702705408:;
		{
			return this->self->_method_build_type_alias_decl(_160739_tokens);
		}
		goto _match_end_4702702304;
		_case_end_4702705408:;
		if (!(24LLU == _match_expr)) { goto _case_end_4702705520; }
		_case_begin_4702705520:;
		{
			return this->self->_method_build_enum_decl(_160739_tokens);
		}
		goto _match_end_4702702304;
		_case_end_4702705520:;
		if (!(25LLU == _match_expr)) { goto _case_end_4702705632; }
		_case_begin_4702705632:;
		{
			return this->self->_method_build_struct_decl(_160739_tokens);
		}
		goto _match_end_4702702304;
		_case_end_4702705632:;
		if (!(29LLU == _match_expr)) { goto _case_end_4702705744; }
		_case_begin_4702705744:;
		{
			return this->self->_method_build_trait_decl(_160739_tokens);
		}
		goto _match_end_4702702304;
		_case_end_4702705744:;
		if (!(30LLU == _match_expr)) { goto _case_end_4702705920; }
		_case_begin_4702705920:;
		{
			return this->self->_method_build_impl(_160739_tokens);
		}
		goto _match_end_4702702304;
		_case_end_4702705920:;
		if (!(31LLU == _match_expr)) { goto _case_end_4702706032; }
		_case_begin_4702706032:;
		{
			return this->self->_method_build_cpp_link(_160739_tokens);
		}
		goto _match_end_4702702304;
		_case_end_4702706032:;
		if (!(18LLU == _match_expr)) { goto _case_end_4702706144; }
		_case_begin_4702706144:;
		{
			jule::Ref<_11ce1fd50_Comment> _164921_c = _10e5e45f0_build_comment(_160817_token);
			this->self->_method_process_comment(_164921_c);
			return _164921_c;
		}
		goto _match_end_4702702304;
		_case_end_4702706144:;
		_case_begin_4702702416:;
		{
			this->self->_method_push_err(_160817_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return nullptr;
		}
		goto _match_end_4702702304;
		_case_end_4702702416:;
		_match_end_4702702304:;
	}
}



inline void _10e5e45f0_Parser::_method_check_comment_group(_11ce1fd50_Node _165938_node) {
	if ((!jule::real((*this)._field_comment_group))) {
		return;
	}
	{
		auto _match_expr{ _165938_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_Comment>>() || _match_expr.type_is<jule::Ref<_11ce1fd50_Directive>>())) { goto _case_end_4702731056; }
		goto _match_end_4702727744;
		_case_end_4702731056:;
		_case_begin_4702729312:;
		{
			jule::drop((*this)._field_comment_group);
		}
		goto _match_end_4702727744;
		_case_end_4702729312:;
		_match_end_4702727744:;
	}
}



inline void _10e5e45f0_Parser::_method_check_directive(_11ce1fd50_Node _167334_node) {
	if (((*this)._field_directives == nullptr)) {
		return;
	}
	{
		auto _match_expr{ _167334_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_Directive>>() || _match_expr.type_is<jule::Ref<_11ce1fd50_Comment>>())) { goto _case_end_4702736576; }
		goto _match_end_4702734816;
		_case_end_4702736576:;
		_case_begin_4702734928:;
		{
			(*this)._field_directives=nullptr;
		}
		goto _match_end_4702734816;
		_case_end_4702734928:;
		_match_end_4702734816:;
	}
}



inline void _10e5e45f0_Parser::_method_apply_meta(_11ce1fd50_Node _168833_node,jule::Bool _168849_is_pub) {
	{
		auto _match_expr{ _168833_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_VarDecl>>())) { goto _case_end_4702740768; }
		_case_begin_4702740768:;
		{
			jule::Ref<_11ce1fd50_VarDecl> _169121_v = _168833_node._field_data.operator jule::Ref<_11ce1fd50_VarDecl>();
			if ((!jule::real(_169121_v))) {
				return;
			}
			_169121_v->_field_public=_168849_is_pub;
			_169121_v->_field_doc_comments=(*this)._field_comment_group;
			_168849_is_pub=false;
			jule::drop((*this)._field_comment_group);
		}
		goto _match_end_4702739856;
		_case_end_4702740768:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_FnDecl>>())) { goto _case_end_4702740880; }
		_case_begin_4702740880:;
		{
			jule::Ref<_11ce1fd50_FnDecl> _170121_f = _168833_node._field_data.operator jule::Ref<_11ce1fd50_FnDecl>();
			if ((!jule::real(_170121_f))) {
				return;
			}
			_170121_f->_field_public=_168849_is_pub;
			_168849_is_pub=false;
			_170121_f->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
			_170121_f->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
		}
		goto _match_end_4702739856;
		_case_end_4702740880:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_TypeAliasDecl>>())) { goto _case_end_4702740992; }
		_case_begin_4702740992:;
		{
			jule::Ref<_11ce1fd50_TypeAliasDecl> _171421_tad = _168833_node._field_data.operator jule::Ref<_11ce1fd50_TypeAliasDecl>();
			if ((!jule::real(_171421_tad))) {
				return;
			}
			_171421_tad->_field_public=_168849_is_pub;
			_168849_is_pub=false;
			_171421_tad->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
		}
		goto _match_end_4702739856;
		_case_end_4702740992:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_EnumDecl>>())) { goto _case_end_4702741104; }
		_case_begin_4702741104:;
		{
			jule::Ref<_11ce1fd50_EnumDecl> _172421_ed = _168833_node._field_data.operator jule::Ref<_11ce1fd50_EnumDecl>();
			if ((!jule::real(_172421_ed))) {
				return;
			}
			_172421_ed->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_172421_ed->_field_public=_168849_is_pub;
			_168849_is_pub=false;
		}
		goto _match_end_4702739856;
		_case_end_4702741104:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_StructDecl>>())) { goto _case_end_4702741216; }
		_case_begin_4702741216:;
		{
			jule::Ref<_11ce1fd50_StructDecl> _173421_sd = _168833_node._field_data.operator jule::Ref<_11ce1fd50_StructDecl>();
			if ((!jule::real(_173421_sd))) {
				return;
			}
			_173421_sd->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
			_173421_sd->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_173421_sd->_field_public=_168849_is_pub;
			_168849_is_pub=false;
		}
		goto _match_end_4702739856;
		_case_end_4702741216:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_TraitDecl>>())) { goto _case_end_4702741328; }
		_case_begin_4702741328:;
		{
			jule::Ref<_11ce1fd50_TraitDecl> _174621_td = _168833_node._field_data.operator jule::Ref<_11ce1fd50_TraitDecl>();
			if ((!jule::real(_174621_td))) {
				return;
			}
			_174621_td->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_174621_td->_field_public=_168849_is_pub;
			_168849_is_pub=false;
		}
		goto _match_end_4702739856;
		_case_end_4702741328:;
		_match_end_4702739856:;
	}
	if (_168849_is_pub) {
		(*this)._method_push_err(_168833_node._field_token,jule::Str("def_not_support_pub", 19),jule::Slice<jule::Any>({}));
	}
}



inline void _10e5e45f0_Parser::_method_check_use_decl(_11ce1fd50_Node _176033_node) {
	{
		auto _match_expr{ _176033_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_UseDecl>>())) { goto _case_end_4702785328; }
		goto _match_end_4702783456;
		_case_end_4702785328:;
		_case_begin_4702783728:;
		{
			return;
		}
		goto _match_end_4702783456;
		_case_end_4702783728:;
		_match_end_4702783456:;
	}
	if ((static_cast<jule::Int>((*this)._field_ast->_field_decls._method_len()) > 0LL)) {
		(*this)._method_push_err(_176033_node._field_token,jule::Str("use_decl_at_body", 16),jule::Slice<jule::Any>({}));
	}
}



inline std::tuple<jule::Bool,jule::Any> _10e5e45f0_Parser::_method_build_general_scope_node_data(jule::Slice<_11ce22a00_Token> _177453_st) {
	jule::Any _177482_data{jule::Any()};
	jule::Bool _177468_is_pub{jule::Bool()};
	if ((_177453_st[static_cast<jule::Int>(0LL)]._field_id == 21LLU)) {
		_177468_is_pub=true;
		_177453_st=_177453_st.slice(static_cast<jule::Int>(1LL));
		if ((static_cast<jule::I64>(_177453_st.len()) == 0LL)) {
			this->self->_method_push_err(_177453_st[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return std::make_tuple(_177468_is_pub,_177482_data);
		}
	}
	_177482_data=this->self->_method_build_node_data(_177453_st);
	_177468_is_pub = _177468_is_pub;
	_177482_data = _177482_data;
	return std::make_tuple(_177468_is_pub,_177482_data);
}



inline _11ce1fd50_Node _10e5e45f0_Parser::_method_parse_node(jule::Slice<_11ce22a00_Token> _178934_st) {
	_11ce1fd50_Node _179017_node = _11ce1fd50_Node(_178934_st[static_cast<jule::Int>(0LL)],jule::Any());
	jule::Bool _179414_is_pub{};
	jule::Any _179426_data{};
	std::tie(_179414_is_pub,_179426_data) = this->self->_method_build_general_scope_node_data(_178934_st);
	if ((_179426_data == nullptr)) {
		return _179017_node;
	}
	_179017_node._field_data=_179426_data;
	this->self->_method_apply_meta(_179017_node,_179414_is_pub);
	this->self->_method_check_comment_group(_179017_node);
	this->self->_method_check_directive(_179017_node);
	this->self->_method_check_use_decl(_179017_node);
	return _179017_node;
}



inline void _10e5e45f0_Parser::_method_append_node(jule::Slice<_11ce22a00_Token> _180835_st) {
	if ((static_cast<jule::I64>(_180835_st.len()) == 0LL)) {
		return;
	}
	_11ce1fd50_Node _181317_node = this->self->_method_parse_node(_180835_st);
	if (((_181317_node._field_data == nullptr) || this->self->_method_stopped())) {
		return;
	}
	{
		auto _match_expr{ true };
		if (!(_181317_node._method_is_use_decl() == _match_expr)) { goto _case_end_4702827264; }
		_case_begin_4702827264:;
		{
			this->self->_field_ast->_field_use_decls._method_push(_181317_node._field_data.operator jule::Ref<_11ce1fd50_UseDecl>());
		}
		goto _match_end_4702825488;
		_case_end_4702827264:;
		if (!(_181317_node._method_is_decl() == _match_expr)) { goto _case_end_4702826256; }
		_case_begin_4702826256:;
		{
			this->self->_field_ast->_field_decls._method_push(_181317_node);
		}
		goto _match_end_4702825488;
		_case_end_4702826256:;
		if (!(_181317_node._method_is_comment() == _match_expr)) { goto _case_end_4702826368; }
		_case_begin_4702826368:;
		{
			jule::Ref<_11ce1fd50_Comment> _182821_c = _181317_node._field_data.operator jule::Ref<_11ce1fd50_Comment>();
			this->self->_field_ast->_field_comments._method_push(_182821_c);
		}
		goto _match_end_4702825488;
		_case_end_4702826368:;
		if (!(_181317_node._method_is_impl() == _match_expr)) { goto _case_end_4702826480; }
		_case_begin_4702826480:;
		{
			this->self->_field_ast->_field_impls._method_push(_181317_node._field_data.operator jule::Ref<_11ce1fd50_Impl>());
		}
		goto _match_end_4702825488;
		_case_end_4702826480:;
		_case_begin_4702825952:;
		{
			this->self->_method_push_err(_181317_node._field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4702825488;
		_case_end_4702825952:;
		_match_end_4702825488:;
	}
}



inline void _10e5e45f0_Parser::_method_check_ranges(jule::Slice<_11ce22a00_Token> _183931_tokens) {
	jule::Slice<jule::Int> _184017_ranges = nullptr;
	jule::Fn<jule::Str(jule::Str)> _184213_get_close_kind_of_brace = jule::Fn<jule::Str(jule::Str)>([&](jule::Str _184242_left) mutable -> jule::Str {
		{
			auto _match_expr{ _184242_left };
			if (!(jule::Str(")", 1) == _match_expr)) { goto _case_end_4702850576; }
			_case_begin_4702850576:;
			{
				return jule::Str("(", 1);
			}
			goto _match_end_4702849568;
			_case_end_4702850576:;
			if (!(jule::Str("}", 1) == _match_expr)) { goto _case_end_4702849904; }
			_case_begin_4702849904:;
			{
				return jule::Str("{", 1);
			}
			goto _match_end_4702849568;
			_case_end_4702849904:;
			if (!(jule::Str("]", 1) == _match_expr)) { goto _case_end_4702850016; }
			_case_begin_4702850016:;
			{
				return jule::Str("[", 1);
			}
			goto _match_end_4702849568;
			_case_end_4702850016:;
			_case_begin_4702848944:;
			{
				return jule::Str("", 0);
			}
			goto _match_end_4702849568;
			_case_end_4702848944:;
			_match_end_4702849568:;
		}
	});
	jule::Fn<void(jule::Int,jule::Str)> _185113_remove_range = jule::Fn<void(jule::Int,jule::Str)>([&](jule::Int _185135_i,jule::Str _185143_kind) mutable -> void {
		jule::Str _185217_close = _184213_get_close_kind_of_brace(_185143_kind);
		_iter_begin_4702857008:;
		if (!((_185135_i >= 0LL))) { goto _iter_end_4702857008; }
		{
			_11ce22a00_Token _185421_tok = _183931_tokens[static_cast<jule::Int>(_184017_ranges[static_cast<jule::Int>(_185135_i)])];
			if ((_185421_tok._field_kind != _185217_close)) {
				goto _iter_next_4702857008;
			}
			_184017_ranges=append(_184017_ranges.slice(0LL,static_cast<jule::Int>(_185135_i)),_184017_ranges.slice(static_cast<jule::Int>((_185135_i + 1LL))));
			goto _iter_end_4702857008;
		}
		_iter_next_4702857008:;
		(_185135_i)--;
		goto _iter_begin_4702857008;
		_iter_end_4702857008:;
	});
	jule::Fn<void(_11ce22a00_Token)> _186413_push_wrong_order_close_err = jule::Fn<void(_11ce22a00_Token)>([&](_11ce22a00_Token _186445_t) mutable -> void {
		jule::Str _186521_msg = jule::Str("", 0);
		{
			auto _match_expr{ _183931_tokens[static_cast<jule::Int>(_184017_ranges[static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_184017_ranges.len()) - 1LL)))])]._field_kind };
			if (!(jule::Str("(", 1) == _match_expr)) { goto _case_end_4702891840; }
			_case_begin_4702891840:;
			{
				_186521_msg=jule::Str("expected_parentheses_close", 26);
			}
			goto _match_end_4702891728;
			_case_end_4702891840:;
			if (!(jule::Str("{", 1) == _match_expr)) { goto _case_end_4702891952; }
			_case_begin_4702891952:;
			{
				_186521_msg=jule::Str("expected_brace_close", 20);
			}
			goto _match_end_4702891728;
			_case_end_4702891952:;
			if (!(jule::Str("[", 1) == _match_expr)) { goto _case_end_4702892064; }
			_case_begin_4702892064:;
			{
				_186521_msg=jule::Str("expected_bracket_close", 22);
			}
			goto _match_end_4702891728;
			_case_end_4702892064:;
			_match_end_4702891728:;
		}
		(*this)._method_push_err(_186445_t,_186521_msg,jule::Slice<jule::Any>({}));
	});
	jule::Fn<void(_11ce22a00_Token,jule::Str)> _187513_push_range_close = jule::Fn<void(_11ce22a00_Token,jule::Str)>([&](_11ce22a00_Token _187535_t,jule::Str _187545_left) mutable -> void {
		jule::I64 _187617_n = static_cast<jule::I64>(_184017_ranges.len());
		if ((_187617_n == 0LL)) {
			{
				auto _match_expr{ _187535_t._field_kind };
				if (!(jule::Str("]", 1) == _match_expr)) { goto _case_end_4702903568; }
				_case_begin_4702903568:;
				{
					(*this)._method_push_err(_187535_t,jule::Str("extra_closed_brackets", 21),jule::Slice<jule::Any>({}));
				}
				goto _match_end_4702902944;
				_case_end_4702903568:;
				if (!(jule::Str("}", 1) == _match_expr)) { goto _case_end_4702903680; }
				_case_begin_4702903680:;
				{
					(*this)._method_push_err(_187535_t,jule::Str("extra_closed_braces", 19),jule::Slice<jule::Any>({}));
				}
				goto _match_end_4702902944;
				_case_end_4702903680:;
				if (!(jule::Str(")", 1) == _match_expr)) { goto _case_end_4702903792; }
				_case_begin_4702903792:;
				{
					(*this)._method_push_err(_187535_t,jule::Str("extra_closed_parentheses", 24),jule::Slice<jule::Any>({}));
				}
				goto _match_end_4702902944;
				_case_end_4702903792:;
				_match_end_4702902944:;
			}
			return;
		} else if ((_183931_tokens[static_cast<jule::Int>(_184017_ranges[static_cast<jule::Int>((_187617_n - 1LL))])]._field_kind != _187545_left)) {
			_186413_push_wrong_order_close_err(_187535_t);
		}
		_185113_remove_range((_187617_n - 1LL),_187535_t._field_kind);
	});
	{
		auto &__julec_range_expr = _183931_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e5e45f0_i{jule::Int()};_10e5e45f0_i = 0;
			_11ce22a00_Token _10e5e45f0_token{_11ce22a00_Token()};_10e5e45f0_token = *__julec_range_begin;
			_iter_begin_4702852608:;
			{
				if ((_10e5e45f0_token._field_id != 3LLU)) {
					goto _iter_next_4702852608;
				}
				{
					auto _match_expr{ _10e5e45f0_token._field_kind };
					if (!(jule::Str("(", 1) == _match_expr || jule::Str("{", 1) == _match_expr || jule::Str("[", 1) == _match_expr)) { goto _case_end_4702918128; }
					_case_begin_4702918128:;
					{
						_184017_ranges=append(_184017_ranges,jule::Slice<jule::Int>({_10e5e45f0_i}));
					}
					goto _match_end_4702917936;
					_case_end_4702918128:;
					if (!(jule::Str(")", 1) == _match_expr)) { goto _case_end_4702918736; }
					_case_begin_4702918736:;
					{
						_187513_push_range_close(_10e5e45f0_token,jule::Str("(", 1));
					}
					goto _match_end_4702917936;
					_case_end_4702918736:;
					if (!(jule::Str("}", 1) == _match_expr)) { goto _case_end_4702918848; }
					_case_begin_4702918848:;
					{
						_187513_push_range_close(_10e5e45f0_token,jule::Str("{", 1));
					}
					goto _match_end_4702917936;
					_case_end_4702918848:;
					if (!(jule::Str("]", 1) == _match_expr)) { goto _case_end_4702918960; }
					_case_begin_4702918960:;
					{
						_187513_push_range_close(_10e5e45f0_token,jule::Str("[", 1));
					}
					goto _match_end_4702917936;
					_case_end_4702918960:;
					_match_end_4702917936:;
				}
			}
			_iter_next_4702852608:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e5e45f0_i; _10e5e45f0_token = *__julec_range_begin; goto _iter_begin_4702852608; }
			_iter_end_4702852608:;
		}
	}
	{
		auto &__julec_range_expr = _184017_ranges;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e5e45f0_i{jule::Int()};_10e5e45f0_i = *__julec_range_begin;
			_iter_begin_4702921632:;
			{
				_11ce22a00_Token _191317_token = _183931_tokens[static_cast<jule::Int>(_10e5e45f0_i)];
				{
					auto _match_expr{ _191317_token._field_kind };
					if (!(jule::Str("(", 1) == _match_expr)) { goto _case_end_4702930256; }
					_case_begin_4702930256:;
					{
						(*this)._method_push_err(_191317_token,jule::Str("wait_close_parentheses", 22),jule::Slice<jule::Any>({}));
					}
					goto _match_end_4702930144;
					_case_end_4702930256:;
					if (!(jule::Str("{", 1) == _match_expr)) { goto _case_end_4702930368; }
					_case_begin_4702930368:;
					{
						(*this)._method_push_err(_191317_token,jule::Str("wait_close_brace", 16),jule::Slice<jule::Any>({}));
					}
					goto _match_end_4702930144;
					_case_end_4702930368:;
					if (!(jule::Str("[", 1) == _match_expr)) { goto _case_end_4702930480; }
					_case_begin_4702930480:;
					{
						(*this)._method_push_err(_191317_token,jule::Str("wait_close_bracket", 18),jule::Slice<jule::Any>({}));
					}
					goto _match_end_4702930144;
					_case_end_4702930480:;
					_match_end_4702930144:;
				}
			}
			_iter_next_4702921632:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e5e45f0_i = *__julec_range_begin; goto _iter_begin_4702921632; }
			_iter_end_4702921632:;
		}
	}
}



inline void _10e5e45f0_Parser::_method_parse(jule::Ref<_11ce078a0_File> _192229_f) {
	this->self->_field_ast=jule::new_struct<_11ce19be0_Ast>(new( std::nothrow ) _11ce19be0_Ast(_192229_f,_10dba8790_Vector_1(),_10dba8790_Vector_2(),_10dba8790_Vector_3(),_10dba8790_Vector_4(),_10dba8790_Vector_5()));
	jule::Slice<_11ce22a00_Token> _192717_tokens = __jule_parser_vector_as_slice<_10dba8790_Vector_0,_11ce22a00_Token>(jule::Any(_192229_f->_method_tokens()));
	this->self->_method_check_ranges(_192717_tokens);
	if ((static_cast<jule::I64>(this->self->_field_errors.len()) > 0LL)) {
		return;
	}
	jule::Slice<jule::Ref<_10e3d3e70_Stmt>> _193417_stms = _10e3d3e70_split_stms(_192717_tokens);
	jule::Int _193717_i = 0LL;
	_iter_begin_4702933936:;
	if (!((_193717_i < static_cast<jule::I64>(_193417_stms.len())))) { goto _iter_end_4702933936; }
	{
		jule::Ref<_10e3d3e70_Stmt> _193921_st = _193417_stms[static_cast<jule::Int>(_193717_i)];
		if ((static_cast<jule::I64>(_193921_st->_field_tokens.len()) == 0LL)) {
			return;
		}
		jule::Any _194425_data{};
		std::tie(std::ignore,_194425_data) = this->self->_method_build_general_scope_node_data(_193921_st->_field_tokens);
		if ((_194425_data == nullptr)) {
			goto _iter_next_4702933936;
		}
		if (this->self->_method_stopped()) {
			return;
		}
		_11ce1fd50_Node _195321_node = _11ce1fd50_Node(_11ce22a00_Token(),_194425_data);
		if (_195321_node._method_is_comment()) {
			jule::Ref<_11ce1fd50_Directive> _195525_d = this->self->_method_get_directive(_195321_node._field_data.operator jule::Ref<_11ce1fd50_Comment>());
			if ((jule::real(_195525_d) && _13cfd67b0_is_top_directive(_195525_d->_field_tag))) {
				this->self->_field_ast->_field_top_directives._method_push(_195525_d);
			}
		} else {
			goto _iter_end_4702933936;
		}
	}
	_iter_next_4702933936:;
	(_193717_i)++;
	goto _iter_begin_4702933936;
	_iter_end_4702933936:;
	this->self->_field_errors=nullptr;
	_iter_begin_4702967472:;
	if (!((_193717_i < static_cast<jule::I64>(_193417_stms.len())))) { goto _iter_end_4702967472; }
	{
		jule::Ref<_10e3d3e70_Stmt> _196821_st = _193417_stms[static_cast<jule::Int>(_193717_i)];
		this->self->_method_append_node(_196821_st->_field_tokens);
		if (this->self->_method_stopped()) {
			goto _iter_end_4702967472;
		}
	}
	_iter_next_4702967472:;
	(_193717_i)++;
	goto _iter_begin_4702967472;
	_iter_end_4702967472:;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e5e45f0_Parser &_Src) {
	_Stream << "Parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "comment_group:" << _Src._field_comment_group << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _10e7e4720_TypeBuilder::_method_push_err(_11ce22a00_Token _7727_token,jule::Str _7741_key) {
	if ((*this)._field_err) {
		(*this)._field_p->_method_push_err(_7727_token,_7741_key,jule::Slice<jule::Any>({}));
	}
}



inline jule::Ref<_11ce1fd50_TypeDecl> _10e7e4720_TypeBuilder::_method_build_prim(void) {
	jule::Ref<_11ce1fd50_TypeDecl> _8417_t = _10e7e4720_build_prim_type((*this)._field_tokens[static_cast<jule::Int>((*(*this)._field_i))]);
	((*(*this)._field_i))++;
	return _8417_t;
}



inline jule::Ref<_11ce1fd50_TypeDecl> _10e7e4720_TypeBuilder::_method_build_namespace(void) {
	jule::Ref<_11ce1fd50_TypeDecl> _9017_t = jule::new_struct<_11ce1fd50_TypeDecl>(new( std::nothrow ) _11ce1fd50_TypeDecl((*this)._field_tokens[static_cast<jule::Int>((*(*this)._field_i))],jule::Any()));
	jule::Ref<_11ce1fd50_NamespaceTypeDecl> _9417_nst = jule::new_struct<_11ce1fd50_NamespaceTypeDecl>(new( std::nothrow ) _11ce1fd50_NamespaceTypeDecl());
	jule::Int _9517_n = 0LL;
	_iter_begin_4702990848:;
	if (!(((*(*this)._field_i) < static_cast<jule::I64>((*this)._field_tokens.len())))) { goto _iter_end_4702990848; }
	{
		_11ce22a00_Token _9721_token = (*this)._field_tokens[static_cast<jule::Int>((*(*this)._field_i))];
		if (((_9517_n % 2LL) == 0LL)) {
			if ((_9721_token._field_id != 2LLU)) {
				(*this)._method_push_err(_9721_token,jule::Str("invalid_syntax", 14));
			}
			_9417_nst->_field_idents=append(_9417_nst->_field_idents,jule::Slice<_11ce22a00_Token>({_9721_token}));
		} else if ((_9721_token._field_id != 23LLU)) {
			goto _iter_end_4702990848;
		}
		(_9517_n)++;
	}
	_iter_next_4702990848:;
	((*(*this)._field_i))++;
	goto _iter_begin_4702990848;
	_iter_end_4702990848:;
	_9417_nst->_field_idents=_9417_nst->_field_idents.slice(0LL,static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_9417_nst->_field_idents.len()) - 1LL))));
	((*(*this)._field_i))--;
	_9417_nst->_field_kind=(*this)._method_build_ident()->_field_kind.operator jule::Ref<_11ce1fd50_IdentTypeDecl>();
	_9017_t->_field_kind=jule::Any(_9417_nst);
	return _9017_t;
}



inline jule::Slice<jule::Ref<_11ce1fd50_TypeDecl>> _10e7e4720_TypeBuilder::_method_build_generics(void) {
	if (((*(*this)._field_i) >= static_cast<jule::I64>((*this)._field_tokens.len()))) {
		return nullptr;
	}
	_11ce22a00_Token _12213_token = (*this)._field_tokens[static_cast<jule::Int>((*(*this)._field_i))];
	if (((_12213_token._field_id != 3LLU) || (_12213_token._field_kind != jule::Str("[", 1)))) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_11ce22a00_Token>> _12717_parts = (*this)._method_ident_generics();
	if ((static_cast<jule::I64>(_12717_parts.len()) == 0LL)) {
		(*this)._method_push_err(_12213_token,jule::Str("invalid_syntax", 14));
		return nullptr;
	}
	jule::Slice<jule::Ref<_11ce1fd50_TypeDecl>> _13317_types = jule::Slice<jule::Ref<_11ce1fd50_TypeDecl>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_12717_parts.len())));
	{
		auto &__julec_range_expr = _12717_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e7e4720_i{jule::Int()};_10e7e4720_i = 0;
			jule::Slice<_11ce22a00_Token> _10e7e4720_part{jule::Slice<_11ce22a00_Token>()};_10e7e4720_part = *__julec_range_begin;
			_iter_begin_4703026448:;
			{
				jule::Int _13521_j = 0LL;
				jule::Ref<_11ce1fd50_TypeDecl> _13622_t{};
				std::tie(_13622_t,std::ignore) = (*this)._field_p->_method_build_type(_10e7e4720_part,(&_13521_j),true);
				if ((_13521_j < static_cast<jule::I64>(_10e7e4720_part.len()))) {
					(*this)._method_push_err(_10e7e4720_part[static_cast<jule::Int>(_13521_j)],jule::Str("invalid_syntax", 14));
				}
				_13317_types[static_cast<jule::Int>(_10e7e4720_i)]=_13622_t;
			}
			_iter_next_4703026448:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e7e4720_i; _10e7e4720_part = *__julec_range_begin; goto _iter_begin_4703026448; }
			_iter_end_4703026448:;
		}
	}
	return _13317_types;
}



inline jule::Slice<jule::Slice<_11ce22a00_Token>> _10e7e4720_TypeBuilder::_method_ident_generics(void) {
	jule::Int _14613_first = (*(*this)._field_i);
	jule::Int _14717_range_n = 0LL;
	_iter_begin_4703039456:;
	if (!(((*(*this)._field_i) < static_cast<jule::I64>((*this)._field_tokens.len())))) { goto _iter_end_4703039456; }
	{
		_11ce22a00_Token _14917_token = (*this)._field_tokens[static_cast<jule::Int>((*(*this)._field_i))];
		if ((_14917_token._field_id == 3LLU)) {
			{
				auto _match_expr{ _14917_token._field_kind };
				if (!(jule::Str("[", 1) == _match_expr)) { goto _case_end_4703045088; }
				_case_begin_4703045088:;
				{
					(_14717_range_n)++;
				}
				goto _match_end_4703044160;
				_case_end_4703045088:;
				if (!(jule::Str("]", 1) == _match_expr)) { goto _case_end_4703045200; }
				_case_begin_4703045200:;
				{
					(_14717_range_n)--;
				}
				goto _match_end_4703044160;
				_case_end_4703045200:;
				_match_end_4703044160:;
			}
		}
		if ((_14717_range_n == 0LL)) {
			((*(*this)._field_i))++;
			goto _iter_end_4703039456;
		}
	}
	_iter_next_4703039456:;
	((*(*this)._field_i))++;
	goto _iter_begin_4703039456;
	_iter_end_4703039456:;
	jule::Slice<_11ce22a00_Token> _16117_tokens = (*this)._field_tokens.slice(static_cast<jule::Int>((_14613_first + 1LL)),static_cast<jule::Int>(((*(*this)._field_i) - 1LL)));
	jule::Slice<jule::Slice<_11ce22a00_Token>> _16218_parts{};
	jule::Slice<_13cfd2d20_Log> _16225_errors{};
	std::tie(_16218_parts,_16225_errors) = _10e5e45f0_parts(_16117_tokens,8LLU,true);
	if ((*this)._field_err) {
		(*this)._field_p->_field_errors=append((*this)._field_p->_field_errors,_16225_errors);
	}
	return _16218_parts;
}



inline jule::Ref<_11ce1fd50_TypeDecl> _10e7e4720_TypeBuilder::_method_build_ident(void) {
	if (((((*(*this)._field_i) + 1LL) < static_cast<jule::I64>((*this)._field_tokens.len())) && ((*this)._field_tokens[static_cast<jule::Int>(((*(*this)._field_i) + 1LL))]._field_id == 23LLU))) {
		return (*this)._method_build_namespace();
	}
	_11ce22a00_Token _17317_token = (*this)._field_tokens[static_cast<jule::Int>((*(*this)._field_i))];
	jule::Ref<_11ce1fd50_IdentTypeDecl> _17417_it = jule::new_struct<_11ce1fd50_IdentTypeDecl>(new( std::nothrow ) _11ce1fd50_IdentTypeDecl(_17317_token,_17317_token._field_kind,false,jule::Slice<jule::Ref<_11ce1fd50_TypeDecl>>()));
	((*(*this)._field_i))++;
	_17417_it->_field_generics=(*this)._method_build_generics();
	return jule::new_struct<_11ce1fd50_TypeDecl>(new( std::nothrow ) _11ce1fd50_TypeDecl(_17317_token,_17417_it));
}



inline jule::Ref<_11ce1fd50_TypeDecl> _10e7e4720_TypeBuilder::_method_build_cpp_link(void) {
	if (((((*(*this)._field_i) + 1LL) >= static_cast<jule::I64>((*this)._field_tokens.len())) || ((*this)._field_tokens[static_cast<jule::Int>(((*(*this)._field_i) + 1LL))]._field_id != 20LLU))) {
		(*this)._method_push_err((*this)._field_tokens[static_cast<jule::Int>((*(*this)._field_i))],jule::Str("invalid_syntax", 14));
		return jule::new_ref<_11ce1fd50_TypeDecl>();
	}
	(*(*this)._field_i)+=2LL;
	jule::Ref<_11ce1fd50_TypeDecl> _19317_t = (*this)._method_build_ident();
	_19317_t->_field_kind.operator jule::Ref<_11ce1fd50_IdentTypeDecl>()->_field_cpp_linked=true;
	return _19317_t;
}



inline jule::Ref<_11ce1fd50_TypeDecl> _10e7e4720_TypeBuilder::_method_build_fn(void) {
	_11ce22a00_Token _19917_token = (*this)._field_tokens[static_cast<jule::Int>((*(*this)._field_i))];
	jule::Ref<_11ce1fd50_FnDecl> _20017_f = (*this)._field_p->_method_build_fn_prototype((*this)._field_tokens,(*this)._field_i,false,true);
	if ((!jule::real(_20017_f))) {
		return jule::new_ref<_11ce1fd50_TypeDecl>();
	}
	return jule::new_struct<_11ce1fd50_TypeDecl>(new( std::nothrow ) _11ce1fd50_TypeDecl(_19917_token,_20017_f));
}



inline jule::Ref<_11ce1fd50_TypeDecl> _10e7e4720_TypeBuilder::_method_build_ptr(void) {
	_11ce22a00_Token _21117_token = (*this)._field_tokens[static_cast<jule::Int>((*(*this)._field_i))];
	if ((((*(*this)._field_i) + 1LL) >= static_cast<jule::I64>((*this)._field_tokens.len()))) {
		(*this)._method_push_err(_21117_token,jule::Str("invalid_syntax", 14));
		return jule::new_ref<_11ce1fd50_TypeDecl>();
	}
	((*(*this)._field_i))++;
	if (((*this)._field_tokens[static_cast<jule::Int>((*(*this)._field_i))]._field_id == 35LLU)) {
		((*(*this)._field_i))++;
		return jule::new_struct<_11ce1fd50_TypeDecl>(new( std::nothrow ) _11ce1fd50_TypeDecl(_21117_token,jule::new_struct<_11ce1fd50_PtrTypeDecl>(new( std::nothrow ) _11ce1fd50_PtrTypeDecl(jule::new_ref<_11ce1fd50_TypeDecl>()))));
	}
	jule::Ref<_11ce1fd50_TypeDecl> _22817_elem = (*this)._method_step();
	if ((!jule::real(_22817_elem))) {
		return jule::new_ref<_11ce1fd50_TypeDecl>();
	}
	return jule::new_struct<_11ce1fd50_TypeDecl>(new( std::nothrow ) _11ce1fd50_TypeDecl(_21117_token,jule::new_struct<_11ce1fd50_PtrTypeDecl>(new( std::nothrow ) _11ce1fd50_PtrTypeDecl(_22817_elem))));
}



inline jule::Ref<_11ce1fd50_TypeDecl> _10e7e4720_TypeBuilder::_method_build_ref(void) {
	_11ce22a00_Token _24217_token = (*this)._field_tokens[static_cast<jule::Int>((*(*this)._field_i))];
	if ((((*(*this)._field_i) + 1LL) >= static_cast<jule::I64>((*this)._field_tokens.len()))) {
		(*this)._method_push_err(_24217_token,jule::Str("invalid_syntax", 14));
		return jule::new_ref<_11ce1fd50_TypeDecl>();
	}
	((*(*this)._field_i))++;
	jule::Ref<_11ce1fd50_TypeDecl> _24917_elem = (*this)._method_step();
	if ((!jule::real(_24917_elem))) {
		return jule::new_ref<_11ce1fd50_TypeDecl>();
	}
	return jule::new_struct<_11ce1fd50_TypeDecl>(new( std::nothrow ) _11ce1fd50_TypeDecl(_24217_token,jule::new_struct<_11ce1fd50_RefTypeDecl>(new( std::nothrow ) _11ce1fd50_RefTypeDecl(_24917_elem))));
}



inline jule::Ref<_11ce1fd50_TypeDecl> _10e7e4720_TypeBuilder::_method_build_op(void) {
	_11ce22a00_Token _26317_token = (*this)._field_tokens[static_cast<jule::Int>((*(*this)._field_i))];
	{
		auto _match_expr{ _26317_token._field_kind };
		if (!(jule::Str("*", 1) == _match_expr)) { goto _case_end_4703129952; }
		_case_begin_4703129952:;
		{
			return (*this)._method_build_ptr();
		}
		goto _match_end_4703129472;
		_case_end_4703129952:;
		if (!(jule::Str("&", 1) == _match_expr)) { goto _case_end_4703130064; }
		_case_begin_4703130064:;
		{
			return (*this)._method_build_ref();
		}
		goto _match_end_4703129472;
		_case_end_4703130064:;
		if (!(jule::Str("&&", 2) == _match_expr)) { goto _case_end_4703130176; }
		_case_begin_4703130176:;
		{
			(*this)._method_push_err(_26317_token,jule::Str("ref_refs_ref", 12));
			return (*this)._method_build_ref();
		}
		goto _match_end_4703129472;
		_case_end_4703130176:;
		_case_begin_4703129584:;
		{
			(*this)._method_push_err(_26317_token,jule::Str("invalid_syntax", 14));
			return jule::new_ref<_11ce1fd50_TypeDecl>();
		}
		goto _match_end_4703129472;
		_case_end_4703129584:;
		_match_end_4703129472:;
	}
}



inline jule::Ref<_11ce1fd50_TypeDecl> _10e7e4720_TypeBuilder::_method_build_slc(void) {
	_11ce22a00_Token _28217_token = (*this)._field_tokens[static_cast<jule::Int>((*(*this)._field_i))];
	((*(*this)._field_i))++;
	jule::Ref<_11ce1fd50_TypeDecl> _28417_elem = (*this)._method_step();
	if ((!jule::real(_28417_elem))) {
		return jule::new_ref<_11ce1fd50_TypeDecl>();
	}
	return jule::new_struct<_11ce1fd50_TypeDecl>(new( std::nothrow ) _11ce1fd50_TypeDecl(_28217_token,jule::new_struct<_11ce1fd50_SlcTypeDecl>(new( std::nothrow ) _11ce1fd50_SlcTypeDecl(_28417_elem))));
}



inline jule::Ref<_11ce1fd50_TypeDecl> _10e7e4720_TypeBuilder::_method_build_arr(void) {
	if (((*(*this)._field_i) >= static_cast<jule::I64>((*this)._field_tokens.len()))) {
		(*this)._method_push_err((*this)._field_tokens[static_cast<jule::Int>(((*(*this)._field_i) - 1LL))],jule::Str("missing_type", 12));
		return jule::new_ref<_11ce1fd50_TypeDecl>();
	}
	jule::Int _30513_expr_delta = (*(*this)._field_i);
	jule::Ref<_11ce1fd50_TypeDecl> _30717_elem = (*this)._method_step();
	if ((!jule::real(_30717_elem))) {
		return jule::new_ref<_11ce1fd50_TypeDecl>();
	}
	jule::Ref<_11ce1fd50_ArrTypeDecl> _31217_arrt = jule::new_struct<_11ce1fd50_ArrTypeDecl>(new( std::nothrow ) _11ce1fd50_ArrTypeDecl(_30717_elem,jule::Ref<_11ce1fd50_Expr>()));
	jule::Slice<_11ce22a00_Token> _31621_expr_tokens{};
	std::tie(std::ignore,_31621_expr_tokens) = _10e5e45f0_range_last((*this)._field_tokens.slice(0LL,static_cast<jule::Int>(_30513_expr_delta)));
	_31621_expr_tokens=_31621_expr_tokens.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_31621_expr_tokens.len()) - 1LL))));
	_11ce22a00_Token _31817_token = _31621_expr_tokens[static_cast<jule::Int>(0LL)];
	if ((((static_cast<jule::I64>(_31621_expr_tokens.len()) == 1LL) && (_31817_token._field_id == 7LLU)) && (_31817_token._field_kind == jule::Str("...", 3)))) {
	} else {
		_31217_arrt->_field_size=(*this)._field_p->_method_build_expr(_31621_expr_tokens);
	}
	return jule::new_struct<_11ce1fd50_TypeDecl>(new( std::nothrow ) _11ce1fd50_TypeDecl(_31817_token,_31217_arrt));
}



inline jule::Ref<_11ce1fd50_TypeDecl> _10e7e4720_TypeBuilder::_method_build_map(jule::Int _33128_colon,jule::Slice<_11ce22a00_Token> _33144_tokens) {
	_11ce22a00_Token _33217_colon_token = (*this)._field_tokens[static_cast<jule::Int>(_33128_colon)];
	if (((_33128_colon == 0LL) || ((_33128_colon + 1LL) >= static_cast<jule::I64>(_33144_tokens.len())))) {
		(*this)._method_push_err(_33217_colon_token,jule::Str("missing_type", 12));
		return jule::new_ref<_11ce1fd50_TypeDecl>();
	}
	jule::Slice<_11ce22a00_Token> _33717_key_tokens = _33144_tokens.slice(0LL,static_cast<jule::Int>(_33128_colon));
	jule::Slice<_11ce22a00_Token> _33817_val_tokens = _33144_tokens.slice(static_cast<jule::Int>((_33128_colon + 1LL)));
	jule::Ref<_11ce1fd50_MapTypeDecl> _33917_mapt = jule::new_struct<_11ce1fd50_MapTypeDecl>(new( std::nothrow ) _11ce1fd50_MapTypeDecl());
	jule::Int _34117_j = 0LL;
	jule::Ref<_11ce1fd50_TypeDecl> _34218_keyt{};
	jule::Bool _34228_ok{};
	std::tie(_34218_keyt,_34228_ok) = (*this)._field_p->_method_build_type(_33717_key_tokens,(&_34117_j),(*this)._field_err);
	if ((!_34228_ok)) {
		return jule::new_ref<_11ce1fd50_TypeDecl>();
	} else if ((_34117_j < static_cast<jule::I64>(_33717_key_tokens.len()))) {
		(*this)._method_push_err(_33717_key_tokens[static_cast<jule::Int>(_34117_j)],jule::Str("invalid_syntax", 14));
	}
	_33917_mapt->_field_key=_34218_keyt;
	_34117_j=0LL;
	jule::Ref<_11ce1fd50_TypeDecl> _35118_valt{};
	std::tie(_35118_valt,_34228_ok) = (*this)._field_p->_method_build_type(_33817_val_tokens,(&_34117_j),(*this)._field_err);
	if ((!_34228_ok)) {
		return jule::new_ref<_11ce1fd50_TypeDecl>();
	} else if ((_34117_j < static_cast<jule::I64>(_33817_val_tokens.len()))) {
		(*this)._method_push_err(_33817_val_tokens[static_cast<jule::Int>(_34117_j)],jule::Str("invalid_syntax", 14));
	}
	_33917_mapt->_field_val=_35118_valt;
	return jule::new_struct<_11ce1fd50_TypeDecl>(new( std::nothrow ) _11ce1fd50_TypeDecl(_33217_colon_token,_33917_mapt));
}



inline jule::Ref<_11ce1fd50_TypeDecl> _10e7e4720_TypeBuilder::_method_build_enumerable(void) {
	_11ce22a00_Token _36617_token = (*this)._field_tokens[static_cast<jule::Int>((*(*this)._field_i))];
	if ((((((*(*this)._field_i) + 2LL) >= static_cast<jule::I64>((*this)._field_tokens.len())) || (_36617_token._field_id != 3LLU)) || (_36617_token._field_kind != jule::Str("[", 1)))) {
		(*this)._method_push_err(_36617_token,jule::Str("invalid_syntax", 14));
		return jule::new_ref<_11ce1fd50_TypeDecl>();
	}
	((*(*this)._field_i))++;
	_36617_token=(*this)._field_tokens[static_cast<jule::Int>((*(*this)._field_i))];
	if (((_36617_token._field_id == 3LLU) && (_36617_token._field_kind == jule::Str("]", 1)))) {
		return (*this)._method_build_slc();
	}
	((*(*this)._field_i))--;
	jule::Slice<_11ce22a00_Token> _38018_map_tokens{};
	jule::Int _38030_colon{};
	std::tie(_38018_map_tokens,_38030_colon) = _10e7e4720_split_map_range((*this)._field_tokens,(*this)._field_i);
	((*(*this)._field_i))++;
	if ((_38030_colon == -1LL)) {
		return (*this)._method_build_arr();
	}
	return (*this)._method_build_map(_38030_colon,_38018_map_tokens);
}



inline jule::Ref<_11ce1fd50_TypeDecl> _10e7e4720_TypeBuilder::_method_step(void) {
	_11ce22a00_Token _38913_token = (*this)._field_tokens[static_cast<jule::Int>((*(*this)._field_i))];
	{
		auto _match_expr{ _38913_token._field_id };
		if (!(1LLU == _match_expr)) { goto _case_end_4703230880; }
		_case_begin_4703230880:;
		{
			return (*this)._method_build_prim();
		}
		goto _match_end_4703227248;
		_case_end_4703230880:;
		if (!(2LLU == _match_expr)) { goto _case_end_4703230528; }
		_case_begin_4703230528:;
		{
			return (*this)._method_build_ident();
		}
		goto _match_end_4703227248;
		_case_end_4703230528:;
		if (!(31LLU == _match_expr)) { goto _case_end_4703230640; }
		_case_begin_4703230640:;
		{
			return (*this)._method_build_cpp_link();
		}
		goto _match_end_4703227248;
		_case_end_4703230640:;
		if (!(33LLU == _match_expr)) { goto _case_end_4703227664; }
		_case_begin_4703227664:;
		{
			return (*this)._method_build_fn();
		}
		goto _match_end_4703227248;
		_case_end_4703227664:;
		if (!(7LLU == _match_expr)) { goto _case_end_4703227776; }
		_case_begin_4703227776:;
		{
			return (*this)._method_build_op();
		}
		goto _match_end_4703227248;
		_case_end_4703227776:;
		if (!(3LLU == _match_expr)) { goto _case_end_4703227888; }
		_case_begin_4703227888:;
		{
			return (*this)._method_build_enumerable();
		}
		goto _match_end_4703227248;
		_case_end_4703227888:;
		_case_begin_4703227360:;
		{
			((*(*this)._field_i))++;
			(*this)._method_push_err(_38913_token,jule::Str("invalid_syntax", 14));
			return jule::new_ref<_11ce1fd50_TypeDecl>();
		}
		goto _match_end_4703227248;
		_case_end_4703227360:;
		_match_end_4703227248:;
	}
}



inline std::tuple<jule::Ref<_11ce1fd50_TypeDecl>,jule::Bool> _10e7e4720_TypeBuilder::_method_build(void) {
	jule::Bool _41844_ok{jule::Bool()};
	jule::Ref<_11ce1fd50_TypeDecl> _41917_root = (*this)._method_step();
	if ((!jule::real(_41917_root))) {
		_41844_ok = false;
		return std::make_tuple(_10e7e4720_build_void_type(),_41844_ok);
	}
	_41844_ok = true;
	return std::make_tuple(_41917_root,_41844_ok);
}







std::ostream &operator<<(std::ostream &_Stream, const _10e7e4720_TypeBuilder &_Src) {
	_Stream << "TypeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}



inline jule::I64 _10f4ed830_Const::_method_read_i64(void) {
	if ((!(*this)._method_is_i64())) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::I64();
}



inline jule::U64 _10f4ed830_Const::_method_read_u64(void) {
	if ((!(*this)._method_is_u64())) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::U64();
}



inline jule::Bool _10f4ed830_Const::_method_read_bool(void) {
	if ((!(*this)._method_is_bool())) {
		return false;
	}
	return (*this)._field_data.operator jule::Bool();
}



inline jule::Str _10f4ed830_Const::_method_read_str(void) {
	if ((!(*this)._method_is_str())) {
		return jule::Str("", 0);
	}
	return (*this)._field_data.operator jule::Str();
}



inline jule::F64 _10f4ed830_Const::_method_read_f64(void) {
	if ((!(*this)._method_is_f64())) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::F64();
}



inline jule::I64 _10f4ed830_Const::_method_as_i64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4703320640; }
		_case_begin_4703320640:;
		{
			return (*this)._field_data.operator jule::I64();
		}
		goto _match_end_4703318752;
		_case_end_4703320640:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4703320752; }
		_case_begin_4703320752:;
		{
			return static_cast<jule::I64>((*this)._field_data.operator jule::U64());
		}
		goto _match_end_4703318752;
		_case_end_4703320752:;
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4703319872; }
		_case_begin_4703319872:;
		{
			return static_cast<jule::I64>((*this)._field_data.operator jule::F64());
		}
		goto _match_end_4703318752;
		_case_end_4703319872:;
		_case_begin_4703318992:;
		{
			return 0LL;
		}
		goto _match_end_4703318752;
		_case_end_4703318992:;
		_match_end_4703318752:;
	}
}



inline jule::U64 _10f4ed830_Const::_method_as_u64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4703327648; }
		_case_begin_4703327648:;
		{
			return (*this)._field_data.operator jule::U64();
		}
		goto _match_end_4703326576;
		_case_end_4703327648:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4703327760; }
		_case_begin_4703327760:;
		{
			return static_cast<jule::U64>((*this)._field_data.operator jule::I64());
		}
		goto _match_end_4703326576;
		_case_end_4703327760:;
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4703327104; }
		_case_begin_4703327104:;
		{
			return static_cast<jule::U64>((*this)._field_data.operator jule::F64());
		}
		goto _match_end_4703326576;
		_case_end_4703327104:;
		_case_begin_4703326688:;
		{
			return 0LL;
		}
		goto _match_end_4703326576;
		_case_end_4703326688:;
		_match_end_4703326576:;
	}
}



inline jule::F64 _10f4ed830_Const::_method_as_f64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4703335472; }
		_case_begin_4703335472:;
		{
			return (*this)._field_data.operator jule::F64();
		}
		goto _match_end_4703334272;
		_case_end_4703335472:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4703335584; }
		_case_begin_4703335584:;
		{
			return static_cast<jule::F64>((*this)._field_data.operator jule::I64());
		}
		goto _match_end_4703334272;
		_case_end_4703335584:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4703334688; }
		_case_begin_4703334688:;
		{
			return static_cast<jule::F64>((*this)._field_data.operator jule::U64());
		}
		goto _match_end_4703334272;
		_case_end_4703334688:;
		_case_begin_4703334384:;
		{
			return 0LL;
		}
		goto _match_end_4703334272;
		_case_end_4703334384:;
		_match_end_4703334272:;
	}
}



inline void _10f4ed830_Const::_method_set_i64(jule::I64 _13830_x) {
	(*this)._field_data=jule::Any(_13830_x);
}



inline void _10f4ed830_Const::_method_set_u64(jule::U64 _14030_x) {
	(*this)._field_data=jule::Any(_14030_x);
}



inline void _10f4ed830_Const::_method_set_bool(jule::Bool _14231_x) {
	(*this)._field_data=jule::Any(_14231_x);
}



inline void _10f4ed830_Const::_method_set_str(jule::Str _14430_x) {
	(*this)._field_data=jule::Any(_14430_x);
}



inline void _10f4ed830_Const::_method_set_f64(jule::F64 _14630_x) {
	(*this)._field_data=jule::Any(_14630_x);
}



inline void _10f4ed830_Const::_method_set_nil(void) {
	(*this)._field_data=jule::Any(nullptr);
}



inline void _10f4ed830_Const::_method_set_by_type(jule::F64 _15030_v,_10f4ed830_Const _15038_x) {
	{
		auto _match_expr{ true };
		if (!(_15038_x._method_is_f64() == _match_expr)) { goto _case_end_4703360384; }
		_case_begin_4703360384:;
		{
			(*this)._method_set_f64(_15030_v);
		}
		goto _match_end_4703360032;
		_case_end_4703360384:;
		if (!((*this)._method_is_f64() == _match_expr)) { goto _case_end_4703360496; }
		_case_begin_4703360496:;
		{
			(*this)._method_set_f64(_15030_v);
		}
		goto _match_end_4703360032;
		_case_end_4703360496:;
		if (!((*this)._method_is_i64() == _match_expr)) { goto _case_end_4703360608; }
		_case_begin_4703360608:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>(_15030_v));
		}
		goto _match_end_4703360032;
		_case_end_4703360608:;
		if (!((*this)._method_is_u64() == _match_expr)) { goto _case_end_4703360736; }
		_case_begin_4703360736:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>(_15030_v));
		}
		goto _match_end_4703360032;
		_case_end_4703360736:;
		_match_end_4703360032:;
	}
}



inline jule::Bool _10f4ed830_Const::_method_is_i64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4703371648; }
		_case_begin_4703371648:;
		{
			return true;
		}
		goto _match_end_4703368784;
		_case_end_4703371648:;
		_case_begin_4703357424:;
		{
			return false;
		}
		goto _match_end_4703368784;
		_case_end_4703357424:;
		_match_end_4703368784:;
	}
}



inline jule::Bool _10f4ed830_Const::_method_is_u64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4703374368; }
		_case_begin_4703374368:;
		{
			return true;
		}
		goto _match_end_4703372080;
		_case_end_4703374368:;
		_case_begin_4703372192:;
		{
			return false;
		}
		goto _match_end_4703372080;
		_case_end_4703372192:;
		_match_end_4703372080:;
	}
}



inline jule::Bool _10f4ed830_Const::_method_is_bool(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Bool>())) { goto _case_end_4703377088; }
		_case_begin_4703377088:;
		{
			return true;
		}
		goto _match_end_4703375904;
		_case_end_4703377088:;
		_case_begin_4703376016:;
		{
			return false;
		}
		goto _match_end_4703375904;
		_case_end_4703376016:;
		_match_end_4703375904:;
	}
}



inline jule::Bool _10f4ed830_Const::_method_is_str(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Str>())) { goto _case_end_4703379808; }
		_case_begin_4703379808:;
		{
			return true;
		}
		goto _match_end_4703378624;
		_case_end_4703379808:;
		_case_begin_4703378736:;
		{
			return false;
		}
		goto _match_end_4703378624;
		_case_end_4703378736:;
		_match_end_4703378624:;
	}
}



inline jule::Bool _10f4ed830_Const::_method_is_f64(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4703382528; }
		_case_begin_4703382528:;
		{
			return true;
		}
		goto _match_end_4703381344;
		_case_end_4703382528:;
		_case_begin_4703381456:;
		{
			return false;
		}
		goto _match_end_4703381344;
		_case_end_4703381456:;
		_match_end_4703381344:;
	}
}



inline jule::Bool _10f4ed830_Const::_method_is_nil(void) {
	return ((*this)._field_data == nullptr);
}



inline jule::Bool _10f4ed830_Const::_method_are_same_types(_10f4ed830_Const _20733_x) {
	{
		auto _match_expr{ true };
		if (!(((*this)._method_is_i64() == _20733_x._method_is_i64()) == _match_expr)) { goto _case_end_4703388080; }
		_case_begin_4703388080:;
		{
			return true;
		}
		goto _match_end_4703387504;
		_case_end_4703388080:;
		if (!(((*this)._method_is_u64() == _20733_x._method_is_u64()) == _match_expr)) { goto _case_end_4703388192; }
		_case_begin_4703388192:;
		{
			return true;
		}
		goto _match_end_4703387504;
		_case_end_4703388192:;
		if (!(((*this)._method_is_f64() == _20733_x._method_is_f64()) == _match_expr)) { goto _case_end_4703388304; }
		_case_begin_4703388304:;
		{
			return true;
		}
		goto _match_end_4703387504;
		_case_end_4703388304:;
		if (!(((*this)._method_is_bool() == _20733_x._method_is_bool()) == _match_expr)) { goto _case_end_4703389232; }
		_case_begin_4703389232:;
		{
			return true;
		}
		goto _match_end_4703387504;
		_case_end_4703389232:;
		if (!(((*this)._method_is_str() == _20733_x._method_is_str()) == _match_expr)) { goto _case_end_4703389344; }
		_case_begin_4703389344:;
		{
			return true;
		}
		goto _match_end_4703387504;
		_case_end_4703389344:;
		if (!(((*this)._method_is_nil() == _20733_x._method_is_nil()) == _match_expr)) { goto _case_end_4703389456; }
		_case_begin_4703389456:;
		{
			return true;
		}
		goto _match_end_4703387504;
		_case_end_4703389456:;
		_case_begin_4703387776:;
		{
			return false;
		}
		goto _match_end_4703387504;
		_case_end_4703387776:;
		_match_end_4703387504:;
	}
}



inline jule::Bool _10f4ed830_Const::_method_and(_10f4ed830_Const _22522_x) {
	{
		auto _match_expr{ true };
		if (!(((*this)._method_is_bool() && _22522_x._method_is_bool()) == _match_expr)) { goto _case_end_4703403472; }
		_case_begin_4703403472:;
		{
			return ((*this)._method_read_bool() && _22522_x._method_read_bool());
		}
		goto _match_end_4703402048;
		_case_end_4703403472:;
		_case_begin_4703402320:;
		{
			return false;
		}
		goto _match_end_4703402048;
		_case_end_4703402320:;
		_match_end_4703402048:;
	}
}



inline jule::Bool _10f4ed830_Const::_method_or(_10f4ed830_Const _23721_x) {
	{
		auto _match_expr{ true };
		if (!(((*this)._method_is_bool() && _23721_x._method_is_bool()) == _match_expr)) { goto _case_end_4703409680; }
		_case_begin_4703409680:;
		{
			return ((*this)._method_read_bool() || _23721_x._method_read_bool());
		}
		goto _match_end_4703408256;
		_case_end_4703409680:;
		_case_begin_4703408528:;
		{
			return false;
		}
		goto _match_end_4703408256;
		_case_end_4703408528:;
		_match_end_4703408256:;
	}
}



inline jule::Bool _10f4ed830_Const::_method_eqs(_10f4ed830_Const _24922_x) {
	{
		auto _match_expr{ true };
		if (!((*this)._method_is_nil() == _match_expr)) { goto _case_end_4703415104; }
		_case_begin_4703415104:;
		{
			return _24922_x._method_is_nil();
		}
		goto _match_end_4703414528;
		_case_end_4703415104:;
		if (!((*this)._method_is_bool() == _match_expr)) { goto _case_end_4703415216; }
		_case_begin_4703415216:;
		{
			return (_24922_x._method_is_bool() && ((*this)._method_read_bool() == _24922_x._method_read_bool()));
		}
		goto _match_end_4703414528;
		_case_end_4703415216:;
		if (!((*this)._method_is_str() == _match_expr)) { goto _case_end_4703415328; }
		_case_begin_4703415328:;
		{
			return (_24922_x._method_is_str() && ((*this)._method_read_str() == _24922_x._method_read_str()));
		}
		goto _match_end_4703414528;
		_case_end_4703415328:;
		if (!((*this)._method_is_i64() == _match_expr)) { goto _case_end_4703416256; }
		_case_begin_4703416256:;
		{
			return (static_cast<jule::I64>((*this)._method_read_i64()) == static_cast<jule::I64>(_24922_x._method_as_i64()));
		}
		goto _match_end_4703414528;
		_case_end_4703416256:;
		if (!((*this)._method_is_u64() == _match_expr)) { goto _case_end_4703416368; }
		_case_begin_4703416368:;
		{
			return (static_cast<jule::U64>((*this)._method_read_u64()) == static_cast<jule::U64>(_24922_x._method_as_u64()));
		}
		goto _match_end_4703414528;
		_case_end_4703416368:;
		if (!((*this)._method_is_f64() == _match_expr)) { goto _case_end_4703416480; }
		_case_begin_4703416480:;
		{
			return (static_cast<jule::F64>((*this)._method_read_f64()) == static_cast<jule::F64>(_24922_x._method_as_f64()));
		}
		goto _match_end_4703414528;
		_case_end_4703416480:;
		_case_begin_4703414800:;
		{
			return false;
		}
		goto _match_end_4703414528;
		_case_end_4703414800:;
		_match_end_4703414528:;
	}
}



inline jule::Bool _10f4ed830_Const::_method_lt(_10f4ed830_Const _28121_x) {
	{
		auto _match_expr{ true };
		if (!((*this)._method_is_i64() == _match_expr)) { goto _case_end_4703435248; }
		_case_begin_4703435248:;
		{
			return (static_cast<jule::I64>((*this)._method_read_i64()) < static_cast<jule::I64>(_28121_x._method_as_i64()));
		}
		goto _match_end_4703433872;
		_case_end_4703435248:;
		if (!((*this)._method_is_u64() == _match_expr)) { goto _case_end_4703434400; }
		_case_begin_4703434400:;
		{
			return (static_cast<jule::U64>((*this)._method_read_u64()) < static_cast<jule::U64>(_28121_x._method_as_u64()));
		}
		goto _match_end_4703433872;
		_case_end_4703434400:;
		if (!((*this)._method_is_f64() == _match_expr)) { goto _case_end_4703434512; }
		_case_begin_4703434512:;
		{
			return (static_cast<jule::F64>((*this)._method_read_f64()) < static_cast<jule::F64>(_28121_x._method_as_f64()));
		}
		goto _match_end_4703433872;
		_case_end_4703434512:;
		_case_begin_4703434096:;
		{
			return false;
		}
		goto _match_end_4703433872;
		_case_end_4703434096:;
		_match_end_4703433872:;
	}
}



inline jule::Bool _10f4ed830_Const::_method_gt(_10f4ed830_Const _30421_x) {
	{
		auto _match_expr{ true };
		if (!((*this)._method_is_i64() == _match_expr)) { goto _case_end_4703447696; }
		_case_begin_4703447696:;
		{
			return (static_cast<jule::I64>((*this)._method_read_i64()) > static_cast<jule::I64>(_30421_x._method_as_i64()));
		}
		goto _match_end_4703446304;
		_case_end_4703447696:;
		if (!((*this)._method_is_u64() == _match_expr)) { goto _case_end_4703446848; }
		_case_begin_4703446848:;
		{
			return (static_cast<jule::U64>((*this)._method_read_u64()) > static_cast<jule::U64>(_30421_x._method_as_u64()));
		}
		goto _match_end_4703446304;
		_case_end_4703446848:;
		if (!((*this)._method_is_f64() == _match_expr)) { goto _case_end_4703446960; }
		_case_begin_4703446960:;
		{
			return (static_cast<jule::F64>((*this)._method_read_f64()) > static_cast<jule::F64>(_30421_x._method_as_f64()));
		}
		goto _match_end_4703446304;
		_case_end_4703446960:;
		_case_begin_4703446544:;
		{
			return false;
		}
		goto _match_end_4703446304;
		_case_end_4703446544:;
		_match_end_4703446304:;
	}
}



inline jule::Bool _10f4ed830_Const::_method_add(_10f4ed830_Const _32626_x) {
	{
		auto _match_expr{ true };
		if (!((*this)._method_is_str() == _match_expr)) { goto _case_end_4703459808; }
		_case_begin_4703459808:;
		{
			if ((!_32626_x._method_is_str())) {
				return false;
			}
			(*this)._method_set_str(((*this)._method_read_str() + _32626_x._method_read_str()));
		}
		goto _match_end_4703458416;
		_case_end_4703459808:;
		if (!((*this)._method_is_f64() == _match_expr || (*this)._method_is_i64() == _match_expr || (*this)._method_is_u64() == _match_expr)) { goto _case_end_4703458960; }
		_case_begin_4703458960:;
		{
			(*this)._method_set_by_type(static_cast<jule::F64>((static_cast<jule::F64>((*this)._method_as_f64()) + static_cast<jule::F64>(_32626_x._method_as_f64()))),_32626_x);
		}
		goto _match_end_4703458416;
		_case_end_4703458960:;
		_case_begin_4703458656:;
		{
			return false;
		}
		goto _match_end_4703458416;
		_case_end_4703458656:;
		_match_end_4703458416:;
	}
	return true;
}



inline jule::Bool _10f4ed830_Const::_method_sub(_10f4ed830_Const _34726_x) {
	{
		auto _match_expr{ true };
		if (!((*this)._method_is_f64() == _match_expr || (*this)._method_is_i64() == _match_expr || (*this)._method_is_u64() == _match_expr)) { goto _case_end_4703473536; }
		_case_begin_4703473536:;
		{
			(*this)._method_set_by_type(static_cast<jule::F64>((static_cast<jule::F64>((*this)._method_as_f64()) - static_cast<jule::F64>(_34726_x._method_as_f64()))),_34726_x);
		}
		goto _match_end_4703472112;
		_case_end_4703473536:;
		_case_begin_4703472384:;
		{
			return false;
		}
		goto _match_end_4703472112;
		_case_end_4703472384:;
		_match_end_4703472112:;
	}
	return true;
}



inline jule::Bool _10f4ed830_Const::_method_mul(_10f4ed830_Const _36226_x) {
	{
		auto _match_expr{ true };
		if (!((*this)._method_is_f64() == _match_expr || (*this)._method_is_i64() == _match_expr || (*this)._method_is_u64() == _match_expr)) { goto _case_end_4703482832; }
		_case_begin_4703482832:;
		{
			(*this)._method_set_by_type(static_cast<jule::F64>((static_cast<jule::F64>((*this)._method_as_f64()) * static_cast<jule::F64>(_36226_x._method_as_f64()))),_36226_x);
		}
		goto _match_end_4703481408;
		_case_end_4703482832:;
		_case_begin_4703481680:;
		{
			return false;
		}
		goto _match_end_4703481408;
		_case_end_4703481680:;
		_match_end_4703481408:;
	}
	return true;
}



inline jule::Bool _10f4ed830_Const::_method_div(_10f4ed830_Const _38126_x) {
	{
		auto _match_expr{ true };
		if (!((*this)._method_is_f64() == _match_expr)) { goto _case_end_4703491504; }
		_case_begin_4703491504:;
		{
			jule::F64 _38417_l = static_cast<jule::F64>(_38126_x._method_as_f64());
			if ((_38417_l == 0LL)) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div(static_cast<jule::F64>((*this)._method_read_f64()),_38417_l)));
		}
		goto _match_end_4703490080;
		_case_end_4703491504:;
		if (!((*this)._method_is_i64() == _match_expr)) { goto _case_end_4703490656; }
		_case_begin_4703490656:;
		{
			jule::F64 _39117_l = static_cast<jule::F64>(_38126_x._method_as_f64());
			if ((_39117_l == 0LL)) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div(static_cast<jule::F64>((*this)._method_as_f64()),_39117_l)));
		}
		goto _match_end_4703490080;
		_case_end_4703490656:;
		if (!((*this)._method_is_u64() == _match_expr)) { goto _case_end_4703490768; }
		_case_begin_4703490768:;
		{
			jule::F64 _39817_l = static_cast<jule::F64>(_38126_x._method_as_f64());
			if ((_39817_l == 0LL)) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div(static_cast<jule::F64>((*this)._method_as_f64()),_39817_l)));
		}
		goto _match_end_4703490080;
		_case_end_4703490768:;
		_case_begin_4703490352:;
		{
			return false;
		}
		goto _match_end_4703490080;
		_case_end_4703490352:;
		_match_end_4703490080:;
	}
	return true;
}



inline jule::Bool _10f4ed830_Const::_method_mod(_10f4ed830_Const _41326_x) {
	{
		auto _match_expr{ true };
		if (!((*this)._method_is_i64() == _match_expr)) { goto _case_end_4703513232; }
		_case_begin_4703513232:;
		{
			jule::I64 _41617_l = static_cast<jule::I64>(_41326_x._method_as_i64());
			if ((_41617_l == 0LL)) {
				return false;
			}
			(*this)._method_set_i64(static_cast<jule::I64>((static_cast<jule::I64>((*this)._method_read_i64()) % _41617_l)));
		}
		goto _match_end_4703511808;
		_case_end_4703513232:;
		if (!((*this)._method_is_u64() == _match_expr)) { goto _case_end_4703512384; }
		_case_begin_4703512384:;
		{
			jule::U64 _42317_l = static_cast<jule::U64>(_41326_x._method_as_u64());
			if ((_42317_l == 0LL)) {
				return false;
			}
			(*this)._method_set_u64(static_cast<jule::U64>((static_cast<jule::U64>((*this)._method_read_u64()) % _42317_l)));
		}
		goto _match_end_4703511808;
		_case_end_4703512384:;
		_case_begin_4703512080:;
		{
			return false;
		}
		goto _match_end_4703511808;
		_case_end_4703512080:;
		_match_end_4703511808:;
	}
	return true;
}



inline jule::Bool _10f4ed830_Const::_method_bitwise_and(_10f4ed830_Const _43734_x) {
	{
		auto _match_expr{ true };
		if (!((*this)._method_is_i64() == _match_expr)) { goto _case_end_4703529216; }
		_case_begin_4703529216:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((static_cast<jule::I64>((*this)._method_read_i64()) & static_cast<jule::I64>(_43734_x._method_as_i64()))));
		}
		goto _match_end_4703527792;
		_case_end_4703529216:;
		if (!((*this)._method_is_u64() == _match_expr)) { goto _case_end_4703528368; }
		_case_begin_4703528368:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((static_cast<jule::U64>((*this)._method_read_u64()) & static_cast<jule::U64>(_43734_x._method_as_u64()))));
		}
		goto _match_end_4703527792;
		_case_end_4703528368:;
		_case_begin_4703528064:;
		{
			return false;
		}
		goto _match_end_4703527792;
		_case_end_4703528064:;
		_match_end_4703527792:;
	}
	return true;
}



inline jule::Bool _10f4ed830_Const::_method_bitwise_or(_10f4ed830_Const _45333_x) {
	{
		auto _match_expr{ true };
		if (!((*this)._method_is_i64() == _match_expr)) { goto _case_end_4703540704; }
		_case_begin_4703540704:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((static_cast<jule::I64>((*this)._method_read_i64()) | static_cast<jule::I64>(_45333_x._method_as_i64()))));
		}
		goto _match_end_4703539280;
		_case_end_4703540704:;
		if (!((*this)._method_is_u64() == _match_expr)) { goto _case_end_4703539856; }
		_case_begin_4703539856:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((static_cast<jule::U64>((*this)._method_read_u64()) | static_cast<jule::U64>(_45333_x._method_as_u64()))));
		}
		goto _match_end_4703539280;
		_case_end_4703539856:;
		_case_begin_4703539552:;
		{
			return false;
		}
		goto _match_end_4703539280;
		_case_end_4703539552:;
		_match_end_4703539280:;
	}
	return true;
}



inline jule::Bool _10f4ed830_Const::_method_xor(_10f4ed830_Const _46926_x) {
	{
		auto _match_expr{ true };
		if (!((*this)._method_is_i64() == _match_expr)) { goto _case_end_4703552480; }
		_case_begin_4703552480:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((static_cast<jule::I64>((*this)._method_read_i64()) ^ static_cast<jule::I64>(_46926_x._method_as_i64()))));
		}
		goto _match_end_4703551056;
		_case_end_4703552480:;
		if (!((*this)._method_is_u64() == _match_expr)) { goto _case_end_4703551632; }
		_case_begin_4703551632:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((static_cast<jule::U64>((*this)._method_read_u64()) ^ static_cast<jule::U64>(_46926_x._method_as_u64()))));
		}
		goto _match_end_4703551056;
		_case_end_4703551632:;
		_case_begin_4703551328:;
		{
			return false;
		}
		goto _match_end_4703551056;
		_case_end_4703551328:;
		_match_end_4703551056:;
	}
	return true;
}



inline jule::Bool _10f4ed830_Const::_method_lshift(_10f4ed830_Const _48529_x) {
	{
		auto _match_expr{ true };
		if (!((*this)._method_is_i64() == _match_expr)) { goto _case_end_4703563968; }
		_case_begin_4703563968:;
		{
			jule::I64 _48817_l = static_cast<jule::I64>((*this)._method_as_i64());
			if ((_48817_l < 0LL)) {
				jule::U64 _49021_r = static_cast<jule::U64>(_48529_x._method_as_u64());
				(*this)._method_set_i64((_48817_l << _49021_r));
			} else {
				{
					_10f4ed830_lshift_unsig((&(*this)),_48529_x);
				}
			}
		}
		goto _match_end_4703562544;
		_case_end_4703563968:;
		if (!((*this)._method_is_u64() == _match_expr)) { goto _case_end_4703563120; }
		_case_begin_4703563120:;
		{
			{
				_10f4ed830_lshift_unsig((&(*this)),_48529_x);
			}
		}
		goto _match_end_4703562544;
		_case_end_4703563120:;
		_case_begin_4703562816:;
		{
			return false;
		}
		goto _match_end_4703562544;
		_case_end_4703562816:;
		_match_end_4703562544:;
	}
	return true;
}



inline jule::Bool _10f4ed830_Const::_method_rshift(_10f4ed830_Const _50829_x) {
	{
		auto _match_expr{ true };
		if (!((*this)._method_is_i64() == _match_expr)) { goto _case_end_4703577824; }
		_case_begin_4703577824:;
		{
			jule::I64 _51117_l = static_cast<jule::I64>((*this)._method_as_i64());
			if ((_51117_l < 0LL)) {
				jule::U64 _51321_r = static_cast<jule::U64>(_50829_x._method_as_u64());
				(*this)._method_set_i64((_51117_l >> _51321_r));
			} else {
				{
					_10f4ed830_rshift_unsig((&(*this)),_50829_x);
				}
			}
		}
		goto _match_end_4703576400;
		_case_end_4703577824:;
		if (!((*this)._method_is_u64() == _match_expr)) { goto _case_end_4703576976; }
		_case_begin_4703576976:;
		{
			{
				_10f4ed830_rshift_unsig((&(*this)),_50829_x);
			}
		}
		goto _match_end_4703576400;
		_case_end_4703576976:;
		_case_begin_4703576672:;
		{
			return false;
		}
		goto _match_end_4703576400;
		_case_end_4703576672:;
		_match_end_4703576400:;
	}
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _10f4ed830_Const &_Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e3fc8f0_FieldIns &_Src) {
	_Stream << "FieldIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _10e3fc8f0_StructIns::_method_to_str(void) {
	jule::Str _20717_kind = jule::Str("", 0);
	_20717_kind+=(*this)._field_decl->_field_ident;
	if ((static_cast<jule::I64>((*this)._field_generics.len()) > 0LL)) {
		_20717_kind+=jule::Str("[", 1);
		{
			auto &__julec_range_expr = (*this)._field_generics;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_10eeb79b0_TypeKind> _10e3fc8f0_g{jule::Ref<_10eeb79b0_TypeKind>()};_10e3fc8f0_g = *__julec_range_begin;
				_iter_begin_4708170720:;
				{
					_20717_kind+=_10e3fc8f0_g->_method_to_str();
					_20717_kind+=jule::Str(",", 1);
				}
				_iter_next_4708170720:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _10e3fc8f0_g = *__julec_range_begin; goto _iter_begin_4708170720; }
				_iter_end_4708170720:;
			}
		}
		_20717_kind=_20717_kind.slice(0LL,static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_20717_kind.len()) - 1LL))));
		_20717_kind+=jule::Str("]", 1);
	}
	return _20717_kind;
}



inline jule::Bool _10e3fc8f0_StructIns::_method_equals(jule::Ref<_10eeb79b0_TypeKind> _22221_other) {
	jule::Ref<_10e3fc8f0_StructIns> _22313_s = (_22221_other).alloc->_method_strct();
	if ((!jule::real(_22313_s))) {
		return false;
	}
	if ((((*this)._field_decl).alloc != (_22313_s->_field_decl).alloc)) {
		return false;
	}
	if ((static_cast<jule::I64>((*this)._field_generics.len()) != static_cast<jule::I64>(_22313_s->_field_generics.len()))) {
		return false;
	}
	jule::Int _23617_i = 0LL;
	_iter_begin_4708183200:;
	if (!((_23617_i < static_cast<jule::I64>((*this)._field_generics.len())))) { goto _iter_end_4708183200; }
	{
		if ((!(*this)._field_generics[static_cast<jule::Int>(_23617_i)]->_method_equals(_22313_s->_field_generics[static_cast<jule::Int>(_23617_i)]))) {
			return false;
		}
	}
	_iter_next_4708183200:;
	(_23617_i)++;
	goto _iter_begin_4708183200;
	_iter_end_4708183200:;
	return true;
}



inline jule::Ref<_10e56a140_Fn> _10e3fc8f0_StructIns::_method_find_method(jule::Str _25034_ident,jule::Bool _25046_statically) {
	{
		auto &__julec_range_expr = (*this)._field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e56a140_Fn> _10e3fc8f0_f{jule::Ref<_10e56a140_Fn>()};_10e3fc8f0_f = *__julec_range_begin;
			_iter_begin_4708196544:;
			{
				if (((_10e3fc8f0_f->_field_statically == _25046_statically) && (_10e3fc8f0_f->_field_ident == _25034_ident))) {
					return _10e3fc8f0_f;
				}
			}
			_iter_next_4708196544:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e3fc8f0_f = *__julec_range_begin; goto _iter_begin_4708196544; }
			_iter_end_4708196544:;
		}
	}
	return jule::new_ref<_10e56a140_Fn>();
}



inline jule::Ref<_10e3fc8f0_FieldIns> _10e3fc8f0_StructIns::_method_find_field(jule::Str _26133_ident) {
	{
		auto &__julec_range_expr = (*this)._field_fields;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e3fc8f0_FieldIns> _10e3fc8f0_f{jule::Ref<_10e3fc8f0_FieldIns>()};_10e3fc8f0_f = *__julec_range_begin;
			_iter_begin_4708202608:;
			{
				if ((_10e3fc8f0_f->_field_decl->_field_ident == _26133_ident)) {
					return _10e3fc8f0_f;
				}
			}
			_iter_next_4708202608:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e3fc8f0_f = *__julec_range_begin; goto _iter_begin_4708202608; }
			_iter_end_4708202608:;
		}
	}
	return jule::new_ref<_10e3fc8f0_FieldIns>();
}







std::ostream &operator<<(std::ostream &_Stream, const _10e3fc8f0_StructIns &_Src) {
	_Stream << "StructIns{";
	_Stream << "checked:" << _Src._field_checked << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "has_mut:" << _Src._field_has_mut;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e56a140_RetType &_Src) {
	_Stream << "RetType{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _10e56a140_ParamIns::_method_to_str(void) {
	jule::Str _19217_s = jule::Str("", 0);
	if ((*this)._field_decl->_field_mutable) {
		_19217_s+=jule::Str("mut ", 4);
	}
	if ((*this)._field_decl->_method_is_self()) {
		if ((*this)._field_decl->_method_is_ref()) {
			_19217_s+=jule::Str("&", 1);
		}
		_19217_s+=jule::Str("self", 4);
		return _19217_s;
	}
	if ((*this)._field_decl->_field_variadic) {
		_19217_s+=jule::Str("...", 3);
	}
	if (jule::real((*this)._field_kind)) {
		_19217_s+=(*this)._field_kind->_method_to_str();
	}
	return _19217_s;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e56a140_ParamIns &_Src) {
	_Stream << "ParamIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _10e56a140_FnIns::_method_to_str(void) {
	jule::Str _23217_s = jule::Str("", 0);
	if ((*this)._field_decl->_field_statically) {
		_23217_s+=jule::Str("static ", 7);
	}
	if ((*this)._field_decl->_field_unsafety) {
		_23217_s+=jule::Str("unsafe ", 7);
	}
	_23217_s+=jule::Str("fn", 2);
	if ((static_cast<jule::I64>((*this)._field_generics.len()) > 0LL)) {
		_23217_s+=jule::Str("[", 1);
		{
			auto &__julec_range_expr = (*this)._field_generics;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Int _10e56a140_i{jule::Int()};_10e56a140_i = 0;
				jule::Ref<_10eeb79b0_TypeKind> _10e56a140_t{jule::Ref<_10eeb79b0_TypeKind>()};_10e56a140_t = *__julec_range_begin;
				_iter_begin_4708318944:;
				{
					_23217_s+=_10e56a140_t->_method_to_str();
					if (((_10e56a140_i + 1LL) < static_cast<jule::I64>((*this)._field_generics.len()))) {
						_23217_s+=jule::Str(",", 1);
					}
				}
				_iter_next_4708318944:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { ++_10e56a140_i; _10e56a140_t = *__julec_range_begin; goto _iter_begin_4708318944; }
				_iter_end_4708318944:;
			}
		}
		_23217_s+=jule::Str("]", 1);
	} else if ((static_cast<jule::I64>((*this)._field_decl->_field_generics.len()) > 0LL)) {
		_23217_s+=jule::Str("[", 1);
		{
			auto &__julec_range_expr = (*this)._field_decl->_field_generics;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Int _10e56a140_i{jule::Int()};_10e56a140_i = 0;
				jule::Ref<_11ce1fd50_GenericDecl> _10e56a140_g{jule::Ref<_11ce1fd50_GenericDecl>()};_10e56a140_g = *__julec_range_begin;
				_iter_begin_4708326864:;
				{
					_23217_s+=_10e56a140_g->_field_ident;
					if (((_10e56a140_i + 1LL) < static_cast<jule::I64>((*this)._field_decl->_field_generics.len()))) {
						_23217_s+=jule::Str(",", 1);
					}
				}
				_iter_next_4708326864:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { ++_10e56a140_i; _10e56a140_g = *__julec_range_begin; goto _iter_begin_4708326864; }
				_iter_end_4708326864:;
			}
		}
		_23217_s+=jule::Str("]", 1);
	}
	_23217_s+=jule::Str("(", 1);
	jule::I64 _26513_n = static_cast<jule::I64>((*this)._field_params.len());
	if ((_26513_n > 0LL)) {
		{
			auto &__julec_range_expr = (*this)._field_params;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_10e56a140_ParamIns> _10e56a140_p{jule::Ref<_10e56a140_ParamIns>()};_10e56a140_p = *__julec_range_begin;
				_iter_begin_4708336144:;
				{
					_23217_s+=_10e56a140_p->_method_to_str();
					_23217_s+=jule::Str(",", 1);
				}
				_iter_next_4708336144:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _10e56a140_p = *__julec_range_begin; goto _iter_begin_4708336144; }
				_iter_end_4708336144:;
			}
		}
		_23217_s=_23217_s.slice(0LL,static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_23217_s.len()) - 1LL))));
	}
	_23217_s+=jule::Str(")", 1);
	if ((!(*this)._field_decl->_method_is_void())) {
		_23217_s+=jule::Str(":", 1);
		_23217_s+=(*this)._field_result->_method_to_str();
	}
	return _23217_s;
}



inline jule::Bool _10e56a140_FnIns::_method_equals(jule::Ref<_10eeb79b0_TypeKind> _28221_other) {
	jule::Ref<_10e56a140_FnIns> _28313_f = (_28221_other).alloc->_method_fnc();
	if ((!jule::real(_28313_f))) {
		return false;
	}
	if (((*this)._field_decl->_field_statically != _28313_f->_field_decl->_field_statically)) {
		return false;
	}
	if (((*this)._field_decl->_field_unsafety != _28313_f->_field_decl->_field_unsafety)) {
		return false;
	}
	if ((static_cast<jule::I64>((*this)._field_generics.len()) != static_cast<jule::I64>(_28313_f->_field_generics.len()))) {
		return false;
	}
	if (((*this)._field_decl->_method_is_void() != _28313_f->_field_decl->_method_is_void())) {
		return false;
	}
	jule::Int _30417_i = 0LL;
	_iter_begin_4708358816:;
	if (!((_30417_i < static_cast<jule::I64>((*this)._field_generics.len())))) { goto _iter_end_4708358816; }
	{
		if ((!(*this)._field_generics[static_cast<jule::Int>(_30417_i)]->_method_equals(_28313_f->_field_generics[static_cast<jule::Int>(_30417_i)]))) {
			return false;
		}
	}
	_iter_next_4708358816:;
	(_30417_i)++;
	goto _iter_begin_4708358816;
	_iter_end_4708358816:;
	jule::Fn<jule::Bool(jule::Ref<_10e56a140_ParamIns>,jule::Ref<_10e56a140_ParamIns>)> _31113_check_params = jule::Fn<jule::Bool(jule::Ref<_10e56a140_ParamIns>,jule::Ref<_10e56a140_ParamIns>)>([&](jule::Ref<_10e56a140_ParamIns> _31131_p1,jule::Ref<_10e56a140_ParamIns> _31146_p2) mutable -> jule::Bool {
		if ((_31131_p1->_field_decl->_field_mutable != _31146_p2->_field_decl->_field_mutable)) {
			return false;
		}
		if (_31131_p1->_field_decl->_method_is_self()) {
			if ((!_31146_p2->_field_decl->_method_is_self())) {
				return false;
			}
			if ((_31131_p1->_field_decl->_method_is_ref() != _31146_p2->_field_decl->_method_is_ref())) {
				return false;
			}
			return true;
		}
		if ((_31131_p1->_field_decl->_field_variadic != _31146_p2->_field_decl->_field_variadic)) {
			return false;
		}
		return _31131_p1->_field_kind->_method_equals(_31146_p2->_field_kind);
	});
	_30417_i=0LL;
	_iter_begin_4708370688:;
	if (!((_30417_i < static_cast<jule::I64>((*this)._field_params.len())))) { goto _iter_end_4708370688; }
	{
		if ((!_31113_check_params((*this)._field_params[static_cast<jule::Int>(_30417_i)],_28313_f->_field_params[static_cast<jule::Int>(_30417_i)]))) {
			return false;
		}
	}
	_iter_next_4708370688:;
	(_30417_i)++;
	goto _iter_begin_4708370688;
	_iter_end_4708370688:;
	if ((!(*this)._field_decl->_method_is_void())) {
		if ((!(*this)._field_result->_method_equals(_28313_f->_field_result))) {
			return false;
		}
	}
	return true;
}



inline jule::Bool _10e56a140_FnIns::_method_is_builtin(void) {
	return ((*this)._field_caller != nullptr);
}



inline jule::Bool _10e56a140_FnIns::_method_is_anon(void) {
	return ((*this)._field_anon || (jule::real((*this)._field_decl) && (*this)._field_decl->_method_is_anon()));
}







std::ostream &operator<<(std::ostream &_Stream, const _10e56a140_FnIns &_Src) {
	_Stream << "FnIns{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "caller:" << _Src._field_caller << ", ";
	_Stream << "anon:" << _Src._field_anon;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_10e8ca650_SymbolBuilder> _10e8ca650_SymbolBuilder::_method_get_root(void) {
	jule::Ref<_10e8ca650_SymbolBuilder> _31117_root = this->self;
	_iter_begin_4708412000:;
	if (!(jule::real(_31117_root->_field_owner))) { goto _iter_end_4708412000; }
	{
		_31117_root=_31117_root->_field_owner;
	}
	_iter_next_4708412000:;
	goto _iter_begin_4708412000;
	_iter_end_4708412000:;
	return _31117_root;
}



inline void _10e8ca650_SymbolBuilder::_method_push_err(_11ce22a00_Token _31827_token,jule::Str _31841_key,jule::Slice<jule::Any> _31851_args) {
	(*this)._field_errors=append((*this)._field_errors,jule::Slice<_13cfd2d20_Log>({_13cfd2d20_Log(1LLU,_31827_token._field_row,_31827_token._field_column,_31827_token._field_file->_method_path(),_10d8aeab0_errorf(_31841_key,_31851_args))}));
}



inline jule::Bool _10e8ca650_SymbolBuilder::_method_check_cpp_use_decl_path(jule::Ref<_11ce1fd50_UseDecl> _32842_decl) {
	jule::Bool _32860_ok{jule::Bool()};
	if (_11ce23cb0_is_std_header_path(_32842_decl->_field_link_path)) {
		_32860_ok = true;
		return _32860_ok;
	}
	jule::Str _33313_ext = _12ce95080_ext(_32842_decl->_field_link_path);
	if (((!_11ce23cb0_is_valid_header_ext(_33313_ext)) && (!_11ce23cb0_is_valid_cpp_ext(_33313_ext)))) {
		(*this)._method_push_err(_32842_decl->_field_token,jule::Str("invalid_cpp_ext", 15),jule::Slice<jule::Any>({jule::Any(_33313_ext)}));
		_32860_ok = false;
		return _32860_ok;
	}
	jule::Ref<_12ce6e9e0_Status> _33914_info{};
	jule::Int _33920_err{};
	std::tie(_33914_info,_33920_err) = _12ce49290_stat(_32842_decl->_field_link_path);
	if (((_33920_err != 0LLU) || _33914_info->_method_is_dir())) {
		(*this)._method_push_err(_32842_decl->_field_token,jule::Str("use_not_found", 13),jule::Slice<jule::Any>({jule::Any(_32842_decl->_field_link_path)}));
		_32860_ok = false;
		return _32860_ok;
	}
	_32860_ok = true;
	return _32860_ok;
}



inline jule::Ref<_10e9b6a10_ImportInfo> _10e8ca650_SymbolBuilder::_method_build_cpp_header_import(jule::Ref<_11ce1fd50_UseDecl> _34946_decl) {
	jule::Str _35017_path = _34946_decl->_field_link_path;
	if ((!_11ce23cb0_is_std_header_path(_34946_decl->_field_link_path))) {
		jule::Bool _35321_ok = (*this)._method_check_cpp_use_decl_path(_34946_decl);
		if ((!_35321_ok)) {
			return jule::new_ref<_10e9b6a10_ImportInfo>();
		}
		std::tie(_35017_path,_35321_ok) = _12ce95080_abs(_34946_decl->_field_link_path);
		if ((!_35321_ok)) {
			(*this)._method_push_err(_34946_decl->_field_token,jule::Str("use_not_found", 13),jule::Slice<jule::Any>({jule::Any(_34946_decl->_field_link_path)}));
		}
	}
	return jule::new_struct<_10e9b6a10_ImportInfo>(new( std::nothrow ) _10e9b6a10_ImportInfo(_34946_decl->_field_token,_35017_path,_34946_decl->_field_link_path,jule::Str("", 0),jule::Bool(),true,false,jule::Bool(),jule::Slice<_11ce22a00_Token>(),jule::new_ref<_10e9b6a10_Package>()));
}



inline jule::Ref<_10e9b6a10_ImportInfo> _10e8ca650_SymbolBuilder::_method_build_std_import(jule::Ref<_11ce1fd50_UseDecl> _37639_decl) {
	jule::Str _37717_path = _37639_decl->_field_link_path.slice(static_cast<jule::Int>(static_cast<jule::I64>(jule::Str("std::", 5).len())));
	_37717_path=_37717_path.replace(jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_37717_path=_12ce95080_join(jule::Slice<jule::Str>({_13cfea710_PATH_STDLIB,_37717_path}));
	jule::Bool _38020_ok{};
	std::tie(_37717_path,_38020_ok) = _12ce95080_abs(_37717_path);
	if ((!_38020_ok)) {
		(*this)._method_push_err(_37639_decl->_field_token,jule::Str("use_not_found", 13),jule::Slice<jule::Any>({jule::Any(_37639_decl->_field_link_path)}));
		return jule::new_ref<_10e9b6a10_ImportInfo>();
	}
	jule::Ref<_12ce6e9e0_Status> _38614_info{};
	jule::Int _38620_err{};
	std::tie(_38614_info,_38620_err) = _12ce49290_stat(_37717_path);
	if (((_38620_err != 0LLU) || (!_38614_info->_method_is_dir()))) {
		(*this)._method_push_err(_37639_decl->_field_token,jule::Str("use_not_found", 13),jule::Slice<jule::Any>({jule::Any(_37639_decl->_field_link_path)}));
		return jule::new_ref<_10e9b6a10_ImportInfo>();
	}
	jule::Str _39413_ident = _37639_decl->_field_link_path.slice(static_cast<jule::Int>(static_cast<jule::Int>((static_cast<jule::Int>(_37639_decl->_field_link_path.rfind(jule::Str("::", 2))) + 1LL))));
	return jule::new_struct<_10e9b6a10_ImportInfo>(new( std::nothrow ) _10e9b6a10_ImportInfo(_37639_decl->_field_token,_37717_path,_37639_decl->_field_link_path,_39413_ident,jule::Bool(),false,true,_37639_decl->_field_full,jule::Slice<_11ce22a00_Token>(),jule::new_struct<_10e9b6a10_Package>(new( std::nothrow ) _10e9b6a10_Package(nullptr))));
}



inline jule::Ref<_10e9b6a10_ImportInfo> _10e8ca650_SymbolBuilder::_method_build_ident_import(jule::Ref<_11ce1fd50_UseDecl> _41042_decl) {
	jule::Str _41117_path = _41042_decl->_field_link_path;
	_41117_path=_41117_path.replace(jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_41117_path=_12ce95080_join(jule::Slice<jule::Str>({this->self->_method_get_root()->_field_ast->_field_file->_method_dir(),_41117_path}));
	jule::Bool _41520_ok{};
	std::tie(_41117_path,_41520_ok) = _12ce95080_abs(_41117_path);
	if ((!_41520_ok)) {
		this->self->_method_push_err(_41042_decl->_field_token,jule::Str("use_not_found", 13),jule::Slice<jule::Any>({jule::Any(_41042_decl->_field_link_path)}));
		return jule::new_ref<_10e9b6a10_ImportInfo>();
	}
	jule::Ref<_12ce6e9e0_Status> _42114_info{};
	jule::Int _42120_err{};
	std::tie(_42114_info,_42120_err) = _12ce49290_stat(_41117_path);
	if (((_42120_err != 0LLU) || (!_42114_info->_method_is_dir()))) {
		this->self->_method_push_err(_41042_decl->_field_token,jule::Str("use_not_found", 13),jule::Slice<jule::Any>({jule::Any(_41042_decl->_field_link_path)}));
		return jule::new_ref<_10e9b6a10_ImportInfo>();
	}
	jule::Str _42913_ident = _41042_decl->_field_link_path.slice(static_cast<jule::Int>(static_cast<jule::Int>((static_cast<jule::Int>(_41042_decl->_field_link_path.rfind(jule::Str("::", 2))) + 1LL))));
	return jule::new_struct<_10e9b6a10_ImportInfo>(new( std::nothrow ) _10e9b6a10_ImportInfo(_41042_decl->_field_token,_41117_path,_41042_decl->_field_link_path,_42913_ident,jule::Bool(),false,false,_41042_decl->_field_full,jule::Slice<_11ce22a00_Token>(),jule::new_struct<_10e9b6a10_Package>(new( std::nothrow ) _10e9b6a10_Package(nullptr))));
}



inline jule::Ref<_10e9b6a10_ImportInfo> _10e8ca650_SymbolBuilder::_method_build_import(jule::Ref<_11ce1fd50_UseDecl> _44536_decl) {
	{
		auto _match_expr{ true };
		if (!(_44536_decl->_field_cpp_linked == _match_expr)) { goto _case_end_4708522384; }
		_case_begin_4708522384:;
		{
			return this->self->_method_build_cpp_header_import(_44536_decl);
		}
		goto _match_end_4708520352;
		_case_end_4708522384:;
		if (!(_44536_decl->_field_std == _match_expr)) { goto _case_end_4708522128; }
		_case_begin_4708522128:;
		{
			return this->self->_method_build_std_import(_44536_decl);
		}
		goto _match_end_4708520352;
		_case_end_4708522128:;
		_case_begin_4708520624:;
		{
			return this->self->_method_build_ident_import(_44536_decl);
		}
		goto _match_end_4708520352;
		_case_end_4708520624:;
		_match_end_4708520352:;
	}
}



inline jule::Bool _10e8ca650_SymbolBuilder::_method_check_duplicate_use_decl(jule::Ref<_10e9b6a10_ImportInfo> _45343_pkg) {
	jule::Bool _45363_ok{jule::Bool()};
	jule::Ref<_10e9b6a10_ImportInfo> _45513_lpkg = (*this)._field_table->_method_select_package(jule::Fn<jule::Bool(jule::Ref<_10e9b6a10_ImportInfo>)>([&](jule::Ref<_10e9b6a10_ImportInfo> _45549_spkg) mutable -> jule::Bool {
		return (_45343_pkg->_field_path == _45549_spkg->_field_path);
	}));
	if ((!jule::real(_45513_lpkg))) {
		_45363_ok = true;
		return _45363_ok;
	}
	(*this)._method_push_err(_45343_pkg->_field_token,jule::Str("duplicate_use_decl", 18),jule::Slice<jule::Any>({jule::Any(_45343_pkg->_field_link_path)}));
	_45363_ok = false;
	return _45363_ok;
}



inline void _10e8ca650_SymbolBuilder::_method_impl_import_selections(jule::Ref<_10e9b6a10_ImportInfo> _46645_imp,jule::Ref<_11ce1fd50_UseDecl> _46667_decl) {
	{
		auto &__julec_range_expr = _46667_decl->_field_selected;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_11ce22a00_Token _10e8ca650_ident{_11ce22a00_Token()};_10e8ca650_ident = *__julec_range_begin;
			_iter_begin_4708544160:;
			{
				if (_46645_imp->_method_exist_ident(_10e8ca650_ident._field_kind)) {
					(*this)._method_push_err(_10e8ca650_ident,jule::Str("duplicated_import_selection", 27),jule::Slice<jule::Any>({jule::Any(_10e8ca650_ident._field_kind)}));
					goto _iter_next_4708544160;
				}
				_46645_imp->_field_selected=append(_46645_imp->_field_selected,jule::Slice<_11ce22a00_Token>({_10e8ca650_ident}));
			}
			_iter_next_4708544160:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e8ca650_ident = *__julec_range_begin; goto _iter_begin_4708544160; }
			_iter_end_4708544160:;
		}
	}
}



inline jule::Str _10e8ca650_SymbolBuilder::_method_get_as_link_path(jule::Str _47740_path) {
	if (_47740_path.has_prefix(_13cfea710_PATH_STDLIB)) {
		_47740_path=_47740_path.slice(static_cast<jule::Int>(static_cast<jule::I64>(_13cfea710_PATH_STDLIB.len())));
		return (jule::Str("std", 3) + _47740_path.replace(static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL));
	}
	jule::Str _48314_root{};
	std::tie(_48314_root,std::ignore) = _12ce95080_abs(this->self->_method_get_root()->_field_ast->_field_file->_method_dir());
	_47740_path=_47740_path.slice(static_cast<jule::Int>(static_cast<jule::I64>(_48314_root.len())));
	if ((_47740_path[static_cast<jule::Int>(0LL)] == 47LL)) {
		_47740_path=_47740_path.slice(static_cast<jule::Int>(1LL));
	}
	return _47740_path.replace(static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
}



inline void _10e8ca650_SymbolBuilder::_method_push_cross_cycle_error(jule::Ref<_10e8ca650_SymbolBuilder> _49142_target,jule::Ref<_10e9b6a10_ImportInfo> _49166_imp,_11ce22a00_Token _49184_error_token) {
	
	jule::Str _49417_message = jule::Str("", 0);
	jule::Fn<void(jule::Ref<_10e8ca650_SymbolBuilder>,jule::Str)> _49613_push = jule::Fn<void(jule::Ref<_10e8ca650_SymbolBuilder>,jule::Str)>([&](jule::Ref<_10e8ca650_SymbolBuilder> _49623_sb,jule::Str _49643_path) mutable -> void {
		jule::Str _49717_refers_to = _10d8aeab0_errorf(jule::Str("refers_to", 9),jule::Slice<jule::Any>({jule::Any(this->self->_method_get_as_link_path(_49623_sb->_field_table->_field_file->_method_dir())),jule::Any(this->self->_method_get_as_link_path(_49643_path))}));
		_49417_message=(((_10e8ca650_str_repeat(jule::Str(" ", 1),4LL) + _49717_refers_to) + jule::Str("\n", 1)) + _49417_message);
	});
	_49613_push(this->self,_49166_imp->_field_path);
	jule::Ref<_10e8ca650_SymbolBuilder> _50317_owner = this->self->_field_owner;
	jule::Ref<_10e8ca650_SymbolBuilder> _50417_old = this->self;
	_iter_begin_4708577952:;
	if (!(jule::real(_50317_owner->_field_owner))) { goto _iter_end_4708577952; }
	{
		_49613_push(_50417_old->_field_owner,_50417_old->_field_table->_field_file->_method_dir());
		if (((_50317_owner->_field_owner).alloc == (_49142_target).alloc)) {
			_49613_push(_49142_target,_50317_owner->_field_table->_field_file->_method_dir());
			goto _iter_end_4708577952;
		}
		_50417_old=_50317_owner;
		_50317_owner=_50317_owner->_field_owner;
	}
	_iter_next_4708577952:;
	goto _iter_begin_4708577952;
	_iter_end_4708577952:;
	this->self->_method_push_err(_49184_error_token,jule::Str("pkg_illegal_cross_cycle", 23),jule::Slice<jule::Any>({jule::Any(_49417_message)}));
}



inline jule::Bool _10e8ca650_SymbolBuilder::_method_check_import_cycles(jule::Ref<_10e9b6a10_ImportInfo> _52139_imp,jule::Ref<_11ce1fd50_UseDecl> _52157_decl) {
	if ((_52139_imp->_field_path == this->self->_field_table->_field_file->_method_dir())) {
		this->self->_method_push_err(_52157_decl->_field_token,jule::Str("pkg_illegal_cycle_refers_itself", 31),jule::Slice<jule::Any>({jule::Any(this->self->_method_get_as_link_path(_52139_imp->_field_path))}));
		return false;
	}
	if ((!jule::real(this->self->_field_owner))) {
		return true;
	}
	if ((this->self->_field_owner->_field_table->_field_file->_method_dir() == _52139_imp->_field_path)) {
		this->self->_method_push_cross_cycle_error(this->self->_field_owner,_52139_imp,_52157_decl->_field_token);
		return false;
	}
	jule::Ref<_10e8ca650_SymbolBuilder> _53617_owner = this->self->_field_owner;
	_julec_label_iter:;
	if ((_53617_owner->_field_table->_field_file->_method_dir() == _52139_imp->_field_path)) {
		this->self->_method_push_cross_cycle_error(_53617_owner,_52139_imp,_52157_decl->_field_token);
		return false;
	}
	if (jule::real(_53617_owner->_field_owner)) {
		_53617_owner=_53617_owner->_field_owner;
		goto _julec_label_iter;
	}
	return true;
}



inline jule::Bool _10e8ca650_SymbolBuilder::_method_import_package(jule::Ref<_10e9b6a10_ImportInfo> _55138_imp,jule::Ref<_11ce1fd50_UseDecl> _55160_decl) {
	jule::Bool _55178_ok{jule::Bool()};
	if (_55138_imp->_field_cpp_linked) {
		_55178_ok = true;
		return _55178_ok;
	}
	jule::Ref<_10e9b6a10_ImportInfo> _55617_port = this->self->_field_importer.get()._method_get_import(_55138_imp->_field_path);
	if (jule::real(_55617_port)) {
		_55138_imp->_field_package=_55617_port->_field_package;
		_55138_imp->_field_duplicate=true;
	} else {
		if ((!this->self->_method_check_import_cycles(_55138_imp,_55160_decl))) {
			_55178_ok = false;
			return _55178_ok;
		}
		jule::Slice<jule::Ref<_11ce19be0_Ast>> _56522_asts{};
		jule::Slice<_13cfd2d20_Log> _56528_errors{};
		std::tie(_56522_asts,_56528_errors) = this->self->_field_importer.get()._method_import_package(_55138_imp->_field_path);
		if ((static_cast<jule::I64>(_56528_errors.len()) > 0LL)) {
			this->self->_field_errors=append(this->self->_field_errors,_56528_errors);
			_55178_ok = false;
			return _55178_ok;
		}
		{
			auto &__julec_range_expr = _56522_asts;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_11ce19be0_Ast> _10e8ca650_ast{jule::Ref<_11ce19be0_Ast>()};_10e8ca650_ast = *__julec_range_begin;
				_iter_begin_4708651840:;
				{
					jule::Ref<_10ee5c510_SymbolTable> _57226_table{};
					jule::Slice<_13cfd2d20_Log> _57233_errors{};
					std::tie(_57226_table,_57233_errors) = _10f32caf0_build_symbols(_10e8ca650_ast,this->self->_field_importer,this->self);
					if ((static_cast<jule::I64>(_57233_errors.len()) > 0LL)) {
						this->self->_field_errors=append(this->self->_field_errors,_57233_errors);
						this->self->_method_push_err(_55138_imp->_field_token,jule::Str("used_package_has_errors", 23),jule::Slice<jule::Any>({jule::Any(_55138_imp->_field_link_path)}));
						_55178_ok = false;
						return _55178_ok;
					}
					_55138_imp->_field_package->_field_files=append(_55138_imp->_field_package->_field_files,jule::Slice<jule::Ref<_10ee5c510_SymbolTable>>({_57226_table}));
				}
				_iter_next_4708651840:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _10e8ca650_ast = *__julec_range_begin; goto _iter_begin_4708651840; }
				_iter_end_4708651840:;
			}
		}
	}
	this->self->_method_impl_import_selections(_55138_imp,_55160_decl);
	_55178_ok = true;
	return _55178_ok;
}



inline jule::Ref<_10e9b6a10_ImportInfo> _10e8ca650_SymbolBuilder::_method_import_use_decl(jule::Ref<_11ce1fd50_UseDecl> _59039_decl) {
	jule::Ref<_10e9b6a10_ImportInfo> _59117_imp = this->self->_method_build_import(_59039_decl);
	if ((!jule::real(_59117_imp))) {
		return jule::new_ref<_10e9b6a10_ImportInfo>();
	}
	jule::Bool _59717_ok = this->self->_method_check_duplicate_use_decl(_59117_imp);
	if ((!_59717_ok)) {
		return jule::new_ref<_10e9b6a10_ImportInfo>();
	}
	_59717_ok=this->self->_method_import_package(_59117_imp,_59039_decl);
	this->self->_field_table->_field_imports._method_push(_59117_imp);
	if (_59717_ok) {
		this->self->_field_importer.get()._method_imported(_59117_imp);
		return _59117_imp;
	}
	return jule::new_ref<_10e9b6a10_ImportInfo>();
}



inline void _10e8ca650_SymbolBuilder::_method_import_use_decls(void) {
	jule::Int _61217_i = 0LL;
	_iter_begin_4708684432:;
	if (!((_61217_i < static_cast<jule::Int>(this->self->_field_ast->_field_use_decls._method_len())))) { goto _iter_end_4708684432; }
	{
		jule::Ref<_11ce1fd50_UseDecl> _61421_decl = this->self->_field_ast->_field_use_decls._method_at(_61217_i);
		this->self->_method_import_use_decl(_61421_decl);
		if ((static_cast<jule::I64>(this->self->_field_errors.len()) > 0LL)) {
			goto _iter_end_4708684432;
		}
	}
	_iter_next_4708684432:;
	(_61217_i)++;
	goto _iter_begin_4708684432;
	_iter_end_4708684432:;
}



inline void _10e8ca650_SymbolBuilder::_method_append_decl(_11ce1fd50_Node _62434_decl) {
	{
		auto _match_expr{ _62434_decl._field_data };
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_TypeAliasDecl>>())) { goto _case_end_4708695232; }
		_case_begin_4708695232:;
		{
			jule::Ref<_10eeb79b0_TypeAlias> _62721_ta = _10e8ca650_build_type_alias(_62434_decl._field_data.operator jule::Ref<_11ce1fd50_TypeAliasDecl>());
			(*this)._field_table->_field_type_aliases._method_push(_62721_ta);
		}
		goto _match_end_4708693680;
		_case_end_4708695232:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_StructDecl>>())) { goto _case_end_4708695344; }
		_case_begin_4708695344:;
		{
			jule::Ref<_10e3fc8f0_Struct> _63121_srct = _10e8ca650_build_struct(_62434_decl._field_data.operator jule::Ref<_11ce1fd50_StructDecl>());
			(*this)._field_table->_field_structs._method_push(_63121_srct);
		}
		goto _match_end_4708693680;
		_case_end_4708695344:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_FnDecl>>())) { goto _case_end_4708694736; }
		_case_begin_4708694736:;
		{
			jule::Ref<_10e56a140_Fn> _63521_f = _10e8ca650_build_fn(_62434_decl._field_data.operator jule::Ref<_11ce1fd50_FnDecl>());
			(*this)._field_table->_field_funcs._method_push(_63521_f);
		}
		goto _match_end_4708693680;
		_case_end_4708694736:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_TraitDecl>>())) { goto _case_end_4708694848; }
		_case_begin_4708694848:;
		{
			jule::Ref<_10e3d6eb0_Trait> _63921_t = _10e8ca650_build_trait(_62434_decl._field_data.operator jule::Ref<_11ce1fd50_TraitDecl>());
			(*this)._field_table->_field_traits._method_push(_63921_t);
		}
		goto _match_end_4708693680;
		_case_end_4708694848:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_VarDecl>>())) { goto _case_end_4708694960; }
		_case_begin_4708694960:;
		{
			jule::Ref<_10ebc2ad0_Var> _64321_v = _10e8ca650_build_var(_62434_decl._field_data.operator jule::Ref<_11ce1fd50_VarDecl>());
			(*this)._field_table->_field_vars._method_push(_64321_v);
		}
		goto _match_end_4708693680;
		_case_end_4708694960:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_EnumDecl>>())) { goto _case_end_4708697840; }
		_case_begin_4708697840:;
		{
			jule::Ref<_10e975f00_Enum> _64721_e = _10e8ca650_build_enum(_62434_decl._field_data.operator jule::Ref<_11ce1fd50_EnumDecl>());
			(*this)._field_table->_field_enums._method_push(_64721_e);
		}
		goto _match_end_4708693680;
		_case_end_4708697840:;
		_case_begin_4708693952:;
		{
			(*this)._method_push_err(_62434_decl._field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4708693680;
		_case_end_4708693952:;
		_match_end_4708693680:;
	}
}



inline void _10e8ca650_SymbolBuilder::_method_append_decls(void) {
	jule::Int _65617_i = 0LL;
	_iter_begin_4708726336:;
	if (!((_65617_i < static_cast<jule::Int>((*this)._field_ast->_field_decls._method_len())))) { goto _iter_end_4708726336; }
	{
		_11ce1fd50_Node _65821_decl = (*this)._field_ast->_field_decls._method_at(_65617_i);
		(*this)._method_append_decl(_65821_decl);
	}
	_iter_next_4708726336:;
	(_65617_i)++;
	goto _iter_begin_4708726336;
	_iter_end_4708726336:;
}



inline void _10e8ca650_SymbolBuilder::_method_append_impls(void) {
	(*this)._field_table->_field_impls=_10dba8790_Vector_15::_static_method_new(static_cast<jule::Int>((*this)._field_ast->_field_impls._method_len()));
	jule::Int _66517_i = 0LL;
	_iter_begin_4708735664:;
	if (!((_66517_i < static_cast<jule::Int>((*this)._field_ast->_field_impls._method_len())))) { goto _iter_end_4708735664; }
	{
		jule::Ref<_11ce1fd50_Impl> _66721_decl = (*this)._field_ast->_field_impls._method_at(_66517_i);
		(*this)._field_table->_field_impls._method_push(_10e8ca650_build_impl(_66721_decl));
	}
	_iter_next_4708735664:;
	(_66517_i)++;
	goto _iter_begin_4708735664;
	_iter_end_4708735664:;
}



inline void _10e8ca650_SymbolBuilder::_method_push_directive_pass(jule::Ref<_11ce1fd50_Directive> _67242_d) {
	_10e8ca650_Pass _67317_pass = _10e8ca650_Pass(_67242_d->_field_token,jule::Str());
	{
		auto &__julec_range_expr = _67242_d->_field_args;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _10e8ca650_arg{jule::Str()};_10e8ca650_arg = *__julec_range_begin;
			_iter_begin_4708746928:;
			{
				if ((_10e8ca650_arg != jule::Str("", 0))) {
					_67317_pass._field_text+=(_10e8ca650_arg + jule::Str(" ", 1));
				}
			}
			_iter_next_4708746928:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e8ca650_arg = *__julec_range_begin; goto _iter_begin_4708746928; }
			_iter_end_4708746928:;
		}
	}
	_67317_pass._field_text=_67317_pass._field_text.trim(jule::Str(" \n\r\t\v", 5));
	(*this)._field_table->_field_passes._method_push(_67317_pass);
}



inline void _10e8ca650_SymbolBuilder::_method_append_top_directives(void) {
	jule::Int _68617_i = 0LL;
	_iter_begin_4708756512:;
	if (!((_68617_i < static_cast<jule::Int>((*this)._field_ast->_field_top_directives._method_len())))) { goto _iter_end_4708756512; }
	{
		jule::Ref<_11ce1fd50_Directive> _68821_d = (*this)._field_ast->_field_top_directives._method_at(_68617_i);
		{
			auto _match_expr{ _68821_d->_field_tag };
			if (!(jule::Str("pass", 4) == _match_expr)) { goto _case_end_4708761456; }
			_case_begin_4708761456:;
			{
				(*this)._method_push_directive_pass(_68821_d);
			}
			goto _match_end_4708761344;
			_case_end_4708761456:;
			_match_end_4708761344:;
		}
	}
	_iter_next_4708756512:;
	(_68617_i)++;
	goto _iter_begin_4708756512;
	_iter_end_4708756512:;
}



inline void _10e8ca650_SymbolBuilder::_method_build(void) {
	this->self->_field_table=jule::new_struct<_10ee5c510_SymbolTable>(new( std::nothrow ) _10ee5c510_SymbolTable(this->self->_field_ast->_field_file,_10dba8790_Vector_6(),_10dba8790_Vector_7(),_10dba8790_Vector_9(),_10dba8790_Vector_10(),_10dba8790_Vector_12(),_10dba8790_Vector_11(),_10dba8790_Vector_13(),_10dba8790_Vector_14(),_10dba8790_Vector_15()));
	this->self->_method_append_top_directives();
	this->self->_method_import_use_decls();
	if ((static_cast<jule::I64>(this->self->_field_errors.len()) > 0LL)) {
		return;
	}
	this->self->_method_append_decls();
	if ((static_cast<jule::I64>(this->self->_field_errors.len()) > 0LL)) {
		return;
	}
	this->self->_method_append_impls();
}







std::ostream &operator<<(std::ostream &_Stream, const _10e8ca650_SymbolBuilder &_Src) {
	_Stream << "SymbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e97fcf0_If &_Src) {
	_Stream << "If{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e97fcf0_Else &_Src) {
	_Stream << "Else{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e97fcf0_Conditional &_Src) {
	_Stream << "Conditional{";
	_Stream << "elifs:" << _Src._field_elifs << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e97fcf0_InfIter &_Src) {
	_Stream << "InfIter{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _10e97fcf0_WhileIter::_method_is_while_next(void) {
	return ((*this)._field_next != nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, const _10e97fcf0_WhileIter &_Src) {
	_Stream << "WhileIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e97fcf0_RangeIter &_Src) {
	_Stream << "RangeIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e97fcf0_ContSt &_Src) {
	_Stream << "ContSt{";
	_Stream << "it:" << _Src._field_it;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e97fcf0_BreakSt &_Src) {
	_Stream << "BreakSt{";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "mtch:" << _Src._field_mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e97fcf0_Label &_Src) {
	_Stream << "Label{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e97fcf0_GotoSt &_Src) {
	_Stream << "GotoSt{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e97fcf0_Postfix &_Src) {
	_Stream << "Postfix{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e97fcf0_Assign &_Src) {
	_Stream << "Assign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e97fcf0_MultiAssign &_Src) {
	_Stream << "MultiAssign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e97fcf0_Match &_Src) {
	_Stream << "Match{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _10e97fcf0_Case::_method_is_default(void) {
	return ((*this)._field_exprs == nullptr);
}







std::ostream &operator<<(std::ostream &_Stream, const _10e97fcf0_Case &_Src) {
	_Stream << "Case{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "next:" << _Src._field_next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e97fcf0_FallSt &_Src) {
	_Stream << "FallSt{";
	_Stream << "dest_case:" << _Src._field_dest_case;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e97fcf0_RetSt &_Src) {
	_Stream << "RetSt{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e97fcf0_Recover &_Src) {
	_Stream << "Recover{";
	_Stream << "handler:" << _Src._field_handler << ", ";
	_Stream << "handler_expr:" << _Src._field_handler_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e97fcf0_ScopeGoto &_Src) {
	_Stream << "ScopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_10e9b6a10_ImportInfo> _10e97fcf0_ScopeChecker::_method_find_package(jule::Str _36731_ident) {
	return (*this)._field_s->_method_find_package(_36731_ident);
}



inline jule::Ref<_10e9b6a10_ImportInfo> _10e97fcf0_ScopeChecker::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_10e9b6a10_ImportInfo>)> _37733_selector) {
	return (*this)._field_s->_method_select_package(_37733_selector);
}



inline jule::Ref<_10ebc2ad0_Var> _10e97fcf0_ScopeChecker::_method_find_var(jule::Str _38827_ident,jule::Bool _38839_cpp_linked) {
	
	jule::Ref<_10ebc2ad0_Var> _39117_v = (*this)._field_table->_method___find_var(_38827_ident,_38839_cpp_linked,true);
	if (jule::real(_39117_v)) {
		return _39117_v;
	}
	jule::Ref<_10e97fcf0_ScopeChecker> _39617_parent = (*this)._field_parent;
	_iter_begin_4708833056:;
	if (!(jule::real(_39617_parent))) { goto _iter_end_4708833056; }
	{
		jule::Ref<_10ebc2ad0_Var> _39821_v = _39617_parent->_field_table->_method___find_var(_38827_ident,_38839_cpp_linked,true);
		if (jule::real(_39821_v)) {
			return _39821_v;
		}
		_39617_parent=_39617_parent->_field_parent;
	}
	_iter_next_4708833056:;
	goto _iter_begin_4708833056;
	_iter_end_4708833056:;
	return (*this)._field_s->_method_find_var(_38827_ident,_38839_cpp_linked);
}



inline jule::Ref<_10eeb79b0_TypeAlias> _10e97fcf0_ScopeChecker::_method_find_type_alias(jule::Str _41534_ident,jule::Bool _41546_cpp_linked) {
	
	jule::Ref<_10eeb79b0_TypeAlias> _41817_ta = (*this)._field_table->_method___find_type_alias(_41534_ident,_41546_cpp_linked,true);
	if (jule::real(_41817_ta)) {
		return _41817_ta;
	}
	jule::Ref<_10e97fcf0_ScopeChecker> _42317_parent = (*this)._field_parent;
	_iter_begin_4708850400:;
	if (!(jule::real(_42317_parent))) { goto _iter_end_4708850400; }
	{
		jule::Ref<_10eeb79b0_TypeAlias> _42521_ta = _42317_parent->_field_table->_method___find_type_alias(_41534_ident,_41546_cpp_linked,true);
		if (jule::real(_42521_ta)) {
			return _42521_ta;
		}
		_42317_parent=_42317_parent->_field_parent;
	}
	_iter_next_4708850400:;
	goto _iter_begin_4708850400;
	_iter_end_4708850400:;
	return (*this)._field_s->_method_find_type_alias(_41534_ident,_41546_cpp_linked);
}



inline jule::Ref<_10e3fc8f0_Struct> _10e97fcf0_ScopeChecker::_method_find_struct(jule::Str _44030_ident,jule::Bool _44042_cpp_linked) {
	return (*this)._field_s->_method_find_struct(_44030_ident,_44042_cpp_linked);
}



inline jule::Ref<_10e56a140_Fn> _10e97fcf0_ScopeChecker::_method_find_fn(jule::Str _44926_ident,jule::Bool _44938_cpp_linked) {
	return (*this)._field_s->_method_find_fn(_44926_ident,_44938_cpp_linked);
}



inline jule::Ref<_10e3d6eb0_Trait> _10e97fcf0_ScopeChecker::_method_find_trait(jule::Str _45829_ident) {
	return (*this)._field_s->_method_find_trait(_45829_ident);
}



inline jule::Ref<_10e975f00_Enum> _10e97fcf0_ScopeChecker::_method_find_enum(jule::Str _46728_ident) {
	return (*this)._field_s->_method_find_enum(_46728_ident);
}



inline jule::Bool _10e97fcf0_ScopeChecker::_method_is_unsafe(void) {
	jule::Ref<_10e97fcf0_ScopeChecker> _47517_scope = this->self;
	_julec_label_iter:;
	if (_47517_scope->_field_scope->_field_unsafety) {
		return true;
	}
	if (jule::real(_47517_scope->_field_parent)) {
		_47517_scope=_47517_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _10e97fcf0_ScopeChecker::_method_is_root(void) {
	return ((!jule::real((*this)._field_parent)) || jule::real((*this)._field_owner));
}



inline jule::Ref<_10e97fcf0_ScopeChecker> _10e97fcf0_ScopeChecker::_method_get_root(void) {
	jule::Ref<_10e97fcf0_ScopeChecker> _49717_root = this->self;
	_iter_begin_4708897120:;
	if (!((jule::real(_49717_root->_field_parent) && (!jule::real(_49717_root->_field_owner))))) { goto _iter_end_4708897120; }
	{
		_49717_root=_49717_root->_field_parent;
	}
	_iter_next_4708897120:;
	goto _iter_begin_4708897120;
	_iter_end_4708897120:;
	return _49717_root;
}



inline jule::Ref<_10e97fcf0_Label> _10e97fcf0_ScopeChecker::_method_find_label(jule::Str _50729_ident) {
	jule::Int _50817_i = 0LL;
	_iter_begin_4708903648:;
	if (!((_50817_i < static_cast<jule::Int>((*this)._field_scope->_field_stmts._method_len())))) { goto _iter_end_4708903648; }
	{
		jule::Any _51021_st = (*this)._field_scope->_field_stmts._method_at(_50817_i);
		{
			auto _match_expr{ _51021_st };
			if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_Label>>())) { goto _case_end_4708904992; }
			_case_begin_4708904992:;
			{
				jule::Ref<_10e97fcf0_Label> _51325_label = _51021_st.operator jule::Ref<_10e97fcf0_Label>();
				if ((_51325_label->_field_ident == _50729_ident)) {
					return _51325_label;
				}
			}
			goto _match_end_4708906976;
			_case_end_4708904992:;
			_match_end_4708906976:;
		}
	}
	_iter_next_4708903648:;
	(_50817_i)++;
	goto _iter_begin_4708903648;
	_iter_end_4708903648:;
	return jule::new_ref<_10e97fcf0_Label>();
}



inline jule::Ref<_10e97fcf0_ScopeLabel> _10e97fcf0_ScopeChecker::_method_find_label_scope(jule::Str _52536_ident) {
	jule::Ref<_10e97fcf0_ScopeLabel> _52617_label = this->self->_method_find_label_all(_52536_ident);
	if ((jule::real(_52617_label) && ((_52617_label->_field_scope).alloc == (this->self).alloc))) {
		return _52617_label;
	}
	return jule::new_ref<_10e97fcf0_ScopeLabel>();
}



inline jule::Ref<_10e97fcf0_ScopeLabel> _10e97fcf0_ScopeChecker::_method_find_label_all(jule::Str _53733_ident) {
	{
		auto &__julec_range_expr = (*this)._field_labels.get();
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e97fcf0_ScopeLabel> _10e97fcf0_lbl{jule::Ref<_10e97fcf0_ScopeLabel>()};_10e97fcf0_lbl = *__julec_range_begin;
			_iter_begin_4708919600:;
			{
				if ((_10e97fcf0_lbl->_field_label->_field_ident == _53733_ident)) {
					return _10e97fcf0_lbl;
				}
			}
			_iter_next_4708919600:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e97fcf0_lbl = *__julec_range_begin; goto _iter_begin_4708919600; }
			_iter_end_4708919600:;
		}
	}
	return jule::new_ref<_10e97fcf0_ScopeLabel>();
}



inline jule::Bool _10e97fcf0_ScopeChecker::_method_is_duplicated_ident(jule::Uintptr _54938_itself,jule::Str _54955_ident) {
	jule::Ref<_10ebc2ad0_Var> _55013_v = (*this)._method_find_var(_54955_ident,false);
	if (((jule::real(_55013_v) && (((jule::Uintptr)((_55013_v).alloc)) != _54938_itself)) && ((_55013_v->_field_scope).alloc == ((*this)._field_tree).alloc))) {
		return true;
	}
	jule::Ref<_10eeb79b0_TypeAlias> _55513_ta = (*this)._method_find_type_alias(_54955_ident,false);
	if (((jule::real(_55513_ta) && (((jule::Uintptr)((_55513_ta).alloc)) != _54938_itself)) && ((_55513_ta->_field_scope).alloc == ((*this)._field_tree).alloc))) {
		return true;
	}
	return false;
}



inline void _10e97fcf0_ScopeChecker::_method_check_var_decl(jule::Ref<_11ce1fd50_VarDecl> _56338_decl) {
	jule::Ref<_10ebc2ad0_Var> _56417_v = _10e8ca650_build_var(_56338_decl);
	__JULE_DEFER({
		this->self->_field_table->_field_vars._method_push(_56417_v);
		this->self->_field_scope->_field_stmts._method_push(jule::Any(_56417_v));
	});
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_56417_v).alloc)),_56417_v->_field_ident)) {
		this->self->_field_s->_method_push_err(_56417_v->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_56417_v->_field_ident)}));
	}
	this->self->_field_s->_method_check_var_decl(_56417_v,this->self);
	if (((!_56417_v->_method_is_auto_typed()) && ((!jule::real(_56417_v->_field_kind)) || (!jule::real(_56417_v->_field_kind->_field_kind))))) {
		return;
	}
	this->self->_field_s->_method_check_type_var(_56417_v,this->self);
}



inline void _10e97fcf0_ScopeChecker::_method_check_type_alias_decl(jule::Ref<_11ce1fd50_TypeAliasDecl> _58345_decl) {
	jule::Ref<_10eeb79b0_TypeAlias> _58417_ta = _10e8ca650_build_type_alias(_58345_decl);
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_58417_ta).alloc)),_58417_ta->_field_ident)) {
		this->self->_field_s->_method_push_err(_58417_ta->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_58417_ta->_field_ident)}));
	}
	this->self->_field_s->_method_check_type_alias_decl(_58417_ta,this->self);
	this->self->_field_table->_field_type_aliases._method_push(_58417_ta);
}



inline jule::Ref<_10e97fcf0_Scope> _10e97fcf0_ScopeChecker::_method_get_child(void) {
	return jule::new_struct<_10e97fcf0_Scope>(new( std::nothrow ) _10e97fcf0_Scope((*this)._field_scope,jule::Bool(),jule::Bool(),_10dba8790_Vector_8()));
}



inline void _10e97fcf0_ScopeChecker::_method_check_child_ssc(jule::Ref<_11ce1fd50_ScopeTree> _59939_tree,jule::Ref<_10e97fcf0_Scope> _59961_s,jule::Ref<_10e97fcf0_ScopeChecker> _59976_ssc) {
	_59976_ssc->_field_parent=this->self;
	_59976_ssc->_method_check(_59939_tree,_59961_s);
}



inline jule::Ref<_10e97fcf0_Scope> _10e97fcf0_ScopeChecker::_method_check_child_sc(jule::Ref<_11ce1fd50_ScopeTree> _60438_tree,jule::Ref<_10e97fcf0_ScopeChecker> _60460_ssc) {
	jule::Ref<_10e97fcf0_Scope> _60517_s = this->self->_method_get_child();
	this->self->_method_check_child_ssc(_60438_tree,_60517_s,_60460_ssc);
	return _60517_s;
}



inline jule::Ref<_10e97fcf0_Scope> _10e97fcf0_ScopeChecker::_method_check_child(jule::Ref<_11ce1fd50_ScopeTree> _61035_tree) {
	jule::Ref<_10e97fcf0_ScopeChecker> _61117_ssc = this->self->_method_new_child_checker();
	return this->self->_method_check_child_sc(_61035_tree,_61117_ssc);
}



inline void _10e97fcf0_ScopeChecker::_method_check_anon_scope(jule::Ref<_11ce1fd50_ScopeTree> _61540_tree) {
	jule::Ref<_10e97fcf0_Scope> _61617_s = this->self->_method_check_child(_61540_tree);
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_61617_s));
}



inline jule::Bool _10e97fcf0_ScopeChecker::_method_try_call_recover(jule::Ref<_10ee8a260_Data> _62040_d) {
	{
		auto _match_expr{ _62040_d->_field_model };
		if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_Recover>>())) { goto _case_end_4709006464; }
		goto _match_end_4709004576;
		_case_end_4709006464:;
		_case_begin_4709004848:;
		{
			return false;
		}
		goto _match_end_4709004576;
		_case_end_4709004848:;
		_match_end_4709004576:;
	}
	jule::Ref<_10e97fcf0_Recover> _62917_rec = _62040_d->_field_model.operator jule::Ref<_10e97fcf0_Recover>();
	_62917_rec->_field_handler=_62040_d->_field_kind->_method_fnc();
	_62917_rec->_field_scope=jule::new_struct<_10e97fcf0_Scope>(new( std::nothrow ) _10e97fcf0_Scope());
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_62917_rec));
	this->self->_field_tree->_field_stmts=this->self->_field_tree->_field_stmts.slice(static_cast<jule::Int>((this->self->_field_i + 1LL)));
	this->self->_field_scope=_62917_rec->_field_scope;
	this->self->_method_check_tree();
	return true;
}



inline void _10e97fcf0_ScopeChecker::_method_check_expr(jule::Ref<_11ce1fd50_Expr> _64134_expr) {
	jule::Ref<_10ee8a260_Data> _64217_d = this->self->_field_s->_method_eval(_64134_expr,this->self);
	if ((!jule::real(_64217_d))) {
		return;
	}
	if (_64134_expr->_method_is_fn_call()) {
		jule::Bool _64817_ok = this->self->_method_try_call_recover(_64217_d);
		if (_64817_ok) {
			return;
		}
	}
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_64217_d));
}



inline jule::Ref<_10e97fcf0_If> _10e97fcf0_ScopeChecker::_method_check_if(jule::Ref<_11ce1fd50_If> _65732_i) {
	jule::Ref<_10e97fcf0_Scope> _65817_s = this->self->_method_check_child(_65732_i->_field_scope);
	jule::Ref<_10ee8a260_Data> _66017_d = this->self->_field_s->_method_eval(_65732_i->_field_expr,this->self);
	if ((!jule::real(_66017_d))) {
		return jule::new_ref<_10e97fcf0_If>();
	}
	jule::Ref<_10eeb79b0_Prim> _66513_prim = _66017_d->_field_kind->_method_prim();
	if ((!jule::real(_66513_prim))) {
		this->self->_field_s->_method_push_err(_65732_i->_field_expr->_field_token,jule::Str("if_require_bool_expr", 20),jule::Slice<jule::Any>({}));
		return jule::new_ref<_10e97fcf0_If>();
	}
	if ((!_66513_prim->_method_is_bool())) {
		this->self->_field_s->_method_push_err(_65732_i->_field_expr->_field_token,jule::Str("if_require_bool_expr", 20),jule::Slice<jule::Any>({}));
		return jule::new_ref<_10e97fcf0_If>();
	}
	return jule::new_struct<_10e97fcf0_If>(new( std::nothrow ) _10e97fcf0_If(_66017_d->_field_model,_65817_s));
}



inline jule::Ref<_10e97fcf0_Else> _10e97fcf0_ScopeChecker::_method_check_else(jule::Ref<_11ce1fd50_Else> _68234_e) {
	jule::Ref<_10e97fcf0_Scope> _68317_s = this->self->_method_check_child(_68234_e->_field_scope);
	return jule::new_struct<_10e97fcf0_Else>(new( std::nothrow ) _10e97fcf0_Else(_68317_s));
}



inline void _10e97fcf0_ScopeChecker::_method_check_conditional(jule::Ref<_11ce1fd50_Conditional> _68941_conditional) {
	jule::Ref<_10e97fcf0_Conditional> _69017_c = jule::new_struct<_10e97fcf0_Conditional>(new( std::nothrow ) _10e97fcf0_Conditional());
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_69017_c));
	_69017_c->_field_elifs=jule::Slice<jule::Ref<_10e97fcf0_If>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_68941_conditional->_field_tail.len()) + 1LL))));
	_69017_c->_field_elifs[static_cast<jule::Int>(0LL)]=this->self->_method_check_if(_68941_conditional->_field_head);
	{
		auto &__julec_range_expr = _68941_conditional->_field_tail;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e97fcf0_i{jule::Int()};_10e97fcf0_i = 0;
			jule::Ref<_11ce1fd50_If> _10e97fcf0_elif{jule::Ref<_11ce1fd50_If>()};_10e97fcf0_elif = *__julec_range_begin;
			_iter_begin_4709067616:;
			{
				_69017_c->_field_elifs[static_cast<jule::Int>((_10e97fcf0_i + 1LL))]=this->self->_method_check_if(_10e97fcf0_elif);
			}
			_iter_next_4709067616:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e97fcf0_i; _10e97fcf0_elif = *__julec_range_begin; goto _iter_begin_4709067616; }
			_iter_end_4709067616:;
		}
	}
	if (jule::real(_68941_conditional->_field_default)) {
		_69017_c->_field_default=this->self->_method_check_else(_68941_conditional->_field_default);
	}
}



inline jule::Ref<_10e97fcf0_Scope> _10e97fcf0_ScopeChecker::_method_check_iter_scope_sc(jule::Uintptr _70539_it,jule::Ref<_11ce1fd50_ScopeTree> _70556_tree,jule::Ref<_10e97fcf0_ScopeChecker> _70578_ssc) {
	_70578_ssc->_field_it=_70539_it;
	return this->self->_method_check_child_sc(_70556_tree,_70578_ssc);
}



inline jule::Ref<_10e97fcf0_Scope> _10e97fcf0_ScopeChecker::_method_check_iter_scope(jule::Uintptr _71036_it,jule::Ref<_11ce1fd50_ScopeTree> _71053_tree) {
	jule::Ref<_10e97fcf0_ScopeChecker> _71117_ssc = this->self->_method_new_child_checker();
	return this->self->_method_check_iter_scope_sc(_71036_it,_71053_tree,_71117_ssc);
}



inline void _10e97fcf0_ScopeChecker::_method_check_inf_iter(jule::Ref<_11ce1fd50_Iter> _71538_it) {
	jule::Ref<_10e97fcf0_InfIter> _71617_kind = jule::new_struct<_10e97fcf0_InfIter>(new( std::nothrow ) _10e97fcf0_InfIter());
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_71617_kind));
	_71617_kind->_field_scope=this->self->_method_check_iter_scope(((jule::Uintptr)((_71617_kind).alloc)),_71538_it->_field_scope);
}



inline void _10e97fcf0_ScopeChecker::_method_check_while_iter(jule::Ref<_11ce1fd50_Iter> _72340_it) {
	jule::Ref<_11ce1fd50_WhileKind> _72417_wh = _72340_it->_field_kind.operator jule::Ref<_11ce1fd50_WhileKind>();
	if (((!jule::real(_72417_wh->_field_expr)) && (_72417_wh->_field_next == nullptr))) {
		this->self->_method_check_inf_iter(_72340_it);
		return;
	}
	jule::Ref<_10e97fcf0_WhileIter> _73017_kind = jule::new_struct<_10e97fcf0_WhileIter>(new( std::nothrow ) _10e97fcf0_WhileIter());
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_73017_kind));
	_73017_kind->_field_scope=this->self->_method_check_iter_scope(((jule::Uintptr)((_73017_kind).alloc)),_72340_it->_field_scope);
	if (jule::real(_72417_wh->_field_expr)) {
		jule::Ref<_10ee8a260_Data> _73721_d = this->self->_field_s->_method_eval(_72417_wh->_field_expr,this->self);
		if ((!jule::real(_73721_d))) {
			return;
		}
		jule::Ref<_10eeb79b0_Prim> _74217_prim = _73721_d->_field_kind->_method_prim();
		if ((!jule::real(_74217_prim))) {
			this->self->_field_s->_method_push_err(_72340_it->_field_token,jule::Str("iter_while_require_bool_expr", 28),jule::Slice<jule::Any>({}));
			return;
		}
		if ((!_74217_prim->_method_is_bool())) {
			this->self->_field_s->_method_push_err(_72340_it->_field_token,jule::Str("iter_while_require_bool_expr", 28),jule::Slice<jule::Any>({}));
			return;
		}
		_73017_kind->_field_expr=_73721_d->_field_model;
	}
	if (_72417_wh->_method_is_while_next()) {
		if ((!_10e97fcf0_is_valid_ast_st_for_next_st(_72417_wh->_field_next))) {
			this->self->_field_s->_method_push_err(_72417_wh->_field_next_token,jule::Str("invalid_stmt_for_next", 21),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Int _76217_n = static_cast<jule::Int>(this->self->_field_scope->_field_stmts._method_len());
		this->self->_method_check_node(_72417_wh->_field_next);
		if ((_76217_n < static_cast<jule::Int>(this->self->_field_scope->_field_stmts._method_len()))) {
			jule::Any _76525_st = this->self->_field_scope->_field_stmts._method_at(_76217_n);
			this->self->_field_scope->_field_stmts._method_set_len(_76217_n);
			if ((!_10e97fcf0_is_valid_st_for_next_st(_76525_st))) {
				this->self->_field_s->_method_push_err(_72417_wh->_field_next_token,jule::Str("invalid_stmt_for_next", 21),jule::Slice<jule::Any>({}));
			}
			_73017_kind->_field_next=_76525_st;
		}
	}
}



inline void _10e97fcf0_ScopeChecker::_method_check_range_iter(jule::Ref<_11ce1fd50_Iter> _77640_it) {
	jule::Ref<_11ce1fd50_RangeKind> _77717_rang = _77640_it->_field_kind.operator jule::Ref<_11ce1fd50_RangeKind>();
	jule::Ref<_10ee8a260_Data> _77917_d = this->self->_field_s->_method_eval(_77717_rang->_field_expr,this->self);
	if ((!jule::real(_77917_d))) {
		return;
	}
	jule::Ref<_10e97fcf0_RangeIter> _78417_kind = jule::new_struct<_10e97fcf0_RangeIter>(new( std::nothrow ) _10e97fcf0_RangeIter(_77917_d,jule::Ref<_10e97fcf0_Scope>(),jule::Ref<_10ebc2ad0_Var>(),jule::Ref<_10ebc2ad0_Var>()));
	_10eb9c740_RangeChecker _78817_rc = _10eb9c740_RangeChecker(this->self,_77717_rang,_78417_kind,_77917_d);
	jule::Bool _79413_ok = _78817_rc._method_check();
	if ((!_79413_ok)) {
		return;
	}
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_78417_kind));
	jule::Ref<_10e97fcf0_ScopeChecker> _80117_ssc = this->self->_method_new_child_checker();
	if (jule::real(_78417_kind->_field_key_a)) {
		_80117_ssc->_field_table->_field_vars._method_push(_78417_kind->_field_key_a);
	}
	if (jule::real(_78417_kind->_field_key_b)) {
		_80117_ssc->_field_table->_field_vars._method_push(_78417_kind->_field_key_b);
	}
	_78417_kind->_field_scope=this->self->_method_check_iter_scope_sc(((jule::Uintptr)((_78417_kind).alloc)),_77640_it->_field_scope,_80117_ssc);
}



inline void _10e97fcf0_ScopeChecker::_method_check_iter(jule::Ref<_11ce1fd50_Iter> _81434_it) {
	if (_81434_it->_method_is_inf()) {
		this->self->_method_check_inf_iter(_81434_it);
		return;
	}
	{
		auto _match_expr{ _81434_it->_field_kind };
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_WhileKind>>())) { goto _case_end_4709195760; }
		_case_begin_4709195760:;
		{
			this->self->_method_check_while_iter(_81434_it);
		}
		goto _match_end_4709194816;
		_case_end_4709195760:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_RangeKind>>())) { goto _case_end_4709196736; }
		_case_begin_4709196736:;
		{
			this->self->_method_check_range_iter(_81434_it);
		}
		goto _match_end_4709194816;
		_case_end_4709196736:;
		_case_begin_4709194976:;
		{
			jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
		}
		goto _match_end_4709194816;
		_case_end_4709194976:;
		_match_end_4709194816:;
	}
}



inline jule::Bool _10e97fcf0_ScopeChecker::_method_check_valid_cont_label(jule::Uintptr _82742_it) {
	jule::Ref<_10e97fcf0_ScopeChecker> _82817_scope = this->self;
	_julec_label_iter:;
	if ((_82817_scope->_field_it == _82742_it)) {
		return true;
	}
	if (jule::real(_82817_scope->_field_parent)) {
		_82817_scope=_82817_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _10e97fcf0_ScopeChecker::_method_check_valid_break_label(jule::Uintptr _84343_ptr) {
	jule::Ref<_10e97fcf0_ScopeChecker> _84417_scope = this->self;
	_julec_label_iter:;
	if ((_84417_scope->_field_it == _84343_ptr)) {
		return true;
	}
	if ((_84417_scope->_field_cse != 0LL)) {
		jule::Uintptr _85217_mtch = static_cast<jule::Uintptr>(((jule::Uintptr)((((_10e97fcf0_Case*)(_84417_scope->_field_cse))->_field_owner).alloc)));
		if ((_85217_mtch == _84343_ptr)) {
			return true;
		}
	}
	if (jule::real(_84417_scope->_field_parent)) {
		_84417_scope=_84417_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Ref<_10e97fcf0_ContSt> _10e97fcf0_ScopeChecker::_method_check_cont_valid_scope(jule::Ref<_11ce1fd50_ContSt> _86641_c) {
	if ((_86641_c->_field_label._field_id != 0LLU)) {
		return jule::new_struct<_10e97fcf0_ContSt>(new( std::nothrow ) _10e97fcf0_ContSt());
	}
	_10e97fcf0_ScopeChecker _87117_scope = (*this);
	_julec_label_iter:;
	{
		auto _match_expr{ true };
		if (!((((_87117_scope._field_it == 0LL) && jule::real(_87117_scope._field_parent)) && (!jule::real(_87117_scope._field_owner))) == _match_expr)) { goto _case_end_4709228496; }
		_case_begin_4709228496:;
		{
			_87117_scope=_87117_scope._field_parent;
			goto _julec_label_iter;
		}
		goto _match_end_4709227984;
		_case_end_4709228496:;
		if (!((_87117_scope._field_it != 0LL) == _match_expr)) { goto _case_end_4709228608; }
		_case_begin_4709228608:;
		{
			return jule::new_struct<_10e97fcf0_ContSt>(new( std::nothrow ) _10e97fcf0_ContSt(_87117_scope._field_it));
		}
		goto _match_end_4709227984;
		_case_end_4709228608:;
		_match_end_4709227984:;
	}
	(*this)._field_s->_method_push_err(_86641_c->_field_token,jule::Str("continue_at_out_of_valid_scope", 30),jule::Slice<jule::Any>({}));
	return jule::new_ref<_10e97fcf0_ContSt>();
}



inline void _10e97fcf0_ScopeChecker::_method_check_cont(jule::Ref<_11ce1fd50_ContSt> _88630_c) {
	jule::Ref<_10e97fcf0_ContSt> _88717_cont = this->self->_method_check_cont_valid_scope(_88630_c);
	if ((!jule::real(_88717_cont))) {
		return;
	}
	if ((_88630_c->_field_label._field_id != 0LLU)) {
		jule::Ref<_10e97fcf0_ScopeLabel> _89321_label = _10e97fcf0_find_label_parent(_88630_c->_field_label._field_kind,this->self->_field_parent);
		if ((!jule::real(_89321_label))) {
			this->self->_field_s->_method_push_err(_88630_c->_field_label,jule::Str("label_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_88630_c->_field_label._field_kind)}));
			return;
		}
		_89321_label->_field_used=true;
		if (((_89321_label->_field_pos + 1LL) >= static_cast<jule::Int>(_89321_label->_field_scope->_field_scope->_field_stmts._method_len()))) {
			this->self->_field_s->_method_push_err(_88630_c->_field_label,jule::Str("invalid_label", 13),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Int _90617_i = (_89321_label->_field_pos + 1LL);
		if ((_90617_i >= static_cast<jule::Int>(_89321_label->_field_scope->_field_scope->_field_stmts._method_len()))) {
			this->self->_field_s->_method_push_err(_88630_c->_field_label,jule::Str("invalid_label", 13),jule::Slice<jule::Any>({}));
		} else {
			jule::Any _91025_st = _89321_label->_field_scope->_field_scope->_field_stmts._method_at(_90617_i);
			{
				auto _match_expr{ _91025_st };
				if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_InfIter>>())) { goto _case_end_4709267648; }
				_case_begin_4709267648:;
				{
					_88717_cont->_field_it=((jule::Uintptr)((_91025_st.operator jule::Ref<_10e97fcf0_InfIter>()).alloc));
				}
				goto _match_end_4709265168;
				_case_end_4709267648:;
				if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_RangeIter>>())) { goto _case_end_4709266848; }
				_case_begin_4709266848:;
				{
					_88717_cont->_field_it=((jule::Uintptr)((_91025_st.operator jule::Ref<_10e97fcf0_RangeIter>()).alloc));
				}
				goto _match_end_4709265168;
				_case_end_4709266848:;
				if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_WhileIter>>())) { goto _case_end_4709266960; }
				_case_begin_4709266960:;
				{
					_88717_cont->_field_it=((jule::Uintptr)((_91025_st.operator jule::Ref<_10e97fcf0_WhileIter>()).alloc));
				}
				goto _match_end_4709265168;
				_case_end_4709266960:;
				_case_begin_4709265648:;
				{
					this->self->_field_s->_method_push_err(_88630_c->_field_label,jule::Str("invalid_label", 13),jule::Slice<jule::Any>({}));
				}
				goto _match_end_4709265168;
				_case_end_4709265648:;
				_match_end_4709265168:;
			}
		}
	}
	if ((_88717_cont->_field_it != 0LL)) {
		if ((!this->self->_method_check_valid_cont_label(_88717_cont->_field_it))) {
			this->self->_field_s->_method_push_err(_88630_c->_field_label,jule::Str("invalid_label", 13),jule::Slice<jule::Any>({}));
		}
	}
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_88717_cont));
}



inline void _10e97fcf0_ScopeChecker::_method_check_label(jule::Ref<_11ce1fd50_LabelSt> _92935_l) {
	if (jule::real(this->self->_method_find_label(_92935_l->_field_ident))) {
		this->self->_field_s->_method_push_err(_92935_l->_field_token,jule::Str("label_exist", 11),jule::Slice<jule::Any>({jule::Any(_92935_l->_field_ident)}));
		return;
	}
	jule::Ref<_10e97fcf0_Label> _93517_label = jule::new_struct<_10e97fcf0_Label>(new( std::nothrow ) _10e97fcf0_Label(_92935_l->_field_ident));
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_93517_label));
	this->self->_field_labels=append(this->self->_field_labels.get(),jule::Slice<jule::Ref<_10e97fcf0_ScopeLabel>>({jule::new_struct<_10e97fcf0_ScopeLabel>(new( std::nothrow ) _10e97fcf0_ScopeLabel(_92935_l->_field_token,_93517_label,static_cast<jule::Int>((static_cast<jule::Int>(this->self->_field_scope->_field_stmts._method_len()) - 1LL)),this->self,jule::Bool()))}));
}



inline void _10e97fcf0_ScopeChecker::_method_push_goto(jule::Ref<_11ce1fd50_GotoSt> _94833_gt) {
	this->self->_field_scope->_field_stmts._method_push(jule::Any(jule::new_struct<_10e97fcf0_GotoSt>(new( std::nothrow ) _10e97fcf0_GotoSt(_94833_gt->_field_label._field_kind))));
	this->self->_field_gotos=append(this->self->_field_gotos.get(),jule::Slice<jule::Ref<_10e97fcf0_ScopeGoto>>({jule::new_struct<_10e97fcf0_ScopeGoto>(new( std::nothrow ) _10e97fcf0_ScopeGoto(_94833_gt,this->self,static_cast<jule::Int>((static_cast<jule::Int>(this->self->_field_scope->_field_stmts._method_len()) - 1LL))))}));
}



inline void _10e97fcf0_ScopeChecker::_method_check_postfix(jule::Ref<_11ce1fd50_AssignSt> _96037_a) {
	if ((static_cast<jule::I64>(_96037_a->_field_left.len()) > 1LL)) {
		this->self->_field_s->_method_push_err(_96037_a->_field_setter,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_10ee8a260_Data> _96617_d = this->self->_field_s->_method_eval(_96037_a->_field_left[static_cast<jule::Int>(0LL)]->_field_expr,this->self);
	if ((!jule::real(_96617_d))) {
		return;
	}
	_10e97fcf0_check_assign(this->self->_field_s,_96617_d,jule::new_ref<_10ee8a260_Data>(),_96037_a->_field_setter);
	if (jule::real(_96617_d->_field_kind->_method_ptr())) {
		jule::Ref<_10eeb79b0_Ptr> _97421_ptr = _96617_d->_field_kind->_method_ptr();
		if (((!_97421_ptr->_method_is_unsafe()) && (!this->self->_method_is_unsafe()))) {
			this->self->_field_s->_method_push_err(_96037_a->_field_left[static_cast<jule::Int>(0LL)]->_field_expr->_field_token,jule::Str("unsafe_behavior_at_out_of_unsafe_scope", 38),jule::Slice<jule::Any>({}));
			return;
		}
	}
	jule::Ref<_10eeb79b0_TypeKind> _98117_check_t = _96617_d->_field_kind;
	if (jule::real(_96617_d->_field_kind->_method_ref())) {
		_98117_check_t=_96617_d->_field_kind->_method_ref()->_field_elem;
	}
	if (((!jule::real(_98117_check_t->_method_prim())) || (!_10f5ea650_is_num(_98117_check_t->_method_prim()->_field_kind)))) {
		this->self->_field_s->_method_push_err(_96037_a->_field_setter,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any(_96037_a->_field_setter._field_kind),jule::Any(_96617_d->_field_kind->_method_to_str())}));
		return;
	}
	this->self->_field_scope->_field_stmts._method_push(jule::Any(jule::new_struct<_10e97fcf0_Postfix>(new( std::nothrow ) _10e97fcf0_Postfix(_96617_d->_field_model,_96037_a->_field_setter._field_kind))));
}



inline jule::Bool _10e97fcf0_ScopeChecker::_method_is_new_assign_ident(jule::Str _99738_ident) {
	if ((_11ce22a00_is_ignore_ident(_99738_ident) || (_99738_ident == jule::Str("", 0)))) {
		return false;
	}
	return ((*this)._field_table->_method_def_by_ident(_99738_ident,false) == nullptr);
}



inline void _10e97fcf0_ScopeChecker::_method_check_single_assign(jule::Ref<_11ce1fd50_AssignSt> _100543_a) {
	jule::Ref<_10ee8a260_Data> _100617_l = jule::new_ref<_10ee8a260_Data>();
	jule::Ref<_10ee8a260_Data> _100717_r = jule::new_ref<_10ee8a260_Data>();
	if ((!_11ce22a00_is_ignore_ident(_100543_a->_field_left[static_cast<jule::Int>(0LL)]->_field_ident))) {
		_100617_l=this->self->_field_s->_method_eval(_100543_a->_field_left[static_cast<jule::Int>(0LL)]->_field_expr,this->self);
		if ((!jule::real(_100617_l))) {
			return;
		}
	}
	if (jule::real(_100617_l)) {
		_100717_r=this->self->_field_s->_method_evalp(_100543_a->_field_right,this->self,_100617_l->_field_kind);
	} else {
		_100717_r=this->self->_field_s->_method_eval(_100543_a->_field_right,this->self);
	}
	if ((!jule::real(_100717_r))) {
		return;
	}
	if ((!jule::real(_100617_l))) {
		if (_100717_r->_field_kind->_method_is_void()) {
			this->self->_field_s->_method_push_err(_100543_a->_field_right->_field_token,jule::Str("invalid_expr", 12),jule::Slice<jule::Any>({}));
		}
		this->self->_field_scope->_field_stmts._method_push(jule::Any(_100717_r));
		return;
	}
	if ((!_10e97fcf0_check_assign(this->self->_field_s,_100617_l,_100717_r,_100543_a->_field_setter))) {
		return;
	}
	if (jule::real(_100717_r->_field_kind->_method_tup())) {
		this->self->_field_s->_method_push_err(_100543_a->_field_setter,jule::Str("missing_multi_assign_idents", 27),jule::Slice<jule::Any>({}));
		return;
	}
	this->self->_field_scope->_field_stmts._method_push(jule::Any(jule::new_struct<_10e97fcf0_Assign>(new( std::nothrow ) _10e97fcf0_Assign(_100617_l->_field_model,_100717_r->_field_model,_100543_a->_field_setter._field_kind))));
	if (((_100543_a->_field_setter._field_kind != jule::Str("=", 1)) && (!_100717_r->_method_is_const()))) {
		_100543_a->_field_setter._field_kind=_100543_a->_field_setter._field_kind.slice(0LL,static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_100543_a->_field_setter._field_kind.len()) - 1LL))));
		_10ee8a260_BinopSolver _105221_solver = _10ee8a260_BinopSolver(jule::new_struct<_10ee8a260_Eval>(new( std::nothrow ) _10ee8a260_Eval(this->self->_field_s,this->self,jule::Ref<_10eeb79b0_TypeKind>(),this->self->_method_is_unsafe(),jule::Ref<_10ebc2ad0_Var>())),jule::Ref<_10ee8a260_Data>(),jule::Ref<_10ee8a260_Data>(),_100543_a->_field_setter);
		_100717_r=_105221_solver._method_solve_explicit(_100617_l,_100717_r);
		if ((!jule::real(_100717_r))) {
			return;
		}
		_100543_a->_field_setter._field_kind+=jule::Str("=", 1);
	}
	_10eb9c740_AssignTypeChecker _106817_checker = _10eb9c740_AssignTypeChecker(this->self->_field_s,_100617_l->_field_kind,_100717_r,_100543_a->_field_setter,true);
	_106817_checker._method_check();
}



inline void _10e97fcf0_ScopeChecker::_method___process_end_part_of_multi_assign(jule::Ref<_10e97fcf0_MultiAssign> _107857_st,jule::Ref<_11ce1fd50_AssignSt> _107913_a,jule::Ref<_11ce1fd50_AssignLeft> _107927_lexpr,jule::Ref<_10ee8a260_Data> _107951_l,jule::Ref<_10ee8a260_Data> _107965_r) {
	if (_11ce22a00_is_ignore_ident(_107927_lexpr->_field_ident)) {
		if (_107965_r->_field_kind->_method_is_void()) {
			(*this)._field_s->_method_push_err(_107913_a->_field_right->_field_token,jule::Str("invalid_expr", 12),jule::Slice<jule::Any>({}));
		}
		_107857_st->_field_l=append(_107857_st->_field_l,jule::Slice<jule::Any>({jule::Any(nullptr)}));
		return;
	}
	if ((_107913_a->_field_declarative && (*this)._method_is_new_assign_ident(_107927_lexpr->_field_ident))) {
		jule::Ref<_10ebc2ad0_Var> _109121_v = jule::new_struct<_10ebc2ad0_Var>(new( std::nothrow ) _10ebc2ad0_Var((*this)._field_tree,_107927_lexpr->_field_token,_107927_lexpr->_field_ident,jule::Bool(),jule::Bool(),_107927_lexpr->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),_107927_lexpr->_field_reference,jule::Str(),jule::Ref<_10eeb79b0_TypeSymbol>(),jule::new_struct<_10ee8a260_Value>(new( std::nothrow ) _10ee8a260_Value(_107913_a->_field_right,_107965_r)),jule::Ref<_10e8ca650_ReferenceStack>(),jule::Slice<jule::Ref<_10ebc2ad0_Var>>()));
		(*this)._field_s->_method_check_var(_109121_v);
		_107857_st->_field_l=append(_107857_st->_field_l,jule::Slice<jule::Any>({jule::Any(_109121_v)}));
		(*this)._field_table->_field_vars._method_push(_109121_v);
		(*this)._field_scope->_field_stmts._method_push(jule::Any(_109121_v));
		return;
	}
	if ((_107927_lexpr->_field_mutable || _107927_lexpr->_field_reference)) {
		(*this)._field_s->_method_push_err(_107927_lexpr->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_107927_lexpr->_field_ident)}));
	}
	if ((!_10e97fcf0_check_assign((*this)._field_s,_107951_l,_107965_r,_107913_a->_field_setter))) {
		return;
	}
	
	(*this)._field_s->_method_check_validity_for_init_expr(_107951_l->_field_mutable,false,_107951_l->_field_kind,_107965_r,_107913_a->_field_setter);
	_10eb9c740_AssignTypeChecker _112517_checker = _10eb9c740_AssignTypeChecker((*this)._field_s,_107951_l->_field_kind,_107965_r,_107913_a->_field_setter,true);
	_112517_checker._method_check();
	_107857_st->_field_l=append(_107857_st->_field_l,jule::Slice<jule::Any>({_107951_l->_field_model}));
}



inline void _10e97fcf0_ScopeChecker::_method_check_ret_multi_assign(jule::Ref<_11ce1fd50_AssignSt> _113746_a) {
	jule::Ref<_10ee8a260_Data> _113817_rd = this->self->_field_s->_method_eval(_113746_a->_field_right,this->self);
	if ((!jule::real(_113817_rd))) {
		return;
	}
	jule::Slice<jule::Ref<_10ee8a260_Data>> _114317_r = _10e97fcf0_get_datas_from_tuple_data(_113817_rd);
	{
		auto _match_expr{ true };
		if (!((static_cast<jule::I64>(_113746_a->_field_left.len()) > static_cast<jule::I64>(_114317_r.len())) == _match_expr)) { goto _case_end_4709482320; }
		_case_begin_4709482320:;
		{
			this->self->_field_s->_method_push_err(_113746_a->_field_setter,jule::Str("overflow_multi_assign_idents", 28),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4706608432;
		_case_end_4709482320:;
		if (!((static_cast<jule::I64>(_113746_a->_field_left.len()) < static_cast<jule::I64>(_114317_r.len())) == _match_expr)) { goto _case_end_4709482432; }
		_case_begin_4709482432:;
		{
			this->self->_field_s->_method_push_err(_113746_a->_field_setter,jule::Str("missing_multi_assign_idents", 27),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4706608432;
		_case_end_4709482432:;
		_match_end_4706608432:;
	}
	jule::Ref<_10e97fcf0_MultiAssign> _115517_st = jule::new_struct<_10e97fcf0_MultiAssign>(new( std::nothrow ) _10e97fcf0_MultiAssign(jule::Slice<jule::Any>(),_113817_rd->_field_model));
	if ((!jule::real(_113817_rd->_field_kind->_method_tup()))) {
		_115517_st->_field_r=jule::Any(jule::new_struct<_10e9ca470_TupleExprModel>(new( std::nothrow ) _10e9ca470_TupleExprModel(_114317_r)));
	}
	{
		auto &__julec_range_expr = _113746_a->_field_left;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e97fcf0_i{jule::Int()};_10e97fcf0_i = 0;
			_iter_begin_4709386560:;
			{
				jule::Ref<_11ce1fd50_AssignLeft> _116421_lexpr = _113746_a->_field_left[static_cast<jule::Int>(_10e97fcf0_i)];
				jule::Ref<_10ee8a260_Data> _116521_l = jule::new_ref<_10ee8a260_Data>();
				jule::Ref<_10ee8a260_Data> _116621_r = _114317_r[static_cast<jule::Int>(_10e97fcf0_i)];
				if (((!_11ce22a00_is_ignore_ident(_116421_lexpr->_field_ident)) && ((!_113746_a->_field_declarative) || (!this->self->_method_is_new_assign_ident(_116421_lexpr->_field_ident))))) {
					_116521_l=this->self->_field_s->_method_eval(_116421_lexpr->_field_expr,this->self);
					if ((!jule::real(_116521_l))) {
						goto _iter_next_4709386560;
					}
				}
				this->self->_method___process_end_part_of_multi_assign(_115517_st,_113746_a,_116421_lexpr,_116521_l,_116621_r);
			}
			_iter_next_4709386560:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e97fcf0_i; goto _iter_begin_4709386560; }
			_iter_end_4709386560:;
		}
	}
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_115517_st));
}



inline void _10e97fcf0_ScopeChecker::_method_check_multi_assign(jule::Ref<_11ce1fd50_AssignSt> _118142_a) {
	{
		auto _match_expr{ _118142_a->_field_right->_field_kind };
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_FnCallExpr>>())) { goto _case_end_4709517824; }
		_case_begin_4709517824:;
		{
			this->self->_method_check_ret_multi_assign(_118142_a);
			return;
		}
		goto _match_end_4709516768;
		_case_end_4709517824:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_UnsafeExpr>>())) { goto _case_end_4709517936; }
		_case_begin_4709517936:;
		{
			{
				auto _match_expr{ _118142_a->_field_right->_field_kind.operator jule::Ref<_11ce1fd50_UnsafeExpr>()->_field_expr };
				if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_FnCallExpr>>())) { goto _case_end_4709523392; }
				_case_begin_4709523392:;
				{
					this->self->_method_check_ret_multi_assign(_118142_a);
					return;
				}
				goto _match_end_4709523280;
				_case_end_4709523392:;
				_match_end_4709523280:;
			}
		}
		goto _match_end_4709516768;
		_case_end_4709517936:;
		_match_end_4709516768:;
	}
	jule::Slice<jule::Any> _119517_right = _10e97fcf0_get_expr_models(_118142_a->_field_right->_field_kind);
	{
		auto _match_expr{ true };
		if (!((static_cast<jule::I64>(_118142_a->_field_left.len()) > static_cast<jule::I64>(_119517_right.len())) == _match_expr)) { goto _case_end_4709526384; }
		_case_begin_4709526384:;
		{
			this->self->_field_s->_method_push_err(_118142_a->_field_setter,jule::Str("overflow_multi_assign_idents", 28),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4709524400;
		_case_end_4709526384:;
		if (!((static_cast<jule::I64>(_118142_a->_field_left.len()) < static_cast<jule::I64>(_119517_right.len())) == _match_expr)) { goto _case_end_4709526496; }
		_case_begin_4709526496:;
		{
			this->self->_field_s->_method_push_err(_118142_a->_field_setter,jule::Str("missing_multi_assign_idents", 27),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4709524400;
		_case_end_4709526496:;
		_match_end_4709524400:;
	}
	jule::Ref<_10e9ca470_TupleExprModel> _120717_right_tuple = jule::new_struct<_10e9ca470_TupleExprModel>(new( std::nothrow ) _10e9ca470_TupleExprModel());
	jule::Ref<_10e97fcf0_MultiAssign> _120917_st = jule::new_struct<_10e97fcf0_MultiAssign>(new( std::nothrow ) _10e97fcf0_MultiAssign(jule::Slice<jule::Any>(),_120717_right_tuple));
	{
		auto &__julec_range_expr = _118142_a->_field_left;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e97fcf0_i{jule::Int()};_10e97fcf0_i = 0;
			_iter_begin_4709538848:;
			{
				jule::Ref<_11ce1fd50_AssignLeft> _121421_lexpr = _118142_a->_field_left[static_cast<jule::Int>(_10e97fcf0_i)];
				jule::Ref<_10ee8a260_Data> _121521_l = jule::new_ref<_10ee8a260_Data>();
				jule::Ref<_10ee8a260_Data> _121621_r = jule::new_ref<_10ee8a260_Data>();
				if (((!_11ce22a00_is_ignore_ident(_121421_lexpr->_field_ident)) && ((!_118142_a->_field_declarative) || (!this->self->_method_is_new_assign_ident(_121421_lexpr->_field_ident))))) {
					_121521_l=this->self->_field_s->_method_eval(_121421_lexpr->_field_expr,this->self);
					if ((!jule::real(_121521_l))) {
						goto _iter_next_4709538848;
					}
				}
				if (jule::real(_121521_l)) {
					jule::Ref<_11ce1fd50_Expr> _122625_expr = jule::new_struct<_11ce1fd50_Expr>(new( std::nothrow ) _11ce1fd50_Expr(_118142_a->_field_right->_field_token,_119517_right[static_cast<jule::Int>(_10e97fcf0_i)]));
					_121621_r=this->self->_field_s->_method_evalp(_122625_expr,this->self,_121521_l->_field_kind);
				} else {
					jule::Ref<_11ce1fd50_Expr> _122925_expr = jule::new_struct<_11ce1fd50_Expr>(new( std::nothrow ) _11ce1fd50_Expr(_118142_a->_field_right->_field_token,_119517_right[static_cast<jule::Int>(_10e97fcf0_i)]));
					_121621_r=this->self->_field_s->_method_eval(_122925_expr,this->self);
				}
				if ((!jule::real(_121621_r))) {
					goto _iter_next_4709538848;
				}
				_120717_right_tuple->_field_datas=append(_120717_right_tuple->_field_datas,jule::Slice<jule::Ref<_10ee8a260_Data>>({_121621_r}));
				this->self->_method___process_end_part_of_multi_assign(_120917_st,_118142_a,_121421_lexpr,_121521_l,_121621_r);
			}
			_iter_next_4709538848:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e97fcf0_i; goto _iter_begin_4709538848; }
			_iter_end_4709538848:;
		}
	}
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_120917_st));
}



inline void _10e97fcf0_ScopeChecker::_method_check_assign_st(jule::Ref<_11ce1fd50_AssignSt> _124439_a) {
	if (_11ce22a00_is_postfix_op(_124439_a->_field_setter._field_kind)) {
		this->self->_method_check_postfix(_124439_a);
		return;
	}
	if (((static_cast<jule::I64>(_124439_a->_field_left.len()) == 1LL) && (!_124439_a->_field_declarative))) {
		this->self->_method_check_single_assign(_124439_a);
		return;
	}
	this->self->_method_check_multi_assign(_124439_a);
}



inline jule::Ref<_10e97fcf0_Scope> _10e97fcf0_ScopeChecker::_method_check_case_scope(jule::Ref<_10e97fcf0_Case> _125836_c,jule::Ref<_11ce1fd50_ScopeTree> _125850_tree) {
	jule::Ref<_10e97fcf0_ScopeChecker> _125917_ssc = this->self->_method_new_child_checker();
	_125917_ssc->_field_cse=((jule::Uintptr)((_125836_c).alloc));
	return this->self->_method_check_child_sc(_125850_tree,_125917_ssc);
}



inline jule::Ref<_10e97fcf0_Case> _10e97fcf0_ScopeChecker::_method_check_case(jule::Ref<_10e97fcf0_Match> _126434_m,jule::Int _126445_i,jule::Ref<_11ce1fd50_Case> _126457_c,jule::Ref<_10ee8a260_Data> _126487_expr) {
	jule::Ref<_10e97fcf0_Case> _126517__case = _126434_m->_field_cases[static_cast<jule::Int>(_126445_i)];
	_126517__case->_field_exprs=jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_126457_c->_field_exprs.len())));
	{
		auto &__julec_range_expr = _126457_c->_field_exprs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e97fcf0_i{jule::Int()};_10e97fcf0_i = 0;
			jule::Ref<_11ce1fd50_Expr> _10e97fcf0_e{jule::Ref<_11ce1fd50_Expr>()};_10e97fcf0_e = *__julec_range_begin;
			_iter_begin_4709594672:;
			{
				if (_126434_m->_field_type_match) {
					jule::Ref<_10ee8a260_Eval> _127025_eval = jule::new_struct<_10ee8a260_Eval>(new( std::nothrow ) _10ee8a260_Eval(this->self->_field_s,this->self,jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Ref<_10ebc2ad0_Var>()));
					jule::Ref<_10ee8a260_Data> _127525_d = _127025_eval->_method_eval(_10e97fcf0_e);
					if (jule::real(_127525_d)) {
						_126517__case->_field_exprs[static_cast<jule::Int>(_10e97fcf0_i)]=jule::Any(_127525_d->_field_kind);
						if ((static_cast<jule::Int>(_10e97fcf0_count_match_type(_126434_m,_127525_d->_field_kind)) > 1LL)) {
							this->self->_field_s->_method_push_err(_10e97fcf0_e->_field_token,jule::Str("duplicate_match_type", 20),jule::Slice<jule::Any>({jule::Any(_127525_d->_field_kind->_method_to_str())}));
						}
					}
					jule::Ref<_10e3d6eb0_Trait> _128321_trt = _126487_expr->_field_kind->_method_trt();
					if (jule::real(_128321_trt)) {
						this->self->_field_s->_method_check_type_compatibility(_126487_expr->_field_kind,_127525_d->_field_kind,_10e97fcf0_e->_field_token,false);
					}
					goto _iter_next_4709594672;
				}
				jule::Ref<_10ee8a260_Data> _129121_d = this->self->_field_s->_method_eval(_10e97fcf0_e,this->self);
				if ((!jule::real(_129121_d))) {
					goto _iter_next_4709594672;
				}
				_126517__case->_field_exprs[static_cast<jule::Int>(_10e97fcf0_i)]=_129121_d->_field_model;
				_10eb9c740_AssignTypeChecker _129821_checker = _10eb9c740_AssignTypeChecker(this->self->_field_s,_126487_expr->_field_kind,_129121_d,_10e97fcf0_e->_field_token,true);
				_129821_checker._method_check();
			}
			_iter_next_4709594672:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e97fcf0_i; _10e97fcf0_e = *__julec_range_begin; goto _iter_begin_4709594672; }
			_iter_end_4709594672:;
		}
	}
	_126517__case->_field_scope=this->self->_method_check_case_scope(_126517__case,_126457_c->_field_scope);
	return _126517__case;
}



inline void _10e97fcf0_ScopeChecker::_method_check_cases(jule::Ref<_11ce1fd50_MatchCase> _131235_m,jule::Ref<_10e97fcf0_Match> _131270_rm,jule::Ref<_10ee8a260_Data> _131286_expr) {
	_131270_rm->_field_cases=jule::Slice<jule::Ref<_10e97fcf0_Case>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_131235_m->_field_cases.len())));
	{
		auto &__julec_range_expr = _131235_m->_field_cases;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e97fcf0_i{jule::Int()};_10e97fcf0_i = 0;
			_iter_begin_4709638496:;
			{
				jule::Ref<_10e97fcf0_Case> _131521__case = jule::new_struct<_10e97fcf0_Case>(new( std::nothrow ) _10e97fcf0_Case(_131270_rm,jule::Ref<_10e97fcf0_Scope>(),jule::Slice<jule::Any>(),jule::Ref<_10e97fcf0_Case>()));
				if ((_10e97fcf0_i > 0LL)) {
					_131270_rm->_field_cases[static_cast<jule::Int>((_10e97fcf0_i - 1LL))]->_field_next=_131521__case;
				}
				_131270_rm->_field_cases[static_cast<jule::Int>(_10e97fcf0_i)]=_131521__case;
			}
			_iter_next_4709638496:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e97fcf0_i; goto _iter_begin_4709638496; }
			_iter_end_4709638496:;
		}
	}
	if ((jule::real(_131270_rm->_field_default) && (static_cast<jule::I64>(_131235_m->_field_cases.len()) > 0LL))) {
		_131270_rm->_field_cases[static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_131270_rm->_field_cases.len()) - 1LL)))]->_field_next=_131270_rm->_field_default;
	}
	{
		auto &__julec_range_expr = _131235_m->_field_cases;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e97fcf0_i{jule::Int()};_10e97fcf0_i = 0;
			jule::Ref<_11ce1fd50_Case> _10e97fcf0_c{jule::Ref<_11ce1fd50_Case>()};_10e97fcf0_c = *__julec_range_begin;
			_iter_begin_4709650176:;
			{
				this->self->_method_check_case(_131270_rm,_10e97fcf0_i,_10e97fcf0_c,_131286_expr);
			}
			_iter_next_4709650176:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e97fcf0_i; _10e97fcf0_c = *__julec_range_begin; goto _iter_begin_4709650176; }
			_iter_end_4709650176:;
		}
	}
}



inline jule::Ref<_10e97fcf0_Case> _10e97fcf0_ScopeChecker::_method_check_default(jule::Ref<_10e97fcf0_Match> _133537_m,jule::Ref<_11ce1fd50_Else> _133552_d) {
	jule::Ref<_10e97fcf0_Case> _133617_def = jule::new_struct<_10e97fcf0_Case>(new( std::nothrow ) _10e97fcf0_Case(_133537_m,jule::Ref<_10e97fcf0_Scope>(),jule::Slice<jule::Any>(),jule::Ref<_10e97fcf0_Case>()));
	_133617_def->_field_scope=this->self->_method_check_case_scope(_133617_def,_133552_d->_field_scope);
	return _133617_def;
}



inline void _10e97fcf0_ScopeChecker::_method_check_type_match(jule::Ref<_11ce1fd50_MatchCase> _134340_m) {
	jule::Ref<_10ee8a260_Data> _134417_d = this->self->_field_s->_method_eval(_134340_m->_field_expr,this->self);
	if ((!jule::real(_134417_d))) {
		return;
	}
	if ((!((jule::real(_134417_d->_field_kind->_method_prim()) && _134417_d->_field_kind->_method_prim()->_method_is_any()) || jule::real(_134417_d->_field_kind->_method_trt())))) {
		this->self->_field_s->_method_push_err(_134340_m->_field_expr->_field_token,jule::Str("type_case_has_not_valid_expr", 28),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_10e97fcf0_Match> _135417_tm = jule::new_struct<_10e97fcf0_Match>(new( std::nothrow ) _10e97fcf0_Match(_134417_d->_field_model,true,jule::Slice<jule::Ref<_10e97fcf0_Case>>(),jule::Ref<_10e97fcf0_Case>()));
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_135417_tm));
	if (jule::real(_134340_m->_field_default)) {
		_135417_tm->_field_default=this->self->_method_check_default(_135417_tm,_134340_m->_field_default);
	}
	this->self->_method_check_cases(_134340_m,_135417_tm,_134417_d);
}



inline void _10e97fcf0_ScopeChecker::_method_check_common_match(jule::Ref<_11ce1fd50_MatchCase> _136742_m) {
	jule::Ref<_10ee8a260_Data> _136817_d = jule::new_ref<_10ee8a260_Data>();
	if ((!jule::real(_136742_m->_field_expr))) {
		_136817_d=jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_10f4ed830_new_bool(true)));
		_136817_d->_field_model=jule::Any(_136817_d->_field_constant);
	} else {
		_136817_d=this->self->_field_s->_method_eval(_136742_m->_field_expr,this->self);
		if ((!jule::real(_136817_d))) {
			return;
		}
	}
	jule::Ref<_10e97fcf0_Match> _138217_mc = jule::new_struct<_10e97fcf0_Match>(new( std::nothrow ) _10e97fcf0_Match(_136817_d->_field_model,jule::Bool(),jule::Slice<jule::Ref<_10e97fcf0_Case>>(),jule::Ref<_10e97fcf0_Case>()));
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_138217_mc));
	if (jule::real(_136742_m->_field_default)) {
		_138217_mc->_field_default=this->self->_method_check_default(_138217_mc,_136742_m->_field_default);
	}
	this->self->_method_check_cases(_136742_m,_138217_mc,_136817_d);
}



inline void _10e97fcf0_ScopeChecker::_method_check_match(jule::Ref<_11ce1fd50_MatchCase> _139435_m) {
	if (_139435_m->_field_type_match) {
		this->self->_method_check_type_match(_139435_m);
		return;
	}
	this->self->_method_check_common_match(_139435_m);
}



inline void _10e97fcf0_ScopeChecker::_method_check_fall(jule::Ref<_11ce1fd50_FallSt> _140229_f) {
	if ((((*this)._field_cse == 0LL) || (static_cast<jule::Int>((static_cast<jule::Int>((*this)._field_scope->_field_stmts._method_len()) + 1LL)) < static_cast<jule::Int>((*this)._field_scope->_field_stmts._method_len())))) {
		(*this)._field_s->_method_push_err(_140229_f->_field_token,jule::Str("fallthrough_wrong_use", 21),jule::Slice<jule::Any>({}));
		return;
	}
	_10e97fcf0_Case* _140817__case = ((_10e97fcf0_Case*)((*this)._field_cse));
	if ((!jule::real(_140817__case->_field_next))) {
		(*this)._field_s->_method_push_err(_140229_f->_field_token,jule::Str("fallthrough_into_final_case", 27),jule::Slice<jule::Any>({}));
		return;
	}
	(*this)._field_scope->_field_stmts._method_push(jule::Any(jule::new_struct<_10e97fcf0_FallSt>(new( std::nothrow ) _10e97fcf0_FallSt(static_cast<jule::Uintptr>(((jule::Uintptr)((_140817__case->_field_next).alloc)))))));
}



inline jule::Ref<_10e97fcf0_BreakSt> _10e97fcf0_ScopeChecker::_method_check_break_with_label(jule::Ref<_11ce1fd50_BreakSt> _141942_b) {
	jule::Ref<_10e97fcf0_BreakSt> _142017_brk = this->self->_method_check_plain_break(_141942_b);
	if ((!jule::real(_142017_brk))) {
		return jule::new_ref<_10e97fcf0_BreakSt>();
	}
	_142017_brk->_field_it=0LL;
	_142017_brk->_field_mtch=0LL;
	jule::Ref<_10e97fcf0_ScopeLabel> _143017_label = _10e97fcf0_find_label_parent(_141942_b->_field_label._field_kind,this->self->_field_parent);
	if ((!jule::real(_143017_label))) {
		this->self->_field_s->_method_push_err(_141942_b->_field_label,jule::Str("label_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_141942_b->_field_label._field_kind)}));
		return jule::new_ref<_10e97fcf0_BreakSt>();
	}
	_143017_label->_field_used=true;
	if (((_143017_label->_field_pos + 1LL) >= static_cast<jule::Int>(_143017_label->_field_scope->_field_scope->_field_stmts._method_len()))) {
		this->self->_field_s->_method_push_err(_141942_b->_field_label,jule::Str("invalid_label", 13),jule::Slice<jule::Any>({}));
		return jule::new_ref<_10e97fcf0_BreakSt>();
	}
	jule::Int _144313_i = (_143017_label->_field_pos + 1LL);
	if ((_144313_i >= static_cast<jule::Int>(_143017_label->_field_scope->_field_scope->_field_stmts._method_len()))) {
		this->self->_field_s->_method_push_err(_141942_b->_field_label,jule::Str("invalid_label", 13),jule::Slice<jule::Any>({}));
	} else {
		jule::Any _144721_st = _143017_label->_field_scope->_field_scope->_field_stmts._method_at(_144313_i);
		{
			auto _match_expr{ _144721_st };
			if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_InfIter>>())) { goto _case_end_4709759520; }
			_case_begin_4709759520:;
			{
				_142017_brk->_field_it=((jule::Uintptr)((_144721_st.operator jule::Ref<_10e97fcf0_InfIter>()).alloc));
			}
			goto _match_end_4709758048;
			_case_end_4709759520:;
			if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_RangeIter>>())) { goto _case_end_4709758464; }
			_case_begin_4709758464:;
			{
				_142017_brk->_field_it=((jule::Uintptr)((_144721_st.operator jule::Ref<_10e97fcf0_RangeIter>()).alloc));
			}
			goto _match_end_4709758048;
			_case_end_4709758464:;
			if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_WhileIter>>())) { goto _case_end_4709758576; }
			_case_begin_4709758576:;
			{
				_142017_brk->_field_it=((jule::Uintptr)((_144721_st.operator jule::Ref<_10e97fcf0_WhileIter>()).alloc));
			}
			goto _match_end_4709758048;
			_case_end_4709758576:;
			if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_Match>>())) { goto _case_end_4709758688; }
			_case_begin_4709758688:;
			{
				_142017_brk->_field_mtch=((jule::Uintptr)((_144721_st.operator jule::Ref<_10e97fcf0_Match>()).alloc));
			}
			goto _match_end_4709758048;
			_case_end_4709758688:;
			_case_begin_4709758160:;
			{
				this->self->_field_s->_method_push_err(_141942_b->_field_label,jule::Str("invalid_label", 13),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4709758048;
			_case_end_4709758160:;
			_match_end_4709758048:;
		}
	}
	if ((_142017_brk->_field_it != 0LL)) {
		if ((!this->self->_method_check_valid_break_label(_142017_brk->_field_it))) {
			this->self->_field_s->_method_push_err(_141942_b->_field_label,jule::Str("invalid_label", 13),jule::Slice<jule::Any>({}));
		}
	}
	if ((_142017_brk->_field_mtch != 0LL)) {
		if ((!this->self->_method_check_valid_break_label(_142017_brk->_field_mtch))) {
			this->self->_field_s->_method_push_err(_141942_b->_field_label,jule::Str("invalid_label", 13),jule::Slice<jule::Any>({}));
		}
	}
	return _142017_brk;
}



inline jule::Ref<_10e97fcf0_BreakSt> _10e97fcf0_ScopeChecker::_method_check_plain_break(jule::Ref<_11ce1fd50_BreakSt> _147237_b) {
	jule::Ref<_10e97fcf0_ScopeChecker> _147317_scope = this->self;
	_julec_label_iter:;
	{
		auto _match_expr{ true };
		if (!(((((_147317_scope->_field_it == 0LL) && (_147317_scope->_field_cse == 0LL)) && jule::real(_147317_scope->_field_parent)) && (!jule::real(_147317_scope->_field_owner))) == _match_expr)) { goto _case_end_4709782560; }
		_case_begin_4709782560:;
		{
			_147317_scope=_147317_scope->_field_parent;
			goto _julec_label_iter;
		}
		goto _match_end_4709782272;
		_case_end_4709782560:;
		if (!((_147317_scope->_field_it != 0LL) == _match_expr)) { goto _case_end_4709782672; }
		_case_begin_4709782672:;
		{
			return jule::new_struct<_10e97fcf0_BreakSt>(new( std::nothrow ) _10e97fcf0_BreakSt(_147317_scope->_field_it,jule::Uintptr()));
		}
		goto _match_end_4709782272;
		_case_end_4709782672:;
		if (!((_147317_scope->_field_cse != 0LL) == _match_expr)) { goto _case_end_4709782784; }
		_case_begin_4709782784:;
		{
			return jule::new_struct<_10e97fcf0_BreakSt>(new( std::nothrow ) _10e97fcf0_BreakSt(jule::Uintptr(),static_cast<jule::Uintptr>(((jule::Uintptr)((((_10e97fcf0_Case*)(_147317_scope->_field_cse))->_field_owner).alloc)))));
		}
		goto _match_end_4709782272;
		_case_end_4709782784:;
		_match_end_4709782272:;
	}
	this->self->_field_s->_method_push_err(_147237_b->_field_token,jule::Str("break_at_out_of_valid_scope", 27),jule::Slice<jule::Any>({}));
	return jule::new_ref<_10e97fcf0_BreakSt>();
}



inline void _10e97fcf0_ScopeChecker::_method_check_break(jule::Ref<_11ce1fd50_BreakSt> _149131_b) {
	if ((_149131_b->_field_label._field_id != 0LLU)) {
		jule::Ref<_10e97fcf0_BreakSt> _149321_brk = this->self->_method_check_break_with_label(_149131_b);
		this->self->_field_scope->_field_stmts._method_push(jule::Any(_149321_brk));
		return;
	}
	jule::Ref<_10e97fcf0_BreakSt> _149817_brk = this->self->_method_check_plain_break(_149131_b);
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_149817_brk));
}



inline void _10e97fcf0_ScopeChecker::_method_check_ret(jule::Ref<_11ce1fd50_RetSt> _150233_r) {
	jule::Ref<_10e97fcf0_RetSt> _150317_rt = jule::new_struct<_10e97fcf0_RetSt>(new( std::nothrow ) _10e97fcf0_RetSt());
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_150317_rt));
	jule::Ref<_10ee8a260_Data> _150617_d = jule::new_ref<_10ee8a260_Data>();
	if (jule::real(_150233_r->_field_expr)) {
		_150617_d=this->self->_field_s->_method_eval(_150233_r->_field_expr,this->self);
		if ((!jule::real(_150617_d))) {
			return;
		}
	}
	jule::Ref<_10eb9c740_RetTypeChecker> _151517_rtc = jule::new_struct<_10eb9c740_RetTypeChecker>(new( std::nothrow ) _10eb9c740_RetTypeChecker(this->self,this->self->_method_get_root()->_field_owner,jule::Slice<jule::Ref<_10eeb79b0_TypeKind>>(),jule::Slice<jule::Ref<_10ee8a260_Data>>(),jule::Slice<jule::Ref<_10ebc2ad0_Var>>(),_150233_r->_field_token));
	jule::Bool _152013_ok = _151517_rtc->_method_check(_150617_d);
	if ((!_152013_ok)) {
		return;
	}
	if (((!jule::real(_150617_d)) && (static_cast<jule::I64>(_151517_rtc->_field_vars.len()) == 0LL))) {
		return;
	}
	_150317_rt->_field_vars=_151517_rtc->_field_vars;
	if (jule::real(_150617_d)) {
		_150317_rt->_field_expr=_150617_d->_field_model;
	}
}



inline void _10e97fcf0_ScopeChecker::_method_check_node(jule::Any _153634_node) {
	{
		auto _match_expr{ _153634_node };
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_Comment>>())) { goto _case_end_4709837024; }
		_case_begin_4709837024:;
		{
			goto _match_end_4709836224;
		}
		goto _match_end_4709836224;
		_case_end_4709837024:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_ScopeTree>>())) { goto _case_end_4709837440; }
		_case_begin_4709837440:;
		{
			this->self->_method_check_anon_scope(_153634_node.operator jule::Ref<_11ce1fd50_ScopeTree>());
		}
		goto _match_end_4709836224;
		_case_end_4709837440:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_VarDecl>>())) { goto _case_end_4709837552; }
		_case_begin_4709837552:;
		{
			this->self->_method_check_var_decl(_153634_node.operator jule::Ref<_11ce1fd50_VarDecl>());
		}
		goto _match_end_4709836224;
		_case_end_4709837552:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_TypeAliasDecl>>())) { goto _case_end_4709837664; }
		_case_begin_4709837664:;
		{
			this->self->_method_check_type_alias_decl(_153634_node.operator jule::Ref<_11ce1fd50_TypeAliasDecl>());
		}
		goto _match_end_4709836224;
		_case_end_4709837664:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_Expr>>())) { goto _case_end_4709836384; }
		_case_begin_4709836384:;
		{
			this->self->_method_check_expr(_153634_node.operator jule::Ref<_11ce1fd50_Expr>());
		}
		goto _match_end_4709836224;
		_case_end_4709836384:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_Conditional>>())) { goto _case_end_4709836496; }
		_case_begin_4709836496:;
		{
			this->self->_method_check_conditional(_153634_node.operator jule::Ref<_11ce1fd50_Conditional>());
		}
		goto _match_end_4709836224;
		_case_end_4709836496:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_Iter>>())) { goto _case_end_4709836608; }
		_case_begin_4709836608:;
		{
			this->self->_method_check_iter(_153634_node.operator jule::Ref<_11ce1fd50_Iter>());
		}
		goto _match_end_4709836224;
		_case_end_4709836608:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_ContSt>>())) { goto _case_end_4709838608; }
		_case_begin_4709838608:;
		{
			this->self->_method_check_cont(_153634_node.operator jule::Ref<_11ce1fd50_ContSt>());
		}
		goto _match_end_4709836224;
		_case_end_4709838608:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_LabelSt>>())) { goto _case_end_4709838720; }
		_case_begin_4709838720:;
		{
			this->self->_method_check_label(_153634_node.operator jule::Ref<_11ce1fd50_LabelSt>());
		}
		goto _match_end_4709836224;
		_case_end_4709838720:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_GotoSt>>())) { goto _case_end_4709838832; }
		_case_begin_4709838832:;
		{
			this->self->_method_push_goto(_153634_node.operator jule::Ref<_11ce1fd50_GotoSt>());
		}
		goto _match_end_4709836224;
		_case_end_4709838832:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_AssignSt>>())) { goto _case_end_4709838944; }
		_case_begin_4709838944:;
		{
			this->self->_method_check_assign_st(_153634_node.operator jule::Ref<_11ce1fd50_AssignSt>());
		}
		goto _match_end_4709836224;
		_case_end_4709838944:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_MatchCase>>())) { goto _case_end_4709839056; }
		_case_begin_4709839056:;
		{
			this->self->_method_check_match(_153634_node.operator jule::Ref<_11ce1fd50_MatchCase>());
		}
		goto _match_end_4709836224;
		_case_end_4709839056:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_FallSt>>())) { goto _case_end_4709839168; }
		_case_begin_4709839168:;
		{
			this->self->_method_check_fall(_153634_node.operator jule::Ref<_11ce1fd50_FallSt>());
		}
		goto _match_end_4709836224;
		_case_end_4709839168:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_BreakSt>>())) { goto _case_end_4709839280; }
		_case_begin_4709839280:;
		{
			this->self->_method_check_break(_153634_node.operator jule::Ref<_11ce1fd50_BreakSt>());
		}
		goto _match_end_4709836224;
		_case_end_4709839280:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_RetSt>>())) { goto _case_end_4709839392; }
		_case_begin_4709839392:;
		{
			this->self->_method_check_ret(_153634_node.operator jule::Ref<_11ce1fd50_RetSt>());
		}
		goto _match_end_4709836224;
		_case_end_4709839392:;
		_case_begin_4709835584:;
		{
			jule::outln(jule::Str("error <unimplemented scope node>", 32));
		}
		goto _match_end_4709836224;
		_case_end_4709835584:;
		_match_end_4709836224:;
	}
}



inline void _10e97fcf0_ScopeChecker::_method_check_tree(void) {
	this->self->_field_i=0LL;
	_iter_begin_4709874784:;
	if (!((this->self->_field_i < static_cast<jule::I64>(this->self->_field_tree->_field_stmts.len())))) { goto _iter_end_4709874784; }
	{
		this->self->_method_check_node(this->self->_field_tree->_field_stmts[static_cast<jule::Int>(this->self->_field_i)]);
	}
	_iter_next_4709874784:;
	(this->self->_field_i)++;
	goto _iter_begin_4709874784;
	_iter_end_4709874784:;
}



inline void _10e97fcf0_ScopeChecker::_method_check_same_scope_goto(jule::Ref<_10e97fcf0_ScopeGoto> _156440_gt,jule::Ref<_10e97fcf0_ScopeLabel> _156460_label) {
	if ((_156460_label->_field_pos < _156440_gt->_field_pos)) {
		return;
	}
	jule::Int _156917_i = _156460_label->_field_pos;
	_iter_begin_4709885552:;
	if (!((_156917_i > _156440_gt->_field_pos))) { goto _iter_end_4709885552; }
	{
		jule::Any _157117_s = _156460_label->_field_scope->_field_scope->_field_stmts._method_at(_156917_i);
		if (_10e97fcf0_st_is_def(_157117_s)) {
			(*this)._field_s->_method_push_err(_156440_gt->_field_gt->_field_token,jule::Str("goto_jumps_declarations", 23),jule::Slice<jule::Any>({jule::Any(_156440_gt->_field_gt->_field_label._field_kind)}));
			goto _iter_end_4709885552;
		}
	}
	_iter_next_4709885552:;
	(_156917_i)--;
	goto _iter_begin_4709885552;
	_iter_end_4709885552:;
}



inline jule::Bool _10e97fcf0_ScopeChecker::_method_check_label_parents(jule::Ref<_10e97fcf0_ScopeGoto> _157938_gt,jule::Ref<_10e97fcf0_ScopeLabel> _157958_label) {
	jule::Ref<_10e97fcf0_ScopeChecker> _158017_scope = _157958_label->_field_scope;
	_julec_label_parent_scopes:;
	if ((jule::real(_158017_scope->_field_parent) && ((_158017_scope->_field_parent).alloc != (_157938_gt->_field_scope).alloc))) {
		_158017_scope=_158017_scope->_field_parent;
		jule::Int _158521_i = 0LL;
		_iter_begin_4709900976:;
		if (!((_158521_i < static_cast<jule::Int>(_158017_scope->_field_scope->_field_stmts._method_len())))) { goto _iter_end_4709900976; }
		{
			{
				auto _match_expr{ true };
				if (!((_158521_i >= _157958_label->_field_pos) == _match_expr)) { goto _case_end_4709903696; }
				_case_begin_4709903696:;
				{
					return true;
				}
				goto _match_end_4709903392;
				_case_end_4709903696:;
				if (!(_10e97fcf0_st_is_def(_158017_scope->_field_scope->_field_stmts._method_at(_158521_i)) == _match_expr)) { goto _case_end_4709903808; }
				_case_begin_4709903808:;
				{
					(*this)._field_s->_method_push_err(_157938_gt->_field_gt->_field_token,jule::Str("goto_jumps_declarations", 23),jule::Slice<jule::Any>({jule::Any(_157938_gt->_field_gt->_field_label._field_kind)}));
					return false;
				}
				goto _match_end_4709903392;
				_case_end_4709903808:;
				_match_end_4709903392:;
			}
		}
		_iter_next_4709900976:;
		(_158521_i)++;
		goto _iter_begin_4709900976;
		_iter_end_4709900976:;
		goto _julec_label_parent_scopes;
	}
	return true;
}



inline void _10e97fcf0_ScopeChecker::_method_check_goto_scope(jule::Ref<_10e97fcf0_ScopeGoto> _160339_gt,jule::Ref<_10e97fcf0_ScopeLabel> _160355_label) {
	jule::Int _160417_i = _160339_gt->_field_pos;
	_iter_begin_4709919552:;
	if (!((_160417_i < static_cast<jule::Int>(_160339_gt->_field_scope->_field_scope->_field_stmts._method_len())))) { goto _iter_end_4709919552; }
	{
		{
			auto _match_expr{ true };
			if (!((_160417_i >= _160355_label->_field_pos) == _match_expr)) { goto _case_end_4709921360; }
			_case_begin_4709921360:;
			{
				return;
			}
			goto _match_end_4709921056;
			_case_end_4709921360:;
			if (!(_10e97fcf0_st_is_def(_160339_gt->_field_scope->_field_scope->_field_stmts._method_at(_160417_i)) == _match_expr)) { goto _case_end_4709921472; }
			_case_begin_4709921472:;
			{
				(*this)._field_s->_method_push_err(_160339_gt->_field_gt->_field_token,jule::Str("goto_jumps_declarations", 23),jule::Slice<jule::Any>({jule::Any(_160339_gt->_field_gt->_field_label._field_kind)}));
				return;
			}
			goto _match_end_4709921056;
			_case_end_4709921472:;
			_match_end_4709921056:;
		}
	}
	_iter_next_4709919552:;
	(_160417_i)++;
	goto _iter_begin_4709919552;
	_iter_end_4709919552:;
}



inline void _10e97fcf0_ScopeChecker::_method_check_diff_scope_goto(jule::Ref<_10e97fcf0_ScopeGoto> _161744_gt,jule::Ref<_10e97fcf0_ScopeLabel> _161764_label) {
	{
		auto _match_expr{ true };
		if (!(((_161764_label->_field_scope->_field_child_index > 0LL) && (_161744_gt->_field_scope->_field_child_index == 0LL)) == _match_expr)) { goto _case_end_4709934016; }
		_case_begin_4709934016:;
		{
			if ((!(*this)._method_check_label_parents(_161744_gt,_161764_label))) {
				return;
			}
		}
		goto _match_end_4709933696;
		_case_end_4709934016:;
		if (!((_161764_label->_field_scope->_field_child_index < _161744_gt->_field_scope->_field_child_index) == _match_expr)) { goto _case_end_4709934128; }
		_case_begin_4709934128:;
		{
			return;
		}
		goto _match_end_4709933696;
		_case_end_4709934128:;
		_match_end_4709933696:;
	}
	jule::Ref<_10e97fcf0_ScopeChecker> _162817_scope = _161764_label->_field_scope;
	jule::Int _162917_i = (_161764_label->_field_pos - 1LL);
	_iter_begin_4709942272:;
	if (!((_162917_i >= 0LL))) { goto _iter_end_4709942272; }
	{
		jule::Any _163117_s = _162817_scope->_field_scope->_field_stmts._method_at(_162917_i);
		{
			auto _match_expr{ _163117_s };
			if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_Scope>>())) { goto _case_end_4709946624; }
			_case_begin_4709946624:;
			{
				if ((_162917_i <= _161744_gt->_field_pos)) {
					return;
				}
			}
			goto _match_end_4709946096;
			_case_end_4709946624:;
			_match_end_4709946096:;
		}
		if (_10e97fcf0_st_is_def(_163117_s)) {
			(*this)._field_s->_method_push_err(_161744_gt->_field_gt->_field_token,jule::Str("goto_jumps_declarations", 23),jule::Slice<jule::Any>({jule::Any(_161744_gt->_field_gt->_field_label._field_kind)}));
			goto _iter_end_4709942272;
		}
	}
	_iter_next_4709942272:;
	(_162917_i)--;
	goto _iter_begin_4709942272;
	_iter_end_4709942272:;
	if ((jule::real(_162817_scope->_field_parent) && ((_162817_scope->_field_parent).alloc != (_161744_gt->_field_scope).alloc))) {
		(*this)._method_check_label_parents(_161744_gt,_161764_label);
	} else {
		(*this)._method_check_goto_scope(_161744_gt,_161764_label);
	}
}



inline void _10e97fcf0_ScopeChecker::_method_check_goto(jule::Ref<_10e97fcf0_ScopeGoto> _165333_gt,jule::Ref<_10e97fcf0_ScopeLabel> _165353_label) {
	{
		auto _match_expr{ true };
		if (!(((_165333_gt->_field_scope).alloc == (_165353_label->_field_scope).alloc) == _match_expr)) { goto _case_end_4709961104; }
		_case_begin_4709961104:;
		{
			(*this)._method_check_same_scope_goto(_165333_gt,_165353_label);
		}
		goto _match_end_4709960784;
		_case_end_4709961104:;
		if (!((_165353_label->_field_scope->_field_child_index > 0LL) == _match_expr)) { goto _case_end_4709961216; }
		_case_begin_4709961216:;
		{
			(*this)._method_check_diff_scope_goto(_165333_gt,_165353_label);
		}
		goto _match_end_4709960784;
		_case_end_4709961216:;
		_match_end_4709960784:;
	}
}



inline void _10e97fcf0_ScopeChecker::_method_check_gotos(void) {
	{
		auto &__julec_range_expr = (*this)._field_gotos.get();
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e97fcf0_ScopeGoto> _10e97fcf0_gt{jule::Ref<_10e97fcf0_ScopeGoto>()};_10e97fcf0_gt = *__julec_range_begin;
			_iter_begin_4709964112:;
			{
				jule::Ref<_10e97fcf0_ScopeLabel> _166521_label = (*this)._method_find_label_all(_10e97fcf0_gt->_field_gt->_field_label._field_kind);
				if ((!jule::real(_166521_label))) {
					(*this)._field_s->_method_push_err(_10e97fcf0_gt->_field_gt->_field_token,jule::Str("label_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_10e97fcf0_gt->_field_gt->_field_label._field_kind)}));
					goto _iter_next_4709964112;
				}
				_166521_label->_field_used=true;
				(*this)._method_check_goto(_10e97fcf0_gt,_166521_label);
			}
			_iter_next_4709964112:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e97fcf0_gt = *__julec_range_begin; goto _iter_begin_4709964112; }
			_iter_end_4709964112:;
		}
	}
}



inline void _10e97fcf0_ScopeChecker::_method_check_labels(void) {
	{
		auto &__julec_range_expr = (*this)._field_labels.get();
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e97fcf0_ScopeLabel> _10e97fcf0_l{jule::Ref<_10e97fcf0_ScopeLabel>()};_10e97fcf0_l = *__julec_range_begin;
			_iter_begin_4709981344:;
			{
				if ((!_10e97fcf0_l->_field_used)) {
					(*this)._field_s->_method_push_err(_10e97fcf0_l->_field_token,jule::Str("declared_but_not_used", 21),jule::Slice<jule::Any>({jule::Any(_10e97fcf0_l->_field_label->_field_ident)}));
				}
			}
			_iter_next_4709981344:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e97fcf0_l = *__julec_range_begin; goto _iter_begin_4709981344; }
			_iter_end_4709981344:;
		}
	}
}



inline void _10e97fcf0_ScopeChecker::_method_check_vars(void) {
	jule::Int _168517_i = 0LL;
	_iter_begin_4709989088:;
	if (!((_168517_i < static_cast<jule::Int>((*this)._field_table->_field_vars._method_len())))) { goto _iter_end_4709989088; }
	{
		jule::Ref<_10ebc2ad0_Var> _168717_v = (*this)._field_table->_field_vars._method_at(_168517_i);
		if (((((!_168717_v->_field_used) && (!_11ce22a00_is_ignore_ident(_168717_v->_field_ident))) && (!_11ce22a00_is_anon_ident(_168717_v->_field_ident))) && (_168717_v->_field_ident != jule::Str("self", 4)))) {
			(*this)._field_s->_method_push_err(_168717_v->_field_token,jule::Str("declared_but_not_used", 21),jule::Slice<jule::Any>({jule::Any(_168717_v->_field_ident)}));
		}
	}
	_iter_next_4709989088:;
	(_168517_i)++;
	goto _iter_begin_4709989088;
	_iter_end_4709989088:;
}



inline void _10e97fcf0_ScopeChecker::_method_check_aliases(void) {
	jule::Int _169517_i = 0LL;
	_iter_begin_4710002464:;
	if (!((_169517_i < static_cast<jule::Int>((*this)._field_table->_field_type_aliases._method_len())))) { goto _iter_end_4710002464; }
	{
		jule::Ref<_10eeb79b0_TypeAlias> _169717_a = (*this)._field_table->_field_type_aliases._method_at(_169517_i);
		if ((((!_169717_a->_field_used) && (!_11ce22a00_is_ignore_ident(_169717_a->_field_ident))) && (!_11ce22a00_is_anon_ident(_169717_a->_field_ident)))) {
			(*this)._field_s->_method_push_err(_169717_a->_field_token,jule::Str("declared_but_not_used", 21),jule::Slice<jule::Any>({jule::Any(_169717_a->_field_ident)}));
		}
	}
	_iter_next_4710002464:;
	(_169517_i)++;
	goto _iter_begin_4710002464;
	_iter_end_4710002464:;
}



inline void _10e97fcf0_ScopeChecker::_method_check(jule::Ref<_11ce1fd50_ScopeTree> _170529_tree,jule::Ref<_10e97fcf0_Scope> _170551_s) {
	_170551_s->_field_deferred=_170529_tree->_field_deferred;
	_170551_s->_field_unsafety=_170529_tree->_field_unsafety;
	this->self->_field_tree=_170529_tree;
	this->self->_field_scope=_170551_s;
	this->self->_method_check_tree();
	this->self->_method_check_vars();
	this->self->_method_check_aliases();
	if (this->self->_method_is_root()) {
		this->self->_method_check_gotos();
		this->self->_method_check_labels();
	}
}



inline jule::Ref<_10e97fcf0_ScopeChecker> _10e97fcf0_ScopeChecker::_method_new_child_checker(void) {
	jule::Ref<_10e97fcf0_ScopeChecker> _172417_base = _10e97fcf0_new_scope_checker_base(this->self->_field_s,jule::new_ref<_10e56a140_FnIns>());
	_172417_base->_field_parent=this->self;
	_172417_base->_field_labels=this->self->_field_labels;
	_172417_base->_field_gotos=this->self->_field_gotos;
	_172417_base->_field_child_index=(this->self->_field_child_index + 1LL);
	return _172417_base;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e97fcf0_ScopeChecker &_Src) {
	_Stream << "ScopeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "child_index:" << _Src._field_child_index << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9ca470_BinopExprModel &_Src) {
	_Stream << "BinopExprModel{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9ca470_UnaryExprModel &_Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9ca470_GetRefPtrExprModel &_Src) {
	_Stream << "GetRefPtrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9ca470_StructArgExprModel &_Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9ca470_StructLitExprModel &_Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "strct:" << _Src._field_strct << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9ca470_AllocStructLitExprModel &_Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "lit:" << _Src._field_lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9ca470_CastingExprModel &_Src) {
	_Stream << "CastingExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9ca470_FnCallExprModel &_Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "is_co:" << _Src._field_is_co << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9ca470_SliceExprModel &_Src) {
	_Stream << "SliceExprModel{";
	_Stream << "elem_kind:" << _Src._field_elem_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9ca470_IndexigExprModel &_Src) {
	_Stream << "IndexigExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9ca470_AnonFnExprModel &_Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "global:" << _Src._field_global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9ca470_KeyValPairExprModel &_Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9ca470_MapExprModel &_Src) {
	_Stream << "MapExprModel{";
	_Stream << "key_kind:" << _Src._field_key_kind << ", ";
	_Stream << "val_kind:" << _Src._field_val_kind << ", ";
	_Stream << "entries:" << _Src._field_entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9ca470_SlicingExprModel &_Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9ca470_TraitSubIdentExprModel &_Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9ca470_StructSubIdentExprModel &_Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "field:" << _Src._field_field;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9ca470_StructStaticIdentExprModel &_Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "structure:" << _Src._field_structure << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9ca470_ArrayExprModel &_Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9ca470_CommonIdentExprModel &_Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9ca470_CommonSubIdentExprModel &_Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9ca470_TupleExprModel &_Src) {
	_Stream << "TupleExprModel{";
	_Stream << "datas:" << _Src._field_datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9ca470_BuiltinOutCallExprModel &_Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9ca470_BuiltinOutlnCallExprModel &_Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9ca470_BuiltinCloneCallExprModel &_Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9ca470_BuiltinNewCallExprModel &_Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "init:" << _Src._field_init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9ca470_BuiltinRealCallExprModel &_Src) {
	_Stream << "BuiltinRealCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9ca470_BuiltinDropCallExprModel &_Src) {
	_Stream << "BuiltinDropCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9ca470_BuiltinPanicCallExprModel &_Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9ca470_BuiltinMakeCallExprModel &_Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "len:" << _Src._field_len << ", ";
	_Stream << "cap:" << _Src._field_cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9ca470_BuiltinErrorTraitSubIdentExprModel &_Src) {
	_Stream << "BuiltinErrorTraitSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9ca470_SizeofExprModel &_Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9ca470_AlignofExprModel &_Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9ca470_RuneExprModel &_Src) {
	_Stream << "RuneExprModel{";
	_Stream << "code:" << _Src._field_code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9ca470_ExplicitDerefExprModel &_Src) {
	_Stream << "ExplicitDerefExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_10e9b6a10_ImportInfo> _10e9b6a10_Package::_method_find_package(jule::Str ) {
	return jule::new_ref<_10e9b6a10_ImportInfo>();
}



inline jule::Ref<_10e9b6a10_ImportInfo> _10e9b6a10_Package::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_10e9b6a10_ImportInfo>)> ) {
	return jule::new_ref<_10e9b6a10_ImportInfo>();
}



inline jule::Ref<_10ebc2ad0_Var> _10e9b6a10_Package::_method_find_var(jule::Str _26327_ident,jule::Bool _26339_cpp_linked) {
	return _10e9b6a10_find_var_in_package((*this)._field_files,_26327_ident,_26339_cpp_linked);
}



inline jule::Ref<_10eeb79b0_TypeAlias> _10e9b6a10_Package::_method_find_type_alias(jule::Str _26934_ident,jule::Bool _26946_cpp_linked) {
	return _10e9b6a10_find_type_alias_in_package((*this)._field_files,_26934_ident,_26946_cpp_linked);
}



inline jule::Ref<_10e3fc8f0_Struct> _10e9b6a10_Package::_method_find_struct(jule::Str _27530_ident,jule::Bool _27542_cpp_linked) {
	return _10e9b6a10_find_struct_in_package((*this)._field_files,_27530_ident,_27542_cpp_linked);
}



inline jule::Ref<_10e56a140_Fn> _10e9b6a10_Package::_method_find_fn(jule::Str _28126_ident,jule::Bool _28138_cpp_linked) {
	return _10e9b6a10_find_fn_in_package((*this)._field_files,_28126_ident,_28138_cpp_linked);
}



inline jule::Ref<_10e3d6eb0_Trait> _10e9b6a10_Package::_method_find_trait(jule::Str _28729_ident) {
	return _10e9b6a10_find_trait_in_package((*this)._field_files,_28729_ident);
}



inline jule::Ref<_10e975f00_Enum> _10e9b6a10_Package::_method_find_enum(jule::Str _29328_ident) {
	return _10e9b6a10_find_enum_in_package((*this)._field_files,_29328_ident);
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9b6a10_Package &_Src) {
	_Stream << "Package{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_10e9b6a10_ImportInfo> _10e9847f0_Sema::_method_find_package(jule::Str _29231_ident) {
	return (*this)._field_file->_method_find_package(_29231_ident);
}



inline jule::Ref<_10e9b6a10_ImportInfo> _10e9847f0_Sema::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_10e9b6a10_ImportInfo>)> _30233_selector) {
	return (*this)._field_file->_method_select_package(_30233_selector);
}



inline jule::Ref<_10ebc2ad0_Var> _10e9847f0_Sema::_method_find_var(jule::Str _31227_ident,jule::Bool _31239_cpp_linked) {
	jule::Ref<_10ebc2ad0_Var> _31417_v = _10e9b6a10_find_var_in_package((*this)._field_files,_31227_ident,_31239_cpp_linked);
	if (jule::real(_31417_v)) {
		return _31417_v;
	}
	jule::Int _32017_i = 0LL;
	_iter_begin_4710132496:;
	if (!((_32017_i < static_cast<jule::Int>((*this)._field_file->_field_imports._method_len())))) { goto _iter_end_4710132496; }
	{
		jule::Ref<_10e9b6a10_ImportInfo> _32221_imp = (*this)._field_file->_field_imports._method_at(_32017_i);
		if ((!_10e9847f0_imp_is_lookupable(_32221_imp,_31227_ident))) {
			goto _iter_next_4710132496;
		}
		jule::Ref<_10ebc2ad0_Var> _32621_v = _32221_imp->_method_find_var(_31227_ident,_31239_cpp_linked);
		if ((jule::real(_32621_v) && (*this)._method_is_accessible_define(_32621_v->_field_public,_32621_v->_field_token))) {
			return _32621_v;
		}
	}
	_iter_next_4710132496:;
	(_32017_i)++;
	goto _iter_begin_4710132496;
	_iter_end_4710132496:;
	return jule::new_ref<_10ebc2ad0_Var>();
}



inline jule::Ref<_10eeb79b0_TypeAlias> _10e9847f0_Sema::_method_find_type_alias(jule::Str _34134_ident,jule::Bool _34146_cpp_linked) {
	jule::Ref<_10eeb79b0_TypeAlias> _34317_ta = _10e9b6a10_find_type_alias_in_package((*this)._field_files,_34134_ident,_34146_cpp_linked);
	if (jule::real(_34317_ta)) {
		return _34317_ta;
	}
	jule::Int _34917_i = 0LL;
	_iter_begin_4710154272:;
	if (!((_34917_i < static_cast<jule::Int>((*this)._field_file->_field_imports._method_len())))) { goto _iter_end_4710154272; }
	{
		jule::Ref<_10e9b6a10_ImportInfo> _35121_imp = (*this)._field_file->_field_imports._method_at(_34917_i);
		if ((!_10e9847f0_imp_is_lookupable(_35121_imp,_34134_ident))) {
			goto _iter_next_4710154272;
		}
		jule::Ref<_10eeb79b0_TypeAlias> _35521_ta = _35121_imp->_method_find_type_alias(_34134_ident,_34146_cpp_linked);
		if ((jule::real(_35521_ta) && (*this)._method_is_accessible_define(_35521_ta->_field_public,_35521_ta->_field_token))) {
			return _35521_ta;
		}
	}
	_iter_next_4710154272:;
	(_34917_i)++;
	goto _iter_begin_4710154272;
	_iter_end_4710154272:;
	return jule::new_ref<_10eeb79b0_TypeAlias>();
}



inline jule::Ref<_10e3fc8f0_Struct> _10e9847f0_Sema::_method_find_struct(jule::Str _37030_ident,jule::Bool _37042_cpp_linked) {
	jule::Ref<_10e3fc8f0_Struct> _37217_strct = _10e9b6a10_find_struct_in_package((*this)._field_files,_37030_ident,_37042_cpp_linked);
	if (jule::real(_37217_strct)) {
		return _37217_strct;
	}
	jule::Int _37817_i = 0LL;
	_iter_begin_4710171632:;
	if (!((_37817_i < static_cast<jule::Int>((*this)._field_file->_field_imports._method_len())))) { goto _iter_end_4710171632; }
	{
		jule::Ref<_10e9b6a10_ImportInfo> _38021_imp = (*this)._field_file->_field_imports._method_at(_37817_i);
		if ((!_10e9847f0_imp_is_lookupable(_38021_imp,_37030_ident))) {
			goto _iter_next_4710171632;
		}
		jule::Ref<_10e3fc8f0_Struct> _38421_strct = _38021_imp->_method_find_struct(_37030_ident,_37042_cpp_linked);
		if ((jule::real(_38421_strct) && (*this)._method_is_accessible_define(_38421_strct->_field_public,_38421_strct->_field_token))) {
			return _38421_strct;
		}
	}
	_iter_next_4710171632:;
	(_37817_i)++;
	goto _iter_begin_4710171632;
	_iter_end_4710171632:;
	return jule::new_ref<_10e3fc8f0_Struct>();
}



inline jule::Ref<_10e56a140_Fn> _10e9847f0_Sema::_method_find_fn(jule::Str _39926_ident,jule::Bool _39938_cpp_linked) {
	jule::Ref<_10e56a140_Fn> _40117_f = _10e9b6a10_find_fn_in_package((*this)._field_files,_39926_ident,_39938_cpp_linked);
	if (jule::real(_40117_f)) {
		return _40117_f;
	}
	jule::Int _40717_i = 0LL;
	_iter_begin_4710188976:;
	if (!((_40717_i < static_cast<jule::Int>((*this)._field_file->_field_imports._method_len())))) { goto _iter_end_4710188976; }
	{
		jule::Ref<_10e9b6a10_ImportInfo> _40921_imp = (*this)._field_file->_field_imports._method_at(_40717_i);
		if ((!_10e9847f0_imp_is_lookupable(_40921_imp,_39926_ident))) {
			goto _iter_next_4710188976;
		}
		jule::Ref<_10e56a140_Fn> _41321_f = _40921_imp->_method_find_fn(_39926_ident,_39938_cpp_linked);
		if ((jule::real(_41321_f) && (*this)._method_is_accessible_define(_41321_f->_field_public,_41321_f->_field_token))) {
			return _41321_f;
		}
	}
	_iter_next_4710188976:;
	(_40717_i)++;
	goto _iter_begin_4710188976;
	_iter_end_4710188976:;
	return jule::new_ref<_10e56a140_Fn>();
}



inline jule::Ref<_10e3d6eb0_Trait> _10e9847f0_Sema::_method_find_trait(jule::Str _42829_ident) {
	jule::Ref<_10e3d6eb0_Trait> _43017_t = _10e9b6a10_find_trait_in_package((*this)._field_files,_42829_ident);
	if (jule::real(_43017_t)) {
		return _43017_t;
	}
	jule::Int _43617_i = 0LL;
	_iter_begin_4710222096:;
	if (!((_43617_i < static_cast<jule::Int>((*this)._field_file->_field_imports._method_len())))) { goto _iter_end_4710222096; }
	{
		jule::Ref<_10e9b6a10_ImportInfo> _43821_imp = (*this)._field_file->_field_imports._method_at(_43617_i);
		if ((!_10e9847f0_imp_is_lookupable(_43821_imp,_42829_ident))) {
			goto _iter_next_4710222096;
		}
		jule::Ref<_10e3d6eb0_Trait> _44221_t = _43821_imp->_method_find_trait(_42829_ident);
		if ((jule::real(_44221_t) && (*this)._method_is_accessible_define(_44221_t->_field_public,_44221_t->_field_token))) {
			return _44221_t;
		}
	}
	_iter_next_4710222096:;
	(_43617_i)++;
	goto _iter_begin_4710222096;
	_iter_end_4710222096:;
	return jule::new_ref<_10e3d6eb0_Trait>();
}



inline jule::Ref<_10e975f00_Enum> _10e9847f0_Sema::_method_find_enum(jule::Str _45728_ident) {
	jule::Ref<_10e975f00_Enum> _45917_e = _10e9b6a10_find_enum_in_package((*this)._field_files,_45728_ident);
	if (jule::real(_45917_e)) {
		return _45917_e;
	}
	jule::Int _46517_i = 0LL;
	_iter_begin_4710238416:;
	if (!((_46517_i < static_cast<jule::Int>((*this)._field_file->_field_imports._method_len())))) { goto _iter_end_4710238416; }
	{
		jule::Ref<_10e9b6a10_ImportInfo> _46721_imp = (*this)._field_file->_field_imports._method_at(_46517_i);
		if ((!_10e9847f0_imp_is_lookupable(_46721_imp,_45728_ident))) {
			goto _iter_next_4710238416;
		}
		jule::Ref<_10e975f00_Enum> _47121_e = _46721_imp->_method_find_enum(_45728_ident);
		if ((jule::real(_47121_e) && (*this)._method_is_accessible_define(_47121_e->_field_public,_47121_e->_field_token))) {
			return _47121_e;
		}
	}
	_iter_next_4710238416:;
	(_46517_i)++;
	goto _iter_begin_4710238416;
	_iter_end_4710238416:;
	return jule::new_ref<_10e975f00_Enum>();
}



inline void _10e9847f0_Sema::_method_set_current_file(jule::Ref<_10ee5c510_SymbolTable> _48239_f) {
	(*this)._field_file=_48239_f;
}



inline void _10e9847f0_Sema::_method_push_err(_11ce22a00_Token _48427_token,jule::Str _48441_key,jule::Slice<jule::Any> _48451_args) {
	(*this)._field_errors=append((*this)._field_errors,jule::Slice<_13cfd2d20_Log>({_10e9847f0_compiler_err(_48427_token,_48441_key,_48451_args)}));
}



inline jule::Bool _10e9847f0_Sema::_method_is_accessible_define(jule::Bool _48935_public,_11ce22a00_Token _48949_token) {
	return ((_48935_public || (!jule::real(_48949_token._field_file))) || ((*this)._field_file->_field_file->_method_dir() == _48949_token._field_file->_method_dir()));
}



inline jule::Bool _10e9847f0_Sema::_method_is_duplicated_ident(jule::Uintptr _49634_itself,jule::Str _49651_ident,jule::Bool _49663_cpp_linked) {
	{
		auto &__julec_range_expr = (*this)._field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ee5c510_SymbolTable> _10e9847f0_f{jule::Ref<_10ee5c510_SymbolTable>()};_10e9847f0_f = *__julec_range_begin;
			_iter_begin_4710269120:;
			{
				if (_10e9847f0_f->_method_is_duplicated_ident(_49634_itself,_49651_ident,_49663_cpp_linked)) {
					return true;
				}
				jule::Int _50221_i = 0LL;
				_iter_begin_4710275776:;
				if (!((_50221_i < static_cast<jule::Int>(_10e9847f0_f->_field_imports._method_len())))) { goto _iter_end_4710275776; }
				{
					jule::Ref<_10e9b6a10_ImportInfo> _50421_imp = (&_10e9847f0_f->_field_imports)->_method_at(_50221_i);
					{
						auto &__julec_range_expr = _50421_imp->_field_selected;
						if (__julec_range_expr.begin() != __julec_range_expr.end()) {
							auto __julec_range_begin = __julec_range_expr.begin();
							const auto __julec_range_end = __julec_range_expr.end();
							_11ce22a00_Token _10e9847f0_selected{_11ce22a00_Token()};_10e9847f0_selected = *__julec_range_begin;
							_iter_begin_4710277088:;
							{
								if ((_10e9847f0_selected._field_kind == _49651_ident)) {
									return true;
								}
							}
							_iter_next_4710277088:;
							++__julec_range_begin;
							if (__julec_range_begin != __julec_range_end) { _10e9847f0_selected = *__julec_range_begin; goto _iter_begin_4710277088; }
							_iter_end_4710277088:;
						}
					}
				}
				_iter_next_4710275776:;
				(_50221_i)++;
				goto _iter_begin_4710275776;
				_iter_end_4710275776:;
			}
			_iter_next_4710269120:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9847f0_f = *__julec_range_begin; goto _iter_begin_4710269120; }
			_iter_end_4710269120:;
		}
	}
	return false;
}



inline jule::Bool _10e9847f0_Sema::_method_check_generic_quantity(jule::Int _51541_required,jule::Int _51556_given,_11ce22a00_Token _51568_error_token) {
	jule::Bool _51590_ok{jule::Bool()};
	{
		auto _match_expr{ true };
		if (!(((_51541_required == 0LL) && (_51556_given > 0LL)) == _match_expr)) { goto _case_end_4710287840; }
		_case_begin_4710287840:;
		{
			(*this)._method_push_err(_51568_error_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
			_51590_ok = false;
			return _51590_ok;
		}
		goto _match_end_4710287280;
		_case_end_4710287840:;
		if (!(((_51541_required > 0LL) && (_51556_given == 0LL)) == _match_expr)) { goto _case_end_4710287952; }
		_case_begin_4710287952:;
		{
			(*this)._method_push_err(_51568_error_token,jule::Str("has_generics", 12),jule::Slice<jule::Any>({}));
			_51590_ok = false;
			return _51590_ok;
		}
		goto _match_end_4710287280;
		_case_end_4710287952:;
		if (!((_51541_required < _51556_given) == _match_expr)) { goto _case_end_4710288064; }
		_case_begin_4710288064:;
		{
			(*this)._method_push_err(_51568_error_token,jule::Str("generics_overflow", 17),jule::Slice<jule::Any>({}));
			_51590_ok = false;
			return _51590_ok;
		}
		goto _match_end_4710287280;
		_case_end_4710288064:;
		if (!((_51541_required > _51556_given) == _match_expr)) { goto _case_end_4710288992; }
		_case_begin_4710288992:;
		{
			(*this)._method_push_err(_51568_error_token,jule::Str("missing_generics", 16),jule::Slice<jule::Any>({}));
			_51590_ok = false;
			return _51590_ok;
		}
		goto _match_end_4710287280;
		_case_end_4710288992:;
		_case_begin_4710287536:;
		{
			_51590_ok = true;
			return _51590_ok;
		}
		goto _match_end_4710287280;
		_case_end_4710287536:;
		_match_end_4710287280:;
	}
}



inline jule::Bool _10e9847f0_Sema::_method_is_duplicated_import_selection(jule::Uintptr _53845_itself,jule::Str _53862_ident) {
	jule::Int _53917_i = 0LL;
	_iter_begin_4710304144:;
	if (!((_53917_i < static_cast<jule::Int>((*this)._field_file->_field_imports._method_len())))) { goto _iter_end_4710304144; }
	{
		jule::Ref<_10e9b6a10_ImportInfo> _54117_imp = ((*this)._field_file).alloc->_field_imports._method_at(_53917_i);
		if ((((jule::Uintptr)((_54117_imp).alloc)) == _53845_itself)) {
			goto _iter_end_4710304144;
		}
		if (_54117_imp->_method_exist_ident(_53862_ident)) {
			return true;
		}
	}
	_iter_next_4710304144:;
	(_53917_i)++;
	goto _iter_begin_4710304144;
	_iter_end_4710304144:;
	return false;
}



inline void _10e9847f0_Sema::_method_check_import_selections(jule::Ref<_10e9b6a10_ImportInfo> _55546_imp) {
	(*this)._method_set_current_file((*this)._field_files[static_cast<jule::Int>(0LL)]);
	__JULE_DEFER({
		jule::drop((*this)._field_file);
	});
	jule::Fn<jule::Any(jule::Str)> _56013_get_def = jule::Fn<jule::Any(jule::Str)>([&](jule::Str _56026_ident) mutable -> jule::Any {
		if ((_10f3f9210_find_package_builtin_def(_55546_imp->_field_link_path,_56026_ident) != nullptr)) {
			return true;
		}
		{
			auto &__julec_range_expr = _55546_imp->_field_package->_field_files;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_10ee5c510_SymbolTable> _10e9847f0_f{jule::Ref<_10ee5c510_SymbolTable>()};_10e9847f0_f = *__julec_range_begin;
				_iter_begin_4710324816:;
				{
					
					jule::Any _56725_def = _10e9847f0_f->_method_def_by_ident(_56026_ident,false);
					if ((_56725_def != nullptr)) {
						return _56725_def;
					}
				}
				_iter_next_4710324816:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _10e9847f0_f = *__julec_range_begin; goto _iter_begin_4710324816; }
				_iter_end_4710324816:;
			}
		}
		return nullptr;
	});
	{
		auto &__julec_range_expr = _55546_imp->_field_selected;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_11ce22a00_Token _10e9847f0_ident{_11ce22a00_Token()};_10e9847f0_ident = *__julec_range_begin;
			_iter_begin_4710319712:;
			{
				if ((_10e9847f0_ident._field_kind == jule::Str("self", 4))) {
					goto _iter_next_4710319712;
				}
				if ((*this)._method_is_duplicated_import_selection(((jule::Uintptr)((_55546_imp).alloc)),_10e9847f0_ident._field_kind)) {
					(*this)._method_push_err(_10e9847f0_ident,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_10e9847f0_ident._field_kind)}));
					goto _iter_next_4710319712;
				}
				jule::Any _58621_def = _56013_get_def(_10e9847f0_ident._field_kind);
				{
					auto _match_expr{ _58621_def };
					if (!(_match_expr.type_is<jule::Bool>())) { goto _case_end_4710340192; }
					_case_begin_4710340192:;
					{
						goto _iter_next_4710319712;
					}
					goto _match_end_4710339584;
					_case_end_4710340192:;
					if (!(_match_expr.type_is<jule::Ref<_10ebc2ad0_Var>>())) { goto _case_end_4710340304; }
					_case_begin_4710340304:;
					{
						jule::Ref<_10ebc2ad0_Var> _59325_v = _58621_def.operator jule::Ref<_10ebc2ad0_Var>();
						if ((*this)._method_is_accessible_define(_59325_v->_field_public,_59325_v->_field_token)) {
							goto _iter_next_4710319712;
						}
					}
					goto _match_end_4710339584;
					_case_end_4710340304:;
					if (!(_match_expr.type_is<jule::Ref<_10eeb79b0_TypeAlias>>())) { goto _case_end_4710340416; }
					_case_begin_4710340416:;
					{
						jule::Ref<_10eeb79b0_TypeAlias> _59925_ta = _58621_def.operator jule::Ref<_10eeb79b0_TypeAlias>();
						if ((*this)._method_is_accessible_define(_59925_ta->_field_public,_59925_ta->_field_token)) {
							goto _iter_next_4710319712;
						}
					}
					goto _match_end_4710339584;
					_case_end_4710340416:;
					if (!(_match_expr.type_is<jule::Ref<_10e3fc8f0_Struct>>())) { goto _case_end_4710340528; }
					_case_begin_4710340528:;
					{
						jule::Ref<_10e3fc8f0_Struct> _60525_strct = _58621_def.operator jule::Ref<_10e3fc8f0_Struct>();
						if ((*this)._method_is_accessible_define(_60525_strct->_field_public,_60525_strct->_field_token)) {
							goto _iter_next_4710319712;
						}
					}
					goto _match_end_4710339584;
					_case_end_4710340528:;
					if (!(_match_expr.type_is<jule::Ref<_10e3d6eb0_Trait>>())) { goto _case_end_4710343312; }
					_case_begin_4710343312:;
					{
						jule::Ref<_10e3d6eb0_Trait> _61125_t = _58621_def.operator jule::Ref<_10e3d6eb0_Trait>();
						if ((*this)._method_is_accessible_define(_61125_t->_field_public,_61125_t->_field_token)) {
							goto _iter_next_4710319712;
						}
					}
					goto _match_end_4710339584;
					_case_end_4710343312:;
					if (!(_match_expr.type_is<jule::Ref<_10e975f00_Enum>>())) { goto _case_end_4710343424; }
					_case_begin_4710343424:;
					{
						jule::Ref<_10e975f00_Enum> _61725_e = _58621_def.operator jule::Ref<_10e975f00_Enum>();
						if ((*this)._method_is_accessible_define(_61725_e->_field_public,_61725_e->_field_token)) {
							goto _iter_next_4710319712;
						}
					}
					goto _match_end_4710339584;
					_case_end_4710343424:;
					if (!(_match_expr.type_is<jule::Ref<_10e56a140_Fn>>())) { goto _case_end_4710343536; }
					_case_begin_4710343536:;
					{
						jule::Ref<_10e56a140_Fn> _62325_f = _58621_def.operator jule::Ref<_10e56a140_Fn>();
						if ((*this)._method_is_accessible_define(_62325_f->_field_public,_62325_f->_field_token)) {
							goto _iter_next_4710319712;
						}
					}
					goto _match_end_4710339584;
					_case_end_4710343536:;
					_case_begin_4710339888:;
					{
						(*this)._method_push_err(_10e9847f0_ident,jule::Str("ident_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_10e9847f0_ident._field_kind)}));
						goto _iter_next_4710319712;
					}
					goto _match_end_4710339584;
					_case_end_4710339888:;
					_match_end_4710339584:;
				}
				(*this)._method_push_err(_10e9847f0_ident,jule::Str("ident_is_not_accessible", 23),jule::Slice<jule::Any>({jule::Any(_10e9847f0_ident._field_kind)}));
			}
			_iter_next_4710319712:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9847f0_ident = *__julec_range_begin; goto _iter_begin_4710319712; }
			_iter_end_4710319712:;
		}
	}
}



inline jule::Bool _10e9847f0_Sema::_method_check_import(jule::Ref<_10e9b6a10_ImportInfo> _63835_imp) {
	if (((_63835_imp->_field_duplicate || _63835_imp->_field_cpp_linked) || (static_cast<jule::I64>(_63835_imp->_field_package->_field_files.len()) == 0LL))) {
		return true;
	}
	jule::Ref<_10e9847f0_Sema> _64317_sema = jule::new_struct<_10e9847f0_Sema>(new( std::nothrow ) _10e9847f0_Sema());
	_64317_sema->_method_check(_63835_imp->_field_package->_field_files);
	if ((static_cast<jule::I64>(_64317_sema->_field_errors.len()) > 0LL)) {
		(*this)._field_errors=append((*this)._field_errors,_64317_sema->_field_errors);
		return false;
	}
	(*this)._method_check_import_selections(_63835_imp);
	return true;
}



inline void _10e9847f0_Sema::_method_check_imports(void) {
	{
		auto &__julec_range_expr = (*this)._field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ee5c510_SymbolTable> _10e9847f0_file{jule::Ref<_10ee5c510_SymbolTable>()};_10e9847f0_file = *__julec_range_begin;
			_iter_begin_4710385504:;
			{
				jule::Int _65621_i = 0LL;
				_iter_begin_4710388800:;
				if (!((_65621_i < static_cast<jule::Int>(_10e9847f0_file->_field_imports._method_len())))) { goto _iter_end_4710388800; }
				{
					jule::Ref<_10e9b6a10_ImportInfo> _65825_imp = _10e9847f0_file->_field_imports._method_at(_65621_i);
					jule::Bool _65921_ok = (*this)._method_check_import(_65825_imp);
					if ((!_65921_ok)) {
						(*this)._method_push_err(_65825_imp->_field_token,jule::Str("used_package_has_errors", 23),jule::Slice<jule::Any>({jule::Any(_65825_imp->_field_link_path)}));
						return;
					}
				}
				_iter_next_4710388800:;
				(_65621_i)++;
				goto _iter_begin_4710388800;
				_iter_end_4710388800:;
			}
			_iter_next_4710385504:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9847f0_file = *__julec_range_begin; goto _iter_begin_4710385504; }
			_iter_end_4710385504:;
		}
	}
}



inline void _10e9847f0_Sema::_method_impl_file_impls(void) {
	jule::Int _67117_i = 0LL;
	_iter_begin_4710399520:;
	if (!((_67117_i < static_cast<jule::Int>(this->self->_field_file->_field_impls._method_len())))) { goto _iter_end_4710399520; }
	{
		jule::Ref<_10e97d820_Impl> _67321_imp = this->self->_field_file->_field_impls._method_at(_67117_i);
		this->self->_method_impl_impl(_67321_imp);
	}
	_iter_next_4710399520:;
	(_67117_i)++;
	goto _iter_begin_4710399520;
	_iter_end_4710399520:;
}



inline void _10e9847f0_Sema::_method_impl_impls(void) {
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ee5c510_SymbolTable> _10e9847f0_file{jule::Ref<_10ee5c510_SymbolTable>()};_10e9847f0_file = *__julec_range_begin;
			_iter_begin_4710406480:;
			{
				this->self->_method_set_current_file(_10e9847f0_file);
				this->self->_method_impl_file_impls();
			}
			_iter_next_4710406480:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9847f0_file = *__julec_range_begin; goto _iter_begin_4710406480; }
			_iter_end_4710406480:;
		}
	}
}



inline void _10e9847f0_Sema::_method_check_enums(void) {
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ee5c510_SymbolTable> _10e9847f0_file{jule::Ref<_10ee5c510_SymbolTable>()};_10e9847f0_file = *__julec_range_begin;
			_iter_begin_4710412480:;
			{
				this->self->_method_set_current_file(_10e9847f0_file);
				this->self->_method_check_enum_decls();
			}
			_iter_next_4710412480:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9847f0_file = *__julec_range_begin; goto _iter_begin_4710412480; }
			_iter_end_4710412480:;
		}
	}
}



inline jule::Bool _10e9847f0_Sema::_method_check_type_with_refers(jule::Ref<_10eeb79b0_TypeSymbol> _69446_t,jule::Trait<_10f3df410_Lookup> _69462_l,jule::Ref<_10eeb79b0_Referencer> _69473_referencer) {
	jule::Bool _694100_ok{jule::Bool()};
	if (_69446_t->_method_checked()) {
		_694100_ok = true;
		return _694100_ok;
	}
	_10eeb79b0_TypeChecker _69817_tc = _10eeb79b0_TypeChecker(this->self,_69462_l,_69473_referencer,_11ce22a00_Token(),jule::Slice<jule::Ref<_11ce1fd50_GenericDecl>>(),jule::Slice<jule::Ref<_10eeb79b0_TypeAlias>>(),jule::Bool());
	_69817_tc._method_check(_69446_t);
	_694100_ok = _69446_t->_method_checked();
	return _694100_ok;
}



inline jule::Bool _10e9847f0_Sema::_method_check_type(jule::Ref<_10eeb79b0_TypeSymbol> _70934_t,jule::Trait<_10f3df410_Lookup> _70950_l) {
	jule::Bool _70963_ok{jule::Bool()};
	_70963_ok = this->self->_method_check_type_with_refers(_70934_t,_70950_l,jule::new_ref<_10eeb79b0_Referencer>());
	return _70963_ok;
}



inline jule::Ref<_10eeb79b0_TypeKind> _10e9847f0_Sema::_method_build_type_with_generics(jule::Ref<_11ce1fd50_TypeDecl> _71548_t,jule::Slice<jule::Ref<_10eeb79b0_TypeAlias>> _71562_generics) {
	jule::Ref<_10eeb79b0_TypeChecker> _71617_tc = jule::new_struct<_10eeb79b0_TypeChecker>(new( std::nothrow ) _10eeb79b0_TypeChecker(this->self,this->self,jule::Ref<_10eeb79b0_Referencer>(),_11ce22a00_Token(),jule::Slice<jule::Ref<_11ce1fd50_GenericDecl>>(),_71562_generics,jule::Bool()));
	return _71617_tc->_method_check_decl(_71548_t);
}



inline jule::Ref<_10eeb79b0_TypeKind> _10e9847f0_Sema::_method_build_type(jule::Ref<_11ce1fd50_TypeDecl> _72534_t) {
	return this->self->_method_build_type_with_generics(_72534_t,nullptr);
}



inline jule::Ref<_10ee8a260_Data> _10e9847f0_Sema::_method_evalpd(jule::Ref<_11ce1fd50_Expr> _73130_expr,jule::Trait<_10f3df410_Lookup> _73147_l,jule::Ref<_10eeb79b0_TypeKind> _73162_p,jule::Ref<_10ebc2ad0_Var> _73176_owner) {
	jule::Ref<_10ee8a260_Eval> _73217_e = jule::new_struct<_10ee8a260_Eval>(new( std::nothrow ) _10ee8a260_Eval(this->self,_73147_l,jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),_73176_owner));
	{
		auto _match_expr{ _73147_l };
		if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_ScopeChecker>>())) { goto _case_end_4710468848; }
		_case_begin_4710468848:;
		{
			_73217_e->_field_unsafety=_73147_l.operator jule::Ref<_10e97fcf0_ScopeChecker>()->_method_is_unsafe();
		}
		goto _match_end_4710466736;
		_case_end_4710468848:;
		_match_end_4710466736:;
	}
	_73217_e->_field_prefix=_73162_p;
	return _73217_e->_method_eval_expr(_73130_expr);
}



inline jule::Ref<_10ee8a260_Data> _10e9847f0_Sema::_method_evalp(jule::Ref<_11ce1fd50_Expr> _74929_expr,jule::Trait<_10f3df410_Lookup> _74946_l,jule::Ref<_10eeb79b0_TypeKind> _74961_p) {
	return this->self->_method_evalpd(_74929_expr,_74946_l,_74961_p,jule::new_ref<_10ebc2ad0_Var>());
}



inline jule::Ref<_10ee8a260_Data> _10e9847f0_Sema::_method_eval(jule::Ref<_11ce1fd50_Expr> _75428_expr,jule::Trait<_10f3df410_Lookup> _75445_l) {
	return this->self->_method_evalp(_75428_expr,_75445_l,jule::new_ref<_10eeb79b0_TypeKind>());
}



inline void _10e9847f0_Sema::_method_check_assign_type(jule::Ref<_10eeb79b0_TypeKind> _75841_dest,jule::Ref<_10ee8a260_Data> _75862_d,_11ce22a00_Token _75872_error_token,jule::Bool _75892_deref) {
	jule::Ref<_10eb9c740_AssignTypeChecker> _75917_atc = jule::new_struct<_10eb9c740_AssignTypeChecker>(new( std::nothrow ) _10eb9c740_AssignTypeChecker(this->self,_75841_dest,_75862_d,_75872_error_token,_75892_deref));
	jule::Bool _76613_ok = _75917_atc->_method_check();
	if ((!_76613_ok)) {
		return;
	}
	if (((!_75862_d->_method_is_const()) || (!jule::real(_75841_dest->_method_prim())))) {
		return;
	}
	jule::Str _77517_kind = _75841_dest->_method_prim()->_field_kind;
	{
		auto _match_expr{ true };
		if (!(_10f5ea650_is_sig_int(_77517_kind) == _match_expr)) { goto _case_end_4710494512; }
		_case_begin_4710494512:;
		{
			_75862_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_75862_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_4710494320;
		_case_end_4710494512:;
		if (!(_10f5ea650_is_unsig_int(_77517_kind) == _match_expr)) { goto _case_end_4710494624; }
		_case_begin_4710494624:;
		{
			_75862_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_75862_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_4710494320;
		_case_end_4710494624:;
		if (!(_10f5ea650_is_float(_77517_kind) == _match_expr)) { goto _case_end_4710494736; }
		_case_begin_4710494736:;
		{
			_75862_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_75862_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_4710494320;
		_case_end_4710494736:;
		_match_end_4710494320:;
	}
}



inline jule::Bool _10e9847f0_Sema::_method_check_type_compatibility(jule::Ref<_10eeb79b0_TypeKind> _78948_dest,jule::Ref<_10eeb79b0_TypeKind> _79013_src,_11ce22a00_Token _79029_error_token,jule::Bool _79049_deref) {
	jule::Str _79113_dest_kind = _78948_dest->_method_to_str();
	if ((!jule::real(_79013_src))) {
		this->self->_method_push_err(_79029_error_token,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any(_79113_dest_kind),jule::Any(jule::Str("<untyped>", 9))}));
		return false;
	}
	jule::Str _79613_src_kind = _79013_src->_method_to_str();
	if (jule::real(_79013_src->_method_tup())) {
		this->self->_method_push_err(_79029_error_token,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any(_79113_dest_kind),jule::Any(_79613_src_kind)}));
		return false;
	}
	if ((jule::real(_78948_dest->_method_prim()) && _78948_dest->_method_prim()->_method_is_any())) {
		return false;
	}
	jule::Ref<_10eb9c740_TypeCompatibilityChecker> _80817_tcc = jule::new_struct<_10eb9c740_TypeCompatibilityChecker>(new( std::nothrow ) _10eb9c740_TypeCompatibilityChecker(this->self,_78948_dest,_79013_src,_79029_error_token,_79049_deref,jule::Bool()));
	jule::Bool _81513_ok = _80817_tcc->_method_check();
	{
		auto _match_expr{ true };
		if (!(_81513_ok == _match_expr)) { goto _case_end_4710536832; }
		_case_begin_4710536832:;
		{
			return true;
		}
		goto _match_end_4710532624;
		_case_end_4710536832:;
		if (!((_79113_dest_kind == _79613_src_kind) == _match_expr)) { goto _case_end_4710536944; }
		_case_begin_4710536944:;
		{
			return true;
		}
		goto _match_end_4710532624;
		_case_end_4710536944:;
		_case_begin_4710514320:;
		{
			this->self->_method_push_err(_79029_error_token,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any(_79113_dest_kind),jule::Any(_79613_src_kind)}));
			return false;
		}
		goto _match_end_4710532624;
		_case_end_4710514320:;
		_match_end_4710532624:;
	}
}



inline jule::Ref<_10eeb79b0_TypeKind> _10e9847f0_Sema::_method_build_non_generic_type_kind(jule::Ref<_11ce1fd50_TypeDecl> _83651_ast,jule::Slice<jule::Ref<_11ce1fd50_GenericDecl>> _83667_generics) {
	jule::Ref<_10eeb79b0_TypeChecker> _83717_tc = jule::new_struct<_10eeb79b0_TypeChecker>(new( std::nothrow ) _10eeb79b0_TypeChecker(this->self,this->self,jule::Ref<_10eeb79b0_Referencer>(),_11ce22a00_Token(),_83667_generics,jule::Slice<jule::Ref<_10eeb79b0_TypeAlias>>(),jule::Bool()));
	return _83717_tc->_method_check_decl(_83651_ast);
}



inline void _10e9847f0_Sema::_method_build_fn_non_generic_type_kinds(jule::Ref<_10e56a140_FnIns> _84555_f) {
	jule::Slice<jule::Ref<_11ce1fd50_GenericDecl>> _84617_generics = nullptr;
	if (_84555_f->_field_decl->_method_is_method()) {
		_84617_generics=append(_84555_f->_field_decl->_field_generics,_84555_f->_field_decl->_field_owner->_field_generics);
	} else {
		_84617_generics=_84555_f->_field_decl->_field_generics;
	}
	{
		auto &__julec_range_expr = _84555_f->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e56a140_ParamIns> _10e9847f0_p{jule::Ref<_10e56a140_ParamIns>()};_10e9847f0_p = *__julec_range_begin;
			_iter_begin_4710548112:;
			{
				if ((!_10e9847f0_p->_field_decl->_method_is_self())) {
					_10e9847f0_p->_field_kind=this->self->_method_build_non_generic_type_kind(_10e9847f0_p->_field_decl->_field_kind->_field_decl,_84617_generics);
				}
			}
			_iter_next_4710548112:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9847f0_p = *__julec_range_begin; goto _iter_begin_4710548112; }
			_iter_end_4710548112:;
		}
	}
	if ((!_84555_f->_field_decl->_method_is_void())) {
		_84555_f->_field_result=this->self->_method_build_non_generic_type_kind(_84555_f->_field_decl->_field_result->_field_kind->_field_decl,_84617_generics);
	}
}



inline jule::Ref<_10e56a140_FnIns> _10e9847f0_Sema::_method_get_trait_check_fn_kind(jule::Ref<_10e56a140_Fn> _86347_f) {
	jule::Ref<_10e56a140_FnIns> _86417_ins = _86347_f->_method_instance_force();
	this->self->_method_build_fn_non_generic_type_kinds(_86417_ins);
	return _86417_ins;
}



inline jule::Bool _10e9847f0_Sema::_method_reload_fn_ins_types(jule::Ref<_10e56a140_FnIns> _86943_f) {
	jule::Bool _86956_ok{jule::Bool()};
	if ((_86943_f->_method_is_builtin() || _86943_f->_method_is_anon())) {
		_86956_ok = true;
		return _86956_ok;
	}
	jule::Ref<_10e9847f0_Sema> _87417_sema = _86943_f->_field_decl->_field_sema;
	jule::Ref<_10ee5c510_SymbolTable> _87617_old = _86943_f->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_86943_f->_field_decl->_field_sema->_method_set_current_file(_87617_old);
	});
	jule::Ref<_10ee5c510_SymbolTable> _87817_file = _10e9847f0_find_file(_86943_f->_field_decl->_field_sema->_field_files,_86943_f->_field_decl->_field_token._field_file);
	if (jule::real(_87817_file)) {
		_86943_f->_field_decl->_field_sema->_method_set_current_file(_87817_file);
	}
	jule::I64 _88317_size = static_cast<jule::I64>(_86943_f->_field_generics.len());
	if ((jule::real(_86943_f->_field_decl) && jule::real(_86943_f->_field_decl->_field_owner))) {
		_88317_size+=static_cast<jule::I64>(_86943_f->_field_decl->_field_owner->_field_generics.len());
	}
	jule::Slice<jule::Ref<_10eeb79b0_TypeAlias>> _88817_generics = jule::Slice<jule::Ref<_10eeb79b0_TypeAlias>>::alloc(static_cast<jule::Int>(0LL),static_cast<jule::Int>(_88317_size));
	{
		auto &__julec_range_expr = _86943_f->_field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e9847f0_i{jule::Int()};_10e9847f0_i = 0;
			jule::Ref<_10eeb79b0_TypeKind> _10e9847f0_g{jule::Ref<_10eeb79b0_TypeKind>()};_10e9847f0_g = *__julec_range_begin;
			_iter_begin_4710593024:;
			{
				_88817_generics=append(_88817_generics,jule::Slice<jule::Ref<_10eeb79b0_TypeAlias>>({jule::new_struct<_10eeb79b0_TypeAlias>(new( std::nothrow ) _10eeb79b0_TypeAlias(jule::Ref<_11ce1fd50_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),_11ce22a00_Token(),_86943_f->_field_decl->_field_generics[static_cast<jule::Int>(_10e9847f0_i)]->_field_ident,jule::new_struct<_10eeb79b0_TypeSymbol>(new( std::nothrow ) _10eeb79b0_TypeSymbol(jule::Ref<_11ce1fd50_TypeDecl>(),_10e9847f0_g)),jule::Str(),jule::Slice<jule::Any>()))}));
			}
			_iter_next_4710593024:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e9847f0_i; _10e9847f0_g = *__julec_range_begin; goto _iter_begin_4710593024; }
			_iter_end_4710593024:;
		}
	}
	if ((jule::real(_86943_f->_field_decl) && jule::real(_86943_f->_field_decl->_field_owner))) {
		jule::Ref<_10e3fc8f0_StructIns> _90021_owner = _86943_f->_field_owner;
		{
			auto &__julec_range_expr = _90021_owner->_field_generics;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Int _10e9847f0_i{jule::Int()};_10e9847f0_i = 0;
				jule::Ref<_10eeb79b0_TypeKind> _10e9847f0_g{jule::Ref<_10eeb79b0_TypeKind>()};_10e9847f0_g = *__julec_range_begin;
				_iter_begin_4710595088:;
				{
					_88817_generics=append(_88817_generics,jule::Slice<jule::Ref<_10eeb79b0_TypeAlias>>({jule::new_struct<_10eeb79b0_TypeAlias>(new( std::nothrow ) _10eeb79b0_TypeAlias(jule::Ref<_11ce1fd50_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),_11ce22a00_Token(),_90021_owner->_field_decl->_field_generics[static_cast<jule::Int>(_10e9847f0_i)]->_field_ident,jule::new_struct<_10eeb79b0_TypeSymbol>(new( std::nothrow ) _10eeb79b0_TypeSymbol(jule::Ref<_11ce1fd50_TypeDecl>(),_10e9847f0_g)),jule::Str(),jule::Slice<jule::Any>()))}));
				}
				_iter_next_4710595088:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { ++_10e9847f0_i; _10e9847f0_g = *__julec_range_begin; goto _iter_begin_4710595088; }
				_iter_end_4710595088:;
			}
		}
	}
	_86956_ok=true;
	{
		auto &__julec_range_expr = _86943_f->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e56a140_ParamIns> _10e9847f0_p{jule::Ref<_10e56a140_ParamIns>()};_10e9847f0_p = *__julec_range_begin;
			_iter_begin_4710603984:;
			{
				if ((!_10e9847f0_p->_field_decl->_method_is_self())) {
					_10e9847f0_p->_field_kind=_87417_sema->_method_build_type_with_generics(_10e9847f0_p->_field_decl->_field_kind->_field_decl,_88817_generics);
					_86956_ok=(jule::real(_10e9847f0_p->_field_kind) && _86956_ok);
				}
			}
			_iter_next_4710603984:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9847f0_p = *__julec_range_begin; goto _iter_begin_4710603984; }
			_iter_end_4710603984:;
		}
	}
	if ((!_86943_f->_field_decl->_method_is_void())) {
		_86943_f->_field_result=_87417_sema->_method_build_type_with_generics(_86943_f->_field_decl->_field_result->_field_kind->_field_decl,_88817_generics);
		_86956_ok=(jule::real(_86943_f->_field_result) && _86956_ok);
	}
	if (((_87417_sema).alloc != (this->self).alloc)) {
		this->self->_field_errors=append(this->self->_field_errors,_87417_sema->_field_errors);
	}
	_86956_ok = _86956_ok;
	return _86956_ok;
}



inline void _10e9847f0_Sema::_method_check_validity_for_init_expr(jule::Bool _93148_left_mut,jule::Bool _93164_left_ref,jule::Ref<_10eeb79b0_TypeKind> _9329_left_kind,jule::Ref<_10ee8a260_Data> _93235_d,_11ce22a00_Token _93245_error_token) {
	if (((_93148_left_mut && (!_93235_d->_field_mutable)) && _10eeb79b0_is_mut(_93235_d->_field_kind))) {
		this->self->_method_push_err(_93245_error_token,jule::Str("assignment_non_mut_to_mut", 25),jule::Slice<jule::Any>({}));
	}
	if (_93164_left_ref) {
		if ((!_93235_d->_field_lvalue)) {
			this->self->_method_push_err(_93245_error_token,jule::Str("reference_assign_non_lvalue", 27),jule::Slice<jule::Any>({}));
		}
		if ((_93148_left_mut && (!_93235_d->_field_mutable))) {
			this->self->_method_push_err(_93245_error_token,jule::Str("mut_reference_points_to_immut", 29),jule::Slice<jule::Any>({}));
		}
	}
	jule::Ref<_10eb9c740_AssignTypeChecker> _94517_atc = jule::new_struct<_10eb9c740_AssignTypeChecker>(new( std::nothrow ) _10eb9c740_AssignTypeChecker(this->self,jule::Ref<_10eeb79b0_TypeKind>(),_93235_d,_93245_error_token,jule::Bool()));
	_94517_atc->_method_check_validity();
}



inline jule::Bool _10e9847f0_Sema::_method_check_type_alias_decl_kind(jule::Ref<_10eeb79b0_TypeAlias> _95350_ta,jule::Trait<_10f3df410_Lookup> _95366_l) {
	jule::Bool _95379_ok{jule::Bool()};
	jule::Ref<_10ee5c510_SymbolTable> _95417_old = this->self->_field_file;
	__JULE_DEFER({
		this->self->_method_set_current_file(_95417_old);
	});
	jule::Ref<_10ee5c510_SymbolTable> _95617_file = _10e9847f0_find_file(this->self->_field_files,_95350_ta->_field_token._field_file);
	if (jule::real(_95617_file)) {
		this->self->_method_set_current_file(_95617_file);
	}
	_95379_ok=this->self->_method_check_type_with_refers(_95350_ta->_field_kind,_95366_l,jule::new_struct<_10eeb79b0_Referencer>(new( std::nothrow ) _10eeb79b0_Referencer(_95350_ta->_field_ident,_95350_ta,(&_95350_ta->_field_refers))));
	if (((_95379_ok && jule::real(_95350_ta->_field_kind->_field_kind->_method_arr())) && _95350_ta->_field_kind->_field_kind->_method_arr()->_field_auto)) {
		this->self->_method_push_err(_95350_ta->_field_kind->_field_decl->_field_token,jule::Str("array_auto_sized", 16),jule::Slice<jule::Any>({}));
		_95379_ok=false;
	}
	return _95379_ok;
}



inline void _10e9847f0_Sema::_method_check_type_alias_decl(jule::Ref<_10eeb79b0_TypeAlias> _97345_ta,jule::Trait<_10f3df410_Lookup> _97361_l) {
	if (_11ce22a00_is_ignore_ident(_97345_ta->_field_ident)) {
		this->self->_method_push_err(_97345_ta->_field_token,jule::Str("ignore_ident", 12),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_type_alias_decl_kind(_97345_ta,_97361_l);
}



inline void _10e9847f0_Sema::_method_check_type_alias_decl_dup(jule::Ref<_10eeb79b0_TypeAlias> _98149_ta) {
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_98149_ta).alloc)),_98149_ta->_field_ident,_98149_ta->_field_cpp_linked)) {
		this->self->_method_push_err(_98149_ta->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_98149_ta->_field_ident)}));
	}
	this->self->_method_check_type_alias_decl_kind(_98149_ta,this->self);
}



inline jule::Bool _10e9847f0_Sema::_method_check_type_alias_decls(void) {
	jule::Bool _98944_ok{jule::Bool()};
	jule::Int _99017_i = 0LL;
	_iter_begin_4710678176:;
	if (!((_99017_i < static_cast<jule::Int>(this->self->_field_file->_field_type_aliases._method_len())))) { goto _iter_end_4710678176; }
	{
		jule::Ref<_10eeb79b0_TypeAlias> _99221_ta = this->self->_field_file->_field_type_aliases._method_at(_99017_i);
		this->self->_method_check_type_alias_decl_dup(_99221_ta);
		if ((static_cast<jule::I64>(this->self->_field_errors.len()) > 0LL)) {
			_98944_ok = false;
			return _98944_ok;
		}
	}
	_iter_next_4710678176:;
	(_99017_i)++;
	goto _iter_begin_4710678176;
	_iter_end_4710678176:;
	_98944_ok = true;
	return _98944_ok;
}



inline void _10e9847f0_Sema::_method_check_enum_items_dup(jule::Ref<_10e975f00_Enum> _100339_e) {
	{
		auto &__julec_range_expr = _100339_e->_field_items;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e975f00_EnumItem> _10e9847f0_item{jule::Ref<_10e975f00_EnumItem>()};_10e9847f0_item = *__julec_range_begin;
			_iter_begin_4710688608:;
			{
				if (_11ce22a00_is_ignore_ident(_10e9847f0_item->_field_ident)) {
					(*this)._method_push_err(_10e9847f0_item->_field_token,jule::Str("ignore_ident", 12),jule::Slice<jule::Any>({}));
				} else {
					{
						auto &__julec_range_expr = _100339_e->_field_items;
						if (__julec_range_expr.begin() != __julec_range_expr.end()) {
							auto __julec_range_begin = __julec_range_expr.begin();
							const auto __julec_range_end = __julec_range_expr.end();
							jule::Ref<_10e975f00_EnumItem> _10e9847f0_citem{jule::Ref<_10e975f00_EnumItem>()};_10e9847f0_citem = *__julec_range_begin;
							_iter_begin_4710694528:;
							{
								if ((_10e9847f0_item == _10e9847f0_citem)) {
									goto _iter_end_4710694528;
								} else if ((_10e9847f0_item->_field_ident == _10e9847f0_citem->_field_ident)) {
									(*this)._method_push_err(_10e9847f0_item->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_10e9847f0_item->_field_ident)}));
									goto _iter_end_4710694528;
								}
							}
							_iter_next_4710694528:;
							++__julec_range_begin;
							if (__julec_range_begin != __julec_range_end) { _10e9847f0_citem = *__julec_range_begin; goto _iter_begin_4710694528; }
							_iter_end_4710694528:;
						}
					}
				}
			}
			_iter_next_4710688608:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9847f0_item = *__julec_range_begin; goto _iter_begin_4710688608; }
			_iter_end_4710688608:;
		}
	}
}



inline void _10e9847f0_Sema::_method_check_enum_items_str(jule::Ref<_10e975f00_Enum> _102044_e) {
	{
		auto &__julec_range_expr = _102044_e->_field_items;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e975f00_EnumItem> _10e9847f0_item{jule::Ref<_10e975f00_EnumItem>()};_10e9847f0_item = *__julec_range_begin;
			_iter_begin_4710702416:;
			{
				if (_10e9847f0_item->_method_auto_expr()) {
					_10e9847f0_item->_field_value=jule::new_struct<_10ee8a260_Value>(new( std::nothrow ) _10ee8a260_Value(jule::Ref<_11ce1fd50_Expr>(),jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::Ref<_10eeb79b0_TypeKind>(),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_10f4ed830_new_str(_10e9847f0_item->_field_ident)))));
					_10e9847f0_item->_field_value->_field_data->_field_model=jule::Any(_10e9847f0_item->_field_value->_field_data->_field_constant);
				} else {
					jule::Ref<_10ee8a260_Data> _103025_d = this->self->_method_eval(_10e9847f0_item->_field_value->_field_expr,this->self);
					if ((!jule::real(_103025_d))) {
						goto _iter_next_4710702416;
					}
					if ((!_103025_d->_method_is_const())) {
						this->self->_method_push_err(_10e9847f0_item->_field_value->_field_expr->_field_token,jule::Str("expr_not_const", 14),jule::Slice<jule::Any>({}));
					}
					this->self->_method_check_assign_type(_102044_e->_field_kind->_field_kind,_103025_d,_10e9847f0_item->_field_token,false);
					_10e9847f0_item->_field_value->_field_data=_103025_d;
				}
			}
			_iter_next_4710702416:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9847f0_item = *__julec_range_begin; goto _iter_begin_4710702416; }
			_iter_end_4710702416:;
		}
	}
}



inline void _10e9847f0_Sema::_method_check_enum_items_int(jule::Ref<_10e975f00_Enum> _104544_e) {
	jule::U64 _104617_max = static_cast<jule::U64>(static_cast<jule::F64>(_10f53b9f0_max_of(_104544_e->_field_kind->_field_kind->_method_prim()->_method_to_str())));
	{
		auto &__julec_range_expr = _104544_e->_field_items;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e9847f0_i{jule::Int()};_10e9847f0_i = 0;
			jule::Ref<_10e975f00_EnumItem> _10e9847f0_item{jule::Ref<_10e975f00_EnumItem>()};_10e9847f0_item = *__julec_range_begin;
			_iter_begin_4710727312:;
			{
				if ((_104617_max == 0LL)) {
					this->self->_method_push_err(_10e9847f0_item->_field_token,jule::Str("overflow_limits", 15),jule::Slice<jule::Any>({}));
				} else {
					(_104617_max)--;
				}
				if (_10e9847f0_item->_method_auto_expr()) {
					_10e9847f0_item->_field_value=jule::new_struct<_10ee8a260_Value>(new( std::nothrow ) _10ee8a260_Value(jule::Ref<_11ce1fd50_Expr>(),jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::Ref<_10eeb79b0_TypeKind>(),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_10f4ed830_new_u64((_104617_max - (_104617_max - static_cast<jule::U64>(_10e9847f0_i))))))));
					_10e9847f0_item->_field_value->_field_data->_field_model=jule::Any(_10e9847f0_item->_field_value->_field_data->_field_constant);
				} else {
					jule::Ref<_10ee8a260_Data> _106225_d = this->self->_method_eval(_10e9847f0_item->_field_value->_field_expr,this->self);
					if ((!jule::real(_106225_d))) {
						goto _iter_next_4710727312;
					}
					if ((!_106225_d->_method_is_const())) {
						this->self->_method_push_err(_10e9847f0_item->_field_value->_field_expr->_field_token,jule::Str("expr_not_const", 14),jule::Slice<jule::Any>({}));
					}
					this->self->_method_check_assign_type(_104544_e->_field_kind->_field_kind,_106225_d,_10e9847f0_item->_field_token,false);
					_10e9847f0_item->_field_value->_field_data=_106225_d;
				}
			}
			_iter_next_4710727312:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e9847f0_i; _10e9847f0_item = *__julec_range_begin; goto _iter_begin_4710727312; }
			_iter_end_4710727312:;
		}
	}
}



inline void _10e9847f0_Sema::_method_check_enum_decl(jule::Ref<_10e975f00_Enum> _107739_e) {
	if (_11ce22a00_is_ignore_ident(_107739_e->_field_ident)) {
		this->self->_method_push_err(_107739_e->_field_token,jule::Str("ignore_ident", 12),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_107739_e).alloc)),_107739_e->_field_ident,false)) {
		this->self->_method_push_err(_107739_e->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_107739_e->_field_ident)}));
	}
	if ((static_cast<jule::I64>(_107739_e->_field_items.len()) == 0LL)) {
		this->self->_method_push_err(_107739_e->_field_token,jule::Str("no_member_in_enum", 17),jule::Slice<jule::Any>({jule::Any(_107739_e->_field_ident)}));
	}
	this->self->_method_check_enum_items_dup(_107739_e);
	if (jule::real(_107739_e->_field_kind)) {
		if ((!this->self->_method_check_type(_107739_e->_field_kind,this->self))) {
			return;
		}
	} else {
		_107739_e->_field_kind=jule::new_struct<_10eeb79b0_TypeSymbol>(new( std::nothrow ) _10eeb79b0_TypeSymbol(jule::Ref<_11ce1fd50_TypeDecl>(),jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("int", 3))))));
	}
	jule::Ref<_10eeb79b0_Prim> _110317_t = _107739_e->_field_kind->_field_kind->_method_prim();
	if ((!jule::real(_110317_t))) {
		this->self->_method_push_err(_107739_e->_field_token,jule::Str("invalid_type_source", 19),jule::Slice<jule::Any>({}));
		return;
	}
	{
		auto _match_expr{ true };
		if (!(_110317_t->_method_is_str() == _match_expr)) { goto _case_end_4710778016; }
		_case_begin_4710778016:;
		{
			this->self->_method_check_enum_items_str(_107739_e);
		}
		goto _match_end_4710773824;
		_case_end_4710778016:;
		if (!(_10f5ea650_is_int(_110317_t->_method_to_str()) == _match_expr)) { goto _case_end_4710777296; }
		_case_begin_4710777296:;
		{
			this->self->_method_check_enum_items_int(_107739_e);
		}
		goto _match_end_4710773824;
		_case_end_4710777296:;
		_case_begin_4710773968:;
		{
			this->self->_method_push_err(_107739_e->_field_token,jule::Str("invalid_type_source", 19),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4710773824;
		_case_end_4710773968:;
		_match_end_4710773824:;
	}
}



inline jule::Bool _10e9847f0_Sema::_method_check_enum_decls(void) {
	jule::Bool _112338_ok{jule::Bool()};
	jule::Int _112417_i = 0LL;
	_iter_begin_4710786528:;
	if (!((_112417_i < static_cast<jule::Int>(this->self->_field_file->_field_enums._method_len())))) { goto _iter_end_4710786528; }
	{
		jule::Ref<_10e975f00_Enum> _112621_e = this->self->_field_file->_field_enums._method_at(_112417_i);
		this->self->_method_check_enum_decl(_112621_e);
		if ((static_cast<jule::I64>(this->self->_field_errors.len()) > 0LL)) {
			_112338_ok = false;
			return _112338_ok;
		}
	}
	_iter_next_4710786528:;
	(_112417_i)++;
	goto _iter_begin_4710786528;
	_iter_end_4710786528:;
	_112338_ok = true;
	return _112338_ok;
}



inline jule::Bool _10e9847f0_Sema::_method_check_decl_generics(jule::Slice<jule::Ref<_11ce1fd50_GenericDecl>> _113738_generics) {
	jule::Bool _113766_ok{jule::Bool()};
	_113766_ok=true;
	{
		auto &__julec_range_expr = _113738_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e9847f0_i{jule::Int()};_10e9847f0_i = 0;
			jule::Ref<_11ce1fd50_GenericDecl> _10e9847f0_g{jule::Ref<_11ce1fd50_GenericDecl>()};_10e9847f0_g = *__julec_range_begin;
			_iter_begin_4710798704:;
			{
				if (_11ce22a00_is_ignore_ident(_10e9847f0_g->_field_ident)) {
					(*this)._method_push_err(_10e9847f0_g->_field_token,jule::Str("ignore_ident", 12),jule::Slice<jule::Any>({}));
					_113766_ok=false;
					goto _iter_next_4710798704;
				}
				_julec_label_duplication_lookup:;
				{
					auto &__julec_range_expr = _113738_generics;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Int _10e9847f0_j{jule::Int()};_10e9847f0_j = 0;
						jule::Ref<_11ce1fd50_GenericDecl> _10e9847f0_ct{jule::Ref<_11ce1fd50_GenericDecl>()};_10e9847f0_ct = *__julec_range_begin;
						_iter_begin_4710801248:;
						{
							{
								auto _match_expr{ true };
								if (!((_10e9847f0_j >= _10e9847f0_i) == _match_expr)) { goto _case_end_4710808064; }
								_case_begin_4710808064:;
								{
									goto _iter_end_4710801248;
								}
								goto _match_end_4710807760;
								_case_end_4710808064:;
								if (!((_10e9847f0_g->_field_ident == _10e9847f0_ct->_field_ident) == _match_expr)) { goto _case_end_4710808176; }
								_case_begin_4710808176:;
								{
									(*this)._method_push_err(_10e9847f0_g->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_10e9847f0_g->_field_ident)}));
									_113766_ok=false;
									goto _iter_end_4710801248;
								}
								goto _match_end_4710807760;
								_case_end_4710808176:;
								_match_end_4710807760:;
							}
						}
						_iter_next_4710801248:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { ++_10e9847f0_j; _10e9847f0_ct = *__julec_range_begin; goto _iter_begin_4710801248; }
						_iter_end_4710801248:;
					}
				}
			}
			_iter_next_4710798704:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e9847f0_i; _10e9847f0_g = *__julec_range_begin; goto _iter_begin_4710798704; }
			_iter_end_4710798704:;
		}
	}
	return _113766_ok;
}



inline jule::Bool _10e9847f0_Sema::_method_check_fn_decl_params_dup(jule::Ref<_10e56a140_Fn> _116443_f) {
	jule::Bool _116453_ok{jule::Bool()};
	_116453_ok=true;
	_julec_label_check:;
	{
		auto &__julec_range_expr = _116443_f->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e9847f0_i{jule::Int()};_10e9847f0_i = 0;
			jule::Ref<_10e56a140_Param> _10e9847f0_p{jule::Ref<_10e56a140_Param>()};_10e9847f0_p = *__julec_range_begin;
			_iter_begin_4710816688:;
			{
				{
					auto &__julec_range_expr = _116443_f->_field_generics;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_11ce1fd50_GenericDecl> _10e9847f0_g{jule::Ref<_11ce1fd50_GenericDecl>()};_10e9847f0_g = *__julec_range_begin;
						_iter_begin_4710819952:;
						{
							if ((_10e9847f0_p->_field_ident == _10e9847f0_g->_field_ident)) {
								_116453_ok=false;
								(*this)._method_push_err(_10e9847f0_p->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_10e9847f0_p->_field_ident)}));
								goto _iter_next_4710816688;
							}
						}
						_iter_next_4710819952:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _10e9847f0_g = *__julec_range_begin; goto _iter_begin_4710819952; }
						_iter_end_4710819952:;
					}
				}
				_julec_label_params_lookup:;
				{
					auto &__julec_range_expr = _116443_f->_field_params;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Int _10e9847f0_j{jule::Int()};_10e9847f0_j = 0;
						jule::Ref<_10e56a140_Param> _10e9847f0_jp{jule::Ref<_10e56a140_Param>()};_10e9847f0_jp = *__julec_range_begin;
						_iter_begin_4710824032:;
						{
							{
								auto _match_expr{ true };
								if (!((_10e9847f0_j >= _10e9847f0_i) == _match_expr)) { goto _case_end_4710829312; }
								_case_begin_4710829312:;
								{
									goto _iter_end_4710824032;
								}
								goto _match_end_4710828992;
								_case_end_4710829312:;
								if (!((_11ce22a00_is_anon_ident(_10e9847f0_p->_field_ident) || _11ce22a00_is_anon_ident(_10e9847f0_jp->_field_ident)) == _match_expr)) { goto _case_end_4710829424; }
								_case_begin_4710829424:;
								{
									goto _iter_end_4710824032;
								}
								goto _match_end_4710828992;
								_case_end_4710829424:;
								if (!((_10e9847f0_p->_field_ident == _10e9847f0_jp->_field_ident) == _match_expr)) { goto _case_end_4710829536; }
								_case_begin_4710829536:;
								{
									_116453_ok=false;
									(*this)._method_push_err(_10e9847f0_p->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_10e9847f0_p->_field_ident)}));
									goto _iter_next_4710816688;
								}
								goto _match_end_4710828992;
								_case_end_4710829536:;
								_match_end_4710828992:;
							}
						}
						_iter_next_4710824032:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { ++_10e9847f0_j; _10e9847f0_jp = *__julec_range_begin; goto _iter_begin_4710824032; }
						_iter_end_4710824032:;
					}
				}
			}
			_iter_next_4710816688:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e9847f0_i; _10e9847f0_p = *__julec_range_begin; goto _iter_begin_4710816688; }
			_iter_end_4710816688:;
		}
	}
	return _116453_ok;
}



inline jule::Bool _10e9847f0_Sema::_method_check_fn_decl_result_dup(jule::Ref<_10e56a140_Fn> _119843_f) {
	jule::Bool _119853_ok{jule::Bool()};
	_119853_ok=true;
	if (_119843_f->_method_is_void()) {
		return _119853_ok;
	}
	{
		auto &__julec_range_expr = _119843_f->_field_result->_field_idents;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e9847f0_i{jule::Int()};_10e9847f0_i = 0;
			_11ce22a00_Token _10e9847f0_v{_11ce22a00_Token()};_10e9847f0_v = *__julec_range_begin;
			_iter_begin_4710840896:;
			{
				if (_11ce22a00_is_ignore_ident(_10e9847f0_v._field_kind)) {
					goto _iter_next_4710840896;
				}
				{
					auto &__julec_range_expr = _119843_f->_field_generics;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_11ce1fd50_GenericDecl> _10e9847f0_g{jule::Ref<_11ce1fd50_GenericDecl>()};_10e9847f0_g = *__julec_range_begin;
						_iter_begin_4710846272:;
						{
							if ((_10e9847f0_v._field_kind == _10e9847f0_g->_field_ident)) {
								goto _julec_label_exist;
							}
						}
						_iter_next_4710846272:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _10e9847f0_g = *__julec_range_begin; goto _iter_begin_4710846272; }
						_iter_end_4710846272:;
					}
				}
				{
					auto &__julec_range_expr = _119843_f->_field_params;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_10e56a140_Param> _10e9847f0_p{jule::Ref<_10e56a140_Param>()};_10e9847f0_p = *__julec_range_begin;
						_iter_begin_4710850352:;
						{
							if ((_10e9847f0_v._field_kind == _10e9847f0_p->_field_ident)) {
								goto _julec_label_exist;
							}
						}
						_iter_next_4710850352:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _10e9847f0_p = *__julec_range_begin; goto _iter_begin_4710850352; }
						_iter_end_4710850352:;
					}
				}
				_julec_label_itself_lookup:;
				{
					auto &__julec_range_expr = _119843_f->_field_result->_field_idents;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Int _10e9847f0_j{jule::Int()};_10e9847f0_j = 0;
						_11ce22a00_Token _10e9847f0_jv{_11ce22a00_Token()};_10e9847f0_jv = *__julec_range_begin;
						_iter_begin_4710854880:;
						{
							{
								auto _match_expr{ true };
								if (!((_10e9847f0_j >= _10e9847f0_i) == _match_expr)) { goto _case_end_4710857936; }
								_case_begin_4710857936:;
								{
									goto _iter_end_4710854880;
								}
								goto _match_end_4710857632;
								_case_end_4710857936:;
								if (!((_10e9847f0_jv._field_kind == _10e9847f0_v._field_kind) == _match_expr)) { goto _case_end_4710858048; }
								_case_begin_4710858048:;
								{
									goto _julec_label_exist;
								}
								goto _match_end_4710857632;
								_case_end_4710858048:;
								_match_end_4710857632:;
							}
						}
						_iter_next_4710854880:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { ++_10e9847f0_j; _10e9847f0_jv = *__julec_range_begin; goto _iter_begin_4710854880; }
						_iter_end_4710854880:;
					}
				}
				goto _iter_next_4710840896;
				_julec_label_exist:;
				(*this)._method_push_err(_10e9847f0_v,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_10e9847f0_v._field_kind)}));
				_119853_ok=false;
			}
			_iter_next_4710840896:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e9847f0_i; _10e9847f0_v = *__julec_range_begin; goto _iter_begin_4710840896; }
			_iter_end_4710840896:;
		}
	}
	return _119853_ok;
}



inline jule::Bool _10e9847f0_Sema::_method_check_fn_decl_types(jule::Ref<_10e56a140_Fn> _124643_f) {
	jule::Bool _124653_ok{jule::Bool()};
	_124653_ok=true;
	jule::Slice<jule::Ref<_11ce1fd50_GenericDecl>> _124917_generics = _124643_f->_field_generics;
	if (jule::real(_124643_f->_field_owner)) {
		_124917_generics=append(_124917_generics,_124643_f->_field_owner->_field_generics);
	}
	{
		auto &__julec_range_expr = _124643_f->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e56a140_Param> _10e9847f0_p{jule::Ref<_10e56a140_Param>()};_10e9847f0_p = *__julec_range_begin;
			_iter_begin_4710874416:;
			{
				if ((!_10e9847f0_p->_method_is_self())) {
					jule::Ref<_10eeb79b0_TypeKind> _125625_kind = this->self->_method_build_non_generic_type_kind(_10e9847f0_p->_field_kind->_field_decl,_124917_generics);
					_124653_ok=(jule::real(_125625_kind) && _124653_ok);
					_10e9847f0_p->_field_kind->_field_kind=_125625_kind;
				}
			}
			_iter_next_4710874416:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9847f0_p = *__julec_range_begin; goto _iter_begin_4710874416; }
			_iter_end_4710874416:;
		}
	}
	if ((!_124643_f->_method_is_void())) {
		jule::Ref<_10eeb79b0_TypeKind> _126321_kind = this->self->_method_build_non_generic_type_kind(_124643_f->_field_result->_field_kind->_field_decl,_124917_generics);
		_124653_ok=(jule::real(_126321_kind) && _124653_ok);
		_124643_f->_field_result->_field_kind->_field_kind=_126321_kind;
	}
	_124653_ok = _124653_ok;
	return _124653_ok;
}



inline jule::Bool _10e9847f0_Sema::_method_check_fn_decl_prototype(jule::Ref<_10e56a140_Fn> _127347_f) {
	jule::Bool _127357_ok{jule::Bool()};
	{
		auto _match_expr{ true };
		if (!((!this->self->_method_check_decl_generics(_127347_f->_field_generics)) == _match_expr)) { goto _case_end_4710889232; }
		_case_begin_4710889232:;
		{
			_127357_ok = false;
			return _127357_ok;
		}
		goto _match_end_4710888656;
		_case_end_4710889232:;
		if (!((!this->self->_method_check_fn_decl_params_dup(_127347_f)) == _match_expr)) { goto _case_end_4710889344; }
		_case_begin_4710889344:;
		{
			_127357_ok = false;
			return _127357_ok;
		}
		goto _match_end_4710888656;
		_case_end_4710889344:;
		if (!((!this->self->_method_check_fn_decl_result_dup(_127347_f)) == _match_expr)) { goto _case_end_4710889456; }
		_case_begin_4710889456:;
		{
			_127357_ok = false;
			return _127357_ok;
		}
		goto _match_end_4710888656;
		_case_end_4710889456:;
		if (!((!this->self->_method_check_fn_decl_types(_127347_f)) == _match_expr)) { goto _case_end_4710890384; }
		_case_begin_4710890384:;
		{
			_127357_ok = false;
			return _127357_ok;
		}
		goto _match_end_4710888656;
		_case_end_4710890384:;
		_case_begin_4710888928:;
		{
			_127357_ok = true;
			return _127357_ok;
		}
		goto _match_end_4710888656;
		_case_end_4710888928:;
		_match_end_4710888656:;
	}
}



inline void _10e9847f0_Sema::_method_check_trait_decl_method(jule::Ref<_10e56a140_Fn> _129247_f) {
	if (_11ce22a00_is_ignore_ident(_129247_f->_field_ident)) {
		this->self->_method_push_err(_129247_f->_field_token,jule::Str("ignore_ident", 12),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_fn_decl_prototype(_129247_f);
	_129247_f->_field_sema=this->self;
}



inline void _10e9847f0_Sema::_method_check_trait_decl_methods(jule::Ref<_10e3d6eb0_Trait> _130148_t) {
	{
		auto &__julec_range_expr = _130148_t->_field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e9847f0_i{jule::Int()};_10e9847f0_i = 0;
			jule::Ref<_10e56a140_Fn> _10e9847f0_f{jule::Ref<_10e56a140_Fn>()};_10e9847f0_f = *__julec_range_begin;
			_iter_begin_4710907408:;
			{
				this->self->_method_check_trait_decl_method(_10e9847f0_f);
				if ((static_cast<jule::I64>(this->self->_field_errors.len()) > 0LL)) {
					return;
				}
				_julec_label_duplicate_lookup:;
				{
					auto &__julec_range_expr = _130148_t->_field_methods;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Int _10e9847f0_j{jule::Int()};_10e9847f0_j = 0;
						jule::Ref<_10e56a140_Fn> _10e9847f0_jf{jule::Ref<_10e56a140_Fn>()};_10e9847f0_jf = *__julec_range_begin;
						_iter_begin_4710914528:;
						{
							{
								auto _match_expr{ true };
								if (!((_10e9847f0_j >= _10e9847f0_i) == _match_expr)) { goto _case_end_4710917296; }
								_case_begin_4710917296:;
								{
									goto _iter_end_4710914528;
								}
								goto _match_end_4710916992;
								_case_end_4710917296:;
								if (!((_10e9847f0_f->_field_ident == _10e9847f0_jf->_field_ident) == _match_expr)) { goto _case_end_4710917408; }
								_case_begin_4710917408:;
								{
									this->self->_method_push_err(_10e9847f0_f->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_10e9847f0_f->_field_ident)}));
									goto _iter_end_4710914528;
								}
								goto _match_end_4710916992;
								_case_end_4710917408:;
								_match_end_4710916992:;
							}
						}
						_iter_next_4710914528:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { ++_10e9847f0_j; _10e9847f0_jf = *__julec_range_begin; goto _iter_begin_4710914528; }
						_iter_end_4710914528:;
					}
				}
			}
			_iter_next_4710907408:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e9847f0_i; _10e9847f0_f = *__julec_range_begin; goto _iter_begin_4710907408; }
			_iter_end_4710907408:;
		}
	}
}



inline void _10e9847f0_Sema::_method_check_trait_decl(jule::Ref<_10e3d6eb0_Trait> _133140_t) {
	if (_11ce22a00_is_ignore_ident(_133140_t->_field_ident)) {
		this->self->_method_push_err(_133140_t->_field_token,jule::Str("ignore_ident", 12),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_133140_t).alloc)),_133140_t->_field_ident,false)) {
		this->self->_method_push_err(_133140_t->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_133140_t->_field_ident)}));
	}
	this->self->_method_check_trait_decl_methods(_133140_t);
}



inline jule::Bool _10e9847f0_Sema::_method_check_trait_decls(void) {
	jule::Bool _134239_ok{jule::Bool()};
	jule::Int _134317_i = 0LL;
	_iter_begin_4710936240:;
	if (!((_134317_i < static_cast<jule::Int>(this->self->_field_file->_field_traits._method_len())))) { goto _iter_end_4710936240; }
	{
		jule::Ref<_10e3d6eb0_Trait> _134521_t = this->self->_field_file->_field_traits._method_at(_134317_i);
		this->self->_method_check_trait_decl(_134521_t);
		if ((static_cast<jule::I64>(this->self->_field_errors.len()) > 0LL)) {
			_134239_ok = false;
			return _134239_ok;
		}
	}
	_iter_next_4710936240:;
	(_134317_i)++;
	goto _iter_begin_4710936240;
	_iter_end_4710936240:;
	_134239_ok = true;
	return _134239_ok;
}



inline jule::Bool _10e9847f0_Sema::_method_check_trait_impl_methods(jule::Ref<_10e3d6eb0_Trait> _135647_base,jule::Ref<_10e97d820_Impl> _135661_ipl) {
	jule::Bool _135675_ok{jule::Bool()};
	_135675_ok=true;
	{
		auto &__julec_range_expr = _135661_ipl->_field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e56a140_Fn> _10e9847f0_f{jule::Ref<_10e56a140_Fn>()};_10e9847f0_f = *__julec_range_begin;
			_iter_begin_4710948896:;
			{
				if ((!jule::real(_135647_base->_method_find_method(_10e9847f0_f->_field_ident)))) {
					(*this)._method_push_err(_10e9847f0_f->_field_token,jule::Str("trait_have_not_ident", 20),jule::Slice<jule::Any>({jule::Any(_135647_base->_field_ident),jule::Any(_10e9847f0_f->_field_ident)}));
					_135675_ok=false;
				}
			}
			_iter_next_4710948896:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9847f0_f = *__julec_range_begin; goto _iter_begin_4710948896; }
			_iter_end_4710948896:;
		}
	}
	return _135675_ok;
}



inline jule::Bool _10e9847f0_Sema::_method_impl_to_struct(jule::Ref<_10e3fc8f0_Struct> _136738_dest,jule::Ref<_10e97d820_Impl> _136757_ipl) {
	jule::Bool _136771_ok{jule::Bool()};
	_136771_ok=true;
	{
		auto &__julec_range_expr = _136757_ipl->_field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e56a140_Fn> _10e9847f0_f{jule::Ref<_10e56a140_Fn>()};_10e9847f0_f = *__julec_range_begin;
			_iter_begin_4710960880:;
			{
				if ((jule::real(_136738_dest->_method_find_method(_10e9847f0_f->_field_ident,_10e9847f0_f->_field_statically)) || jule::real(_136738_dest->_method_find_field(_10e9847f0_f->_field_ident)))) {
					this->self->_method_push_err(_10e9847f0_f->_field_token,jule::Str("struct_already_have_ident", 25),jule::Slice<jule::Any>({jule::Any(_136738_dest->_field_ident),jule::Any(_10e9847f0_f->_field_ident)}));
					_136771_ok=false;
					goto _iter_next_4710960880;
				}
				if (((static_cast<jule::I64>(_136738_dest->_field_generics.len()) > 0LL) && (static_cast<jule::I64>(_10e9847f0_f->_field_generics.len()) > 0LL))) {
					{
						auto &__julec_range_expr = _10e9847f0_f->_field_generics;
						if (__julec_range_expr.begin() != __julec_range_expr.end()) {
							auto __julec_range_begin = __julec_range_expr.begin();
							const auto __julec_range_end = __julec_range_expr.end();
							jule::Ref<_11ce1fd50_GenericDecl> _10e9847f0_fg{jule::Ref<_11ce1fd50_GenericDecl>()};_10e9847f0_fg = *__julec_range_begin;
							_iter_begin_4710971984:;
							{
								{
									auto &__julec_range_expr = _136738_dest->_field_generics;
									if (__julec_range_expr.begin() != __julec_range_expr.end()) {
										auto __julec_range_begin = __julec_range_expr.begin();
										const auto __julec_range_end = __julec_range_expr.end();
										jule::Ref<_11ce1fd50_GenericDecl> _10e9847f0_dg{jule::Ref<_11ce1fd50_GenericDecl>()};_10e9847f0_dg = *__julec_range_begin;
										_iter_begin_4710973536:;
										{
											if ((_10e9847f0_fg->_field_ident == _10e9847f0_dg->_field_ident)) {
												this->self->_method_push_err(_10e9847f0_fg->_field_token,jule::Str("method_has_generic_with_same_ident", 34),jule::Slice<jule::Any>({}));
												_136771_ok=false;
											}
										}
										_iter_next_4710973536:;
										++__julec_range_begin;
										if (__julec_range_begin != __julec_range_end) { _10e9847f0_dg = *__julec_range_begin; goto _iter_begin_4710973536; }
										_iter_end_4710973536:;
									}
								}
							}
							_iter_next_4710971984:;
							++__julec_range_begin;
							if (__julec_range_begin != __julec_range_end) { _10e9847f0_fg = *__julec_range_begin; goto _iter_begin_4710971984; }
							_iter_end_4710971984:;
						}
					}
				}
				_10e9847f0_f->_field_sema=this->self;
				_10e9847f0_f->_field_owner=_136738_dest;
				_136738_dest->_field_methods._method_push(_10e9847f0_f);
			}
			_iter_next_4710960880:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9847f0_f = *__julec_range_begin; goto _iter_begin_4710960880; }
			_iter_end_4710960880:;
		}
	}
	return _136771_ok;
}



inline void _10e9847f0_Sema::_method_impl_trait(jule::Ref<_10e97d820_Impl> _139534_decl) {
	jule::Ref<_10e3d6eb0_Trait> _139617_base = this->self->_method_find_trait(_139534_decl->_field_base._field_kind);
	if ((!jule::real(_139617_base))) {
		_139617_base=_10f3f9210_find_builtin_trait(_139534_decl->_field_base._field_kind);
	}
	if ((!jule::real(_139617_base))) {
		this->self->_method_push_err(_139534_decl->_field_base,jule::Str("impl_base_not_exist", 19),jule::Slice<jule::Any>({jule::Any(_139534_decl->_field_base._field_kind)}));
		return;
	}
	
	jule::Ref<_10e3fc8f0_Struct> _140917_dest = this->self->_method_find_struct(_139534_decl->_field_dest._field_kind,false);
	if ((!jule::real(_140917_dest))) {
		this->self->_method_push_err(_139534_decl->_field_dest,jule::Str("impl_dest_not_exist", 19),jule::Slice<jule::Any>({jule::Any(_139534_decl->_field_dest._field_kind)}));
		return;
	}
	if ((_140917_dest->_field_token._field_file->_method_dir() != this->self->_field_file->_field_file->_method_dir())) {
		this->self->_method_push_err(_139534_decl->_field_dest,jule::Str("illegal_impl_out_of_package", 27),jule::Slice<jule::Any>({}));
		return;
	}
	_139617_base->_field_implemented=append(_139617_base->_field_implemented,jule::Slice<jule::Ref<_10e3fc8f0_Struct>>({_140917_dest}));
	_140917_dest->_field_implements=append(_140917_dest->_field_implements,jule::Slice<jule::Ref<_10e3d6eb0_Trait>>({_139617_base}));
	{
		auto _match_expr{ true };
		if (!((!this->self->_method_check_trait_impl_methods(_139617_base,_139534_decl)) == _match_expr)) { goto _case_end_4711010352; }
		_case_begin_4711010352:;
		{
			return;
		}
		goto _match_end_4711007472;
		_case_end_4711010352:;
		if (!((!this->self->_method_impl_to_struct(_140917_dest,_139534_decl)) == _match_expr)) { goto _case_end_4711010464; }
		_case_begin_4711010464:;
		{
			return;
		}
		goto _match_end_4711007472;
		_case_end_4711010464:;
		_match_end_4711007472:;
	}
}



inline void _10e9847f0_Sema::_method_impl_struct(jule::Ref<_10e97d820_Impl> _143235_decl) {
	
	jule::Ref<_10e3fc8f0_Struct> _143717_dest = this->self->_method_find_struct(_143235_decl->_field_dest._field_kind,false);
	if ((!jule::real(_143717_dest))) {
		this->self->_method_push_err(_143235_decl->_field_dest,jule::Str("impl_dest_not_exist", 19),jule::Slice<jule::Any>({jule::Any(_143235_decl->_field_dest._field_kind)}));
		return;
	}
	if ((_143717_dest->_field_token._field_file->_method_dir() != this->self->_field_file->_field_file->_method_dir())) {
		this->self->_method_push_err(_143235_decl->_field_dest,jule::Str("illegal_impl_out_of_package", 27),jule::Slice<jule::Any>({}));
		return;
	}
	{
		auto _match_expr{ true };
		if (!((!this->self->_method_impl_to_struct(_143717_dest,_143235_decl)) == _match_expr)) { goto _case_end_4711030304; }
		_case_begin_4711030304:;
		{
			return;
		}
		goto _match_end_4711022608;
		_case_end_4711030304:;
		_match_end_4711022608:;
	}
}



inline void _10e9847f0_Sema::_method_impl_impl(jule::Ref<_10e97d820_Impl> _145533_decl) {
	{
		auto _match_expr{ true };
		if (!(_145533_decl->_method_is_trait_impl() == _match_expr)) { goto _case_end_4711034640; }
		_case_begin_4711034640:;
		{
			this->self->_method_impl_trait(_145533_decl);
		}
		goto _match_end_4711034320;
		_case_end_4711034640:;
		if (!(_145533_decl->_method_is_struct_impl() == _match_expr)) { goto _case_end_4711034752; }
		_case_begin_4711034752:;
		{
			this->self->_method_impl_struct(_145533_decl);
		}
		goto _match_end_4711034320;
		_case_end_4711034752:;
		_match_end_4711034320:;
	}
}



inline void _10e9847f0_Sema::_method_check_var_decl(jule::Ref<_10ebc2ad0_Var> _146738_decl,jule::Trait<_10f3df410_Lookup> _146750_l) {
	if (_11ce22a00_is_ignore_ident(_146738_decl->_field_ident)) {
		this->self->_method_push_err(_146738_decl->_field_token,jule::Str("ignore_ident", 12),jule::Slice<jule::Any>({}));
	}
	if (_146738_decl->_method_is_auto_typed()) {
		if (_146738_decl->_field_statically) {
			this->self->_method_push_err(_146738_decl->_field_token,jule::Str("static_is_auto_typed", 20),jule::Slice<jule::Any>({}));
		}
		if ((!_146738_decl->_method_is_initialized())) {
			this->self->_method_push_err(_146738_decl->_field_token,jule::Str("missing_autotype_value", 22),jule::Slice<jule::Any>({}));
		}
	} else {
		this->self->_method_check_type(_146738_decl->_field_kind,_146750_l);
	}
	if ((_146738_decl->_field_constant && _146738_decl->_field_reference)) {
		this->self->_method_push_err(_146738_decl->_field_token,jule::Str("constant_reference", 18),jule::Slice<jule::Any>({}));
	}
	if ((!_146738_decl->_method_is_initialized())) {
		if (_146738_decl->_field_constant) {
			this->self->_method_push_err(_146738_decl->_field_token,jule::Str("const_var_not_have_expr", 23),jule::Slice<jule::Any>({}));
		}
		if (_146738_decl->_field_statically) {
			this->self->_method_push_err(_146738_decl->_field_token,jule::Str("static_not_have_expr", 20),jule::Slice<jule::Any>({}));
		}
		if (_146738_decl->_field_reference) {
			this->self->_method_push_err(_146738_decl->_field_token,jule::Str("reference_not_initialized", 25),jule::Slice<jule::Any>({}));
		}
	}
}



inline void _10e9847f0_Sema::_method_check_global_var_decl(jule::Ref<_10ebc2ad0_Var> _150445_decl) {
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_150445_decl).alloc)),_150445_decl->_field_ident,_150445_decl->_field_cpp_linked)) {
		this->self->_method_push_err(_150445_decl->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_150445_decl->_field_ident)}));
	}
	if ((_150445_decl->_field_cpp_linked && _150445_decl->_field_constant)) {
		this->self->_method_push_err(_150445_decl->_field_token,jule::Str("cpp_linked_variable_is_const", 28),jule::Slice<jule::Any>({}));
	}
	if ((((!_150445_decl->_field_cpp_linked) && (!_150445_decl->_field_constant)) && (!_150445_decl->_field_statically))) {
		this->self->_method_push_err(_150445_decl->_field_token,jule::Str("global_not_static", 17),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_var_decl(_150445_decl,this->self);
}



inline jule::Bool _10e9847f0_Sema::_method_check_global_decls(void) {
	jule::Bool _151840_ok{jule::Bool()};
	jule::Int _151917_i = 0LL;
	_iter_begin_4711084080:;
	if (!((_151917_i < static_cast<jule::Int>(this->self->_field_file->_field_vars._method_len())))) { goto _iter_end_4711084080; }
	{
		jule::Ref<_10ebc2ad0_Var> _152121_decl = this->self->_field_file->_field_vars._method_at(_151917_i);
		this->self->_method_check_global_var_decl(_152121_decl);
		if ((static_cast<jule::I64>(this->self->_field_errors.len()) > 0LL)) {
			_151840_ok = false;
			return _151840_ok;
		}
	}
	_iter_next_4711084080:;
	(_151917_i)++;
	goto _iter_begin_4711084080;
	_iter_end_4711084080:;
	_151840_ok = true;
	return _151840_ok;
}



inline jule::Bool _10e9847f0_Sema::_method_check_struct_trait_impl(jule::Ref<_10e3fc8f0_Struct> _153247_strct,jule::Ref<_10e3d6eb0_Trait> _153267_trt) {
	jule::Bool _153282_ok{jule::Bool()};
	{
		auto &__julec_range_expr = _153267_trt->_field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e56a140_Fn> _10e9847f0_tf{jule::Ref<_10e56a140_Fn>()};_10e9847f0_tf = *__julec_range_begin;
			_iter_begin_4711097376:;
			{
				jule::Bool _153421_exist = false;
				jule::Ref<_10e56a140_Fn> _153521_sf = _153247_strct->_method_find_method(_10e9847f0_tf->_field_ident,_10e9847f0_tf->_field_statically);
				jule::Ref<_10e56a140_FnIns> _153617_tf_k = this->self->_method_get_trait_check_fn_kind(_10e9847f0_tf);
				if (jule::real(_153521_sf)) {
					jule::Ref<_10e56a140_FnIns> _153821_sf_k = this->self->_method_get_trait_check_fn_kind(_153521_sf);
					_153821_sf_k;
					_153421_exist=(((_153617_tf_k->_field_decl->_field_public == _153821_sf_k->_field_decl->_field_public) && (_153617_tf_k->_field_decl->_field_ident == _153821_sf_k->_field_decl->_field_ident)) && _153617_tf_k->_method_equals(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_153821_sf_k))));
				}
				if ((!_153421_exist)) {
					this->self->_method_push_err(_153247_strct->_field_token,jule::Str("not_impl_trait_def", 18),jule::Slice<jule::Any>({jule::Any(_153267_trt->_field_ident),jule::Any(_153617_tf_k->_method_to_str())}));
					_153282_ok=false;
				}
			}
			_iter_next_4711097376:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9847f0_tf = *__julec_range_begin; goto _iter_begin_4711097376; }
			_iter_end_4711097376:;
		}
	}
	return _153282_ok;
}



inline jule::Bool _10e9847f0_Sema::_method_check_struct_impls(jule::Ref<_10e3fc8f0_Struct> _155442_strct) {
	jule::Bool _155460_ok{jule::Bool()};
	_155460_ok=true;
	{
		auto &__julec_range_expr = _155442_strct->_field_implements;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e3d6eb0_Trait> _10e9847f0_trt{jule::Ref<_10e3d6eb0_Trait>()};_10e9847f0_trt = *__julec_range_begin;
			_iter_begin_4711119984:;
			{
				_155460_ok=(this->self->_method_check_struct_trait_impl(_155442_strct,_10e9847f0_trt) && _155460_ok);
			}
			_iter_next_4711119984:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9847f0_trt = *__julec_range_begin; goto _iter_begin_4711119984; }
			_iter_end_4711119984:;
		}
	}
	_155460_ok = _155460_ok;
	return _155460_ok;
}



inline jule::Bool _10e9847f0_Sema::_method_check_struct_fields(jule::Ref<_10e3fc8f0_Struct> _156243_st) {
	jule::Bool _156258_ok{jule::Bool()};
	_156258_ok=true;
	jule::Ref<_10eeb79b0_TypeChecker> _156517_tc = jule::new_struct<_10eeb79b0_TypeChecker>(new( std::nothrow ) _10eeb79b0_TypeChecker(this->self,this->self,jule::new_struct<_10eeb79b0_Referencer>(new( std::nothrow ) _10eeb79b0_Referencer(_156243_st->_field_ident,_156243_st,nullptr)),_11ce22a00_Token(),_156243_st->_field_generics,jule::Slice<jule::Ref<_10eeb79b0_TypeAlias>>(),jule::Bool()));
	jule::I64 _157513_n = static_cast<jule::I64>(_156243_st->_field_instances.len());
	{
		auto &__julec_range_expr = _156243_st->_field_fields;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e3fc8f0_Field> _10e9847f0_f{jule::Ref<_10e3fc8f0_Field>()};_10e9847f0_f = *__julec_range_begin;
			_iter_begin_4711131936:;
			{
				_10e9847f0_f->_field_owner=_156243_st;
				_10e9847f0_f->_field_kind->_field_kind=_156517_tc->_method_check_decl(_10e9847f0_f->_field_kind->_field_decl);
				_156258_ok=(jule::real(_10e9847f0_f->_field_kind->_field_kind) && _156258_ok);
				{
					auto &__julec_range_expr = _156243_st->_field_fields;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_10e3fc8f0_Field> _10e9847f0_cf{jule::Ref<_10e3fc8f0_Field>()};_10e9847f0_cf = *__julec_range_begin;
						_iter_begin_4711138224:;
						{
							if ((_10e9847f0_f == _10e9847f0_cf)) {
								goto _iter_end_4711138224;
							} else if ((_10e9847f0_f->_field_ident == _10e9847f0_cf->_field_ident)) {
								this->self->_method_push_err(_10e9847f0_f->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_10e9847f0_f->_field_ident)}));
								_156258_ok=false;
							}
						}
						_iter_next_4711138224:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _10e9847f0_cf = *__julec_range_begin; goto _iter_begin_4711138224; }
						_iter_end_4711138224:;
					}
				}
			}
			_iter_next_4711131936:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9847f0_f = *__julec_range_begin; goto _iter_begin_4711131936; }
			_iter_end_4711131936:;
		}
	}
	if ((_156258_ok && (_157513_n != static_cast<jule::I64>(_156243_st->_field_instances.len())))) {
		jule::drop(_156517_tc->_field_referencer);
		_156243_st->_field_instances=_156243_st->_field_instances.slice(0LL,static_cast<jule::Int>(_157513_n));
		{
			auto &__julec_range_expr = _156243_st->_field_fields;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_10e3fc8f0_Field> _10e9847f0_f{jule::Ref<_10e3fc8f0_Field>()};_10e9847f0_f = *__julec_range_begin;
				_iter_begin_4711146160:;
				{
					_10e9847f0_f->_field_kind->_field_kind=_156517_tc->_method_check_decl(_10e9847f0_f->_field_kind->_field_decl);
				}
				_iter_next_4711146160:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _10e9847f0_f = *__julec_range_begin; goto _iter_begin_4711146160; }
				_iter_end_4711146160:;
			}
		}
	}
	_156258_ok = _156258_ok;
	return _156258_ok;
}



inline void _10e9847f0_Sema::_method_check_struct_decl(jule::Ref<_10e3fc8f0_Struct> _160341_strct) {
	if (_11ce22a00_is_ignore_ident(_160341_strct->_field_ident)) {
		this->self->_method_push_err(_160341_strct->_field_token,jule::Str("ignore_ident", 12),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_160341_strct).alloc)),_160341_strct->_field_ident,_160341_strct->_field_cpp_linked)) {
		this->self->_method_push_err(_160341_strct->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_160341_strct->_field_ident)}));
	}
	_160341_strct->_field_sema=this->self;
	{
		auto _match_expr{ true };
		if (!((!this->self->_method_check_decl_generics(_160341_strct->_field_generics)) == _match_expr)) { goto _case_end_4711162416; }
		_case_begin_4711162416:;
		{
			return;
		}
		goto _match_end_4711162816;
		_case_end_4711162416:;
		if (!((!this->self->_method_check_struct_fields(_160341_strct)) == _match_expr)) { goto _case_end_4711162528; }
		_case_begin_4711162528:;
		{
			return;
		}
		goto _match_end_4711162816;
		_case_end_4711162528:;
		if (!((!this->self->_method_check_struct_impls(_160341_strct)) == _match_expr)) { goto _case_end_4711162976; }
		_case_begin_4711162976:;
		{
			return;
		}
		goto _match_end_4711162816;
		_case_end_4711162976:;
		_match_end_4711162816:;
	}
}



inline jule::Bool _10e9847f0_Sema::_method_check_struct_decls(void) {
	jule::Bool _161940_ok{jule::Bool()};
	jule::Int _162017_i = 0LL;
	_iter_begin_4711170096:;
	if (!((_162017_i < static_cast<jule::Int>(this->self->_field_file->_field_structs._method_len())))) { goto _iter_end_4711170096; }
	{
		jule::Ref<_10e3fc8f0_Struct> _162221_strct = this->self->_field_file->_field_structs._method_at(_162017_i);
		this->self->_method_check_struct_decl(_162221_strct);
		if ((static_cast<jule::I64>(this->self->_field_errors.len()) > 0LL)) {
			_161940_ok = false;
			return _161940_ok;
		}
	}
	_iter_next_4711170096:;
	(_162017_i)++;
	goto _iter_begin_4711170096;
	_iter_end_4711170096:;
	_161940_ok = true;
	return _161940_ok;
}



inline void _10e9847f0_Sema::_method_check_fn_decl(jule::Ref<_10e56a140_Fn> _163437_f) {
	if (_11ce22a00_is_ignore_ident(_163437_f->_field_ident)) {
		this->self->_method_push_err(_163437_f->_field_token,jule::Str("ignore_ident", 12),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_163437_f).alloc)),_163437_f->_field_ident,_163437_f->_field_cpp_linked)) {
		this->self->_method_push_err(_163437_f->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_163437_f->_field_ident)}));
	}
	_163437_f->_field_sema=this->self;
	this->self->_method_check_fn_decl_prototype(_163437_f);
}



inline jule::Bool _10e9847f0_Sema::_method_check_fn_decls(void) {
	jule::Bool _164636_ok{jule::Bool()};
	jule::Int _164717_i = 0LL;
	_iter_begin_4711193456:;
	if (!((_164717_i < static_cast<jule::Int>(this->self->_field_file->_field_funcs._method_len())))) { goto _iter_end_4711193456; }
	{
		jule::Ref<_10e56a140_Fn> _164921_f = this->self->_field_file->_field_funcs._method_at(_164717_i);
		this->self->_method_check_fn_decl(_164921_f);
		if ((static_cast<jule::I64>(this->self->_field_errors.len()) > 0LL)) {
			_164636_ok = false;
			return _164636_ok;
		}
	}
	_iter_next_4711193456:;
	(_164717_i)++;
	goto _iter_begin_4711193456;
	_iter_end_4711193456:;
	_164636_ok = true;
	return _164636_ok;
}



inline jule::Bool _10e9847f0_Sema::_method_check_directive_pass(_10e8ca650_Pass _166039_pass) {
	jule::Bool _166053_ok{jule::Bool()};
	if ((_166039_pass._field_text == jule::Str("", 0))) {
		_166053_ok = true;
		return _166053_ok;
	}
	if ((_166039_pass._field_text[static_cast<jule::Int>(0LL)] != '-')) {
		(*this)._method_push_err(_166039_pass._field_token,jule::Str("pass_directive_not_starts_with_dash", 35),jule::Slice<jule::Any>({}));
		_166053_ok = false;
		return _166053_ok;
	}
	_166053_ok = true;
	return _166053_ok;
}



inline jule::Bool _10e9847f0_Sema::_method_check_passes(void) {
	jule::Bool _167333_ok{jule::Bool()};
	_167333_ok=true;
	jule::Int _167517_i = 0LL;
	_iter_begin_4711214944:;
	if (!((_167517_i < static_cast<jule::Int>((*this)._field_file->_field_passes._method_len())))) { goto _iter_end_4711214944; }
	{
		_10e8ca650_Pass _167717_pass = (*this)._field_file->_field_passes._method_at(_167517_i);
		_167333_ok=((*this)._method_check_directive_pass(_167717_pass) && _167333_ok);
	}
	_iter_next_4711214944:;
	(_167517_i)++;
	goto _iter_begin_4711214944;
	_iter_end_4711214944:;
	return _167333_ok;
}



inline jule::Bool _10e9847f0_Sema::_method_check_struct_derive_illegal_cycles(jule::Str _168353_derive,jule::Ref<_10e3fc8f0_Struct> _168366_st1,jule::Ref<_10eeb79b0_TypeKind> _168384_k) {
	jule::Bool _1683100_ok{jule::Bool()};
	jule::Fn<jule::Ref<_10e3fc8f0_Struct>(jule::Ref<_10eeb79b0_TypeKind>)> _168417_get_struct_from_kind = nullptr;
	_168417_get_struct_from_kind=jule::Fn<jule::Ref<_10e3fc8f0_Struct>(jule::Ref<_10eeb79b0_TypeKind>)>([&](jule::Ref<_10eeb79b0_TypeKind> _168539_k) mutable -> jule::Ref<_10e3fc8f0_Struct> {
		{
			auto _match_expr{ true };
			if (!((!jule::real(_168539_k)) == _match_expr)) { goto _case_end_4711235616; }
			_case_begin_4711235616:;
			{
				return jule::new_ref<_10e3fc8f0_Struct>();
			}
			goto _match_end_4711233472;
			_case_end_4711235616:;
			if (!(jule::real(_168539_k->_method_strct()) == _match_expr)) { goto _case_end_4711235248; }
			_case_begin_4711235248:;
			{
				return _168539_k->_method_strct()->_field_decl;
			}
			goto _match_end_4711233472;
			_case_end_4711235248:;
			if (!(jule::real(_168539_k->_method_ref()) == _match_expr)) { goto _case_end_4711235360; }
			_case_begin_4711235360:;
			{
				return _168417_get_struct_from_kind(_168539_k->_method_ref()->_field_elem);
			}
			goto _match_end_4711233472;
			_case_end_4711235360:;
			if (!(jule::real(_168539_k->_method_slc()) == _match_expr)) { goto _case_end_4711234880; }
			_case_begin_4711234880:;
			{
				return _168417_get_struct_from_kind(_168539_k->_method_slc()->_field_elem);
			}
			goto _match_end_4711233472;
			_case_end_4711234880:;
			if (!(jule::real(_168539_k->_method_arr()) == _match_expr)) { goto _case_end_4711234992; }
			_case_begin_4711234992:;
			{
				return _168417_get_struct_from_kind(_168539_k->_method_arr()->_field_elem);
			}
			goto _match_end_4711233472;
			_case_end_4711234992:;
			if (!(jule::real(_168539_k->_method_ptr()) == _match_expr)) { goto _case_end_4711234048; }
			_case_begin_4711234048:;
			{
				return jule::new_ref<_10e3fc8f0_Struct>();
			}
			goto _match_end_4711233472;
			_case_end_4711234048:;
			_case_begin_4711233744:;
			{
				return jule::new_ref<_10e3fc8f0_Struct>();
			}
			goto _match_end_4711233472;
			_case_end_4711233744:;
			_match_end_4711233472:;
		}
	});
	jule::Ref<_10e3fc8f0_Struct> _171217_st2 = _168417_get_struct_from_kind(_168384_k);
	if ((!jule::real(_171217_st2))) {
		_1683100_ok = true;
		return _1683100_ok;
	}
	if (((_168366_st1).alloc == (_171217_st2).alloc)) {
		(*this)._method_push_err(_168366_st1->_field_token,jule::Str("derive_illegal_cycle_refers_itself", 34),jule::Slice<jule::Any>({jule::Any(_168353_derive),jule::Any(_168366_st1->_field_ident)}));
		_1683100_ok = false;
		return _1683100_ok;
	}
	
	jule::Str _172617_message = jule::Str("", 0);
	jule::Fn<void(jule::Ref<_10e3fc8f0_Struct>,jule::Ref<_10e3fc8f0_Struct>)> _172813_push = jule::Fn<void(jule::Ref<_10e3fc8f0_Struct>,jule::Ref<_10e3fc8f0_Struct>)>([&](jule::Ref<_10e3fc8f0_Struct> _172823_st1,jule::Ref<_10e3fc8f0_Struct> _172837_st2) mutable -> void {
		jule::Str _172917_refers_to = _10d8aeab0_errorf(jule::Str("refers_to", 9),jule::Slice<jule::Any>({jule::Any(_172823_st1->_field_ident),jule::Any(_172837_st2->_field_ident)}));
		_172617_message=(((_10e8ca650_str_repeat(jule::Str(" ", 1),4LL) + _172917_refers_to) + jule::Str("\n", 1)) + _172617_message);
	});
	jule::Fn<jule::Bool(jule::Ref<_10e3fc8f0_Struct>)> _173417_check_cross = nullptr;
	_173417_check_cross=jule::Fn<jule::Bool(jule::Ref<_10e3fc8f0_Struct>)>([&](jule::Ref<_10e3fc8f0_Struct> _173526_st2) mutable -> jule::Bool {
		{
			auto &__julec_range_expr = _173526_st2->_field_uses;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_10e3fc8f0_Struct> _10e9847f0_u{jule::Ref<_10e3fc8f0_Struct>()};_10e9847f0_u = *__julec_range_begin;
				_iter_begin_4711287056:;
				{
					if ((_10e9847f0_u == _168366_st1)) {
						_172813_push(_173526_st2,_10e9847f0_u);
						return false;
					}
					if ((!_173417_check_cross(_10e9847f0_u))) {
						_172813_push(_173526_st2,_10e9847f0_u);
						return false;
					}
				}
				_iter_next_4711287056:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _10e9847f0_u = *__julec_range_begin; goto _iter_begin_4711287056; }
				_iter_end_4711287056:;
			}
		}
		return true;
	});
	if ((!_173417_check_cross(_171217_st2))) {
		jule::Str _175221_err_msg = _172617_message;
		_172617_message=jule::Str("", 0);
		_172813_push(_168366_st1,_171217_st2);
		_175221_err_msg=(_175221_err_msg + _172617_message);
		(*this)._method_push_err(_168366_st1->_field_token,jule::Str("derive_illegal_cross_cycle", 26),jule::Slice<jule::Any>({jule::Any(_168353_derive),jule::Any(_175221_err_msg)}));
		_1683100_ok = false;
		return _1683100_ok;
	}
	_1683100_ok = true;
	return _1683100_ok;
}



inline jule::Bool _10e9847f0_Sema::_method_check_struct_ins_derive_clone(jule::Ref<_10e3fc8f0_StructIns> _176352_st) {
	jule::Bool _176370_ok{jule::Bool()};
	if ((!_176352_st->_field_decl->_method_is_derives(jule::Str("Clone", 5)))) {
		_176370_ok = true;
		return _176370_ok;
	}
	{
		auto &__julec_range_expr = _176352_st->_field_fields;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e3fc8f0_FieldIns> _10e9847f0_f{jule::Ref<_10e3fc8f0_FieldIns>()};_10e9847f0_f = *__julec_range_begin;
			_iter_begin_4711304592:;
			{
				if (((!jule::real(_10e9847f0_f->_field_kind)) || (!_10eeb79b0_is_mut(_10e9847f0_f->_field_kind)))) {
					goto _iter_next_4711304592;
				}
				if ((!_10eeb79b0_supports_clonning(_10e9847f0_f->_field_kind))) {
					(*this)._method_push_err(_176352_st->_field_decl->_field_token,jule::Str("type_not_compatible_for_derive", 30),jule::Slice<jule::Any>({jule::Any(_10e9847f0_f->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
					_176370_ok = false;
					return _176370_ok;
				}
				if ((!(*this)._method_check_struct_derive_illegal_cycles(jule::Str("Clone", 5),_176352_st->_field_decl,_10e9847f0_f->_field_kind))) {
					_176370_ok = false;
					return _176370_ok;
				}
			}
			_iter_next_4711304592:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9847f0_f = *__julec_range_begin; goto _iter_begin_4711304592; }
			_iter_end_4711304592:;
		}
	}
	_176370_ok = true;
	return _176370_ok;
}



inline jule::Bool _10e9847f0_Sema::_method_check_struct_derive_clone(jule::Ref<_10e3fc8f0_Struct> _178648_st) {
	jule::Bool _178663_ok{jule::Bool()};
	_178663_ok = (*this)._method_check_struct_ins_derive_clone(_178648_st->_method_instance());
	return _178663_ok;
}



inline jule::Bool _10e9847f0_Sema::_method_check_file_derives(void) {
	jule::Bool _179039_ok{jule::Bool()};
	jule::Int _179217_i = 0LL;
	_iter_begin_4711325888:;
	if (!((_179217_i < static_cast<jule::Int>((*this)._field_file->_field_structs._method_len())))) { goto _iter_end_4711325888; }
	{
		jule::Ref<_10e3fc8f0_Struct> _179421_st = (*this)._field_file->_field_structs._method_at(_179217_i);
		jule::Bool _179517_ok = (*this)._method_check_struct_derive_clone(_179421_st);
		if ((!_179517_ok)) {
			_179039_ok = false;
			return _179039_ok;
		}
	}
	_iter_next_4711325888:;
	(_179217_i)++;
	goto _iter_begin_4711325888;
	_iter_end_4711325888:;
	_179039_ok = true;
	return _179039_ok;
}



inline void _10e9847f0_Sema::_method_check_package_derives(void) {
	{
		auto &__julec_range_expr = (*this)._field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ee5c510_SymbolTable> _10e9847f0_f{jule::Ref<_10ee5c510_SymbolTable>()};_10e9847f0_f = *__julec_range_begin;
			_iter_begin_4711335648:;
			{
				(*this)._method_set_current_file(_10e9847f0_f);
				jule::Bool _180717_ok = (*this)._method_check_file_derives();
				if ((!_180717_ok)) {
					return;
				}
			}
			_iter_next_4711335648:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9847f0_f = *__julec_range_begin; goto _iter_begin_4711335648; }
			_iter_end_4711335648:;
		}
	}
}



inline void _10e9847f0_Sema::_method_check_package_decls(void) {
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ee5c510_SymbolTable> _10e9847f0_f{jule::Ref<_10ee5c510_SymbolTable>()};_10e9847f0_f = *__julec_range_begin;
			_iter_begin_4711341152:;
			{
				this->self->_method_set_current_file(_10e9847f0_f);
				if ((!this->self->_method_check_passes())) {
					return;
				}
			}
			_iter_next_4711341152:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9847f0_f = *__julec_range_begin; goto _iter_begin_4711341152; }
			_iter_end_4711341152:;
		}
	}
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ee5c510_SymbolTable> _10e9847f0_f{jule::Ref<_10ee5c510_SymbolTable>()};_10e9847f0_f = *__julec_range_begin;
			_iter_begin_4711346592:;
			{
				this->self->_method_set_current_file(_10e9847f0_f);
				if ((!this->self->_method_check_type_alias_decls())) {
					return;
				}
			}
			_iter_next_4711346592:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9847f0_f = *__julec_range_begin; goto _iter_begin_4711346592; }
			_iter_end_4711346592:;
		}
	}
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ee5c510_SymbolTable> _10e9847f0_f{jule::Ref<_10ee5c510_SymbolTable>()};_10e9847f0_f = *__julec_range_begin;
			_iter_begin_4711347904:;
			{
				this->self->_method_set_current_file(_10e9847f0_f);
				if ((!this->self->_method_check_trait_decls())) {
					return;
				}
			}
			_iter_next_4711347904:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9847f0_f = *__julec_range_begin; goto _iter_begin_4711347904; }
			_iter_end_4711347904:;
		}
	}
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ee5c510_SymbolTable> _10e9847f0_f{jule::Ref<_10ee5c510_SymbolTable>()};_10e9847f0_f = *__julec_range_begin;
			_iter_begin_4711352000:;
			{
				this->self->_method_set_current_file(_10e9847f0_f);
				if ((!this->self->_method_check_global_decls())) {
					return;
				}
			}
			_iter_next_4711352000:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9847f0_f = *__julec_range_begin; goto _iter_begin_4711352000; }
			_iter_end_4711352000:;
		}
	}
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ee5c510_SymbolTable> _10e9847f0_f{jule::Ref<_10ee5c510_SymbolTable>()};_10e9847f0_f = *__julec_range_begin;
			_iter_begin_4711355984:;
			{
				this->self->_method_set_current_file(_10e9847f0_f);
				if ((!this->self->_method_check_fn_decls())) {
					return;
				}
			}
			_iter_next_4711355984:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9847f0_f = *__julec_range_begin; goto _iter_begin_4711355984; }
			_iter_end_4711355984:;
		}
	}
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ee5c510_SymbolTable> _10e9847f0_f{jule::Ref<_10ee5c510_SymbolTable>()};_10e9847f0_f = *__julec_range_begin;
			_iter_begin_4711360000:;
			{
				this->self->_method_set_current_file(_10e9847f0_f);
				if ((!this->self->_method_check_struct_decls())) {
					return;
				}
			}
			_iter_next_4711360000:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9847f0_f = *__julec_range_begin; goto _iter_begin_4711360000; }
			_iter_end_4711360000:;
		}
	}
	this->self->_method_check_package_derives();
}



inline void _10e9847f0_Sema::_method_check_data_for_auto_type(jule::Ref<_10ee8a260_Data> _186243_d,_11ce22a00_Token _186253_err_token) {
	{
		auto _match_expr{ true };
		if (!(_186243_d->_method_is_nil() == _match_expr)) { goto _case_end_4711370704; }
		_case_begin_4711370704:;
		{
			(*this)._method_push_err(_186253_err_token,jule::Str("nil_for_autotype", 16),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4711370384;
		_case_end_4711370704:;
		if (!(_186243_d->_method_is_void() == _match_expr)) { goto _case_end_4711370816; }
		_case_begin_4711370816:;
		{
			(*this)._method_push_err(_186253_err_token,jule::Str("void_for_autotype", 17),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4711370384;
		_case_end_4711370816:;
		_match_end_4711370384:;
	}
}



inline void _10e9847f0_Sema::_method_check_var(jule::Ref<_10ebc2ad0_Var> _187233_v) {
	if (_187233_v->_field_cpp_linked) {
		return;
	}
	if (_187233_v->_method_is_auto_typed()) {
		_187233_v->_field_kind=jule::new_struct<_10eeb79b0_TypeSymbol>(new( std::nothrow ) _10eeb79b0_TypeSymbol(jule::Ref<_11ce1fd50_TypeDecl>(),_187233_v->_field_value->_field_data->_field_kind));
		this->self->_method_check_data_for_auto_type(_187233_v->_field_value->_field_data,_187233_v->_field_value->_field_expr->_field_token);
	} else {
		jule::Ref<_10eeb79b0_Arr> _188421_arr = _187233_v->_field_kind->_field_kind->_method_arr();
		if (jule::real(_188421_arr)) {
			if (_188421_arr->_field_auto) {
				jule::Ref<_10eeb79b0_Arr> _188725_data_arr = _187233_v->_field_value->_field_data->_field_kind->_method_arr();
				if (jule::real(_188725_data_arr)) {
					_188421_arr->_field_n=_188725_data_arr->_field_n;
				}
			}
		}
		this->self->_method_check_assign_type(_187233_v->_field_kind->_field_kind,_187233_v->_field_value->_field_data,_187233_v->_field_value->_field_expr->_field_token,false);
	}
	this->self->_method_check_validity_for_init_expr(_187233_v->_field_mutable,_187233_v->_field_reference,_187233_v->_field_kind->_field_kind,_187233_v->_field_value->_field_data,_187233_v->_field_value->_field_expr->_field_token);
	if ((!_187233_v->_field_constant)) {
		jule::drop(_187233_v->_field_value->_field_data->_field_constant);
	}
}



inline void _10e9847f0_Sema::_method_check_type_var(jule::Ref<_10ebc2ad0_Var> _191038_decl,jule::Trait<_10f3df410_Lookup> _191050_l) {
	if ((_191038_decl->_field_cpp_linked || (!_191038_decl->_method_is_initialized()))) {
		return;
	}
	if (jule::real(_191038_decl->_field_kind)) {
		_191038_decl->_field_value->_field_data=this->self->_method_evalpd(_191038_decl->_field_value->_field_expr,_191050_l,_191038_decl->_field_kind->_field_kind,_191038_decl);
	} else {
		_191038_decl->_field_value->_field_data=this->self->_method_evalpd(_191038_decl->_field_value->_field_expr,_191050_l,jule::new_ref<_10eeb79b0_TypeKind>(),_191038_decl);
	}
	if ((!jule::real(_191038_decl->_field_value->_field_data))) {
		return;
	}
	this->self->_method_check_var(_191038_decl);
}



inline void _10e9847f0_Sema::_method_check_global_types(void) {
	jule::Int _193117_i = 0LL;
	_iter_begin_4711417088:;
	if (!((_193117_i < static_cast<jule::Int>(this->self->_field_file->_field_vars._method_len())))) { goto _iter_end_4711417088; }
	{
		jule::Ref<_10ebc2ad0_Var> _193321_decl = this->self->_field_file->_field_vars._method_at(_193117_i);
		this->self->_method_check_type_var(_193321_decl,this->self);
	}
	_iter_next_4711417088:;
	(_193117_i)++;
	goto _iter_begin_4711417088;
	_iter_end_4711417088:;
	_193117_i=0LL;
	_iter_begin_4711423216:;
	if (!((_193117_i < static_cast<jule::Int>(this->self->_field_file->_field_vars._method_len())))) { goto _iter_end_4711423216; }
	{
		jule::Ref<_10ebc2ad0_Var> _194021_decl = this->self->_field_file->_field_vars._method_at(_193117_i);
		if ((_194021_decl->_method_is_initialized() && (static_cast<jule::I64>(_194021_decl->_field_depends.len()) > 0LL))) {
			this->self->_method_check_type_var(_194021_decl,this->self);
		}
	}
	_iter_next_4711423216:;
	(_193117_i)++;
	goto _iter_begin_4711423216;
	_iter_end_4711423216:;
}



inline void _10e9847f0_Sema::_method_check_type_method(jule::Ref<_10e3fc8f0_StructIns> _194741_strct,jule::Ref<_10e56a140_Fn> _194764_f) {
	if (_194764_f->_field_cpp_linked) {
		return;
	}
	if ((static_cast<jule::I64>(_194764_f->_field_generics.len()) > 0LL)) {
		return;
	}
	if ((static_cast<jule::I64>(_194764_f->_field_instances.len()) == 0LL)) {
		jule::Ref<_10e56a140_FnIns> _195821_ins = _194764_f->_method_instance();
		_195821_ins->_field_owner=_194741_strct;
		_194764_f->_method_append_instance(_195821_ins);
		this->self->_method_reload_fn_ins_types(_195821_ins);
	}
	{
		auto &__julec_range_expr = _194764_f->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e56a140_FnIns> _10e9847f0_ins{jule::Ref<_10e56a140_FnIns>()};_10e9847f0_ins = *__julec_range_begin;
			_iter_begin_4711444960:;
			{
				if ((static_cast<jule::Int>(_10e9847f0_ins->_field_scope->_field_stmts._method_len()) > 0LL)) {
					goto _iter_next_4711444960;
				}
				this->self->_method_check_fn_ins(_10e9847f0_ins);
			}
			_iter_next_4711444960:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9847f0_ins = *__julec_range_begin; goto _iter_begin_4711444960; }
			_iter_end_4711444960:;
		}
	}
}



inline void _10e9847f0_Sema::_method_check_type_struct(jule::Ref<_10e3fc8f0_Struct> _197341_strct) {
	if (_197341_strct->_field_cpp_linked) {
		return;
	}
	if (((static_cast<jule::I64>(_197341_strct->_field_generics.len()) == 0LL) && (static_cast<jule::I64>(_197341_strct->_field_instances.len()) == 0LL))) {
		jule::Ref<_10e3fc8f0_StructIns> _197921_ins = _197341_strct->_method_instance();
		_197921_ins->_field_checked=true;
		_197341_strct->_method_append_instance(_197921_ins);
	}
	{
		auto &__julec_range_expr = _197341_strct->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e3fc8f0_StructIns> _10e9847f0_ins{jule::Ref<_10e3fc8f0_StructIns>()};_10e9847f0_ins = *__julec_range_begin;
			_iter_begin_4711460768:;
			{
				{
					auto &__julec_range_expr = _10e9847f0_ins->_field_methods;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_10e56a140_Fn> _10e9847f0_f{jule::Ref<_10e56a140_Fn>()};_10e9847f0_f = *__julec_range_begin;
						_iter_begin_4711463488:;
						{
							this->self->_method_check_type_method(_10e9847f0_ins,_10e9847f0_f);
						}
						_iter_next_4711463488:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _10e9847f0_f = *__julec_range_begin; goto _iter_begin_4711463488; }
						_iter_end_4711463488:;
					}
				}
			}
			_iter_next_4711460768:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9847f0_ins = *__julec_range_begin; goto _iter_begin_4711460768; }
			_iter_end_4711460768:;
		}
	}
}



inline void _10e9847f0_Sema::_method_check_struct_types(void) {
	jule::Int _199217_i = 0LL;
	_iter_begin_4711465200:;
	if (!((_199217_i < static_cast<jule::Int>(this->self->_field_file->_field_structs._method_len())))) { goto _iter_end_4711465200; }
	{
		jule::Ref<_10e3fc8f0_Struct> _199421_strct = this->self->_field_file->_field_structs._method_at(_199217_i);
		this->self->_method_check_type_struct(_199421_strct);
	}
	_iter_next_4711465200:;
	(_199217_i)++;
	goto _iter_begin_4711465200;
	_iter_end_4711465200:;
}



inline void _10e9847f0_Sema::_method_check_rets(jule::Ref<_10e56a140_FnIns> _199933_f) {
	if (_199933_f->_field_decl->_method_is_void()) {
		return;
	}
	jule::Bool _200413_ok = _10e9847f0_has_ret(_199933_f->_field_scope);
	if ((!_200413_ok)) {
		(*this)._method_push_err(_199933_f->_field_decl->_field_token,jule::Str("missing_ret", 11),jule::Slice<jule::Any>({}));
	}
}



inline void _10e9847f0_Sema::_method_check_fn_ins_sc(jule::Ref<_10e56a140_FnIns> _201038_f,jule::Ref<_10e97fcf0_ScopeChecker> _201053_sc) {
	if (_201038_f->_field_decl->_field_cpp_linked) {
		return;
	}
	jule::Slice<jule::Ref<_10ebc2ad0_Var>> _201517_vars = _10e9847f0_build_ret_vars(_201038_f);
	_201053_sc->_field_table->_field_vars._method_append(_201517_vars);
	_201053_sc->_field_table->_field_vars._method_append(_10e9847f0_build_param_vars(_201038_f));
	_201053_sc->_field_table->_field_type_aliases._method_append(_10e9847f0_build_generic_type_aliases(_201038_f));
	_201053_sc->_method_check(_201038_f->_field_decl->_field_scope,_201038_f->_field_scope);
	if ((static_cast<jule::I64>(_201517_vars.len()) > 0LL)) {
		{
			auto &__julec_range_expr = _201517_vars;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_10ebc2ad0_Var> _10e9847f0_v{jule::Ref<_10ebc2ad0_Var>()};_10e9847f0_v = *__julec_range_begin;
				_iter_begin_4711498432:;
				{
					_201038_f->_field_scope->_field_stmts._method_push_front(jule::Any(_10e9847f0_v));
				}
				_iter_next_4711498432:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _10e9847f0_v = *__julec_range_begin; goto _iter_begin_4711498432; }
				_iter_end_4711498432:;
			}
		}
	}
	(*this)._method_check_rets(_201038_f);
}



inline void _10e9847f0_Sema::_method_check_fn_ins(jule::Ref<_10e56a140_FnIns> _203335_f) {
	if (_203335_f->_field_decl->_field_cpp_linked) {
		return;
	}
	jule::Ref<_10ee5c510_SymbolTable> _203817_old = _203335_f->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_203335_f->_field_decl->_field_sema->_method_set_current_file(_203817_old);
	});
	jule::Ref<_10ee5c510_SymbolTable> _204017_file = _10e9847f0_find_file(_203335_f->_field_decl->_field_sema->_field_files,_203335_f->_field_decl->_field_token._field_file);
	if (jule::real(_204017_file)) {
		_203335_f->_field_decl->_field_sema->_method_set_current_file(_204017_file);
	}
	jule::Ref<_10e97fcf0_ScopeChecker> _204517_sc = _10e97fcf0_new_scope_checker(_203335_f->_field_decl->_field_sema,_203335_f);
	(*this)._method_check_fn_ins_sc(_203335_f,_204517_sc);
	if (((_203335_f->_field_decl->_field_sema).alloc != (&(*this)))) {
		(*this)._field_errors=append((*this)._field_errors,_203335_f->_field_decl->_field_sema->_field_errors);
	}
}



inline void _10e9847f0_Sema::_method_check_type_fn(jule::Ref<_10e56a140_Fn> _205337_f) {
	if (_205337_f->_field_cpp_linked) {
		return;
	}
	if ((static_cast<jule::I64>(_205337_f->_field_generics.len()) > 0LL)) {
		return;
	}
	{
		auto &__julec_range_expr = _205337_f->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e56a140_FnIns> _10e9847f0_ins{jule::Ref<_10e56a140_FnIns>()};_10e9847f0_ins = *__julec_range_begin;
			_iter_begin_4711528912:;
			{
				this->self->_method_check_fn_ins(_10e9847f0_ins);
			}
			_iter_next_4711528912:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9847f0_ins = *__julec_range_begin; goto _iter_begin_4711528912; }
			_iter_end_4711528912:;
		}
	}
}



inline void _10e9847f0_Sema::_method_precheck_type_fn(jule::Ref<_10e56a140_Fn> _206840_f) {
	if (_206840_f->_field_cpp_linked) {
		return;
	}
	if ((static_cast<jule::I64>(_206840_f->_field_generics.len()) > 0LL)) {
		return;
	}
	if ((static_cast<jule::I64>(_206840_f->_field_instances.len()) == 0LL)) {
		jule::Ref<_10e56a140_FnIns> _207921_ins = _206840_f->_method_instance();
		_206840_f->_field_instances=append(_206840_f->_field_instances,jule::Slice<jule::Ref<_10e56a140_FnIns>>({_207921_ins}));
		this->self->_method_reload_fn_ins_types(_207921_ins);
	}
}



inline jule::Bool _10e9847f0_Sema::_method_precheck_fn_types(void) {
	jule::Bool _208639_ok{jule::Bool()};
	jule::Int _208717_i = 0LL;
	_iter_begin_4711545760:;
	if (!((_208717_i < static_cast<jule::Int>(this->self->_field_file->_field_funcs._method_len())))) { goto _iter_end_4711545760; }
	{
		jule::Ref<_10e56a140_Fn> _208921_decl = this->self->_field_file->_field_funcs._method_at(_208717_i);
		this->self->_method_precheck_type_fn(_208921_decl);
	}
	_iter_next_4711545760:;
	(_208717_i)++;
	goto _iter_begin_4711545760;
	_iter_end_4711545760:;
	_208639_ok = true;
	return _208639_ok;
}



inline jule::Bool _10e9847f0_Sema::_method_check_fn_types(void) {
	jule::Bool _209736_ok{jule::Bool()};
	jule::Int _209817_i = 0LL;
	_iter_begin_4711555232:;
	if (!((_209817_i < static_cast<jule::Int>(this->self->_field_file->_field_funcs._method_len())))) { goto _iter_end_4711555232; }
	{
		jule::Ref<_10e56a140_Fn> _210021_decl = this->self->_field_file->_field_funcs._method_at(_209817_i);
		this->self->_method_check_type_fn(_210021_decl);
	}
	_iter_next_4711555232:;
	(_209817_i)++;
	goto _iter_begin_4711555232;
	_iter_end_4711555232:;
	_209736_ok = true;
	return _209736_ok;
}



inline void _10e9847f0_Sema::_method_check_package_types(void) {
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ee5c510_SymbolTable> _10e9847f0_f{jule::Ref<_10ee5c510_SymbolTable>()};_10e9847f0_f = *__julec_range_begin;
			_iter_begin_4711563488:;
			{
				this->self->_method_set_current_file(_10e9847f0_f);
				this->self->_method_check_global_types();
			}
			_iter_next_4711563488:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9847f0_f = *__julec_range_begin; goto _iter_begin_4711563488; }
			_iter_end_4711563488:;
		}
	}
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ee5c510_SymbolTable> _10e9847f0_f{jule::Ref<_10ee5c510_SymbolTable>()};_10e9847f0_f = *__julec_range_begin;
			_iter_begin_4711565104:;
			{
				this->self->_method_set_current_file(_10e9847f0_f);
				this->self->_method_precheck_fn_types();
			}
			_iter_next_4711565104:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9847f0_f = *__julec_range_begin; goto _iter_begin_4711565104; }
			_iter_end_4711565104:;
		}
	}
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ee5c510_SymbolTable> _10e9847f0_f{jule::Ref<_10ee5c510_SymbolTable>()};_10e9847f0_f = *__julec_range_begin;
			_iter_begin_4711568752:;
			{
				this->self->_method_set_current_file(_10e9847f0_f);
				this->self->_method_check_fn_types();
			}
			_iter_next_4711568752:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9847f0_f = *__julec_range_begin; goto _iter_begin_4711568752; }
			_iter_end_4711568752:;
		}
	}
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ee5c510_SymbolTable> _10e9847f0_f{jule::Ref<_10ee5c510_SymbolTable>()};_10e9847f0_f = *__julec_range_begin;
			_iter_begin_4711572400:;
			{
				this->self->_method_set_current_file(_10e9847f0_f);
				this->self->_method_check_struct_types();
			}
			_iter_next_4711572400:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9847f0_f = *__julec_range_begin; goto _iter_begin_4711572400; }
			_iter_end_4711572400:;
		}
	}
}



inline void _10e9847f0_Sema::_method_set_file_sema_fields(void) {
	jule::Int _213217_i = 0LL;
	_iter_begin_4711579168:;
	if (!((_213217_i < static_cast<jule::Int>(this->self->_field_file->_field_funcs._method_len())))) { goto _iter_end_4711579168; }
	{
		jule::Ref<_10e56a140_Fn> _213421_f = this->self->_field_file->_field_funcs._method_at(_213217_i);
		_213421_f->_field_sema=this->self;
	}
	_iter_next_4711579168:;
	(_213217_i)++;
	goto _iter_begin_4711579168;
	_iter_end_4711579168:;
	_213217_i=0LL;
	_iter_begin_4711585120:;
	if (!((_213217_i < static_cast<jule::Int>(this->self->_field_file->_field_structs._method_len())))) { goto _iter_end_4711585120; }
	{
		jule::Ref<_10e3fc8f0_Struct> _214021_st = this->self->_field_file->_field_structs._method_at(_213217_i);
		_214021_st->_field_sema=this->self;
	}
	_iter_next_4711585120:;
	(_213217_i)++;
	goto _iter_begin_4711585120;
	_iter_end_4711585120:;
}



inline void _10e9847f0_Sema::_method_set_sema_fields(void) {
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ee5c510_SymbolTable> _10e9847f0_file{jule::Ref<_10ee5c510_SymbolTable>()};_10e9847f0_file = *__julec_range_begin;
			_iter_begin_4711591728:;
			{
				this->self->_method_set_current_file(_10e9847f0_file);
				this->self->_method_set_file_sema_fields();
			}
			_iter_next_4711591728:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9847f0_file = *__julec_range_begin; goto _iter_begin_4711591728; }
			_iter_end_4711591728:;
		}
	}
}



inline void _10e9847f0_Sema::_method_check(jule::Slice<jule::Ref<_10ee5c510_SymbolTable>> _215229_files) {
	this->self->_field_files=_215229_files;
	this->self->_method_check_imports();
	if ((static_cast<jule::I64>(this->self->_field_errors.len()) > 0LL)) {
		return;
	}
	this->self->_method_check_enums();
	if ((static_cast<jule::I64>(this->self->_field_errors.len()) > 0LL)) {
		return;
	}
	this->self->_method_set_sema_fields();
	this->self->_method_impl_impls();
	if ((static_cast<jule::I64>(this->self->_field_errors.len()) > 0LL)) {
		return;
	}
	this->self->_method_check_package_decls();
	if ((static_cast<jule::I64>(this->self->_field_errors.len()) > 0LL)) {
		return;
	}
	this->self->_method_check_package_types();
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9847f0_Sema &_Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file;
	_Stream << "}";
	return _Stream;
}



inline void _10eb9c740_DynamicTypeAnnotation::_method_push_generic(jule::Ref<_10eeb79b0_TypeKind> _52635_k,jule::Int _52649_i) {
	(*this)._field_f->_field_generics[static_cast<jule::Int>(_52649_i)]=_52635_k;
}



inline jule::Bool _10eb9c740_DynamicTypeAnnotation::_method_annotate_prim(jule::Ref<_10eeb79b0_TypeKind> _53043_k) {
	jule::Bool _53059_ok{jule::Bool()};
	jule::Str _53113_kind = (*(*this)._field_k)->_method_to_str();
	{
		auto &__julec_range_expr = (*this)._field_f->_field_decl->_field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10eb9c740_i{jule::Int()};_10eb9c740_i = 0;
			jule::Ref<_11ce1fd50_GenericDecl> _10eb9c740_g{jule::Ref<_11ce1fd50_GenericDecl>()};_10eb9c740_g = *__julec_range_begin;
			_iter_begin_4711879888:;
			{
				if ((_53113_kind != _10eb9c740_g->_field_ident)) {
					goto _iter_next_4711879888;
				}
				jule::Ref<_10eeb79b0_TypeKind> _53717_t = (*this)._field_f->_field_generics[static_cast<jule::Int>(_10eb9c740_i)];
				{
					auto _match_expr{ true };
					if (!((!jule::real(_53717_t)) == _match_expr)) { goto _case_end_4711886768; }
					_case_begin_4711886768:;
					{
						(*this)._method_push_generic(_53043_k,_10eb9c740_i);
					}
					goto _match_end_4711886544;
					_case_end_4711886768:;
					if (!((_53717_t->_method_to_str() != _53043_k->_method_to_str()) == _match_expr)) { goto _case_end_4711886880; }
					_case_begin_4711886880:;
					{
						_53059_ok = false;
						return _53059_ok;
					}
					goto _match_end_4711886544;
					_case_end_4711886880:;
					_match_end_4711886544:;
				}
				(*(*this)._field_k)->_field_kind=_53043_k->_field_kind;
				_53059_ok = true;
				return _53059_ok;
			}
			_iter_next_4711879888:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10eb9c740_i; _10eb9c740_g = *__julec_range_begin; goto _iter_begin_4711879888; }
			_iter_end_4711879888:;
		}
	}
	_53059_ok = false;
	return _53059_ok;
}



inline jule::Bool _10eb9c740_DynamicTypeAnnotation::_method_annotate_slc(jule::Ref<_10eeb79b0_TypeKind> _55442_k) {
	jule::Bool _55458_ok{jule::Bool()};
	jule::Ref<_10eeb79b0_Slc> _55517_pslc = (*(*this)._field_k)->_method_slc();
	if ((!jule::real(_55517_pslc))) {
		_55458_ok = false;
		return _55458_ok;
	}
	jule::Ref<_10eeb79b0_Slc> _56017_slc = _55442_k->_method_slc();
	_10eeb79b0_TypeKind* _56117_kk = (_55517_pslc->_field_elem).alloc;
	(*this)._field_k=(&_56117_kk);
	_55458_ok = (*this)._method_annotate_kind(_56017_slc->_field_elem);
	return _55458_ok;
}



inline jule::Bool _10eb9c740_DynamicTypeAnnotation::_method_annotate_map(jule::Ref<_10eeb79b0_TypeKind> _56642_k) {
	jule::Bool _56658_ok{jule::Bool()};
	jule::Ref<_10eeb79b0_Map> _56717_pmap = (*(*this)._field_k)->_method_map();
	if ((!jule::real(_56717_pmap))) {
		_56658_ok = false;
		return _56658_ok;
	}
	jule::Ref<_10eeb79b0_Map> _57217_m = _56642_k->_method_map();
	jule::Fn<jule::Bool(_10eeb79b0_TypeKind**,jule::Ref<_10eeb79b0_TypeKind>)> _57313_check = jule::Fn<jule::Bool(_10eeb79b0_TypeKind**,jule::Ref<_10eeb79b0_TypeKind>)>([&](_10eeb79b0_TypeKind** _57328_k,jule::Ref<_10eeb79b0_TypeKind> _57347_ck) mutable -> jule::Bool {
		jule::Bool _57364_ok{jule::Bool()};
		_10eeb79b0_TypeKind** _57421_old = (*this)._field_k;
		(*this)._field_k=_57328_k;
		_57364_ok=(*this)._method_annotate_kind(_57347_ck);
		(*this)._field_k=_57421_old;
		_57364_ok = _57364_ok;
		return _57364_ok;
	});
	_10eeb79b0_TypeKind* _58117_key = (_56717_pmap->_field_key).alloc;
	_10eeb79b0_TypeKind* _58217_val = (_56717_pmap->_field_val).alloc;
	_56658_ok = (_57313_check((&_58117_key),_57217_m->_field_key) && _57313_check((&_58217_val),_57217_m->_field_val));
	return _56658_ok;
}



inline jule::Bool _10eb9c740_DynamicTypeAnnotation::_method_annotate_fn(jule::Ref<_10eeb79b0_TypeKind> _58641_k) {
	jule::Bool _58657_ok{jule::Bool()};
	jule::Ref<_10e56a140_FnIns> _58717_pf = (*(*this)._field_k)->_method_fnc();
	if ((!jule::real(_58717_pf))) {
		_58657_ok = false;
		return _58657_ok;
	}
	jule::Ref<_10e56a140_FnIns> _59117_f = _58641_k->_method_fnc();
	{
		auto _match_expr{ true };
		if (!((static_cast<jule::I64>(_58717_pf->_field_params.len()) != static_cast<jule::I64>(_59117_f->_field_params.len())) == _match_expr)) { goto _case_end_4711936544; }
		_case_begin_4711936544:;
		{
			_58657_ok = false;
			return _58657_ok;
		}
		goto _match_end_4711936064;
		_case_end_4711936544:;
		if (!((_58717_pf->_field_decl->_method_is_void() != _59117_f->_field_decl->_method_is_void()) == _match_expr)) { goto _case_end_4711936656; }
		_case_begin_4711936656:;
		{
			_58657_ok = false;
			return _58657_ok;
		}
		goto _match_end_4711936064;
		_case_end_4711936656:;
		_match_end_4711936064:;
	}
	_58657_ok=true;
	_10eeb79b0_TypeKind** _60117_old = (*this)._field_k;
	{
		auto &__julec_range_expr = _59117_f->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10eb9c740_i{jule::Int()};_10eb9c740_i = 0;
			jule::Ref<_10e56a140_ParamIns> _10eb9c740_fp{jule::Ref<_10e56a140_ParamIns>()};_10eb9c740_fp = *__julec_range_begin;
			_iter_begin_4711942784:;
			{
				_10eeb79b0_TypeKind* _60321_pfp = (_58717_pf->_field_params[static_cast<jule::Int>(_10eb9c740_i)]->_field_kind).alloc;
				(*this)._field_k=(&_60321_pfp);
				_58657_ok=((*this)._method_annotate_kind(_10eb9c740_fp->_field_kind) && _58657_ok);
			}
			_iter_next_4711942784:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10eb9c740_i; _10eb9c740_fp = *__julec_range_begin; goto _iter_begin_4711942784; }
			_iter_end_4711942784:;
		}
	}
	if ((!_58717_pf->_field_decl->_method_is_void())) {
		_10eeb79b0_TypeKind* _60921_result = (_58717_pf->_field_result).alloc;
		(*this)._field_k=(&_60921_result);
		_58657_ok=((*this)._method_annotate_kind(_59117_f->_field_result) && _58657_ok);
	}
	(*this)._field_k=_60117_old;
	_58657_ok = _58657_ok;
	return _58657_ok;
}



inline jule::Bool _10eb9c740_DynamicTypeAnnotation::_method_annotate_ptr(jule::Ref<_10eeb79b0_TypeKind> _61842_k) {
	jule::Bool _61858_ok{jule::Bool()};
	jule::Ref<_10eeb79b0_Ptr> _61917_pptr = (*(*this)._field_k)->_method_ptr();
	if ((!jule::real(_61917_pptr))) {
		_61858_ok = false;
		return _61858_ok;
	}
	jule::Ref<_10eeb79b0_Ptr> _62417_ptr = _61842_k->_method_ptr();
	_10eeb79b0_TypeKind* _62517_cpptr = (_61917_pptr->_field_elem).alloc;
	(*this)._field_k=(&_62517_cpptr);
	_61858_ok = (*this)._method_annotate_kind(_62417_ptr->_field_elem);
	return _61858_ok;
}



inline jule::Bool _10eb9c740_DynamicTypeAnnotation::_method_annotate_any(jule::Ref<_10eeb79b0_TypeKind> _63042_k) {
	jule::Bool _63058_ok{jule::Bool()};
	jule::Str _63113_kind = (*(*this)._field_k)->_method_to_str();
	{
		auto &__julec_range_expr = (*this)._field_f->_field_decl->_field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10eb9c740_i{jule::Int()};_10eb9c740_i = 0;
			jule::Ref<_11ce1fd50_GenericDecl> _10eb9c740_g{jule::Ref<_11ce1fd50_GenericDecl>()};_10eb9c740_g = *__julec_range_begin;
			_iter_begin_4711973088:;
			{
				if ((_63113_kind != _10eb9c740_g->_field_ident)) {
					goto _iter_next_4711973088;
				}
				jule::Ref<_10eeb79b0_TypeKind> _63717_t = (*this)._field_f->_field_generics[static_cast<jule::Int>(_10eb9c740_i)];
				{
					auto _match_expr{ true };
					if (!((!jule::real(_63717_t)) == _match_expr)) { goto _case_end_4711979200; }
					_case_begin_4711979200:;
					{
						(*this)._method_push_generic(_63042_k,_10eb9c740_i);
					}
					goto _match_end_4711978976;
					_case_end_4711979200:;
					if (!((_63717_t->_method_to_str() != _63042_k->_method_to_str()) == _match_expr)) { goto _case_end_4711979312; }
					_case_begin_4711979312:;
					{
						_63058_ok = false;
						return _63058_ok;
					}
					goto _match_end_4711978976;
					_case_end_4711979312:;
					_match_end_4711978976:;
				}
				(*(*this)._field_k)->_field_kind=_63042_k->_field_kind;
				_63058_ok = true;
				return _63058_ok;
			}
			_iter_next_4711973088:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10eb9c740_i; _10eb9c740_g = *__julec_range_begin; goto _iter_begin_4711973088; }
			_iter_end_4711973088:;
		}
	}
	_63058_ok = false;
	return _63058_ok;
}



inline jule::Bool _10eb9c740_DynamicTypeAnnotation::_method_annotate_kind(jule::Ref<_10eeb79b0_TypeKind> _65443_k) {
	jule::Bool _65459_ok{jule::Bool()};
	if ((((*this)._field_k == nullptr) || ((*(*this)._field_k) == nullptr))) {
		return _65459_ok;
	}
	{
		auto _match_expr{ true };
		if (!((*this)._method_annotate_any(_65443_k) == _match_expr)) { goto _case_end_4711990944; }
		_case_begin_4711990944:;
		{
			_65459_ok = true;
			return _65459_ok;
		}
		goto _match_end_4711989408;
		_case_end_4711990944:;
		if (!(jule::real(_65443_k->_method_prim()) == _match_expr)) { goto _case_end_4711991056; }
		_case_begin_4711991056:;
		{
			_65459_ok = (*this)._method_annotate_prim(_65443_k);
			return _65459_ok;
		}
		goto _match_end_4711989408;
		_case_end_4711991056:;
		if (!(jule::real(_65443_k->_method_slc()) == _match_expr)) { goto _case_end_4711991776; }
		_case_begin_4711991776:;
		{
			_65459_ok = (*this)._method_annotate_slc(_65443_k);
			return _65459_ok;
		}
		goto _match_end_4711989408;
		_case_end_4711991776:;
		if (!(jule::real(_65443_k->_method_map()) == _match_expr)) { goto _case_end_4711991888; }
		_case_begin_4711991888:;
		{
			_65459_ok = (*this)._method_annotate_map(_65443_k);
			return _65459_ok;
		}
		goto _match_end_4711989408;
		_case_end_4711991888:;
		if (!(jule::real(_65443_k->_method_fnc()) == _match_expr)) { goto _case_end_4711992000; }
		_case_begin_4711992000:;
		{
			_65459_ok = (*this)._method_annotate_fn(_65443_k);
			return _65459_ok;
		}
		goto _match_end_4711989408;
		_case_end_4711992000:;
		if (!(jule::real(_65443_k->_method_ptr()) == _match_expr)) { goto _case_end_4711992112; }
		_case_begin_4711992112:;
		{
			_65459_ok = (*this)._method_annotate_ptr(_65443_k);
			return _65459_ok;
		}
		goto _match_end_4711989408;
		_case_end_4711992112:;
		_case_begin_4711990080:;
		{
			_65459_ok = false;
			return _65459_ok;
		}
		goto _match_end_4711989408;
		_case_end_4711990080:;
		_match_end_4711989408:;
	}
}



inline jule::Bool _10eb9c740_DynamicTypeAnnotation::_method_annotate(void) {
	jule::Bool _67036_ok{jule::Bool()};
	_10eeb79b0_TypeKind* _67117_pk = ((*this)._field_p->_field_kind).alloc;
	(*this)._field_k=(&_67117_pk);
	_67036_ok = (*this)._method_annotate_kind((*this)._field_a->_field_kind);
	return _67036_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _10eb9c740_DynamicTypeAnnotation &_Src) {
	_Stream << "DynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "k:" << _Src._field_k;
	_Stream << "}";
	return _Stream;
}



inline void _10eb9c740_StructLitChecker::_method_push_err(_11ce22a00_Token _89127_token,jule::Str _89141_key,jule::Slice<jule::Any> _89151_args) {
	(*this)._field_e->_method_push_err(_89127_token,_89141_key,_89151_args);
}



inline void _10eb9c740_StructLitChecker::_method_push_match(jule::Ref<_10e3fc8f0_FieldIns> _89533_f,jule::Ref<_10ee8a260_Data> _89551_d,_11ce22a00_Token _89561_error_token) {
	(*this)._field_args=append((*this)._field_args,jule::Slice<jule::Ref<_10e9ca470_StructArgExprModel>>({jule::new_struct<_10e9ca470_StructArgExprModel>(new( std::nothrow ) _10e9ca470_StructArgExprModel(_89533_f,_89551_d->_field_model))}));
	
	(*this)._field_e->_field_s->_method_check_validity_for_init_expr(_89533_f->_field_decl->_field_mutable,false,_89533_f->_field_kind,_89551_d,_89561_error_token);
	(*this)._field_e->_field_s->_method_check_assign_type(_89533_f->_field_kind,_89551_d,_89561_error_token,false);
}



inline void _10eb9c740_StructLitChecker::_method_check_pair(jule::Ref<_11ce1fd50_FieldExprPair> _90633_pair,jule::Slice<jule::Any> _90659_exprs) {
	jule::Ref<_10e3fc8f0_FieldIns> _90817_f = (*this)._field_s->_method_find_field(_90633_pair->_field_field._field_kind);
	if ((!jule::real(_90817_f))) {
		(*this)._method_push_err(_90633_pair->_field_field,jule::Str("ident_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_90633_pair->_field_field._field_kind)}));
		return;
	}
	if ((!(*this)._field_e->_field_s->_method_is_accessible_define(_90817_f->_field_decl->_field_public,_90817_f->_field_decl->_field_token))) {
		(*this)._method_push_err(_90633_pair->_field_field,jule::Str("ident_is_not_accessible", 23),jule::Slice<jule::Any>({jule::Any(_90633_pair->_field_field._field_kind)}));
	}
	_julec_label_dup_lookup:;
	{
		auto &__julec_range_expr = _90659_exprs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _10eb9c740_expr{jule::Any()};_10eb9c740_expr = *__julec_range_begin;
			_iter_begin_4710197232:;
			{
				{
					auto _match_expr{ _10eb9c740_expr };
					if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_FieldExprPair>>())) { goto _case_end_4712220320; }
					_case_begin_4712220320:;
					{
						jule::Ref<_11ce1fd50_FieldExprPair> _92325_dpair = _10eb9c740_expr.operator jule::Ref<_11ce1fd50_FieldExprPair>();
						{
							auto _match_expr{ true };
							if (!((_90633_pair == _92325_dpair) == _match_expr)) { goto _case_end_4712224384; }
							_case_begin_4712224384:;
							{
								goto _iter_end_4710197232;
							}
							goto _match_end_4712224064;
							_case_end_4712224384:;
							if (!((_90633_pair->_field_field._field_kind == _92325_dpair->_field_field._field_kind) == _match_expr)) { goto _case_end_4712224496; }
							_case_begin_4712224496:;
							{
								(*this)._method_push_err(_90633_pair->_field_field,jule::Str("already_has_expr", 16),jule::Slice<jule::Any>({jule::Any(_90633_pair->_field_field._field_kind)}));
								goto _iter_end_4710197232;
							}
							goto _match_end_4712224064;
							_case_end_4712224496:;
							_match_end_4712224064:;
						}
					}
					goto _match_end_4712220176;
					_case_end_4712220320:;
					_match_end_4712220176:;
				}
			}
			_iter_next_4710197232:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10eb9c740_expr = *__julec_range_begin; goto _iter_begin_4710197232; }
			_iter_end_4710197232:;
		}
	}
	jule::Ref<_10ee8a260_Data> _93517_d = (*this)._field_e->_method_eval_expr_kind(_90633_pair->_field_expr);
	if ((!jule::real(_93517_d))) {
		return;
	}
	(*this)._method_push_match(_90817_f,_93517_d,_90633_pair->_field_field);
}



inline jule::Bool _10eb9c740_StructLitChecker::_method_ready_exprs(jule::Slice<jule::Any> _94234_exprs) {
	jule::Bool _94317_ok = true;
	{
		auto &__julec_range_expr = _94234_exprs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10eb9c740_i{jule::Int()};_10eb9c740_i = 0;
			jule::Any _10eb9c740_expr{jule::Any()};_10eb9c740_expr = *__julec_range_begin;
			_iter_begin_4712237840:;
			{
				{
					auto _match_expr{ _10eb9c740_expr };
					if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_KeyValPair>>())) { goto _case_end_4712240160; }
					_case_begin_4712240160:;
					{
						jule::Ref<_11ce1fd50_KeyValPair> _94725_pair = _10eb9c740_expr.operator jule::Ref<_11ce1fd50_KeyValPair>();
						{
							auto _match_expr{ _94725_pair->_field_key };
							if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_IdentExpr>>())) { goto _case_end_4712245952; }
							goto _match_end_4712244352;
							_case_end_4712245952:;
							_case_begin_4712244464:;
							{
								(*this)._method_push_err(_94725_pair->_field_colon,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
								_94317_ok=false;
								goto _iter_next_4712237840;
							}
							goto _match_end_4712244352;
							_case_end_4712244464:;
							_match_end_4712244352:;
						}
						_94234_exprs[static_cast<jule::Int>(_10eb9c740_i)]=jule::Any(jule::new_struct<_11ce1fd50_FieldExprPair>(new( std::nothrow ) _11ce1fd50_FieldExprPair(_94725_pair->_field_key.operator jule::Ref<_11ce1fd50_IdentExpr>()->_field_token,_94725_pair->_field_val)));
					}
					goto _match_end_4712240720;
					_case_end_4712240160:;
					_match_end_4712240720:;
				}
			}
			_iter_next_4712237840:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10eb9c740_i; _10eb9c740_expr = *__julec_range_begin; goto _iter_begin_4712237840; }
			_iter_end_4712237840:;
		}
	}
	return _94317_ok;
}



inline void _10eb9c740_StructLitChecker::_method_check(jule::Slice<jule::Any> _96828_exprs) {
	if ((static_cast<jule::I64>(_96828_exprs.len()) == 0LL)) {
		return;
	}
	if ((!(*this)._method_ready_exprs(_96828_exprs))) {
		return;
	}
	jule::Bool _97717_paired = false;
	{
		auto &__julec_range_expr = _96828_exprs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10eb9c740_i{jule::Int()};_10eb9c740_i = 0;
			jule::Any _10eb9c740_expr{jule::Any()};_10eb9c740_expr = *__julec_range_begin;
			_iter_begin_4712257680:;
			{
				{
					auto _match_expr{ _10eb9c740_expr };
					if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_FieldExprPair>>())) { goto _case_end_4712260048; }
					_case_begin_4712260048:;
					{
						jule::Ref<_11ce1fd50_FieldExprPair> _98125_pair = _10eb9c740_expr.operator jule::Ref<_11ce1fd50_FieldExprPair>();
						if (((_10eb9c740_i > 0LL) && (!_97717_paired))) {
							(*this)._method_push_err(_98125_pair->_field_field,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
						}
						_97717_paired=true;
						(*this)._method_check_pair(_98125_pair,_96828_exprs);
					}
					goto _match_end_4712260608;
					_case_end_4712260048:;
					if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_Expr>>())) { goto _case_end_4712260720; }
					_case_begin_4712260720:;
					{
						jule::Ref<_11ce1fd50_Expr> _98925_e = _10eb9c740_expr.operator jule::Ref<_11ce1fd50_Expr>();
						if (_97717_paired) {
							(*this)._method_push_err(_98925_e->_field_token,jule::Str("argument_must_target_to_field", 29),jule::Slice<jule::Any>({}));
						}
						if ((_10eb9c740_i >= static_cast<jule::I64>((*this)._field_s->_field_fields.len()))) {
							(*this)._method_push_err(_98925_e->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
							goto _iter_next_4712257680;
						}
						jule::Ref<_10ee8a260_Data> _99825_d = (*this)._field_e->_method_eval_expr_kind(_98925_e->_field_kind);
						if ((!jule::real(_99825_d))) {
							goto _iter_next_4712257680;
						}
						jule::Ref<_10e3fc8f0_FieldIns> _100325_field = (*this)._field_s->_field_fields[static_cast<jule::Int>(_10eb9c740_i)];
						(*this)._method_push_match(_100325_field,_99825_d,_98925_e->_field_token);
					}
					goto _match_end_4712260608;
					_case_end_4712260720:;
					_match_end_4712260608:;
				}
			}
			_iter_next_4712257680:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10eb9c740_i; _10eb9c740_expr = *__julec_range_begin; goto _iter_begin_4712257680; }
			_iter_end_4712257680:;
		}
	}
	if ((!_97717_paired)) {
		jule::I64 _101017_n = static_cast<jule::I64>((*this)._field_s->_field_fields.len());
		jule::I64 _101121_diff = (_101017_n - static_cast<jule::I64>(_96828_exprs.len()));
		{
			auto _match_expr{ true };
			if (!((_101121_diff <= 0LL) == _match_expr)) { goto _case_end_4712288592; }
			_case_begin_4712288592:;
			{
				return;
			}
			goto _match_end_4712288336;
			_case_end_4712288592:;
			_match_end_4712288336:;
		}
		jule::Str _101721_idents = jule::Str("", 0);
		_iter_begin_4712286176:;
		if (!((_101121_diff > 0LL))) { goto _iter_end_4712286176; }
		{
			_101721_idents+=(jule::Str(", ", 2) + (*this)._field_s->_field_fields[static_cast<jule::Int>((_101017_n - _101121_diff))]->_field_decl->_field_ident);
		}
		_iter_next_4712286176:;
		(_101121_diff)--;
		goto _iter_begin_4712286176;
		_iter_end_4712286176:;
		_101721_idents=_101721_idents.slice(static_cast<jule::Int>(2LL));
		(*this)._method_push_err((*this)._field_error_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(_101721_idents)}));
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _10eb9c740_StructLitChecker &_Src) {
	_Stream << "StructLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_10ebc2ad0_Var> _10eb9c740_RangeChecker::_method_build_var(jule::Ref<_11ce1fd50_VarDecl> _103628_decl) {
	jule::Ref<_10ebc2ad0_Var> _103717_v = _10e8ca650_build_var(_103628_decl);
	return _103717_v;
}



inline void _10eb9c740_RangeChecker::_method_set_size_key(void) {
	if (((!jule::real((*this)._field_rang->_field_key_a)) || _11ce22a00_is_ignore_ident((*this)._field_rang->_field_key_a->_field_ident))) {
		return;
	}
	(*this)._field_kind->_field_key_a=(*this)._method_build_var((*this)._field_rang->_field_key_a);
	(*this)._field_kind->_field_key_a->_field_kind=jule::new_struct<_10eeb79b0_TypeSymbol>(new( std::nothrow ) _10eeb79b0_TypeSymbol(jule::Ref<_11ce1fd50_TypeDecl>(),jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("int", 3))))));
}



inline void _10eb9c740_RangeChecker::_method_check_slice(void) {
	(*this)._method_set_size_key();
	if (((!jule::real((*this)._field_rang->_field_key_b)) || _11ce22a00_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident))) {
		return;
	}
	jule::Ref<_10eeb79b0_Slc> _106017_slc = (*this)._field_d->_field_kind->_method_slc();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_10eeb79b0_TypeSymbol>(new( std::nothrow ) _10eeb79b0_TypeSymbol(jule::Ref<_11ce1fd50_TypeDecl>(),_106017_slc->_field_elem));
	(*this)._field_sc->_field_s->_method_check_validity_for_init_expr((*this)._field_kind->_field_key_b->_field_mutable,(*this)._field_kind->_field_key_b->_field_reference,(*this)._field_kind->_field_key_b->_field_kind->_field_kind,(*this)._field_d,(*this)._field_rang->_field_in_token);
}



inline void _10eb9c740_RangeChecker::_method_check_array(void) {
	(*this)._method_set_size_key();
	if (((!jule::real((*this)._field_rang->_field_key_b)) || _11ce22a00_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident))) {
		return;
	}
	jule::Ref<_10eeb79b0_Arr> _107717_arr = (*this)._field_d->_field_kind->_method_arr();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_10eeb79b0_TypeSymbol>(new( std::nothrow ) _10eeb79b0_TypeSymbol(jule::Ref<_11ce1fd50_TypeDecl>(),_107717_arr->_field_elem));
	(*this)._field_sc->_field_s->_method_check_validity_for_init_expr((*this)._field_kind->_field_key_b->_field_mutable,(*this)._field_kind->_field_key_b->_field_reference,(*this)._field_kind->_field_key_b->_field_kind->_field_kind,(*this)._field_d,(*this)._field_rang->_field_in_token);
}



inline void _10eb9c740_RangeChecker::_method_check_map_key_a(void) {
	if (((!jule::real((*this)._field_rang->_field_key_a)) || _11ce22a00_is_ignore_ident((*this)._field_rang->_field_key_a->_field_ident))) {
		return;
	}
	jule::Ref<_10eeb79b0_Map> _109317_m = (*this)._field_d->_field_kind->_method_map();
	(*this)._field_kind->_field_key_a=(*this)._method_build_var((*this)._field_rang->_field_key_a);
	(*this)._field_kind->_field_key_a->_field_kind=jule::new_struct<_10eeb79b0_TypeSymbol>(new( std::nothrow ) _10eeb79b0_TypeSymbol(jule::Ref<_11ce1fd50_TypeDecl>(),_109317_m->_field_key));
	jule::Ref<_10ee8a260_Data> _109717_d = jule::new_ref<_10ee8a260_Data>((*this)._field_d.get());
	_109717_d->_field_kind=_109317_m->_field_key;
	(*this)._field_sc->_field_s->_method_check_validity_for_init_expr((*this)._field_kind->_field_key_a->_field_mutable,(*this)._field_kind->_field_key_a->_field_reference,(*this)._field_kind->_field_key_a->_field_kind->_field_kind,_109717_d,(*this)._field_rang->_field_in_token);
}



inline void _10eb9c740_RangeChecker::_method_check_map_key_b(void) {
	if (((!jule::real((*this)._field_rang->_field_key_b)) || _11ce22a00_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident))) {
		return;
	}
	jule::Ref<_10eeb79b0_Map> _111217_m = (*this)._field_d->_field_kind->_method_map();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_10eeb79b0_TypeSymbol>(new( std::nothrow ) _10eeb79b0_TypeSymbol(jule::Ref<_11ce1fd50_TypeDecl>(),_111217_m->_field_val));
	jule::Ref<_10ee8a260_Data> _111617_d = jule::new_ref<_10ee8a260_Data>((*this)._field_d.get());
	_111617_d->_field_kind=_111217_m->_field_val;
	(*this)._field_sc->_field_s->_method_check_validity_for_init_expr((*this)._field_kind->_field_key_b->_field_mutable,(*this)._field_kind->_field_key_b->_field_reference,(*this)._field_kind->_field_key_b->_field_kind->_field_kind,_111617_d,(*this)._field_rang->_field_in_token);
}



inline void _10eb9c740_RangeChecker::_method_check_map(void) {
	(*this)._method_check_map_key_a();
	(*this)._method_check_map_key_b();
}



inline void _10eb9c740_RangeChecker::_method_check_str(void) {
	(*this)._method_set_size_key();
	if (((!jule::real((*this)._field_rang->_field_key_b)) || _11ce22a00_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident))) {
		return;
	}
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_10eeb79b0_TypeSymbol>(new( std::nothrow ) _10eeb79b0_TypeSymbol(jule::Ref<_11ce1fd50_TypeDecl>(),jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("u8", 2))))));
}



inline jule::Bool _10eb9c740_RangeChecker::_method_check(void) {
	if (jule::real((*this)._field_d->_field_kind->_method_ref())) {
		(*this)._field_d->_field_model=jule::Any(jule::new_struct<_10e9ca470_ExplicitDerefExprModel>(new( std::nothrow ) _10e9ca470_ExplicitDerefExprModel((*this)._field_d->_field_model)));
		(*this)._field_d->_field_kind=(*this)._field_d->_field_kind->_method_ref()->_field_elem;
	}
	{
		auto _match_expr{ true };
		if (!(jule::real((*this)._field_d->_field_kind->_method_slc()) == _match_expr)) { goto _case_end_4712415152; }
		_case_begin_4712415152:;
		{
			(*this)._method_check_slice();
			return true;
		}
		goto _match_end_4712414672;
		_case_end_4712415152:;
		if (!(jule::real((*this)._field_d->_field_kind->_method_arr()) == _match_expr)) { goto _case_end_4712415264; }
		_case_begin_4712415264:;
		{
			(*this)._method_check_array();
			return true;
		}
		goto _match_end_4712414672;
		_case_end_4712415264:;
		if (!(jule::real((*this)._field_d->_field_kind->_method_map()) == _match_expr)) { goto _case_end_4712415376; }
		_case_begin_4712415376:;
		{
			(*this)._method_check_map();
			return true;
		}
		goto _match_end_4712414672;
		_case_end_4712415376:;
		_match_end_4712414672:;
	}
	jule::Ref<_10eeb79b0_Prim> _116713_prim = (*this)._field_d->_field_kind->_method_prim();
	if ((jule::real(_116713_prim) && _116713_prim->_method_is_str())) {
		(*this)._method_check_str();
		return true;
	}
	(*this)._field_sc->_field_s->_method_push_err((*this)._field_rang->_field_in_token,jule::Str("iter_range_require_enumerable_expr", 34),jule::Slice<jule::Any>({}));
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _10eb9c740_RangeChecker &_Src) {
	_Stream << "RangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _10ee8a260_Data::_method_is_nil(void) {
	return (*this)._field_kind->_method_is_nil();
}



inline jule::Bool _10ee8a260_Data::_method_is_void(void) {
	return (*this)._field_kind->_method_is_void();
}



inline jule::Bool _10ee8a260_Data::_method_is_const(void) {
	return jule::real((*this)._field_constant);
}







std::ostream &operator<<(std::ostream &_Stream, const _10ee8a260_Data &_Src) {
	_Stream << "Data{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "cast_kind:" << _Src._field_cast_kind << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "lvalue:" << _Src._field_lvalue << ", ";
	_Stream << "variadiced:" << _Src._field_variadiced << ", ";
	_Stream << "is_rune:" << _Src._field_is_rune << ", ";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "constant:" << _Src._field_constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10ee8a260_Value &_Src) {
	_Stream << "Value{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void _10ee8a260_Eval::_method_push_err(_11ce22a00_Token _29227_token,jule::Str _29241_key,jule::Slice<jule::Any> _29251_args) {
	(*this)._field_s->_field_errors=append((*this)._field_s->_field_errors,jule::Slice<_13cfd2d20_Log>({_10e9847f0_compiler_err(_29227_token,_29241_key,_29251_args)}));
}



inline jule::Bool _10ee8a260_Eval::_method_is_unsafe(void) {
	return (*this)._field_unsafety;
}



inline jule::Bool _10ee8a260_Eval::_method_is_global(void) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_10e9847f0_Sema>>())) { goto _case_end_4560158528; }
		_case_begin_4560158528:;
		{
			return true;
		}
		goto _match_end_4560156624;
		_case_end_4560158528:;
		_case_begin_4560156864:;
		{
			return false;
		}
		goto _match_end_4560156624;
		_case_end_4560156864:;
		_match_end_4560156624:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_lit_nil(void) {
	jule::Ref<_10f4ed830_Const> _31117_constant = _10f4ed830_new_nil();
	return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),nullptr)),jule::Ref<_10eeb79b0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),_31117_constant,false,_31117_constant));
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_lit_str(jule::Ref<_11ce1fd50_LitExpr> _32222_lt) {
	jule::Str _32317_s = _32222_lt->_field_value.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_32222_lt->_field_value.len()) - 1LL))));
	if (_11ce22a00_is_raw_str(_32222_lt->_field_value)) {
		_32317_s=_10f668c10_to_raw_str(static_cast<jule::Slice<jule::U8>>(_32317_s));
	} else {
		_32317_s=_10f668c10_to_str(static_cast<jule::Slice<jule::U8>>(_32317_s));
	}
	jule::Ref<_10f4ed830_Const> _32917_constant = _10f4ed830_new_str(_32317_s);
	return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("str", 3)))),jule::Ref<_10eeb79b0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),_32917_constant,false,_32917_constant));
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_lit_bool(jule::Ref<_11ce1fd50_LitExpr> _34323_lit) {
	jule::Ref<_10f4ed830_Const> _34417_constant = _10f4ed830_new_bool((_34323_lit->_field_value == jule::Str("true", 4)));
	return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_10eeb79b0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),_34417_constant,false,_34417_constant));
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_lit_rune(jule::Ref<_11ce1fd50_LitExpr> _35723_l) {
	
	
	jule::Str _36113_lt = _35723_l->_field_value.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_35723_l->_field_value.len()) - 1LL))));
	jule::I32 _36213_r = static_cast<jule::I32>(_10f668c10_to_rune(static_cast<jule::Slice<jule::U8>>(_36113_lt)));
	jule::Ref<_10ee8a260_Data> _36317_data = jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::Ref<_10eeb79b0_TypeKind>(),jule::Ref<_10eeb79b0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,_10f4ed830_new_i64(static_cast<jule::I64>(_36213_r))));
	jule::Bool _37017_is_byte{};
	std::tie(std::ignore,_37017_is_byte) = _10f668c10_is_byte_lit(_35723_l->_field_value);
	if (_37017_is_byte) {
		_36317_data->_field_kind=jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("u8", 2))));
	} else {
		_36317_data->_field_kind=jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("i32", 3))));
	}
	_36317_data->_field_model=jule::Any(jule::new_struct<_10e9ca470_RuneExprModel>(new( std::nothrow ) _10e9ca470_RuneExprModel(_36213_r)));
	_36317_data->_field_is_rune=true;
	return _36317_data;
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_lit_float(jule::Ref<_11ce1fd50_LitExpr> _38624_l) {
	
	jule::F64 _38914_f{};
	std::tie(_38914_f,std::ignore) = _10cec8240_parse_float(_38624_l->_field_value,64LL);
	jule::Ref<_10f4ed830_Const> _39017_constant = _10f4ed830_new_f64(_38914_f);
	return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("f64", 3)))),jule::Ref<_10eeb79b0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),_39017_constant,false,_39017_constant));
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_lit_int(jule::Ref<_11ce1fd50_LitExpr> _40422_l) {
	
	jule::Str _40717_lit = _40422_l->_field_value;
	jule::Int _40817_base = 0LL;
	{
		auto _match_expr{ true };
		if (!(_40717_lit.has_prefix(jule::Str("0x", 2)) == _match_expr)) { goto _case_end_4560229376; }
		_case_begin_4560229376:;
		{
			_40717_lit=_40717_lit.slice(static_cast<jule::Int>(2LL));
			_40817_base=16LL;
		}
		goto _match_end_4560227216;
		_case_end_4560229376:;
		if (!(_40717_lit.has_prefix(jule::Str("0b", 2)) == _match_expr)) { goto _case_end_4560229056; }
		_case_begin_4560229056:;
		{
			_40717_lit=_40717_lit.slice(static_cast<jule::Int>(2LL));
			_40817_base=2LL;
		}
		goto _match_end_4560227216;
		_case_end_4560229056:;
		if (!(((_40717_lit[static_cast<jule::Int>(0LL)] == '0') && (static_cast<jule::I64>(_40717_lit.len()) > 1LL)) == _match_expr)) { goto _case_end_4560228544; }
		_case_begin_4560228544:;
		{
			_40717_lit=_40717_lit.slice(static_cast<jule::Int>(1LL));
			_40817_base=8LL;
		}
		goto _match_end_4560227216;
		_case_end_4560228544:;
		_case_begin_4560223744:;
		{
			_40817_base=10LL;
		}
		goto _match_end_4560227216;
		_case_end_4560223744:;
		_match_end_4560227216:;
	}
	jule::Ref<_10ee8a260_Data> _42717_d = jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::Ref<_10eeb79b0_TypeKind>(),jule::Ref<_10eeb79b0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_10f4ed830_Const>()));
	jule::Any _43317_value = jule::Any(nullptr);
	jule::I64 _43414_sig{};
	jule::Int _43419_err{};
	std::tie(_43414_sig,_43419_err) = _10ce6f0a0_parse_int(_40717_lit,_40817_base,64LL);
	if ((_43419_err == 0LLU)) {
		_43317_value=jule::Any(_43414_sig);
		_42717_d->_field_constant=_10f4ed830_new_i64(_43414_sig);
	} else {
		jule::U64 _43918_unsig{};
		std::tie(_43918_unsig,std::ignore) = _10ce6f0a0_parse_uint(_40717_lit,_40817_base,64LL);
		_42717_d->_field_constant=_10f4ed830_new_u64(_43918_unsig);
		_43317_value=jule::Any(_43918_unsig);
	}
	_42717_d->_field_kind=jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(_10ee8a260_kind_by_bitsize(_43317_value))));
	_10ee8a260_normalize_bitsize(_42717_d);
	_42717_d->_field_model=jule::Any(_42717_d->_field_constant);
	return _42717_d;
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_lit_num(jule::Ref<_11ce1fd50_LitExpr> _45422_l) {
	{
		auto _match_expr{ true };
		if (!(_11ce22a00_is_float(_45422_l->_field_value) == _match_expr)) { goto _case_end_4713372864; }
		_case_begin_4713372864:;
		{
			return (*this)._method_lit_float(_45422_l);
		}
		goto _match_end_4713370832;
		_case_end_4713372864:;
		_case_begin_4713371104:;
		{
			return (*this)._method_lit_int(_45422_l);
		}
		goto _match_end_4713370832;
		_case_end_4713371104:;
		_match_end_4713370832:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_lit(jule::Ref<_11ce1fd50_LitExpr> _46123_lit) {
	{
		auto _match_expr{ true };
		if (!(_46123_lit->_method_is_nil() == _match_expr)) { goto _case_end_4713379696; }
		_case_begin_4713379696:;
		{
			return (*this)._method_lit_nil();
		}
		goto _match_end_4713377664;
		_case_end_4713379696:;
		if (!(_11ce22a00_is_str(_46123_lit->_field_value) == _match_expr)) { goto _case_end_4713379808; }
		_case_begin_4713379808:;
		{
			return (*this)._method_lit_str(_46123_lit);
		}
		goto _match_end_4713377664;
		_case_end_4713379808:;
		if (!(_11ce22a00_is_bool(_46123_lit->_field_value) == _match_expr)) { goto _case_end_4713379440; }
		_case_begin_4713379440:;
		{
			return (*this)._method_lit_bool(_46123_lit);
		}
		goto _match_end_4713377664;
		_case_end_4713379440:;
		if (!(_11ce22a00_is_rune(_46123_lit->_field_value) == _match_expr)) { goto _case_end_4713379552; }
		_case_begin_4713379552:;
		{
			return (*this)._method_lit_rune(_46123_lit);
		}
		goto _match_end_4713377664;
		_case_end_4713379552:;
		if (!(_11ce22a00_is_num(_46123_lit->_field_value) == _match_expr)) { goto _case_end_4713379072; }
		_case_begin_4713379072:;
		{
			return (*this)._method_lit_num(_46123_lit);
		}
		goto _match_end_4713377664;
		_case_end_4713379072:;
		_case_begin_4713377936:;
		{
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4713377664;
		_case_end_4713377936:;
		_match_end_4713377664:;
	}
}



inline jule::Any _10ee8a260_Eval::_method_find_builtins(jule::Str _47232_ident) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_10e9b6a10_ImportInfo>>())) { goto _case_end_4713394224; }
		_case_begin_4713394224:;
		{
			jule::Any _47521_def = _10ee8a260_find_builtins_import(_47232_ident,(*this)._field_lookup.operator jule::Ref<_10e9b6a10_ImportInfo>());
			if ((_47521_def != nullptr)) {
				return _47521_def;
			}
		}
		goto _match_end_4713394032;
		_case_end_4713394224:;
		if (!(_match_expr.type_is<jule::Ref<_10e9847f0_Sema>>())) { goto _case_end_4713394336; }
		_case_begin_4713394336:;
		{
			jule::Any _48121_def = _10ee8a260_find_builtins_sema(_47232_ident,(*this)._field_lookup.operator jule::Ref<_10e9847f0_Sema>());
			if ((_48121_def != nullptr)) {
				return _48121_def;
			}
		}
		goto _match_end_4713394032;
		_case_end_4713394336:;
		if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_ScopeChecker>>())) { goto _case_end_4713394448; }
		_case_begin_4713394448:;
		{
			jule::Any _48721_def = _10ee8a260_find_builtins_sema(_47232_ident,(*this)._field_lookup.operator jule::Ref<_10e97fcf0_ScopeChecker>()->_field_s);
			if ((_48721_def != nullptr)) {
				return _48721_def;
			}
		}
		goto _match_end_4713394032;
		_case_end_4713394448:;
		_match_end_4713394032:;
	}
	return _10f3f9210_find_builtin_def(_47232_ident);
}



inline jule::Any _10ee8a260_Eval::_method_get_def(jule::Str _49626_ident,jule::Bool _49638_cpp_linked) {
	if ((!_49638_cpp_linked)) {
		jule::Ref<_10e975f00_Enum> _49821_enm = (*this)._field_lookup.get()._method_find_enum(_49626_ident);
		if (jule::real(_49821_enm)) {
			return _49821_enm;
		}
	}
	jule::Ref<_10ebc2ad0_Var> _50417_v = (*this)._field_lookup.get()._method_find_var(_49626_ident,_49638_cpp_linked);
	if (jule::real(_50417_v)) {
		return _50417_v;
	}
	jule::Ref<_10e56a140_Fn> _50917_f = (*this)._field_lookup.get()._method_find_fn(_49626_ident,_49638_cpp_linked);
	if (jule::real(_50917_f)) {
		return _50917_f;
	}
	jule::Ref<_10e3fc8f0_Struct> _51417_s = (*this)._field_lookup.get()._method_find_struct(_49626_ident,_49638_cpp_linked);
	if (jule::real(_51417_s)) {
		return _51417_s;
	}
	jule::Ref<_10eeb79b0_TypeAlias> _51917_ta = (*this)._field_lookup.get()._method_find_type_alias(_49626_ident,_49638_cpp_linked);
	if (jule::real(_51917_ta)) {
		return _51917_ta;
	}
	return (*this)._method_find_builtins(_49626_ident);
}



inline void _10ee8a260_Eval::_method_push_reference(jule::Ref<_10e8ca650_ReferenceStack> _52737_references) {
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_ScopeChecker>>())) { goto _case_end_4713438624; }
		_case_begin_4713438624:;
		{
			jule::Ref<_10e97fcf0_ScopeChecker> _53021_sc = (*this)._field_lookup.operator jule::Ref<_10e97fcf0_ScopeChecker>()->_method_get_root();
			if ((!_52737_references->_method_exist_1(_53021_sc->_field_owner->_field_decl))) {
				_52737_references->_method_push(jule::Any(_53021_sc->_field_owner->_field_decl));
			}
		}
		goto _match_end_4713435248;
		_case_end_4713438624:;
		_case_begin_4713435456:;
		{
			if ((jule::real((*this)._field_owner) && (!_52737_references->_method_exist_0((*this)._field_owner)))) {
				_52737_references->_method_push(jule::Any((*this)._field_owner));
			}
		}
		goto _match_end_4713435248;
		_case_end_4713435456:;
		_match_end_4713435248:;
	}
}



inline void _10ee8a260_Eval::_method_push_reference_to_fn(jule::Ref<_10e56a140_Fn> _54243_f) {
	(*this)._method_push_reference(_54243_f->_field_references);
}



inline void _10ee8a260_Eval::_method_push_reference_to_var(jule::Ref<_10ebc2ad0_Var> _54644_v) {
	if ((!jule::real(_54644_v->_field_references))) {
		return;
	}
	(*this)._method_push_reference(_54644_v->_field_references);
}



inline void _10ee8a260_Eval::_method_push_reference_to_struct(jule::Ref<_10e3fc8f0_Struct> _55447_s) {
	(*this)._method_push_reference(_55447_s->_field_references);
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_enum(jule::Ref<_10e975f00_Enum> _55828_enm,_11ce22a00_Token _55840_error_token) {
	if ((!(*this)._field_s->_method_is_accessible_define(_55828_enm->_field_public,_55828_enm->_field_token))) {
		(*this)._method_push_err(_55840_error_token,jule::Str("ident_is_not_accessible", 23),jule::Slice<jule::Any>({jule::Any(_55828_enm->_field_ident)}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_55828_enm)),jule::Ref<_10eeb79b0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),true,jule::new_ref<_10f4ed830_Const>()));
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_struct(jule::Ref<_10e3fc8f0_StructIns> _57534_s,_11ce22a00_Token _57549_error_token) {
	if ((!(*this)._field_s->_method_is_accessible_define(_57534_s->_field_decl->_field_public,_57534_s->_field_decl->_field_token))) {
		(*this)._method_push_err(_57549_error_token,jule::Str("ident_is_not_accessible", 23),jule::Slice<jule::Any>({jule::Any(_57534_s->_field_decl->_field_ident)}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_57534_s)),jule::Ref<_10eeb79b0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),_57534_s,true,jule::new_ref<_10f4ed830_Const>()));
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_fn_ins(jule::Ref<_10e56a140_FnIns> _59330_f) {
	return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_59330_f)),jule::Ref<_10eeb79b0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),_59330_f,false,jule::new_ref<_10f4ed830_Const>()));
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_fn(jule::Ref<_10e56a140_Fn> _60630_f,_11ce22a00_Token _60638_error_token) {
	if ((!(*this)._field_s->_method_is_accessible_define(_60630_f->_field_public,_60630_f->_field_token))) {
		(*this)._method_push_err(_60638_error_token,jule::Str("ident_is_not_accessible", 23),jule::Slice<jule::Any>({jule::Any(_60630_f->_field_ident)}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	(*this)._method_push_reference_to_fn(_60630_f);
	jule::Ref<_10e56a140_FnIns> _61417_ins = _60630_f->_method_instance();
	return (*this)._method_eval_fn_ins(_61417_ins);
}



inline jule::Bool _10ee8a260_Eval::_method_check_illegal_cycles(jule::Ref<_10ebc2ad0_Var> _62143_v,_11ce22a00_Token _62152_decl_token) {
	jule::Bool _62173_ok{jule::Bool()};
	if ((!jule::real((*this)._field_owner))) {
		_62173_ok = true;
		return _62173_ok;
	}
	if ((((*this)._field_owner).alloc == (_62143_v).alloc)) {
		(*this)._method_push_err((*this)._field_owner->_field_token,jule::Str("illegal_cycle_refers_itself", 27),jule::Slice<jule::Any>({jule::Any((*this)._field_owner->_field_ident)}));
		_62173_ok = false;
		return _62173_ok;
	}
	
	jule::Str _63517_message = jule::Str("", 0);
	jule::Fn<void(jule::Ref<_10ebc2ad0_Var>,jule::Ref<_10ebc2ad0_Var>)> _63713_push = jule::Fn<void(jule::Ref<_10ebc2ad0_Var>,jule::Ref<_10ebc2ad0_Var>)>([&](jule::Ref<_10ebc2ad0_Var> _63723_v1,jule::Ref<_10ebc2ad0_Var> _63733_v2) mutable -> void {
		jule::Str _63817_refers_to = _10d8aeab0_errorf(jule::Str("refers_to", 9),jule::Slice<jule::Any>({jule::Any(_63723_v1->_field_ident),jule::Any(_63733_v2->_field_ident)}));
		_63517_message=(((_10e8ca650_str_repeat(jule::Str(" ", 1),4LL) + _63817_refers_to) + jule::Str("\n", 1)) + _63517_message);
	});
	jule::Fn<jule::Bool(jule::Ref<_10ebc2ad0_Var>)> _64317_check_cross{jule::Fn<jule::Bool(jule::Ref<_10ebc2ad0_Var>)>()};
	_64317_check_cross=jule::Fn<jule::Bool(jule::Ref<_10ebc2ad0_Var>)>([&](jule::Ref<_10ebc2ad0_Var> _64426_v) mutable -> jule::Bool {
		{
			auto &__julec_range_expr = _64426_v->_field_depends;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_10ebc2ad0_Var> _10ee8a260_d{jule::Ref<_10ebc2ad0_Var>()};_10ee8a260_d = *__julec_range_begin;
				_iter_begin_4713550544:;
				{
					if ((_10ee8a260_d == (*this)._field_owner)) {
						_63713_push(_64426_v,_10ee8a260_d);
						return false;
					}
					if ((!_64317_check_cross(_10ee8a260_d))) {
						_63713_push(_64426_v,_10ee8a260_d);
						return false;
					}
				}
				_iter_next_4713550544:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _10ee8a260_d = *__julec_range_begin; goto _iter_begin_4713550544; }
				_iter_end_4713550544:;
			}
		}
		return true;
	});
	if ((!_64317_check_cross(_62143_v))) {
		jule::Str _66121_err_msg = _63517_message;
		_63517_message=jule::Str("", 0);
		_63713_push((*this)._field_owner,_62143_v);
		_66121_err_msg=(_66121_err_msg + _63517_message);
		(*this)._method_push_err(_62152_decl_token,jule::Str("illegal_cross_cycle", 19),jule::Slice<jule::Any>({jule::Any(_66121_err_msg)}));
		_62173_ok = false;
		return _62173_ok;
	}
	(*this)._field_owner->_field_depends=append((*this)._field_owner->_field_depends,jule::Slice<jule::Ref<_10ebc2ad0_Var>>({_62143_v}));
	_62173_ok = true;
	return _62173_ok;
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_var(jule::Ref<_10ebc2ad0_Var> _67331_v,_11ce22a00_Token _67340_error_token) {
	if ((!(*this)._field_s->_method_is_accessible_define(_67331_v->_field_public,_67331_v->_field_token))) {
		(*this)._method_push_err(_67340_error_token,jule::Str("ident_is_not_accessible", 23),jule::Slice<jule::Any>({jule::Any(_67331_v->_field_ident)}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	_67331_v->_field_used=true;
	jule::Bool _68113_ok = (*this)._method_check_illegal_cycles(_67331_v,_67340_error_token);
	if ((!_68113_ok)) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	(*this)._method_push_reference_to_var(_67331_v);
	if (((!_67331_v->_field_cpp_linked) && ((!jule::real(_67331_v->_field_value)) || (!jule::real(_67331_v->_field_value->_field_data))))) {
		if (_67331_v->_field_constant) {
			(*this)._field_s->_method_check_type_var(_67331_v,(*this)._field_s);
			if ((!jule::real(_67331_v->_field_value->_field_data))) {
				return jule::new_ref<_10ee8a260_Data>();
			}
		}
	}
	if (((!jule::real(_67331_v->_field_kind)) || (!jule::real(_67331_v->_field_kind->_field_kind)))) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	jule::Ref<_10ee8a260_Data> _70317_d = jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(_67331_v->_field_kind->_field_kind->_method_clone(),jule::Ref<_10eeb79b0_TypeKind>(),_67331_v->_field_mutable,_67331_v->_field_reference,(!_67331_v->_field_constant),jule::Bool(),jule::Bool(),_67331_v,false,jule::Ref<_10f4ed830_Const>()));
	if ((((!_67331_v->_field_cpp_linked) && _67331_v->_method_is_initialized()) && jule::real(_67331_v->_field_value->_field_data))) {
		_70317_d->_field_is_rune=_67331_v->_field_value->_field_data->_field_is_rune;
	}
	if (_67331_v->_field_constant) {
		_70317_d->_field_constant=jule::new_ref<_10f4ed830_Const>(_67331_v->_field_value->_field_data->_field_constant.get());
		_70317_d->_field_model=jule::Any(_70317_d->_field_constant);
	}
	if (jule::real(_70317_d->_field_kind->_method_fnc())) {
		jule::Ref<_10e56a140_FnIns> _72221_f = _70317_d->_field_kind->_method_fnc();
		if (jule::real(_72221_f->_field_decl)) {
			_72221_f->_field_decl->_field_ident=_67331_v->_field_ident;
		}
	}
	return _70317_d;
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_type_alias(jule::Ref<_10eeb79b0_TypeAlias> _73238_ta,_11ce22a00_Token _73254_error_token) {
	if ((!(*this)._field_s->_method_is_accessible_define(_73238_ta->_field_public,_73238_ta->_field_token))) {
		(*this)._method_push_err(_73254_error_token,jule::Str("ident_is_not_accessible", 23),jule::Slice<jule::Any>({jule::Any(_73238_ta->_field_ident)}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	_73238_ta->_field_used=true;
	jule::Trait<_10eeb79b0_Kind> _74017_kind = _73238_ta->_field_kind->_field_kind->_field_kind;
	{
		auto _match_expr{ _74017_kind };
		if (!(_match_expr.type_is<jule::Ref<_10e3fc8f0_StructIns>>())) { goto _case_end_4713623696; }
		_case_begin_4713623696:;
		{
			return (*this)._method_eval_struct(_74017_kind.operator jule::Ref<_10e3fc8f0_StructIns>(),_73254_error_token);
		}
		goto _match_end_4713618320;
		_case_end_4713623696:;
		if (!(_match_expr.type_is<jule::Ref<_10e975f00_Enum>>())) { goto _case_end_4713624400; }
		_case_begin_4713624400:;
		{
			return (*this)._method_eval_enum(_74017_kind.operator jule::Ref<_10e975f00_Enum>(),_73254_error_token);
		}
		goto _match_end_4713618320;
		_case_end_4713624400:;
		_case_begin_4713617040:;
		{
			jule::Ref<_10ee8a260_Data> _74921_d = jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(_73238_ta->_field_kind->_field_kind->_method_clone(),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),true,jule::Ref<_10f4ed830_Const>()));
			_74921_d->_field_model=jule::Any(_74921_d->_field_kind);
			return _74921_d;
		}
		goto _match_end_4713618320;
		_case_end_4713617040:;
		_match_end_4713618320:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_def(jule::Any _75831_def,_11ce22a00_Token _75841_ident) {
	{
		auto _match_expr{ _75831_def };
		if (!(_match_expr.type_is<jule::Ref<_10ebc2ad0_Var>>())) { goto _case_end_4713632464; }
		_case_begin_4713632464:;
		{
			return (*this)._method_eval_var(_75831_def.operator jule::Ref<_10ebc2ad0_Var>(),_75841_ident);
		}
		goto _match_end_4713632160;
		_case_end_4713632464:;
		if (!(_match_expr.type_is<jule::Ref<_10e975f00_Enum>>())) { goto _case_end_4713632576; }
		_case_begin_4713632576:;
		{
			return (*this)._method_eval_enum(_75831_def.operator jule::Ref<_10e975f00_Enum>(),_75841_ident);
		}
		goto _match_end_4713632160;
		_case_end_4713632576:;
		if (!(_match_expr.type_is<jule::Ref<_10e3fc8f0_Struct>>())) { goto _case_end_4713632688; }
		_case_begin_4713632688:;
		{
			return (*this)._method_eval_struct(_75831_def.operator jule::Ref<_10e3fc8f0_Struct>()->_method_instance(),_75841_ident);
		}
		goto _match_end_4713632160;
		_case_end_4713632688:;
		if (!(_match_expr.type_is<jule::Ref<_10e56a140_Fn>>())) { goto _case_end_4713635824; }
		_case_begin_4713635824:;
		{
			return (*this)._method_eval_fn(_75831_def.operator jule::Ref<_10e56a140_Fn>(),_75841_ident);
		}
		goto _match_end_4713632160;
		_case_end_4713635824:;
		if (!(_match_expr.type_is<jule::Ref<_10e56a140_FnIns>>())) { goto _case_end_4713635936; }
		_case_begin_4713635936:;
		{
			return (*this)._method_eval_fn_ins(_75831_def.operator jule::Ref<_10e56a140_FnIns>());
		}
		goto _match_end_4713632160;
		_case_end_4713635936:;
		if (!(_match_expr.type_is<jule::Ref<_10eeb79b0_TypeAlias>>())) { goto _case_end_4713636048; }
		_case_begin_4713636048:;
		{
			return (*this)._method_eval_type_alias(_75831_def.operator jule::Ref<_10eeb79b0_TypeAlias>(),_75841_ident);
		}
		goto _match_end_4713632160;
		_case_end_4713636048:;
		_case_begin_4713631632:;
		{
			(*this)._method_push_err(_75841_ident,jule::Str("ident_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_75841_ident._field_kind)}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4713632160;
		_case_end_4713631632:;
		_match_end_4713632160:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_ident(jule::Ref<_11ce1fd50_IdentExpr> _78429_ident) {
	jule::Any _78517_def = (*this)._method_get_def(_78429_ident->_field_ident,_78429_ident->_field_cpp_linked);
	return (*this)._method_eval_def(_78517_def,_78429_ident->_field_token);
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_unary_minus(jule::Ref<_10ee8a260_Data> _78935_d) {
	jule::Ref<_10eeb79b0_Prim> _79013_t = _78935_d->_field_kind->_method_prim();
	if (((!jule::real(_79013_t)) || (!_10f5ea650_is_num(_79013_t->_method_to_str())))) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	if (_78935_d->_method_is_const()) {
		{
			auto _match_expr{ true };
			if (!(_78935_d->_field_constant->_method_is_f64() == _match_expr)) { goto _case_end_4712462080; }
			_case_begin_4712462080:;
			{
				_78935_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-static_cast<jule::F64>(_78935_d->_field_constant->_method_read_f64()))));
			}
			goto _match_end_4712461808;
			_case_end_4712462080:;
			if (!(_78935_d->_field_constant->_method_is_i64() == _match_expr)) { goto _case_end_4712462192; }
			_case_begin_4712462192:;
			{
				_78935_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-static_cast<jule::F64>(_78935_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4712461808;
			_case_end_4712462192:;
			if (!(_78935_d->_field_constant->_method_is_u64() == _match_expr)) { goto _case_end_4712462304; }
			_case_begin_4712462304:;
			{
				_78935_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-static_cast<jule::F64>(_78935_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_4712461808;
			_case_end_4712462304:;
			_match_end_4712461808:;
		}
		_10ee8a260_normalize_type(_78935_d);
	}
	_78935_d->_field_lvalue=false;
	_78935_d->_field_model=jule::Any(jule::new_struct<_10e9ca470_UnaryExprModel>(new( std::nothrow ) _10e9ca470_UnaryExprModel(_78935_d->_field_model,jule::Str("-", 1))));
	return _78935_d;
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_unary_plus(jule::Ref<_10ee8a260_Data> _81234_d) {
	jule::Ref<_10eeb79b0_Prim> _81313_t = _81234_d->_field_kind->_method_prim();
	if (((!jule::real(_81313_t)) || (!_10f5ea650_is_num(_81313_t->_method_to_str())))) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	if (_81234_d->_method_is_const()) {
		{
			auto _match_expr{ true };
			if (!(_81234_d->_field_constant->_method_is_f64() == _match_expr)) { goto _case_end_5318189984; }
			_case_begin_5318189984:;
			{
				_81234_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+static_cast<jule::F64>(_81234_d->_field_constant->_method_read_f64()))));
			}
			goto _match_end_5317969760;
			_case_end_5318189984:;
			if (!(_81234_d->_field_constant->_method_is_i64() == _match_expr)) { goto _case_end_5318216176; }
			_case_begin_5318216176:;
			{
				_81234_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+static_cast<jule::F64>(_81234_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_5317969760;
			_case_end_5318216176:;
			if (!(_81234_d->_field_constant->_method_is_u64() == _match_expr)) { goto _case_end_5318230000; }
			_case_begin_5318230000:;
			{
				_81234_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+static_cast<jule::F64>(_81234_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_5317969760;
			_case_end_5318230000:;
			_match_end_5317969760:;
		}
		_10ee8a260_normalize_type(_81234_d);
	}
	_81234_d->_field_lvalue=false;
	_81234_d->_field_model=jule::Any(jule::new_struct<_10e9ca470_UnaryExprModel>(new( std::nothrow ) _10e9ca470_UnaryExprModel(_81234_d->_field_model,jule::Str("+", 1))));
	return _81234_d;
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_unary_caret(jule::Ref<_10ee8a260_Data> _83535_d) {
	jule::Ref<_10eeb79b0_Prim> _83613_t = _83535_d->_field_kind->_method_prim();
	if (((!jule::real(_83613_t)) || (!_10f5ea650_is_int(_83613_t->_method_to_str())))) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	if (_83535_d->_method_is_const()) {
		{
			auto _match_expr{ true };
			if (!(_83535_d->_field_constant->_method_is_i64() == _match_expr)) { goto _case_end_4713649936; }
			_case_begin_4713649936:;
			{
				_83535_d->_field_constant->_method_set_i64(static_cast<jule::I64>((~static_cast<jule::I64>(_83535_d->_field_constant->_method_read_i64()))));
			}
			goto _match_end_4713649632;
			_case_end_4713649936:;
			if (!(_83535_d->_field_constant->_method_is_u64() == _match_expr)) { goto _case_end_4713650048; }
			_case_begin_4713650048:;
			{
				_83535_d->_field_constant->_method_set_u64(static_cast<jule::U64>((~static_cast<jule::U64>(_83535_d->_field_constant->_method_read_u64()))));
			}
			goto _match_end_4713649632;
			_case_end_4713650048:;
			_match_end_4713649632:;
		}
	}
	_83535_d->_field_lvalue=false;
	_83535_d->_field_model=jule::Any(jule::new_struct<_10e9ca470_UnaryExprModel>(new( std::nothrow ) _10e9ca470_UnaryExprModel(_83535_d->_field_model,jule::Str("^", 1))));
	return _83535_d;
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_unary_excl(jule::Ref<_10ee8a260_Data> _85934_d) {
	jule::Ref<_10eeb79b0_Prim> _86013_t = _85934_d->_field_kind->_method_prim();
	if (((!jule::real(_86013_t)) || (!_86013_t->_method_is_bool()))) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	if (_85934_d->_method_is_const()) {
		{
			auto _match_expr{ true };
			if (!(_85934_d->_field_constant->_method_is_bool() == _match_expr)) { goto _case_end_4713668928; }
			_case_begin_4713668928:;
			{
				_85934_d->_field_constant->_method_set_bool((!_85934_d->_field_constant->_method_read_bool()));
			}
			goto _match_end_4713668640;
			_case_end_4713668928:;
			_match_end_4713668640:;
		}
	}
	_85934_d->_field_lvalue=false;
	_85934_d->_field_model=jule::Any(jule::new_struct<_10e9ca470_UnaryExprModel>(new( std::nothrow ) _10e9ca470_UnaryExprModel(_85934_d->_field_model,jule::Str("!", 1))));
	return _85934_d;
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_unary_star(jule::Ref<_10ee8a260_Data> _88038_d,_11ce22a00_Token _88048_op) {
	if ((!(*this)._method_is_unsafe())) {
		(*this)._method_push_err(_88048_op,jule::Str("unsafe_behavior_at_out_of_unsafe_scope", 38),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_10eeb79b0_Ptr> _88517_t = _88038_d->_field_kind->_method_ptr();
	if (((!jule::real(_88517_t)) || _88517_t->_method_is_unsafe())) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	jule::drop(_88038_d->_field_constant);
	_88038_d->_field_lvalue=true;
	_88038_d->_field_kind=_88517_t->_field_elem;
	_88038_d->_field_model=jule::Any(jule::new_struct<_10e9ca470_UnaryExprModel>(new( std::nothrow ) _10e9ca470_UnaryExprModel(_88038_d->_field_model,jule::Str("*", 1))));
	return _88038_d;
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_unary_amper(jule::Ref<_10ee8a260_Data> _89935_d) {
	{
		auto _match_expr{ _89935_d->_field_model };
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_StructLitExprModel>>())) { goto _case_end_4713706320; }
		_case_begin_4713706320:;
		{
			jule::Ref<_10e9ca470_StructLitExprModel> _90221_lit = _89935_d->_field_model.operator jule::Ref<_10e9ca470_StructLitExprModel>();
			_89935_d->_field_kind=jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_10eeb79b0_Ref>(new( std::nothrow ) _10eeb79b0_Ref(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_90221_lit->_field_strct))))));
			_89935_d->_field_model=jule::Any(jule::new_struct<_10e9ca470_AllocStructLitExprModel>(new( std::nothrow ) _10e9ca470_AllocStructLitExprModel(_90221_lit)));
		}
		goto _match_end_4713692992;
		_case_end_4713706320:;
		_case_begin_4713693264:;
		{
			{
				auto _match_expr{ true };
				if (!(jule::real(_89935_d->_field_kind->_method_ref()) == _match_expr)) { goto _case_end_4713697264; }
				_case_begin_4713697264:;
				{
					_89935_d->_field_kind=jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_10eeb79b0_Ptr>(new( std::nothrow ) _10eeb79b0_Ptr(_89935_d->_field_kind->_method_ref()->_field_elem->_method_clone()))));
					_89935_d->_field_model=jule::Any(jule::new_struct<_10e9ca470_GetRefPtrExprModel>(new( std::nothrow ) _10e9ca470_GetRefPtrExprModel(_89935_d->_field_model)));
				}
				goto _match_end_4713695168;
				_case_end_4713697264:;
				if (!(_10eeb79b0_can_get_ptr(_89935_d) == _match_expr)) { goto _case_end_4713696736; }
				_case_begin_4713696736:;
				{
					_89935_d->_field_kind=jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_10eeb79b0_Ptr>(new( std::nothrow ) _10eeb79b0_Ptr(_89935_d->_field_kind->_method_clone()))));
					_89935_d->_field_model=jule::Any(jule::new_struct<_10e9ca470_UnaryExprModel>(new( std::nothrow ) _10e9ca470_UnaryExprModel(_89935_d->_field_model,jule::Str("&", 1))));
				}
				goto _match_end_4713695168;
				_case_end_4713696736:;
				_case_begin_4713695424:;
				{
					jule::drop(_89935_d);
				}
				goto _match_end_4713695168;
				_case_end_4713695424:;
				_match_end_4713695168:;
			}
		}
		goto _match_end_4713692992;
		_case_end_4713693264:;
		_match_end_4713692992:;
	}
	if (jule::real(_89935_d)) {
		jule::drop(_89935_d->_field_constant);
		_89935_d->_field_lvalue=true;
		_89935_d->_field_mutable=true;
	}
	return _89935_d;
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_unary_type_decl(jule::Ref<_10ee8a260_Data> _94643_d,jule::Ref<_11ce1fd50_UnaryExpr> _94653_u) {
	_10eeb79b0_TypeChecker _94717_tc = _10eeb79b0_TypeChecker((*this)._field_s,(*this)._field_lookup,jule::Ref<_10eeb79b0_Referencer>(),_94653_u->_field_op,jule::Slice<jule::Ref<_11ce1fd50_GenericDecl>>(),jule::Slice<jule::Ref<_10eeb79b0_TypeAlias>>(),jule::Bool());
	{
		auto _match_expr{ _94653_u->_field_op._field_kind };
		if (!(jule::Str("*", 1) == _match_expr)) { goto _case_end_4713723328; }
		_case_begin_4713723328:;
		{
			_94643_d->_field_kind=jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_94717_tc._method_build_ptr_from_type(_94643_d->_field_kind)));
		}
		goto _match_end_4713722432;
		_case_end_4713723328:;
		if (!(jule::Str("&", 1) == _match_expr)) { goto _case_end_4713727152; }
		_case_begin_4713727152:;
		{
			_94643_d->_field_kind=jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_94717_tc._method_build_ref_from_type(_94643_d->_field_kind)));
		}
		goto _match_end_4713722432;
		_case_end_4713727152:;
		_case_begin_4713722544:;
		{
			(*this)._method_push_err(_94653_u->_field_op,jule::Str("invalid_expr_unary_operator", 27),jule::Slice<jule::Any>({jule::Any(_94653_u->_field_op._field_kind)}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4713722432;
		_case_end_4713722544:;
		_match_end_4713722432:;
	}
	_94643_d->_field_decl=true;
	return _94643_d;
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_unary(jule::Ref<_11ce1fd50_UnaryExpr> _96934_u) {
	jule::Ref<_10eeb79b0_TypeKind> _97017_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_97017_prefix;
	});
	jule::Ref<_10ee8a260_Data> _97417_d = this->self->_method_eval_expr_kind(_96934_u->_field_expr);
	if ((!jule::real(_97417_d))) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	if (_97417_d->_field_decl) {
		return this->self->_method_eval_unary_type_decl(_97417_d,_96934_u);
	}
	jule::Ref<_10eeb79b0_TypeKind> _98317_cast_kind = _97417_d->_field_cast_kind;
	{
		auto _match_expr{ _96934_u->_field_op._field_kind };
		if (!(jule::Str("-", 1) == _match_expr)) { goto _case_end_4713748864; }
		_case_begin_4713748864:;
		{
			_97417_d=this->self->_method_eval_unary_minus(_97417_d);
		}
		goto _match_end_4713747264;
		_case_end_4713748864:;
		if (!(jule::Str("+", 1) == _match_expr)) { goto _case_end_4713749040; }
		_case_begin_4713749040:;
		{
			_97417_d=this->self->_method_eval_unary_plus(_97417_d);
		}
		goto _match_end_4713747264;
		_case_end_4713749040:;
		if (!(jule::Str("^", 1) == _match_expr)) { goto _case_end_4713749152; }
		_case_begin_4713749152:;
		{
			_97417_d=this->self->_method_eval_unary_caret(_97417_d);
		}
		goto _match_end_4713747264;
		_case_end_4713749152:;
		if (!(jule::Str("!", 1) == _match_expr)) { goto _case_end_4713749264; }
		_case_begin_4713749264:;
		{
			_97417_d=this->self->_method_eval_unary_excl(_97417_d);
		}
		goto _match_end_4713747264;
		_case_end_4713749264:;
		if (!(jule::Str("*", 1) == _match_expr)) { goto _case_end_4713748080; }
		_case_begin_4713748080:;
		{
			_97417_d=this->self->_method_eval_unary_star(_97417_d,_96934_u->_field_op);
		}
		goto _match_end_4713747264;
		_case_end_4713748080:;
		if (!(jule::Str("&", 1) == _match_expr)) { goto _case_end_4713748192; }
		_case_begin_4713748192:;
		{
			_97417_d=this->self->_method_eval_unary_amper(_97417_d);
		}
		goto _match_end_4713747264;
		_case_end_4713748192:;
		_case_begin_4713742144:;
		{
			jule::drop(_97417_d);
		}
		goto _match_end_4713747264;
		_case_end_4713742144:;
		_match_end_4713747264:;
	}
	if ((!jule::real(_97417_d))) {
		this->self->_method_push_err(_96934_u->_field_op,jule::Str("invalid_expr_unary_operator", 27),jule::Slice<jule::Any>({jule::Any(_96934_u->_field_op._field_kind)}));
	} else if (_97417_d->_method_is_const()) {
		_97417_d->_field_model=jule::Any(_97417_d->_field_constant);
	} else if (jule::real(_98317_cast_kind)) {
		_97417_d->_field_cast_kind=_98317_cast_kind;
		_10ee8a260_apply_cast_kind(_97417_d);
	}
	return _97417_d;
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_variadic(jule::Ref<_11ce1fd50_VariadicExpr> _100637_v) {
	jule::Ref<_10eeb79b0_TypeKind> _100717_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_100717_prefix;
	});
	jule::Ref<_10ee8a260_Data> _101117_d = this->self->_method_eval_expr_kind(_100637_v->_field_expr);
	if ((!jule::real(_101117_d))) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	if (jule::real(_101117_d->_field_kind->_method_ref())) {
		_101117_d->_field_kind=_101117_d->_field_kind->_method_ref()->_field_elem;
		_101117_d->_field_model=jule::Any(jule::new_struct<_10e9ca470_ExplicitDerefExprModel>(new( std::nothrow ) _10e9ca470_ExplicitDerefExprModel(_101117_d->_field_model)));
	}
	if ((!_10eeb79b0_is_variadicable(_101117_d->_field_kind))) {
		this->self->_method_push_err(_100637_v->_field_token,jule::Str("variadic_with_non_variadicable", 30),jule::Slice<jule::Any>({jule::Any(_101117_d->_field_kind->_method_to_str())}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	_101117_d->_field_variadiced=true;
	_101117_d->_field_kind=_101117_d->_field_kind->_method_slc()->_field_elem;
	return _101117_d;
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_unsafe(jule::Ref<_11ce1fd50_UnsafeExpr> _103335_u) {
	jule::Bool _103413_unsafety = this->self->_field_unsafety;
	this->self->_field_unsafety=true;
	jule::Ref<_10ee8a260_Data> _103717_d = this->self->_method_eval_expr_kind(_103335_u->_field_expr);
	this->self->_field_unsafety=_103413_unsafety;
	return _103717_d;
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_arr(jule::Ref<_11ce1fd50_SliceExpr> _104432_s) {
	jule::Ref<_10eeb79b0_Arr> _104617_pt = this->self->_field_prefix->_method_arr();
	jule::Ref<_10eeb79b0_Arr> _104817_arr = jule::new_struct<_10eeb79b0_Arr>(new( std::nothrow ) _10eeb79b0_Arr(false,0LL,_104617_pt->_field_elem));
	if (_104617_pt->_field_auto) {
		_104817_arr->_field_n=static_cast<jule::I64>(_104432_s->_field_elems.len());
	} else {
		_104817_arr->_field_n=static_cast<jule::I64>(_104432_s->_field_elems.len());
		if ((_104817_arr->_field_n > _104617_pt->_field_n)) {
			this->self->_method_push_err(_104432_s->_field_token,jule::Str("overflow_limits", 15),jule::Slice<jule::Any>({}));
		} else if ((_104817_arr->_field_n < _104617_pt->_field_n)) {
			_104817_arr->_field_n=_104617_pt->_field_n;
		}
	}
	jule::Ref<_10e9ca470_ArrayExprModel> _106517_model = jule::new_struct<_10e9ca470_ArrayExprModel>(new( std::nothrow ) _10e9ca470_ArrayExprModel(_104817_arr,jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_104432_s->_field_elems.len())))));
	jule::Ref<_10eeb79b0_TypeKind> _107017_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_104817_arr->_field_elem;
	{
		auto &__julec_range_expr = _104432_s->_field_elems;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10ee8a260_i{jule::Int()};_10ee8a260_i = 0;
			jule::Any _10ee8a260_elem{jule::Any()};_10ee8a260_elem = *__julec_range_begin;
			_iter_begin_4713819312:;
			{
				jule::Ref<_10ee8a260_Data> _107321_d = this->self->_method_eval_expr_kind(_10ee8a260_elem);
				if ((!jule::real(_107321_d))) {
					goto _iter_next_4713819312;
				}
				this->self->_field_s->_method_check_assign_type(_104817_arr->_field_elem,_107321_d,_104432_s->_field_token,true);
				_106517_model->_field_elems[static_cast<jule::Int>(_10ee8a260_i)]=_107321_d->_field_model;
			}
			_iter_next_4713819312:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10ee8a260_i; _10ee8a260_elem = *__julec_range_begin; goto _iter_begin_4713819312; }
			_iter_end_4713819312:;
		}
	}
	this->self->_field_prefix=_107017_prefix;
	return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_104817_arr)),jule::Ref<_10eeb79b0_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_106517_model,jule::Bool(),jule::Ref<_10f4ed830_Const>()));
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_exp_slc(jule::Ref<_11ce1fd50_SliceExpr> _109036_s,jule::Ref<_10eeb79b0_TypeKind> _109051_elem_type) {
	jule::Ref<_10eeb79b0_Slc> _109117_slc = jule::new_struct<_10eeb79b0_Slc>(new( std::nothrow ) _10eeb79b0_Slc(_109051_elem_type));
	jule::Ref<_10e9ca470_SliceExprModel> _109517_model = jule::new_struct<_10e9ca470_SliceExprModel>(new( std::nothrow ) _10e9ca470_SliceExprModel(_109051_elem_type,jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_109036_s->_field_elems.len())))));
	jule::Ref<_10eeb79b0_TypeKind> _110017_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_109117_slc->_field_elem;
	{
		auto &__julec_range_expr = _109036_s->_field_elems;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10ee8a260_i{jule::Int()};_10ee8a260_i = 0;
			jule::Any _10ee8a260_elem{jule::Any()};_10ee8a260_elem = *__julec_range_begin;
			_iter_begin_4713844384:;
			{
				jule::Ref<_10ee8a260_Data> _110321_d = this->self->_method_eval_expr_kind(_10ee8a260_elem);
				if ((!jule::real(_110321_d))) {
					goto _iter_next_4713844384;
				}
				this->self->_field_s->_method_check_assign_type(_109117_slc->_field_elem,_110321_d,_109036_s->_field_token,true);
				_109517_model->_field_elems[static_cast<jule::Int>(_10ee8a260_i)]=_110321_d->_field_model;
			}
			_iter_next_4713844384:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10ee8a260_i; _10ee8a260_elem = *__julec_range_begin; goto _iter_begin_4713844384; }
			_iter_end_4713844384:;
		}
	}
	this->self->_field_prefix=_110017_prefix;
	return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_109117_slc)),jule::Ref<_10eeb79b0_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_109517_model,jule::Bool(),jule::Ref<_10f4ed830_Const>()));
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_slice_expr(jule::Ref<_11ce1fd50_SliceExpr> _112039_s) {
	if (jule::real(this->self->_field_prefix)) {
		{
			auto _match_expr{ true };
			if (!(jule::real(this->self->_field_prefix->_method_arr()) == _match_expr)) { goto _case_end_4713860896; }
			_case_begin_4713860896:;
			{
				return this->self->_method_eval_arr(_112039_s);
			}
			goto _match_end_4713860592;
			_case_end_4713860896:;
			if (!(jule::real(this->self->_field_prefix->_method_slc()) == _match_expr)) { goto _case_end_4713861008; }
			_case_begin_4713861008:;
			{
				jule::Ref<_10eeb79b0_Slc> _112725_pt = this->self->_field_prefix->_method_slc();
				return this->self->_method_eval_exp_slc(_112039_s,_112725_pt->_field_elem);
			}
			goto _match_end_4713860592;
			_case_end_4713861008:;
			_match_end_4713860592:;
		}
	}
	jule::Ref<_10eeb79b0_TypeKind> _113217_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	if ((static_cast<jule::I64>(_112039_s->_field_elems.len()) == 0LL)) {
		this->self->_method_push_err(_112039_s->_field_token,jule::Str("dynamic_type_annotation_failed", 30),jule::Slice<jule::Any>({}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	jule::Ref<_10ee8a260_Data> _114017_first_elem = this->self->_method_eval_expr_kind(_112039_s->_field_elems[static_cast<jule::Int>(0LL)]);
	if ((!jule::real(_114017_first_elem))) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	jule::Ref<_10ee8a260_Data> _114517_d = this->self->_method_eval_exp_slc(_112039_s,_114017_first_elem->_field_kind);
	this->self->_field_prefix=_113217_prefix;
	return _114517_d;
}



inline void _10ee8a260_Eval::_method_check_integer_indexing_by_data(jule::Ref<_10ee8a260_Data> _115153_d,_11ce22a00_Token _115163_token) {
	jule::Str _115213_err_key = _10ee8a260_check_data_for_integer_indexing(_115153_d);
	if ((_115213_err_key != jule::Str("", 0))) {
		(*this)._method_push_err(_115163_token,_115213_err_key,jule::Slice<jule::Any>({}));
	}
}



inline void _10ee8a260_Eval::_method_indexing_ptr(jule::Ref<_10ee8a260_Data> _115835_d,jule::Ref<_10ee8a260_Data> _115849_index,jule::Ref<_11ce1fd50_IndexingExpr> _115863_i) {
	(*this)._method_check_integer_indexing_by_data(_115849_index,_115863_i->_field_token);
	jule::Ref<_10eeb79b0_Ptr> _116117_ptr = _115835_d->_field_kind->_method_ptr();
	{
		auto _match_expr{ true };
		if (!(_116117_ptr->_method_is_unsafe() == _match_expr)) { goto _case_end_4713896080; }
		_case_begin_4713896080:;
		{
			(*this)._method_push_err(_115863_i->_field_token,jule::Str("unsafe_ptr_indexing", 19),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_4713895808;
		_case_end_4713896080:;
		if (!((!(*this)._method_is_unsafe()) == _match_expr)) { goto _case_end_4713896192; }
		_case_begin_4713896192:;
		{
			(*this)._method_push_err(_115863_i->_field_token,jule::Str("unsafe_behavior_at_out_of_unsafe_scope", 38),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4713895808;
		_case_end_4713896192:;
		_match_end_4713895808:;
	}
	_115835_d->_field_kind=_116117_ptr->_field_elem->_method_clone();
}



inline void _10ee8a260_Eval::_method_indexing_arr(jule::Ref<_10ee8a260_Data> _117435_d,jule::Ref<_10ee8a260_Data> _117449_index,jule::Ref<_11ce1fd50_IndexingExpr> _117463_i) {
	jule::Ref<_10eeb79b0_Arr> _117517_arr = _117435_d->_field_kind->_method_arr();
	_117435_d->_field_kind=_117517_arr->_field_elem->_method_clone();
	(*this)._method_check_integer_indexing_by_data(_117449_index,_117463_i->_field_token);
}



inline void _10ee8a260_Eval::_method_indexing_slc(jule::Ref<_10ee8a260_Data> _118035_d,jule::Ref<_10ee8a260_Data> _118048_index,jule::Ref<_11ce1fd50_IndexingExpr> _118062_i) {
	jule::Ref<_10eeb79b0_Slc> _118117_slc = _118035_d->_field_kind->_method_slc();
	_118035_d->_field_kind=_118117_slc->_field_elem->_method_clone();
	(*this)._method_check_integer_indexing_by_data(_118048_index,_118062_i->_field_token);
}



inline void _10ee8a260_Eval::_method_indexing_map(jule::Ref<_10ee8a260_Data> _118635_d,jule::Ref<_10ee8a260_Data> _118649_index,jule::Ref<_11ce1fd50_IndexingExpr> _118667_i) {
	if ((!jule::real(_118649_index))) {
		return;
	}
	jule::Ref<_10eeb79b0_Map> _119117_m = _118635_d->_field_kind->_method_map();
	_10eb9c740_AssignTypeChecker _119217_atc = _10eb9c740_AssignTypeChecker((*this)._field_s,_119117_m->_field_key,_118649_index,_118667_i->_field_token,true);
	_119217_atc._method_check();
	_118635_d->_field_kind=_119117_m->_field_val->_method_clone();
}



inline void _10ee8a260_Eval::_method_indexing_str(jule::Ref<_10ee8a260_Data> _120435_d,jule::Ref<_10ee8a260_Data> _120449_index,jule::Ref<_11ce1fd50_IndexingExpr> _120463_i) {
	
	_120435_d->_field_kind->_field_kind=_10eeb79b0_build_prim_type(jule::Str("u8", 2));
	if ((!jule::real(_120449_index))) {
		return;
	}
	(*this)._method_check_integer_indexing_by_data(_120449_index,_120463_i->_field_token);
	if ((!_120449_index->_method_is_const())) {
		jule::drop(_120435_d->_field_constant);
		return;
	}
	if (_120435_d->_method_is_const()) {
		_11ce22a00_Token _122017_error_token = _120463_i->_field_token;
		jule::I64 _122117_i = static_cast<jule::I64>(_120449_index->_field_constant->_method_as_i64());
		jule::Str _122217_s = _120435_d->_field_constant->_method_read_str();
		if ((static_cast<jule::Int>(_122117_i) >= static_cast<jule::I64>(_122217_s.len()))) {
			(*this)._method_push_err(_122017_error_token,jule::Str("overflow_limits", 15),jule::Slice<jule::Any>({}));
		} else {
			_120435_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_122217_s[static_cast<jule::Int>(_122117_i)]));
		}
	}
}



inline void _10ee8a260_Eval::_method_to_indexing(jule::Ref<_10ee8a260_Data> _123134_d,jule::Ref<_10ee8a260_Data> _123148_index,jule::Ref<_11ce1fd50_IndexingExpr> _123166_i) {
	{
		auto _match_expr{ true };
		if (!(jule::real(_123134_d->_field_kind->_method_ptr()) == _match_expr)) { goto _case_end_4512148384; }
		_case_begin_4512148384:;
		{
			(*this)._method_indexing_ptr(_123134_d,_123148_index,_123166_i);
			return;
		}
		goto _match_end_4512138928;
		_case_end_4512148384:;
		if (!(jule::real(_123134_d->_field_kind->_method_arr()) == _match_expr)) { goto _case_end_4512148496; }
		_case_begin_4512148496:;
		{
			(*this)._method_indexing_arr(_123134_d,_123148_index,_123166_i);
			return;
		}
		goto _match_end_4512138928;
		_case_end_4512148496:;
		if (!(jule::real(_123134_d->_field_kind->_method_slc()) == _match_expr)) { goto _case_end_4512151680; }
		_case_begin_4512151680:;
		{
			(*this)._method_indexing_slc(_123134_d,_123148_index,_123166_i);
			return;
		}
		goto _match_end_4512138928;
		_case_end_4512151680:;
		if (!(jule::real(_123134_d->_field_kind->_method_map()) == _match_expr)) { goto _case_end_4512151792; }
		_case_begin_4512151792:;
		{
			(*this)._method_indexing_map(_123134_d,_123148_index,_123166_i);
			return;
		}
		goto _match_end_4512138928;
		_case_end_4512151792:;
		if (!(jule::real(_123134_d->_field_kind->_method_prim()) == _match_expr)) { goto _case_end_4512151904; }
		_case_begin_4512151904:;
		{
			jule::Ref<_10eeb79b0_Prim> _125017_prim = _123134_d->_field_kind->_method_prim();
			{
				auto _match_expr{ true };
				if (!(_125017_prim->_method_is_str() == _match_expr)) { goto _case_end_4512256944; }
				_case_begin_4512256944:;
				{
					(*this)._method_indexing_str(_123134_d,_123148_index,_123166_i);
					return;
				}
				goto _match_end_4512256384;
				_case_end_4512256944:;
				_match_end_4512256384:;
			}
		}
		goto _match_end_4512138928;
		_case_end_4512151904:;
		_match_end_4512138928:;
	}
	(*this)._method_push_err(_123166_i->_field_token,jule::Str("not_supports_indexing", 21),jule::Slice<jule::Any>({jule::Any(_123134_d->_field_kind->_method_to_str())}));
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_ident_decl_from_indexing(jule::Ref<_11ce1fd50_IndexingExpr> _126153_i) {
	{
		auto _match_expr{ _126153_i->_field_expr };
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_IdentExpr>>())) { goto _case_end_4512266032; }
		goto _match_end_4512264976;
		_case_end_4512266032:;
		_case_begin_4512265248:;
		{
			this->self->_method_push_err(_126153_i->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4512264976;
		_case_end_4512265248:;
		_match_end_4512264976:;
	}
	jule::Ref<_11ce1fd50_IdentTypeDecl> _126917_decl = jule::new_struct<_11ce1fd50_IdentTypeDecl>(new( std::nothrow ) _11ce1fd50_IdentTypeDecl(_11ce22a00_Token(),_126153_i->_field_expr.operator jule::Ref<_11ce1fd50_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ref<_11ce1fd50_TypeDecl>>()));
	{
		auto _match_expr{ _126153_i->_field_index };
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_UnaryExpr>>())) { goto _case_end_4512276272; }
		_case_begin_4512276272:;
		{
			jule::Ref<_10ee8a260_Data> _127721_d = this->self->_method_eval_unary(_126153_i->_field_index.operator jule::Ref<_11ce1fd50_UnaryExpr>());
			if ((!_127721_d->_field_decl)) {
				this->self->_method_push_err(_126153_i->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return jule::new_ref<_10ee8a260_Data>();
			}
			_126917_decl->_field_generics=append(_126917_decl->_field_generics,jule::Slice<jule::Ref<_11ce1fd50_TypeDecl>>({jule::new_struct<_11ce1fd50_TypeDecl>(new( std::nothrow ) _11ce1fd50_TypeDecl(_11ce22a00_Token(),_127721_d->_field_kind))}));
		}
		goto _match_end_4512272096;
		_case_end_4512276272:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_TypeDecl>>())) { goto _case_end_4512276384; }
		_case_begin_4512276384:;
		{
			_126917_decl->_field_generics=append(_126917_decl->_field_generics,jule::Slice<jule::Ref<_11ce1fd50_TypeDecl>>({_126153_i->_field_index.operator jule::Ref<_11ce1fd50_TypeDecl>()}));
		}
		goto _match_end_4512272096;
		_case_end_4512276384:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_IdentExpr>>())) { goto _case_end_4512276496; }
		_case_begin_4512276496:;
		{
			_126917_decl->_field_generics=append(_126917_decl->_field_generics,jule::Slice<jule::Ref<_11ce1fd50_TypeDecl>>({jule::new_struct<_11ce1fd50_TypeDecl>(new( std::nothrow ) _11ce1fd50_TypeDecl(_11ce22a00_Token(),jule::new_struct<_11ce1fd50_IdentTypeDecl>(new( std::nothrow ) _11ce1fd50_IdentTypeDecl(_11ce22a00_Token(),_126153_i->_field_index.operator jule::Ref<_11ce1fd50_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ref<_11ce1fd50_TypeDecl>>()))))}));
		}
		goto _match_end_4512272096;
		_case_end_4512276496:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_TupleExpr>>())) { goto _case_end_4512275536; }
		_case_begin_4512275536:;
		{
			{
				auto &__julec_range_expr = _126153_i->_field_index.operator jule::Ref<_11ce1fd50_TupleExpr>()->_field_expr;
				if (__julec_range_expr.begin() != __julec_range_expr.end()) {
					auto __julec_range_begin = __julec_range_expr.begin();
					const auto __julec_range_end = __julec_range_expr.end();
					jule::Any _10ee8a260_expr{jule::Any()};_10ee8a260_expr = *__julec_range_begin;
					_iter_begin_4512296992:;
					{
						{
							auto _match_expr{ _10ee8a260_expr };
							if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_TypeDecl>>())) { goto _case_end_4512298960; }
							_case_begin_4512298960:;
							{
								_126917_decl->_field_generics=append(_126917_decl->_field_generics,jule::Slice<jule::Ref<_11ce1fd50_TypeDecl>>({_10ee8a260_expr.operator jule::Ref<_11ce1fd50_TypeDecl>()}));
							}
							goto _match_end_4512298208;
							_case_end_4512298960:;
							if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_IdentExpr>>())) { goto _case_end_4512299072; }
							_case_begin_4512299072:;
							{
								_126917_decl->_field_generics=append(_126917_decl->_field_generics,jule::Slice<jule::Ref<_11ce1fd50_TypeDecl>>({jule::new_struct<_11ce1fd50_TypeDecl>(new( std::nothrow ) _11ce1fd50_TypeDecl(_11ce22a00_Token(),jule::new_struct<_11ce1fd50_IdentTypeDecl>(new( std::nothrow ) _11ce1fd50_IdentTypeDecl(_11ce22a00_Token(),_10ee8a260_expr.operator jule::Ref<_11ce1fd50_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ref<_11ce1fd50_TypeDecl>>()))))}));
							}
							goto _match_end_4512298208;
							_case_end_4512299072:;
							_match_end_4512298208:;
						}
					}
					_iter_next_4512296992:;
					++__julec_range_begin;
					if (__julec_range_begin != __julec_range_end) { _10ee8a260_expr = *__julec_range_begin; goto _iter_begin_4512296992; }
					_iter_end_4512296992:;
				}
			}
		}
		goto _match_end_4512272096;
		_case_end_4512275536:;
		_case_begin_4512272256:;
		{
			this->self->_method_push_err(_126153_i->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4512272096;
		_case_end_4512272256:;
		_match_end_4512272096:;
	}
	return this->self->_method_eval_type(jule::new_struct<_11ce1fd50_TypeDecl>(new( std::nothrow ) _11ce1fd50_TypeDecl(_11ce22a00_Token(),_126917_decl)));
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_indexing(jule::Ref<_11ce1fd50_IndexingExpr> _131337_i) {
	jule::Ref<_10eeb79b0_TypeKind> _131417_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_131417_prefix;
	});
	jule::Ref<_10ee8a260_Data> _131817_d = this->self->_method_eval_expr_kind(_131337_i->_field_expr);
	if ((!jule::real(_131817_d))) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	if (_131817_d->_field_decl) {
		return this->self->_method_eval_ident_decl_from_indexing(_131337_i);
	}
	jule::Any _132817_expr_model = _131817_d->_field_model;
	jule::Ref<_10ee8a260_Data> _132917_index = this->self->_method_eval_expr_kind(_131337_i->_field_index);
	this->self->_method_to_indexing(_131817_d,_132917_index,_131337_i);
	if (jule::real(_132917_index)) {
		if (_131817_d->_method_is_const()) {
			_131817_d->_field_model=jule::Any(_131817_d->_field_constant);
		} else {
			_131817_d->_field_model=jule::Any(jule::new_struct<_10e9ca470_IndexigExprModel>(new( std::nothrow ) _10e9ca470_IndexigExprModel(_132817_expr_model,_132917_index->_field_model)));
		}
	}
	return _131817_d;
}



inline std::tuple<jule::Ref<_10ee8a260_Data>,jule::Ref<_10ee8a260_Data>> _10ee8a260_Eval::_method_eval_slicing_exprs(jule::Ref<_11ce1fd50_SlicingExpr> _135042_s) {
	jule::Ref<_10eeb79b0_TypeKind> _135117_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_135117_prefix;
	});
	jule::Ref<_10ee8a260_Data> _135517_l = jule::new_ref<_10ee8a260_Data>();
	jule::Ref<_10ee8a260_Data> _135617_r = jule::new_ref<_10ee8a260_Data>();
	if ((_135042_s->_field_start != nullptr)) {
		_135517_l=this->self->_method_eval_expr_kind(_135042_s->_field_start);
		if (jule::real(_135517_l)) {
			this->self->_method_check_integer_indexing_by_data(_135517_l,_135042_s->_field_token);
		} else {
			return std::make_tuple(jule::new_ref<_10ee8a260_Data>(),jule::new_ref<_10ee8a260_Data>());
		}
	} else {
		_135517_l=jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(_10f521350_SYS_INT))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_10f4ed830_new_i64(0LL)));
		_135517_l->_field_model=jule::Any(_135517_l->_field_constant);
	}
	if ((_135042_s->_field_to != nullptr)) {
		_135617_r=this->self->_method_eval_expr_kind(_135042_s->_field_to);
		if (jule::real(_135617_r)) {
			this->self->_method_check_integer_indexing_by_data(_135617_r,_135042_s->_field_token);
		} else {
			return std::make_tuple(jule::new_ref<_10ee8a260_Data>(),jule::new_ref<_10ee8a260_Data>());
		}
	}
	return std::make_tuple(_135517_l,_135617_r);
}



inline void _10ee8a260_Eval::_method_slicing_arr(jule::Ref<_10ee8a260_Data> _138530_d) {
	jule::Ref<_10eeb79b0_TypeKind> _138617_elem_type = _138530_d->_field_kind->_method_arr()->_field_elem->_method_clone();
	_138530_d->_field_kind->_field_kind=jule::new_struct<_10eeb79b0_Slc>(new( std::nothrow ) _10eeb79b0_Slc(_138617_elem_type));
	_138530_d->_field_lvalue=false;
	_138530_d->_field_mutable=(_138530_d->_field_mutable || (!_10eeb79b0_is_mut(_138617_elem_type)));
}



inline void _10ee8a260_Eval::_method_slicing_slc(jule::Ref<_10ee8a260_Data> _139630_d) {
	_139630_d->_field_lvalue=false;
}



inline void _10ee8a260_Eval::_method_slicing_str(jule::Ref<_10ee8a260_Data> _140030_d,jule::Ref<_10ee8a260_Data> _140040_l,jule::Ref<_10ee8a260_Data> _140050_r) {
	_140030_d->_field_lvalue=false;
	_140030_d->_field_mutable=true;
	if ((!_140030_d->_method_is_const())) {
		return;
	}
	if (((!jule::real(_140040_l)) || (!jule::real(_140050_r)))) {
		jule::drop(_140030_d->_field_constant);
		return;
	}
	if ((_140040_l->_method_is_const() && _140050_r->_method_is_const())) {
		jule::I64 _141317_left = static_cast<jule::I64>(_140040_l->_field_constant->_method_as_i64());
		if ((_141317_left < 0LL)) {
			return;
		}
		jule::Str _141817_s = _140030_d->_field_constant->_method_read_str();
		jule::I64 _141921_right = 0LL;
		if ((!jule::real(_140050_r))) {
			_141921_right=static_cast<jule::I64>(static_cast<jule::I64>(_141817_s.len()));
		} else {
			_141921_right=static_cast<jule::I64>(_140050_r->_field_constant->_method_as_i64());
		}
		if ((_141317_left > _141921_right)) {
			return;
		}
		_140030_d->_field_constant->_method_set_str(_141817_s.slice(static_cast<jule::Int>(_141317_left),static_cast<jule::Int>(_141921_right)));
	} else {
		jule::drop(_140030_d->_field_constant);
	}
}



inline void _10ee8a260_Eval::_method_check_slicing(jule::Ref<_10ee8a260_Data> _143536_d,jule::Ref<_10ee8a260_Data> _143546_l,jule::Ref<_10ee8a260_Data> _143556_r,jule::Ref<_11ce1fd50_SlicingExpr> _143566_s) {
	{
		auto _match_expr{ true };
		if (!(jule::real(_143536_d->_field_kind->_method_arr()) == _match_expr)) { goto _case_end_4512399152; }
		_case_begin_4512399152:;
		{
			(*this)._method_slicing_arr(_143536_d);
			return;
		}
		goto _match_end_4512398816;
		_case_end_4512399152:;
		if (!(jule::real(_143536_d->_field_kind->_method_slc()) == _match_expr)) { goto _case_end_4512399264; }
		_case_begin_4512399264:;
		{
			(*this)._method_slicing_slc(_143536_d);
			return;
		}
		goto _match_end_4512398816;
		_case_end_4512399264:;
		if (!(jule::real(_143536_d->_field_kind->_method_prim()) == _match_expr)) { goto _case_end_4512399376; }
		_case_begin_4512399376:;
		{
			jule::Ref<_10eeb79b0_Prim> _144617_prim = _143536_d->_field_kind->_method_prim();
			{
				auto _match_expr{ true };
				if (!(_144617_prim->_method_is_str() == _match_expr)) { goto _case_end_4512410976; }
				_case_begin_4512410976:;
				{
					(*this)._method_slicing_str(_143536_d,_143546_l,_143556_r);
					return;
				}
				goto _match_end_4512408544;
				_case_end_4512410976:;
				_match_end_4512408544:;
			}
		}
		goto _match_end_4512398816;
		_case_end_4512399376:;
		_match_end_4512398816:;
	}
	(*this)._method_push_err(_143566_s->_field_token,jule::Str("not_supports_slicing", 20),jule::Slice<jule::Any>({jule::Any(_143536_d->_field_kind->_method_to_str())}));
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_slicing(jule::Ref<_11ce1fd50_SlicingExpr> _145736_s) {
	jule::Ref<_10ee8a260_Data> _145817_d = this->self->_method_eval_expr_kind(_145736_s->_field_expr);
	if ((!jule::real(_145817_d))) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	jule::Ref<_10ee8a260_Data> _146318_l{};
	jule::Ref<_10ee8a260_Data> _146325_r{};
	std::tie(_146318_l,_146325_r) = this->self->_method_eval_slicing_exprs(_145736_s);
	if ((!jule::real(_146318_l))) {
		return _145817_d;
	}
	this->self->_method_check_slicing(_145817_d,_146318_l,_146325_r,_145736_s);
	jule::drop(_145817_d->_field_cast_kind);
	jule::Ref<_10e9ca470_SlicingExprModel> _147117_model = jule::new_struct<_10e9ca470_SlicingExprModel>(new( std::nothrow ) _10e9ca470_SlicingExprModel(_145817_d->_field_model,_146318_l->_field_model,jule::Any()));
	if (jule::real(_146325_r)) {
		_147117_model->_field_right=_146325_r->_field_model;
	}
	_145817_d->_field_model=jule::Any(_147117_model);
	return _145817_d;
}



inline void _10ee8a260_Eval::_method_cast_ptr(jule::Ref<_10eeb79b0_TypeKind> _148427_t,jule::Ref<_10ee8a260_Data> _148445_d,_11ce22a00_Token _148455_error_token) {
	if ((!(*this)._method_is_unsafe())) {
		(*this)._method_push_err(_148455_error_token,jule::Str("unsafe_behavior_at_out_of_unsafe_scope", 38),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_10eeb79b0_Prim> _149013_prim = _148445_d->_field_kind->_method_prim();
	if (((!jule::real(_148445_d->_field_kind->_method_ptr())) && ((!jule::real(_149013_prim)) || (!_10f5ea650_is_int(_149013_prim->_method_to_str()))))) {
		(*this)._method_push_err(_148455_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(_148445_d->_field_kind->_method_to_str()),jule::Any(_148427_t->_method_to_str())}));
	}
	jule::drop(_148445_d->_field_constant);
}



inline void _10ee8a260_Eval::_method_cast_struct(jule::Ref<_10eeb79b0_TypeKind> _149834_t,jule::Ref<_10ee8a260_Data> _149852_d,_11ce22a00_Token _149862_error_token) {
	jule::Ref<_10e3d6eb0_Trait> _149917_tr = _149852_d->_field_kind->_method_trt();
	if ((!jule::real(_149917_tr))) {
		(*this)._method_push_err(_149862_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(_149852_d->_field_kind->_method_to_str()),jule::Any(_149834_t->_method_to_str())}));
		return;
	}
	jule::Ref<_10e3fc8f0_StructIns> _150517_s = jule::new_ref<_10e3fc8f0_StructIns>();
	if (jule::real(_149834_t->_method_ref())) {
		_150517_s=_149834_t->_method_ref()->_field_elem->_method_strct();
	} else {
		_150517_s=_149834_t->_method_strct();
	}
	(*this)._method_push_reference_to_struct(_150517_s->_field_decl);
	if ((!_150517_s->_field_decl->_method_is_implements(_149917_tr))) {
		(*this)._method_push_err(_149862_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(_149852_d->_field_kind->_method_to_str()),jule::Any(_149834_t->_method_to_str())}));
	}
}



inline void _10ee8a260_Eval::_method_cast_ref(jule::Ref<_10eeb79b0_TypeKind> _151931_t,jule::Ref<_10ee8a260_Data> _151949_d,_11ce22a00_Token _151959_error_token) {
	jule::Ref<_10eeb79b0_Ref> _152017_ref = _151931_t->_method_ref();
	if (jule::real(_152017_ref->_field_elem->_method_strct())) {
		(*this)._method_cast_struct(_151931_t,_151949_d,_151959_error_token);
		return;
	}
	(*this)._method_push_err(_151959_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(_151949_d->_field_kind->_method_to_str()),jule::Any(_151931_t->_method_to_str())}));
}



inline void _10ee8a260_Eval::_method_cast_slc(jule::Ref<_10eeb79b0_TypeKind> _152931_t,jule::Ref<_10ee8a260_Data> _152949_d,_11ce22a00_Token _152959_error_token) {
	if (jule::real(_152949_d->_field_kind->_method_enm())) {
		if (((!jule::real(_152949_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_prim())) || (!_152949_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_prim()->_method_is_str()))) {
			(*this)._method_push_err(_152959_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(_152949_d->_field_kind->_method_to_str()),jule::Any(_152931_t->_method_to_str())}));
			return;
		}
	} else if (((!jule::real(_152949_d->_field_kind->_method_prim())) || (!_152949_d->_field_kind->_method_prim()->_method_is_str()))) {
		(*this)._method_push_err(_152959_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(_152949_d->_field_kind->_method_to_str()),jule::Any(_152931_t->_method_to_str())}));
		return;
	}
	_152931_t=_152931_t->_method_slc()->_field_elem;
	jule::Ref<_10eeb79b0_Prim> _154113_prim = _152931_t->_method_prim();
	if (((!jule::real(_154113_prim)) || ((!_154113_prim->_method_is_u8()) && (!_154113_prim->_method_is_i32())))) {
		(*this)._method_push_err(_152959_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(_152949_d->_field_kind->_method_to_str()),jule::Any(_152931_t->_method_to_str())}));
	}
}



inline void _10ee8a260_Eval::_method_cast_str(jule::Ref<_10ee8a260_Data> _154731_d,_11ce22a00_Token _154741_error_token) {
	if (jule::real(_154731_d->_field_kind->_method_enm())) {
		jule::Ref<_10e975f00_Enum> _154921_e = _154731_d->_field_kind->_method_enm();
		if ((jule::real(_154921_e->_field_kind->_field_kind->_method_prim()) && _154921_e->_field_kind->_field_kind->_method_prim()->_method_is_str())) {
			return;
		}
	}
	if (jule::real(_154731_d->_field_kind->_method_prim())) {
		jule::Ref<_10eeb79b0_Prim> _155617_prim = _154731_d->_field_kind->_method_prim();
		if (((!_155617_prim->_method_is_u8()) && (!_155617_prim->_method_is_i32()))) {
			(*this)._method_push_err(_154741_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_154731_d->_field_kind->_method_to_str())}));
		}
		return;
	}
	if ((!jule::real(_154731_d->_field_kind->_method_slc()))) {
		(*this)._method_push_err(_154741_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_154731_d->_field_kind->_method_to_str())}));
		return;
	}
	jule::Ref<_10eeb79b0_TypeKind> _156817_t = _154731_d->_field_kind->_method_slc()->_field_elem;
	jule::Ref<_10eeb79b0_Prim> _156913_prim = _156817_t->_method_prim();
	if (((!jule::real(_156913_prim)) || ((!_156913_prim->_method_is_u8()) && (!_156913_prim->_method_is_i32())))) {
		(*this)._method_push_err(_154741_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_154731_d->_field_kind->_method_to_str())}));
	}
}



inline void _10ee8a260_Eval::_method_cast_int(jule::Ref<_10eeb79b0_TypeKind> _157531_t,jule::Ref<_10ee8a260_Data> _157549_d,_11ce22a00_Token _157559_error_token) {
	if (_157549_d->_method_is_const()) {
		jule::Ref<_10eeb79b0_Prim> _157717_prim = _157531_t->_method_prim();
		{
			auto _match_expr{ true };
			if (!(_10f5ea650_is_sig_int(_157717_prim->_field_kind) == _match_expr)) { goto _case_end_4512562560; }
			_case_begin_4512562560:;
			{
				_157549_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_157549_d->_field_constant->_method_as_i64()));
			}
			goto _match_end_4512562240;
			_case_end_4512562560:;
			if (!(_10f5ea650_is_unsig_int(_157717_prim->_field_kind) == _match_expr)) { goto _case_end_4512562672; }
			_case_begin_4512562672:;
			{
				_157549_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_157549_d->_field_constant->_method_as_u64()));
			}
			goto _match_end_4512562240;
			_case_end_4512562672:;
			_match_end_4512562240:;
		}
	}
	if (jule::real(_157549_d->_field_kind->_method_enm())) {
		jule::Ref<_10e975f00_Enum> _158817_e = _157549_d->_field_kind->_method_enm();
		if (_10f5ea650_is_num(_158817_e->_field_kind->_field_kind->_method_to_str())) {
			return;
		}
	}
	if (jule::real(_157549_d->_field_kind->_method_ptr())) {
		jule::Ref<_10eeb79b0_Prim> _159517_prim = _157531_t->_method_prim();
		if (_159517_prim->_method_is_uintptr()) {
		} else if ((!(*this)._method_is_unsafe())) {
			(*this)._method_push_err(_157559_error_token,jule::Str("unsafe_behavior_at_out_of_unsafe_scope", 38),jule::Slice<jule::Any>({}));
		} else if ((((((!_159517_prim->_method_is_i32()) && (!_159517_prim->_method_is_i64())) && (!_159517_prim->_method_is_u16())) && (!_159517_prim->_method_is_u32())) && (!_159517_prim->_method_is_u64()))) {
			(*this)._method_push_err(_157559_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(_157549_d->_field_kind->_method_to_str()),jule::Any(_157531_t->_method_to_str())}));
		}
		return;
	}
	jule::Ref<_10eeb79b0_Prim> _160613_prim = _157549_d->_field_kind->_method_prim();
	if ((jule::real(_160613_prim) && _10f5ea650_is_num(_160613_prim->_method_to_str()))) {
		return;
	}
	(*this)._method_push_err(_157559_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(_157549_d->_field_kind->_method_to_str()),jule::Any(_157531_t->_method_to_str())}));
}



inline void _10ee8a260_Eval::_method_cast_num(jule::Ref<_10eeb79b0_TypeKind> _161431_t,jule::Ref<_10ee8a260_Data> _161449_d,_11ce22a00_Token _161459_error_token) {
	if (_161449_d->_method_is_const()) {
		jule::Ref<_10eeb79b0_Prim> _161617_prim = _161431_t->_method_prim();
		{
			auto _match_expr{ true };
			if (!(_10f5ea650_is_float(_161617_prim->_field_kind) == _match_expr)) { goto _case_end_4512611616; }
			_case_begin_4512611616:;
			{
				_161449_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_161449_d->_field_constant->_method_as_f64()));
			}
			goto _match_end_4512611232;
			_case_end_4512611616:;
			if (!(_10f5ea650_is_sig_int(_161617_prim->_field_kind) == _match_expr)) { goto _case_end_4512611728; }
			_case_begin_4512611728:;
			{
				_161449_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_161449_d->_field_constant->_method_as_i64()));
			}
			goto _match_end_4512611232;
			_case_end_4512611728:;
			if (!(_10f5ea650_is_unsig_int(_161617_prim->_field_kind) == _match_expr)) { goto _case_end_4512611840; }
			_case_begin_4512611840:;
			{
				_161449_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_161449_d->_field_constant->_method_as_u64()));
			}
			goto _match_end_4512611232;
			_case_end_4512611840:;
			_match_end_4512611232:;
		}
	}
	if (jule::real(_161449_d->_field_kind->_method_enm())) {
		jule::Ref<_10e975f00_Enum> _163017_e = _161449_d->_field_kind->_method_enm();
		if (_10f5ea650_is_num(_163017_e->_field_kind->_field_kind->_method_to_str())) {
			return;
		}
	}
	jule::Ref<_10eeb79b0_Prim> _163613_prim = _161449_d->_field_kind->_method_prim();
	if ((jule::real(_163613_prim) && _10f5ea650_is_num(_163613_prim->_method_to_str()))) {
		return;
	}
	(*this)._method_push_err(_161459_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(_161449_d->_field_kind->_method_to_str()),jule::Any(_161431_t->_method_to_str())}));
}



inline void _10ee8a260_Eval::_method_cast_prim(jule::Ref<_10eeb79b0_TypeKind> _164432_t,jule::Ref<_10ee8a260_Data> _164450_d,_11ce22a00_Token _164460_error_token) {
	jule::Ref<_10eeb79b0_Prim> _164513_prim = _164432_t->_method_prim();
	{
		auto _match_expr{ true };
		if (!(_164513_prim->_method_is_any() == _match_expr)) { goto _case_end_4713951328; }
		goto _match_end_4713950224;
		_case_end_4713951328:;
		if (!(_164513_prim->_method_is_str() == _match_expr)) { goto _case_end_4713951440; }
		_case_begin_4713951440:;
		{
			(*this)._method_cast_str(_164450_d,_164460_error_token);
		}
		goto _match_end_4713950224;
		_case_end_4713951440:;
		if (!(_10f5ea650_is_int(_164513_prim->_method_to_str()) == _match_expr)) { goto _case_end_4713950848; }
		_case_begin_4713950848:;
		{
			(*this)._method_cast_int(_164432_t,_164450_d,_164460_error_token);
		}
		goto _match_end_4713950224;
		_case_end_4713950848:;
		if (!(_10f5ea650_is_num(_164513_prim->_method_to_str()) == _match_expr)) { goto _case_end_4713950960; }
		_case_begin_4713950960:;
		{
			(*this)._method_cast_num(_164432_t,_164450_d,_164460_error_token);
		}
		goto _match_end_4713950224;
		_case_end_4713950960:;
		_case_begin_4713950544:;
		{
			(*this)._method_push_err(_164460_error_token,jule::Str("type_not_supports_casting", 25),jule::Slice<jule::Any>({jule::Any(_164432_t->_method_to_str())}));
		}
		goto _match_end_4713950224;
		_case_end_4713950544:;
		_match_end_4713950224:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_cast_by_type_n_data(jule::Ref<_10eeb79b0_TypeKind> _166447_t,jule::Ref<_10ee8a260_Data> _166465_d,_11ce22a00_Token _166475_error_token) {
	{
		auto _match_expr{ true };
		if (!((jule::real(_166465_d->_field_kind->_method_prim()) && _166465_d->_field_kind->_method_prim()->_method_is_any()) == _match_expr)) { goto _case_end_4713970624; }
		goto _match_end_4713969408;
		_case_end_4713970624:;
		if (!(jule::real(_166447_t->_method_ptr()) == _match_expr)) { goto _case_end_4713974144; }
		_case_begin_4713974144:;
		{
			(*this)._method_cast_ptr(_166447_t,_166465_d,_166475_error_token);
		}
		goto _match_end_4713969408;
		_case_end_4713974144:;
		if (!(jule::real(_166447_t->_method_ref()) == _match_expr)) { goto _case_end_4713974256; }
		_case_begin_4713974256:;
		{
			(*this)._method_cast_ref(_166447_t,_166465_d,_166475_error_token);
		}
		goto _match_end_4713969408;
		_case_end_4713974256:;
		if (!(jule::real(_166447_t->_method_slc()) == _match_expr)) { goto _case_end_4713969968; }
		_case_begin_4713969968:;
		{
			(*this)._method_cast_slc(_166447_t,_166465_d,_166475_error_token);
		}
		goto _match_end_4713969408;
		_case_end_4713969968:;
		if (!(jule::real(_166447_t->_method_strct()) == _match_expr)) { goto _case_end_4713970080; }
		_case_begin_4713970080:;
		{
			(*this)._method_cast_struct(_166447_t,_166465_d,_166475_error_token);
		}
		goto _match_end_4713969408;
		_case_end_4713970080:;
		if (!(jule::real(_166447_t->_method_prim()) == _match_expr)) { goto _case_end_4713970192; }
		_case_begin_4713970192:;
		{
			(*this)._method_cast_prim(_166447_t,_166465_d,_166475_error_token);
		}
		goto _match_end_4713969408;
		_case_end_4713970192:;
		_case_begin_4713969664:;
		{
			(*this)._method_push_err(_166475_error_token,jule::Str("type_not_supports_casting", 25),jule::Slice<jule::Any>({jule::Any(_166447_t->_method_to_str())}));
			jule::drop(_166465_d);
		}
		goto _match_end_4713969408;
		_case_end_4713969664:;
		_match_end_4713969408:;
	}
	if ((!jule::real(_166465_d))) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	_166465_d->_field_mutable=(_166465_d->_field_mutable || ((!_10eeb79b0_is_mut(_166465_d->_field_kind)) && _10eeb79b0_is_mut(_166447_t)));
	_166465_d->_field_lvalue=_10eeb79b0_is_lvalue(_166447_t);
	_166465_d->_field_decl=false;
	if ((jule::real(_166447_t->_method_prim()) && _166465_d->_method_is_const())) {
		_166465_d->_field_model=jule::Any(_166465_d->_field_constant);
	}
	if (((!jule::real(_166465_d->_field_kind->_method_enm())) || (_166465_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_to_str() != _166447_t->_method_to_str()))) {
		_166465_d->_field_cast_kind=_166447_t;
	} else {
		_166465_d->_field_kind=_166447_t;
	}
	return _166465_d;
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_cast(jule::Ref<_11ce1fd50_CastExpr> _171333_c) {
	jule::Ref<_10eeb79b0_TypeSymbol> _171417_t = _10e8ca650_build_type(_171333_c->_field_kind);
	jule::Bool _171513_ok = this->self->_field_s->_method_check_type(_171417_t,this->self->_field_lookup);
	if ((!_171513_ok)) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	jule::Ref<_10eeb79b0_TypeKind> _172017_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_172017_prefix;
	});
	jule::Ref<_10ee8a260_Data> _172417_d = this->self->_method_eval_expr_kind(_171333_c->_field_expr);
	if ((!jule::real(_172417_d))) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	_172417_d=this->self->_method_eval_cast_by_type_n_data(_171417_t->_field_kind,_172417_d,_171333_c->_field_kind->_field_token);
	return _172417_d;
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_ns_selection(jule::Ref<_11ce1fd50_NsSelectionExpr> _173436_s) {
	jule::Str _173513_path = _10eeb79b0_build_link_path_by_tokens(_173436_s->_field_ns);
	jule::Ref<_10e9b6a10_ImportInfo> _173617_imp = (*this)._field_lookup.get()._method_select_package(jule::Fn<jule::Bool(jule::Ref<_10e9b6a10_ImportInfo>)>([&](jule::Ref<_10e9b6a10_ImportInfo> _173653_p) mutable -> jule::Bool {
		return (_173653_p->_field_link_path == _173513_path);
	}));
	if (((!jule::real(_173617_imp)) || (!_173617_imp->_method_is_lookupable(jule::Str("self", 4))))) {
		(*this)._method_push_err(_173436_s->_field_ident,jule::Str("namespace_not_exist", 19),jule::Slice<jule::Any>({jule::Any(_173513_path)}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	jule::Trait<_10f3df410_Lookup> _174517_lookup = (*this)._field_lookup;
	(*this)._field_lookup=_173617_imp;
	
	jule::Any _174917_def = (*this)._method_get_def(_173436_s->_field_ident._field_kind,false);
	(*this)._field_lookup=_174517_lookup;
	jule::Ref<_10ee8a260_Data> _175217_d = (*this)._method_eval_def(_174917_def,_173436_s->_field_ident);
	return _175217_d;
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_struct_lit_explicit(jule::Ref<_10e3fc8f0_StructIns> _175748_s,jule::Slice<jule::Any> _175767_exprs,_11ce22a00_Token _175786_error_token) {
	jule::Bool _175813_ok = this->self->_field_s->_method_check_generic_quantity(static_cast<jule::I64>(_175748_s->_field_decl->_field_generics.len()),static_cast<jule::I64>(_175748_s->_field_generics.len()),_175786_error_token);
	if ((!_175813_ok)) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	this->self->_method_push_reference_to_struct(_175748_s->_field_decl);
	_10eb9c740_StructLitChecker _176617_slc = _10eb9c740_StructLitChecker(this->self,_175786_error_token,_175748_s,jule::Slice<jule::Ref<_10e9ca470_StructArgExprModel>>());
	_176617_slc._method_check(_175767_exprs);
	return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_175748_s)),jule::Ref<_10eeb79b0_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_10e9ca470_StructLitExprModel>(new( std::nothrow ) _10e9ca470_StructLitExprModel(_175748_s,_176617_slc._field_args)),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_struct_lit(jule::Ref<_11ce1fd50_StructLit> _178339_lit) {
	jule::Ref<_10eeb79b0_TypeSymbol> _178417_t = _10e8ca650_build_type(_178339_lit->_field_kind);
	jule::Bool _178513_ok = this->self->_field_s->_method_check_type(_178417_t,this->self->_field_lookup);
	if ((!_178513_ok)) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	jule::Ref<_10e3fc8f0_StructIns> _179017_s = _178417_t->_field_kind->_method_strct();
	if ((!jule::real(_179017_s))) {
		this->self->_method_push_err(_178339_lit->_field_kind->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	return this->self->_method_eval_struct_lit_explicit(_179017_s,_178339_lit->_field_exprs,_178339_lit->_field_kind->_field_token);
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_type(jule::Ref<_11ce1fd50_TypeDecl> _179932_t) {
	jule::Ref<_10eeb79b0_TypeSymbol> _180017_tk = _10e8ca650_build_type(_179932_t);
	jule::Bool _180113_ok = (*this)._field_s->_method_check_type(_180017_tk,(*this)._field_lookup);
	if ((!_180113_ok)) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(_180017_tk->_field_kind,jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_180017_tk->_field_kind,true,jule::Ref<_10f4ed830_Const>()));
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_call_type_fn(jule::Ref<_11ce1fd50_FnCallExpr> _181336_fc,jule::Ref<_10ee8a260_Data> _181357_d) {
	if ((static_cast<jule::I64>(_181336_fc->_field_generics.len()) > 0LL)) {
		this->self->_method_push_err(_181336_fc->_field_token,jule::Str("type_not_supports_generics", 26),jule::Slice<jule::Any>({jule::Any(_181357_d->_field_kind->_method_to_str())}));
	} else if ((static_cast<jule::I64>(_181336_fc->_field_args.len()) < 1LL)) {
		this->self->_method_push_err(_181336_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
	} else if ((static_cast<jule::I64>(_181336_fc->_field_args.len()) > 1LL)) {
		this->self->_method_push_err(_181336_fc->_field_args[static_cast<jule::Int>(1LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	if ((static_cast<jule::I64>(_181336_fc->_field_args.len()) > 0LL)) {
		jule::Ref<_10ee8a260_Data> _182321_arg = this->self->_method_eval_expr_kind(_181336_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_kind);
		if (jule::real(_182321_arg)) {
			_181357_d=this->self->_method_eval_cast_by_type_n_data(_181357_d->_field_kind,_182321_arg,_181336_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token);
		}
	}
	_181357_d->_field_decl=false;
	return _181357_d;
}



inline std::tuple<jule::Bool,jule::Bool> _10ee8a260_Eval::_method_check_fn_call_generics(jule::Ref<_10e56a140_FnIns> _183445_f,jule::Ref<_11ce1fd50_FnCallExpr> _183513_fc) {
	jule::Bool _183542_dynamic_annotation{jule::Bool()};
	jule::Bool _183532_ok{jule::Bool()};
	{
		auto _match_expr{ true };
		if (!((((static_cast<jule::I64>(_183445_f->_field_decl->_field_generics.len()) > 0LL) && (static_cast<jule::I64>(_183513_fc->_field_generics.len()) == 0LL)) && (static_cast<jule::I64>(_183445_f->_field_params.len()) > 0LL)) == _match_expr)) { goto _case_end_5318207104; }
		_case_begin_5318207104:;
		{
			_183542_dynamic_annotation=true;
			_183445_f->_field_generics=jule::Slice<jule::Ref<_10eeb79b0_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_183445_f->_field_decl->_field_generics.len())));
			_183532_ok = true;
			_183542_dynamic_annotation = true;
			return std::make_tuple(_183532_ok,_183542_dynamic_annotation);
		}
		goto _match_end_5318239200;
		_case_end_5318207104:;
		if (!((!(*this)._field_s->_method_check_generic_quantity(static_cast<jule::I64>(_183445_f->_field_decl->_field_generics.len()),static_cast<jule::I64>(_183513_fc->_field_generics.len()),_183513_fc->_field_token)) == _match_expr)) { goto _case_end_5318329376; }
		_case_begin_5318329376:;
		{
			_183532_ok = false;
			_183542_dynamic_annotation = false;
			return std::make_tuple(_183532_ok,_183542_dynamic_annotation);
		}
		goto _match_end_5318239200;
		_case_end_5318329376:;
		_case_begin_5318164992:;
		{
			_183445_f->_field_generics=jule::Slice<jule::Ref<_10eeb79b0_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_183445_f->_field_decl->_field_generics.len())));
			{
				auto &__julec_range_expr = _183513_fc->_field_generics;
				if (__julec_range_expr.begin() != __julec_range_expr.end()) {
					auto __julec_range_begin = __julec_range_expr.begin();
					const auto __julec_range_end = __julec_range_expr.end();
					jule::Int _10ee8a260_i{jule::Int()};_10ee8a260_i = 0;
					jule::Ref<_11ce1fd50_TypeDecl> _10ee8a260_g{jule::Ref<_11ce1fd50_TypeDecl>()};_10ee8a260_g = *__julec_range_begin;
					_iter_begin_5318256848:;
					{
						jule::Ref<_10eeb79b0_TypeSymbol> _185025_k = _10e8ca650_build_type(_10ee8a260_g);
						jule::Bool _185121_ok = (*this)._field_s->_method_check_type(_185025_k,(*this)._field_lookup);
						if ((!_185121_ok)) {
							_183532_ok = false;
							_183542_dynamic_annotation = false;
							return std::make_tuple(_183532_ok,_183542_dynamic_annotation);
						}
						_183445_f->_field_generics[static_cast<jule::Int>(_10ee8a260_i)]=_185025_k->_field_kind;
					}
					_iter_next_5318256848:;
					++__julec_range_begin;
					if (__julec_range_begin != __julec_range_end) { ++_10ee8a260_i; _10ee8a260_g = *__julec_range_begin; goto _iter_begin_5318256848; }
					_iter_end_5318256848:;
				}
			}
			_183532_ok = true;
			_183542_dynamic_annotation = false;
			return std::make_tuple(_183532_ok,_183542_dynamic_annotation);
		}
		goto _match_end_5318239200;
		_case_end_5318164992:;
		_match_end_5318239200:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_call_builtin_fn(jule::Ref<_11ce1fd50_FnCallExpr> _186239_fc,jule::Ref<_10ee8a260_Data> _186260_d) {
	jule::Ref<_10e56a140_FnIns> _186317_f = _186260_d->_field_kind->_method_fnc();
	_186260_d=_186317_f->_field_caller(this->self,_186239_fc,_186260_d);
	if ((!jule::real(_186260_d))) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	_186260_d->_field_mutable=true;
	return _186260_d;
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_call_fn(jule::Ref<_11ce1fd50_FnCallExpr> _187431_fc,jule::Ref<_10ee8a260_Data> _187452_d) {
	jule::Ref<_10e56a140_FnIns> _187517_f = _187452_d->_field_kind->_method_fnc();
	if (_187517_f->_method_is_builtin()) {
		return this->self->_method_call_builtin_fn(_187431_fc,_187452_d);
	}
	if (((((!_187452_d->_field_mutable) && _187517_f->_field_decl->_method_is_method()) && (!_187517_f->_field_decl->_field_statically)) && _187517_f->_field_decl->_field_params[static_cast<jule::Int>(0LL)]->_field_mutable)) {
		this->self->_method_push_err(_187431_fc->_field_token,jule::Str("mutable_operation_on_immutable", 30),jule::Slice<jule::Any>({}));
	} else if (((!this->self->_method_is_unsafe()) && _187517_f->_field_decl->_field_unsafety)) {
		this->self->_method_push_err(_187431_fc->_field_token,jule::Str("unsafe_behavior_at_out_of_unsafe_scope", 38),jule::Slice<jule::Any>({}));
	}
	jule::Bool _188618_ok{};
	jule::Bool _188622_dynamic_annotation{};
	std::tie(_188618_ok,_188622_dynamic_annotation) = this->self->_method_check_fn_call_generics(_187517_f,_187431_fc);
	if ((!_188618_ok)) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	jule::Ref<_10e9847f0_Sema> _189117_old = this->self->_field_s;
	if (jule::real(_187517_f->_field_decl->_field_owner)) {
		this->self->_field_s=_187517_f->_field_decl->_field_owner->_field_sema;
	}
	__JULE_DEFER({
		if (((_189117_old).alloc != (this->self->_field_s).alloc)) {
			_189117_old->_field_errors=append(_189117_old->_field_errors,this->self->_field_s->_field_errors);
		}
		this->self->_field_s=_189117_old;
	});
	if ((!_188622_dynamic_annotation)) {
		jule::Bool _190417_ok = this->self->_field_s->_method_reload_fn_ins_types(_187517_f);
		if ((!_190417_ok)) {
			return jule::new_ref<_10ee8a260_Data>();
		}
	} else {
		this->self->_field_s->_method_build_fn_non_generic_type_kinds(_187517_f);
	}
	_10eb9c740_FnCallArgChecker _191217_fcac = _10eb9c740_FnCallArgChecker(this->self,_187431_fc->_field_args,_187431_fc->_field_token,_187517_f,_188622_dynamic_annotation,jule::Slice<jule::Any>());
	if (jule::real(_187517_f->_field_decl->_field_owner)) {
		std::tie(_189117_old,this->self->_field_s) = std::make_tuple(this->self->_field_s,_189117_old);
		_188618_ok=_191217_fcac._method_check();
		std::tie(_189117_old,this->self->_field_s) = std::make_tuple(this->self->_field_s,_189117_old);
	} else {
		_188618_ok=_191217_fcac._method_check();
	}
	if (((!_188618_ok) && _188622_dynamic_annotation)) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	jule::Bool _193114_is_unique_ins{};
	jule::Int _193129_pos{};
	std::tie(_193114_is_unique_ins,_193129_pos) = _187517_f->_field_decl->_method_append_instance(_187517_f);
	if ((_193129_pos != -1LL)) {
		_187517_f=_187517_f->_field_decl->_field_instances[static_cast<jule::Int>(_193129_pos)];
	}
	jule::Any _193617_call_model = _187452_d->_field_model;
	if (_187517_f->_field_decl->_method_is_void()) {
		_187452_d=_10ee8a260_build_void_data();
	} else {
		if (_188622_dynamic_annotation) {
			_188618_ok=this->self->_field_s->_method_reload_fn_ins_types(_187517_f);
			if ((!_188618_ok)) {
				return jule::new_ref<_10ee8a260_Data>();
			}
		}
		_187452_d->_field_kind=_187517_f->_field_result;
		_187452_d->_field_lvalue=_10eeb79b0_is_lvalue(_187517_f->_field_result);
	}
	_187452_d->_field_mutable=true;
	_187452_d->_field_model=jule::Any(jule::new_struct<_10e9ca470_FnCallExprModel>(new( std::nothrow ) _10e9ca470_FnCallExprModel(_187517_f,_187431_fc->_field_concurrent,_193617_call_model,_191217_fcac._field_arg_models)));
	if (((static_cast<jule::I64>(_187517_f->_field_generics.len()) > 0LL) && _193114_is_unique_ins)) {
		this->self->_field_s->_method_check_fn_ins(_187517_f);
	}
	return _187452_d;
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_fn_call(jule::Ref<_11ce1fd50_FnCallExpr> _196836_fc) {
	jule::Ref<_10eeb79b0_TypeKind> _196917_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_196917_prefix;
	});
	jule::Ref<_10ee8a260_Data> _197317_d = this->self->_method_eval_expr_kind(_196836_fc->_field_expr->_field_kind);
	if ((!jule::real(_197317_d))) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	if (_197317_d->_field_decl) {
		return this->self->_method_call_type_fn(_196836_fc,_197317_d);
	}
	if ((!jule::real(_197317_d->_field_kind->_method_fnc()))) {
		this->self->_method_push_err(_196836_fc->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	return this->self->_method_call_fn(_196836_fc,_197317_d);
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_enum_static(jule::Ref<_10e975f00_Enum> _199039_enm,_11ce22a00_Token _199051_ident) {
	jule::Ref<_10ee8a260_Data> _199117_d = jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_199039_enm)),jule::Ref<_10eeb79b0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_10f4ed830_Const>()));
	jule::Ref<_10e975f00_EnumItem> _199817_item = _199039_enm->_method_find_item(_199051_ident._field_kind);
	if ((!jule::real(_199817_item))) {
		(*this)._method_push_err(_199051_ident,jule::Str("obj_have_not_ident", 18),jule::Slice<jule::Any>({jule::Any(_199051_ident._field_kind)}));
	} else {
		_199117_d->_field_constant=jule::new_ref<_10f4ed830_Const>(_199817_item->_field_value->_field_data->_field_constant.get());
		_199117_d->_field_model=jule::Any(_199117_d->_field_constant);
	}
	return _199117_d;
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_struct_static(jule::Ref<_10e3fc8f0_StructIns> _200941_s,_11ce22a00_Token _200956_ident) {
	
	jule::Ref<_10e56a140_Fn> _201117_method = _200941_s->_method_find_method(_200956_ident._field_kind,true);
	if ((!jule::real(_201117_method))) {
		(*this)._method_push_err(_200956_ident,jule::Str("obj_have_not_ident", 18),jule::Slice<jule::Any>({jule::Any(_200956_ident._field_kind)}));
	}
	jule::Ref<_10ee8a260_Data> _201617_d = jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::Ref<_10eeb79b0_TypeKind>(),jule::Ref<_10eeb79b0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_10f4ed830_Const>()));
	(*this)._method_push_reference_to_fn(_201117_method);
	jule::Ref<_10e56a140_FnIns> _202417_ins = _201117_method->_method_instance();
	_202417_ins->_field_owner=_200941_s;
	_201617_d->_field_model=jule::Any(jule::new_struct<_10e9ca470_StructStaticIdentExprModel>(new( std::nothrow ) _10e9ca470_StructStaticIdentExprModel(_200941_s,_201617_d->_field_model,_202417_ins)));
	_201617_d->_field_kind=jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_202417_ins));
	return _201617_d;
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_trait_sub_ident(jule::Ref<_10ee8a260_Data> _203639_d,jule::Ref<_10e3d6eb0_Trait> _203653_trt,_11ce22a00_Token _203666_ident) {
	jule::Ref<_10e56a140_Fn> _203717_f = _203653_trt->_method_find_method(_203666_ident._field_kind);
	if ((!jule::real(_203717_f))) {
		(*this)._method_push_err(_203666_ident,jule::Str("obj_have_not_ident", 18),jule::Slice<jule::Any>({jule::Any(_203666_ident._field_kind)}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	jule::Any _204317_model = jule::Any(nullptr);
	if (((_203653_trt).alloc == (_10f3f9210_BUILTIN_TRAIT_ERROR).alloc)) {
		_204317_model=jule::Any(jule::new_struct<_10e9ca470_BuiltinErrorTraitSubIdentExprModel>(new( std::nothrow ) _10e9ca470_BuiltinErrorTraitSubIdentExprModel(_203639_d->_field_model,_203666_ident._field_kind)));
	} else {
		_204317_model=jule::Any(jule::new_struct<_10e9ca470_TraitSubIdentExprModel>(new( std::nothrow ) _10e9ca470_TraitSubIdentExprModel(_203639_d->_field_model,_203666_ident._field_kind)));
	}
	return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_203717_f->_method_instance())),jule::Ref<_10eeb79b0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),_204317_model,false,jule::Ref<_10f4ed830_Const>()));
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_struct_sub_ident(jule::Ref<_10ee8a260_Data> _206544_d,jule::Ref<_10e3fc8f0_StructIns> _206558_s,jule::Ref<_11ce1fd50_SubIdentExpr> _206573_si,jule::Bool _206592_ref) {
	jule::Ref<_10e3fc8f0_FieldIns> _206617_f = _206558_s->_method_find_field(_206573_si->_field_ident._field_kind);
	if (jule::real(_206617_f)) {
		if ((!(*this)._field_s->_method_is_accessible_define(_206617_f->_field_decl->_field_public,_206617_f->_field_decl->_field_token))) {
			(*this)._method_push_err(_206573_si->_field_ident,jule::Str("ident_is_not_accessible", 23),jule::Slice<jule::Any>({jule::Any(_206617_f->_field_decl->_field_ident)}));
		}
		jule::Ref<_10e9ca470_StructSubIdentExprModel> _207221_model = jule::new_struct<_10e9ca470_StructSubIdentExprModel>(new( std::nothrow ) _10e9ca470_StructSubIdentExprModel(_206544_d->_field_model,_206544_d->_field_kind,jule::Ref<_10e56a140_FnIns>(),_206617_f));
		_206544_d->_field_model=jule::Any(_207221_model);
		_206544_d->_field_kind=_206617_f->_field_kind->_method_clone();
		if ((_206617_f->_field_decl->_field_mutable && (!_206544_d->_field_mutable))) {
			{
				auto _match_expr{ (*this)._field_lookup };
				if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_ScopeChecker>>())) { goto _case_end_4522971056; }
				_case_begin_4522971056:;
				{
					jule::Ref<_10e97fcf0_ScopeChecker> _208425_scope = (*this)._field_lookup.operator jule::Ref<_10e97fcf0_ScopeChecker>();
					_206544_d->_field_mutable=(jule::real(_208425_scope->_field_owner) && ((_208425_scope->_field_owner->_field_owner).alloc == (_206558_s).alloc));
					if (_206544_d->_field_mutable) {
						jule::Ref<_10ebc2ad0_Var> _208733_field = _207221_model->_field_expr.operator jule::Ref<_10ebc2ad0_Var>();
						jule::Ref<_10ebc2ad0_Var> _208833_v = jule::new_struct<_10ebc2ad0_Var>(new( std::nothrow ) _10ebc2ad0_Var(_208733_field->_field_scope,_208733_field->_field_token,_208733_field->_field_ident,_208733_field->_field_cpp_linked,_208733_field->_field_constant,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),_208733_field->_field_kind,_208733_field->_field_value,jule::Ref<_10e8ca650_ReferenceStack>(),jule::Slice<jule::Ref<_10ebc2ad0_Var>>()));
						_208833_v->_field_mutable=true;
						_207221_model->_field_expr=jule::Any(_208833_v);
					}
				}
				goto _match_end_4522970944;
				_case_end_4522971056:;
				_match_end_4522970944:;
			}
		}
		return _206544_d;
	}
	
	jule::Ref<_10e56a140_Fn> _210717_m = _206558_s->_method_find_method(_206573_si->_field_ident._field_kind,false);
	if ((!jule::real(_210717_m))) {
		(*this)._method_push_err(_206573_si->_field_ident,jule::Str("obj_have_not_ident", 18),jule::Slice<jule::Any>({jule::Any(_206573_si->_field_ident._field_kind)}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	if ((_210717_m->_field_params[static_cast<jule::Int>(0LL)]->_method_is_ref() && (!_206592_ref))) {
		(*this)._method_push_err(_206573_si->_field_ident,jule::Str("ref_method_used_with_not_ref_instance", 37),jule::Slice<jule::Any>({}));
	}
	(*this)._method_push_reference_to_fn(_210717_m);
	jule::Ref<_10e56a140_FnIns> _211917_ins = _210717_m->_method_instance();
	_211917_ins->_field_owner=_206558_s;
	_206544_d->_field_model=jule::Any(jule::new_struct<_10e9ca470_StructSubIdentExprModel>(new( std::nothrow ) _10e9ca470_StructSubIdentExprModel(_206544_d->_field_model,_206544_d->_field_kind,_211917_ins,jule::Ref<_10e3fc8f0_FieldIns>())));
	_206544_d->_field_kind=jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_211917_ins));
	return _206544_d;
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_slice_sub_ident(jule::Ref<_10ee8a260_Data> _213043_d,_11ce22a00_Token _213053_ident) {
	{
		auto _match_expr{ _213053_ident._field_kind };
		if (!(jule::Str("len", 3) == _match_expr)) { goto _case_end_4523008240; }
		_case_begin_4523008240:;
		{
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(_10f521350_SYS_INT))),jule::Ref<_10eeb79b0_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_10e9ca470_CommonSubIdentExprModel>(new( std::nothrow ) _10e9ca470_CommonSubIdentExprModel(_213043_d->_field_kind,_213043_d->_field_model,jule::Str("len()", 5))),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
		}
		goto _match_end_4523006640;
		_case_end_4523008240:;
		if (!(jule::Str("cap", 3) == _match_expr)) { goto _case_end_4523007744; }
		_case_begin_4523007744:;
		{
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(_10f521350_SYS_INT))),jule::Ref<_10eeb79b0_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_10e9ca470_CommonSubIdentExprModel>(new( std::nothrow ) _10e9ca470_CommonSubIdentExprModel(_213043_d->_field_kind,_213043_d->_field_model,jule::Str("cap()", 5))),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
		}
		goto _match_end_4523006640;
		_case_end_4523007744:;
		_case_begin_4523007440:;
		{
			(*this)._method_push_err(_213053_ident,jule::Str("obj_have_not_ident", 18),jule::Slice<jule::Any>({jule::Any(_213053_ident._field_kind)}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4523006640;
		_case_end_4523007440:;
		_match_end_4523006640:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_array_sub_ident(jule::Ref<_10ee8a260_Data> _216043_d,_11ce22a00_Token _216053_ident) {
	{
		auto _match_expr{ _216053_ident._field_kind };
		if (!(jule::Str("len", 3) == _match_expr)) { goto _case_end_4523023312; }
		_case_begin_4523023312:;
		{
			jule::Ref<_10f4ed830_Const> _216321_c = _10f4ed830_new_i64(static_cast<jule::I64>(_216043_d->_field_kind->_method_arr()->_field_n));
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(_10f521350_SYS_INT))),jule::Ref<_10eeb79b0_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_216321_c,jule::Bool(),_216321_c));
		}
		goto _match_end_4523021952;
		_case_end_4523023312:;
		_case_begin_4523022512:;
		{
			(*this)._method_push_err(_216053_ident,jule::Str("obj_have_not_ident", 18),jule::Slice<jule::Any>({jule::Any(_216053_ident._field_kind)}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4523021952;
		_case_end_4523022512:;
		_match_end_4523021952:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_map_sub_ident(jule::Ref<_10ee8a260_Data> _217741_d,_11ce22a00_Token _217751_ident) {
	{
		auto _match_expr{ _217751_ident._field_kind };
		if (!(jule::Str("len", 3) == _match_expr)) { goto _case_end_4523036128; }
		_case_begin_4523036128:;
		{
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(_10f521350_SYS_INT))),jule::Ref<_10eeb79b0_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_10e9ca470_CommonSubIdentExprModel>(new( std::nothrow ) _10e9ca470_CommonSubIdentExprModel(_217741_d->_field_kind,_217741_d->_field_model,jule::Str("len()", 5))),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
		}
		goto _match_end_4523035024;
		_case_end_4523036128:;
		if (!(jule::Str("clear", 5) == _match_expr)) { goto _case_end_4523036240; }
		_case_begin_4523036240:;
		{
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_10e56a140_FnIns>(new( std::nothrow ) _10e56a140_FnIns(jule::Ref<_10e3fc8f0_StructIns>(),jule::Ref<_10e56a140_Fn>(),jule::Slice<jule::Ref<_10eeb79b0_TypeKind>>(),jule::Slice<jule::Ref<_10e56a140_ParamIns>>(),jule::Ref<_10eeb79b0_TypeKind>(),jule::Ref<_10e97fcf0_Scope>(),_10f3f9210_builtin_caller_common_mut,jule::Bool())))),jule::Ref<_10eeb79b0_TypeKind>(),_217741_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_10e9ca470_CommonSubIdentExprModel>(new( std::nothrow ) _10e9ca470_CommonSubIdentExprModel(_217741_d->_field_kind,_217741_d->_field_model,jule::Str("clear", 5))),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
		}
		goto _match_end_4523035024;
		_case_end_4523036240:;
		if (!(jule::Str("keys", 4) == _match_expr)) { goto _case_end_4523036352; }
		_case_begin_4523036352:;
		{
			jule::Ref<_10eeb79b0_Map> _220621_m = _217741_d->_field_kind->_method_map();
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_10e56a140_FnIns>(new( std::nothrow ) _10e56a140_FnIns(jule::Ref<_10e3fc8f0_StructIns>(),jule::Ref<_10e56a140_Fn>(),jule::Slice<jule::Ref<_10eeb79b0_TypeKind>>(),jule::Slice<jule::Ref<_10e56a140_ParamIns>>(),jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_10eeb79b0_Slc>(new( std::nothrow ) _10eeb79b0_Slc(_220621_m->_field_key)))),jule::Ref<_10e97fcf0_Scope>(),_10f3f9210_builtin_caller_common_mut,jule::Bool())))),jule::Ref<_10eeb79b0_TypeKind>(),_217741_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_10e9ca470_CommonSubIdentExprModel>(new( std::nothrow ) _10e9ca470_CommonSubIdentExprModel(_217741_d->_field_kind,_217741_d->_field_model,jule::Str("keys", 4))),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
		}
		goto _match_end_4523035024;
		_case_end_4523036352:;
		if (!(jule::Str("values", 6) == _match_expr)) { goto _case_end_4523039552; }
		_case_begin_4523039552:;
		{
			jule::Ref<_10eeb79b0_Map> _222721_m = _217741_d->_field_kind->_method_map();
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_10e56a140_FnIns>(new( std::nothrow ) _10e56a140_FnIns(jule::Ref<_10e3fc8f0_StructIns>(),jule::Ref<_10e56a140_Fn>(),jule::Slice<jule::Ref<_10eeb79b0_TypeKind>>(),jule::Slice<jule::Ref<_10e56a140_ParamIns>>(),jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_10eeb79b0_Slc>(new( std::nothrow ) _10eeb79b0_Slc(_222721_m->_field_val)))),jule::Ref<_10e97fcf0_Scope>(),_10f3f9210_builtin_caller_common_mut,jule::Bool())))),jule::Ref<_10eeb79b0_TypeKind>(),_217741_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_10e9ca470_CommonSubIdentExprModel>(new( std::nothrow ) _10e9ca470_CommonSubIdentExprModel(_217741_d->_field_kind,_217741_d->_field_model,jule::Str("values", 6))),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
		}
		goto _match_end_4523035024;
		_case_end_4523039552:;
		if (!(jule::Str("has", 3) == _match_expr)) { goto _case_end_4523039664; }
		_case_begin_4523039664:;
		{
			jule::Ref<_10eeb79b0_Map> _224821_m = _217741_d->_field_kind->_method_map();
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_10e56a140_FnIns>(new( std::nothrow ) _10e56a140_FnIns(jule::Ref<_10e3fc8f0_StructIns>(),jule::Ref<_10e56a140_Fn>(),jule::Slice<jule::Ref<_10eeb79b0_TypeKind>>(),jule::Slice<jule::Ref<_10e56a140_ParamIns>>({jule::new_struct<_10e56a140_ParamIns>(new( std::nothrow ) _10e56a140_ParamIns(jule::new_struct<_10e56a140_Param>(new( std::nothrow ) _10e56a140_Param(_11ce22a00_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_10eeb79b0_TypeSymbol>(),jule::Str("key", 3))),_224821_m->_field_key))}),jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_10e97fcf0_Scope>(),_10f3f9210_builtin_caller_common,jule::Bool())))),jule::Ref<_10eeb79b0_TypeKind>(),_217741_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_10e9ca470_CommonSubIdentExprModel>(new( std::nothrow ) _10e9ca470_CommonSubIdentExprModel(_217741_d->_field_kind,_217741_d->_field_model,jule::Str("has", 3))),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
		}
		goto _match_end_4523035024;
		_case_end_4523039664:;
		if (!(jule::Str("del", 3) == _match_expr)) { goto _case_end_4523039776; }
		_case_begin_4523039776:;
		{
			jule::Ref<_10eeb79b0_Map> _227321_m = _217741_d->_field_kind->_method_map();
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_10e56a140_FnIns>(new( std::nothrow ) _10e56a140_FnIns(jule::Ref<_10e3fc8f0_StructIns>(),jule::Ref<_10e56a140_Fn>(),jule::Slice<jule::Ref<_10eeb79b0_TypeKind>>(),jule::Slice<jule::Ref<_10e56a140_ParamIns>>({jule::new_struct<_10e56a140_ParamIns>(new( std::nothrow ) _10e56a140_ParamIns(jule::new_struct<_10e56a140_Param>(new( std::nothrow ) _10e56a140_Param(_11ce22a00_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_10eeb79b0_TypeSymbol>(),jule::Str("key", 3))),_227321_m->_field_key))}),jule::Ref<_10eeb79b0_TypeKind>(),jule::Ref<_10e97fcf0_Scope>(),_10f3f9210_builtin_caller_common_mut,jule::Bool())))),jule::Ref<_10eeb79b0_TypeKind>(),_217741_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_10e9ca470_CommonSubIdentExprModel>(new( std::nothrow ) _10e9ca470_CommonSubIdentExprModel(_217741_d->_field_kind,_217741_d->_field_model,jule::Str("del", 3))),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
		}
		goto _match_end_4523035024;
		_case_end_4523039776:;
		_case_begin_4523035824:;
		{
			(*this)._method_push_err(_217751_ident,jule::Str("obj_have_not_ident", 18),jule::Slice<jule::Any>({jule::Any(_217751_ident._field_kind)}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4523035024;
		_case_end_4523035824:;
		_match_end_4523035024:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_str_sub_ident(jule::Ref<_10ee8a260_Data> _230241_d,_11ce22a00_Token _230251_ident) {
	{
		auto _match_expr{ _230251_ident._field_kind };
		if (!(jule::Str("len", 3) == _match_expr)) { goto _case_end_4523081984; }
		_case_begin_4523081984:;
		{
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(_10f521350_SYS_INT))),jule::Ref<_10eeb79b0_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_10e9ca470_CommonSubIdentExprModel>(new( std::nothrow ) _10e9ca470_CommonSubIdentExprModel(_230241_d->_field_kind,_230241_d->_field_model,jule::Str("len()", 5))),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
		}
		goto _match_end_4523081408;
		_case_end_4523081984:;
		if (!(jule::Str("has_prefix", 10) == _match_expr)) { goto _case_end_4523082096; }
		_case_begin_4523082096:;
		{
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_10e56a140_FnIns>(new( std::nothrow ) _10e56a140_FnIns(jule::Ref<_10e3fc8f0_StructIns>(),jule::Ref<_10e56a140_Fn>(),jule::Slice<jule::Ref<_10eeb79b0_TypeKind>>(),jule::Slice<jule::Ref<_10e56a140_ParamIns>>({jule::new_struct<_10e56a140_ParamIns>(new( std::nothrow ) _10e56a140_ParamIns(jule::new_struct<_10e56a140_Param>(new( std::nothrow ) _10e56a140_Param(_11ce22a00_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_10eeb79b0_TypeSymbol>(),jule::Str("sub", 3))),_230241_d->_field_kind))}),jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_10e97fcf0_Scope>(),_10f3f9210_builtin_caller_common,jule::Bool())))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_10e9ca470_CommonSubIdentExprModel>(new( std::nothrow ) _10e9ca470_CommonSubIdentExprModel(_230241_d->_field_kind,_230241_d->_field_model,jule::Str("has_prefix", 10))),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
		}
		goto _match_end_4523081408;
		_case_end_4523082096:;
		if (!(jule::Str("has_suffix", 10) == _match_expr)) { goto _case_end_4523082208; }
		_case_begin_4523082208:;
		{
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_10e56a140_FnIns>(new( std::nothrow ) _10e56a140_FnIns(jule::Ref<_10e3fc8f0_StructIns>(),jule::Ref<_10e56a140_Fn>(),jule::Slice<jule::Ref<_10eeb79b0_TypeKind>>(),jule::Slice<jule::Ref<_10e56a140_ParamIns>>({jule::new_struct<_10e56a140_ParamIns>(new( std::nothrow ) _10e56a140_ParamIns(jule::new_struct<_10e56a140_Param>(new( std::nothrow ) _10e56a140_Param(_11ce22a00_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_10eeb79b0_TypeSymbol>(),jule::Str("sub", 3))),_230241_d->_field_kind))}),jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_10e97fcf0_Scope>(),_10f3f9210_builtin_caller_common,jule::Bool())))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_10e9ca470_CommonSubIdentExprModel>(new( std::nothrow ) _10e9ca470_CommonSubIdentExprModel(_230241_d->_field_kind,_230241_d->_field_model,jule::Str("has_suffix", 10))),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
		}
		goto _match_end_4523081408;
		_case_end_4523082208:;
		if (!(jule::Str("find", 4) == _match_expr)) { goto _case_end_4523085136; }
		_case_begin_4523085136:;
		{
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_10e56a140_FnIns>(new( std::nothrow ) _10e56a140_FnIns(jule::Ref<_10e3fc8f0_StructIns>(),jule::Ref<_10e56a140_Fn>(),jule::Slice<jule::Ref<_10eeb79b0_TypeKind>>(),jule::Slice<jule::Ref<_10e56a140_ParamIns>>({jule::new_struct<_10e56a140_ParamIns>(new( std::nothrow ) _10e56a140_ParamIns(jule::new_struct<_10e56a140_Param>(new( std::nothrow ) _10e56a140_Param(_11ce22a00_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_10eeb79b0_TypeSymbol>(),jule::Str("sub", 3))),_230241_d->_field_kind))}),jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("int", 3)))),jule::Ref<_10e97fcf0_Scope>(),_10f3f9210_builtin_caller_common,jule::Bool())))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_10e9ca470_CommonSubIdentExprModel>(new( std::nothrow ) _10e9ca470_CommonSubIdentExprModel(_230241_d->_field_kind,_230241_d->_field_model,jule::Str("find", 4))),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
		}
		goto _match_end_4523081408;
		_case_end_4523085136:;
		if (!(jule::Str("rfind", 5) == _match_expr)) { goto _case_end_4523085248; }
		_case_begin_4523085248:;
		{
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_10e56a140_FnIns>(new( std::nothrow ) _10e56a140_FnIns(jule::Ref<_10e3fc8f0_StructIns>(),jule::Ref<_10e56a140_Fn>(),jule::Slice<jule::Ref<_10eeb79b0_TypeKind>>(),jule::Slice<jule::Ref<_10e56a140_ParamIns>>({jule::new_struct<_10e56a140_ParamIns>(new( std::nothrow ) _10e56a140_ParamIns(jule::new_struct<_10e56a140_Param>(new( std::nothrow ) _10e56a140_Param(_11ce22a00_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_10eeb79b0_TypeSymbol>(),jule::Str("sub", 3))),_230241_d->_field_kind))}),jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("int", 3)))),jule::Ref<_10e97fcf0_Scope>(),_10f3f9210_builtin_caller_common,jule::Bool())))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_10e9ca470_CommonSubIdentExprModel>(new( std::nothrow ) _10e9ca470_CommonSubIdentExprModel(_230241_d->_field_kind,_230241_d->_field_model,jule::Str("rfind", 5))),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
		}
		goto _match_end_4523081408;
		_case_end_4523085248:;
		if (!(jule::Str("trim", 4) == _match_expr)) { goto _case_end_4523085360; }
		_case_begin_4523085360:;
		{
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_10e56a140_FnIns>(new( std::nothrow ) _10e56a140_FnIns(jule::Ref<_10e3fc8f0_StructIns>(),jule::Ref<_10e56a140_Fn>(),jule::Slice<jule::Ref<_10eeb79b0_TypeKind>>(),jule::Slice<jule::Ref<_10e56a140_ParamIns>>({jule::new_struct<_10e56a140_ParamIns>(new( std::nothrow ) _10e56a140_ParamIns(jule::new_struct<_10e56a140_Param>(new( std::nothrow ) _10e56a140_Param(_11ce22a00_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_10eeb79b0_TypeSymbol>(),jule::Str("bytes", 5))),_230241_d->_field_kind))}),_230241_d->_field_kind,jule::Ref<_10e97fcf0_Scope>(),_10f3f9210_builtin_caller_common,jule::Bool())))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_10e9ca470_CommonSubIdentExprModel>(new( std::nothrow ) _10e9ca470_CommonSubIdentExprModel(_230241_d->_field_kind,_230241_d->_field_model,jule::Str("trim", 4))),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
		}
		goto _match_end_4523081408;
		_case_end_4523085360:;
		if (!(jule::Str("rtrim", 5) == _match_expr)) { goto _case_end_4523085472; }
		_case_begin_4523085472:;
		{
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_10e56a140_FnIns>(new( std::nothrow ) _10e56a140_FnIns(jule::Ref<_10e3fc8f0_StructIns>(),jule::Ref<_10e56a140_Fn>(),jule::Slice<jule::Ref<_10eeb79b0_TypeKind>>(),jule::Slice<jule::Ref<_10e56a140_ParamIns>>({jule::new_struct<_10e56a140_ParamIns>(new( std::nothrow ) _10e56a140_ParamIns(jule::new_struct<_10e56a140_Param>(new( std::nothrow ) _10e56a140_Param(_11ce22a00_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_10eeb79b0_TypeSymbol>(),jule::Str("bytes", 5))),_230241_d->_field_kind))}),_230241_d->_field_kind,jule::Ref<_10e97fcf0_Scope>(),_10f3f9210_builtin_caller_common,jule::Bool())))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_10e9ca470_CommonSubIdentExprModel>(new( std::nothrow ) _10e9ca470_CommonSubIdentExprModel(_230241_d->_field_kind,_230241_d->_field_model,jule::Str("rtrim", 5))),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
		}
		goto _match_end_4523081408;
		_case_end_4523085472:;
		if (!(jule::Str("split", 5) == _match_expr)) { goto _case_end_4523085760; }
		_case_begin_4523085760:;
		{
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_10e56a140_FnIns>(new( std::nothrow ) _10e56a140_FnIns(jule::Ref<_10e3fc8f0_StructIns>(),jule::Ref<_10e56a140_Fn>(),jule::Slice<jule::Ref<_10eeb79b0_TypeKind>>(),jule::Slice<jule::Ref<_10e56a140_ParamIns>>({jule::new_struct<_10e56a140_ParamIns>(new( std::nothrow ) _10e56a140_ParamIns(jule::new_struct<_10e56a140_Param>(new( std::nothrow ) _10e56a140_Param(_11ce22a00_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_10eeb79b0_TypeSymbol>(),jule::Str("sub", 3))),_230241_d->_field_kind)),jule::new_struct<_10e56a140_ParamIns>(new( std::nothrow ) _10e56a140_ParamIns(jule::new_struct<_10e56a140_Param>(new( std::nothrow ) _10e56a140_Param(_11ce22a00_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_10eeb79b0_TypeSymbol>(),jule::Str("n", 1))),jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("int", 3))))))}),jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_10eeb79b0_Slc>(new( std::nothrow ) _10eeb79b0_Slc(_230241_d->_field_kind)))),jule::Ref<_10e97fcf0_Scope>(),_10f3f9210_builtin_caller_common,jule::Bool())))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_10e9ca470_CommonSubIdentExprModel>(new( std::nothrow ) _10e9ca470_CommonSubIdentExprModel(_230241_d->_field_kind,_230241_d->_field_model,jule::Str("split", 5))),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
		}
		goto _match_end_4523081408;
		_case_end_4523085760:;
		if (!(jule::Str("replace", 7) == _match_expr)) { goto _case_end_4523085872; }
		_case_begin_4523085872:;
		{
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_10e56a140_FnIns>(new( std::nothrow ) _10e56a140_FnIns(jule::Ref<_10e3fc8f0_StructIns>(),jule::Ref<_10e56a140_Fn>(),jule::Slice<jule::Ref<_10eeb79b0_TypeKind>>(),jule::Slice<jule::Ref<_10e56a140_ParamIns>>({jule::new_struct<_10e56a140_ParamIns>(new( std::nothrow ) _10e56a140_ParamIns(jule::new_struct<_10e56a140_Param>(new( std::nothrow ) _10e56a140_Param(_11ce22a00_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_10eeb79b0_TypeSymbol>(),jule::Str("sub", 3))),_230241_d->_field_kind)),jule::new_struct<_10e56a140_ParamIns>(new( std::nothrow ) _10e56a140_ParamIns(jule::new_struct<_10e56a140_Param>(new( std::nothrow ) _10e56a140_Param(_11ce22a00_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_10eeb79b0_TypeSymbol>(),jule::Str("new", 3))),_230241_d->_field_kind)),jule::new_struct<_10e56a140_ParamIns>(new( std::nothrow ) _10e56a140_ParamIns(jule::new_struct<_10e56a140_Param>(new( std::nothrow ) _10e56a140_Param(_11ce22a00_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_10eeb79b0_TypeSymbol>(),jule::Str("n", 1))),jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("int", 3))))))}),_230241_d->_field_kind,jule::Ref<_10e97fcf0_Scope>(),_10f3f9210_builtin_caller_common,jule::Bool())))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_10e9ca470_CommonSubIdentExprModel>(new( std::nothrow ) _10e9ca470_CommonSubIdentExprModel(_230241_d->_field_kind,_230241_d->_field_model,jule::Str("replace", 7))),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
		}
		goto _match_end_4523081408;
		_case_end_4523085872:;
		_case_begin_4523081520:;
		{
			(*this)._method_push_err(_230251_ident,jule::Str("obj_have_not_ident", 18),jule::Slice<jule::Any>({jule::Any(_230251_ident._field_kind)}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4523081408;
		_case_end_4523081520:;
		_match_end_4523081408:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_int_type_static(_11ce22a00_Token _252739_ident) {
	
	{
		auto _match_expr{ _252739_ident._field_kind };
		if (!(jule::Str("MAX", 3) == _match_expr)) { goto _case_end_4523144336; }
		_case_begin_4523144336:;
		{
			jule::Ref<_10f4ed830_Const> _253221_c = _10f4ed830_new_i64(static_cast<jule::I64>(static_cast<jule::F64>(_10f53b9f0_max_of(jule::Str("int", 3)))));
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("int", 3)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_253221_c,jule::Bool(),_253221_c));
		}
		goto _match_end_4523143920;
		_case_end_4523144336:;
		if (!(jule::Str("MIN", 3) == _match_expr)) { goto _case_end_4523144448; }
		_case_begin_4523144448:;
		{
			jule::Ref<_10f4ed830_Const> _254021_c = _10f4ed830_new_i64(static_cast<jule::I64>(static_cast<jule::F64>(_10f53b9f0_min_of(jule::Str("int", 3)))));
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("int", 3)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_254021_c,jule::Bool(),_254021_c));
		}
		goto _match_end_4523143920;
		_case_end_4523144448:;
		_case_begin_4523144032:;
		{
			(*this)._method_push_err(_252739_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("int", 3)),jule::Any(_252739_ident._field_kind)}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4523143920;
		_case_end_4523144032:;
		_match_end_4523143920:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_uint_type_static(_11ce22a00_Token _255340_ident) {
	
	{
		auto _match_expr{ _255340_ident._field_kind };
		if (!(jule::Str("MAX", 3) == _match_expr)) { goto _case_end_4523155776; }
		_case_begin_4523155776:;
		{
			jule::Ref<_10f4ed830_Const> _255821_c = _10f4ed830_new_u64(static_cast<jule::U64>(static_cast<jule::F64>(_10f53b9f0_max_of(jule::Str("uint", 4)))));
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("uint", 4)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_255821_c,jule::Bool(),_255821_c));
		}
		goto _match_end_4522949184;
		_case_end_4523155776:;
		_case_begin_4523148112:;
		{
			(*this)._method_push_err(_255340_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("uint", 4)),jule::Any(_255340_ident._field_kind)}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4522949184;
		_case_end_4523148112:;
		_match_end_4522949184:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_i8_type_static(_11ce22a00_Token _257138_ident) {
	
	
	
	{
		auto _match_expr{ _257138_ident._field_kind };
		if (!(jule::Str("MAX", 3) == _match_expr)) { goto _case_end_4523175584; }
		_case_begin_4523175584:;
		{
			jule::Ref<_10f4ed830_Const> _257821_c = _10f4ed830_new_i64(127LL);
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("i8", 2)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_257821_c,jule::Bool(),_257821_c));
		}
		goto _match_end_4523170256;
		_case_end_4523175584:;
		if (!(jule::Str("MIN", 3) == _match_expr)) { goto _case_end_4523175232; }
		_case_begin_4523175232:;
		{
			jule::Ref<_10f4ed830_Const> _258621_c = _10f4ed830_new_i64(-128LL);
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("i8", 2)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_258621_c,jule::Bool(),_258621_c));
		}
		goto _match_end_4523170256;
		_case_end_4523175232:;
		_case_begin_4523171120:;
		{
			(*this)._method_push_err(_257138_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("i8", 2)),jule::Any(_257138_ident._field_kind)}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4523170256;
		_case_end_4523171120:;
		_match_end_4523170256:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_i16_type_static(_11ce22a00_Token _259939_ident) {
	
	
	
	{
		auto _match_expr{ _259939_ident._field_kind };
		if (!(jule::Str("MAX", 3) == _match_expr)) { goto _case_end_4523193728; }
		_case_begin_4523193728:;
		{
			jule::Ref<_10f4ed830_Const> _260621_c = _10f4ed830_new_i64(32767LL);
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("i16", 3)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_260621_c,jule::Bool(),_260621_c));
		}
		goto _match_end_4523188400;
		_case_end_4523193728:;
		if (!(jule::Str("MIN", 3) == _match_expr)) { goto _case_end_4523193376; }
		_case_begin_4523193376:;
		{
			jule::Ref<_10f4ed830_Const> _261421_c = _10f4ed830_new_i64(-32768LL);
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("i16", 3)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_261421_c,jule::Bool(),_261421_c));
		}
		goto _match_end_4523188400;
		_case_end_4523193376:;
		_case_begin_4523189264:;
		{
			(*this)._method_push_err(_259939_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("i16", 3)),jule::Any(_259939_ident._field_kind)}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4523188400;
		_case_end_4523189264:;
		_match_end_4523188400:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_i32_type_static(_11ce22a00_Token _262739_ident) {
	
	
	
	{
		auto _match_expr{ _262739_ident._field_kind };
		if (!(jule::Str("MAX", 3) == _match_expr)) { goto _case_end_4523211648; }
		_case_begin_4523211648:;
		{
			jule::Ref<_10f4ed830_Const> _263421_c = _10f4ed830_new_i64(2147483647LL);
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_263421_c,jule::Bool(),_263421_c));
		}
		goto _match_end_4523206320;
		_case_end_4523211648:;
		if (!(jule::Str("MIN", 3) == _match_expr)) { goto _case_end_4523211296; }
		_case_begin_4523211296:;
		{
			jule::Ref<_10f4ed830_Const> _264221_c = _10f4ed830_new_i64(-2147483648LL);
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_264221_c,jule::Bool(),_264221_c));
		}
		goto _match_end_4523206320;
		_case_end_4523211296:;
		_case_begin_4523207184:;
		{
			(*this)._method_push_err(_262739_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("i32", 3)),jule::Any(_262739_ident._field_kind)}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4523206320;
		_case_end_4523207184:;
		_match_end_4523206320:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_i64_type_static(_11ce22a00_Token _265539_ident) {
	
	
	
	{
		auto _match_expr{ _265539_ident._field_kind };
		if (!(jule::Str("MAX", 3) == _match_expr)) { goto _case_end_4523230048; }
		_case_begin_4523230048:;
		{
			jule::Ref<_10f4ed830_Const> _266221_c = _10f4ed830_new_i64(jule::MIN_I64);
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_266221_c,jule::Bool(),_266221_c));
		}
		goto _match_end_4523224720;
		_case_end_4523230048:;
		if (!(jule::Str("MIN", 3) == _match_expr)) { goto _case_end_4523229696; }
		_case_begin_4523229696:;
		{
			jule::Ref<_10f4ed830_Const> _267021_c = _10f4ed830_new_i64(jule::MAX_I64);
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_267021_c,jule::Bool(),_267021_c));
		}
		goto _match_end_4523224720;
		_case_end_4523229696:;
		_case_begin_4523225584:;
		{
			(*this)._method_push_err(_265539_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("i64", 3)),jule::Any(_265539_ident._field_kind)}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4523224720;
		_case_end_4523225584:;
		_match_end_4523224720:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_u8_type_static(_11ce22a00_Token _268338_ident) {
	
	
	{
		auto _match_expr{ _268338_ident._field_kind };
		if (!(jule::Str("MAX", 3) == _match_expr)) { goto _case_end_4523243440; }
		_case_begin_4523243440:;
		{
			jule::Ref<_10f4ed830_Const> _268921_c = _10f4ed830_new_u64(255LLU);
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("u8", 2)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_268921_c,jule::Bool(),_268921_c));
		}
		goto _match_end_4523242496;
		_case_end_4523243440:;
		_case_begin_4523243136:;
		{
			(*this)._method_push_err(_268338_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("u8", 2)),jule::Any(_268338_ident._field_kind)}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4523242496;
		_case_end_4523243136:;
		_match_end_4523242496:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_u16_type_static(_11ce22a00_Token _270239_ident) {
	
	
	{
		auto _match_expr{ _270239_ident._field_kind };
		if (!(jule::Str("MAX", 3) == _match_expr)) { goto _case_end_4523262576; }
		_case_begin_4523262576:;
		{
			jule::Ref<_10f4ed830_Const> _270821_c = _10f4ed830_new_u64(65535LLU);
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("u16", 3)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_270821_c,jule::Bool(),_270821_c));
		}
		goto _match_end_4523257728;
		_case_end_4523262576:;
		_case_begin_4523258368:;
		{
			(*this)._method_push_err(_270239_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("u16", 3)),jule::Any(_270239_ident._field_kind)}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4523257728;
		_case_end_4523258368:;
		_match_end_4523257728:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_u32_type_static(_11ce22a00_Token _272139_ident) {
	
	
	{
		auto _match_expr{ _272139_ident._field_kind };
		if (!(jule::Str("MAX", 3) == _match_expr)) { goto _case_end_4523271840; }
		_case_begin_4523271840:;
		{
			jule::Ref<_10f4ed830_Const> _272721_c = _10f4ed830_new_u64(4294967295LLU);
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("u32", 3)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_272721_c,jule::Bool(),_272721_c));
		}
		goto _match_end_4523271040;
		_case_end_4523271840:;
		_case_begin_4523270416:;
		{
			(*this)._method_push_err(_272139_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("u32", 3)),jule::Any(_272139_ident._field_kind)}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4523271040;
		_case_end_4523270416:;
		_match_end_4523271040:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_u64_type_static(_11ce22a00_Token _274039_ident) {
	
	
	{
		auto _match_expr{ _274039_ident._field_kind };
		if (!(jule::Str("MAX", 3) == _match_expr)) { goto _case_end_4523284768; }
		_case_begin_4523284768:;
		{
			jule::Ref<_10f4ed830_Const> _274621_c = _10f4ed830_new_u64(jule::MAX_U64);
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("u64", 3)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_274621_c,jule::Bool(),_274621_c));
		}
		goto _match_end_4523283968;
		_case_end_4523284768:;
		_case_begin_4523283344:;
		{
			(*this)._method_push_err(_274039_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("u64", 3)),jule::Any(_274039_ident._field_kind)}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4523283968;
		_case_end_4523283344:;
		_match_end_4523283968:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_f32_type_tatic(_11ce22a00_Token _275938_ident) {
	
	
	
	{
		auto _match_expr{ _275938_ident._field_kind };
		if (!(jule::Str("MAX", 3) == _match_expr)) { goto _case_end_4523302592; }
		_case_begin_4523302592:;
		{
			jule::Ref<_10f4ed830_Const> _276621_c = _10f4ed830_new_f64(3.4028234663852886e+38);
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("f32", 3)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_276621_c,jule::Bool(),_276621_c));
		}
		goto _match_end_4523297824;
		_case_end_4523302592:;
		if (!(jule::Str("MIN", 3) == _match_expr)) { goto _case_end_4523302240; }
		_case_begin_4523302240:;
		{
			jule::Ref<_10f4ed830_Const> _277421_c = _10f4ed830_new_f64(-3.4028234663852886e+38);
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("f32", 3)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_277421_c,jule::Bool(),_277421_c));
		}
		goto _match_end_4523297824;
		_case_end_4523302240:;
		_case_begin_4523298128:;
		{
			(*this)._method_push_err(_275938_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("f32", 3)),jule::Any(_275938_ident._field_kind)}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4523297824;
		_case_end_4523298128:;
		_match_end_4523297824:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_f64_type_static(_11ce22a00_Token _278739_ident) {
	
	
	
	{
		auto _match_expr{ _278739_ident._field_kind };
		if (!(jule::Str("MAX", 3) == _match_expr)) { goto _case_end_4523321008; }
		_case_begin_4523321008:;
		{
			jule::Ref<_10f4ed830_Const> _279421_c = _10f4ed830_new_f64(jule::MAX_F64);
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("f64", 3)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_279421_c,jule::Bool(),_279421_c));
		}
		goto _match_end_4523316240;
		_case_end_4523321008:;
		if (!(jule::Str("MIN", 3) == _match_expr)) { goto _case_end_4523320656; }
		_case_begin_4523320656:;
		{
			jule::Ref<_10f4ed830_Const> _280221_c = _10f4ed830_new_f64(jule::MIN_F64);
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("f64", 3)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_280221_c,jule::Bool(),_280221_c));
		}
		goto _match_end_4523316240;
		_case_end_4523320656:;
		_case_begin_4523316544:;
		{
			(*this)._method_push_err(_278739_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("f64", 3)),jule::Any(_278739_ident._field_kind)}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4523316240;
		_case_end_4523316544:;
		_match_end_4523316240:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_prim_static(jule::Str _281535_kind,_11ce22a00_Token _281546_ident) {
	{
		auto _match_expr{ _281535_kind };
		if (!(jule::Str("int", 3) == _match_expr)) { goto _case_end_4523332016; }
		_case_begin_4523332016:;
		{
			return (*this)._method_eval_int_type_static(_281546_ident);
		}
		goto _match_end_4523331504;
		_case_end_4523332016:;
		if (!(jule::Str("uint", 4) == _match_expr)) { goto _case_end_4523335472; }
		_case_begin_4523335472:;
		{
			return (*this)._method_eval_uint_type_static(_281546_ident);
		}
		goto _match_end_4523331504;
		_case_end_4523335472:;
		if (!(jule::Str("i8", 2) == _match_expr)) { goto _case_end_4523335584; }
		_case_begin_4523335584:;
		{
			return (*this)._method_eval_i8_type_static(_281546_ident);
		}
		goto _match_end_4523331504;
		_case_end_4523335584:;
		if (!(jule::Str("i16", 3) == _match_expr)) { goto _case_end_4523335696; }
		_case_begin_4523335696:;
		{
			return (*this)._method_eval_i16_type_static(_281546_ident);
		}
		goto _match_end_4523331504;
		_case_end_4523335696:;
		if (!(jule::Str("i32", 3) == _match_expr)) { goto _case_end_4523335808; }
		_case_begin_4523335808:;
		{
			return (*this)._method_eval_i32_type_static(_281546_ident);
		}
		goto _match_end_4523331504;
		_case_end_4523335808:;
		if (!(jule::Str("i64", 3) == _match_expr)) { goto _case_end_4523336096; }
		_case_begin_4523336096:;
		{
			return (*this)._method_eval_i64_type_static(_281546_ident);
		}
		goto _match_end_4523331504;
		_case_end_4523336096:;
		if (!(jule::Str("u8", 2) == _match_expr)) { goto _case_end_4523336208; }
		_case_begin_4523336208:;
		{
			return (*this)._method_eval_u8_type_static(_281546_ident);
		}
		goto _match_end_4523331504;
		_case_end_4523336208:;
		if (!(jule::Str("u16", 3) == _match_expr)) { goto _case_end_4523336320; }
		_case_begin_4523336320:;
		{
			return (*this)._method_eval_u16_type_static(_281546_ident);
		}
		goto _match_end_4523331504;
		_case_end_4523336320:;
		if (!(jule::Str("u32", 3) == _match_expr)) { goto _case_end_4523336432; }
		_case_begin_4523336432:;
		{
			return (*this)._method_eval_u32_type_static(_281546_ident);
		}
		goto _match_end_4523331504;
		_case_end_4523336432:;
		if (!(jule::Str("u64", 3) == _match_expr)) { goto _case_end_4523336544; }
		_case_begin_4523336544:;
		{
			return (*this)._method_eval_u64_type_static(_281546_ident);
		}
		goto _match_end_4523331504;
		_case_end_4523336544:;
		if (!(jule::Str("f32", 3) == _match_expr)) { goto _case_end_4523336656; }
		_case_begin_4523336656:;
		{
			return (*this)._method_eval_f32_type_tatic(_281546_ident);
		}
		goto _match_end_4523331504;
		_case_end_4523336656:;
		if (!(jule::Str("f64", 3) == _match_expr)) { goto _case_end_4523336784; }
		_case_begin_4523336784:;
		{
			return (*this)._method_eval_f64_type_static(_281546_ident);
		}
		goto _match_end_4523331504;
		_case_end_4523336784:;
		_case_begin_4523330976:;
		{
			(*this)._method_push_err(_281546_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(_281535_kind),jule::Any(_281546_ident._field_kind)}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4523331504;
		_case_end_4523330976:;
		_match_end_4523331504:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_type_static(jule::Ref<_10ee8a260_Data> _283539_d,jule::Ref<_11ce1fd50_SubIdentExpr> _283553_si) {
	{
		auto _match_expr{ true };
		if (!(jule::real(_283539_d->_field_kind->_method_prim()) == _match_expr)) { goto _case_end_4523356512; }
		_case_begin_4523356512:;
		{
			return (*this)._method_eval_prim_static(_283539_d->_field_kind->_method_prim()->_method_to_str(),_283553_si->_field_ident);
		}
		goto _match_end_4523355936;
		_case_end_4523356512:;
		if (!(jule::real(_283539_d->_field_kind->_method_enm()) == _match_expr)) { goto _case_end_4523356624; }
		_case_begin_4523356624:;
		{
			return (*this)._method_eval_enum_static(_283539_d->_field_kind->_method_enm(),_283553_si->_field_ident);
		}
		goto _match_end_4523355936;
		_case_end_4523356624:;
		if (!(jule::real(_283539_d->_field_kind->_method_strct()) == _match_expr)) { goto _case_end_4523356736; }
		_case_begin_4523356736:;
		{
			return (*this)._method_eval_struct_static(_283539_d->_field_kind->_method_strct(),_283553_si->_field_ident);
		}
		goto _match_end_4523355936;
		_case_end_4523356736:;
		_case_begin_4523356208:;
		{
			(*this)._method_push_err(_283553_si->_field_ident,jule::Str("type_not_support_sub_fields", 27),jule::Slice<jule::Any>({jule::Any(_283539_d->_field_kind->_method_to_str())}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4523355936;
		_case_end_4523356208:;
		_match_end_4523355936:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_obj_sub_ident(jule::Ref<_10ee8a260_Data> _285241_d,jule::Ref<_11ce1fd50_SubIdentExpr> _285255_si) {
	jule::Ref<_10eeb79b0_TypeKind> _285317_kind = _285241_d->_field_kind;
	if (jule::real(_285241_d->_field_kind->_method_ptr())) {
		jule::Ref<_10eeb79b0_Ptr> _285517_ptr = _285241_d->_field_kind->_method_ptr();
		if ((!_285517_ptr->_method_is_unsafe())) {
			if (((!_285255_si->_field_is_self) && (!(*this)._method_is_unsafe()))) {
				(*this)._method_push_err(_285255_si->_field_ident,jule::Str("unsafe_behavior_at_out_of_unsafe_scope", 38),jule::Slice<jule::Any>({}));
			}
			_285317_kind=_285241_d->_field_kind->_method_ptr()->_field_elem;
		}
	} else if (jule::real(_285241_d->_field_kind->_method_ref())) {
		_285317_kind=_285241_d->_field_kind->_method_ref()->_field_elem;
	}
	{
		auto _match_expr{ true };
		if (!(jule::real(_285241_d->_field_kind->_method_trt()) == _match_expr)) { goto _case_end_4523391744; }
		_case_begin_4523391744:;
		{
			return (*this)._method_eval_trait_sub_ident(_285241_d,_285241_d->_field_kind->_method_trt(),_285255_si->_field_ident);
		}
		goto _match_end_4523388960;
		_case_end_4523391744:;
		if (!(jule::real(_285317_kind->_method_strct()) == _match_expr)) { goto _case_end_4523391856; }
		_case_begin_4523391856:;
		{
			jule::Ref<_10e3fc8f0_StructIns> _287117_s = _285317_kind->_method_strct();
			if (_10ee8a260_is_instanced_struct(_287117_s)) {
				jule::Bool _287325_used_reference_elem = jule::real(_285241_d->_field_kind->_method_ref());
				return (*this)._method_eval_struct_sub_ident(_285241_d,_285317_kind->_method_strct(),_285255_si,_287325_used_reference_elem);
			}
		}
		goto _match_end_4523388960;
		_case_end_4523391856:;
		if (!(jule::real(_285317_kind->_method_slc()) == _match_expr)) { goto _case_end_4523391968; }
		_case_begin_4523391968:;
		{
			return (*this)._method_eval_slice_sub_ident(_285241_d,_285255_si->_field_ident);
		}
		goto _match_end_4523388960;
		_case_end_4523391968:;
		if (!(jule::real(_285317_kind->_method_arr()) == _match_expr)) { goto _case_end_4523392080; }
		_case_begin_4523392080:;
		{
			return (*this)._method_eval_array_sub_ident(_285241_d,_285255_si->_field_ident);
		}
		goto _match_end_4523388960;
		_case_end_4523392080:;
		if (!(jule::real(_285317_kind->_method_map()) == _match_expr)) { goto _case_end_4523392192; }
		_case_begin_4523392192:;
		{
			return (*this)._method_eval_map_sub_ident(_285241_d,_285255_si->_field_ident);
		}
		goto _match_end_4523388960;
		_case_end_4523392192:;
		if (!(jule::real(_285317_kind->_method_prim()) == _match_expr)) { goto _case_end_4523392304; }
		_case_begin_4523392304:;
		{
			jule::Ref<_10eeb79b0_Prim> _288717_p = _285317_kind->_method_prim();
			{
				auto _match_expr{ _288717_p->_field_kind };
				if (!(jule::Str("str", 3) == _match_expr)) { goto _case_end_4523416800; }
				_case_begin_4523416800:;
				{
					return (*this)._method_eval_str_sub_ident(_285241_d,_285255_si->_field_ident);
				}
				goto _match_end_4523416688;
				_case_end_4523416800:;
				_match_end_4523416688:;
			}
		}
		goto _match_end_4523388960;
		_case_end_4523392304:;
		_match_end_4523388960:;
	}
	(*this)._method_push_err(_285255_si->_field_ident,jule::Str("obj_not_support_sub_fields", 26),jule::Slice<jule::Any>({jule::Any(_285241_d->_field_kind->_method_to_str())}));
	return jule::new_ref<_10ee8a260_Data>();
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_sub_ident(jule::Ref<_11ce1fd50_SubIdentExpr> _289838_si) {
	jule::Ref<_10eeb79b0_TypeKind> _289917_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_289917_prefix;
	});
	jule::Ref<_10ee8a260_Data> _290317_d = this->self->_method_eval_expr_kind(_289838_si->_field_expr);
	if ((!jule::real(_290317_d))) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	if (_290317_d->_field_decl) {
		return this->self->_method_eval_type_static(_290317_d,_289838_si);
	}
	return this->self->_method_eval_obj_sub_ident(_290317_d,_289838_si);
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_tuple(jule::Ref<_11ce1fd50_TupleExpr> _291534_tup) {
	jule::Ref<_10eeb79b0_Tuple> _291617_tup_t = jule::new_struct<_10eeb79b0_Tuple>(new( std::nothrow ) _10eeb79b0_Tuple());
	_291617_tup_t->_field_types=jule::Slice<jule::Ref<_10eeb79b0_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_291534_tup->_field_expr.len())));
	jule::Ref<_10e9ca470_TupleExprModel> _291917_model = jule::new_struct<_10e9ca470_TupleExprModel>(new( std::nothrow ) _10e9ca470_TupleExprModel(jule::Slice<jule::Ref<_10ee8a260_Data>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_291534_tup->_field_expr.len())))));
	jule::Bool _292317_ok = true;
	{
		auto &__julec_range_expr = _291534_tup->_field_expr;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10ee8a260_i{jule::Int()};_10ee8a260_i = 0;
			jule::Any _10ee8a260_expr{jule::Any()};_10ee8a260_expr = *__julec_range_begin;
			_iter_begin_4523444384:;
			{
				jule::Ref<_10ee8a260_Data> _292521_d = this->self->_method_eval_expr_kind(_10ee8a260_expr);
				if ((!jule::real(_292521_d))) {
					_292317_ok=false;
					goto _iter_next_4523444384;
				}
				_291617_tup_t->_field_types[static_cast<jule::Int>(_10ee8a260_i)]=_292521_d->_field_kind;
				_291917_model->_field_datas[static_cast<jule::Int>(_10ee8a260_i)]=_292521_d;
			}
			_iter_next_4523444384:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10ee8a260_i; _10ee8a260_expr = *__julec_range_begin; goto _iter_begin_4523444384; }
			_iter_end_4523444384:;
		}
	}
	if ((!_292317_ok)) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_291617_tup_t)),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_291917_model,jule::Bool(),jule::Ref<_10f4ed830_Const>()));
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_map(jule::Ref<_10eeb79b0_Map> _294432_m,jule::Ref<_11ce1fd50_BraceLit> _294445_lit) {
	jule::Ref<_10e9ca470_MapExprModel> _294517_model = jule::new_struct<_10e9ca470_MapExprModel>(new( std::nothrow ) _10e9ca470_MapExprModel(_294432_m->_field_key,_294432_m->_field_val,jule::Slice<jule::Ref<_10e9ca470_KeyValPairExprModel>>()));
	{
		auto &__julec_range_expr = _294445_lit->_field_exprs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _10ee8a260_expr{jule::Any()};_10ee8a260_expr = *__julec_range_begin;
			_iter_begin_4523460032:;
			{
				{
					auto _match_expr{ _10ee8a260_expr };
					if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_KeyValPair>>())) { goto _case_end_4523464928; }
					goto _match_end_4523463968;
					_case_end_4523464928:;
					_case_begin_4523464080:;
					{
						this->self->_method_push_err(_294445_lit->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
						return jule::new_ref<_10ee8a260_Data>();
					}
					goto _match_end_4523463968;
					_case_end_4523464080:;
					_match_end_4523463968:;
				}
				jule::Ref<_11ce1fd50_KeyValPair> _296021_pair = _10ee8a260_expr.operator jule::Ref<_11ce1fd50_KeyValPair>();
				jule::Ref<_10ee8a260_Data> _296221_key = this->self->_method_eval_expr_kind(_296021_pair->_field_key);
				if ((!jule::real(_296221_key))) {
					return jule::new_ref<_10ee8a260_Data>();
				}
				jule::Ref<_10ee8a260_Data> _296721_val = this->self->_method_eval_expr_kind(_296021_pair->_field_val);
				if ((!jule::real(_296721_val))) {
					return jule::new_ref<_10ee8a260_Data>();
				}
				this->self->_field_s->_method_check_assign_type(_294432_m->_field_key,_296221_key,_296021_pair->_field_colon,true);
				this->self->_field_s->_method_check_assign_type(_294432_m->_field_val,_296721_val,_296021_pair->_field_colon,true);
				_294517_model->_field_entries=append(_294517_model->_field_entries,jule::Slice<jule::Ref<_10e9ca470_KeyValPairExprModel>>({jule::new_struct<_10e9ca470_KeyValPairExprModel>(new( std::nothrow ) _10e9ca470_KeyValPairExprModel(_296221_key->_field_model,_296721_val->_field_model))}));
			}
			_iter_next_4523460032:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10ee8a260_expr = *__julec_range_begin; goto _iter_begin_4523460032; }
			_iter_end_4523460032:;
		}
	}
	return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_294432_m)),jule::Ref<_10eeb79b0_TypeKind>(),true,jule::Bool(),false,false,jule::Bool(),_294517_model,false,jule::Ref<_10f4ed830_Const>()));
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_brace_lit(jule::Ref<_11ce1fd50_BraceLit> _299138_lit) {
	{
		auto _match_expr{ true };
		if (!((!jule::real(this->self->_field_prefix)) == _match_expr)) { goto _case_end_4523489808; }
		_case_begin_4523489808:;
		{
			this->self->_method_push_err(_299138_lit->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4523489232;
		_case_end_4523489808:;
		if (!(jule::real(this->self->_field_prefix->_method_map()) == _match_expr)) { goto _case_end_4523489920; }
		_case_begin_4523489920:;
		{
			return this->self->_method_eval_map(this->self->_field_prefix->_method_map(),_299138_lit);
		}
		goto _match_end_4523489232;
		_case_end_4523489920:;
		if (!(jule::real(this->self->_field_prefix->_method_strct()) == _match_expr)) { goto _case_end_4523490032; }
		_case_begin_4523490032:;
		{
			return this->self->_method_eval_struct_lit_explicit(this->self->_field_prefix->_method_strct(),_299138_lit->_field_exprs,_299138_lit->_field_token);
		}
		goto _match_end_4523489232;
		_case_end_4523490032:;
		_case_begin_4523489504:;
		{
			this->self->_method_push_err(_299138_lit->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4523489232;
		_case_end_4523489504:;
		_match_end_4523489232:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_anon_fn(jule::Ref<_11ce1fd50_FnDecl> _300935_decl) {
	_10eeb79b0_TypeChecker _301017_tc = _10eeb79b0_TypeChecker((*this)._field_s,(*this)._field_lookup,jule::Ref<_10eeb79b0_Referencer>(),_11ce22a00_Token(),jule::Slice<jule::Ref<_11ce1fd50_GenericDecl>>(),jule::Slice<jule::Ref<_10eeb79b0_TypeAlias>>(),jule::Bool());
	jule::Ref<_10e56a140_FnIns> _301417_ins = _301017_tc._method_build_fn(_300935_decl);
	_301417_ins->_field_anon=true;
	{
		auto _match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_ScopeChecker>>())) { goto _case_end_4523514656; }
		_case_begin_4523514656:;
		{
			jule::Ref<_10e97fcf0_ScopeChecker> _301921_sc = (*this)._field_lookup.operator jule::Ref<_10e97fcf0_ScopeChecker>();
			jule::Ref<_10e97fcf0_ScopeChecker> _302021_scc = _301921_sc->_method_new_child_checker();
			_302021_scc->_field_labels=jule::new_ref<jule::Slice<jule::Ref<_10e97fcf0_ScopeLabel>>>(nullptr);
			_302021_scc->_field_gotos=jule::new_ref<jule::Slice<jule::Ref<_10e97fcf0_ScopeGoto>>>(nullptr);
			jule::drop(_302021_scc->_field_owner);
			_302021_scc->_field_child_index=0LL;
			_302021_scc->_field_it=0LL;
			_302021_scc->_field_cse=0LL;
			_302021_scc->_field_owner=_301417_ins;
			(*this)._field_s->_method_check_fn_ins_sc(_301417_ins,_302021_scc);
		}
		goto _match_end_4523512368;
		_case_end_4523514656:;
		_case_begin_4523511104:;
		{
			(*this)._field_s->_method_check_fn_ins(_301417_ins);
		}
		goto _match_end_4523512368;
		_case_end_4523511104:;
		_match_end_4523512368:;
	}
	return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_301417_ins)),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_10e9ca470_AnonFnExprModel>(new( std::nothrow ) _10e9ca470_AnonFnExprModel(_301417_ins,(*this)._method_is_global())),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_binop(jule::Ref<_11ce1fd50_BinopExpr> _304334_op) {
	jule::Ref<_10eeb79b0_TypeKind> _304417_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_304417_prefix;
	});
	_10ee8a260_BinopSolver _304817_bs = _10ee8a260_BinopSolver(this->self,jule::Ref<_10ee8a260_Data>(),jule::Ref<_10ee8a260_Data>(),_11ce22a00_Token());
	return _304817_bs._method_solve(_304334_op);
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_expr_kind(jule::Any _305438_kind) {
	jule::Ref<_10ee8a260_Data> _305517_d = jule::new_ref<_10ee8a260_Data>();
	{
		auto _match_expr{ _305438_kind };
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_LitExpr>>())) { goto _case_end_4523542256; }
		_case_begin_4523542256:;
		{
			_305517_d=this->self->_method_eval_lit(_305438_kind.operator jule::Ref<_11ce1fd50_LitExpr>());
		}
		goto _match_end_4523541424;
		_case_end_4523542256:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_IdentExpr>>())) { goto _case_end_4523543184; }
		_case_begin_4523543184:;
		{
			_305517_d=this->self->_method_eval_ident(_305438_kind.operator jule::Ref<_11ce1fd50_IdentExpr>());
		}
		goto _match_end_4523541424;
		_case_end_4523543184:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_UnaryExpr>>())) { goto _case_end_4523542608; }
		_case_begin_4523542608:;
		{
			_305517_d=this->self->_method_eval_unary(_305438_kind.operator jule::Ref<_11ce1fd50_UnaryExpr>());
		}
		goto _match_end_4523541424;
		_case_end_4523542608:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_VariadicExpr>>())) { goto _case_end_4523542720; }
		_case_begin_4523542720:;
		{
			_305517_d=this->self->_method_eval_variadic(_305438_kind.operator jule::Ref<_11ce1fd50_VariadicExpr>());
		}
		goto _match_end_4523541424;
		_case_end_4523542720:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_UnsafeExpr>>())) { goto _case_end_4523543648; }
		_case_begin_4523543648:;
		{
			_305517_d=this->self->_method_eval_unsafe(_305438_kind.operator jule::Ref<_11ce1fd50_UnsafeExpr>());
		}
		goto _match_end_4523541424;
		_case_end_4523543648:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_SliceExpr>>())) { goto _case_end_4523543760; }
		_case_begin_4523543760:;
		{
			_305517_d=this->self->_method_eval_slice_expr(_305438_kind.operator jule::Ref<_11ce1fd50_SliceExpr>());
		}
		goto _match_end_4523541424;
		_case_end_4523543760:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_IndexingExpr>>())) { goto _case_end_4523543872; }
		_case_begin_4523543872:;
		{
			_305517_d=this->self->_method_eval_indexing(_305438_kind.operator jule::Ref<_11ce1fd50_IndexingExpr>());
		}
		goto _match_end_4523541424;
		_case_end_4523543872:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_SlicingExpr>>())) { goto _case_end_4523543984; }
		_case_begin_4523543984:;
		{
			_305517_d=this->self->_method_eval_slicing(_305438_kind.operator jule::Ref<_11ce1fd50_SlicingExpr>());
		}
		goto _match_end_4523541424;
		_case_end_4523543984:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_CastExpr>>())) { goto _case_end_4523544096; }
		_case_begin_4523544096:;
		{
			_305517_d=this->self->_method_eval_cast(_305438_kind.operator jule::Ref<_11ce1fd50_CastExpr>());
		}
		goto _match_end_4523541424;
		_case_end_4523544096:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_NsSelectionExpr>>())) { goto _case_end_4523544208; }
		_case_begin_4523544208:;
		{
			_305517_d=this->self->_method_eval_ns_selection(_305438_kind.operator jule::Ref<_11ce1fd50_NsSelectionExpr>());
		}
		goto _match_end_4523541424;
		_case_end_4523544208:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_StructLit>>())) { goto _case_end_4523544320; }
		_case_begin_4523544320:;
		{
			_305517_d=this->self->_method_eval_struct_lit(_305438_kind.operator jule::Ref<_11ce1fd50_StructLit>());
		}
		goto _match_end_4523541424;
		_case_end_4523544320:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_TypeDecl>>())) { goto _case_end_4523544432; }
		_case_begin_4523544432:;
		{
			_305517_d=this->self->_method_eval_type(_305438_kind.operator jule::Ref<_11ce1fd50_TypeDecl>());
		}
		goto _match_end_4523541424;
		_case_end_4523544432:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_FnCallExpr>>())) { goto _case_end_4523544544; }
		_case_begin_4523544544:;
		{
			_305517_d=this->self->_method_eval_fn_call(_305438_kind.operator jule::Ref<_11ce1fd50_FnCallExpr>());
		}
		goto _match_end_4523541424;
		_case_end_4523544544:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_SubIdentExpr>>())) { goto _case_end_4523544656; }
		_case_begin_4523544656:;
		{
			_305517_d=this->self->_method_eval_sub_ident(_305438_kind.operator jule::Ref<_11ce1fd50_SubIdentExpr>());
		}
		goto _match_end_4523541424;
		_case_end_4523544656:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_TupleExpr>>())) { goto _case_end_4523544768; }
		_case_begin_4523544768:;
		{
			_305517_d=this->self->_method_eval_tuple(_305438_kind.operator jule::Ref<_11ce1fd50_TupleExpr>());
		}
		goto _match_end_4523541424;
		_case_end_4523544768:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_BraceLit>>())) { goto _case_end_4523544880; }
		_case_begin_4523544880:;
		{
			_305517_d=this->self->_method_eval_brace_lit(_305438_kind.operator jule::Ref<_11ce1fd50_BraceLit>());
		}
		goto _match_end_4523541424;
		_case_end_4523544880:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_FnDecl>>())) { goto _case_end_4523544992; }
		_case_begin_4523544992:;
		{
			_305517_d=this->self->_method_eval_anon_fn(_305438_kind.operator jule::Ref<_11ce1fd50_FnDecl>());
		}
		goto _match_end_4523541424;
		_case_end_4523544992:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_BinopExpr>>())) { goto _case_end_4523545104; }
		_case_begin_4523545104:;
		{
			_305517_d=this->self->_method_eval_binop(_305438_kind.operator jule::Ref<_11ce1fd50_BinopExpr>());
		}
		goto _match_end_4523541424;
		_case_end_4523545104:;
		_case_begin_4523541024:;
		{
			jule::drop(_305517_d);
		}
		goto _match_end_4523541424;
		_case_end_4523541024:;
		_match_end_4523541424:;
	}
	if ((!jule::real(_305517_d))) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	if ((!jule::real(_305517_d->_field_kind))) {
		return _305517_d;
	}
	if (((((!jule::real(_305517_d->_field_cast_kind)) && _305517_d->_method_is_const()) && (!_305517_d->_field_is_rune)) && jule::real(_305517_d->_field_kind->_method_prim()))) {
		{
			auto _match_expr{ true };
			if (!(_305517_d->_field_constant->_method_is_i64() == _match_expr)) { goto _case_end_4714451424; }
			_case_begin_4714451424:;
			{
				if (_10eb9c740_int_assignable(jule::Str("int", 3),_305517_d)) {
					_305517_d->_field_kind->_field_kind=_10eeb79b0_build_prim_type(jule::Str("int", 3));
				}
			}
			goto _match_end_4714451120;
			_case_end_4714451424:;
			if (!(_305517_d->_field_constant->_method_is_u64() == _match_expr)) { goto _case_end_4714451536; }
			_case_begin_4714451536:;
			{
				if (_10eb9c740_int_assignable(jule::Str("uint", 4),_305517_d)) {
					_305517_d->_field_kind->_field_kind=_10eeb79b0_build_prim_type(jule::Str("uint", 4));
				}
			}
			goto _match_end_4714451120;
			_case_end_4714451536:;
			_match_end_4714451120:;
		}
	}
	if ((!_305517_d->_field_decl)) {
		if (((((((!jule::real(_305517_d->_field_cast_kind)) && (!_305517_d->_field_variadiced)) && (!_305517_d->_field_lvalue)) && (!_305517_d->_method_is_const())) && jule::real(_305517_d->_field_kind->_method_prim())) && _10f5ea650_is_num(_305517_d->_field_kind->_method_prim()->_field_kind))) {
			_305517_d->_field_cast_kind=_305517_d->_field_kind;
		}
		_10ee8a260_apply_cast_kind(_305517_d);
		if (((!jule::real(_305517_d->_field_kind->_method_prim())) || (!_305517_d->_field_kind->_method_prim()->_method_is_any()))) {
			if (((jule::real(this->self->_field_prefix) && jule::real(this->self->_field_prefix->_method_prim())) && this->self->_field_prefix->_method_prim()->_method_is_any())) {
				_305517_d->_field_cast_kind=this->self->_field_prefix;
				_10ee8a260_apply_cast_kind_model(_305517_d);
				jule::drop(_305517_d->_field_cast_kind);
			}
		}
	}
	return _305517_d;
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval(jule::Ref<_11ce1fd50_Expr> _312228_expr) {
	jule::Ref<_10ee8a260_Data> _312317_d = this->self->_method_eval_expr_kind(_312228_expr->_field_kind);
	if (((!jule::real(_312317_d)) || (!jule::real(_312317_d->_field_kind)))) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	{
		auto _match_expr{ true };
		if (!(jule::real(_312317_d->_field_kind->_method_fnc()) == _match_expr)) { goto _case_end_4714489600; }
		_case_begin_4714489600:;
		{
			jule::Ref<_10e56a140_FnIns> _313021_f = _312317_d->_field_kind->_method_fnc();
			if (_313021_f->_method_is_builtin()) {
				goto _match_end_4714488704;
			}
			if ((static_cast<jule::I64>(_313021_f->_field_generics.len()) != static_cast<jule::I64>(_313021_f->_field_decl->_field_generics.len()))) {
				this->self->_field_s->_method_push_err(_312228_expr->_field_token,jule::Str("has_generics", 12),jule::Slice<jule::Any>({}));
			}
			if (_313021_f->_field_decl->_method_is_method()) {
				this->self->_field_s->_method_push_err(_312228_expr->_field_token,jule::Str("method_not_invoked", 18),jule::Slice<jule::Any>({}));
			}
		}
		goto _match_end_4714488704;
		_case_end_4714489600:;
		_match_end_4714488704:;
	}
	return _312317_d;
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_Eval::_method_eval_expr(jule::Ref<_11ce1fd50_Expr> _315033_expr) {
	jule::Ref<_10ee8a260_Data> _315117_d = this->self->_method_eval(_315033_expr);
	{
		auto _match_expr{ true };
		if (!((!jule::real(_315117_d)) == _match_expr)) { goto _case_end_4714508944; }
		_case_begin_4714508944:;
		{
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4714506976;
		_case_end_4714508944:;
		if (!(_315117_d->_field_decl == _match_expr)) { goto _case_end_4714509152; }
		_case_begin_4714509152:;
		{
			this->self->_method_push_err(_315033_expr->_field_token,jule::Str("invalid_expr", 12),jule::Slice<jule::Any>({}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4714506976;
		_case_end_4714509152:;
		_case_begin_4714507296:;
		{
			return _315117_d;
		}
		goto _match_end_4714506976;
		_case_end_4714507296:;
		_match_end_4714506976:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _10ee8a260_Eval &_Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "owner:" << _Src._field_owner;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _10eeb79b0_TypeKind::_method_to_str(void) {
	if ((*this)._method_is_nil()) {
		return jule::Str("nil", 3);
	}
	if ((*this)._field_cpp_linked) {
		return (jule::Str("cpp.", 4) + (*this)._field_cpp_ident);
	}
	return (*this)._field_kind.get()._method_to_str();
}



inline jule::Bool _10eeb79b0_TypeKind::_method_equals(jule::Ref<_10eeb79b0_TypeKind> _7121_other) {
	if ((*this)._method_is_nil()) {
		return _7121_other->_method_is_nil();
	}
	if ((*this)._field_cpp_linked) {
		if ((!_7121_other->_field_cpp_linked)) {
			return false;
		}
		return ((*this)._field_cpp_ident == _7121_other->_field_cpp_ident);
	}
	return (*this)._field_kind.get()._method_equals(_7121_other);
}



inline jule::Ref<_10eeb79b0_TypeKind> _10eeb79b0_TypeKind::_method_clone(void) {
	if ((!jule::real(this->self))) {
		return jule::new_ref<_10eeb79b0_TypeKind>();
	}
	jule::Ref<_10eeb79b0_TypeKind> _9417_kind = jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(this->self->_field_cpp_linked,this->self->_field_cpp_ident,this->self->_field_kind));
	return _9417_kind;
}



inline jule::Bool _10eeb79b0_TypeKind::_method_is_nil(void) {
	return ((*this)._field_kind == nullptr);
}



inline jule::Bool _10eeb79b0_TypeKind::_method_is_void(void) {
	jule::Ref<_10eeb79b0_Prim> _10713_prim = (*(&(*this)))._method_prim();
	return (jule::real(_10713_prim) && (_10713_prim->_method_to_str() == jule::Str("void", 4)));
}



inline jule::Ref<_10eeb79b0_Prim> _10eeb79b0_TypeKind::_method_prim(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_10eeb79b0_Prim>>())) { goto _case_end_5316609904; }
		_case_begin_5316609904:;
		{
			return (*this)._field_kind.operator jule::Ref<_10eeb79b0_Prim>();
		}
		goto _match_end_5316608112;
		_case_end_5316609904:;
		_case_begin_5316606848:;
		{
			return jule::new_ref<_10eeb79b0_Prim>();
		}
		goto _match_end_5316608112;
		_case_end_5316606848:;
		_match_end_5316608112:;
	}
}



inline jule::Ref<_10eeb79b0_Ref> _10eeb79b0_TypeKind::_method_ref(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_10eeb79b0_Ref>>())) { goto _case_end_5316613696; }
		_case_begin_5316613696:;
		{
			return (*this)._field_kind.operator jule::Ref<_10eeb79b0_Ref>();
		}
		goto _match_end_5316611952;
		_case_end_5316613696:;
		_case_begin_5316607872:;
		{
			return jule::new_ref<_10eeb79b0_Ref>();
		}
		goto _match_end_5316611952;
		_case_end_5316607872:;
		_match_end_5316611952:;
	}
}



inline jule::Ref<_10eeb79b0_Ptr> _10eeb79b0_TypeKind::_method_ptr(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_10eeb79b0_Ptr>>())) { goto _case_end_5316617680; }
		_case_begin_5316617680:;
		{
			return (*this)._field_kind.operator jule::Ref<_10eeb79b0_Ptr>();
		}
		goto _match_end_5316615968;
		_case_end_5316617680:;
		_case_begin_5316609648:;
		{
			return jule::new_ref<_10eeb79b0_Ptr>();
		}
		goto _match_end_5316615968;
		_case_end_5316609648:;
		_match_end_5316615968:;
	}
}



inline jule::Ref<_10e975f00_Enum> _10eeb79b0_TypeKind::_method_enm(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_10e975f00_Enum>>())) { goto _case_end_5316621504; }
		_case_begin_5316621504:;
		{
			return (*this)._field_kind.operator jule::Ref<_10e975f00_Enum>();
		}
		goto _match_end_5316619760;
		_case_end_5316621504:;
		_case_begin_5316615760:;
		{
			return jule::new_ref<_10e975f00_Enum>();
		}
		goto _match_end_5316619760;
		_case_end_5316615760:;
		_match_end_5316619760:;
	}
}



inline jule::Ref<_10eeb79b0_Arr> _10eeb79b0_TypeKind::_method_arr(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_10eeb79b0_Arr>>())) { goto _case_end_5316625184; }
		_case_begin_5316625184:;
		{
			return (*this)._field_kind.operator jule::Ref<_10eeb79b0_Arr>();
		}
		goto _match_end_5316623472;
		_case_end_5316625184:;
		_case_begin_5316618144:;
		{
			return jule::new_ref<_10eeb79b0_Arr>();
		}
		goto _match_end_5316623472;
		_case_end_5316618144:;
		_match_end_5316623472:;
	}
}



inline jule::Ref<_10eeb79b0_Slc> _10eeb79b0_TypeKind::_method_slc(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_10eeb79b0_Slc>>())) { goto _case_end_5316629008; }
		_case_begin_5316629008:;
		{
			return (*this)._field_kind.operator jule::Ref<_10eeb79b0_Slc>();
		}
		goto _match_end_5316627264;
		_case_end_5316629008:;
		_case_begin_5316625296:;
		{
			return jule::new_ref<_10eeb79b0_Slc>();
		}
		goto _match_end_5316627264;
		_case_end_5316625296:;
		_match_end_5316627264:;
	}
}



inline jule::Ref<_10e56a140_FnIns> _10eeb79b0_TypeKind::_method_fnc(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_10e56a140_FnIns>>())) { goto _case_end_5316632688; }
		_case_begin_5316632688:;
		{
			return (*this)._field_kind.operator jule::Ref<_10e56a140_FnIns>();
		}
		goto _match_end_5316630976;
		_case_end_5316632688:;
		_case_begin_5316625648:;
		{
			return jule::new_ref<_10e56a140_FnIns>();
		}
		goto _match_end_5316630976;
		_case_end_5316625648:;
		_match_end_5316630976:;
	}
}



inline jule::Ref<_10e3fc8f0_StructIns> _10eeb79b0_TypeKind::_method_strct(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_10e3fc8f0_StructIns>>())) { goto _case_end_5316636336; }
		_case_begin_5316636336:;
		{
			return (*this)._field_kind.operator jule::Ref<_10e3fc8f0_StructIns>();
		}
		goto _match_end_5316634624;
		_case_end_5316636336:;
		_case_begin_5316630224:;
		{
			return jule::new_ref<_10e3fc8f0_StructIns>();
		}
		goto _match_end_5316634624;
		_case_end_5316630224:;
		_match_end_5316634624:;
	}
}



inline jule::Ref<_10e3d6eb0_Trait> _10eeb79b0_TypeKind::_method_trt(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_10e3d6eb0_Trait>>())) { goto _case_end_5316639984; }
		_case_begin_5316639984:;
		{
			return (*this)._field_kind.operator jule::Ref<_10e3d6eb0_Trait>();
		}
		goto _match_end_5316638272;
		_case_end_5316639984:;
		_case_begin_5316633872:;
		{
			return jule::new_ref<_10e3d6eb0_Trait>();
		}
		goto _match_end_5316638272;
		_case_end_5316633872:;
		_match_end_5316638272:;
	}
}



inline jule::Ref<_10eeb79b0_Map> _10eeb79b0_TypeKind::_method_map(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_10eeb79b0_Map>>())) { goto _case_end_5316643664; }
		_case_begin_5316643664:;
		{
			return (*this)._field_kind.operator jule::Ref<_10eeb79b0_Map>();
		}
		goto _match_end_5316641952;
		_case_end_5316643664:;
		_case_begin_5316637520:;
		{
			return jule::new_ref<_10eeb79b0_Map>();
		}
		goto _match_end_5316641952;
		_case_end_5316637520:;
		_match_end_5316641952:;
	}
}



inline jule::Ref<_10eeb79b0_Tuple> _10eeb79b0_TypeKind::_method_tup(void) {
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_10eeb79b0_Tuple>>())) { goto _case_end_5316647392; }
		_case_begin_5316647392:;
		{
			return (*this)._field_kind.operator jule::Ref<_10eeb79b0_Tuple>();
		}
		goto _match_end_5316645600;
		_case_end_5316647392:;
		_case_begin_5316645712:;
		{
			return jule::new_ref<_10eeb79b0_Tuple>();
		}
		goto _match_end_5316645600;
		_case_end_5316645712:;
		_match_end_5316645600:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _10eeb79b0_TypeKind &_Src) {
	_Stream << "TypeKind{";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "cpp_ident:" << _Src._field_cpp_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _10eeb79b0_TypeSymbol::_method_checked(void) {
	return jule::real((*this)._field_kind);
}



inline void _10eeb79b0_TypeSymbol::_method_remove_kind(void) {
	jule::drop((*this)._field_kind);
}







std::ostream &operator<<(std::ostream &_Stream, const _10eeb79b0_TypeSymbol &_Src) {
	_Stream << "TypeSymbol{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _10eeb79b0_Prim::_method_to_str(void) {
	return (*this)._field_kind;
}



inline jule::Bool _10eeb79b0_Prim::_method_equals(jule::Ref<_10eeb79b0_TypeKind> _22521_other) {
	jule::Ref<_10eeb79b0_Prim> _22613_prim = (_22521_other).alloc->_method_prim();
	if ((!jule::real(_22613_prim))) {
		return false;
	}
	return ((*this)._field_kind == _22613_prim->_field_kind);
}



inline jule::Bool _10eeb79b0_Prim::_method_is_i8(void) {
	return ((*this)._field_kind == jule::Str("i8", 2));
}



inline jule::Bool _10eeb79b0_Prim::_method_is_i16(void) {
	return ((*this)._field_kind == jule::Str("i16", 3));
}



inline jule::Bool _10eeb79b0_Prim::_method_is_i32(void) {
	return ((*this)._field_kind == jule::Str("i32", 3));
}



inline jule::Bool _10eeb79b0_Prim::_method_is_i64(void) {
	return ((*this)._field_kind == jule::Str("i64", 3));
}



inline jule::Bool _10eeb79b0_Prim::_method_is_u8(void) {
	return ((*this)._field_kind == jule::Str("u8", 2));
}



inline jule::Bool _10eeb79b0_Prim::_method_is_u16(void) {
	return ((*this)._field_kind == jule::Str("u16", 3));
}



inline jule::Bool _10eeb79b0_Prim::_method_is_u32(void) {
	return ((*this)._field_kind == jule::Str("u32", 3));
}



inline jule::Bool _10eeb79b0_Prim::_method_is_u64(void) {
	return ((*this)._field_kind == jule::Str("u64", 3));
}



inline jule::Bool _10eeb79b0_Prim::_method_is_f32(void) {
	return ((*this)._field_kind == jule::Str("f32", 3));
}



inline jule::Bool _10eeb79b0_Prim::_method_is_f64(void) {
	return ((*this)._field_kind == jule::Str("f64", 3));
}



inline jule::Bool _10eeb79b0_Prim::_method_is_int(void) {
	return ((*this)._field_kind == jule::Str("int", 3));
}



inline jule::Bool _10eeb79b0_Prim::_method_is_uint(void) {
	return ((*this)._field_kind == jule::Str("uint", 4));
}



inline jule::Bool _10eeb79b0_Prim::_method_is_uintptr(void) {
	return ((*this)._field_kind == jule::Str("uintptr", 7));
}



inline jule::Bool _10eeb79b0_Prim::_method_is_bool(void) {
	return ((*this)._field_kind == jule::Str("bool", 4));
}



inline jule::Bool _10eeb79b0_Prim::_method_is_str(void) {
	return ((*this)._field_kind == jule::Str("str", 3));
}



inline jule::Bool _10eeb79b0_Prim::_method_is_any(void) {
	return ((*this)._field_kind == jule::Str("any", 3));
}







std::ostream &operator<<(std::ostream &_Stream, const _10eeb79b0_Prim &_Src) {
	_Stream << "Prim{";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _10eeb79b0_Ref::_method_to_str(void) {
	return (jule::Str("&", 1) + (*this)._field_elem->_method_to_str());
}



inline jule::Bool _10eeb79b0_Ref::_method_equals(jule::Ref<_10eeb79b0_TypeKind> _29421_other) {
	jule::Ref<_10eeb79b0_Ref> _29513_ref = (_29421_other).alloc->_method_ref();
	if ((!jule::real(_29513_ref))) {
		return false;
	}
	return (*this)._field_elem->_method_equals(_29513_ref->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _10eeb79b0_Ref &_Src) {
	_Stream << "Ref{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _10eeb79b0_Slc::_method_to_str(void) {
	return (jule::Str("[]", 2) + (*this)._field_elem->_method_to_str());
}



inline jule::Bool _10eeb79b0_Slc::_method_equals(jule::Ref<_10eeb79b0_TypeKind> _31321_other) {
	jule::Ref<_10eeb79b0_Slc> _31413_slc = (_31321_other).alloc->_method_slc();
	if ((!jule::real(_31413_slc))) {
		return false;
	}
	return (*this)._field_elem->_method_equals(_31413_slc->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _10eeb79b0_Slc &_Src) {
	_Stream << "Slc{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _10eeb79b0_Tuple::_method_to_str(void) {
	jule::Str _33017_s = jule::Str("(", 1);
	_33017_s+=(*this)._field_types[static_cast<jule::Int>(0LL)]->_method_to_str();
	{
		auto __julec_range_expr = (*this)._field_types.slice(static_cast<jule::Int>(1LL));
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10eeb79b0_TypeKind> _10eeb79b0_t{jule::Ref<_10eeb79b0_TypeKind>()};_10eeb79b0_t = *__julec_range_begin;
			_iter_begin_5316712704:;
			{
				_33017_s+=jule::Str(",", 1);
				_33017_s+=_10eeb79b0_t->_method_to_str();
			}
			_iter_next_5316712704:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10eeb79b0_t = *__julec_range_begin; goto _iter_begin_5316712704; }
			_iter_end_5316712704:;
		}
	}
	_33017_s+=jule::Str(")", 1);
	return _33017_s;
}



inline jule::Bool _10eeb79b0_Tuple::_method_equals(jule::Ref<_10eeb79b0_TypeKind> _34121_other) {
	jule::Ref<_10eeb79b0_Tuple> _34213_tup = (_34121_other).alloc->_method_tup();
	if ((!jule::real(_34213_tup))) {
		return false;
	}
	if ((static_cast<jule::I64>((*this)._field_types.len()) != static_cast<jule::I64>(_34213_tup->_field_types.len()))) {
		return false;
	}
	jule::Int _35117_i = 0LL;
	_iter_begin_5316718464:;
	if (!((_35117_i < static_cast<jule::I64>((*this)._field_types.len())))) { goto _iter_end_5316718464; }
	{
		if ((!(*this)._field_types[static_cast<jule::Int>(_35117_i)]->_method_equals(_34213_tup->_field_types[static_cast<jule::Int>(_35117_i)]))) {
			return false;
		}
	}
	_iter_next_5316718464:;
	(_35117_i)++;
	goto _iter_begin_5316718464;
	_iter_end_5316718464:;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _10eeb79b0_Tuple &_Src) {
	_Stream << "Tuple{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _10eeb79b0_Map::_method_to_str(void) {
	jule::Str _37117_s = jule::Str("[", 1);
	_37117_s+=(*this)._field_key->_method_to_str();
	_37117_s+=jule::Str(":", 1);
	_37117_s+=(*this)._field_val->_method_to_str();
	_37117_s+=jule::Str("]", 1);
	return _37117_s;
}



inline jule::Bool _10eeb79b0_Map::_method_equals(jule::Ref<_10eeb79b0_TypeKind> _38021_other) {
	jule::Ref<_10eeb79b0_Map> _38113_map = (_38021_other).alloc->_method_map();
	if ((!jule::real(_38113_map))) {
		return false;
	}
	return ((*this)._field_key->_method_equals(_38113_map->_field_key) && (*this)._field_val->_method_equals(_38113_map->_field_val));
}







std::ostream &operator<<(std::ostream &_Stream, const _10eeb79b0_Map &_Src) {
	_Stream << "Map{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _10eeb79b0_Arr::_method_to_str(void) {
	jule::Str _39917_s = jule::Str("[", 1);
	_39917_s+=_10daf8c40_itoa((*this)._field_n);
	_39917_s+=jule::Str("]", 1);
	_39917_s+=(*this)._field_elem->_method_to_str();
	return _39917_s;
}



inline jule::Bool _10eeb79b0_Arr::_method_equals(jule::Ref<_10eeb79b0_TypeKind> _40721_other) {
	jule::Ref<_10eeb79b0_Arr> _40813_arr = (_40721_other).alloc->_method_arr();
	if ((!jule::real(_40813_arr))) {
		return false;
	}
	return (((*this)._field_n == _40813_arr->_field_n) && (*this)._field_elem->_method_equals(_40813_arr->_field_elem));
}







std::ostream &operator<<(std::ostream &_Stream, const _10eeb79b0_Arr &_Src) {
	_Stream << "Arr{";
	_Stream << "auto:" << _Src._field_auto << ", ";
	_Stream << "n:" << _Src._field_n << ", ";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _10eeb79b0_Ptr::_method_to_str(void) {
	if ((*this)._method_is_unsafe()) {
		return jule::Str("*unsafe", 7);
	}
	return (jule::Str("*", 1) + (*this)._field_elem->_method_to_str());
}



inline jule::Bool _10eeb79b0_Ptr::_method_equals(jule::Ref<_10eeb79b0_TypeKind> _43121_other) {
	jule::Ref<_10eeb79b0_Ptr> _43213_ptr = (_43121_other).alloc->_method_ptr();
	if ((!jule::real(_43213_ptr))) {
		return false;
	}
	return (*this)._field_elem->_method_equals(_43213_ptr->_field_elem);
}



inline jule::Bool _10eeb79b0_Ptr::_method_is_unsafe(void) {
	return (!jule::real((*this)._field_elem));
}







std::ostream &operator<<(std::ostream &_Stream, const _10eeb79b0_Ptr &_Src) {
	_Stream << "Ptr{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10eeb79b0_Referencer &_Src) {
	_Stream << "Referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_10e9b6a10_ImportInfo> _12ce24da0_PlainImporter::_method_get_import(jule::Str _7529_path) {
	{
		auto &__julec_range_expr = (*this)._field_all_packages;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e9b6a10_ImportInfo> _12ce24da0_p{jule::Ref<_10e9b6a10_ImportInfo>()};_12ce24da0_p = *__julec_range_begin;
			_iter_begin_4712807600:;
			{
				if ((_12ce24da0_p->_field_path == _7529_path)) {
					return _12ce24da0_p;
				}
			}
			_iter_next_4712807600:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _12ce24da0_p = *__julec_range_begin; goto _iter_begin_4712807600; }
			_iter_end_4712807600:;
		}
	}
	return jule::new_ref<_10e9b6a10_ImportInfo>();
}



inline std::tuple<jule::Slice<jule::Ref<_11ce19be0_Ast>>,jule::Slice<_13cfd2d20_Log>> _12ce24da0_PlainImporter::_method_import_package(jule::Str _8533_path) {
	jule::Slice<jule::Ref<_12ce4fe70_DirEntry>> _8614_dirents{};
	jule::Str _8623_err_msg{};
	std::tie(_8614_dirents,_8623_err_msg) = _12ce24da0_read_package_dirents(_8533_path);
	if ((_8623_err_msg != jule::Str("", 0))) {
		jule::Slice<_13cfd2d20_Log> _8821_errors = jule::Slice<_13cfd2d20_Log>({_12ce24da0_flat_compiler_err(_8623_err_msg)});
		return std::make_tuple(nullptr,_8821_errors);
	}
	jule::Slice<jule::Ref<_11ce19be0_Ast>> _9217_asts = nullptr;
	{
		auto &__julec_range_expr = _8614_dirents;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_12ce4fe70_DirEntry> _12ce24da0_dirent{jule::Ref<_12ce4fe70_DirEntry>()};_12ce24da0_dirent = *__julec_range_begin;
			_iter_begin_4712821200:;
			{
				jule::Str _9417_path = _12ce95080_join(jule::Slice<jule::Str>({_8533_path,_12ce24da0_dirent->_field_name}));
				jule::Ref<_11ce078a0_File> _9521_file = _11ce078a0_new_file_set(_9417_path);
				jule::Slice<_13cfd2d20_Log> _9621_errors = _11cec0de0_lex(_9521_file,_12ce24da0_read_buff(_9521_file->_method_path()));
				if ((static_cast<jule::I64>(_9621_errors.len()) > 0LL)) {
					return std::make_tuple(nullptr,_9621_errors);
				}
				jule::Ref<_10e3d3fd0_FileInfo> _10121_finfo = _10e3d3fd0_parse_file(_9521_file);
				if ((static_cast<jule::I64>(_10121_finfo->_field_errors.len()) > 0LL)) {
					return std::make_tuple(nullptr,_10121_finfo->_field_errors);
				}
				_9217_asts=append(_9217_asts,jule::Slice<jule::Ref<_11ce19be0_Ast>>({_10121_finfo->_field_ast}));
			}
			_iter_next_4712821200:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _12ce24da0_dirent = *__julec_range_begin; goto _iter_begin_4712821200; }
			_iter_end_4712821200:;
		}
	}
	return std::make_tuple(_9217_asts,nullptr);
}



inline void _12ce24da0_PlainImporter::_method_imported(jule::Ref<_10e9b6a10_ImportInfo> _11231_imp) {
	{
		auto &__julec_range_expr = (*this)._field_all_packages;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e9b6a10_ImportInfo> _12ce24da0_p{jule::Ref<_10e9b6a10_ImportInfo>()};_12ce24da0_p = *__julec_range_begin;
			_iter_begin_4712812608:;
			{
				if (((_12ce24da0_p->_field_cpp_linked == _11231_imp->_field_cpp_linked) && (_12ce24da0_p->_field_link_path == _11231_imp->_field_link_path))) {
					return;
				}
			}
			_iter_next_4712812608:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _12ce24da0_p = *__julec_range_begin; goto _iter_begin_4712812608; }
			_iter_end_4712812608:;
		}
	}
	(*this)._field_all_packages=append((*this)._field_all_packages,jule::Slice<jule::Ref<_10e9b6a10_ImportInfo>>({_11231_imp}));
}







std::ostream &operator<<(std::ostream &_Stream, const _12ce24da0_PlainImporter &_Src) {
	_Stream << "PlainImporter{";
	_Stream << "all_packages:" << _Src._field_all_packages;
	_Stream << "}";
	return _Stream;
}



inline jule::Slice<jule::Ref<_10e3fc8f0_Struct>> _12ce09d10_IR::_method_get_all_structures(void) {
	jule::Slice<jule::Ref<_10e3fc8f0_Struct>> _2717_buffer = nullptr;
	jule::Fn<void(jule::Ref<_10e9b6a10_Package>)> _2913_append_structs = jule::Fn<void(jule::Ref<_10e9b6a10_Package>)>([&](jule::Ref<_10e9b6a10_Package> _2937_p) mutable -> void {
		{
			auto &__julec_range_expr = _2937_p->_field_files;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_10ee5c510_SymbolTable> _12ce09d10_f{jule::Ref<_10ee5c510_SymbolTable>()};_12ce09d10_f = *__julec_range_begin;
				_iter_begin_4712908912:;
				{
					jule::Int _3125_i = 0LL;
					_iter_begin_4712912208:;
					if (!((_3125_i < static_cast<jule::Int>(_12ce09d10_f->_field_structs._method_len())))) { goto _iter_end_4712912208; }
					{
						jule::Ref<_10e3fc8f0_Struct> _3329_s = _12ce09d10_f->_field_structs._method_at(_3125_i);
						if ((!_3329_s->_field_cpp_linked)) {
							_2717_buffer=append(_2717_buffer,jule::Slice<jule::Ref<_10e3fc8f0_Struct>>({_3329_s}));
						}
					}
					_iter_next_4712912208:;
					(_3125_i)++;
					goto _iter_begin_4712912208;
					_iter_end_4712912208:;
				}
				_iter_next_4712908912:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _12ce09d10_f = *__julec_range_begin; goto _iter_begin_4712908912; }
				_iter_end_4712908912:;
			}
		}
	});
	_2913_append_structs((*this)._field_main);
	{
		auto &__julec_range_expr = (*this)._field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e9b6a10_ImportInfo> _12ce09d10_u{jule::Ref<_10e9b6a10_ImportInfo>()};_12ce09d10_u = *__julec_range_begin;
			_iter_begin_4712907344:;
			{
				if ((!_12ce09d10_u->_field_cpp_linked)) {
					_2913_append_structs(_12ce09d10_u->_field_package);
				}
			}
			_iter_next_4712907344:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _12ce09d10_u = *__julec_range_begin; goto _iter_begin_4712907344; }
			_iter_end_4712907344:;
		}
	}
	return _2717_buffer;
}



inline jule::Slice<jule::Ref<_10ebc2ad0_Var>> _12ce09d10_IR::_method_get_all_variables(void) {
	jule::Slice<jule::Ref<_10ebc2ad0_Var>> _5517_buffer = nullptr;
	jule::Fn<void(jule::Ref<_10e9b6a10_Package>)> _5713_append_vars = jule::Fn<void(jule::Ref<_10e9b6a10_Package>)>([&](jule::Ref<_10e9b6a10_Package> _5734_p) mutable -> void {
		{
			auto &__julec_range_expr = _5734_p->_field_files;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_10ee5c510_SymbolTable> _12ce09d10_f{jule::Ref<_10ee5c510_SymbolTable>()};_12ce09d10_f = *__julec_range_begin;
				_iter_begin_4712929728:;
				{
					jule::Int _5925_i = 0LL;
					_iter_begin_4712933024:;
					if (!((_5925_i < static_cast<jule::Int>(_12ce09d10_f->_field_vars._method_len())))) { goto _iter_end_4712933024; }
					{
						jule::Ref<_10ebc2ad0_Var> _6129_v = _12ce09d10_f->_field_vars._method_at(_5925_i);
						if ((!_6129_v->_field_cpp_linked)) {
							_5517_buffer=append(_5517_buffer,jule::Slice<jule::Ref<_10ebc2ad0_Var>>({_6129_v}));
						}
					}
					_iter_next_4712933024:;
					(_5925_i)++;
					goto _iter_begin_4712933024;
					_iter_end_4712933024:;
				}
				_iter_next_4712929728:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _12ce09d10_f = *__julec_range_begin; goto _iter_begin_4712929728; }
				_iter_end_4712929728:;
			}
		}
	});
	_5713_append_vars((*this)._field_main);
	{
		auto &__julec_range_expr = (*this)._field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e9b6a10_ImportInfo> _12ce09d10_u{jule::Ref<_10e9b6a10_ImportInfo>()};_12ce09d10_u = *__julec_range_begin;
			_iter_begin_4712931424:;
			{
				if ((!_12ce09d10_u->_field_cpp_linked)) {
					_5713_append_vars(_12ce09d10_u->_field_package);
				}
			}
			_iter_next_4712931424:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _12ce09d10_u = *__julec_range_begin; goto _iter_begin_4712931424; }
			_iter_end_4712931424:;
		}
	}
	return _5517_buffer;
}







std::ostream &operator<<(std::ostream &_Stream, const _12ce09d10_IR &_Src) {
	_Stream << "IR{";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "main:" << _Src._field_main << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}



inline void _13cf6e710_ScopeDeadCode::_method_optimize_child(jule::Ref<_10e97fcf0_Scope> _2138_s) {
	jule::Ref<_13cf6e710_ScopeDeadCode> _2217_sdc = jule::new_struct<_13cf6e710_ScopeDeadCode>(new( std::nothrow ) _13cf6e710_ScopeDeadCode(this->self,_2138_s,(&_2138_s->_field_stmts),jule::Int()));
	{
		_2217_sdc->_method_optimize_stmts();
	}
}



inline void _13cf6e710_ScopeDeadCode::_method_eliminate_followed(void) {
	(*this)._field_stmts->_method_remove_range(((*this)._field_i + 1LL),static_cast<jule::Int>((static_cast<jule::Int>((static_cast<jule::Int>((*this)._field_stmts->_method_len()) - (*this)._field_i)) - 1LL)));
	jule::Ref<_13cf6e710_ScopeDeadCode> _3217_parent = (*this)._field_parent;
	_iter_begin_4715572912:;
	if (!(jule::real(_3217_parent))) { goto _iter_end_4715572912; }
	{
		_3217_parent->_field_stmts->_method_remove_range((_3217_parent->_field_i + 1LL),static_cast<jule::Int>((static_cast<jule::Int>((static_cast<jule::Int>(_3217_parent->_field_stmts->_method_len()) - _3217_parent->_field_i)) - 1LL)));
		_3217_parent=_3217_parent->_field_parent;
	}
	_iter_next_4715572912:;
	goto _iter_begin_4715572912;
	_iter_end_4715572912:;
}



inline void _13cf6e710_ScopeDeadCode::_method_optimize_stmt(jule::Any _3944_st) {
	{
		auto _match_expr{ _3944_st };
		if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_Scope>>())) { goto _case_end_4715580688; }
		_case_begin_4715580688:;
		{
			jule::Ref<_10e97fcf0_Scope> _4221_scope = _3944_st.operator jule::Ref<_10e97fcf0_Scope>();
			if (_4221_scope->_field_deferred) {
				_13cf6e710_eliminate_dead_code_of_scope(_4221_scope);
			} else {
				this->self->_method_optimize_child(_4221_scope);
			}
		}
		goto _match_end_4715580272;
		_case_end_4715580688:;
		if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_RetSt>>())) { goto _case_end_4715580800; }
		_case_begin_4715580800:;
		{
			this->self->_method_eliminate_followed();
		}
		goto _match_end_4715580272;
		_case_end_4715580800:;
		_match_end_4715580272:;
	}
}



inline void _13cf6e710_ScopeDeadCode::_method_optimize_stmts(void) {
	this->self->_field_i=0LL;
	_iter_begin_4715589104:;
	if (!((this->self->_field_i < static_cast<jule::Int>(this->self->_field_stmts->_method_len())))) { goto _iter_end_4715589104; }
	{
		this->self->_method_optimize_stmt(this->self->_field_stmts->_method_at(this->self->_field_i));
	}
	_iter_next_4715589104:;
	(this->self->_field_i)++;
	goto _iter_begin_4715589104;
	_iter_end_4715589104:;
}







std::ostream &operator<<(std::ostream &_Stream, const _13cf6e710_ScopeDeadCode &_Src) {
	_Stream << "ScopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _10e890bb0_IndexRangeSetter::_method_setup_vars(jule::Ref<_10ebc2ad0_Var> _4429_key_a,jule::Ref<_10ebc2ad0_Var> _4446_key_b) {
	jule::Str _4513_indent = _10f7d1d90_indent();
	jule::Str _4717_obj = jule::Str("", 0);
	if (jule::real(_4429_key_a)) {
		_4717_obj+=_10f7d1d90_gen_var(_4429_key_a);
		_4717_obj+=_10eb3a1d0_var_out_ident(_4429_key_a);
		_4717_obj+=jule::Str(" = 0;\n", 6);
		_4717_obj+=_4513_indent;
	}
	if (jule::real(_4446_key_b)) {
		_4717_obj+=_10f7d1d90_gen_var(_4446_key_b);
		_4717_obj+=_10eb3a1d0_var_out_ident(_4446_key_b);
		_4717_obj+=jule::Str(" = *__julec_range_begin;\n", 25);
		_4717_obj+=_4513_indent;
	}
	return _4717_obj;
}



inline jule::Str _10e890bb0_IndexRangeSetter::_method_next_steps(jule::Ref<_10ebc2ad0_Var> _6529_key_a,jule::Ref<_10ebc2ad0_Var> _6546_key_b,jule::Str _6559_begin) {
	jule::Str _6613_indent = _10f7d1d90_indent();
	jule::Str _6817_obj = jule::Str("++__julec_range_begin;\n", 23);
	_6817_obj+=_6613_indent;
	_6817_obj+=jule::Str("if (__julec_range_begin != __julec_range_end) { ", 48);
	if (jule::real(_6529_key_a)) {
		_6817_obj+=((jule::Str("++", 2) + _10eb3a1d0_var_out_ident(_6529_key_a)) + jule::Str("; ", 2));
	}
	if (jule::real(_6546_key_b)) {
		_6817_obj+=(_10eb3a1d0_var_out_ident(_6546_key_b) + jule::Str(" = *__julec_range_begin; ", 25));
	}
	_6817_obj+=((jule::Str("goto ", 5) + _6559_begin) + jule::Str("; }\n", 4));
	return _6817_obj;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e890bb0_IndexRangeSetter &_Src) {
	_Stream << "IndexRangeSetter{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _10e890bb0_MapRangeSetter::_method_setup_vars(jule::Ref<_10ebc2ad0_Var> _8729_key_a,jule::Ref<_10ebc2ad0_Var> _8746_key_b) {
	jule::Str _8813_indent = _10f7d1d90_indent();
	jule::Str _8917_obj = jule::Str("", 0);
	if (jule::real(_8729_key_a)) {
		_8917_obj+=_10f7d1d90_gen_var(_8729_key_a);
		_8917_obj+=_10eb3a1d0_var_out_ident(_8729_key_a);
		_8917_obj+=jule::Str(" = __julec_range_begin->first;\n", 31);
		_8917_obj+=_8813_indent;
	}
	if (jule::real(_8746_key_b)) {
		_8917_obj+=_10f7d1d90_gen_var(_8746_key_b);
		_8917_obj+=_10eb3a1d0_var_out_ident(_8746_key_b);
		_8917_obj+=jule::Str(" = __julec_range_begin->second;\n", 32);
		_8917_obj+=_8813_indent;
	}
	return _8917_obj;
}



inline jule::Str _10e890bb0_MapRangeSetter::_method_next_steps(jule::Ref<_10ebc2ad0_Var> _10829_key_a,jule::Ref<_10ebc2ad0_Var> _10846_key_b,jule::Str _10859_begin) {
	jule::Str _10913_indent = _10f7d1d90_indent();
	jule::Str _11117_obj = jule::Str("++__julec_range_begin;\n", 23);
	_11117_obj+=_10913_indent;
	_11117_obj+=jule::Str("if (__julec_range_begin != __julec_range_end) { ", 48);
	if (jule::real(_10829_key_a)) {
		_11117_obj+=_10eb3a1d0_var_out_ident(_10829_key_a);
		_11117_obj+=jule::Str(" = __julec_range_begin->first; ", 31);
	}
	if (jule::real(_10846_key_b)) {
		_11117_obj+=_10eb3a1d0_var_out_ident(_10846_key_b);
		_11117_obj+=jule::Str(" = __julec_range_begin->second; ", 32);
	}
	_11117_obj+=((jule::Str("goto ", 5) + _10859_begin) + jule::Str("; }\n", 4));
	return _11117_obj;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e890bb0_MapRangeSetter &_Src) {
	_Stream << "MapRangeSetter{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10f7d1d90_OrderedDecls &_Src) {
	_Stream << "OrderedDecls{";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "globals:" << _Src._field_globals;
	_Stream << "}";
	return _Stream;
}



inline void _10eeb79b0_TypeChecker::_method_push_err(_11ce22a00_Token _61727_token,jule::Str _61741_key,jule::Slice<jule::Any> _61751_args) {
	(*this)._field_s->_method_push_err(_61727_token,_61741_key,_61751_args);
}



inline jule::Ref<_10eeb79b0_Prim> _10eeb79b0_TypeChecker::_method_build_prim(jule::Ref<_11ce1fd50_IdentTypeDecl> _62129_decl) {
	if ((!_10eeb79b0_is_prim(_62129_decl->_field_ident))) {
		(*this)._method_push_err((*this)._field_error_token,jule::Str("invalid_type", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_10eeb79b0_Prim>();
	}
	if ((static_cast<jule::I64>(_62129_decl->_field_generics.len()) > 0LL)) {
		(*this)._method_push_err(_62129_decl->_field_token,jule::Str("type_not_supports_generics", 26),jule::Slice<jule::Any>({jule::Any(_62129_decl->_field_ident)}));
		return jule::new_ref<_10eeb79b0_Prim>();
	}
	return _10eeb79b0_build_prim_type(_62129_decl->_field_ident);
}



inline jule::Bool _10eeb79b0_TypeChecker::_method_check_illegal_cycles(jule::Ref<_11ce1fd50_IdentTypeDecl> _63939_ident,jule::Any _63966_decl) {
	jule::Bool _63979_ok{jule::Bool()};
	if ((!jule::real((*this)._field_referencer))) {
		_63979_ok = true;
		return _63979_ok;
	}
	{
		auto _match_expr{ _63966_decl };
		if (!(_match_expr.type_is<jule::Ref<_10e3fc8f0_Struct>>())) { goto _case_end_5316797056; }
		_case_begin_5316797056:;
		{
			if ((*this)._field_not_plain) {
				_63979_ok = true;
				return _63979_ok;
			}
		}
		goto _match_end_5316796944;
		_case_end_5316797056:;
		_match_end_5316796944:;
	}
	if (((*this)._field_referencer->_field_owner == _63966_decl)) {
		(*this)._method_push_err(_63939_ident->_field_token,jule::Str("illegal_cycle_refers_itself", 27),jule::Slice<jule::Any>({jule::Any((*this)._field_referencer->_field_ident)}));
		_63979_ok = false;
		return _63979_ok;
	}
	
	jule::Str _66017_message = jule::Str("", 0);
	jule::Fn<void(jule::Any,jule::Any)> _66213_push = jule::Fn<void(jule::Any,jule::Any)>([&](jule::Any _66223_def1,jule::Any _66234_def2) mutable -> void {
		jule::Fn<jule::Str(jule::Any)> _66317_get_ident = jule::Fn<jule::Str(jule::Any)>([&](jule::Any _66332_def) mutable -> jule::Str {
			{
				auto _match_expr{ _66332_def };
				if (!(_match_expr.type_is<jule::Ref<_10eeb79b0_TypeAlias>>())) { goto _case_end_5316815728; }
				_case_begin_5316815728:;
				{
					return _66332_def.operator jule::Ref<_10eeb79b0_TypeAlias>()->_field_ident;
				}
				goto _match_end_5316814720;
				_case_end_5316815728:;
				if (!(_match_expr.type_is<jule::Ref<_10e3fc8f0_Struct>>())) { goto _case_end_5316815056; }
				_case_begin_5316815056:;
				{
					return _66332_def.operator jule::Ref<_10e3fc8f0_Struct>()->_field_ident;
				}
				goto _match_end_5316814720;
				_case_end_5316815056:;
				if (!(_match_expr.type_is<jule::Ref<_10e975f00_Enum>>())) { goto _case_end_5316815168; }
				_case_begin_5316815168:;
				{
					return _66332_def.operator jule::Ref<_10e975f00_Enum>()->_field_ident;
				}
				goto _match_end_5316814720;
				_case_end_5316815168:;
				_case_begin_5316814096:;
				{
					return jule::Str("", 0);
				}
				goto _match_end_5316814720;
				_case_end_5316814096:;
				_match_end_5316814720:;
			}
		});
		jule::Str _67217_def1_ident = _66317_get_ident(_66223_def1);
		jule::Str _67317_def2_ident = _66317_get_ident(_66234_def2);
		jule::Str _67417_refers_to = _10d8aeab0_errorf(jule::Str("refers_to", 9),jule::Slice<jule::Any>({jule::Any(_67217_def1_ident),jule::Any(_67317_def2_ident)}));
		_66017_message=(((_10e8ca650_str_repeat(jule::Str(" ", 1),4LL) + _67417_refers_to) + jule::Str("\n", 1)) + _66017_message);
	});
	jule::Fn<jule::Bool(jule::Any)> _67917_check_cross = nullptr;
	_67917_check_cross=jule::Fn<jule::Bool(jule::Any)>([&](jule::Any _68026_decl) mutable -> jule::Bool {
		{
			auto _match_expr{ _68026_decl };
			if (!(_match_expr.type_is<jule::Ref<_10eeb79b0_TypeAlias>>())) { goto _case_end_5316833664; }
			_case_begin_5316833664:;
			{
				jule::Ref<_10eeb79b0_TypeAlias> _68321_ta = _68026_decl.operator jule::Ref<_10eeb79b0_TypeAlias>();
				{
					auto &__julec_range_expr = _68321_ta->_field_refers;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Any _10eeb79b0_d{jule::Any()};_10eeb79b0_d = *__julec_range_begin;
						_iter_begin_5316837936:;
						{
							if ((_10eeb79b0_d == (*this)._field_referencer->_field_owner)) {
								_66213_push(jule::Any(_68321_ta),_10eeb79b0_d);
								return false;
							}
							if ((!_67917_check_cross(_10eeb79b0_d))) {
								_66213_push(jule::Any(_68321_ta),_10eeb79b0_d);
								return false;
							}
						}
						_iter_next_5316837936:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _10eeb79b0_d = *__julec_range_begin; goto _iter_begin_5316837936; }
						_iter_end_5316837936:;
					}
				}
			}
			goto _match_end_5316834240;
			_case_end_5316833664:;
			if (!(_match_expr.type_is<jule::Ref<_10e3fc8f0_Struct>>())) { goto _case_end_5316833776; }
			_case_begin_5316833776:;
			{
				jule::Ref<_10e3fc8f0_Struct> _69721_s = _68026_decl.operator jule::Ref<_10e3fc8f0_Struct>();
				{
					auto &__julec_range_expr = _69721_s->_field_depends;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_10e3fc8f0_Struct> _10eeb79b0_d{jule::Ref<_10e3fc8f0_Struct>()};_10eeb79b0_d = *__julec_range_begin;
						_iter_begin_5316846800:;
						{
							if (((*this)._field_referencer->_field_owner == _10eeb79b0_d)) {
								_66213_push(jule::Any(_69721_s),jule::Any(_10eeb79b0_d));
								return false;
							}
							if ((!_67917_check_cross(jule::Any(_10eeb79b0_d)))) {
								_66213_push(jule::Any(_69721_s),jule::Any(_10eeb79b0_d));
								return false;
							}
						}
						_iter_next_5316846800:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _10eeb79b0_d = *__julec_range_begin; goto _iter_begin_5316846800; }
						_iter_end_5316846800:;
					}
				}
			}
			goto _match_end_5316834240;
			_case_end_5316833776:;
			_match_end_5316834240:;
		}
		return true;
	});
	if ((!_67917_check_cross(_63966_decl))) {
		jule::Str _71621_err_msg = _66017_message;
		_66017_message=jule::Str("", 0);
		_66213_push((*this)._field_referencer->_field_owner,_63966_decl);
		_71621_err_msg=(_71621_err_msg + _66017_message);
		(*this)._method_push_err(_63939_ident->_field_token,jule::Str("illegal_cross_cycle", 19),jule::Slice<jule::Any>({jule::Any(_71621_err_msg)}));
		_63979_ok = false;
		return _63979_ok;
	}
	{
		auto _match_expr{ (*this)._field_referencer->_field_owner };
		if (!(_match_expr.type_is<jule::Ref<_10eeb79b0_TypeAlias>>())) { goto _case_end_5316859856; }
		_case_begin_5316859856:;
		{
			{
				(*(*this)._field_referencer->_field_refs)=append((*(*this)._field_referencer->_field_refs),jule::Slice<jule::Any>({_63966_decl}));
			}
		}
		goto _match_end_5316859232;
		_case_end_5316859856:;
		if (!(_match_expr.type_is<jule::Ref<_10e3fc8f0_Struct>>())) { goto _case_end_5316859968; }
		_case_begin_5316859968:;
		{
			{
				auto _match_expr{ _63966_decl };
				if (!(_match_expr.type_is<jule::Ref<_10e3fc8f0_Struct>>())) { goto _case_end_5316860832; }
				_case_begin_5316860832:;
				{
					jule::Ref<_10e3fc8f0_Struct> _73125_s = (*this)._field_referencer->_field_owner.operator jule::Ref<_10e3fc8f0_Struct>();
					_73125_s->_field_depends=append(_73125_s->_field_depends,jule::Slice<jule::Ref<_10e3fc8f0_Struct>>({_63966_decl.operator jule::Ref<_10e3fc8f0_Struct>()}));
				}
				goto _match_end_5316863888;
				_case_end_5316860832:;
				_match_end_5316863888:;
			}
		}
		goto _match_end_5316859232;
		_case_end_5316859968:;
		_match_end_5316859232:;
	}
	_63979_ok = true;
	return _63979_ok;
}



inline jule::Trait<_10eeb79b0_Kind> _10eeb79b0_TypeChecker::_method_from_type_alias(jule::Ref<_11ce1fd50_IdentTypeDecl> _73934_decl,jule::Ref<_10eeb79b0_TypeAlias> _73960_ta) {
	if ((!(*this)._field_s->_method_is_accessible_define(_73960_ta->_field_public,_73960_ta->_field_token))) {
		(*this)._method_push_err(_73934_decl->_field_token,jule::Str("ident_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_73934_decl->_field_ident)}));
		return nullptr;
	}
	_73960_ta->_field_used=true;
	if ((static_cast<jule::I64>(_73934_decl->_field_generics.len()) > 0LL)) {
		(*this)._method_push_err(_73934_decl->_field_token,jule::Str("type_not_supports_generics", 26),jule::Slice<jule::Any>({jule::Any(_73934_decl->_field_ident)}));
		return nullptr;
	}
	jule::Bool _75217_ok = (*this)._method_check_illegal_cycles(_73934_decl,jule::Any(_73960_ta));
	if ((!_75217_ok)) {
		return nullptr;
	}
	_75217_ok=(*this)._field_s->_method_check_type_alias_decl_kind(_73960_ta,(*this)._field_lookup);
	if ((!_75217_ok)) {
		return nullptr;
	}
	jule::Ref<_10eeb79b0_TypeKind> _76317_kind = _73960_ta->_field_kind->_field_kind->_method_clone();
	if (_73960_ta->_field_cpp_linked) {
		_76317_kind->_field_cpp_linked=true;
		_76317_kind->_field_cpp_ident=_73960_ta->_field_ident;
	}
	return _76317_kind;
}



inline jule::Ref<_10e975f00_Enum> _10eeb79b0_TypeChecker::_method_from_enum(jule::Ref<_11ce1fd50_IdentTypeDecl> _77328_decl,jule::Ref<_10e975f00_Enum> _77354_e) {
	if ((!(*this)._field_s->_method_is_accessible_define(_77354_e->_field_public,_77354_e->_field_token))) {
		(*this)._method_push_err(_77328_decl->_field_token,jule::Str("ident_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_77328_decl->_field_ident)}));
		return jule::new_ref<_10e975f00_Enum>();
	}
	if ((static_cast<jule::I64>(_77328_decl->_field_generics.len()) > 0LL)) {
		(*this)._method_push_err(_77328_decl->_field_token,jule::Str("type_not_supports_generics", 26),jule::Slice<jule::Any>({jule::Any(_77328_decl->_field_ident)}));
		return jule::new_ref<_10e975f00_Enum>();
	}
	return _77354_e;
}



inline jule::Bool _10eeb79b0_TypeChecker::_method_check_struct_ins(jule::Ref<_10e3fc8f0_StructIns> _78739_ins,_11ce22a00_Token _78756_error_token) {
	jule::Bool _78778_ok{jule::Bool()};
	if (_78739_ins->_field_checked) {
		_78778_ok = true;
		return _78778_ok;
	}
	_78739_ins->_field_checked=true;
	if ((jule::real((*this)._field_referencer) && ((*this)._field_referencer->_field_owner == _78739_ins->_field_decl))) {
		_78778_ok = true;
		return _78778_ok;
	}
	jule::Ref<_10ee5c510_SymbolTable> _80117_old_file = (*this)._field_s->_field_file;
	__JULE_DEFER({
		(*this)._field_s->_method_set_current_file(_80117_old_file);
	});
	jule::Ref<_10ee5c510_SymbolTable> _80417_f = _10e9847f0_find_file((*this)._field_s->_field_files,_78739_ins->_field_decl->_field_token._field_file);
	if (jule::real(_80417_f)) {
		(*this)._field_s->_method_set_current_file(_80417_f);
	}
	jule::Ref<_10eeb79b0_Referencer> _80917_referencer = jule::new_struct<_10eeb79b0_Referencer>(new( std::nothrow ) _10eeb79b0_Referencer(_78739_ins->_field_decl->_field_ident,_78739_ins->_field_decl,nullptr));
	jule::Slice<jule::Ref<_10eeb79b0_TypeAlias>> _81417_generics = jule::Slice<jule::Ref<_10eeb79b0_TypeAlias>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_78739_ins->_field_generics.len())));
	{
		auto &__julec_range_expr = _78739_ins->_field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10eeb79b0_i{jule::Int()};_10eeb79b0_i = 0;
			jule::Ref<_10eeb79b0_TypeKind> _10eeb79b0_g{jule::Ref<_10eeb79b0_TypeKind>()};_10eeb79b0_g = *__julec_range_begin;
			_iter_begin_5316934912:;
			{
				_81417_generics[static_cast<jule::Int>(_10eeb79b0_i)]=jule::new_struct<_10eeb79b0_TypeAlias>(new( std::nothrow ) _10eeb79b0_TypeAlias(jule::Ref<_11ce1fd50_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),_11ce22a00_Token(),_78739_ins->_field_decl->_field_generics[static_cast<jule::Int>(_10eeb79b0_i)]->_field_ident,jule::new_struct<_10eeb79b0_TypeSymbol>(new( std::nothrow ) _10eeb79b0_TypeSymbol(jule::Ref<_11ce1fd50_TypeDecl>(),_10eeb79b0_g)),jule::Str(),jule::Slice<jule::Any>()));
			}
			_iter_next_5316934912:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10eeb79b0_i; _10eeb79b0_g = *__julec_range_begin; goto _iter_begin_5316934912; }
			_iter_end_5316934912:;
		}
	}
	jule::Ref<_10ee5c510_SymbolTable> _82417_old_sema_file = _78739_ins->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_78739_ins->_field_decl->_field_sema->_method_set_current_file(_82417_old_sema_file);
	});
	_10eeb79b0_TypeChecker _82717_tc = _10eeb79b0_TypeChecker(_78739_ins->_field_decl->_field_sema,_78739_ins->_field_decl->_field_sema,_80917_referencer,_11ce22a00_Token(),jule::Slice<jule::Ref<_11ce1fd50_GenericDecl>>(),_81417_generics,jule::Bool());
	{
		auto &__julec_range_expr = _78739_ins->_field_fields;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e3fc8f0_FieldIns> _10eeb79b0_f{jule::Ref<_10e3fc8f0_FieldIns>()};_10eeb79b0_f = *__julec_range_begin;
			_iter_begin_5316946960:;
			{
				jule::Ref<_10eeb79b0_TypeKind> _83621_kind = _82717_tc._method_check_decl(_10eeb79b0_f->_field_decl->_field_kind->_field_decl);
				_78778_ok=jule::real(_83621_kind);
				if (((jule::real(_78739_ins->_field_decl->_field_sema) && ((*this)._field_s != _78739_ins->_field_decl->_field_sema)) && (static_cast<jule::I64>(_78739_ins->_field_decl->_field_sema->_field_errors.len()) > 0LL))) {
					(*this)._field_s->_field_errors=append((*this)._field_s->_field_errors,_78739_ins->_field_decl->_field_sema->_field_errors);
				}
				if ((!_78778_ok)) {
					_78778_ok = false;
					return _78778_ok;
				}
				_10eeb79b0_f->_field_kind=_83621_kind;
				if (_10eeb79b0_is_mut(_10eeb79b0_f->_field_kind)) {
					_78739_ins->_field_has_mut=true;
					(*this)._field_s->_method_check_struct_ins_derive_clone(_78739_ins);
				}
			}
			_iter_next_5316946960:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10eeb79b0_f = *__julec_range_begin; goto _iter_begin_5316946960; }
			_iter_end_5316946960:;
		}
	}
	if ((static_cast<jule::I64>(_78739_ins->_field_generics.len()) > 0LL)) {
		{
			auto &__julec_range_expr = _78739_ins->_field_methods;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_10e56a140_Fn> _10eeb79b0_m{jule::Ref<_10e56a140_Fn>()};_10eeb79b0_m = *__julec_range_begin;
				_iter_begin_5316967696:;
				{
					if ((static_cast<jule::I64>(_10eeb79b0_m->_field_generics.len()) > 0LL)) {
						goto _iter_next_5316967696;
					}
					(*this)._field_s->_method_check_type_method(_78739_ins,_10eeb79b0_m);
				}
				_iter_next_5316967696:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _10eeb79b0_m = *__julec_range_begin; goto _iter_begin_5316967696; }
				_iter_end_5316967696:;
			}
		}
	}
	_78778_ok = true;
	return _78778_ok;
}



inline void _10eeb79b0_TypeChecker::_method_append_used_struct_reference(jule::Ref<_10e3fc8f0_Struct> _86851_s) {
	if ((!jule::real((*this)._field_referencer))) {
		return;
	}
	{
		auto _match_expr{ (*this)._field_referencer->_field_owner };
		if (!(_match_expr.type_is<jule::Ref<_10e3fc8f0_Struct>>())) { goto _case_end_5316980384; }
		_case_begin_5316980384:;
		{
			jule::Ref<_10e3fc8f0_Struct> _87521_ref_s = (*this)._field_referencer->_field_owner.operator jule::Ref<_10e3fc8f0_Struct>();
			if ((!_87521_ref_s->_method_is_uses(_86851_s))) {
				_87521_ref_s->_field_uses=append(_87521_ref_s->_field_uses,jule::Slice<jule::Ref<_10e3fc8f0_Struct>>({_86851_s}));
			}
		}
		goto _match_end_5316980272;
		_case_end_5316980384:;
		_match_end_5316980272:;
	}
}



inline jule::Ref<_10e3fc8f0_StructIns> _10eeb79b0_TypeChecker::_method_from_struct(jule::Ref<_11ce1fd50_IdentTypeDecl> _88234_decl,jule::Ref<_10e3fc8f0_Struct> _88260_s) {
	if ((!(*this)._field_s->_method_is_accessible_define(_88260_s->_field_public,_88260_s->_field_token))) {
		(*this)._method_push_err(_88234_decl->_field_token,jule::Str("ident_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_88234_decl->_field_ident)}));
		return jule::new_ref<_10e3fc8f0_StructIns>();
	}
	if ((static_cast<jule::I64>((*this)._field_ignore_generics.len()) > 0LL)) {
		return jule::new_ref<_10e3fc8f0_StructIns>();
	}
	jule::Bool _89317_ok = ((*this)._field_not_plain || (*this)._method_check_illegal_cycles(_88234_decl,jule::Any(_88260_s)));
	if ((!_89317_ok)) {
		return jule::new_ref<_10e3fc8f0_StructIns>();
	}
	(*this)._method_append_used_struct_reference(_88260_s);
	jule::Ref<_10e3fc8f0_StructIns> _89917_ins = _88260_s->_method_instance();
	_89917_ins->_field_generics=jule::Slice<jule::Ref<_10eeb79b0_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_88234_decl->_field_generics.len())));
	jule::Ref<_10eeb79b0_Referencer> _90117_referencer = (*this)._field_referencer;
	jule::drop((*this)._field_referencer);
	{
		auto &__julec_range_expr = _88234_decl->_field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10eeb79b0_i{jule::Int()};_10eeb79b0_i = 0;
			jule::Ref<_11ce1fd50_TypeDecl> _10eeb79b0_g{jule::Ref<_11ce1fd50_TypeDecl>()};_10eeb79b0_g = *__julec_range_begin;
			_iter_begin_4711998576:;
			{
				jule::Ref<_10eeb79b0_TypeKind> _90421_kind = (*this)._method_build(_10eeb79b0_g->_field_kind);
				if ((!jule::real(_90421_kind))) {
					_89317_ok=false;
					goto _iter_next_4711998576;
				}
				_89917_ins->_field_generics[static_cast<jule::Int>(_10eeb79b0_i)]=_90421_kind;
			}
			_iter_next_4711998576:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10eeb79b0_i; _10eeb79b0_g = *__julec_range_begin; goto _iter_begin_4711998576; }
			_iter_end_4711998576:;
		}
	}
	(*this)._field_referencer=_90117_referencer;
	if ((!_89317_ok)) {
		return jule::new_ref<_10e3fc8f0_StructIns>();
	}
	_89317_ok=(*this)._field_s->_method_check_generic_quantity(static_cast<jule::I64>(_89917_ins->_field_decl->_field_generics.len()),static_cast<jule::I64>(_89917_ins->_field_generics.len()),_88234_decl->_field_token);
	if ((!_89317_ok)) {
		return jule::new_ref<_10e3fc8f0_StructIns>();
	}
	jule::Ref<_10e3fc8f0_StructIns> _92317_exist_instance = _88260_s->_method_append_instance(_89917_ins);
	if (jule::real(_92317_exist_instance)) {
		return _92317_exist_instance;
	}
	_89317_ok=(*this)._method_check_struct_ins(_89917_ins,_88234_decl->_field_token);
	if ((!_89317_ok)) {
		return jule::new_ref<_10e3fc8f0_StructIns>();
	}
	return _89917_ins;
}



inline jule::Trait<_10eeb79b0_Kind> _10eeb79b0_TypeChecker::_method_get_def(jule::Ref<_11ce1fd50_IdentTypeDecl> _93830_decl) {
	{
		auto &__julec_range_expr = (*this)._field_ignore_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11ce1fd50_GenericDecl> _10eeb79b0_g{jule::Ref<_11ce1fd50_GenericDecl>()};_10eeb79b0_g = *__julec_range_begin;
			_iter_begin_4703385952:;
			{
				if ((_10eeb79b0_g->_field_ident == _93830_decl->_field_ident)) {
					return _10eeb79b0_build_prim_type(_10eeb79b0_g->_field_ident);
				}
			}
			_iter_next_4703385952:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10eeb79b0_g = *__julec_range_begin; goto _iter_begin_4703385952; }
			_iter_end_4703385952:;
		}
	}
	{
		auto &__julec_range_expr = (*this)._field_use_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10eeb79b0_TypeAlias> _10eeb79b0_g{jule::Ref<_10eeb79b0_TypeAlias>()};_10eeb79b0_g = *__julec_range_begin;
			_iter_begin_4706663504:;
			{
				if ((_10eeb79b0_g->_field_ident == _93830_decl->_field_ident)) {
					jule::Ref<_10e3fc8f0_StructIns> _94725_st = _10eeb79b0_g->_field_kind->_field_kind->_method_strct();
					if (jule::real(_94725_st)) {
						jule::Bool _94925_ok = (*this)._method_check_illegal_cycles(_93830_decl,jule::Any(_94725_st->_field_decl));
						if ((!_94925_ok)) {
							return nullptr;
						}
					}
					return _10eeb79b0_g->_field_kind->_field_kind->_field_kind;
				}
			}
			_iter_next_4706663504:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10eeb79b0_g = *__julec_range_begin; goto _iter_begin_4706663504; }
			_iter_end_4706663504:;
		}
	}
	if ((!_93830_decl->_field_cpp_linked)) {
		jule::Ref<_10e975f00_Enum> _95921_e = (*this)._field_lookup.get()._method_find_enum(_93830_decl->_field_ident);
		if (jule::real(_95921_e)) {
			return (*this)._method_from_enum(_93830_decl,_95921_e);
		}
		jule::Ref<_10e3d6eb0_Trait> _96421_t = (*this)._field_lookup.get()._method_find_trait(_93830_decl->_field_ident);
		if ((!jule::real(_96421_t))) {
			_96421_t=_10f3f9210_find_builtin_trait(_93830_decl->_field_ident);
		}
		if (jule::real(_96421_t)) {
			if ((!(*this)._field_s->_method_is_accessible_define(_96421_t->_field_public,_96421_t->_field_token))) {
				(*this)._method_push_err(_93830_decl->_field_token,jule::Str("ident_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_93830_decl->_field_ident)}));
				return nullptr;
			}
			if ((static_cast<jule::I64>(_93830_decl->_field_generics.len()) > 0LL)) {
				(*this)._method_push_err(_93830_decl->_field_token,jule::Str("type_not_supports_generics", 26),jule::Slice<jule::Any>({jule::Any(_93830_decl->_field_ident)}));
				return nullptr;
			}
			return _96421_t;
		}
	}
	jule::Ref<_10e3fc8f0_Struct> _98217_s = (*this)._field_lookup.get()._method_find_struct(_93830_decl->_field_ident,_93830_decl->_field_cpp_linked);
	if (jule::real(_98217_s)) {
		return (*this)._method_from_struct(_93830_decl,_98217_s);
	}
	jule::Ref<_10eeb79b0_TypeAlias> _98717_ta = (*this)._field_lookup.get()._method_find_type_alias(_93830_decl->_field_ident,_93830_decl->_field_cpp_linked);
	if ((!jule::real(_98717_ta))) {
		_98717_ta=_10f3f9210_find_builtin_type_alias(_93830_decl->_field_ident);
	}
	if (jule::real(_98717_ta)) {
		return (*this)._method_from_type_alias(_93830_decl,_98717_ta);
	}
	(*this)._method_push_err(_93830_decl->_field_token,jule::Str("ident_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_93830_decl->_field_ident)}));
	return nullptr;
}



inline jule::Trait<_10eeb79b0_Kind> _10eeb79b0_TypeChecker::_method_build_ident(jule::Ref<_11ce1fd50_IdentTypeDecl> _99934_decl) {
	{
		auto _match_expr{ true };
		if (!(_10eeb79b0_is_prim(_99934_decl->_field_ident) == _match_expr)) { goto _case_end_4712502800; }
		_case_begin_4712502800:;
		{
			return (*this)._method_build_prim(_99934_decl);
		}
		goto _match_end_4712500768;
		_case_end_4712502800:;
		_case_begin_4712501040:;
		{
			return (*this)._method_get_def(_99934_decl);
		}
		goto _match_end_4712500768;
		_case_end_4712501040:;
		_match_end_4712500768:;
	}
}



inline jule::Ref<_10eeb79b0_Ref> _10eeb79b0_TypeChecker::_method_build_ref_from_type(jule::Ref<_10eeb79b0_TypeKind> _100642_elem) {
	{
		auto _match_expr{ true };
		if (!((!jule::real(_100642_elem)) == _match_expr)) { goto _case_end_4712507360; }
		_case_begin_4712507360:;
		{
			return jule::new_ref<_10eeb79b0_Ref>();
		}
		goto _match_end_4712504960;
		_case_end_4712507360:;
		if (!(jule::real(_100642_elem->_method_strct()) == _match_expr)) { goto _case_end_4712507472; }
		_case_begin_4712507472:;
		{
			jule::Ref<_10e3fc8f0_StructIns> _101317_s = _100642_elem->_method_strct();
			if ((jule::real(_101317_s->_field_decl) && _101317_s->_field_decl->_field_cpp_linked)) {
				(*this)._method_push_err((*this)._field_error_token,jule::Str("cpp_linked_struct_for_ref", 25),jule::Slice<jule::Any>({}));
				return jule::new_ref<_10eeb79b0_Ref>();
			}
		}
		goto _match_end_4712504960;
		_case_end_4712507472:;
		if (!(jule::real(_100642_elem->_method_ref()) == _match_expr)) { goto _case_end_4712507584; }
		_case_begin_4712507584:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("ref_refs_ref", 12),jule::Slice<jule::Any>({}));
			return jule::new_ref<_10eeb79b0_Ref>();
		}
		goto _match_end_4712504960;
		_case_end_4712507584:;
		if (!(jule::real(_100642_elem->_method_ptr()) == _match_expr)) { goto _case_end_4712507696; }
		_case_begin_4712507696:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("ref_refs_ptr", 12),jule::Slice<jule::Any>({}));
			return jule::new_ref<_10eeb79b0_Ref>();
		}
		goto _match_end_4712504960;
		_case_end_4712507696:;
		if (!(jule::real(_100642_elem->_method_enm()) == _match_expr)) { goto _case_end_4712507808; }
		_case_begin_4712507808:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("ref_refs_enum", 13),jule::Slice<jule::Any>({}));
			return jule::new_ref<_10eeb79b0_Ref>();
		}
		goto _match_end_4712504960;
		_case_end_4712507808:;
		if (!(jule::real(_100642_elem->_method_arr()) == _match_expr)) { goto _case_end_4712507920; }
		_case_begin_4712507920:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("ref_refs_array", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_10eeb79b0_Ref>();
		}
		goto _match_end_4712504960;
		_case_end_4712507920:;
		_match_end_4712504960:;
	}
	return jule::new_struct<_10eeb79b0_Ref>(new( std::nothrow ) _10eeb79b0_Ref(_100642_elem));
}



inline jule::Ref<_10eeb79b0_Ref> _10eeb79b0_TypeChecker::_method_build_ref(jule::Ref<_11ce1fd50_RefTypeDecl> _104132_decl) {
	jule::Bool _104213_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_104213_not_plain;
	});
	jule::Ref<_10eeb79b0_TypeKind> _104617_elem = (*this)._method_check_decl(_104132_decl->_field_elem);
	return (*this)._method_build_ref_from_type(_104617_elem);
}



inline jule::Ref<_10eeb79b0_Ptr> _10eeb79b0_TypeChecker::_method_build_ptr_from_type(jule::Ref<_10eeb79b0_TypeKind> _105042_elem) {
	{
		auto _match_expr{ true };
		if (!((!jule::real(_105042_elem)) == _match_expr)) { goto _case_end_4712542848; }
		_case_begin_4712542848:;
		{
			return jule::new_ref<_10eeb79b0_Ptr>();
		}
		goto _match_end_4712542496;
		_case_end_4712542848:;
		if (!(jule::real(_105042_elem->_method_ref()) == _match_expr)) { goto _case_end_4712542960; }
		_case_begin_4712542960:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("ptr_points_ref", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_10eeb79b0_Ptr>();
		}
		goto _match_end_4712542496;
		_case_end_4712542960:;
		if (!(jule::real(_105042_elem->_method_enm()) == _match_expr)) { goto _case_end_4712543072; }
		_case_begin_4712543072:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("ptr_points_enum", 15),jule::Slice<jule::Any>({}));
			return jule::new_ref<_10eeb79b0_Ptr>();
		}
		goto _match_end_4712542496;
		_case_end_4712543072:;
		if (!((jule::real(_105042_elem->_method_arr()) && _105042_elem->_method_arr()->_field_auto) == _match_expr)) { goto _case_end_4712543200; }
		_case_begin_4712543200:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("array_auto_sized", 16),jule::Slice<jule::Any>({}));
			return jule::new_ref<_10eeb79b0_Ptr>();
		}
		goto _match_end_4712542496;
		_case_end_4712543200:;
		_match_end_4712542496:;
	}
	return jule::new_struct<_10eeb79b0_Ptr>(new( std::nothrow ) _10eeb79b0_Ptr(_105042_elem));
}



inline jule::Ref<_10eeb79b0_Ptr> _10eeb79b0_TypeChecker::_method_build_ptr(jule::Ref<_11ce1fd50_PtrTypeDecl> _107432_decl) {
	jule::Bool _107513_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_107513_not_plain;
	});
	jule::Ref<_10eeb79b0_TypeKind> _107917_elem = jule::new_ref<_10eeb79b0_TypeKind>();
	if ((!_107432_decl->_method_is_unsafe())) {
		_107917_elem=(*this)._method_check_decl(_107432_decl->_field_elem);
		return (*this)._method_build_ptr_from_type(_107917_elem);
	}
	return jule::new_struct<_10eeb79b0_Ptr>(new( std::nothrow ) _10eeb79b0_Ptr(_107917_elem));
}



inline jule::Ref<_10eeb79b0_Slc> _10eeb79b0_TypeChecker::_method_build_slc(jule::Ref<_11ce1fd50_SlcTypeDecl> _109132_decl) {
	jule::Bool _109213_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_109213_not_plain;
	});
	jule::Ref<_10eeb79b0_TypeKind> _109617_elem = (*this)._method_check_decl(_109132_decl->_field_elem);
	{
		auto _match_expr{ true };
		if (!((!jule::real(_109617_elem)) == _match_expr)) { goto _case_end_4712574864; }
		_case_begin_4712574864:;
		{
			return jule::new_ref<_10eeb79b0_Slc>();
		}
		goto _match_end_4712574752;
		_case_end_4712574864:;
		if (!((jule::real(_109617_elem->_method_arr()) && _109617_elem->_method_arr()->_field_auto) == _match_expr)) { goto _case_end_4712575264; }
		_case_begin_4712575264:;
		{
			(*this)._method_push_err(_109132_decl->_field_elem->_field_token,jule::Str("array_auto_sized", 16),jule::Slice<jule::Any>({}));
			return jule::new_ref<_10eeb79b0_Slc>();
		}
		goto _match_end_4712574752;
		_case_end_4712575264:;
		_match_end_4712574752:;
	}
	return jule::new_struct<_10eeb79b0_Slc>(new( std::nothrow ) _10eeb79b0_Slc(_109617_elem));
}



inline jule::Ref<_10eeb79b0_Arr> _10eeb79b0_TypeChecker::_method_build_arr(jule::Ref<_11ce1fd50_ArrTypeDecl> _111332_decl) {
	jule::Bool _111413_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_111413_not_plain;
	});
	jule::Int _111817_n = 0LL;
	if ((!_111332_decl->_method_auto_sized())) {
		jule::Ref<_10ee8a260_Data> _112121_size = (*this)._field_s->_method_eval(_111332_decl->_field_size,(*this)._field_lookup);
		if ((!jule::real(_112121_size))) {
			return jule::new_ref<_10eeb79b0_Arr>();
		}
		if ((!_112121_size->_method_is_const())) {
			(*this)._method_push_err(_111332_decl->_field_elem->_field_token,jule::Str("expr_not_const", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_10eeb79b0_Arr>();
		} else if ((!_10f5ea650_is_int(_112121_size->_field_kind->_method_prim()->_field_kind))) {
			(*this)._method_push_err(_111332_decl->_field_elem->_field_token,jule::Str("array_size_is_not_int", 21),jule::Slice<jule::Any>({}));
			return jule::new_ref<_10eeb79b0_Arr>();
		}
		_111817_n=static_cast<jule::Int>(static_cast<jule::I64>(_112121_size->_field_constant->_method_as_i64()));
		if ((_111817_n < 0LL)) {
			(*this)._method_push_err(_111332_decl->_field_elem->_field_token,jule::Str("array_size_is_negative", 22),jule::Slice<jule::Any>({}));
			return jule::new_ref<_10eeb79b0_Arr>();
		}
	}
	jule::Ref<_10eeb79b0_TypeKind> _114117_elem = (*this)._method_check_decl(_111332_decl->_field_elem);
	{
		auto _match_expr{ true };
		if (!((!jule::real(_114117_elem)) == _match_expr)) { goto _case_end_4712611008; }
		_case_begin_4712611008:;
		{
			return jule::new_ref<_10eeb79b0_Arr>();
		}
		goto _match_end_4712610752;
		_case_end_4712611008:;
		if (!((jule::real(_114117_elem->_method_arr()) && _114117_elem->_method_arr()->_field_auto) == _match_expr)) { goto _case_end_4712611120; }
		_case_begin_4712611120:;
		{
			(*this)._method_push_err(_111332_decl->_field_elem->_field_token,jule::Str("array_auto_sized", 16),jule::Slice<jule::Any>({}));
			return jule::new_ref<_10eeb79b0_Arr>();
		}
		goto _match_end_4712610752;
		_case_end_4712611120:;
		_match_end_4712610752:;
	}
	return jule::new_struct<_10eeb79b0_Arr>(new( std::nothrow ) _10eeb79b0_Arr(_111332_decl->_method_auto_sized(),_111817_n,_114117_elem));
}



inline jule::Ref<_10eeb79b0_Map> _10eeb79b0_TypeChecker::_method_build_map(jule::Ref<_11ce1fd50_MapTypeDecl> _116032_decl) {
	jule::Bool _116113_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_116113_not_plain;
	});
	jule::Ref<_10eeb79b0_TypeKind> _116517_key = (*this)._method_check_decl(_116032_decl->_field_key);
	if ((!jule::real(_116517_key))) {
		return jule::new_ref<_10eeb79b0_Map>();
	}
	jule::Ref<_10eeb79b0_TypeKind> _117017_val = (*this)._method_check_decl(_116032_decl->_field_val);
	if ((!jule::real(_117017_val))) {
		return jule::new_ref<_10eeb79b0_Map>();
	}
	if (jule::real(_117017_val->_method_enm())) {
		(*this)._method_push_err(_116032_decl->_field_val->_field_token,jule::Str("enum_as_map_val", 15),jule::Slice<jule::Any>({}));
	}
	return jule::new_struct<_10eeb79b0_Map>(new( std::nothrow ) _10eeb79b0_Map(_116517_key,_117017_val));
}



inline jule::Ref<_10eeb79b0_Tuple> _10eeb79b0_TypeChecker::_method_build_tuple(jule::Ref<_11ce1fd50_TupleTypeDecl> _118434_decl) {
	jule::Slice<jule::Ref<_10eeb79b0_TypeKind>> _118517_types = jule::Slice<jule::Ref<_10eeb79b0_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_118434_decl->_field_types.len())));
	{
		auto &__julec_range_expr = _118434_decl->_field_types;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10eeb79b0_i{jule::Int()};_10eeb79b0_i = 0;
			jule::Ref<_11ce1fd50_TypeDecl> _10eeb79b0_t{jule::Ref<_11ce1fd50_TypeDecl>()};_10eeb79b0_t = *__julec_range_begin;
			_iter_begin_4712638816:;
			{
				jule::Ref<_10eeb79b0_TypeKind> _118721_kind = (*this)._method_check_decl(_10eeb79b0_t);
				if ((!jule::real(_118721_kind))) {
					return jule::new_ref<_10eeb79b0_Tuple>();
				}
				_118517_types[static_cast<jule::Int>(_10eeb79b0_i)]=_118721_kind;
			}
			_iter_next_4712638816:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10eeb79b0_i; _10eeb79b0_t = *__julec_range_begin; goto _iter_begin_4712638816; }
			_iter_end_4712638816:;
		}
	}
	return jule::new_struct<_10eeb79b0_Tuple>(new( std::nothrow ) _10eeb79b0_Tuple(_118517_types));
}



inline jule::Bool _10eeb79b0_TypeChecker::_method_check_fn_types(jule::Ref<_10e56a140_FnIns> _119737_f) {
	jule::Bool _119750_ok{jule::Bool()};
	{
		auto &__julec_range_expr = _119737_f->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e56a140_ParamIns> _10eeb79b0_p{jule::Ref<_10e56a140_ParamIns>()};_10eeb79b0_p = *__julec_range_begin;
			_iter_begin_4712648992:;
			{
				_10eeb79b0_p->_field_kind=(*this)._method_build(_10eeb79b0_p->_field_decl->_field_kind->_field_decl->_field_kind);
				_119750_ok=jule::real(_10eeb79b0_p->_field_kind);
				if ((!_119750_ok)) {
					_119750_ok = false;
					return _119750_ok;
				}
			}
			_iter_next_4712648992:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10eeb79b0_p = *__julec_range_begin; goto _iter_begin_4712648992; }
			_iter_end_4712648992:;
		}
	}
	if ((!_119737_f->_field_decl->_method_is_void())) {
		_119737_f->_field_result=(*this)._method_build(_119737_f->_field_decl->_field_result->_field_kind->_field_decl->_field_kind);
		_119750_ok = jule::real(_119737_f->_field_result);
		return _119750_ok;
	}
	_119750_ok = true;
	return _119750_ok;
}



inline jule::Ref<_10e56a140_FnIns> _10eeb79b0_TypeChecker::_method_build_fn(jule::Ref<_11ce1fd50_FnDecl> _121431_decl) {
	if ((static_cast<jule::I64>(_121431_decl->_field_generics.len()) > 0LL)) {
		(*this)._method_push_err(_121431_decl->_field_token,jule::Str("genericed_fn_as_anonymous_fn", 28),jule::Slice<jule::Any>({}));
		return jule::new_ref<_10e56a140_FnIns>();
	}
	jule::Ref<_10e56a140_Fn> _122017_f = _10e8ca650_build_fn(_121431_decl);
	jule::Ref<_10e56a140_FnIns> _122117_ins = _122017_f->_method_instance_force();
	_122117_ins->_field_anon=true;
	jule::Bool _122413_ok = (*this)._method_check_fn_types(_122117_ins);
	if ((!_122413_ok)) {
		return jule::new_ref<_10e56a140_FnIns>();
	}
	return _122117_ins;
}



inline jule::Trait<_10eeb79b0_Kind> _10eeb79b0_TypeChecker::_method_build_by_std_namespace(jule::Ref<_11ce1fd50_NamespaceTypeDecl> _123245_decl) {
	jule::Str _123313_path = _10eeb79b0_build_link_path_by_tokens(_123245_decl->_field_idents);
	jule::Ref<_10e9b6a10_ImportInfo> _123417_imp = (*this)._field_lookup.get()._method_select_package(jule::Fn<jule::Bool(jule::Ref<_10e9b6a10_ImportInfo>)>([&](jule::Ref<_10e9b6a10_ImportInfo> _123453_imp) mutable -> jule::Bool {
		return (_123453_imp->_field_std && (_123453_imp->_field_link_path == _123313_path));
	}));
	if (((!jule::real(_123417_imp)) || (!_123417_imp->_method_is_lookupable(jule::Str("self", 4))))) {
		(*this)._method_push_err(_123245_decl->_field_idents[static_cast<jule::Int>(0LL)],jule::Str("namespace_not_exist", 19),jule::Slice<jule::Any>({jule::Any(_123313_path)}));
		return nullptr;
	}
	jule::Trait<_10f3df410_Lookup> _124317_lookup = (*this)._field_lookup;
	(*this)._field_lookup=_123417_imp;
	jule::Trait<_10eeb79b0_Kind> _124617_kind = (*this)._method_build_ident(_123245_decl->_field_kind);
	(*this)._field_lookup=_124317_lookup;
	return _124617_kind;
}



inline jule::Trait<_10eeb79b0_Kind> _10eeb79b0_TypeChecker::_method_build_by_namespace(jule::Ref<_11ce1fd50_NamespaceTypeDecl> _125341_decl) {
	_11ce22a00_Token _125413_token = _125341_decl->_field_idents[static_cast<jule::Int>(0LL)];
	if ((_125413_token._field_kind == jule::Str("std", 3))) {
		return (*this)._method_build_by_std_namespace(_125341_decl);
	}
	(*this)._method_push_err(_125413_token,jule::Str("ident_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_125413_token._field_kind)}));
	return nullptr;
}



inline jule::Ref<_10eeb79b0_TypeKind> _10eeb79b0_TypeChecker::_method_build(jule::Any _126328_decl_kind) {
	jule::Trait<_10eeb79b0_Kind> _126417_kind = nullptr;
	{
		auto _match_expr{ _126328_decl_kind };
		if (!(_match_expr.type_is<jule::Ref<_10eeb79b0_TypeKind>>())) { goto _case_end_4712712000; }
		_case_begin_4712712000:;
		{
			_126417_kind=_126328_decl_kind.operator jule::Ref<_10eeb79b0_TypeKind>();
		}
		goto _match_end_4712707696;
		_case_end_4712712000:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_IdentTypeDecl>>())) { goto _case_end_4712711392; }
		_case_begin_4712711392:;
		{
			jule::Trait<_10eeb79b0_Kind> _127121_t = (*this)._method_build_ident(_126328_decl_kind.operator jule::Ref<_11ce1fd50_IdentTypeDecl>());
			if ((_127121_t != nullptr)) {
				_126417_kind=_127121_t;
			}
		}
		goto _match_end_4712707696;
		_case_end_4712711392:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_RefTypeDecl>>())) { goto _case_end_4712711504; }
		_case_begin_4712711504:;
		{
			jule::Ref<_10eeb79b0_Ref> _127721_t = (*this)._method_build_ref(_126328_decl_kind.operator jule::Ref<_11ce1fd50_RefTypeDecl>());
			if (jule::real(_127721_t)) {
				_126417_kind=_127721_t;
			}
		}
		goto _match_end_4712707696;
		_case_end_4712711504:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_PtrTypeDecl>>())) { goto _case_end_4712712176; }
		_case_begin_4712712176:;
		{
			jule::Ref<_10eeb79b0_Ptr> _128321_t = (*this)._method_build_ptr(_126328_decl_kind.operator jule::Ref<_11ce1fd50_PtrTypeDecl>());
			if (jule::real(_128321_t)) {
				_126417_kind=_128321_t;
			}
		}
		goto _match_end_4712707696;
		_case_end_4712712176:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_SlcTypeDecl>>())) { goto _case_end_4712712288; }
		_case_begin_4712712288:;
		{
			jule::Ref<_10eeb79b0_Slc> _128921_t = (*this)._method_build_slc(_126328_decl_kind.operator jule::Ref<_11ce1fd50_SlcTypeDecl>());
			if (jule::real(_128921_t)) {
				_126417_kind=_128921_t;
			}
		}
		goto _match_end_4712707696;
		_case_end_4712712288:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_ArrTypeDecl>>())) { goto _case_end_4712712400; }
		_case_begin_4712712400:;
		{
			jule::Ref<_10eeb79b0_Arr> _129521_t = (*this)._method_build_arr(_126328_decl_kind.operator jule::Ref<_11ce1fd50_ArrTypeDecl>());
			if (jule::real(_129521_t)) {
				_126417_kind=_129521_t;
			}
		}
		goto _match_end_4712707696;
		_case_end_4712712400:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_MapTypeDecl>>())) { goto _case_end_4712708384; }
		_case_begin_4712708384:;
		{
			jule::Ref<_10eeb79b0_Map> _130121_t = (*this)._method_build_map(_126328_decl_kind.operator jule::Ref<_11ce1fd50_MapTypeDecl>());
			if (jule::real(_130121_t)) {
				_126417_kind=_130121_t;
			}
		}
		goto _match_end_4712707696;
		_case_end_4712708384:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_TupleTypeDecl>>())) { goto _case_end_4712708496; }
		_case_begin_4712708496:;
		{
			jule::Ref<_10eeb79b0_Tuple> _130721_t = (*this)._method_build_tuple(_126328_decl_kind.operator jule::Ref<_11ce1fd50_TupleTypeDecl>());
			if (jule::real(_130721_t)) {
				_126417_kind=_130721_t;
			}
		}
		goto _match_end_4712707696;
		_case_end_4712708496:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_FnDecl>>())) { goto _case_end_4712708608; }
		_case_begin_4712708608:;
		{
			jule::Ref<_10e56a140_FnIns> _131321_t = (*this)._method_build_fn(_126328_decl_kind.operator jule::Ref<_11ce1fd50_FnDecl>());
			if (jule::real(_131321_t)) {
				_126417_kind=_131321_t;
			}
		}
		goto _match_end_4712707696;
		_case_end_4712708608:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_NamespaceTypeDecl>>())) { goto _case_end_4712708720; }
		_case_begin_4712708720:;
		{
			jule::Trait<_10eeb79b0_Kind> _131921_t = (*this)._method_build_by_namespace(_126328_decl_kind.operator jule::Ref<_11ce1fd50_NamespaceTypeDecl>());
			if ((_131921_t != nullptr)) {
				_126417_kind=_131921_t;
			}
		}
		goto _match_end_4712707696;
		_case_end_4712708720:;
		_case_begin_4712707488:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("invalid_type", 12),jule::Slice<jule::Any>({}));
			return jule::new_ref<_10eeb79b0_TypeKind>();
		}
		goto _match_end_4712707696;
		_case_end_4712707488:;
		_match_end_4712707696:;
	}
	if ((_126417_kind == nullptr)) {
		return jule::new_ref<_10eeb79b0_TypeKind>();
	}
	{
		auto _match_expr{ _126417_kind };
		if (!(_match_expr.type_is<jule::Ref<_10eeb79b0_TypeKind>>())) { goto _case_end_4712749424; }
		_case_begin_4712749424:;
		{
			return _126417_kind.operator jule::Ref<_10eeb79b0_TypeKind>();
		}
		goto _match_end_4712750144;
		_case_end_4712749424:;
		_case_begin_4712748384:;
		{
			return jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_126417_kind));
		}
		goto _match_end_4712750144;
		_case_end_4712748384:;
		_match_end_4712750144:;
	}
}



inline jule::Ref<_10eeb79b0_TypeKind> _10eeb79b0_TypeChecker::_method_check_decl(jule::Ref<_11ce1fd50_TypeDecl> _134433_decl) {
	_11ce22a00_Token _134617_error_token = (*this)._field_error_token;
	(*this)._field_error_token=_134433_decl->_field_token;
	jule::Ref<_10eeb79b0_TypeKind> _134917_kind = (*this)._method_build(_134433_decl->_field_kind);
	(*this)._field_error_token=_134617_error_token;
	return _134917_kind;
}



inline void _10eeb79b0_TypeChecker::_method_check(jule::Ref<_10eeb79b0_TypeSymbol> _135528_t) {
	if ((!jule::real(_135528_t->_field_decl))) {
		return;
	}
	jule::Ref<_10eeb79b0_TypeKind> _136017_kind = (*this)._method_check_decl(_135528_t->_field_decl);
	if ((!jule::real(_136017_kind))) {
		_135528_t->_method_remove_kind();
		return;
	}
	_135528_t->_field_kind=_136017_kind;
}







std::ostream &operator<<(std::ostream &_Stream, const _10eeb79b0_TypeChecker &_Src) {
	_Stream << "TypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_generics:" << _Src._field_ignore_generics << ", ";
	_Stream << "use_generics:" << _Src._field_use_generics << ", ";
	_Stream << "not_plain:" << _Src._field_not_plain;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10eeb79b0_TypeAlias &_Src) {
	_Stream << "TypeAlias{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "refers:" << _Src._field_refers;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _10ee8a260_BinopSolver::_method_check_type_compatibility(void) {
	_10eb9c740_TypeCompatibilityChecker _317517_tcc = _10eb9c740_TypeCompatibilityChecker((*this)._field_e->_field_s,(*this)._field_l->_field_kind,(*this)._field_r->_field_kind,(*this)._field_op,true,jule::Bool());
	return _317517_tcc._method_check();
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_BinopSolver::_method_eval_nil(void) {
	if ((!_10eeb79b0_is_nil_compatible((*this)._field_r->_field_kind))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any(jule::Str("nil", 3)),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!(jule::Str("==", 2) == _match_expr || jule::Str("!=", 2) == _match_expr)) { goto _case_end_4714530336; }
		_case_begin_4714530336:;
		{
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
		}
		goto _match_end_4714529392;
		_case_end_4714530336:;
		_case_begin_4714529552:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("nil", 3))}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4714529392;
		_case_end_4714529552:;
		_match_end_4714529392:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_BinopSolver::_method_eval_enum(void) {
	jule::Ref<_10e975f00_Enum> _320717_enm = (*this)._field_l->_field_kind->_method_enm();
	if (((!jule::real((*this)._field_r->_field_kind->_method_enm())) || ((_320717_enm).alloc != ((*this)._field_r->_field_kind->_method_enm()).alloc))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any(_320717_enm->_field_ident),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!(jule::Str("==", 2) == _match_expr || jule::Str("!=", 2) == _match_expr)) { goto _case_end_4714550224; }
		_case_begin_4714550224:;
		{
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
		}
		goto _match_end_4714548448;
		_case_end_4714550224:;
		if (!(jule::Str("&", 1) == _match_expr || jule::Str("|", 1) == _match_expr)) { goto _case_end_4714554128; }
		_case_begin_4714554128:;
		{
			if (((!jule::real(_320717_enm->_field_kind->_field_kind->_method_prim())) || (!_10f5ea650_is_int(_320717_enm->_field_kind->_field_kind->_method_prim()->_method_to_str())))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_320717_enm->_field_ident)}));
			}
			return (*this)._field_l;
		}
		goto _match_end_4714548448;
		_case_end_4714554128:;
		_case_begin_4714549024:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_320717_enm->_field_ident)}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4714548448;
		_case_end_4714549024:;
		_match_end_4714548448:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_BinopSolver::_method_eval_ptr(void) {
	if ((!(*this)._method_check_type_compatibility())) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!(jule::Str("==", 2) == _match_expr || jule::Str("!=", 2) == _match_expr || jule::Str("<", 1) == _match_expr || jule::Str(">", 1) == _match_expr || jule::Str("<=", 2) == _match_expr || jule::Str(">=", 2) == _match_expr)) { goto _case_end_4714575312; }
		_case_begin_4714575312:;
		{
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
		}
		goto _match_end_4714573792;
		_case_end_4714575312:;
		_case_begin_4714573904:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4714573792;
		_case_end_4714573904:;
		_match_end_4714573792:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_BinopSolver::_method_eval_arr(void) {
	if ((!(*this)._method_check_type_compatibility())) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!(jule::Str("==", 2) == _match_expr || jule::Str("!=", 2) == _match_expr)) { goto _case_end_4713651808; }
		_case_begin_4713651808:;
		{
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
		}
		goto _match_end_4713898000;
		_case_end_4713651808:;
		_case_begin_4714039520:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4713898000;
		_case_end_4714039520:;
		_match_end_4713898000:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_BinopSolver::_method_eval_slc(void) {
	if ((!(*this)._method_check_type_compatibility())) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!(jule::Str("==", 2) == _match_expr || jule::Str("!=", 2) == _match_expr)) { goto _case_end_4714074480; }
		_case_begin_4714074480:;
		{
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
		}
		goto _match_end_4714073552;
		_case_end_4714074480:;
		_case_begin_4714073664:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4714073552;
		_case_end_4714073664:;
		_match_end_4714073552:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_BinopSolver::_method_eval_fn(void) {
	if ((!(*this)._method_check_type_compatibility())) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!(jule::Str("==", 2) == _match_expr || jule::Str("!=", 2) == _match_expr)) { goto _case_end_4714096640; }
		_case_begin_4714096640:;
		{
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
		}
		goto _match_end_4714089920;
		_case_end_4714096640:;
		_case_begin_4714090144:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4714089920;
		_case_end_4714090144:;
		_match_end_4714089920:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_BinopSolver::_method_eval_struct(void) {
	if ((!(*this)._method_check_type_compatibility())) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!(jule::Str("==", 2) == _match_expr || jule::Str("!=", 2) == _match_expr)) { goto _case_end_4714108624; }
		_case_begin_4714108624:;
		{
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
		}
		goto _match_end_4714107664;
		_case_end_4714108624:;
		_case_begin_4714107840:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4714107664;
		_case_end_4714107840:;
		_match_end_4714107664:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_BinopSolver::_method_eval_trait(void) {
	if ((!(*this)._method_check_type_compatibility())) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!(jule::Str("==", 2) == _match_expr || jule::Str("!=", 2) == _match_expr)) { goto _case_end_4714124944; }
		_case_begin_4714124944:;
		{
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
		}
		goto _match_end_4714124000;
		_case_end_4714124944:;
		_case_begin_4714124160:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4714124000;
		_case_end_4714124160:;
		_match_end_4714124000:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_BinopSolver::_method_eval_any(void) {
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!(jule::Str("==", 2) == _match_expr || jule::Str("!=", 2) == _match_expr)) { goto _case_end_4714139504; }
		_case_begin_4714139504:;
		{
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
		}
		goto _match_end_4714133792;
		_case_end_4714139504:;
		_case_begin_4714133440:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("any", 3))}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4714133792;
		_case_end_4714133440:;
		_match_end_4714133792:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_BinopSolver::_method_eval_bool(void) {
	if ((!(*this)._method_check_type_compatibility())) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!(jule::Str("==", 2) == _match_expr || jule::Str("!=", 2) == _match_expr || jule::Str("&&", 2) == _match_expr || jule::Str("||", 2) == _match_expr)) { goto _case_end_4714155520; }
		_case_begin_4714155520:;
		{
			return (*this)._field_l;
		}
		goto _match_end_4714149376;
		_case_end_4714155520:;
		_case_begin_4714149488:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4714149376;
		_case_end_4714149488:;
		_match_end_4714149376:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_BinopSolver::_method_eval_str(void) {
	jule::Str _340117_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((_340117_rk != jule::Str("str", 3))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any(_340117_rk)}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!(jule::Str("+", 1) == _match_expr)) { goto _case_end_4714170864; }
		_case_begin_4714170864:;
		{
			return (*this)._field_l;
		}
		goto _match_end_4714165712;
		_case_end_4714170864:;
		if (!(jule::Str("==", 2) == _match_expr || jule::Str("!=", 2) == _match_expr)) { goto _case_end_4714170976; }
		_case_begin_4714170976:;
		{
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
		}
		goto _match_end_4714165712;
		_case_end_4714170976:;
		_case_begin_4714165824:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("any", 3))}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4714165712;
		_case_end_4714165824:;
		_match_end_4714165712:;
	}
}



inline void _10ee8a260_BinopSolver::_method_set_type_to_greater(void) {
	if ((((*this)._field_l->_method_is_const() && (*this)._field_r->_method_is_const()) || ((!(*this)._field_l->_method_is_const()) && (!(*this)._field_r->_method_is_const())))) {
		jule::Str _342717_lk = (*this)._field_l->_field_kind->_method_to_str();
		jule::Str _342817_rk = (*this)._field_r->_field_kind->_method_to_str();
		if (_10f51ba00_is_greater(_342817_rk,_342717_lk)) {
			(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
		}
		return;
	}
	if ((*this)._field_l->_method_is_const()) {
		(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
		return;
	}
	(*this)._field_r->_field_kind=(*this)._field_l->_field_kind;
}



inline void _10ee8a260_BinopSolver::_method_mod(void) {
	jule::Fn<void(jule::Ref<_10ee8a260_Data>)> _344413_check = jule::Fn<void(jule::Ref<_10ee8a260_Data>)>([&](jule::Ref<_10ee8a260_Data> _344428_d) mutable -> void {
		if ((!_344428_d->_method_is_const())) {
			if (((!jule::real(_344428_d->_field_kind->_method_prim())) || (!_10f5ea650_is_int(_344428_d->_field_kind->_method_prim()->_field_kind)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("modulo_with_not_int", 19),jule::Slice<jule::Any>({}));
			}
			return;
		}
		{
			auto _match_expr{ true };
			if (!(_10eb9c740_sig_assignable(jule::Str("i64", 3),_344428_d) == _match_expr)) { goto _case_end_4714204864; }
			_case_begin_4714204864:;
			{
				_344428_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_344428_d->_field_constant->_method_as_i64()));
			}
			goto _match_end_4714195776;
			_case_end_4714204864:;
			if (!(_10eb9c740_unsig_assignable(jule::Str("u64", 3),_344428_d) == _match_expr)) { goto _case_end_4714204032; }
			_case_begin_4714204032:;
			{
				_344428_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_344428_d->_field_constant->_method_as_u64()));
			}
			goto _match_end_4714195776;
			_case_end_4714204032:;
			_case_begin_4714195440:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("modulo_with_not_int", 19),jule::Slice<jule::Any>({}));
			}
			goto _match_end_4714195776;
			_case_end_4714195440:;
			_match_end_4714195776:;
		}
	});
	_344413_check((*this)._field_l);
	_344413_check((*this)._field_r);
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_BinopSolver::_method_eval_float(void) {
	jule::Str _346913_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _347013_rk = (*this)._field_r->_field_kind->_method_to_str();
	if (((!_10f5ea650_is_num(_346913_lk)) || (!_10f5ea650_is_num(_347013_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any(_346913_lk),jule::Any(_347013_rk)}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!(jule::Str("==", 2) == _match_expr || jule::Str("!=", 2) == _match_expr || jule::Str("<", 1) == _match_expr || jule::Str(">", 1) == _match_expr || jule::Str(">=", 2) == _match_expr || jule::Str("<=", 2) == _match_expr)) { goto _case_end_4714228240; }
		_case_begin_4714228240:;
		{
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
		}
		goto _match_end_4714229664;
		_case_end_4714228240:;
		_match_end_4714229664:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!(jule::Str("+", 1) == _match_expr || jule::Str("-", 1) == _match_expr || jule::Str("*", 1) == _match_expr || jule::Str("/", 1) == _match_expr)) { goto _case_end_4714231936; }
		_case_begin_4714231936:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4714230592;
		_case_end_4714231936:;
		if (!(jule::Str("%", 1) == _match_expr)) { goto _case_end_4714232048; }
		_case_begin_4714232048:;
		{
			if ((!_10f5ea650_is_int(_347013_rk))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any(_346913_lk),jule::Any(_347013_rk)}));
				return jule::new_ref<_10ee8a260_Data>();
			}
			(*this)._method_mod();
			return (*this)._field_r;
		}
		goto _match_end_4714230592;
		_case_end_4714232048:;
		_case_begin_4714234336:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_float", 22),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4714230592;
		_case_end_4714234336:;
		_match_end_4714230592:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_BinopSolver::_method_eval_unsig_int(void) {
	jule::Str _351513_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _351613_rk = (*this)._field_r->_field_kind->_method_to_str();
	if (((!_10f5ea650_is_num(_351513_lk)) || (!_10f5ea650_is_num(_351613_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any(_351513_lk),jule::Any(_351613_rk)}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!(jule::Str("==", 2) == _match_expr || jule::Str("!=", 2) == _match_expr || jule::Str("<", 1) == _match_expr || jule::Str(">", 1) == _match_expr || jule::Str(">=", 2) == _match_expr || jule::Str("<=", 2) == _match_expr)) { goto _case_end_4714251392; }
		_case_begin_4714251392:;
		{
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
		}
		goto _match_end_4714257712;
		_case_end_4714251392:;
		_match_end_4714257712:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!(jule::Str("+", 1) == _match_expr || jule::Str("-", 1) == _match_expr || jule::Str("*", 1) == _match_expr || jule::Str("/", 1) == _match_expr || jule::Str("&", 1) == _match_expr || jule::Str("|", 1) == _match_expr || jule::Str("^", 1) == _match_expr)) { goto _case_end_4714263056; }
		_case_begin_4714263056:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4714258976;
		_case_end_4714263056:;
		if (!(jule::Str("%", 1) == _match_expr)) { goto _case_end_4714266304; }
		_case_begin_4714266304:;
		{
			(*this)._method_mod();
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4714258976;
		_case_end_4714266304:;
		if (!(jule::Str("<<", 2) == _match_expr || jule::Str(">>", 2) == _match_expr)) { goto _case_end_4714266016; }
		_case_begin_4714266016:;
		{
			if ((!_10ee8a260_is_ok_for_shifting((*this)._field_r))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("bitshift_must_unsigned", 22),jule::Slice<jule::Any>({}));
				return jule::new_ref<_10ee8a260_Data>();
			}
			if ((*this)._field_l->_method_is_const()) {
				(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
			}
			return (*this)._field_l;
		}
		goto _match_end_4714258976;
		_case_end_4714266016:;
		_case_begin_4714262352:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_uint", 21),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4714258976;
		_case_end_4714262352:;
		_match_end_4714258976:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_BinopSolver::_method_eval_sig_int(void) {
	jule::Str _357413_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _357513_rk = (*this)._field_r->_field_kind->_method_to_str();
	if (((!_10f5ea650_is_num(_357413_lk)) || (!_10f5ea650_is_num(_357513_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any(_357413_lk),jule::Any(_357513_rk)}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!(jule::Str("==", 2) == _match_expr || jule::Str("!=", 2) == _match_expr || jule::Str("<", 1) == _match_expr || jule::Str(">", 1) == _match_expr || jule::Str(">=", 2) == _match_expr || jule::Str("<=", 2) == _match_expr)) { goto _case_end_4714291456; }
		_case_begin_4714291456:;
		{
			return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
		}
		goto _match_end_4714291152;
		_case_end_4714291456:;
		_match_end_4714291152:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!(jule::Str("+", 1) == _match_expr || jule::Str("-", 1) == _match_expr || jule::Str("*", 1) == _match_expr || jule::Str("/", 1) == _match_expr || jule::Str("&", 1) == _match_expr || jule::Str("|", 1) == _match_expr || jule::Str("^", 1) == _match_expr)) { goto _case_end_4714296416; }
		_case_begin_4714296416:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4714295056;
		_case_end_4714296416:;
		if (!(jule::Str("%", 1) == _match_expr)) { goto _case_end_4714299712; }
		_case_begin_4714299712:;
		{
			(*this)._method_mod();
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_4714295056;
		_case_end_4714299712:;
		if (!(jule::Str("<<", 2) == _match_expr || jule::Str(">>", 2) == _match_expr)) { goto _case_end_4714299376; }
		_case_begin_4714299376:;
		{
			if ((!_10ee8a260_is_ok_for_shifting((*this)._field_r))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("bitshift_must_unsigned", 22),jule::Slice<jule::Any>({}));
				return jule::new_ref<_10ee8a260_Data>();
			}
			return (*this)._field_l;
		}
		goto _match_end_4714295056;
		_case_end_4714299376:;
		_case_begin_4714292896:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_int", 20),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4714295056;
		_case_end_4714292896:;
		_match_end_4714295056:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_BinopSolver::_method_eval_prim(void) {
	jule::Ref<_10eeb79b0_Prim> _362913_prim = (*this)._field_l->_field_kind->_method_prim();
	{
		auto _match_expr{ true };
		if (!(_362913_prim->_method_is_any() == _match_expr)) { goto _case_end_4714313792; }
		_case_begin_4714313792:;
		{
			return (*this)._method_eval_any();
		}
		goto _match_end_4714313408;
		_case_end_4714313792:;
		if (!(_362913_prim->_method_is_bool() == _match_expr)) { goto _case_end_4714313904; }
		_case_begin_4714313904:;
		{
			return (*this)._method_eval_bool();
		}
		goto _match_end_4714313408;
		_case_end_4714313904:;
		if (!(_362913_prim->_method_is_str() == _match_expr)) { goto _case_end_4714314016; }
		_case_begin_4714314016:;
		{
			return (*this)._method_eval_str();
		}
		goto _match_end_4714313408;
		_case_end_4714314016:;
		_match_end_4714313408:;
	}
	jule::Ref<_10eeb79b0_Prim> _363613_rprim = (*this)._field_r->_field_kind->_method_prim();
	if ((!jule::real(_363613_rprim))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any(_362913_prim->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	jule::Str _364213_lk = _362913_prim->_method_to_str();
	{
		auto _match_expr{ true };
		if (!(_10f5ea650_is_float(_364213_lk) == _match_expr)) { goto _case_end_4714331600; }
		_case_begin_4714331600:;
		{
			return (*this)._method_eval_float();
		}
		goto _match_end_4714329616;
		_case_end_4714331600:;
		if (!(_10f5ea650_is_unsig_int(_364213_lk) == _match_expr)) { goto _case_end_4714331712; }
		_case_begin_4714331712:;
		{
			return (*this)._method_eval_unsig_int();
		}
		goto _match_end_4714329616;
		_case_end_4714331712:;
		if (!(_10f5ea650_is_sig_int(_364213_lk) == _match_expr)) { goto _case_end_4714331344; }
		_case_begin_4714331344:;
		{
			return (*this)._method_eval_sig_int();
		}
		goto _match_end_4714329616;
		_case_end_4714331344:;
		_case_begin_4714329840:;
		{
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4714329616;
		_case_end_4714329840:;
		_match_end_4714329616:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_BinopSolver::_method_eval(void) {
	{
		auto _match_expr{ true };
		if (!((*this)._field_l->_field_kind->_method_is_void() == _match_expr)) { goto _case_end_4714339744; }
		_case_begin_4714339744:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("void", 4))}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4714336608;
		_case_end_4714339744:;
		if (!((*this)._field_l->_field_kind->_method_is_nil() == _match_expr)) { goto _case_end_4714339856; }
		_case_begin_4714339856:;
		{
			return (*this)._method_eval_nil();
		}
		goto _match_end_4714336608;
		_case_end_4714339856:;
		if (!(jule::real((*this)._field_l->_field_kind->_method_enm()) == _match_expr)) { goto _case_end_4714339376; }
		_case_begin_4714339376:;
		{
			return (*this)._method_eval_enum();
		}
		goto _match_end_4714336608;
		_case_end_4714339376:;
		if (!(jule::real((*this)._field_l->_field_kind->_method_ptr()) == _match_expr)) { goto _case_end_4714339488; }
		_case_begin_4714339488:;
		{
			return (*this)._method_eval_ptr();
		}
		goto _match_end_4714336608;
		_case_end_4714339488:;
		if (!(jule::real((*this)._field_l->_field_kind->_method_arr()) == _match_expr)) { goto _case_end_4714338592; }
		_case_begin_4714338592:;
		{
			return (*this)._method_eval_arr();
		}
		goto _match_end_4714336608;
		_case_end_4714338592:;
		if (!(jule::real((*this)._field_l->_field_kind->_method_slc()) == _match_expr)) { goto _case_end_4714338704; }
		_case_begin_4714338704:;
		{
			return (*this)._method_eval_slc();
		}
		goto _match_end_4714336608;
		_case_end_4714338704:;
		if (!(jule::real((*this)._field_l->_field_kind->_method_fnc()) == _match_expr)) { goto _case_end_4714338816; }
		_case_begin_4714338816:;
		{
			return (*this)._method_eval_fn();
		}
		goto _match_end_4714336608;
		_case_end_4714338816:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_trt()) || jule::real((*this)._field_r->_field_kind->_method_trt())) == _match_expr)) { goto _case_end_4714340368; }
		_case_begin_4714340368:;
		{
			if (jule::real((*this)._field_r->_field_kind->_method_trt())) {
				std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
			}
			return (*this)._method_eval_trait();
		}
		goto _match_end_4714336608;
		_case_end_4714340368:;
		if (!(jule::real((*this)._field_l->_field_kind->_method_strct()) == _match_expr)) { goto _case_end_4714340480; }
		_case_begin_4714340480:;
		{
			return (*this)._method_eval_struct();
		}
		goto _match_end_4714336608;
		_case_end_4714340480:;
		if (!(jule::real((*this)._field_l->_field_kind->_method_prim()) == _match_expr)) { goto _case_end_4714340592; }
		_case_begin_4714340592:;
		{
			return (*this)._method_eval_prim();
		}
		goto _match_end_4714336608;
		_case_end_4714340592:;
		_case_begin_4714336864:;
		{
			return jule::new_ref<_10ee8a260_Data>();
		}
		goto _match_end_4714336608;
		_case_end_4714336864:;
		_match_end_4714336608:;
	}
}



inline void _10ee8a260_BinopSolver::_method_assign_shift(jule::Ref<_10ee8a260_Data> _369231_d,jule::F64 _369241_r) {
	{
		auto _match_expr{ true };
		if (!((_369241_r <= 6LL) == _match_expr)) { goto _case_end_5316378032; }
		_case_begin_5316378032:;
		{
			_369231_d->_field_kind->_method_prim()->_field_kind=jule::Str("i8", 2);
			_369231_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_369231_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_5316374896;
		_case_end_5316378032:;
		if (!((_369241_r <= 7LL) == _match_expr)) { goto _case_end_5316378384; }
		_case_begin_5316378384:;
		{
			_369231_d->_field_kind->_method_prim()->_field_kind=jule::Str("u8", 2);
			_369231_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_369231_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_5316374896;
		_case_end_5316378384:;
		if (!((_369241_r <= 14LL) == _match_expr)) { goto _case_end_5316375632; }
		_case_begin_5316375632:;
		{
			_369231_d->_field_kind->_method_prim()->_field_kind=jule::Str("i16", 3);
			_369231_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_369231_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_5316374896;
		_case_end_5316375632:;
		if (!((_369241_r <= 15LL) == _match_expr)) { goto _case_end_5316375744; }
		_case_begin_5316375744:;
		{
			_369231_d->_field_kind->_method_prim()->_field_kind=jule::Str("u16", 3);
			_369231_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_369231_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_5316374896;
		_case_end_5316375744:;
		if (!((_369241_r <= 30LL) == _match_expr)) { goto _case_end_5316380688; }
		_case_begin_5316380688:;
		{
			_369231_d->_field_kind->_method_prim()->_field_kind=jule::Str("i32", 3);
			_369231_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_369231_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_5316374896;
		_case_end_5316380688:;
		if (!((_369241_r <= 31LL) == _match_expr)) { goto _case_end_5316380800; }
		_case_begin_5316380800:;
		{
			_369231_d->_field_kind->_method_prim()->_field_kind=jule::Str("u32", 3);
			_369231_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_369231_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_5316374896;
		_case_end_5316380800:;
		if (!((_369241_r <= 62LL) == _match_expr)) { goto _case_end_5316380912; }
		_case_begin_5316380912:;
		{
			_369231_d->_field_kind->_method_prim()->_field_kind=jule::Str("i64", 3);
			_369231_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_369231_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_5316374896;
		_case_end_5316380912:;
		if (!((_369241_r <= 63LL) == _match_expr)) { goto _case_end_5316381024; }
		_case_begin_5316381024:;
		{
			_369231_d->_field_kind->_method_prim()->_field_kind=jule::Str("u64", 3);
			_369231_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_369231_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_5316374896;
		_case_end_5316381024:;
		if (!((_369241_r <= 127LL) == _match_expr)) { goto _case_end_5316381136; }
		_case_begin_5316381136:;
		{
			_369231_d->_field_kind->_method_prim()->_field_kind=jule::Str("f32", 3);
			_369231_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_369231_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_5316374896;
		_case_end_5316381136:;
		_case_begin_5316375168:;
		{
			_369231_d->_field_kind->_method_prim()->_field_kind=jule::Str("f64", 3);
			_369231_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_369231_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_5316374896;
		_case_end_5316375168:;
		_match_end_5316374896:;
	}
}



inline void _10ee8a260_BinopSolver::_method_solve_const(jule::Ref<_10ee8a260_Data> _373634_d) {
	{
		auto _match_expr{ true };
		if (!((!jule::real(_373634_d)) == _match_expr)) { goto _case_end_5316425408; }
		_case_begin_5316425408:;
		{
			return;
		}
		goto _match_end_5316425088;
		_case_end_5316425408:;
		if (!((!(*this)._field_l->_method_is_const()) == _match_expr || (!(*this)._field_r->_method_is_const()) == _match_expr)) { goto _case_end_5316425520; }
		_case_begin_5316425520:;
		{
			jule::drop(_373634_d->_field_constant);
			return;
		}
		goto _match_end_5316425088;
		_case_end_5316425520:;
		_match_end_5316425088:;
	}
	{
		auto _match_expr{ (*this)._field_op._field_kind };
		if (!(jule::Str("==", 2) == _match_expr)) { goto _case_end_5316431184; }
		_case_begin_5316431184:;
		{
			_373634_d->_field_constant=_10f4ed830_new_bool((*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant));
		}
		goto _match_end_5316431024;
		_case_end_5316431184:;
		if (!(jule::Str("!=", 2) == _match_expr)) { goto _case_end_5316431296; }
		_case_begin_5316431296:;
		{
			_373634_d->_field_constant=_10f4ed830_new_bool((!(*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant)));
		}
		goto _match_end_5316431024;
		_case_end_5316431296:;
		if (!(jule::Str("::", 2) == _match_expr)) { goto _case_end_5316431408; }
		_case_begin_5316431408:;
		{
			_373634_d->_field_constant=_10f4ed830_new_bool((*this)._field_l->_field_constant->_method_or((*this)._field_r->_field_constant));
		}
		goto _match_end_5316431024;
		_case_end_5316431408:;
		if (!(jule::Str("&&", 2) == _match_expr)) { goto _case_end_5316431520; }
		_case_begin_5316431520:;
		{
			_373634_d->_field_constant=_10f4ed830_new_bool((*this)._field_l->_field_constant->_method_and((*this)._field_r->_field_constant));
		}
		goto _match_end_5316431024;
		_case_end_5316431520:;
		if (!(jule::Str(">", 1) == _match_expr)) { goto _case_end_5316431632; }
		_case_begin_5316431632:;
		{
			_373634_d->_field_constant=_10f4ed830_new_bool((*this)._field_l->_field_constant->_method_gt((*this)._field_r->_field_constant));
		}
		goto _match_end_5316431024;
		_case_end_5316431632:;
		if (!(jule::Str("<", 1) == _match_expr)) { goto _case_end_5316431744; }
		_case_begin_5316431744:;
		{
			_373634_d->_field_constant=_10f4ed830_new_bool((*this)._field_l->_field_constant->_method_lt((*this)._field_r->_field_constant));
		}
		goto _match_end_5316431024;
		_case_end_5316431744:;
		if (!(jule::Str(">=", 2) == _match_expr)) { goto _case_end_5316431856; }
		_case_begin_5316431856:;
		{
			_373634_d->_field_constant=_10f4ed830_new_bool(((*this)._field_l->_field_constant->_method_gt((*this)._field_r->_field_constant) || (*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant)));
		}
		goto _match_end_5316431024;
		_case_end_5316431856:;
		if (!(jule::Str("<=", 2) == _match_expr)) { goto _case_end_5316431968; }
		_case_begin_5316431968:;
		{
			_373634_d->_field_constant=_10f4ed830_new_bool(((*this)._field_l->_field_constant->_method_lt((*this)._field_r->_field_constant) || (*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant)));
		}
		goto _match_end_5316431024;
		_case_end_5316431968:;
		if (!(jule::Str("+", 1) == _match_expr)) { goto _case_end_5316432080; }
		_case_begin_5316432080:;
		{
			(*this)._field_l->_field_constant->_method_add((*this)._field_r->_field_constant);
			_373634_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_5316431024;
		_case_end_5316432080:;
		if (!(jule::Str("-", 1) == _match_expr)) { goto _case_end_5316432192; }
		_case_begin_5316432192:;
		{
			(*this)._field_l->_field_constant->_method_sub((*this)._field_r->_field_constant);
			_373634_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_5316431024;
		_case_end_5316432192:;
		if (!(jule::Str("*", 1) == _match_expr)) { goto _case_end_5316432304; }
		_case_begin_5316432304:;
		{
			(*this)._field_l->_field_constant->_method_mul((*this)._field_r->_field_constant);
			_373634_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_5316431024;
		_case_end_5316432304:;
		if (!(jule::Str("/", 1) == _match_expr)) { goto _case_end_5316432416; }
		_case_begin_5316432416:;
		{
			jule::Bool _378617_ok = (*this)._field_l->_field_constant->_method_div((*this)._field_r->_field_constant);
			if (((!_378617_ok) && (static_cast<jule::F64>((*this)._field_r->_field_constant->_method_as_f64()) == 0LL))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("divide_by_zero", 14),jule::Slice<jule::Any>({}));
			}
			_373634_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_5316431024;
		_case_end_5316432416:;
		if (!(jule::Str("%", 1) == _match_expr)) { goto _case_end_5316432528; }
		_case_begin_5316432528:;
		{
			jule::Bool _379317_ok = (*this)._field_l->_field_constant->_method_mod((*this)._field_r->_field_constant);
			if (((!_379317_ok) && (static_cast<jule::F64>((*this)._field_r->_field_constant->_method_as_f64()) == 0LL))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("divide_by_zero", 14),jule::Slice<jule::Any>({}));
			}
			_373634_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_5316431024;
		_case_end_5316432528:;
		if (!(jule::Str("|", 1) == _match_expr)) { goto _case_end_5316432640; }
		_case_begin_5316432640:;
		{
			(*this)._field_l->_field_constant->_method_bitwise_or((*this)._field_r->_field_constant);
			_373634_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_5316431024;
		_case_end_5316432640:;
		if (!(jule::Str("&", 1) == _match_expr)) { goto _case_end_5316432752; }
		_case_begin_5316432752:;
		{
			(*this)._field_l->_field_constant->_method_bitwise_and((*this)._field_r->_field_constant);
			_373634_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_5316431024;
		_case_end_5316432752:;
		if (!(jule::Str("^", 1) == _match_expr)) { goto _case_end_5316432864; }
		_case_begin_5316432864:;
		{
			(*this)._field_l->_field_constant->_method_xor((*this)._field_r->_field_constant);
			_373634_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_5316431024;
		_case_end_5316432864:;
		if (!(jule::Str("<<", 2) == _match_expr)) { goto _case_end_5316432976; }
		_case_begin_5316432976:;
		{
			_373634_d->_field_constant=(*this)._field_l->_field_constant;
			(*this)._field_l->_field_constant->_method_lshift((*this)._field_r->_field_constant);
			(*this)._method_assign_shift(_373634_d,static_cast<jule::F64>((*this)._field_r->_field_constant->_method_as_f64()));
		}
		goto _match_end_5316431024;
		_case_end_5316432976:;
		if (!(jule::Str(">>", 2) == _match_expr)) { goto _case_end_5316433088; }
		_case_begin_5316433088:;
		{
			_373634_d->_field_constant=(*this)._field_l->_field_constant;
			(*this)._field_l->_field_constant->_method_rshift((*this)._field_r->_field_constant);
			(*this)._method_assign_shift(_373634_d,static_cast<jule::F64>((*this)._field_r->_field_constant->_method_as_f64()));
		}
		goto _match_end_5316431024;
		_case_end_5316433088:;
		_match_end_5316431024:;
	}
	_373634_d->_field_model=jule::Any(_373634_d->_field_constant);
}



inline void _10ee8a260_BinopSolver::_method_post_const(jule::Ref<_10ee8a260_Data> _382529_d) {
	if ((!jule::real(_382529_d))) {
		return;
	}
	if ((!_382529_d->_method_is_const())) {
		return;
	}
	_10ee8a260_normalize_bitsize(_382529_d);
}



inline void _10ee8a260_BinopSolver::_method_prepare_data(jule::Ref<_10ee8a260_Data> _383631_d) {
	if ((jule::real(_383631_d) && jule::real(_383631_d->_field_kind->_method_ref()))) {
		_383631_d->_field_kind=_383631_d->_field_kind->_method_ref()->_field_elem;
	}
}



inline void _10ee8a260_BinopSolver::_method_prepare_eval(void) {
	(*this)._method_prepare_data((*this)._field_r);
	(*this)._method_prepare_data((*this)._field_l);
}



inline void _10ee8a260_BinopSolver::_method_check_data(jule::Ref<_10ee8a260_Data> _384733_d) {
	jule::Ref<_10e56a140_FnIns> _384813_f = _384733_d->_field_kind->_method_fnc();
	if (((jule::real(_384813_f) && jule::real(_384813_f->_field_decl)) && _384813_f->_field_decl->_method_is_method())) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("invalid_expr_for_binop", 22),jule::Slice<jule::Any>({}));
	}
}



inline void _10ee8a260_BinopSolver::_method_check_datas(void) {
	(*this)._method_check_data((*this)._field_l);
	(*this)._method_check_data((*this)._field_r);
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_BinopSolver::_method_solve_explicit(jule::Ref<_10ee8a260_Data> _385937_l,jule::Ref<_10ee8a260_Data> _385951_r) {
	std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple(_385937_l,_385951_r);
	(*this)._method_prepare_eval();
	(*this)._method_check_datas();
	jule::Ref<_10ee8a260_Data> _386517_d = (*this)._method_eval();
	std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple(_385937_l,_385951_r);
	(*this)._method_solve_const(_386517_d);
	(*this)._method_post_const(_386517_d);
	if ((jule::real(_386517_d) && (!_386517_d->_method_is_const()))) {
		_386517_d->_field_model=jule::Any(jule::new_struct<_10e9ca470_BinopExprModel>(new( std::nothrow ) _10e9ca470_BinopExprModel(_385937_l->_field_model,_385951_r->_field_model,(*this)._field_op._field_kind)));
	}
	if ((jule::real(_385937_l->_field_cast_kind) && (!jule::real(_385951_r->_field_cast_kind)))) {
		_386517_d->_field_cast_kind=_385937_l->_field_cast_kind;
	} else if ((jule::real(_385951_r->_field_cast_kind) && (!jule::real(_385937_l->_field_cast_kind)))) {
		_386517_d->_field_cast_kind=_385951_r->_field_cast_kind;
	}
	return _386517_d;
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_BinopSolver::_method_solve(jule::Ref<_11ce1fd50_BinopExpr> _388828_op) {
	jule::Ref<_10ee8a260_Data> _388917_l = (*this)._field_e->_method_eval_expr_kind(_388828_op->_field_left);
	if (((!jule::real(_388917_l)) || (!jule::real(_388917_l->_field_kind)))) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	jule::Ref<_10ee8a260_Data> _389417_r = (*this)._field_e->_method_eval_expr_kind(_388828_op->_field_right);
	if (((!jule::real(_389417_r)) || (!jule::real(_389417_r->_field_kind)))) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	(*this)._field_op=_388828_op->_field_op;
	jule::Ref<_10ee8a260_Data> _390117_d = (*this)._method_solve_explicit(_388917_l,_389417_r);
	if (((jule::real(_390117_d) && _388917_l->_field_is_rune) && _389417_r->_field_is_rune)) {
		_390117_d->_field_is_rune=true;
	}
	return _390117_d;
}







std::ostream &operator<<(std::ostream &_Stream, const _10ee8a260_BinopSolver &_Src) {
	_Stream << "BinopSolver{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline void _10eb9c740_RetTypeChecker::_method_prepare_types(void) {
	(*this)._field_types=_10eb9c740_get_fn_result_types((*this)._field_f);
}



inline void _10eb9c740_RetTypeChecker::_method_prepare_exprs(jule::Ref<_10ee8a260_Data> _119336_d) {
	if ((!jule::real(_119336_d))) {
		return;
	}
	if ((!jule::real(_119336_d->_field_kind->_method_tup()))) {
		(*this)._field_exprs=append((*this)._field_exprs,jule::Slice<jule::Ref<_10ee8a260_Data>>({_119336_d}));
		return;
	}
	(*this)._field_exprs=_10e97fcf0_get_datas_from_tuple_data(_119336_d);
}



inline void _10eb9c740_RetTypeChecker::_method_ret_vars(void) {
	if ((*this)._field_f->_field_decl->_method_is_void()) {
		return;
	}
	(*this)._field_vars=jule::Slice<jule::Ref<_10ebc2ad0_Var>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>((*this)._field_f->_field_decl->_field_result->_field_idents.len())));
	jule::Ref<_10e97fcf0_ScopeChecker> _121217_root_scope = (*this)._field_sc->_method_get_root();
	jule::Int _121417_j = 0LL;
	{
		auto &__julec_range_expr = (*this)._field_f->_field_decl->_field_result->_field_idents;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10eb9c740_i{jule::Int()};_10eb9c740_i = 0;
			_11ce22a00_Token _10eb9c740_ident{_11ce22a00_Token()};_10eb9c740_ident = *__julec_range_begin;
			_iter_begin_4712454208:;
			{
				if ((!_11ce22a00_is_ignore_ident(_10eb9c740_ident._field_kind))) {
					(*this)._field_vars[static_cast<jule::Int>(_10eb9c740_i)]=_121217_root_scope->_field_table->_field_vars._method_at(_121417_j);
					(_121417_j)++;
				} else {
					(*this)._field_vars[static_cast<jule::Int>(_10eb9c740_i)]=jule::new_struct<_10ebc2ad0_Var>(new( std::nothrow ) _10ebc2ad0_Var(jule::Ref<_11ce1fd50_ScopeTree>(),_11ce22a00_Token(),jule::Str("_", 1),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_10eeb79b0_TypeSymbol>(new( std::nothrow ) _10eeb79b0_TypeSymbol(jule::Ref<_11ce1fd50_TypeDecl>(),(*this)._field_types[static_cast<jule::Int>(_10eb9c740_i)])),jule::Ref<_10ee8a260_Value>(),jule::Ref<_10e8ca650_ReferenceStack>(),jule::Slice<jule::Ref<_10ebc2ad0_Var>>()));
				}
			}
			_iter_next_4712454208:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10eb9c740_i; _10eb9c740_ident = *__julec_range_begin; goto _iter_begin_4712454208; }
			_iter_end_4712454208:;
		}
	}
	if ((_121417_j == 0LL)) {
		(*this)._field_vars=nullptr;
	}
}



inline void _10eb9c740_RetTypeChecker::_method_check_exprs(void) {
	{
		auto &__julec_range_expr = (*this)._field_exprs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10eb9c740_i{jule::Int()};_10eb9c740_i = 0;
			jule::Ref<_10ee8a260_Data> _10eb9c740_d{jule::Ref<_10ee8a260_Data>()};_10eb9c740_d = *__julec_range_begin;
			_iter_begin_4558433840:;
			{
				if ((_10eb9c740_i >= static_cast<jule::I64>((*this)._field_types.len()))) {
					goto _iter_end_4558433840;
				}
				jule::Ref<_10eeb79b0_TypeKind> _123921_t = (*this)._field_types[static_cast<jule::Int>(_10eb9c740_i)];
				if (((!_10eb9c740_d->_field_mutable) && _10eeb79b0_is_mut(_10eb9c740_d->_field_kind))) {
					(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("ret_with_mut_typed_non_mut", 26),jule::Slice<jule::Any>({}));
					return;
				}
				_10eb9c740_AssignTypeChecker _124521_ac = _10eb9c740_AssignTypeChecker((*this)._field_sc->_field_s,_123921_t,_10eb9c740_d,(*this)._field_error_token,jule::Bool());
				_124521_ac._method_check();
			}
			_iter_next_4558433840:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10eb9c740_i; _10eb9c740_d = *__julec_range_begin; goto _iter_begin_4558433840; }
			_iter_end_4558433840:;
		}
	}
}



inline jule::Bool _10eb9c740_RetTypeChecker::_method_check(jule::Ref<_10ee8a260_Data> _125528_d) {
	(*this)._method_prepare_types();
	(*this)._method_prepare_exprs(_125528_d);
	(*this)._method_ret_vars();
	jule::I64 _126013_n = static_cast<jule::I64>((*this)._field_exprs.len());
	if (((_126013_n == 0LL) && (!(*this)._field_f->_field_decl->_method_is_void()))) {
		if ((!(*this)._field_f->_field_decl->_method_any_var())) {
			(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("require_ret_expr", 16),jule::Slice<jule::Any>({}));
			return false;
		}
		return true;
	}
	if (((_126013_n > 0LL) && (*this)._field_f->_field_decl->_method_is_void())) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("void_function_ret_expr", 22),jule::Slice<jule::Any>({}));
		return false;
	}
	if ((_126013_n > static_cast<jule::I64>((*this)._field_types.len()))) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("overflow_ret", 12),jule::Slice<jule::Any>({}));
	} else if ((_126013_n < static_cast<jule::I64>((*this)._field_types.len()))) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("missing_multi_ret", 17),jule::Slice<jule::Any>({}));
	}
	(*this)._method_check_exprs();
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _10eb9c740_RetTypeChecker &_Src) {
	_Stream << "RetTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _10eb9c740_FnCallArgChecker::_method_push_err_token(_11ce22a00_Token _68833_token,jule::Str _68847_key,jule::Slice<jule::Any> _68857_args) {
	(*this)._field_e->_field_s->_method_push_err(_68833_token,_68847_key,_68857_args);
}



inline void _10eb9c740_FnCallArgChecker::_method_push_err(jule::Str _69227_key,jule::Slice<jule::Any> _69237_args) {
	(*this)._method_push_err_token((*this)._field_error_token,_69227_key,_69237_args);
}



inline jule::Slice<jule::Ref<_10e56a140_ParamIns>> _10eb9c740_FnCallArgChecker::_method_get_params(void) {
	if ((((static_cast<jule::I64>((*this)._field_f->_field_params.len()) > 0LL) && jule::real((*this)._field_f->_field_params[static_cast<jule::Int>(0LL)]->_field_decl)) && (*this)._field_f->_field_params[static_cast<jule::Int>(0LL)]->_field_decl->_method_is_self())) {
		return (*this)._field_f->_field_params.slice(static_cast<jule::Int>(1LL));
	}
	return (*this)._field_f->_field_params;
}



inline jule::Bool _10eb9c740_FnCallArgChecker::_method_check_counts(jule::Slice<jule::Ref<_10e56a140_ParamIns>> _70331_params) {
	jule::Bool _70354_ok{jule::Bool()};
	jule::I64 _70417_n = static_cast<jule::I64>(_70331_params.len());
	if (((_70417_n > 0LL) && _70331_params[static_cast<jule::Int>(0LL)]->_field_decl->_method_is_self())) {
		(_70417_n)--;
	}
	jule::I64 _70917_diff = (_70417_n - static_cast<jule::I64>((*this)._field_args.len()));
	{
		auto _match_expr{ true };
		if (!((_70917_diff == 0LL) == _match_expr)) { goto _case_end_4712043952; }
		_case_begin_4712043952:;
		{
			_70354_ok = true;
			return _70354_ok;
		}
		goto _match_end_4712043488;
		_case_end_4712043952:;
		if (!(((_70417_n > 0LL) && _70331_params[static_cast<jule::Int>((_70417_n - 1LL))]->_field_decl->_field_variadic) == _match_expr)) { goto _case_end_4712044064; }
		_case_begin_4712044064:;
		{
			_70354_ok = true;
			return _70354_ok;
		}
		goto _match_end_4712043488;
		_case_end_4712044064:;
		if (!(((_70917_diff < 0LL) || (_70917_diff > static_cast<jule::I64>(_70331_params.len()))) == _match_expr)) { goto _case_end_4712044176; }
		_case_begin_4712044176:;
		{
			(*this)._method_push_err(jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
			_70354_ok = false;
			return _70354_ok;
		}
		goto _match_end_4712043488;
		_case_end_4712044176:;
		_match_end_4712043488:;
	}
	jule::Str _72217_idents = jule::Str("", 0);
	_iter_begin_4712049328:;
	if (!((_70917_diff > 0LL))) { goto _iter_end_4712049328; }
	{
		_72217_idents+=(jule::Str(", ", 2) + _70331_params[static_cast<jule::Int>((_70417_n - _70917_diff))]->_field_decl->_field_ident);
	}
	_iter_next_4712049328:;
	(_70917_diff)--;
	goto _iter_begin_4712049328;
	_iter_end_4712049328:;
	_72217_idents=_72217_idents.slice(static_cast<jule::Int>(2LL));
	(*this)._method_push_err(jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(_72217_idents)}));
	_70354_ok = false;
	return _70354_ok;
}



inline jule::Bool _10eb9c740_FnCallArgChecker::_method_check_arg(jule::Ref<_10e56a140_ParamIns> _73232_p,jule::Ref<_10ee8a260_Data> _73250_arg,_11ce22a00_Token _73266_error_token) {
	jule::Bool _73288_ok{jule::Bool()};
	if ((*this)._field_dynamic_annotation) {
		_10eb9c740_DynamicTypeAnnotation _73421_dta = _10eb9c740_DynamicTypeAnnotation((*this)._field_e,(*this)._field_f,_73232_p,_73250_arg,_73266_error_token,nullptr);
		_73288_ok=_73421_dta._method_annotate();
		if ((!_73288_ok)) {
			(*this)._method_push_err_token(_73266_error_token,jule::Str("dynamic_type_annotation_failed", 30),jule::Slice<jule::Any>({}));
			_73288_ok = false;
			return _73288_ok;
		}
	}
	(*this)._field_e->_field_s->_method_check_validity_for_init_expr(_73232_p->_field_decl->_field_mutable,_73232_p->_field_decl->_field_reference,_73232_p->_field_kind,_73250_arg,_73266_error_token);
	(*this)._field_e->_field_s->_method_check_assign_type(_73232_p->_field_kind,_73250_arg,_73266_error_token,false);
	_73288_ok = true;
	return _73288_ok;
}



inline jule::Bool _10eb9c740_FnCallArgChecker::_method_push(jule::Ref<_10e56a140_ParamIns> _75427_p,jule::Ref<_11ce1fd50_Expr> _75445_arg) {
	jule::Bool _75459_ok{jule::Bool()};
	jule::Ref<_10ee8a260_Data> _75517_d = jule::new_ref<_10ee8a260_Data>();
	if (((!(*this)._field_dynamic_annotation) && (!_75427_p->_field_decl->_field_variadic))) {
		jule::Ref<_10eeb79b0_TypeKind> _75721_old = (*this)._field_e->_field_prefix;
		(*this)._field_e->_field_prefix=_75427_p->_field_kind;
		_75517_d=(*this)._field_e->_method_eval_expr_kind(_75445_arg->_field_kind);
		(*this)._field_e->_field_prefix=_75721_old;
	} else {
		jule::Ref<_10eeb79b0_TypeKind> _76221_old = (*this)._field_e->_field_prefix;
		jule::drop((*this)._field_e->_field_prefix);
		_75517_d=(*this)._field_e->_method_eval_expr_kind(_75445_arg->_field_kind);
		(*this)._field_e->_field_prefix=_76221_old;
	}
	if ((!jule::real(_75517_d))) {
		_75459_ok = false;
		return _75459_ok;
	}
	(*this)._field_arg_models=append((*this)._field_arg_models,jule::Slice<jule::Any>({_75517_d->_field_model}));
	_75459_ok = (*this)._method_check_arg(_75427_p,_75517_d,_75445_arg->_field_token);
	return _75459_ok;
}



inline jule::Bool _10eb9c740_FnCallArgChecker::_method_push_variadic(jule::Ref<_10e56a140_ParamIns> _77436_p,jule::Int _77454_i) {
	jule::Bool _77464_ok{jule::Bool()};
	_77464_ok=true;
	jule::Bool _77617_variadiced = false;
	jule::Bool _77713_more = ((_77454_i + 1LL) < static_cast<jule::I64>((*this)._field_args.len()));
	jule::Ref<_10e9ca470_SliceExprModel> _77817_model = jule::new_struct<_10e9ca470_SliceExprModel>(new( std::nothrow ) _10e9ca470_SliceExprModel(_77436_p->_field_kind,jule::Slice<jule::Any>()));
	jule::Ref<_10eeb79b0_TypeKind> _78217_old = (*this)._field_e->_field_prefix;
	_iter_begin_4712106016:;
	if (!((_77454_i < static_cast<jule::I64>((*this)._field_args.len())))) { goto _iter_end_4712106016; }
	{
		jule::Ref<_11ce1fd50_Expr> _78421_arg = (*this)._field_args[static_cast<jule::Int>(_77454_i)];
		{
			auto _match_expr{ _78421_arg->_field_kind };
			if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_VariadicExpr>>())) { goto _case_end_4712117312; }
			_case_begin_4712117312:;
			{
				(*this)._field_e->_field_prefix=jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_10eeb79b0_Slc>(new( std::nothrow ) _10eeb79b0_Slc(_77436_p->_field_kind))));
			}
			goto _match_end_4712112720;
			_case_end_4712117312:;
			_case_begin_4712115168:;
			{
				(*this)._field_e->_field_prefix=_77436_p->_field_kind;
			}
			goto _match_end_4712112720;
			_case_end_4712115168:;
			_match_end_4712112720:;
		}
		jule::Ref<_10ee8a260_Data> _79421_d = (*this)._field_e->_method_eval_expr_kind(_78421_arg->_field_kind);
		if ((!jule::real(_79421_d))) {
			_77464_ok=false;
			goto _iter_next_4712106016;
		}
		if (_79421_d->_field_variadiced) {
			_77617_variadiced=true;
			_79421_d->_field_variadiced=false;
			{
				auto _match_expr{ _79421_d->_field_model };
				if (!(_match_expr.type_is<jule::Ref<_10e9ca470_SliceExprModel>>())) { goto _case_end_4712127568; }
				_case_begin_4712127568:;
				{
					_77817_model=_79421_d->_field_model.operator jule::Ref<_10e9ca470_SliceExprModel>();
					_77817_model->_field_elem_kind=_77436_p->_field_kind;
				}
				goto _match_end_4712125376;
				_case_end_4712127568:;
				_case_begin_4712125488:;
				{
					jule::drop(_77817_model);
					(*this)._field_arg_models=append((*this)._field_arg_models,jule::Slice<jule::Any>({_79421_d->_field_model}));
				}
				goto _match_end_4712125376;
				_case_end_4712125488:;
				_match_end_4712125376:;
			}
		} else {
			_77817_model->_field_elems=append(_77817_model->_field_elems,jule::Slice<jule::Any>({_79421_d->_field_model}));
		}
		_77464_ok=((*this)._method_check_arg(_77436_p,_79421_d,_78421_arg->_field_token) && _77464_ok);
	}
	_iter_next_4712106016:;
	(_77454_i)++;
	goto _iter_begin_4712106016;
	_iter_end_4712106016:;
	(*this)._field_e->_field_prefix=_78217_old;
	if ((_77617_variadiced && _77713_more)) {
		(*this)._method_push_err(jule::Str("more_args_with_variadiced", 25),jule::Slice<jule::Any>({}));
	}
	if (jule::real(_77817_model)) {
		(*this)._field_arg_models=append((*this)._field_arg_models,jule::Slice<jule::Any>({jule::Any(_77817_model)}));
	}
	_77464_ok = _77464_ok;
	return _77464_ok;
}



inline jule::Bool _10eb9c740_FnCallArgChecker::_method_check_args(jule::Slice<jule::Ref<_10e56a140_ParamIns>> _83033_params) {
	jule::Bool _83056_ok{jule::Bool()};
	_83056_ok=true;
	jule::Int _83217_i = 0LL;
	_julec_label_iter:;
	_iter_begin_4712149840:;
	if (!((_83217_i < static_cast<jule::I64>(_83033_params.len())))) { goto _iter_end_4712149840; }
	{
		jule::Ref<_10e56a140_ParamIns> _83521_p = _83033_params[static_cast<jule::Int>(_83217_i)];
		{
			auto _match_expr{ true };
			if (!(_83521_p->_field_decl->_method_is_self() == _match_expr)) { goto _case_end_4712155360; }
			goto _match_end_4712153152;
			_case_end_4712155360:;
			if (!(_83521_p->_field_decl->_field_variadic == _match_expr)) { goto _case_end_4712157120; }
			_case_begin_4712157120:;
			{
				_83056_ok=((*this)._method_push_variadic(_83521_p,_83217_i) && _83056_ok);
				goto _iter_end_4712149840;
			}
			goto _match_end_4712153152;
			_case_end_4712157120:;
			if (!((static_cast<jule::I64>((*this)._field_args.len()) <= _83217_i) == _match_expr)) { goto _case_end_4712154784; }
			_case_begin_4712154784:;
			{
				_83056_ok=false;
				goto _iter_end_4712149840;
			}
			goto _match_end_4712153152;
			_case_end_4712154784:;
			_case_begin_4712153440:;
			{
				_83056_ok=((*this)._method_push(_83521_p,(*this)._field_args[static_cast<jule::Int>(_83217_i)]) && _83056_ok);
			}
			goto _match_end_4712153152;
			_case_end_4712153440:;
			_match_end_4712153152:;
		}
		(_83217_i)++;
	}
	_iter_next_4712149840:;
	goto _iter_begin_4712149840;
	_iter_end_4712149840:;
	_83056_ok = _83056_ok;
	return _83056_ok;
}



inline jule::Bool _10eb9c740_FnCallArgChecker::_method_check_dynamic_type_annotation(void) {
	jule::Bool _85750_ok{jule::Bool()};
	{
		auto &__julec_range_expr = (*this)._field_f->_field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10eeb79b0_TypeKind> _10eb9c740_g{jule::Ref<_10eeb79b0_TypeKind>()};_10eb9c740_g = *__julec_range_begin;
			_iter_begin_4712165376:;
			{
				if ((!jule::real(_10eb9c740_g))) {
					(*this)._method_push_err(jule::Str("dynamic_type_annotation_failed", 30),jule::Slice<jule::Any>({}));
					_85750_ok = false;
					return _85750_ok;
				}
			}
			_iter_next_4712165376:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10eb9c740_g = *__julec_range_begin; goto _iter_begin_4712165376; }
			_iter_end_4712165376:;
		}
	}
	_85750_ok = true;
	return _85750_ok;
}



inline jule::Bool _10eb9c740_FnCallArgChecker::_method_check(void) {
	jule::Bool _86726_ok{jule::Bool()};
	jule::Slice<jule::Ref<_10e56a140_ParamIns>> _86817_params = (*this)._method_get_params();
	_86726_ok=(*this)._method_check_counts(_86817_params);
	if ((!_86726_ok)) {
		_86726_ok = false;
		return _86726_ok;
	}
	_86726_ok=(*this)._method_check_args(_86817_params);
	if ((_86726_ok && (*this)._field_dynamic_annotation)) {
		_86726_ok=(*this)._method_check_dynamic_type_annotation();
	}
	_86726_ok = _86726_ok;
	return _86726_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _10eb9c740_FnCallArgChecker &_Src) {
	_Stream << "FnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamic_annotation:" << _Src._field_dynamic_annotation << ", ";
	_Stream << "arg_models:" << _Src._field_arg_models;
	_Stream << "}";
	return _Stream;
}



inline void _10eb9c740_AssignTypeChecker::_method_push_err(jule::Str _43127_key,jule::Slice<jule::Any> _43137_args) {
	(*this)._field_s->_method_push_err((*this)._field_error_token,_43127_key,_43137_args);
}



inline jule::Bool _10eb9c740_AssignTypeChecker::_method_check_validity(void) {
	jule::Bool _43617_valid = true;
	{
		auto _match_expr{ true };
		if (!(jule::real((*this)._field_d->_field_kind->_method_fnc()) == _match_expr)) { goto _case_end_4711813584; }
		_case_begin_4711813584:;
		{
			jule::Ref<_10e56a140_FnIns> _44017_f = (*this)._field_d->_field_kind->_method_fnc();
			{
				auto _match_expr{ true };
				if (!(_44017_f->_method_is_builtin() == _match_expr)) { goto _case_end_4711818624; }
				_case_begin_4711818624:;
				{
					(*this)._method_push_err(jule::Str("builtin_as_anonymous_fn", 23),jule::Slice<jule::Any>({}));
					_43617_valid=false;
				}
				goto _match_end_4711816144;
				_case_end_4711818624:;
				if (!(_44017_f->_field_decl->_method_is_method() == _match_expr)) { goto _case_end_4711818736; }
				_case_begin_4711818736:;
				{
					(*this)._method_push_err(jule::Str("method_as_anonymous_fn", 22),jule::Slice<jule::Any>({}));
					_43617_valid=false;
				}
				goto _match_end_4711816144;
				_case_end_4711818736:;
				if (!((static_cast<jule::I64>(_44017_f->_field_decl->_field_generics.len()) > 0LL) == _match_expr)) { goto _case_end_4711818848; }
				_case_begin_4711818848:;
				{
					(*this)._method_push_err(jule::Str("genericed_fn_as_anonymous_fn", 28),jule::Slice<jule::Any>({}));
					_43617_valid=false;
				}
				goto _match_end_4711816144;
				_case_end_4711818848:;
				_match_end_4711816144:;
			}
		}
		goto _match_end_4711813264;
		_case_end_4711813584:;
		if (!(jule::real((*this)._field_d->_field_kind->_method_tup()) == _match_expr)) { goto _case_end_4711813696; }
		_case_begin_4711813696:;
		{
			(*this)._method_push_err(jule::Str("tuple_assign_to_single", 22),jule::Slice<jule::Any>({}));
			_43617_valid=false;
		}
		goto _match_end_4711813264;
		_case_end_4711813696:;
		_match_end_4711813264:;
	}
	return _43617_valid;
}



inline jule::Bool _10eb9c740_AssignTypeChecker::_method_check_const(void) {
	if (((((!(*this)._field_d->_method_is_const()) || (!jule::real((*this)._field_dest->_method_prim()))) || (!jule::real((*this)._field_d->_field_kind->_method_prim()))) || (!_10f5ea650_is_num((*this)._field_d->_field_kind->_method_prim()->_field_kind)))) {
		return false;
	}
	jule::Str _47213_kind = (*this)._field_dest->_method_prim()->_field_kind;
	{
		auto _match_expr{ true };
		if (!(_10f5ea650_is_float(_47213_kind) == _match_expr)) { goto _case_end_4711842576; }
		_case_begin_4711842576:;
		{
			if ((!_10eb9c740_float_assignable(_47213_kind,(*this)._field_d))) {
				(*this)._method_push_err(jule::Str("overflow_limits", 15),jule::Slice<jule::Any>({}));
				return false;
			}
		}
		goto _match_end_4711841280;
		_case_end_4711842576:;
		if (!(_10f5ea650_is_int(_47213_kind) == _match_expr)) { goto _case_end_4711841728; }
		_case_begin_4711841728:;
		{
			if ((!_10eb9c740_int_assignable(_47213_kind,(*this)._field_d))) {
				(*this)._method_push_err(jule::Str("overflow_limits", 15),jule::Slice<jule::Any>({}));
				return false;
			}
		}
		goto _match_end_4711841280;
		_case_end_4711841728:;
		_case_begin_4711841424:;
		{
			return false;
		}
		goto _match_end_4711841280;
		_case_end_4711841424:;
		_match_end_4711841280:;
	}
	return true;
}



inline jule::Bool _10eb9c740_AssignTypeChecker::_method_check(void) {
	{
		auto _match_expr{ true };
		if (!((!jule::real((*this)._field_d)) == _match_expr)) { goto _case_end_4711853680; }
		_case_begin_4711853680:;
		{
			return false;
		}
		goto _match_end_4711851584;
		_case_end_4711853680:;
		if (!((!(*this)._method_check_validity()) == _match_expr)) { goto _case_end_4711852976; }
		_case_begin_4711852976:;
		{
			return false;
		}
		goto _match_end_4711851584;
		_case_end_4711852976:;
		if (!((*this)._field_d->_field_variadiced == _match_expr)) { goto _case_end_4711852176; }
		_case_begin_4711852176:;
		{
			(*this)._method_push_err(jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any((*this)._field_dest->_method_to_str()),jule::Any(((*this)._field_d->_field_kind->_method_to_str() + jule::Str("...", 3)))}));
			return false;
		}
		goto _match_end_4711851584;
		_case_end_4711852176:;
		if (!((*this)._method_check_const() == _match_expr)) { goto _case_end_4711852288; }
		_case_begin_4711852288:;
		{
			return true;
		}
		goto _match_end_4711851584;
		_case_end_4711852288:;
		_case_begin_4711851840:;
		{
			return (*this)._field_s->_method_check_type_compatibility((*this)._field_dest,(*this)._field_d->_field_kind,(*this)._field_error_token,(*this)._field_deref);
		}
		goto _match_end_4711851584;
		_case_end_4711851840:;
		_match_end_4711851584:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _10eb9c740_AssignTypeChecker &_Src) {
	_Stream << "AssignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "deref:" << _Src._field_deref;
	_Stream << "}";
	return _Stream;
}



inline void _10eb9c740_TypeCompatibilityChecker::_method_push_err(jule::Str _14527_key,jule::Slice<jule::Any> _14537_args) {
	(*this)._field_s->_method_push_err((*this)._field_error_token,_14527_key,_14537_args);
}



inline jule::Bool _10eb9c740_TypeCompatibilityChecker::_method_check_trait(void) {
	jule::Bool _14932_ok{jule::Bool()};
	if ((*this)._field_src->_method_is_nil()) {
		_14932_ok = true;
		return _14932_ok;
	}
	jule::Ref<_10e3d6eb0_Trait> _15413_trt = (*this)._field_dest->_method_trt();
	jule::Bool _15517_ref = false;
	{
		auto _match_expr{ true };
		if (!(jule::real((*this)._field_src->_method_ref()) == _match_expr)) { goto _case_end_4711627216; }
		_case_begin_4711627216:;
		{
			_15517_ref=true;
			(*this)._field_src=(*this)._field_src->_method_ref()->_field_elem;
			if (jule::real((*this)._field_src->_method_strct())) {
				_14932_ok = false;
				return _14932_ok;
			}
			goto _case_begin_4711627328;
		}
		goto _match_end_4711626400;
		_case_end_4711627216:;
		if (!(jule::real((*this)._field_src->_method_strct()) == _match_expr)) { goto _case_end_4711627328; }
		_case_begin_4711627328:;
		{
			jule::Ref<_10e3fc8f0_StructIns> _16617_s = (*this)._field_src->_method_strct();
			if ((!_16617_s->_field_decl->_method_is_implements(_15413_trt))) {
				_14932_ok = false;
				return _14932_ok;
			}
			if ((_10eb9c740_trait_has_reference_receiver(_15413_trt) && (!_15517_ref))) {
				(*this)._method_push_err(jule::Str("trait_has_reference_parametered_function", 40),jule::Slice<jule::Any>({}));
				_14932_ok = false;
				return _14932_ok;
			}
			_14932_ok = true;
			return _14932_ok;
		}
		goto _match_end_4711626400;
		_case_end_4711627328:;
		if (!(jule::real((*this)._field_src->_method_trt()) == _match_expr)) { goto _case_end_4711627440; }
		_case_begin_4711627440:;
		{
			_14932_ok = (_15413_trt == (*this)._field_src->_method_trt());
			return _14932_ok;
		}
		goto _match_end_4711626400;
		_case_end_4711627440:;
		_case_begin_4711626912:;
		{
			_14932_ok = false;
			return _14932_ok;
		}
		goto _match_end_4711626400;
		_case_end_4711626912:;
		_match_end_4711626400:;
	}
}



inline jule::Bool _10eb9c740_TypeCompatibilityChecker::_method_check_ref(void) {
	jule::Bool _18630_ok{jule::Bool()};
	if (((*this)._field_dest->_method_to_str() == (*this)._field_src->_method_to_str())) {
		_18630_ok = true;
		return _18630_ok;
	} else if ((!(*this)._field_deref)) {
		_18630_ok = false;
		return _18630_ok;
	} else if ((!jule::real((*this)._field_src->_method_ref()))) {
		(*this)._field_dest=(*this)._field_dest->_method_ref()->_field_elem;
		_18630_ok = (*this)._method_check();
		return _18630_ok;
	}
	(*this)._field_src=(*this)._field_src->_method_ref()->_field_elem;
	_18630_ok = (*this)._method_check();
	return _18630_ok;
}



inline jule::Bool _10eb9c740_TypeCompatibilityChecker::_method_check_ptr(void) {
	jule::Bool _20030_ok{jule::Bool()};
	if ((*this)._field_src->_method_is_nil()) {
		_20030_ok = true;
		return _20030_ok;
	}
	jule::Ref<_10eeb79b0_Ptr> _20517_src = (*this)._field_src->_method_ptr();
	if ((!jule::real(_20517_src))) {
		_20030_ok = false;
		return _20030_ok;
	}
	jule::Ref<_10eeb79b0_Ptr> _21017_dest = (*this)._field_dest->_method_ptr();
	if (_21017_dest->_method_is_unsafe()) {
		_20030_ok = true;
		return _20030_ok;
	}
	_10eb9c740_TypeCompatibilityChecker _21617_sub = _10eb9c740_TypeCompatibilityChecker((*this)._field_s,_21017_dest->_field_elem,_20517_src->_field_elem,(*this)._field_error_token,jule::Bool(),true);
	_20030_ok = _21617_sub._method_check();
	return _20030_ok;
}



inline jule::Bool _10eb9c740_TypeCompatibilityChecker::_method_check_slc(void) {
	jule::Bool _22630_ok{jule::Bool()};
	if ((*this)._field_src->_method_is_nil()) {
		_22630_ok = true;
		return _22630_ok;
	}
	jule::Ref<_10eeb79b0_Slc> _23117_src = (*this)._field_src->_method_slc();
	if ((!jule::real(_23117_src))) {
		_22630_ok = false;
		return _22630_ok;
	}
	jule::Ref<_10eeb79b0_Slc> _23517_dest = (*this)._field_dest->_method_slc();
	_10eb9c740_TypeCompatibilityChecker _23717_sub = _10eb9c740_TypeCompatibilityChecker((*this)._field_s,_23517_dest->_field_elem,_23117_src->_field_elem,(*this)._field_error_token,jule::Bool(),true);
	_22630_ok = _23717_sub._method_check();
	return _22630_ok;
}



inline jule::Bool _10eb9c740_TypeCompatibilityChecker::_method_check_arr(void) {
	jule::Bool _24730_ok{jule::Bool()};
	jule::Ref<_10eeb79b0_Arr> _24817_src = (*this)._field_src->_method_arr();
	if ((!jule::real(_24817_src))) {
		_24730_ok = false;
		return _24730_ok;
	}
	jule::Ref<_10eeb79b0_Arr> _25217_dest = (*this)._field_dest->_method_arr();
	if ((_25217_dest->_field_n != _24817_src->_field_n)) {
		_24730_ok = false;
		return _24730_ok;
	}
	_10eb9c740_TypeCompatibilityChecker _25717_sub = _10eb9c740_TypeCompatibilityChecker((*this)._field_s,_25217_dest->_field_elem,_24817_src->_field_elem,(*this)._field_error_token,jule::Bool(),true);
	_24730_ok = _25717_sub._method_check();
	return _24730_ok;
}



inline jule::Bool _10eb9c740_TypeCompatibilityChecker::_method_check_map(void) {
	jule::Bool _26730_ok{jule::Bool()};
	if ((*this)._field_src->_method_is_nil()) {
		_26730_ok = true;
		return _26730_ok;
	}
	jule::Ref<_10eeb79b0_Map> _27217_src = (*this)._field_src->_method_map();
	if ((!jule::real(_27217_src))) {
		_26730_ok = false;
		return _26730_ok;
	}
	jule::Ref<_10eeb79b0_Map> _27717_dest = (*this)._field_dest->_method_map();
	_10eb9c740_TypeCompatibilityChecker _27917_sub = _10eb9c740_TypeCompatibilityChecker((*this)._field_s,_27717_dest->_field_key,_27217_src->_field_key,(*this)._field_error_token,jule::Bool(),jule::Bool());
	if ((!_27917_sub._method_check())) {
		_26730_ok = false;
		return _26730_ok;
	}
	_27917_sub._field_src=_27217_src->_field_val;
	_27917_sub._field_dest=_27717_dest->_field_val;
	_26730_ok = _27917_sub._method_check();
	return _26730_ok;
}



inline jule::Bool _10eb9c740_TypeCompatibilityChecker::_method_check_struct(void) {
	jule::Bool _29433_ok{jule::Bool()};
	jule::Ref<_10e3fc8f0_StructIns> _29517_src = (*this)._field_src->_method_strct();
	if ((!jule::real(_29517_src))) {
		_29433_ok = false;
		return _29433_ok;
	}
	jule::Ref<_10e3fc8f0_StructIns> _29917_dest = (*this)._field_dest->_method_strct();
	{
		auto _match_expr{ true };
		if (!(((_29917_dest->_field_decl).alloc != (_29517_src->_field_decl).alloc) == _match_expr)) { goto _case_end_4711719728; }
		_case_begin_4711719728:;
		{
			_29433_ok = false;
			return _29433_ok;
		}
		goto _match_end_4711719216;
		_case_end_4711719728:;
		if (!((static_cast<jule::I64>(_29917_dest->_field_generics.len()) == 0LL) == _match_expr)) { goto _case_end_4711719840; }
		_case_begin_4711719840:;
		{
			_29433_ok = true;
			return _29433_ok;
		}
		goto _match_end_4711719216;
		_case_end_4711719840:;
		_match_end_4711719216:;
	}
	{
		auto &__julec_range_expr = _29917_dest->_field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10eb9c740_i{jule::Int()};_10eb9c740_i = 0;
			jule::Ref<_10eeb79b0_TypeKind> _10eb9c740_dg{jule::Ref<_10eeb79b0_TypeKind>()};_10eb9c740_dg = *__julec_range_begin;
			_iter_begin_4711724016:;
			{
				jule::Ref<_10eeb79b0_TypeKind> _30921_sg = _29517_src->_field_generics[static_cast<jule::Int>(_10eb9c740_i)];
				_10eb9c740_TypeCompatibilityChecker _31021_sub = _10eb9c740_TypeCompatibilityChecker((*this)._field_s,_10eb9c740_dg,_30921_sg,(*this)._field_error_token,jule::Bool(),jule::Bool());
				if ((!_31021_sub._method_check())) {
					_29433_ok = false;
					return _29433_ok;
				}
			}
			_iter_next_4711724016:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10eb9c740_i; _10eb9c740_dg = *__julec_range_begin; goto _iter_begin_4711724016; }
			_iter_end_4711724016:;
		}
	}
	_29433_ok = true;
	return _29433_ok;
}



inline jule::Bool _10eb9c740_TypeCompatibilityChecker::_method_check_fn(void) {
	jule::Bool _32329_ok{jule::Bool()};
	if ((*this)._field_src->_method_is_nil()) {
		_32329_ok = true;
		return _32329_ok;
	}
	jule::Ref<_10e56a140_FnIns> _32817_src = (*this)._field_src->_method_fnc();
	if ((!jule::real(_32817_src))) {
		_32329_ok = false;
		return _32329_ok;
	}
	jule::Ref<_10e56a140_FnIns> _33317_dest = (*this)._field_dest->_method_fnc();
	if ((jule::real(_32817_src->_field_result) != jule::real(_33317_dest->_field_result))) {
		_32329_ok = false;
		return _32329_ok;
	}
	if ((static_cast<jule::I64>(_32817_src->_field_params.len()) != static_cast<jule::I64>(_33317_dest->_field_params.len()))) {
		_32329_ok = false;
		return _32329_ok;
	}
	{
		auto &__julec_range_expr = _32817_src->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10eb9c740_i{jule::Int()};_10eb9c740_i = 0;
			_iter_begin_4711744720:;
			{
				jule::Ref<_10e56a140_ParamIns> _34221_srcp = _32817_src->_field_params[static_cast<jule::Int>(_10eb9c740_i)];
				jule::Ref<_10e56a140_ParamIns> _34321_destp = _33317_dest->_field_params[static_cast<jule::Int>(_10eb9c740_i)];
				if ((jule::real(_34221_srcp) != jule::real(_34321_destp))) {
					_32329_ok = false;
					return _32329_ok;
				}
				_10eb9c740_TypeCompatibilityChecker _34821_sub = _10eb9c740_TypeCompatibilityChecker((*this)._field_s,_34321_destp->_field_kind,_34221_srcp->_field_kind,(*this)._field_error_token,jule::Bool(),jule::Bool());
				if ((!_34821_sub._method_check())) {
					_32329_ok = false;
					return _32329_ok;
				}
			}
			_iter_next_4711744720:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10eb9c740_i; goto _iter_begin_4711744720; }
			_iter_end_4711744720:;
		}
	}
	if (jule::real(_32817_src->_field_result)) {
		_10eb9c740_TypeCompatibilityChecker _36021_sub = _10eb9c740_TypeCompatibilityChecker((*this)._field_s,_33317_dest->_field_result,_32817_src->_field_result,(*this)._field_error_token,jule::Bool(),jule::Bool());
		if ((!_36021_sub._method_check())) {
			_32329_ok = false;
			return _32329_ok;
		}
	}
	_32329_ok = true;
	return _32329_ok;
}



inline jule::Bool _10eb9c740_TypeCompatibilityChecker::_method_check_enum(void) {
	jule::Bool _37431_ok{jule::Bool()};
	jule::Ref<_10e975f00_Enum> _37513_r = (*this)._field_src->_method_enm();
	if ((!jule::real(_37513_r))) {
		_37431_ok = false;
		return _37431_ok;
	}
	_37431_ok = (((*this)._field_dest->_method_enm()).alloc == (_37513_r).alloc);
	return _37431_ok;
}



inline jule::Bool _10eb9c740_TypeCompatibilityChecker::_method_check(void) {
	jule::Bool _38226_ok{jule::Bool()};
	if ((!jule::real((*this)._field_src))) {
		_38226_ok = false;
		return _38226_ok;
	}
	if (jule::real((*this)._field_dest->_method_ref())) {
		_38226_ok = (*this)._method_check_ref();
		return _38226_ok;
	}
	if (jule::real((*this)._field_src->_method_ref())) {
		(*this)._field_src=(*this)._field_src->_method_ref()->_field_elem;
	}
	{
		auto _match_expr{ true };
		if (!(jule::real((*this)._field_dest->_method_trt()) == _match_expr)) { goto _case_end_4711777536; }
		_case_begin_4711777536:;
		{
			_38226_ok = (*this)._method_check_trait();
			return _38226_ok;
		}
		goto _match_end_4711776336;
		_case_end_4711777536:;
		if (!(jule::real((*this)._field_dest->_method_ptr()) == _match_expr)) { goto _case_end_4711778192; }
		_case_begin_4711778192:;
		{
			_38226_ok = (*this)._method_check_ptr();
			return _38226_ok;
		}
		goto _match_end_4711776336;
		_case_end_4711778192:;
		if (!(jule::real((*this)._field_dest->_method_slc()) == _match_expr)) { goto _case_end_4711778304; }
		_case_begin_4711778304:;
		{
			_38226_ok = (*this)._method_check_slc();
			return _38226_ok;
		}
		goto _match_end_4711776336;
		_case_end_4711778304:;
		if (!(jule::real((*this)._field_dest->_method_arr()) == _match_expr)) { goto _case_end_4711778416; }
		_case_begin_4711778416:;
		{
			_38226_ok = (*this)._method_check_arr();
			return _38226_ok;
		}
		goto _match_end_4711776336;
		_case_end_4711778416:;
		if (!(jule::real((*this)._field_dest->_method_map()) == _match_expr)) { goto _case_end_4711778528; }
		_case_begin_4711778528:;
		{
			_38226_ok = (*this)._method_check_map();
			return _38226_ok;
		}
		goto _match_end_4711776336;
		_case_end_4711778528:;
		if (!(jule::real((*this)._field_dest->_method_enm()) == _match_expr)) { goto _case_end_4711778640; }
		_case_begin_4711778640:;
		{
			_38226_ok = (*this)._method_check_enum();
			return _38226_ok;
		}
		goto _match_end_4711776336;
		_case_end_4711778640:;
		if (!(jule::real((*this)._field_dest->_method_strct()) == _match_expr)) { goto _case_end_4711778752; }
		_case_begin_4711778752:;
		{
			_38226_ok = (*this)._method_check_struct();
			return _38226_ok;
		}
		goto _match_end_4711776336;
		_case_end_4711778752:;
		if (!(jule::real((*this)._field_dest->_method_fnc()) == _match_expr)) { goto _case_end_4711778864; }
		_case_begin_4711778864:;
		{
			_38226_ok = (*this)._method_check_fn();
			return _38226_ok;
		}
		goto _match_end_4711776336;
		_case_end_4711778864:;
		_match_end_4711776336:;
	}
	jule::Str _40613_dest = (*this)._field_dest->_method_to_str();
	if (((!(*this)._field_ignore_any) || (_40613_dest != jule::Str("any", 3)))) {
		if (_10f51ba00_types_are_compatible(_40613_dest,(*this)._field_src->_method_to_str())) {
			_38226_ok = true;
			return _38226_ok;
		}
	}
	if (_10eeb79b0_is_nil_compatible((*this)._field_dest)) {
		_38226_ok = (*this)._field_src->_method_is_nil();
		return _38226_ok;
	}
	_38226_ok = false;
	return _38226_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _10eb9c740_TypeCompatibilityChecker &_Src) {
	_Stream << "TypeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "deref:" << _Src._field_deref << ", ";
	_Stream << "ignore_any:" << _Src._field_ignore_any;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _10ebc2ad0_Var::_method_is_initialized(void) {
	return jule::real((*this)._field_value);
}



inline jule::Bool _10ebc2ad0_Var::_method_is_auto_typed(void) {
	return ((!jule::real((*this)._field_kind)) || (!jule::real((*this)._field_kind->_field_decl)));
}







std::ostream &operator<<(std::ostream &_Stream, const _10ebc2ad0_Var &_Src) {
	_Stream << "Var{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "value:" << _Src._field_value << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "depends:" << _Src._field_depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_10e9b6a10_ImportInfo> _10e9b6a10_ImportInfo::_method_find_package(jule::Str ) {
	return jule::new_ref<_10e9b6a10_ImportInfo>();
}



inline jule::Ref<_10e9b6a10_ImportInfo> _10e9b6a10_ImportInfo::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_10e9b6a10_ImportInfo>)> ) {
	return jule::new_ref<_10e9b6a10_ImportInfo>();
}



inline jule::Ref<_10ebc2ad0_Var> _10e9b6a10_ImportInfo::_method_find_var(jule::Str _14427_ident,jule::Bool _14439_cpp_linked) {
	if ((!(*this)._method_is_lookupable(_14427_ident))) {
		return jule::new_ref<_10ebc2ad0_Var>();
	}
	return _10e9b6a10_find_var_in_package((*this)._field_package->_field_files,_14427_ident,false);
}



inline jule::Ref<_10eeb79b0_TypeAlias> _10e9b6a10_ImportInfo::_method_find_type_alias(jule::Str _15734_ident,jule::Bool _15746_cpp_linked) {
	if ((!(*this)._method_is_lookupable(_15734_ident))) {
		return jule::new_ref<_10eeb79b0_TypeAlias>();
	}
	return _10e9b6a10_find_type_alias_in_package((*this)._field_package->_field_files,_15734_ident,false);
}



inline jule::Ref<_10e3fc8f0_Struct> _10e9b6a10_ImportInfo::_method_find_struct(jule::Str _17030_ident,jule::Bool _17042_cpp_linked) {
	if ((!(*this)._method_is_lookupable(_17030_ident))) {
		return jule::new_ref<_10e3fc8f0_Struct>();
	}
	return _10e9b6a10_find_struct_in_package((*this)._field_package->_field_files,_17030_ident,false);
}



inline jule::Ref<_10e56a140_Fn> _10e9b6a10_ImportInfo::_method_find_fn(jule::Str _18326_ident,jule::Bool _18338_cpp_linked) {
	if ((!(*this)._method_is_lookupable(_18326_ident))) {
		return jule::new_ref<_10e56a140_Fn>();
	}
	return _10e9b6a10_find_fn_in_package((*this)._field_package->_field_files,_18326_ident,false);
}



inline jule::Ref<_10e3d6eb0_Trait> _10e9b6a10_ImportInfo::_method_find_trait(jule::Str _19529_ident) {
	if ((!(*this)._method_is_lookupable(_19529_ident))) {
		return jule::new_ref<_10e3d6eb0_Trait>();
	}
	return _10e9b6a10_find_trait_in_package((*this)._field_package->_field_files,_19529_ident);
}



inline jule::Ref<_10e975f00_Enum> _10e9b6a10_ImportInfo::_method_find_enum(jule::Str _20728_ident) {
	if ((!(*this)._method_is_lookupable(_20728_ident))) {
		return jule::new_ref<_10e975f00_Enum>();
	}
	return _10e9b6a10_find_enum_in_package((*this)._field_package->_field_files,_20728_ident);
}



inline jule::Bool _10e9b6a10_ImportInfo::_method_is_lookupable(jule::Str _21728_ident) {
	if ((*this)._field_cpp_linked) {
		return false;
	}
	if ((!(*this)._field_import_all)) {
		if ((*this)._method_exist_ident(jule::Str("self", 4))) {
			return true;
		}
		if ((static_cast<jule::I64>((*this)._field_selected.len()) > 0LL)) {
			if ((!(*this)._method_exist_ident(_21728_ident))) {
				return false;
			}
		}
	}
	return true;
}



inline jule::Bool _10e9b6a10_ImportInfo::_method_exist_ident(jule::Str _23726_ident) {
	{
		auto &__julec_range_expr = (*this)._field_selected;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_11ce22a00_Token _10e9b6a10_sident{_11ce22a00_Token()};_10e9b6a10_sident = *__julec_range_begin;
			_iter_begin_4710091296:;
			{
				if ((_10e9b6a10_sident._field_kind == _23726_ident)) {
					return true;
				}
			}
			_iter_next_4710091296:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9b6a10_sident = *__julec_range_begin; goto _iter_begin_4710091296; }
			_iter_end_4710091296:;
		}
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e9b6a10_ImportInfo &_Src) {
	_Stream << "ImportInfo{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "duplicate:" << _Src._field_duplicate << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std << ", ";
	_Stream << "import_all:" << _Src._field_import_all << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "package:" << _Src._field_package;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e97fcf0_ScopeLabel &_Src) {
	_Stream << "ScopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _10e97d820_Impl::_method_is_trait_impl(void) {
	return ((*this)._field_base._field_id != 0LLU);
}



inline jule::Bool _10e97d820_Impl::_method_is_struct_impl(void) {
	return ((*this)._field_base._field_id == 0LLU);
}







std::ostream &operator<<(std::ostream &_Stream, const _10e97d820_Impl &_Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _10e975f00_Enum::_method_to_str(void) {
	return (*this)._field_ident;
}



inline jule::Bool _10e975f00_Enum::_method_equals(jule::Ref<_10eeb79b0_TypeKind> _3521_other) {
	jule::Ref<_10e975f00_Enum> _3613_enm = (_3521_other).alloc->_method_enm();
	if ((!jule::real(_3613_enm))) {
		return false;
	}
	return ((&(*this)) == (_3613_enm).alloc);
}



inline jule::Ref<_10e975f00_EnumItem> _10e975f00_Enum::_method_find_item(jule::Str _4732_ident) {
	{
		auto &__julec_range_expr = (*this)._field_items;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e975f00_EnumItem> _10e975f00_item{jule::Ref<_10e975f00_EnumItem>()};_10e975f00_item = *__julec_range_begin;
			_iter_begin_4708801088:;
			{
				if ((_10e975f00_item->_field_ident == _4732_ident)) {
					return _10e975f00_item;
				}
			}
			_iter_next_4708801088:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e975f00_item = *__julec_range_begin; goto _iter_begin_4708801088; }
			_iter_end_4708801088:;
		}
	}
	return jule::new_ref<_10e975f00_EnumItem>();
}







std::ostream &operator<<(std::ostream &_Stream, const _10e975f00_Enum &_Src) {
	_Stream << "Enum{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "doc:" << _Src._field_doc;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _10e975f00_EnumItem::_method_auto_expr(void) {
	return (!jule::real((*this)._field_value));
}







std::ostream &operator<<(std::ostream &_Stream, const _10e975f00_EnumItem &_Src) {
	_Stream << "EnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _10e3d6eb0_Trait::_method_to_str(void) {
	return (*this)._field_ident;
}



inline jule::Bool _10e3d6eb0_Trait::_method_equals(jule::Ref<_10eeb79b0_TypeKind> _2421_other) {
	jule::Ref<_10e3d6eb0_Trait> _2513_trt = (_2421_other).alloc->_method_trt();
	if ((!jule::real(_2513_trt))) {
		return false;
	}
	return ((&(*this)) == (_2513_trt).alloc);
}



inline jule::Bool _10e3d6eb0_Trait::_method_is_builtin(void) {
	return ((*this)._field_token._field_id == 0LLU);
}



inline jule::Ref<_10e56a140_Fn> _10e3d6eb0_Trait::_method_find_method(jule::Str _3934_ident) {
	{
		auto &__julec_range_expr = (*this)._field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e56a140_Fn> _10e3d6eb0_f{jule::Ref<_10e56a140_Fn>()};_10e3d6eb0_f = *__julec_range_begin;
			_iter_begin_4708785792:;
			{
				if ((_10e3d6eb0_f->_field_ident == _3934_ident)) {
					return _10e3d6eb0_f;
				}
			}
			_iter_next_4708785792:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e3d6eb0_f = *__julec_range_begin; goto _iter_begin_4708785792; }
			_iter_end_4708785792:;
		}
	}
	return jule::new_ref<_10e56a140_Fn>();
}







std::ostream &operator<<(std::ostream &_Stream, const _10e3d6eb0_Trait &_Src) {
	_Stream << "Trait{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "implemented:" << _Src._field_implemented;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e8ca650_Pass &_Src) {
	_Stream << "Pass{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _10e56a140_Fn::_method_is_void(void) {
	return (!jule::real((*this)._field_result));
}



inline jule::Bool _10e56a140_Fn::_method_is_method(void) {
	return jule::real((*this)._field_owner);
}



inline jule::Bool _10e56a140_Fn::_method_is_entry_point(void) {
	return ((*this)._field_ident == jule::Str("main", 4));
}



inline jule::Bool _10e56a140_Fn::_method_is_init(void) {
	return ((*this)._field_ident == jule::Str("init", 4));
}



inline jule::Bool _10e56a140_Fn::_method_is_anon(void) {
	return _11ce22a00_is_anon_ident((*this)._field_ident);
}



inline jule::Bool _10e56a140_Fn::_method_any_var(void) {
	return (jule::real((*this)._field_result) && (static_cast<jule::I64>((*this)._field_result->_field_idents.len()) > 0LL));
}



inline jule::Bool _10e56a140_Fn::_method_parameters_uses_generics(void) {
	if ((static_cast<jule::I64>((*this)._field_generics.len()) == 0LL)) {
		return false;
	}
	{
		auto &__julec_range_expr = (*this)._field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e56a140_Param> _10e56a140_p{jule::Ref<_10e56a140_Param>()};_10e56a140_p = *__julec_range_begin;
			_iter_begin_4708231296:;
			{
				if (_10e56a140_p->_method_is_self()) {
					goto _iter_next_4708231296;
				}
				jule::Str _9417_pk = _10e56a140_p->_field_kind->_field_kind->_method_to_str();
				{
					auto &__julec_range_expr = (*this)._field_generics;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_11ce1fd50_GenericDecl> _10e56a140_g{jule::Ref<_11ce1fd50_GenericDecl>()};_10e56a140_g = *__julec_range_begin;
						_iter_begin_4708236464:;
						{
							if ((static_cast<jule::Int>(_9417_pk.find(_10e56a140_g->_field_ident)) != -1LL)) {
								return true;
							}
						}
						_iter_next_4708236464:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _10e56a140_g = *__julec_range_begin; goto _iter_begin_4708236464; }
						_iter_end_4708236464:;
					}
				}
			}
			_iter_next_4708231296:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e56a140_p = *__julec_range_begin; goto _iter_begin_4708231296; }
			_iter_end_4708231296:;
		}
	}
	return false;
}



inline jule::Bool _10e56a140_Fn::_method_result_uses_generics(void) {
	if ((*this)._method_is_void()) {
		return false;
	} else if (((!jule::real((*this)._field_result->_field_kind)) || (!jule::real((*this)._field_result->_field_kind->_field_kind)))) {
		return false;
	}
	jule::Str _11313_rk = (*this)._field_result->_field_kind->_field_kind->_method_to_str();
	{
		auto &__julec_range_expr = (*this)._field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11ce1fd50_GenericDecl> _10e56a140_g{jule::Ref<_11ce1fd50_GenericDecl>()};_10e56a140_g = *__julec_range_begin;
			_iter_begin_4708250064:;
			{
				if ((static_cast<jule::Int>(_11313_rk.find(_10e56a140_g->_field_ident)) != -1LL)) {
					return true;
				}
			}
			_iter_next_4708250064:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e56a140_g = *__julec_range_begin; goto _iter_begin_4708250064; }
			_iter_end_4708250064:;
		}
	}
	return false;
}



inline jule::Ref<_10e56a140_FnIns> _10e56a140_Fn::_method_instance_force(void) {
	jule::Ref<_10e56a140_FnIns> _12617_ins = jule::new_struct<_10e56a140_FnIns>(new( std::nothrow ) _10e56a140_FnIns(jule::Ref<_10e3fc8f0_StructIns>(),this->self,jule::Slice<jule::Ref<_10eeb79b0_TypeKind>>(),jule::Slice<jule::Ref<_10e56a140_ParamIns>>(),jule::Ref<_10eeb79b0_TypeKind>(),jule::new_struct<_10e97fcf0_Scope>(new( std::nothrow ) _10e97fcf0_Scope()),jule::Fn<jule::Ref<_10ee8a260_Data>(jule::Ref<_10ee8a260_Eval>,jule::Ref<_11ce1fd50_FnCallExpr>,jule::Ref<_10ee8a260_Data>)>(),jule::Bool()));
	_12617_ins->_field_params=jule::Slice<jule::Ref<_10e56a140_ParamIns>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(this->self->_field_params.len())));
	{
		auto &__julec_range_expr = this->self->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e56a140_i{jule::Int()};_10e56a140_i = 0;
			jule::Ref<_10e56a140_Param> _10e56a140_p{jule::Ref<_10e56a140_Param>()};_10e56a140_p = *__julec_range_begin;
			_iter_begin_4708258880:;
			{
				_12617_ins->_field_params[static_cast<jule::Int>(_10e56a140_i)]=_10e56a140_p->_method_instance();
			}
			_iter_next_4708258880:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e56a140_i; _10e56a140_p = *__julec_range_begin; goto _iter_begin_4708258880; }
			_iter_end_4708258880:;
		}
	}
	if (jule::real(_12617_ins->_field_decl->_field_result)) {
		_12617_ins->_field_result=_12617_ins->_field_decl->_field_result->_field_kind->_field_kind;
	}
	return _12617_ins;
}



inline jule::Ref<_10e56a140_FnIns> _10e56a140_Fn::_method_instance(void) {
	if (((static_cast<jule::I64>(this->self->_field_generics.len()) == 0LL) && (static_cast<jule::I64>(this->self->_field_instances.len()) == 1LL))) {
		return this->self->_field_instances[static_cast<jule::Int>(0LL)];
	}
	return this->self->_method_instance_force();
}



inline std::tuple<jule::Bool,jule::Int> _10e56a140_Fn::_method_append_instance(jule::Ref<_10e56a140_FnIns> _15238_ins) {
	if ((static_cast<jule::I64>((*this)._field_generics.len()) == 0LL)) {
		if ((static_cast<jule::I64>((*this)._field_instances.len()) == 1LL)) {
			return std::make_tuple(false,0LL);
		}
		(*this)._field_instances=append((*this)._field_instances,jule::Slice<jule::Ref<_10e56a140_FnIns>>({_15238_ins}));
		return std::make_tuple(true,-1LL);
	}
	if ((static_cast<jule::I64>((*this)._field_instances.len()) == 0LL)) {
		(*this)._field_instances=append((*this)._field_instances,jule::Slice<jule::Ref<_10e56a140_FnIns>>({_15238_ins}));
		return std::make_tuple(true,-1LL);
	}
	{
		auto &__julec_range_expr = (*this)._field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e56a140_j{jule::Int()};_10e56a140_j = 0;
			jule::Ref<_10e56a140_FnIns> _10e56a140_ains{jule::Ref<_10e56a140_FnIns>()};_10e56a140_ains = *__julec_range_begin;
			_iter_begin_4708289488:;
			{
				{
					auto &__julec_range_expr = _10e56a140_ains->_field_generics;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Int _10e56a140_i{jule::Int()};_10e56a140_i = 0;
						jule::Ref<_10eeb79b0_TypeKind> _10e56a140_ag{jule::Ref<_10eeb79b0_TypeKind>()};_10e56a140_ag = *__julec_range_begin;
						_iter_begin_4708291696:;
						{
							if (_10e56a140_ag->_method_equals(_15238_ins->_field_generics[static_cast<jule::Int>(_10e56a140_i)])) {
								return std::make_tuple(false,_10e56a140_j);
							}
						}
						_iter_next_4708291696:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { ++_10e56a140_i; _10e56a140_ag = *__julec_range_begin; goto _iter_begin_4708291696; }
						_iter_end_4708291696:;
					}
				}
			}
			_iter_next_4708289488:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e56a140_j; _10e56a140_ains = *__julec_range_begin; goto _iter_begin_4708289488; }
			_iter_end_4708289488:;
		}
	}
	(*this)._field_instances=append((*this)._field_instances,jule::Slice<jule::Ref<_10e56a140_FnIns>>({_15238_ins}));
	return std::make_tuple(true,-1LL);
}







std::ostream &operator<<(std::ostream &_Stream, const _10e56a140_Fn &_Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_10e56a140_ParamIns> _10e56a140_Param::_method_instance(void) {
	return jule::new_struct<_10e56a140_ParamIns>(new( std::nothrow ) _10e56a140_ParamIns(this->self,jule::Ref<_10eeb79b0_TypeKind>()));
}



inline jule::Bool _10e56a140_Param::_method_is_self(void) {
	return (((*this)._field_ident == jule::Str("&self", 5)) || ((*this)._field_ident == jule::Str("self", 4)));
}



inline jule::Bool _10e56a140_Param::_method_is_ref(void) {
	return (((*this)._field_ident != jule::Str("", 0)) && ((*this)._field_ident[static_cast<jule::Int>(0LL)] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, const _10e56a140_Param &_Src) {
	_Stream << "Param{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_10e3fc8f0_FieldIns> _10e3fc8f0_Field::_method_instance(void) {
	return jule::new_struct<_10e3fc8f0_FieldIns>(new( std::nothrow ) _10e3fc8f0_FieldIns(this->self,this->self->_field_kind->_field_kind));
}







std::ostream &operator<<(std::ostream &_Stream, const _10e3fc8f0_Field &_Src) {
	_Stream << "Field{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e5e5b00_AssignInfo &_Src) {
	_Stream << "AssignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _11ce1fd50_Impl::_method_is_trait_impl(void) {
	return ((*this)._field_base._field_id != 0LLU);
}



inline jule::Bool _11ce1fd50_Impl::_method_is_struct_impl(void) {
	return ((*this)._field_base._field_id == 0LLU);
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_Impl &_Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_TraitDecl &_Src) {
	_Stream << "TraitDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_StructDecl &_Src) {
	_Stream << "StructDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_FieldDecl &_Src) {
	_Stream << "FieldDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _11ce1fd50_EnumDecl::_method_default_typed(void) {
	return (!jule::real((*this)._field_kind));
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_EnumDecl &_Src) {
	_Stream << "EnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _11ce1fd50_EnumItemDecl::_method_auto_expr(void) {
	return (!jule::real((*this)._field_expr));
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_EnumItemDecl &_Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_UseDecl &_Src) {
	_Stream << "UseDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "full:" << _Src._field_full << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_Case &_Src) {
	_Stream << "Case{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_TypeAliasDecl &_Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_Else &_Src) {
	_Stream << "Else{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_If &_Src) {
	_Stream << "If{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_ContSt &_Src) {
	_Stream << "ContSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_BreakSt &_Src) {
	_Stream << "BreakSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_VarDecl &_Src) {
	_Stream << "VarDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_FnDecl &_Src) {
	_Stream << "FnDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _11ce1fd50_ParamDecl::_method_is_self(void) {
	return (*this)._field_ident.has_suffix(jule::Str("self", 4));
}



inline jule::Bool _11ce1fd50_ParamDecl::_method_is_ref(void) {
	return (((*this)._field_ident != jule::Str("", 0)) && ((*this)._field_ident[static_cast<jule::Int>(0LL)] == '&'));
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_ParamDecl &_Src) {
	_Stream << "ParamDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_AssignLeft &_Src) {
	_Stream << "AssignLeft{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_GotoSt &_Src) {
	_Stream << "GotoSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_GenericDecl &_Src) {
	_Stream << "GenericDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_FnCallExpr &_Src) {
	_Stream << "FnCallExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "concurrent:" << _Src._field_concurrent;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _11ce1fd50_Expr::_method_is_fn_call(void) {
	if (((*this)._field_kind == nullptr)) {
		return false;
	}
	{
		auto _match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_FnCallExpr>>())) { goto _case_end_4699421984; }
		_case_begin_4699421984:;
		{
			return true;
		}
		goto _match_end_4699420480;
		_case_end_4699421984:;
		_case_begin_4699420592:;
		{
			return false;
		}
		goto _match_end_4699420480;
		_case_end_4699420592:;
		_match_end_4699420480:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_Expr &_Src) {
	_Stream << "Expr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _11ce1fd50_IdentTypeDecl::_method_is_prim(void) {
	return ((*this)._field_token._field_id == 1LLU);
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_IdentTypeDecl &_Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_TypeDecl &_Src) {
	_Stream << "TypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_Directive &_Src) {
	_Stream << "Directive{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "tag:" << _Src._field_tag << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _11ce1fd50_Comment::_method_is_directive(void) {
	return (*this)._field_text.has_prefix(jule::Str("jule:", 5));
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_Comment &_Src) {
	_Stream << "Comment{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _11ce1fd50_Node::_method_is_decl(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_EnumDecl>>() || _match_expr.type_is<jule::Ref<_11ce1fd50_FnDecl>>() || _match_expr.type_is<jule::Ref<_11ce1fd50_StructDecl>>() || _match_expr.type_is<jule::Ref<_11ce1fd50_TraitDecl>>() || _match_expr.type_is<jule::Ref<_11ce1fd50_TypeAliasDecl>>() || _match_expr.type_is<jule::Ref<_11ce1fd50_FieldDecl>>() || _match_expr.type_is<jule::Ref<_11ce1fd50_UseDecl>>() || _match_expr.type_is<jule::Ref<_11ce1fd50_VarDecl>>() || _match_expr.type_is<jule::Ref<_11ce1fd50_TypeDecl>>())) { goto _case_end_4699378560; }
		_case_begin_4699378560:;
		{
			return true;
		}
		goto _match_end_4699376656;
		_case_end_4699378560:;
		_case_begin_4699377408:;
		{
			return false;
		}
		goto _match_end_4699376656;
		_case_end_4699377408:;
		_match_end_4699376656:;
	}
}



inline jule::Bool _11ce1fd50_Node::_method_is_comment(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_Comment>>() || _match_expr.type_is<jule::Ref<_11ce1fd50_CommentGroup>>())) { goto _case_end_4699395600; }
		_case_begin_4699395600:;
		{
			return true;
		}
		goto _match_end_4699394400;
		_case_end_4699395600:;
		_case_begin_4699393696:;
		{
			return false;
		}
		goto _match_end_4699394400;
		_case_end_4699393696:;
		_match_end_4699394400:;
	}
}



inline jule::Bool _11ce1fd50_Node::_method_is_impl(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_Impl>>())) { goto _case_end_4699399472; }
		_case_begin_4699399472:;
		{
			return true;
		}
		goto _match_end_4699398272;
		_case_end_4699399472:;
		_case_begin_4699398384:;
		{
			return false;
		}
		goto _match_end_4699398272;
		_case_end_4699398384:;
		_match_end_4699398272:;
	}
}



inline jule::Bool _11ce1fd50_Node::_method_is_use_decl(void) {
	{
		auto _match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_UseDecl>>())) { goto _case_end_4699402992; }
		_case_begin_4699402992:;
		{
			return true;
		}
		goto _match_end_4699401888;
		_case_end_4699402992:;
		_case_begin_4699396704:;
		{
			return false;
		}
		goto _match_end_4699401888;
		_case_end_4699396704:;
		_match_end_4699401888:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce1fd50_Node &_Src) {
	_Stream << "Node{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline _10dba8790_Vector_0 _10dba8790_Vector_0::_static_method_new(jule::Int _4319_cap) {
	_10dba8790_Vector_0 _4417_vec = _10dba8790_Vector_0();
	if ((_4319_cap != 0LL)) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _10dba8790_Vector_0::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = ((*this)._field__buffer.len + _5324_delta);
	return (_5413_t * 2LL);
}



inline void _10dba8790_Vector_0::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<_11ce22a00_Token>(_5831_n);
	if ((_5917_new_heap == nullptr)) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if (((*this)._field__buffer.heap == nullptr)) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if (((*this)._field__buffer.len > 0LL)) {
			__jule_std_vector_copy_range<_11ce22a00_Token>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<_11ce22a00_Token>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _10dba8790_Vector_0::_method_review_allocation(jule::Int _8336_delta) {
	if ((((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _10dba8790_Vector_0::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _10dba8790_Vector_0::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _10dba8790_Vector_0::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _10dba8790_Vector_0::_method_set_len(jule::Int _10330_n) {
	if ((_10330_n < 0LL)) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if ((_10330_n >= (*this)._field__buffer.len)) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline _11ce22a00_Token _10dba8790_Vector_0::_method_at(jule::Int _11525_i) {
	if (((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len))) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<_11ce22a00_Token>((*this)._field__buffer.heap,_11525_i);
}



inline void _10dba8790_Vector_0::_method_set(jule::Int _12326_i,_11ce22a00_Token _12338_item) {
	if (((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len))) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<_11ce22a00_Token>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _10dba8790_Vector_0::_method_push(_11ce22a00_Token _13131_item) {
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	{
		__jule_std_vector_heap_assign<_11ce22a00_Token>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _10dba8790_Vector_0::_method_push_front(_11ce22a00_Token _14637_item) {
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _15217_i = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4563144464:;
	if (!((_15217_i >= 0LL))) { goto _iter_end_4563144464; }
	{
		{
			__jule_std_vector_heap_move<_11ce22a00_Token>((*this)._field__buffer.heap,_15217_i,(_15217_i + 1LL));
		}
	}
	_iter_next_4563144464:;
	(_15217_i)--;
	goto _iter_begin_4563144464;
	_iter_end_4563144464:;
	{
		__jule_std_vector_heap_assign<_11ce22a00_Token>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _10dba8790_Vector_0::_method_append(jule::Slice<_11ce22a00_Token> _16333_items) {
	if ((static_cast<jule::I64>(_16333_items.len()) == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<_11ce22a00_Token>(((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(_11ce22a00_Token)) * (*this)._field__buffer.len)))))),__jule_get_pointer_of_slice<_11ce22a00_Token>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _10dba8790_Vector_0::_method_merge(_10dba8790_Vector_0 _18032_vec) {
	if ((_18032_vec._field__buffer.len == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<_11ce22a00_Token>(((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(_11ce22a00_Token)) * (*this)._field__buffer.len)))))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _10dba8790_Vector_0::_method_merge_front(_10dba8790_Vector_0 _19738_vec) {
	if ((_19738_vec._field__buffer.len == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4563191024:;
	if (!((_20517_i >= 0LL))) { goto _iter_end_4563191024; }
	{
		{
			__jule_std_vector_heap_move<_11ce22a00_Token>((*this)._field__buffer.heap,_20517_i,(_20517_i + _19738_vec._field__buffer.len));
		}
	}
	_iter_next_4563191024:;
	(_20517_i)--;
	goto _iter_begin_4563191024;
	_iter_end_4563191024:;
	{
		__jule_std_vector_copy_range<_11ce22a00_Token>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _10dba8790_Vector_0::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if ((_22347_n < 1LL)) {
		return;
	}
	if ((_22335_start < -1LL)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if ((_22335_start >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if (((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = (_22335_start + _22347_n);
	_iter_begin_4563209104:;
	if (!((_23917_i < (*this)._field__buffer.len))) { goto _iter_end_4563209104; }
	{
		{
			__jule_std_vector_heap_move<_11ce22a00_Token>((*this)._field__buffer.heap,_23917_i,(_23917_i - _22347_n));
		}
	}
	_iter_next_4563209104:;
	(_23917_i)++;
	goto _iter_begin_4563209104;
	_iter_end_4563209104:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _10dba8790_Vector_0::_method_insert(jule::Int _24829_i,_11ce22a00_Token _24841_item) {
	if ((_24829_i < 0LL)) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if ((_24829_i > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _26117_j = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4563226608:;
	if (!((_26117_j >= _24829_i))) { goto _iter_end_4563226608; }
	{
		{
			__jule_std_vector_heap_move<_11ce22a00_Token>((*this)._field__buffer.heap,_26117_j,(_26117_j + 1LL));
		}
	}
	_iter_next_4563226608:;
	(_26117_j)--;
	goto _iter_begin_4563226608;
	_iter_end_4563226608:;
	{
		__jule_std_vector_heap_assign<_11ce22a00_Token>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _10dba8790_Vector_0 _10dba8790_Vector_0::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if ((_27228_start < 0LL)) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if ((_27228_start > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if ((_27240_end > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if ((_27240_end < 0LL)) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if ((_27228_start > _27240_end)) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if ((_27228_start == _27240_end)) {
		return _10dba8790_Vector_0::_static_method_new(0LL);
	}
	_10dba8790_Vector_0 _29317_vec = _10dba8790_Vector_0::_static_method_new((_27240_end - _27228_start));
	{
		__jule_std_vector_copy_range<_11ce22a00_Token>(_29317_vec._field__buffer.heap,((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(_11ce22a00_Token)) * _27228_start)))))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _10dba8790_Vector_0 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _10dba8790_Vector_1 _10dba8790_Vector_1::_static_method_new(jule::Int _4319_cap) {
	_10dba8790_Vector_1 _4417_vec = _10dba8790_Vector_1();
	if ((_4319_cap != 0LL)) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _10dba8790_Vector_1::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = ((*this)._field__buffer.len + _5324_delta);
	return (_5413_t * 2LL);
}



inline void _10dba8790_Vector_1::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_11ce1fd50_Directive>>(_5831_n);
	if ((_5917_new_heap == nullptr)) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if (((*this)._field__buffer.heap == nullptr)) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if (((*this)._field__buffer.len > 0LL)) {
			__jule_std_vector_copy_range<jule::Ref<_11ce1fd50_Directive>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_11ce1fd50_Directive>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _10dba8790_Vector_1::_method_review_allocation(jule::Int _8336_delta) {
	if ((((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _10dba8790_Vector_1::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _10dba8790_Vector_1::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _10dba8790_Vector_1::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _10dba8790_Vector_1::_method_set_len(jule::Int _10330_n) {
	if ((_10330_n < 0LL)) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if ((_10330_n >= (*this)._field__buffer.len)) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_11ce1fd50_Directive> _10dba8790_Vector_1::_method_at(jule::Int _11525_i) {
	if (((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len))) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_11ce1fd50_Directive>>((*this)._field__buffer.heap,_11525_i);
}



inline void _10dba8790_Vector_1::_method_set(jule::Int _12326_i,jule::Ref<_11ce1fd50_Directive> _12338_item) {
	if (((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len))) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_11ce1fd50_Directive>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _10dba8790_Vector_1::_method_push(jule::Ref<_11ce1fd50_Directive> _13131_item) {
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_11ce1fd50_Directive>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _10dba8790_Vector_1::_method_push_front(jule::Ref<_11ce1fd50_Directive> _14637_item) {
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _15217_i = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4698331232:;
	if (!((_15217_i >= 0LL))) { goto _iter_end_4698331232; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11ce1fd50_Directive>>((*this)._field__buffer.heap,_15217_i,(_15217_i + 1LL));
		}
	}
	_iter_next_4698331232:;
	(_15217_i)--;
	goto _iter_begin_4698331232;
	_iter_end_4698331232:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_11ce1fd50_Directive>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _10dba8790_Vector_1::_method_append(jule::Slice<jule::Ref<_11ce1fd50_Directive>> _16333_items) {
	if ((static_cast<jule::I64>(_16333_items.len()) == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_11ce1fd50_Directive>>(((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_11ce1fd50_Directive>)) * (*this)._field__buffer.len)))))),__jule_get_pointer_of_slice<jule::Ref<_11ce1fd50_Directive>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _10dba8790_Vector_1::_method_merge(_10dba8790_Vector_1 _18032_vec) {
	if ((_18032_vec._field__buffer.len == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_11ce1fd50_Directive>>(((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_11ce1fd50_Directive>)) * (*this)._field__buffer.len)))))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _10dba8790_Vector_1::_method_merge_front(_10dba8790_Vector_1 _19738_vec) {
	if ((_19738_vec._field__buffer.len == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4698377648:;
	if (!((_20517_i >= 0LL))) { goto _iter_end_4698377648; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11ce1fd50_Directive>>((*this)._field__buffer.heap,_20517_i,(_20517_i + _19738_vec._field__buffer.len));
		}
	}
	_iter_next_4698377648:;
	(_20517_i)--;
	goto _iter_begin_4698377648;
	_iter_end_4698377648:;
	{
		__jule_std_vector_copy_range<jule::Ref<_11ce1fd50_Directive>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _10dba8790_Vector_1::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if ((_22347_n < 1LL)) {
		return;
	}
	if ((_22335_start < -1LL)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if ((_22335_start >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if (((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = (_22335_start + _22347_n);
	_iter_begin_4698394416:;
	if (!((_23917_i < (*this)._field__buffer.len))) { goto _iter_end_4698394416; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11ce1fd50_Directive>>((*this)._field__buffer.heap,_23917_i,(_23917_i - _22347_n));
		}
	}
	_iter_next_4698394416:;
	(_23917_i)++;
	goto _iter_begin_4698394416;
	_iter_end_4698394416:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _10dba8790_Vector_1::_method_insert(jule::Int _24829_i,jule::Ref<_11ce1fd50_Directive> _24841_item) {
	if ((_24829_i < 0LL)) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if ((_24829_i > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _26117_j = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4698413088:;
	if (!((_26117_j >= _24829_i))) { goto _iter_end_4698413088; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11ce1fd50_Directive>>((*this)._field__buffer.heap,_26117_j,(_26117_j + 1LL));
		}
	}
	_iter_next_4698413088:;
	(_26117_j)--;
	goto _iter_begin_4698413088;
	_iter_end_4698413088:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_11ce1fd50_Directive>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _10dba8790_Vector_1 _10dba8790_Vector_1::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if ((_27228_start < 0LL)) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if ((_27228_start > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if ((_27240_end > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if ((_27240_end < 0LL)) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if ((_27228_start > _27240_end)) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if ((_27228_start == _27240_end)) {
		return _10dba8790_Vector_1::_static_method_new(0LL);
	}
	_10dba8790_Vector_1 _29317_vec = _10dba8790_Vector_1::_static_method_new((_27240_end - _27228_start));
	{
		__jule_std_vector_copy_range<jule::Ref<_11ce1fd50_Directive>>(_29317_vec._field__buffer.heap,((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_11ce1fd50_Directive>)) * _27228_start)))))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _10dba8790_Vector_1 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _10dba8790_Vector_2 _10dba8790_Vector_2::_static_method_new(jule::Int _4319_cap) {
	_10dba8790_Vector_2 _4417_vec = _10dba8790_Vector_2();
	if ((_4319_cap != 0LL)) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _10dba8790_Vector_2::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = ((*this)._field__buffer.len + _5324_delta);
	return (_5413_t * 2LL);
}



inline void _10dba8790_Vector_2::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_11ce1fd50_UseDecl>>(_5831_n);
	if ((_5917_new_heap == nullptr)) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if (((*this)._field__buffer.heap == nullptr)) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if (((*this)._field__buffer.len > 0LL)) {
			__jule_std_vector_copy_range<jule::Ref<_11ce1fd50_UseDecl>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_11ce1fd50_UseDecl>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _10dba8790_Vector_2::_method_review_allocation(jule::Int _8336_delta) {
	if ((((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _10dba8790_Vector_2::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _10dba8790_Vector_2::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _10dba8790_Vector_2::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _10dba8790_Vector_2::_method_set_len(jule::Int _10330_n) {
	if ((_10330_n < 0LL)) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if ((_10330_n >= (*this)._field__buffer.len)) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_11ce1fd50_UseDecl> _10dba8790_Vector_2::_method_at(jule::Int _11525_i) {
	if (((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len))) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_11ce1fd50_UseDecl>>((*this)._field__buffer.heap,_11525_i);
}



inline void _10dba8790_Vector_2::_method_set(jule::Int _12326_i,jule::Ref<_11ce1fd50_UseDecl> _12338_item) {
	if (((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len))) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_11ce1fd50_UseDecl>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _10dba8790_Vector_2::_method_push(jule::Ref<_11ce1fd50_UseDecl> _13131_item) {
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_11ce1fd50_UseDecl>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _10dba8790_Vector_2::_method_push_front(jule::Ref<_11ce1fd50_UseDecl> _14637_item) {
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _15217_i = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4698545008:;
	if (!((_15217_i >= 0LL))) { goto _iter_end_4698545008; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11ce1fd50_UseDecl>>((*this)._field__buffer.heap,_15217_i,(_15217_i + 1LL));
		}
	}
	_iter_next_4698545008:;
	(_15217_i)--;
	goto _iter_begin_4698545008;
	_iter_end_4698545008:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_11ce1fd50_UseDecl>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _10dba8790_Vector_2::_method_append(jule::Slice<jule::Ref<_11ce1fd50_UseDecl>> _16333_items) {
	if ((static_cast<jule::I64>(_16333_items.len()) == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_11ce1fd50_UseDecl>>(((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_11ce1fd50_UseDecl>)) * (*this)._field__buffer.len)))))),__jule_get_pointer_of_slice<jule::Ref<_11ce1fd50_UseDecl>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _10dba8790_Vector_2::_method_merge(_10dba8790_Vector_2 _18032_vec) {
	if ((_18032_vec._field__buffer.len == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_11ce1fd50_UseDecl>>(((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_11ce1fd50_UseDecl>)) * (*this)._field__buffer.len)))))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _10dba8790_Vector_2::_method_merge_front(_10dba8790_Vector_2 _19738_vec) {
	if ((_19738_vec._field__buffer.len == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4698585632:;
	if (!((_20517_i >= 0LL))) { goto _iter_end_4698585632; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11ce1fd50_UseDecl>>((*this)._field__buffer.heap,_20517_i,(_20517_i + _19738_vec._field__buffer.len));
		}
	}
	_iter_next_4698585632:;
	(_20517_i)--;
	goto _iter_begin_4698585632;
	_iter_end_4698585632:;
	{
		__jule_std_vector_copy_range<jule::Ref<_11ce1fd50_UseDecl>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _10dba8790_Vector_2::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if ((_22347_n < 1LL)) {
		return;
	}
	if ((_22335_start < -1LL)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if ((_22335_start >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if (((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = (_22335_start + _22347_n);
	_iter_begin_4698602400:;
	if (!((_23917_i < (*this)._field__buffer.len))) { goto _iter_end_4698602400; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11ce1fd50_UseDecl>>((*this)._field__buffer.heap,_23917_i,(_23917_i - _22347_n));
		}
	}
	_iter_next_4698602400:;
	(_23917_i)++;
	goto _iter_begin_4698602400;
	_iter_end_4698602400:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _10dba8790_Vector_2::_method_insert(jule::Int _24829_i,jule::Ref<_11ce1fd50_UseDecl> _24841_item) {
	if ((_24829_i < 0LL)) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if ((_24829_i > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _26117_j = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4698621072:;
	if (!((_26117_j >= _24829_i))) { goto _iter_end_4698621072; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11ce1fd50_UseDecl>>((*this)._field__buffer.heap,_26117_j,(_26117_j + 1LL));
		}
	}
	_iter_next_4698621072:;
	(_26117_j)--;
	goto _iter_begin_4698621072;
	_iter_end_4698621072:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_11ce1fd50_UseDecl>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _10dba8790_Vector_2 _10dba8790_Vector_2::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if ((_27228_start < 0LL)) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if ((_27228_start > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if ((_27240_end > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if ((_27240_end < 0LL)) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if ((_27228_start > _27240_end)) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if ((_27228_start == _27240_end)) {
		return _10dba8790_Vector_2::_static_method_new(0LL);
	}
	_10dba8790_Vector_2 _29317_vec = _10dba8790_Vector_2::_static_method_new((_27240_end - _27228_start));
	{
		__jule_std_vector_copy_range<jule::Ref<_11ce1fd50_UseDecl>>(_29317_vec._field__buffer.heap,((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_11ce1fd50_UseDecl>)) * _27228_start)))))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _10dba8790_Vector_2 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _10dba8790_Vector_3 _10dba8790_Vector_3::_static_method_new(jule::Int _4319_cap) {
	_10dba8790_Vector_3 _4417_vec = _10dba8790_Vector_3();
	if ((_4319_cap != 0LL)) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _10dba8790_Vector_3::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = ((*this)._field__buffer.len + _5324_delta);
	return (_5413_t * 2LL);
}



inline void _10dba8790_Vector_3::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_11ce1fd50_Impl>>(_5831_n);
	if ((_5917_new_heap == nullptr)) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if (((*this)._field__buffer.heap == nullptr)) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if (((*this)._field__buffer.len > 0LL)) {
			__jule_std_vector_copy_range<jule::Ref<_11ce1fd50_Impl>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_11ce1fd50_Impl>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _10dba8790_Vector_3::_method_review_allocation(jule::Int _8336_delta) {
	if ((((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _10dba8790_Vector_3::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _10dba8790_Vector_3::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _10dba8790_Vector_3::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _10dba8790_Vector_3::_method_set_len(jule::Int _10330_n) {
	if ((_10330_n < 0LL)) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if ((_10330_n >= (*this)._field__buffer.len)) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_11ce1fd50_Impl> _10dba8790_Vector_3::_method_at(jule::Int _11525_i) {
	if (((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len))) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_11ce1fd50_Impl>>((*this)._field__buffer.heap,_11525_i);
}



inline void _10dba8790_Vector_3::_method_set(jule::Int _12326_i,jule::Ref<_11ce1fd50_Impl> _12338_item) {
	if (((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len))) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_11ce1fd50_Impl>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _10dba8790_Vector_3::_method_push(jule::Ref<_11ce1fd50_Impl> _13131_item) {
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_11ce1fd50_Impl>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _10dba8790_Vector_3::_method_push_front(jule::Ref<_11ce1fd50_Impl> _14637_item) {
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _15217_i = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4698785120:;
	if (!((_15217_i >= 0LL))) { goto _iter_end_4698785120; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11ce1fd50_Impl>>((*this)._field__buffer.heap,_15217_i,(_15217_i + 1LL));
		}
	}
	_iter_next_4698785120:;
	(_15217_i)--;
	goto _iter_begin_4698785120;
	_iter_end_4698785120:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_11ce1fd50_Impl>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _10dba8790_Vector_3::_method_append(jule::Slice<jule::Ref<_11ce1fd50_Impl>> _16333_items) {
	if ((static_cast<jule::I64>(_16333_items.len()) == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_11ce1fd50_Impl>>(((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_11ce1fd50_Impl>)) * (*this)._field__buffer.len)))))),__jule_get_pointer_of_slice<jule::Ref<_11ce1fd50_Impl>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _10dba8790_Vector_3::_method_merge(_10dba8790_Vector_3 _18032_vec) {
	if ((_18032_vec._field__buffer.len == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_11ce1fd50_Impl>>(((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_11ce1fd50_Impl>)) * (*this)._field__buffer.len)))))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _10dba8790_Vector_3::_method_merge_front(_10dba8790_Vector_3 _19738_vec) {
	if ((_19738_vec._field__buffer.len == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4698825520:;
	if (!((_20517_i >= 0LL))) { goto _iter_end_4698825520; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11ce1fd50_Impl>>((*this)._field__buffer.heap,_20517_i,(_20517_i + _19738_vec._field__buffer.len));
		}
	}
	_iter_next_4698825520:;
	(_20517_i)--;
	goto _iter_begin_4698825520;
	_iter_end_4698825520:;
	{
		__jule_std_vector_copy_range<jule::Ref<_11ce1fd50_Impl>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _10dba8790_Vector_3::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if ((_22347_n < 1LL)) {
		return;
	}
	if ((_22335_start < -1LL)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if ((_22335_start >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if (((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = (_22335_start + _22347_n);
	_iter_begin_4698842288:;
	if (!((_23917_i < (*this)._field__buffer.len))) { goto _iter_end_4698842288; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11ce1fd50_Impl>>((*this)._field__buffer.heap,_23917_i,(_23917_i - _22347_n));
		}
	}
	_iter_next_4698842288:;
	(_23917_i)++;
	goto _iter_begin_4698842288;
	_iter_end_4698842288:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _10dba8790_Vector_3::_method_insert(jule::Int _24829_i,jule::Ref<_11ce1fd50_Impl> _24841_item) {
	if ((_24829_i < 0LL)) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if ((_24829_i > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _26117_j = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4698868096:;
	if (!((_26117_j >= _24829_i))) { goto _iter_end_4698868096; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11ce1fd50_Impl>>((*this)._field__buffer.heap,_26117_j,(_26117_j + 1LL));
		}
	}
	_iter_next_4698868096:;
	(_26117_j)--;
	goto _iter_begin_4698868096;
	_iter_end_4698868096:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_11ce1fd50_Impl>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _10dba8790_Vector_3 _10dba8790_Vector_3::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if ((_27228_start < 0LL)) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if ((_27228_start > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if ((_27240_end > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if ((_27240_end < 0LL)) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if ((_27228_start > _27240_end)) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if ((_27228_start == _27240_end)) {
		return _10dba8790_Vector_3::_static_method_new(0LL);
	}
	_10dba8790_Vector_3 _29317_vec = _10dba8790_Vector_3::_static_method_new((_27240_end - _27228_start));
	{
		__jule_std_vector_copy_range<jule::Ref<_11ce1fd50_Impl>>(_29317_vec._field__buffer.heap,((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_11ce1fd50_Impl>)) * _27228_start)))))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _10dba8790_Vector_3 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _10dba8790_Vector_4 _10dba8790_Vector_4::_static_method_new(jule::Int _4319_cap) {
	_10dba8790_Vector_4 _4417_vec = _10dba8790_Vector_4();
	if ((_4319_cap != 0LL)) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _10dba8790_Vector_4::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = ((*this)._field__buffer.len + _5324_delta);
	return (_5413_t * 2LL);
}



inline void _10dba8790_Vector_4::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_11ce1fd50_Comment>>(_5831_n);
	if ((_5917_new_heap == nullptr)) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if (((*this)._field__buffer.heap == nullptr)) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if (((*this)._field__buffer.len > 0LL)) {
			__jule_std_vector_copy_range<jule::Ref<_11ce1fd50_Comment>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_11ce1fd50_Comment>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _10dba8790_Vector_4::_method_review_allocation(jule::Int _8336_delta) {
	if ((((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _10dba8790_Vector_4::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _10dba8790_Vector_4::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _10dba8790_Vector_4::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _10dba8790_Vector_4::_method_set_len(jule::Int _10330_n) {
	if ((_10330_n < 0LL)) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if ((_10330_n >= (*this)._field__buffer.len)) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_11ce1fd50_Comment> _10dba8790_Vector_4::_method_at(jule::Int _11525_i) {
	if (((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len))) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_11ce1fd50_Comment>>((*this)._field__buffer.heap,_11525_i);
}



inline void _10dba8790_Vector_4::_method_set(jule::Int _12326_i,jule::Ref<_11ce1fd50_Comment> _12338_item) {
	if (((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len))) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_11ce1fd50_Comment>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _10dba8790_Vector_4::_method_push(jule::Ref<_11ce1fd50_Comment> _13131_item) {
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_11ce1fd50_Comment>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _10dba8790_Vector_4::_method_push_front(jule::Ref<_11ce1fd50_Comment> _14637_item) {
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _15217_i = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4698990864:;
	if (!((_15217_i >= 0LL))) { goto _iter_end_4698990864; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11ce1fd50_Comment>>((*this)._field__buffer.heap,_15217_i,(_15217_i + 1LL));
		}
	}
	_iter_next_4698990864:;
	(_15217_i)--;
	goto _iter_begin_4698990864;
	_iter_end_4698990864:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_11ce1fd50_Comment>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _10dba8790_Vector_4::_method_append(jule::Slice<jule::Ref<_11ce1fd50_Comment>> _16333_items) {
	if ((static_cast<jule::I64>(_16333_items.len()) == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_11ce1fd50_Comment>>(((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_11ce1fd50_Comment>)) * (*this)._field__buffer.len)))))),__jule_get_pointer_of_slice<jule::Ref<_11ce1fd50_Comment>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _10dba8790_Vector_4::_method_merge(_10dba8790_Vector_4 _18032_vec) {
	if ((_18032_vec._field__buffer.len == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_11ce1fd50_Comment>>(((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_11ce1fd50_Comment>)) * (*this)._field__buffer.len)))))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _10dba8790_Vector_4::_method_merge_front(_10dba8790_Vector_4 _19738_vec) {
	if ((_19738_vec._field__buffer.len == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4699031168:;
	if (!((_20517_i >= 0LL))) { goto _iter_end_4699031168; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11ce1fd50_Comment>>((*this)._field__buffer.heap,_20517_i,(_20517_i + _19738_vec._field__buffer.len));
		}
	}
	_iter_next_4699031168:;
	(_20517_i)--;
	goto _iter_begin_4699031168;
	_iter_end_4699031168:;
	{
		__jule_std_vector_copy_range<jule::Ref<_11ce1fd50_Comment>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _10dba8790_Vector_4::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if ((_22347_n < 1LL)) {
		return;
	}
	if ((_22335_start < -1LL)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if ((_22335_start >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if (((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = (_22335_start + _22347_n);
	_iter_begin_4699047936:;
	if (!((_23917_i < (*this)._field__buffer.len))) { goto _iter_end_4699047936; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11ce1fd50_Comment>>((*this)._field__buffer.heap,_23917_i,(_23917_i - _22347_n));
		}
	}
	_iter_next_4699047936:;
	(_23917_i)++;
	goto _iter_begin_4699047936;
	_iter_end_4699047936:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _10dba8790_Vector_4::_method_insert(jule::Int _24829_i,jule::Ref<_11ce1fd50_Comment> _24841_item) {
	if ((_24829_i < 0LL)) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if ((_24829_i > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _26117_j = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4699066608:;
	if (!((_26117_j >= _24829_i))) { goto _iter_end_4699066608; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_11ce1fd50_Comment>>((*this)._field__buffer.heap,_26117_j,(_26117_j + 1LL));
		}
	}
	_iter_next_4699066608:;
	(_26117_j)--;
	goto _iter_begin_4699066608;
	_iter_end_4699066608:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_11ce1fd50_Comment>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _10dba8790_Vector_4 _10dba8790_Vector_4::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if ((_27228_start < 0LL)) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if ((_27228_start > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if ((_27240_end > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if ((_27240_end < 0LL)) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if ((_27228_start > _27240_end)) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if ((_27228_start == _27240_end)) {
		return _10dba8790_Vector_4::_static_method_new(0LL);
	}
	_10dba8790_Vector_4 _29317_vec = _10dba8790_Vector_4::_static_method_new((_27240_end - _27228_start));
	{
		__jule_std_vector_copy_range<jule::Ref<_11ce1fd50_Comment>>(_29317_vec._field__buffer.heap,((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_11ce1fd50_Comment>)) * _27228_start)))))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _10dba8790_Vector_4 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _10dba8790_Vector_5 _10dba8790_Vector_5::_static_method_new(jule::Int _4319_cap) {
	_10dba8790_Vector_5 _4417_vec = _10dba8790_Vector_5();
	if ((_4319_cap != 0LL)) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _10dba8790_Vector_5::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = ((*this)._field__buffer.len + _5324_delta);
	return (_5413_t * 2LL);
}



inline void _10dba8790_Vector_5::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<_11ce1fd50_Node>(_5831_n);
	if ((_5917_new_heap == nullptr)) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if (((*this)._field__buffer.heap == nullptr)) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if (((*this)._field__buffer.len > 0LL)) {
			__jule_std_vector_copy_range<_11ce1fd50_Node>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<_11ce1fd50_Node>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _10dba8790_Vector_5::_method_review_allocation(jule::Int _8336_delta) {
	if ((((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _10dba8790_Vector_5::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _10dba8790_Vector_5::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _10dba8790_Vector_5::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _10dba8790_Vector_5::_method_set_len(jule::Int _10330_n) {
	if ((_10330_n < 0LL)) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if ((_10330_n >= (*this)._field__buffer.len)) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline _11ce1fd50_Node _10dba8790_Vector_5::_method_at(jule::Int _11525_i) {
	if (((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len))) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<_11ce1fd50_Node>((*this)._field__buffer.heap,_11525_i);
}



inline void _10dba8790_Vector_5::_method_set(jule::Int _12326_i,_11ce1fd50_Node _12338_item) {
	if (((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len))) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<_11ce1fd50_Node>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _10dba8790_Vector_5::_method_push(_11ce1fd50_Node _13131_item) {
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	{
		__jule_std_vector_heap_assign<_11ce1fd50_Node>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _10dba8790_Vector_5::_method_push_front(_11ce1fd50_Node _14637_item) {
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _15217_i = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4699197744:;
	if (!((_15217_i >= 0LL))) { goto _iter_end_4699197744; }
	{
		{
			__jule_std_vector_heap_move<_11ce1fd50_Node>((*this)._field__buffer.heap,_15217_i,(_15217_i + 1LL));
		}
	}
	_iter_next_4699197744:;
	(_15217_i)--;
	goto _iter_begin_4699197744;
	_iter_end_4699197744:;
	{
		__jule_std_vector_heap_assign<_11ce1fd50_Node>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _10dba8790_Vector_5::_method_append(jule::Slice<_11ce1fd50_Node> _16333_items) {
	if ((static_cast<jule::I64>(_16333_items.len()) == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<_11ce1fd50_Node>(((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(_11ce1fd50_Node)) * (*this)._field__buffer.len)))))),__jule_get_pointer_of_slice<_11ce1fd50_Node>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _10dba8790_Vector_5::_method_merge(_10dba8790_Vector_5 _18032_vec) {
	if ((_18032_vec._field__buffer.len == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<_11ce1fd50_Node>(((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(_11ce1fd50_Node)) * (*this)._field__buffer.len)))))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _10dba8790_Vector_5::_method_merge_front(_10dba8790_Vector_5 _19738_vec) {
	if ((_19738_vec._field__buffer.len == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4699238208:;
	if (!((_20517_i >= 0LL))) { goto _iter_end_4699238208; }
	{
		{
			__jule_std_vector_heap_move<_11ce1fd50_Node>((*this)._field__buffer.heap,_20517_i,(_20517_i + _19738_vec._field__buffer.len));
		}
	}
	_iter_next_4699238208:;
	(_20517_i)--;
	goto _iter_begin_4699238208;
	_iter_end_4699238208:;
	{
		__jule_std_vector_copy_range<_11ce1fd50_Node>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _10dba8790_Vector_5::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if ((_22347_n < 1LL)) {
		return;
	}
	if ((_22335_start < -1LL)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if ((_22335_start >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if (((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = (_22335_start + _22347_n);
	_iter_begin_4699254976:;
	if (!((_23917_i < (*this)._field__buffer.len))) { goto _iter_end_4699254976; }
	{
		{
			__jule_std_vector_heap_move<_11ce1fd50_Node>((*this)._field__buffer.heap,_23917_i,(_23917_i - _22347_n));
		}
	}
	_iter_next_4699254976:;
	(_23917_i)++;
	goto _iter_begin_4699254976;
	_iter_end_4699254976:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _10dba8790_Vector_5::_method_insert(jule::Int _24829_i,_11ce1fd50_Node _24841_item) {
	if ((_24829_i < 0LL)) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if ((_24829_i > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _26117_j = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4699273648:;
	if (!((_26117_j >= _24829_i))) { goto _iter_end_4699273648; }
	{
		{
			__jule_std_vector_heap_move<_11ce1fd50_Node>((*this)._field__buffer.heap,_26117_j,(_26117_j + 1LL));
		}
	}
	_iter_next_4699273648:;
	(_26117_j)--;
	goto _iter_begin_4699273648;
	_iter_end_4699273648:;
	{
		__jule_std_vector_heap_assign<_11ce1fd50_Node>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _10dba8790_Vector_5 _10dba8790_Vector_5::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if ((_27228_start < 0LL)) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if ((_27228_start > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if ((_27240_end > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if ((_27240_end < 0LL)) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if ((_27228_start > _27240_end)) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if ((_27228_start == _27240_end)) {
		return _10dba8790_Vector_5::_static_method_new(0LL);
	}
	_10dba8790_Vector_5 _29317_vec = _10dba8790_Vector_5::_static_method_new((_27240_end - _27228_start));
	{
		__jule_std_vector_copy_range<_11ce1fd50_Node>(_29317_vec._field__buffer.heap,((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(_11ce1fd50_Node)) * _27228_start)))))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _10dba8790_Vector_5 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _10dba8790_Vector_6 _10dba8790_Vector_6::_static_method_new(jule::Int _4319_cap) {
	_10dba8790_Vector_6 _4417_vec = _10dba8790_Vector_6();
	if ((_4319_cap != 0LL)) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _10dba8790_Vector_6::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = ((*this)._field__buffer.len + _5324_delta);
	return (_5413_t * 2LL);
}



inline void _10dba8790_Vector_6::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<_10e8ca650_Pass>(_5831_n);
	if ((_5917_new_heap == nullptr)) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if (((*this)._field__buffer.heap == nullptr)) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if (((*this)._field__buffer.len > 0LL)) {
			__jule_std_vector_copy_range<_10e8ca650_Pass>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<_10e8ca650_Pass>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _10dba8790_Vector_6::_method_review_allocation(jule::Int _8336_delta) {
	if ((((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _10dba8790_Vector_6::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _10dba8790_Vector_6::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _10dba8790_Vector_6::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _10dba8790_Vector_6::_method_set_len(jule::Int _10330_n) {
	if ((_10330_n < 0LL)) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if ((_10330_n >= (*this)._field__buffer.len)) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline _10e8ca650_Pass _10dba8790_Vector_6::_method_at(jule::Int _11525_i) {
	if (((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len))) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<_10e8ca650_Pass>((*this)._field__buffer.heap,_11525_i);
}



inline void _10dba8790_Vector_6::_method_set(jule::Int _12326_i,_10e8ca650_Pass _12338_item) {
	if (((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len))) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<_10e8ca650_Pass>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _10dba8790_Vector_6::_method_push(_10e8ca650_Pass _13131_item) {
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	{
		__jule_std_vector_heap_assign<_10e8ca650_Pass>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _10dba8790_Vector_6::_method_push_front(_10e8ca650_Pass _14637_item) {
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _15217_i = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4704214768:;
	if (!((_15217_i >= 0LL))) { goto _iter_end_4704214768; }
	{
		{
			__jule_std_vector_heap_move<_10e8ca650_Pass>((*this)._field__buffer.heap,_15217_i,(_15217_i + 1LL));
		}
	}
	_iter_next_4704214768:;
	(_15217_i)--;
	goto _iter_begin_4704214768;
	_iter_end_4704214768:;
	{
		__jule_std_vector_heap_assign<_10e8ca650_Pass>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _10dba8790_Vector_6::_method_append(jule::Slice<_10e8ca650_Pass> _16333_items) {
	if ((static_cast<jule::I64>(_16333_items.len()) == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<_10e8ca650_Pass>(((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(_10e8ca650_Pass)) * (*this)._field__buffer.len)))))),__jule_get_pointer_of_slice<_10e8ca650_Pass>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _10dba8790_Vector_6::_method_merge(_10dba8790_Vector_6 _18032_vec) {
	if ((_18032_vec._field__buffer.len == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<_10e8ca650_Pass>(((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(_10e8ca650_Pass)) * (*this)._field__buffer.len)))))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _10dba8790_Vector_6::_method_merge_front(_10dba8790_Vector_6 _19738_vec) {
	if ((_19738_vec._field__buffer.len == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4704254336:;
	if (!((_20517_i >= 0LL))) { goto _iter_end_4704254336; }
	{
		{
			__jule_std_vector_heap_move<_10e8ca650_Pass>((*this)._field__buffer.heap,_20517_i,(_20517_i + _19738_vec._field__buffer.len));
		}
	}
	_iter_next_4704254336:;
	(_20517_i)--;
	goto _iter_begin_4704254336;
	_iter_end_4704254336:;
	{
		__jule_std_vector_copy_range<_10e8ca650_Pass>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _10dba8790_Vector_6::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if ((_22347_n < 1LL)) {
		return;
	}
	if ((_22335_start < -1LL)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if ((_22335_start >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if (((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = (_22335_start + _22347_n);
	_iter_begin_4704272272:;
	if (!((_23917_i < (*this)._field__buffer.len))) { goto _iter_end_4704272272; }
	{
		{
			__jule_std_vector_heap_move<_10e8ca650_Pass>((*this)._field__buffer.heap,_23917_i,(_23917_i - _22347_n));
		}
	}
	_iter_next_4704272272:;
	(_23917_i)++;
	goto _iter_begin_4704272272;
	_iter_end_4704272272:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _10dba8790_Vector_6::_method_insert(jule::Int _24829_i,_10e8ca650_Pass _24841_item) {
	if ((_24829_i < 0LL)) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if ((_24829_i > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _26117_j = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4704289776:;
	if (!((_26117_j >= _24829_i))) { goto _iter_end_4704289776; }
	{
		{
			__jule_std_vector_heap_move<_10e8ca650_Pass>((*this)._field__buffer.heap,_26117_j,(_26117_j + 1LL));
		}
	}
	_iter_next_4704289776:;
	(_26117_j)--;
	goto _iter_begin_4704289776;
	_iter_end_4704289776:;
	{
		__jule_std_vector_heap_assign<_10e8ca650_Pass>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _10dba8790_Vector_6 _10dba8790_Vector_6::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if ((_27228_start < 0LL)) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if ((_27228_start > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if ((_27240_end > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if ((_27240_end < 0LL)) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if ((_27228_start > _27240_end)) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if ((_27228_start == _27240_end)) {
		return _10dba8790_Vector_6::_static_method_new(0LL);
	}
	_10dba8790_Vector_6 _29317_vec = _10dba8790_Vector_6::_static_method_new((_27240_end - _27228_start));
	{
		__jule_std_vector_copy_range<_10e8ca650_Pass>(_29317_vec._field__buffer.heap,((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(_10e8ca650_Pass)) * _27228_start)))))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _10dba8790_Vector_6 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _10dba8790_Vector_7 _10dba8790_Vector_7::_static_method_new(jule::Int _4319_cap) {
	_10dba8790_Vector_7 _4417_vec = _10dba8790_Vector_7();
	if ((_4319_cap != 0LL)) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _10dba8790_Vector_7::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = ((*this)._field__buffer.len + _5324_delta);
	return (_5413_t * 2LL);
}



inline void _10dba8790_Vector_7::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_10e9b6a10_ImportInfo>>(_5831_n);
	if ((_5917_new_heap == nullptr)) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if (((*this)._field__buffer.heap == nullptr)) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if (((*this)._field__buffer.len > 0LL)) {
			__jule_std_vector_copy_range<jule::Ref<_10e9b6a10_ImportInfo>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_10e9b6a10_ImportInfo>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _10dba8790_Vector_7::_method_review_allocation(jule::Int _8336_delta) {
	if ((((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _10dba8790_Vector_7::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _10dba8790_Vector_7::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _10dba8790_Vector_7::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _10dba8790_Vector_7::_method_set_len(jule::Int _10330_n) {
	if ((_10330_n < 0LL)) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if ((_10330_n >= (*this)._field__buffer.len)) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_10e9b6a10_ImportInfo> _10dba8790_Vector_7::_method_at(jule::Int _11525_i) {
	if (((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len))) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_10e9b6a10_ImportInfo>>((*this)._field__buffer.heap,_11525_i);
}



inline void _10dba8790_Vector_7::_method_set(jule::Int _12326_i,jule::Ref<_10e9b6a10_ImportInfo> _12338_item) {
	if (((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len))) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_10e9b6a10_ImportInfo>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _10dba8790_Vector_7::_method_push(jule::Ref<_10e9b6a10_ImportInfo> _13131_item) {
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_10e9b6a10_ImportInfo>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _10dba8790_Vector_7::_method_push_front(jule::Ref<_10e9b6a10_ImportInfo> _14637_item) {
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _15217_i = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4704431616:;
	if (!((_15217_i >= 0LL))) { goto _iter_end_4704431616; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_10e9b6a10_ImportInfo>>((*this)._field__buffer.heap,_15217_i,(_15217_i + 1LL));
		}
	}
	_iter_next_4704431616:;
	(_15217_i)--;
	goto _iter_begin_4704431616;
	_iter_end_4704431616:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_10e9b6a10_ImportInfo>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _10dba8790_Vector_7::_method_append(jule::Slice<jule::Ref<_10e9b6a10_ImportInfo>> _16333_items) {
	if ((static_cast<jule::I64>(_16333_items.len()) == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_10e9b6a10_ImportInfo>>(((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_10e9b6a10_ImportInfo>)) * (*this)._field__buffer.len)))))),__jule_get_pointer_of_slice<jule::Ref<_10e9b6a10_ImportInfo>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _10dba8790_Vector_7::_method_merge(_10dba8790_Vector_7 _18032_vec) {
	if ((_18032_vec._field__buffer.len == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_10e9b6a10_ImportInfo>>(((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_10e9b6a10_ImportInfo>)) * (*this)._field__buffer.len)))))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _10dba8790_Vector_7::_method_merge_front(_10dba8790_Vector_7 _19738_vec) {
	if ((_19738_vec._field__buffer.len == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4704472112:;
	if (!((_20517_i >= 0LL))) { goto _iter_end_4704472112; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_10e9b6a10_ImportInfo>>((*this)._field__buffer.heap,_20517_i,(_20517_i + _19738_vec._field__buffer.len));
		}
	}
	_iter_next_4704472112:;
	(_20517_i)--;
	goto _iter_begin_4704472112;
	_iter_end_4704472112:;
	{
		__jule_std_vector_copy_range<jule::Ref<_10e9b6a10_ImportInfo>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _10dba8790_Vector_7::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if ((_22347_n < 1LL)) {
		return;
	}
	if ((_22335_start < -1LL)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if ((_22335_start >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if (((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = (_22335_start + _22347_n);
	_iter_begin_4704488880:;
	if (!((_23917_i < (*this)._field__buffer.len))) { goto _iter_end_4704488880; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_10e9b6a10_ImportInfo>>((*this)._field__buffer.heap,_23917_i,(_23917_i - _22347_n));
		}
	}
	_iter_next_4704488880:;
	(_23917_i)++;
	goto _iter_begin_4704488880;
	_iter_end_4704488880:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _10dba8790_Vector_7::_method_insert(jule::Int _24829_i,jule::Ref<_10e9b6a10_ImportInfo> _24841_item) {
	if ((_24829_i < 0LL)) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if ((_24829_i > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _26117_j = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4704507552:;
	if (!((_26117_j >= _24829_i))) { goto _iter_end_4704507552; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_10e9b6a10_ImportInfo>>((*this)._field__buffer.heap,_26117_j,(_26117_j + 1LL));
		}
	}
	_iter_next_4704507552:;
	(_26117_j)--;
	goto _iter_begin_4704507552;
	_iter_end_4704507552:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_10e9b6a10_ImportInfo>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _10dba8790_Vector_7 _10dba8790_Vector_7::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if ((_27228_start < 0LL)) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if ((_27228_start > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if ((_27240_end > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if ((_27240_end < 0LL)) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if ((_27228_start > _27240_end)) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if ((_27228_start == _27240_end)) {
		return _10dba8790_Vector_7::_static_method_new(0LL);
	}
	_10dba8790_Vector_7 _29317_vec = _10dba8790_Vector_7::_static_method_new((_27240_end - _27228_start));
	{
		__jule_std_vector_copy_range<jule::Ref<_10e9b6a10_ImportInfo>>(_29317_vec._field__buffer.heap,((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_10e9b6a10_ImportInfo>)) * _27228_start)))))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _10dba8790_Vector_7 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _10dba8790_Vector_8 _10dba8790_Vector_8::_static_method_new(jule::Int _4319_cap) {
	_10dba8790_Vector_8 _4417_vec = _10dba8790_Vector_8();
	if ((_4319_cap != 0LL)) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _10dba8790_Vector_8::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = ((*this)._field__buffer.len + _5324_delta);
	return (_5413_t * 2LL);
}



inline void _10dba8790_Vector_8::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Any>(_5831_n);
	if ((_5917_new_heap == nullptr)) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if (((*this)._field__buffer.heap == nullptr)) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if (((*this)._field__buffer.len > 0LL)) {
			__jule_std_vector_copy_range<jule::Any>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Any>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _10dba8790_Vector_8::_method_review_allocation(jule::Int _8336_delta) {
	if ((((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _10dba8790_Vector_8::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _10dba8790_Vector_8::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _10dba8790_Vector_8::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _10dba8790_Vector_8::_method_set_len(jule::Int _10330_n) {
	if ((_10330_n < 0LL)) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if ((_10330_n >= (*this)._field__buffer.len)) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Any _10dba8790_Vector_8::_method_at(jule::Int _11525_i) {
	if (((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len))) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Any>((*this)._field__buffer.heap,_11525_i);
}



inline void _10dba8790_Vector_8::_method_set(jule::Int _12326_i,jule::Any _12338_item) {
	if (((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len))) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Any>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _10dba8790_Vector_8::_method_push(jule::Any _13131_item) {
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	{
		__jule_std_vector_heap_assign<jule::Any>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _10dba8790_Vector_8::_method_push_front(jule::Any _14637_item) {
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _15217_i = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4704667632:;
	if (!((_15217_i >= 0LL))) { goto _iter_end_4704667632; }
	{
		{
			__jule_std_vector_heap_move<jule::Any>((*this)._field__buffer.heap,_15217_i,(_15217_i + 1LL));
		}
	}
	_iter_next_4704667632:;
	(_15217_i)--;
	goto _iter_begin_4704667632;
	_iter_end_4704667632:;
	{
		__jule_std_vector_heap_assign<jule::Any>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _10dba8790_Vector_8::_method_append(jule::Slice<jule::Any> _16333_items) {
	if ((static_cast<jule::I64>(_16333_items.len()) == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Any>(((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Any)) * (*this)._field__buffer.len)))))),__jule_get_pointer_of_slice<jule::Any>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _10dba8790_Vector_8::_method_merge(_10dba8790_Vector_8 _18032_vec) {
	if ((_18032_vec._field__buffer.len == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Any>(((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Any)) * (*this)._field__buffer.len)))))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _10dba8790_Vector_8::_method_merge_front(_10dba8790_Vector_8 _19738_vec) {
	if ((_19738_vec._field__buffer.len == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4704707936:;
	if (!((_20517_i >= 0LL))) { goto _iter_end_4704707936; }
	{
		{
			__jule_std_vector_heap_move<jule::Any>((*this)._field__buffer.heap,_20517_i,(_20517_i + _19738_vec._field__buffer.len));
		}
	}
	_iter_next_4704707936:;
	(_20517_i)--;
	goto _iter_begin_4704707936;
	_iter_end_4704707936:;
	{
		__jule_std_vector_copy_range<jule::Any>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _10dba8790_Vector_8::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if ((_22347_n < 1LL)) {
		return;
	}
	if ((_22335_start < -1LL)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if ((_22335_start >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if (((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = (_22335_start + _22347_n);
	_iter_begin_4704724704:;
	if (!((_23917_i < (*this)._field__buffer.len))) { goto _iter_end_4704724704; }
	{
		{
			__jule_std_vector_heap_move<jule::Any>((*this)._field__buffer.heap,_23917_i,(_23917_i - _22347_n));
		}
	}
	_iter_next_4704724704:;
	(_23917_i)++;
	goto _iter_begin_4704724704;
	_iter_end_4704724704:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _10dba8790_Vector_8::_method_insert(jule::Int _24829_i,jule::Any _24841_item) {
	if ((_24829_i < 0LL)) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if ((_24829_i > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _26117_j = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4704743376:;
	if (!((_26117_j >= _24829_i))) { goto _iter_end_4704743376; }
	{
		{
			__jule_std_vector_heap_move<jule::Any>((*this)._field__buffer.heap,_26117_j,(_26117_j + 1LL));
		}
	}
	_iter_next_4704743376:;
	(_26117_j)--;
	goto _iter_begin_4704743376;
	_iter_end_4704743376:;
	{
		__jule_std_vector_heap_assign<jule::Any>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _10dba8790_Vector_8 _10dba8790_Vector_8::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if ((_27228_start < 0LL)) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if ((_27228_start > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if ((_27240_end > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if ((_27240_end < 0LL)) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if ((_27228_start > _27240_end)) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if ((_27228_start == _27240_end)) {
		return _10dba8790_Vector_8::_static_method_new(0LL);
	}
	_10dba8790_Vector_8 _29317_vec = _10dba8790_Vector_8::_static_method_new((_27240_end - _27228_start));
	{
		__jule_std_vector_copy_range<jule::Any>(_29317_vec._field__buffer.heap,((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Any)) * _27228_start)))))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _10dba8790_Vector_8 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _10dba8790_Vector_9 _10dba8790_Vector_9::_static_method_new(jule::Int _4319_cap) {
	_10dba8790_Vector_9 _4417_vec = _10dba8790_Vector_9();
	if ((_4319_cap != 0LL)) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _10dba8790_Vector_9::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = ((*this)._field__buffer.len + _5324_delta);
	return (_5413_t * 2LL);
}



inline void _10dba8790_Vector_9::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_10ebc2ad0_Var>>(_5831_n);
	if ((_5917_new_heap == nullptr)) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if (((*this)._field__buffer.heap == nullptr)) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if (((*this)._field__buffer.len > 0LL)) {
			__jule_std_vector_copy_range<jule::Ref<_10ebc2ad0_Var>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_10ebc2ad0_Var>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _10dba8790_Vector_9::_method_review_allocation(jule::Int _8336_delta) {
	if ((((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _10dba8790_Vector_9::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _10dba8790_Vector_9::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _10dba8790_Vector_9::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _10dba8790_Vector_9::_method_set_len(jule::Int _10330_n) {
	if ((_10330_n < 0LL)) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if ((_10330_n >= (*this)._field__buffer.len)) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_10ebc2ad0_Var> _10dba8790_Vector_9::_method_at(jule::Int _11525_i) {
	if (((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len))) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_10ebc2ad0_Var>>((*this)._field__buffer.heap,_11525_i);
}



inline void _10dba8790_Vector_9::_method_set(jule::Int _12326_i,jule::Ref<_10ebc2ad0_Var> _12338_item) {
	if (((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len))) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_10ebc2ad0_Var>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _10dba8790_Vector_9::_method_push(jule::Ref<_10ebc2ad0_Var> _13131_item) {
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_10ebc2ad0_Var>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _10dba8790_Vector_9::_method_push_front(jule::Ref<_10ebc2ad0_Var> _14637_item) {
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _15217_i = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4704863504:;
	if (!((_15217_i >= 0LL))) { goto _iter_end_4704863504; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_10ebc2ad0_Var>>((*this)._field__buffer.heap,_15217_i,(_15217_i + 1LL));
		}
	}
	_iter_next_4704863504:;
	(_15217_i)--;
	goto _iter_begin_4704863504;
	_iter_end_4704863504:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_10ebc2ad0_Var>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _10dba8790_Vector_9::_method_append(jule::Slice<jule::Ref<_10ebc2ad0_Var>> _16333_items) {
	if ((static_cast<jule::I64>(_16333_items.len()) == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_10ebc2ad0_Var>>(((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_10ebc2ad0_Var>)) * (*this)._field__buffer.len)))))),__jule_get_pointer_of_slice<jule::Ref<_10ebc2ad0_Var>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _10dba8790_Vector_9::_method_merge(_10dba8790_Vector_9 _18032_vec) {
	if ((_18032_vec._field__buffer.len == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_10ebc2ad0_Var>>(((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_10ebc2ad0_Var>)) * (*this)._field__buffer.len)))))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _10dba8790_Vector_9::_method_merge_front(_10dba8790_Vector_9 _19738_vec) {
	if ((_19738_vec._field__buffer.len == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4704903808:;
	if (!((_20517_i >= 0LL))) { goto _iter_end_4704903808; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_10ebc2ad0_Var>>((*this)._field__buffer.heap,_20517_i,(_20517_i + _19738_vec._field__buffer.len));
		}
	}
	_iter_next_4704903808:;
	(_20517_i)--;
	goto _iter_begin_4704903808;
	_iter_end_4704903808:;
	{
		__jule_std_vector_copy_range<jule::Ref<_10ebc2ad0_Var>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _10dba8790_Vector_9::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if ((_22347_n < 1LL)) {
		return;
	}
	if ((_22335_start < -1LL)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if ((_22335_start >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if (((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = (_22335_start + _22347_n);
	_iter_begin_4704920576:;
	if (!((_23917_i < (*this)._field__buffer.len))) { goto _iter_end_4704920576; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_10ebc2ad0_Var>>((*this)._field__buffer.heap,_23917_i,(_23917_i - _22347_n));
		}
	}
	_iter_next_4704920576:;
	(_23917_i)++;
	goto _iter_begin_4704920576;
	_iter_end_4704920576:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _10dba8790_Vector_9::_method_insert(jule::Int _24829_i,jule::Ref<_10ebc2ad0_Var> _24841_item) {
	if ((_24829_i < 0LL)) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if ((_24829_i > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _26117_j = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4704939248:;
	if (!((_26117_j >= _24829_i))) { goto _iter_end_4704939248; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_10ebc2ad0_Var>>((*this)._field__buffer.heap,_26117_j,(_26117_j + 1LL));
		}
	}
	_iter_next_4704939248:;
	(_26117_j)--;
	goto _iter_begin_4704939248;
	_iter_end_4704939248:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_10ebc2ad0_Var>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _10dba8790_Vector_9 _10dba8790_Vector_9::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if ((_27228_start < 0LL)) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if ((_27228_start > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if ((_27240_end > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if ((_27240_end < 0LL)) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if ((_27228_start > _27240_end)) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if ((_27228_start == _27240_end)) {
		return _10dba8790_Vector_9::_static_method_new(0LL);
	}
	_10dba8790_Vector_9 _29317_vec = _10dba8790_Vector_9::_static_method_new((_27240_end - _27228_start));
	{
		__jule_std_vector_copy_range<jule::Ref<_10ebc2ad0_Var>>(_29317_vec._field__buffer.heap,((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_10ebc2ad0_Var>)) * _27228_start)))))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _10dba8790_Vector_9 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _10dba8790_Vector_10 _10dba8790_Vector_10::_static_method_new(jule::Int _4319_cap) {
	_10dba8790_Vector_10 _4417_vec = _10dba8790_Vector_10();
	if ((_4319_cap != 0LL)) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _10dba8790_Vector_10::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = ((*this)._field__buffer.len + _5324_delta);
	return (_5413_t * 2LL);
}



inline void _10dba8790_Vector_10::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_10eeb79b0_TypeAlias>>(_5831_n);
	if ((_5917_new_heap == nullptr)) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if (((*this)._field__buffer.heap == nullptr)) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if (((*this)._field__buffer.len > 0LL)) {
			__jule_std_vector_copy_range<jule::Ref<_10eeb79b0_TypeAlias>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_10eeb79b0_TypeAlias>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _10dba8790_Vector_10::_method_review_allocation(jule::Int _8336_delta) {
	if ((((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _10dba8790_Vector_10::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _10dba8790_Vector_10::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _10dba8790_Vector_10::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _10dba8790_Vector_10::_method_set_len(jule::Int _10330_n) {
	if ((_10330_n < 0LL)) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if ((_10330_n >= (*this)._field__buffer.len)) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_10eeb79b0_TypeAlias> _10dba8790_Vector_10::_method_at(jule::Int _11525_i) {
	if (((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len))) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_10eeb79b0_TypeAlias>>((*this)._field__buffer.heap,_11525_i);
}



inline void _10dba8790_Vector_10::_method_set(jule::Int _12326_i,jule::Ref<_10eeb79b0_TypeAlias> _12338_item) {
	if (((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len))) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_10eeb79b0_TypeAlias>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _10dba8790_Vector_10::_method_push(jule::Ref<_10eeb79b0_TypeAlias> _13131_item) {
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_10eeb79b0_TypeAlias>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _10dba8790_Vector_10::_method_push_front(jule::Ref<_10eeb79b0_TypeAlias> _14637_item) {
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _15217_i = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4705087696:;
	if (!((_15217_i >= 0LL))) { goto _iter_end_4705087696; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_10eeb79b0_TypeAlias>>((*this)._field__buffer.heap,_15217_i,(_15217_i + 1LL));
		}
	}
	_iter_next_4705087696:;
	(_15217_i)--;
	goto _iter_begin_4705087696;
	_iter_end_4705087696:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_10eeb79b0_TypeAlias>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _10dba8790_Vector_10::_method_append(jule::Slice<jule::Ref<_10eeb79b0_TypeAlias>> _16333_items) {
	if ((static_cast<jule::I64>(_16333_items.len()) == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_10eeb79b0_TypeAlias>>(((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_10eeb79b0_TypeAlias>)) * (*this)._field__buffer.len)))))),__jule_get_pointer_of_slice<jule::Ref<_10eeb79b0_TypeAlias>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _10dba8790_Vector_10::_method_merge(_10dba8790_Vector_10 _18032_vec) {
	if ((_18032_vec._field__buffer.len == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_10eeb79b0_TypeAlias>>(((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_10eeb79b0_TypeAlias>)) * (*this)._field__buffer.len)))))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _10dba8790_Vector_10::_method_merge_front(_10dba8790_Vector_10 _19738_vec) {
	if ((_19738_vec._field__buffer.len == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4705126784:;
	if (!((_20517_i >= 0LL))) { goto _iter_end_4705126784; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_10eeb79b0_TypeAlias>>((*this)._field__buffer.heap,_20517_i,(_20517_i + _19738_vec._field__buffer.len));
		}
	}
	_iter_next_4705126784:;
	(_20517_i)--;
	goto _iter_begin_4705126784;
	_iter_end_4705126784:;
	{
		__jule_std_vector_copy_range<jule::Ref<_10eeb79b0_TypeAlias>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _10dba8790_Vector_10::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if ((_22347_n < 1LL)) {
		return;
	}
	if ((_22335_start < -1LL)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if ((_22335_start >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if (((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = (_22335_start + _22347_n);
	_iter_begin_4705144000:;
	if (!((_23917_i < (*this)._field__buffer.len))) { goto _iter_end_4705144000; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_10eeb79b0_TypeAlias>>((*this)._field__buffer.heap,_23917_i,(_23917_i - _22347_n));
		}
	}
	_iter_next_4705144000:;
	(_23917_i)++;
	goto _iter_begin_4705144000;
	_iter_end_4705144000:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _10dba8790_Vector_10::_method_insert(jule::Int _24829_i,jule::Ref<_10eeb79b0_TypeAlias> _24841_item) {
	if ((_24829_i < 0LL)) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if ((_24829_i > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _26117_j = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4705162672:;
	if (!((_26117_j >= _24829_i))) { goto _iter_end_4705162672; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_10eeb79b0_TypeAlias>>((*this)._field__buffer.heap,_26117_j,(_26117_j + 1LL));
		}
	}
	_iter_next_4705162672:;
	(_26117_j)--;
	goto _iter_begin_4705162672;
	_iter_end_4705162672:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_10eeb79b0_TypeAlias>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _10dba8790_Vector_10 _10dba8790_Vector_10::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if ((_27228_start < 0LL)) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if ((_27228_start > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if ((_27240_end > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if ((_27240_end < 0LL)) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if ((_27228_start > _27240_end)) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if ((_27228_start == _27240_end)) {
		return _10dba8790_Vector_10::_static_method_new(0LL);
	}
	_10dba8790_Vector_10 _29317_vec = _10dba8790_Vector_10::_static_method_new((_27240_end - _27228_start));
	{
		__jule_std_vector_copy_range<jule::Ref<_10eeb79b0_TypeAlias>>(_29317_vec._field__buffer.heap,((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_10eeb79b0_TypeAlias>)) * _27228_start)))))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _10dba8790_Vector_10 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _10dba8790_Vector_11 _10dba8790_Vector_11::_static_method_new(jule::Int _4319_cap) {
	_10dba8790_Vector_11 _4417_vec = _10dba8790_Vector_11();
	if ((_4319_cap != 0LL)) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _10dba8790_Vector_11::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = ((*this)._field__buffer.len + _5324_delta);
	return (_5413_t * 2LL);
}



inline void _10dba8790_Vector_11::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_10e56a140_Fn>>(_5831_n);
	if ((_5917_new_heap == nullptr)) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if (((*this)._field__buffer.heap == nullptr)) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if (((*this)._field__buffer.len > 0LL)) {
			__jule_std_vector_copy_range<jule::Ref<_10e56a140_Fn>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_10e56a140_Fn>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _10dba8790_Vector_11::_method_review_allocation(jule::Int _8336_delta) {
	if ((((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _10dba8790_Vector_11::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _10dba8790_Vector_11::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _10dba8790_Vector_11::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _10dba8790_Vector_11::_method_set_len(jule::Int _10330_n) {
	if ((_10330_n < 0LL)) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if ((_10330_n >= (*this)._field__buffer.len)) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_10e56a140_Fn> _10dba8790_Vector_11::_method_at(jule::Int _11525_i) {
	if (((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len))) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_10e56a140_Fn>>((*this)._field__buffer.heap,_11525_i);
}



inline void _10dba8790_Vector_11::_method_set(jule::Int _12326_i,jule::Ref<_10e56a140_Fn> _12338_item) {
	if (((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len))) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_10e56a140_Fn>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _10dba8790_Vector_11::_method_push(jule::Ref<_10e56a140_Fn> _13131_item) {
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_10e56a140_Fn>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _10dba8790_Vector_11::_method_push_front(jule::Ref<_10e56a140_Fn> _14637_item) {
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _15217_i = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4705344016:;
	if (!((_15217_i >= 0LL))) { goto _iter_end_4705344016; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_10e56a140_Fn>>((*this)._field__buffer.heap,_15217_i,(_15217_i + 1LL));
		}
	}
	_iter_next_4705344016:;
	(_15217_i)--;
	goto _iter_begin_4705344016;
	_iter_end_4705344016:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_10e56a140_Fn>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _10dba8790_Vector_11::_method_append(jule::Slice<jule::Ref<_10e56a140_Fn>> _16333_items) {
	if ((static_cast<jule::I64>(_16333_items.len()) == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_10e56a140_Fn>>(((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_10e56a140_Fn>)) * (*this)._field__buffer.len)))))),__jule_get_pointer_of_slice<jule::Ref<_10e56a140_Fn>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _10dba8790_Vector_11::_method_merge(_10dba8790_Vector_11 _18032_vec) {
	if ((_18032_vec._field__buffer.len == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_10e56a140_Fn>>(((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_10e56a140_Fn>)) * (*this)._field__buffer.len)))))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _10dba8790_Vector_11::_method_merge_front(_10dba8790_Vector_11 _19738_vec) {
	if ((_19738_vec._field__buffer.len == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4705384320:;
	if (!((_20517_i >= 0LL))) { goto _iter_end_4705384320; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_10e56a140_Fn>>((*this)._field__buffer.heap,_20517_i,(_20517_i + _19738_vec._field__buffer.len));
		}
	}
	_iter_next_4705384320:;
	(_20517_i)--;
	goto _iter_begin_4705384320;
	_iter_end_4705384320:;
	{
		__jule_std_vector_copy_range<jule::Ref<_10e56a140_Fn>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _10dba8790_Vector_11::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if ((_22347_n < 1LL)) {
		return;
	}
	if ((_22335_start < -1LL)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if ((_22335_start >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if (((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = (_22335_start + _22347_n);
	_iter_begin_4705401088:;
	if (!((_23917_i < (*this)._field__buffer.len))) { goto _iter_end_4705401088; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_10e56a140_Fn>>((*this)._field__buffer.heap,_23917_i,(_23917_i - _22347_n));
		}
	}
	_iter_next_4705401088:;
	(_23917_i)++;
	goto _iter_begin_4705401088;
	_iter_end_4705401088:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _10dba8790_Vector_11::_method_insert(jule::Int _24829_i,jule::Ref<_10e56a140_Fn> _24841_item) {
	if ((_24829_i < 0LL)) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if ((_24829_i > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _26117_j = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4705419760:;
	if (!((_26117_j >= _24829_i))) { goto _iter_end_4705419760; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_10e56a140_Fn>>((*this)._field__buffer.heap,_26117_j,(_26117_j + 1LL));
		}
	}
	_iter_next_4705419760:;
	(_26117_j)--;
	goto _iter_begin_4705419760;
	_iter_end_4705419760:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_10e56a140_Fn>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _10dba8790_Vector_11 _10dba8790_Vector_11::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if ((_27228_start < 0LL)) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if ((_27228_start > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if ((_27240_end > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if ((_27240_end < 0LL)) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if ((_27228_start > _27240_end)) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if ((_27228_start == _27240_end)) {
		return _10dba8790_Vector_11::_static_method_new(0LL);
	}
	_10dba8790_Vector_11 _29317_vec = _10dba8790_Vector_11::_static_method_new((_27240_end - _27228_start));
	{
		__jule_std_vector_copy_range<jule::Ref<_10e56a140_Fn>>(_29317_vec._field__buffer.heap,((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_10e56a140_Fn>)) * _27228_start)))))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _10dba8790_Vector_11 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _10dba8790_Vector_12 _10dba8790_Vector_12::_static_method_new(jule::Int _4319_cap) {
	_10dba8790_Vector_12 _4417_vec = _10dba8790_Vector_12();
	if ((_4319_cap != 0LL)) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _10dba8790_Vector_12::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = ((*this)._field__buffer.len + _5324_delta);
	return (_5413_t * 2LL);
}



inline void _10dba8790_Vector_12::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_10e3fc8f0_Struct>>(_5831_n);
	if ((_5917_new_heap == nullptr)) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if (((*this)._field__buffer.heap == nullptr)) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if (((*this)._field__buffer.len > 0LL)) {
			__jule_std_vector_copy_range<jule::Ref<_10e3fc8f0_Struct>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_10e3fc8f0_Struct>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _10dba8790_Vector_12::_method_review_allocation(jule::Int _8336_delta) {
	if ((((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _10dba8790_Vector_12::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _10dba8790_Vector_12::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _10dba8790_Vector_12::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _10dba8790_Vector_12::_method_set_len(jule::Int _10330_n) {
	if ((_10330_n < 0LL)) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if ((_10330_n >= (*this)._field__buffer.len)) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_10e3fc8f0_Struct> _10dba8790_Vector_12::_method_at(jule::Int _11525_i) {
	if (((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len))) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_10e3fc8f0_Struct>>((*this)._field__buffer.heap,_11525_i);
}



inline void _10dba8790_Vector_12::_method_set(jule::Int _12326_i,jule::Ref<_10e3fc8f0_Struct> _12338_item) {
	if (((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len))) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_10e3fc8f0_Struct>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _10dba8790_Vector_12::_method_push(jule::Ref<_10e3fc8f0_Struct> _13131_item) {
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_10e3fc8f0_Struct>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _10dba8790_Vector_12::_method_push_front(jule::Ref<_10e3fc8f0_Struct> _14637_item) {
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _15217_i = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4705540976:;
	if (!((_15217_i >= 0LL))) { goto _iter_end_4705540976; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_10e3fc8f0_Struct>>((*this)._field__buffer.heap,_15217_i,(_15217_i + 1LL));
		}
	}
	_iter_next_4705540976:;
	(_15217_i)--;
	goto _iter_begin_4705540976;
	_iter_end_4705540976:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_10e3fc8f0_Struct>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _10dba8790_Vector_12::_method_append(jule::Slice<jule::Ref<_10e3fc8f0_Struct>> _16333_items) {
	if ((static_cast<jule::I64>(_16333_items.len()) == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_10e3fc8f0_Struct>>(((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_10e3fc8f0_Struct>)) * (*this)._field__buffer.len)))))),__jule_get_pointer_of_slice<jule::Ref<_10e3fc8f0_Struct>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _10dba8790_Vector_12::_method_merge(_10dba8790_Vector_12 _18032_vec) {
	if ((_18032_vec._field__buffer.len == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_10e3fc8f0_Struct>>(((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_10e3fc8f0_Struct>)) * (*this)._field__buffer.len)))))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _10dba8790_Vector_12::_method_merge_front(_10dba8790_Vector_12 _19738_vec) {
	if ((_19738_vec._field__buffer.len == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4705587088:;
	if (!((_20517_i >= 0LL))) { goto _iter_end_4705587088; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_10e3fc8f0_Struct>>((*this)._field__buffer.heap,_20517_i,(_20517_i + _19738_vec._field__buffer.len));
		}
	}
	_iter_next_4705587088:;
	(_20517_i)--;
	goto _iter_begin_4705587088;
	_iter_end_4705587088:;
	{
		__jule_std_vector_copy_range<jule::Ref<_10e3fc8f0_Struct>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _10dba8790_Vector_12::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if ((_22347_n < 1LL)) {
		return;
	}
	if ((_22335_start < -1LL)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if ((_22335_start >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if (((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = (_22335_start + _22347_n);
	_iter_begin_4705603856:;
	if (!((_23917_i < (*this)._field__buffer.len))) { goto _iter_end_4705603856; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_10e3fc8f0_Struct>>((*this)._field__buffer.heap,_23917_i,(_23917_i - _22347_n));
		}
	}
	_iter_next_4705603856:;
	(_23917_i)++;
	goto _iter_begin_4705603856;
	_iter_end_4705603856:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _10dba8790_Vector_12::_method_insert(jule::Int _24829_i,jule::Ref<_10e3fc8f0_Struct> _24841_item) {
	if ((_24829_i < 0LL)) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if ((_24829_i > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _26117_j = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4705622528:;
	if (!((_26117_j >= _24829_i))) { goto _iter_end_4705622528; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_10e3fc8f0_Struct>>((*this)._field__buffer.heap,_26117_j,(_26117_j + 1LL));
		}
	}
	_iter_next_4705622528:;
	(_26117_j)--;
	goto _iter_begin_4705622528;
	_iter_end_4705622528:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_10e3fc8f0_Struct>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _10dba8790_Vector_12 _10dba8790_Vector_12::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if ((_27228_start < 0LL)) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if ((_27228_start > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if ((_27240_end > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if ((_27240_end < 0LL)) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if ((_27228_start > _27240_end)) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if ((_27228_start == _27240_end)) {
		return _10dba8790_Vector_12::_static_method_new(0LL);
	}
	_10dba8790_Vector_12 _29317_vec = _10dba8790_Vector_12::_static_method_new((_27240_end - _27228_start));
	{
		__jule_std_vector_copy_range<jule::Ref<_10e3fc8f0_Struct>>(_29317_vec._field__buffer.heap,((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_10e3fc8f0_Struct>)) * _27228_start)))))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _10dba8790_Vector_12 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _10dba8790_Vector_13 _10dba8790_Vector_13::_static_method_new(jule::Int _4319_cap) {
	_10dba8790_Vector_13 _4417_vec = _10dba8790_Vector_13();
	if ((_4319_cap != 0LL)) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _10dba8790_Vector_13::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = ((*this)._field__buffer.len + _5324_delta);
	return (_5413_t * 2LL);
}



inline void _10dba8790_Vector_13::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_10e3d6eb0_Trait>>(_5831_n);
	if ((_5917_new_heap == nullptr)) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if (((*this)._field__buffer.heap == nullptr)) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if (((*this)._field__buffer.len > 0LL)) {
			__jule_std_vector_copy_range<jule::Ref<_10e3d6eb0_Trait>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_10e3d6eb0_Trait>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _10dba8790_Vector_13::_method_review_allocation(jule::Int _8336_delta) {
	if ((((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _10dba8790_Vector_13::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _10dba8790_Vector_13::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _10dba8790_Vector_13::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _10dba8790_Vector_13::_method_set_len(jule::Int _10330_n) {
	if ((_10330_n < 0LL)) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if ((_10330_n >= (*this)._field__buffer.len)) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_10e3d6eb0_Trait> _10dba8790_Vector_13::_method_at(jule::Int _11525_i) {
	if (((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len))) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_10e3d6eb0_Trait>>((*this)._field__buffer.heap,_11525_i);
}



inline void _10dba8790_Vector_13::_method_set(jule::Int _12326_i,jule::Ref<_10e3d6eb0_Trait> _12338_item) {
	if (((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len))) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_10e3d6eb0_Trait>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _10dba8790_Vector_13::_method_push(jule::Ref<_10e3d6eb0_Trait> _13131_item) {
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_10e3d6eb0_Trait>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _10dba8790_Vector_13::_method_push_front(jule::Ref<_10e3d6eb0_Trait> _14637_item) {
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _15217_i = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4705751424:;
	if (!((_15217_i >= 0LL))) { goto _iter_end_4705751424; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_10e3d6eb0_Trait>>((*this)._field__buffer.heap,_15217_i,(_15217_i + 1LL));
		}
	}
	_iter_next_4705751424:;
	(_15217_i)--;
	goto _iter_begin_4705751424;
	_iter_end_4705751424:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_10e3d6eb0_Trait>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _10dba8790_Vector_13::_method_append(jule::Slice<jule::Ref<_10e3d6eb0_Trait>> _16333_items) {
	if ((static_cast<jule::I64>(_16333_items.len()) == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_10e3d6eb0_Trait>>(((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_10e3d6eb0_Trait>)) * (*this)._field__buffer.len)))))),__jule_get_pointer_of_slice<jule::Ref<_10e3d6eb0_Trait>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _10dba8790_Vector_13::_method_merge(_10dba8790_Vector_13 _18032_vec) {
	if ((_18032_vec._field__buffer.len == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_10e3d6eb0_Trait>>(((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_10e3d6eb0_Trait>)) * (*this)._field__buffer.len)))))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _10dba8790_Vector_13::_method_merge_front(_10dba8790_Vector_13 _19738_vec) {
	if ((_19738_vec._field__buffer.len == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4705791728:;
	if (!((_20517_i >= 0LL))) { goto _iter_end_4705791728; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_10e3d6eb0_Trait>>((*this)._field__buffer.heap,_20517_i,(_20517_i + _19738_vec._field__buffer.len));
		}
	}
	_iter_next_4705791728:;
	(_20517_i)--;
	goto _iter_begin_4705791728;
	_iter_end_4705791728:;
	{
		__jule_std_vector_copy_range<jule::Ref<_10e3d6eb0_Trait>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _10dba8790_Vector_13::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if ((_22347_n < 1LL)) {
		return;
	}
	if ((_22335_start < -1LL)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if ((_22335_start >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if (((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = (_22335_start + _22347_n);
	_iter_begin_4705808496:;
	if (!((_23917_i < (*this)._field__buffer.len))) { goto _iter_end_4705808496; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_10e3d6eb0_Trait>>((*this)._field__buffer.heap,_23917_i,(_23917_i - _22347_n));
		}
	}
	_iter_next_4705808496:;
	(_23917_i)++;
	goto _iter_begin_4705808496;
	_iter_end_4705808496:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _10dba8790_Vector_13::_method_insert(jule::Int _24829_i,jule::Ref<_10e3d6eb0_Trait> _24841_item) {
	if ((_24829_i < 0LL)) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if ((_24829_i > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _26117_j = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4705827168:;
	if (!((_26117_j >= _24829_i))) { goto _iter_end_4705827168; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_10e3d6eb0_Trait>>((*this)._field__buffer.heap,_26117_j,(_26117_j + 1LL));
		}
	}
	_iter_next_4705827168:;
	(_26117_j)--;
	goto _iter_begin_4705827168;
	_iter_end_4705827168:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_10e3d6eb0_Trait>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _10dba8790_Vector_13 _10dba8790_Vector_13::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if ((_27228_start < 0LL)) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if ((_27228_start > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if ((_27240_end > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if ((_27240_end < 0LL)) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if ((_27228_start > _27240_end)) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if ((_27228_start == _27240_end)) {
		return _10dba8790_Vector_13::_static_method_new(0LL);
	}
	_10dba8790_Vector_13 _29317_vec = _10dba8790_Vector_13::_static_method_new((_27240_end - _27228_start));
	{
		__jule_std_vector_copy_range<jule::Ref<_10e3d6eb0_Trait>>(_29317_vec._field__buffer.heap,((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_10e3d6eb0_Trait>)) * _27228_start)))))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _10dba8790_Vector_13 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _10dba8790_Vector_14 _10dba8790_Vector_14::_static_method_new(jule::Int _4319_cap) {
	_10dba8790_Vector_14 _4417_vec = _10dba8790_Vector_14();
	if ((_4319_cap != 0LL)) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _10dba8790_Vector_14::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = ((*this)._field__buffer.len + _5324_delta);
	return (_5413_t * 2LL);
}



inline void _10dba8790_Vector_14::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_10e975f00_Enum>>(_5831_n);
	if ((_5917_new_heap == nullptr)) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if (((*this)._field__buffer.heap == nullptr)) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if (((*this)._field__buffer.len > 0LL)) {
			__jule_std_vector_copy_range<jule::Ref<_10e975f00_Enum>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_10e975f00_Enum>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _10dba8790_Vector_14::_method_review_allocation(jule::Int _8336_delta) {
	if ((((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _10dba8790_Vector_14::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _10dba8790_Vector_14::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _10dba8790_Vector_14::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _10dba8790_Vector_14::_method_set_len(jule::Int _10330_n) {
	if ((_10330_n < 0LL)) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if ((_10330_n >= (*this)._field__buffer.len)) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_10e975f00_Enum> _10dba8790_Vector_14::_method_at(jule::Int _11525_i) {
	if (((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len))) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_10e975f00_Enum>>((*this)._field__buffer.heap,_11525_i);
}



inline void _10dba8790_Vector_14::_method_set(jule::Int _12326_i,jule::Ref<_10e975f00_Enum> _12338_item) {
	if (((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len))) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_10e975f00_Enum>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _10dba8790_Vector_14::_method_push(jule::Ref<_10e975f00_Enum> _13131_item) {
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_10e975f00_Enum>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _10dba8790_Vector_14::_method_push_front(jule::Ref<_10e975f00_Enum> _14637_item) {
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _15217_i = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4705963440:;
	if (!((_15217_i >= 0LL))) { goto _iter_end_4705963440; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_10e975f00_Enum>>((*this)._field__buffer.heap,_15217_i,(_15217_i + 1LL));
		}
	}
	_iter_next_4705963440:;
	(_15217_i)--;
	goto _iter_begin_4705963440;
	_iter_end_4705963440:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_10e975f00_Enum>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _10dba8790_Vector_14::_method_append(jule::Slice<jule::Ref<_10e975f00_Enum>> _16333_items) {
	if ((static_cast<jule::I64>(_16333_items.len()) == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_10e975f00_Enum>>(((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_10e975f00_Enum>)) * (*this)._field__buffer.len)))))),__jule_get_pointer_of_slice<jule::Ref<_10e975f00_Enum>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _10dba8790_Vector_14::_method_merge(_10dba8790_Vector_14 _18032_vec) {
	if ((_18032_vec._field__buffer.len == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_10e975f00_Enum>>(((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_10e975f00_Enum>)) * (*this)._field__buffer.len)))))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _10dba8790_Vector_14::_method_merge_front(_10dba8790_Vector_14 _19738_vec) {
	if ((_19738_vec._field__buffer.len == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4706003840:;
	if (!((_20517_i >= 0LL))) { goto _iter_end_4706003840; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_10e975f00_Enum>>((*this)._field__buffer.heap,_20517_i,(_20517_i + _19738_vec._field__buffer.len));
		}
	}
	_iter_next_4706003840:;
	(_20517_i)--;
	goto _iter_begin_4706003840;
	_iter_end_4706003840:;
	{
		__jule_std_vector_copy_range<jule::Ref<_10e975f00_Enum>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _10dba8790_Vector_14::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if ((_22347_n < 1LL)) {
		return;
	}
	if ((_22335_start < -1LL)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if ((_22335_start >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if (((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = (_22335_start + _22347_n);
	_iter_begin_4706037536:;
	if (!((_23917_i < (*this)._field__buffer.len))) { goto _iter_end_4706037536; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_10e975f00_Enum>>((*this)._field__buffer.heap,_23917_i,(_23917_i - _22347_n));
		}
	}
	_iter_next_4706037536:;
	(_23917_i)++;
	goto _iter_begin_4706037536;
	_iter_end_4706037536:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _10dba8790_Vector_14::_method_insert(jule::Int _24829_i,jule::Ref<_10e975f00_Enum> _24841_item) {
	if ((_24829_i < 0LL)) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if ((_24829_i > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _26117_j = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4706056208:;
	if (!((_26117_j >= _24829_i))) { goto _iter_end_4706056208; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_10e975f00_Enum>>((*this)._field__buffer.heap,_26117_j,(_26117_j + 1LL));
		}
	}
	_iter_next_4706056208:;
	(_26117_j)--;
	goto _iter_begin_4706056208;
	_iter_end_4706056208:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_10e975f00_Enum>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _10dba8790_Vector_14 _10dba8790_Vector_14::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if ((_27228_start < 0LL)) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if ((_27228_start > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if ((_27240_end > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if ((_27240_end < 0LL)) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if ((_27228_start > _27240_end)) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if ((_27228_start == _27240_end)) {
		return _10dba8790_Vector_14::_static_method_new(0LL);
	}
	_10dba8790_Vector_14 _29317_vec = _10dba8790_Vector_14::_static_method_new((_27240_end - _27228_start));
	{
		__jule_std_vector_copy_range<jule::Ref<_10e975f00_Enum>>(_29317_vec._field__buffer.heap,((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_10e975f00_Enum>)) * _27228_start)))))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _10dba8790_Vector_14 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _10dba8790_Vector_15 _10dba8790_Vector_15::_static_method_new(jule::Int _4319_cap) {
	_10dba8790_Vector_15 _4417_vec = _10dba8790_Vector_15();
	if ((_4319_cap != 0LL)) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _10dba8790_Vector_15::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = ((*this)._field__buffer.len + _5324_delta);
	return (_5413_t * 2LL);
}



inline void _10dba8790_Vector_15::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_10e97d820_Impl>>(_5831_n);
	if ((_5917_new_heap == nullptr)) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if (((*this)._field__buffer.heap == nullptr)) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if (((*this)._field__buffer.len > 0LL)) {
			__jule_std_vector_copy_range<jule::Ref<_10e97d820_Impl>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_10e97d820_Impl>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _10dba8790_Vector_15::_method_review_allocation(jule::Int _8336_delta) {
	if ((((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _10dba8790_Vector_15::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _10dba8790_Vector_15::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _10dba8790_Vector_15::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _10dba8790_Vector_15::_method_set_len(jule::Int _10330_n) {
	if ((_10330_n < 0LL)) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if ((_10330_n >= (*this)._field__buffer.len)) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_10e97d820_Impl> _10dba8790_Vector_15::_method_at(jule::Int _11525_i) {
	if (((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len))) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_10e97d820_Impl>>((*this)._field__buffer.heap,_11525_i);
}



inline void _10dba8790_Vector_15::_method_set(jule::Int _12326_i,jule::Ref<_10e97d820_Impl> _12338_item) {
	if (((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len))) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_10e97d820_Impl>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _10dba8790_Vector_15::_method_push(jule::Ref<_10e97d820_Impl> _13131_item) {
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_10e97d820_Impl>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _10dba8790_Vector_15::_method_push_front(jule::Ref<_10e97d820_Impl> _14637_item) {
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _15217_i = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4706189088:;
	if (!((_15217_i >= 0LL))) { goto _iter_end_4706189088; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_10e97d820_Impl>>((*this)._field__buffer.heap,_15217_i,(_15217_i + 1LL));
		}
	}
	_iter_next_4706189088:;
	(_15217_i)--;
	goto _iter_begin_4706189088;
	_iter_end_4706189088:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_10e97d820_Impl>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _10dba8790_Vector_15::_method_append(jule::Slice<jule::Ref<_10e97d820_Impl>> _16333_items) {
	if ((static_cast<jule::I64>(_16333_items.len()) == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_10e97d820_Impl>>(((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_10e97d820_Impl>)) * (*this)._field__buffer.len)))))),__jule_get_pointer_of_slice<jule::Ref<_10e97d820_Impl>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _10dba8790_Vector_15::_method_merge(_10dba8790_Vector_15 _18032_vec) {
	if ((_18032_vec._field__buffer.len == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_10e97d820_Impl>>(((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_10e97d820_Impl>)) * (*this)._field__buffer.len)))))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _10dba8790_Vector_15::_method_merge_front(_10dba8790_Vector_15 _19738_vec) {
	if ((_19738_vec._field__buffer.len == 0LL)) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4706229776:;
	if (!((_20517_i >= 0LL))) { goto _iter_end_4706229776; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_10e97d820_Impl>>((*this)._field__buffer.heap,_20517_i,(_20517_i + _19738_vec._field__buffer.len));
		}
	}
	_iter_next_4706229776:;
	(_20517_i)--;
	goto _iter_begin_4706229776;
	_iter_end_4706229776:;
	{
		__jule_std_vector_copy_range<jule::Ref<_10e97d820_Impl>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _10dba8790_Vector_15::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if ((_22347_n < 1LL)) {
		return;
	}
	if ((_22335_start < -1LL)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if ((_22335_start >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if (((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL)) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = (_22335_start + _22347_n);
	_iter_begin_4706247712:;
	if (!((_23917_i < (*this)._field__buffer.len))) { goto _iter_end_4706247712; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_10e97d820_Impl>>((*this)._field__buffer.heap,_23917_i,(_23917_i - _22347_n));
		}
	}
	_iter_next_4706247712:;
	(_23917_i)++;
	goto _iter_begin_4706247712;
	_iter_end_4706247712:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _10dba8790_Vector_15::_method_insert(jule::Int _24829_i,jule::Ref<_10e97d820_Impl> _24841_item) {
	if ((_24829_i < 0LL)) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if ((_24829_i > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if (((*this)._field__buffer.len >= (*this)._field__buffer.cap)) {
		(*this)._method_resize_alloc((((*this)._field__buffer.cap * 2LL) + 1LL));
	}
	jule::Int _26117_j = ((*this)._field__buffer.len - 1LL);
	_iter_begin_4706265216:;
	if (!((_26117_j >= _24829_i))) { goto _iter_end_4706265216; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_10e97d820_Impl>>((*this)._field__buffer.heap,_26117_j,(_26117_j + 1LL));
		}
	}
	_iter_next_4706265216:;
	(_26117_j)--;
	goto _iter_begin_4706265216;
	_iter_end_4706265216:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_10e97d820_Impl>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _10dba8790_Vector_15 _10dba8790_Vector_15::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if ((_27228_start < 0LL)) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if ((_27228_start > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if ((_27240_end > (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if ((_27240_end < 0LL)) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if ((_27228_start > _27240_end)) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if ((_27228_start == _27240_end)) {
		return _10dba8790_Vector_15::_static_method_new(0LL);
	}
	_10dba8790_Vector_15 _29317_vec = _10dba8790_Vector_15::_static_method_new((_27240_end - _27228_start));
	{
		__jule_std_vector_copy_range<jule::Ref<_10e97d820_Impl>>(_29317_vec._field__buffer.heap,((void*)(static_cast<jule::Uintptr>((((jule::Uintptr)((*this)._field__buffer.heap)) + static_cast<jule::Uint>((static_cast<jule::Uint>(sizeof(jule::Ref<_10e97d820_Impl>)) * _27228_start)))))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _10dba8790_Vector_15 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _11ce078a0_File::_method_is_ok(void) {
	jule::Int _1817_err{};
	std::tie(std::ignore,_1817_err) = _12ce49290_stat((*this)._field__path);
	return (_1817_err == 0LLU);
}



inline jule::Str _11ce078a0_File::_method_path(void) {
	return (*this)._field__path;
}



inline jule::Str _11ce078a0_File::_method_dir(void) {
	return _12ce95080_dir((*this)._field__path);
}



inline jule::Str _11ce078a0_File::_method_name(void) {
	return _12ce95080_base((*this)._field__path);
}



inline jule::Uintptr _11ce078a0_File::_method_addr(void) {
	return ((jule::Uintptr)((&(*this))));
}



inline _10dba8790_Vector_0 _11ce078a0_File::_method_tokens(void) {
	return (*this)._field__tokens;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce078a0_File &_Src) {
	_Stream << "File{";
	_Stream << "_path:" << _Src._field__path << ", ";
	_Stream << "_tokens:" << _Src._field__tokens;
	_Stream << "}";
	return _Stream;
}



inline void _11cec0de0_Lex::_method_push_err(jule::Str _39927_key,jule::Slice<jule::Any> _39937_args) {
	(*this)._field_errors=append((*this)._field_errors,jule::Slice<_13cfd2d20_Log>({_11cec0de0_make_err((*this)._field_row,(*this)._field_column,(*this)._field_file,_39927_key,_39937_args)}));
}



inline void _11cec0de0_Lex::_method_push_err_tok(_11ce22a00_Token _40431_token,jule::Str _40445_key) {
	(*this)._field_errors=append((*this)._field_errors,jule::Slice<_13cfd2d20_Log>({_11cec0de0_make_err(_40431_token._field_row,_40431_token._field_column,(*this)._field_file,_40445_key,jule::Slice<jule::Any>({}))}));
}



inline void _11cec0de0_Lex::_method_lex(void) {
	(*this)._field_errors=nullptr;
	(*this)._method_new_line();
	_iter_begin_4697975728:;
	if (!(((*this)._field_pos < static_cast<jule::I64>((*this)._field_data.len())))) { goto _iter_end_4697975728; }
	{
		_11ce22a00_Token _41421_token = (*this)._method_token();
		(*this)._field_first_token_of_line=false;
		if ((_41421_token._field_id != 0LLU)) {
			(*this)._field_tokens._method_push(_41421_token);
		}
	}
	_iter_next_4697975728:;
	goto _iter_begin_4697975728;
	_iter_end_4697975728:;
	(*this)._field_data=nullptr;
}



inline jule::Str _11cec0de0_Lex::_method_id(jule::Slice<jule::U8> _42521_ln) {
	if ((static_cast<jule::I64>(_42521_ln.len()) == 0LL)) {
		return jule::Str("", 0);
	}
	if (((_42521_ln[static_cast<jule::Int>(0LL)] != '_') && (!_11ce22a00_is_letter(static_cast<jule::I32>(_42521_ln[static_cast<jule::Int>(0LL)]))))) {
		return jule::Str("", 0);
	}
	{
		auto &__julec_range_expr = _42521_ln;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11cec0de0_i{jule::Int()};_11cec0de0_i = 0;
			jule::U8 _11cec0de0_r{jule::U8()};_11cec0de0_r = *__julec_range_begin;
			_iter_begin_4697995696:;
			{
				if ((((_11cec0de0_r != '_') && (!_11ce22a00_is_decimal(static_cast<jule::U8>(_11cec0de0_r)))) && (!_11ce22a00_is_letter(_11cec0de0_r)))) {
					return static_cast<jule::Str>(_42521_ln.slice(0LL,static_cast<jule::Int>(_11cec0de0_i)));
				}
				((*this)._field_pos)++;
			}
			_iter_next_4697995696:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11cec0de0_i; _11cec0de0_r = *__julec_range_begin; goto _iter_begin_4697995696; }
			_iter_end_4697995696:;
		}
	}
	return static_cast<jule::Str>(_42521_ln);
}



inline jule::Slice<jule::U8> _11cec0de0_Lex::_method_resume(void) {
	jule::Int _44617_i = (*this)._field_pos;
	_iter_begin_4698006848:;
	if (!((_44617_i < static_cast<jule::I64>((*this)._field_data.len())))) { goto _iter_end_4698006848; }
	{
		jule::I32 _44817_r = static_cast<jule::I32>((*this)._field_data[static_cast<jule::Int>(_44617_i)]);
		if (_11ce22a00_is_space(_44817_r)) {
			((*this)._field_pos)++;
			{
				auto _match_expr{ _44817_r };
				if (!('\n' == _match_expr)) { goto _case_end_4698014016; }
				_case_begin_4698014016:;
				{
					(*this)._method_new_line();
				}
				goto _match_end_4698011904;
				_case_end_4698014016:;
				if (!('\t' == _match_expr)) { goto _case_end_4698013456; }
				_case_begin_4698013456:;
				{
					(*this)._field_column+=4LL;
				}
				goto _match_end_4698011904;
				_case_end_4698013456:;
				_case_begin_4698012304:;
				{
					((*this)._field_column)++;
				}
				goto _match_end_4698011904;
				_case_end_4698012304:;
				_match_end_4698011904:;
			}
			goto _iter_next_4698006848;
		}
		jule::Int _45921_j = _44617_i;
		_iter_begin_4698011456:;
		if (!((_45921_j < static_cast<jule::I64>((*this)._field_data.len())))) { goto _iter_end_4698011456; }
		{
			jule::U8 _46121_r = (*this)._field_data[static_cast<jule::Int>(_45921_j)];
			if ((_46121_r == '\n')) {
				goto _iter_end_4698011456;
			}
		}
		_iter_next_4698011456:;
		(_45921_j)++;
		goto _iter_begin_4698011456;
		_iter_end_4698011456:;
		return (*this)._field_data.slice(static_cast<jule::Int>(_44617_i),static_cast<jule::Int>(_45921_j));
	}
	_iter_next_4698006848:;
	(_44617_i)++;
	goto _iter_begin_4698006848;
	_iter_end_4698006848:;
	return nullptr;
}



inline void _11cec0de0_Lex::_method_lex_line_comment(_11ce22a00_Token* _47246_token) {
	jule::Int _47313_start = (*this)._field_pos;
	(*this)._field_pos+=2LL;
	_iter_begin_4698028320:;
	if (!(((*this)._field_pos < static_cast<jule::I64>((*this)._field_data.len())))) { goto _iter_end_4698028320; }
	{
		jule::U8 _47717_r = (*this)._field_data[static_cast<jule::Int>((*this)._field_pos)];
		if (((_47717_r == '\n') || (_47717_r == '\r'))) {
			if ((*this)._field_first_token_of_line) {
				_47246_token->_field_id=18LLU;
				_47246_token->_field_kind=static_cast<jule::Str>((*this)._field_data.slice(static_cast<jule::Int>(_47313_start),static_cast<jule::Int>((*this)._field_pos)));
			}
			return;
		}
	}
	_iter_next_4698028320:;
	((*this)._field_pos)++;
	goto _iter_begin_4698028320;
	_iter_end_4698028320:;
	if ((*this)._field_first_token_of_line) {
		_47246_token->_field_id=18LLU;
		_47246_token->_field_kind=static_cast<jule::Str>((*this)._field_data.slice(static_cast<jule::Int>(_47313_start)));
	}
}



inline void _11cec0de0_Lex::_method_lex_range_comment(void) {
	(*this)._field_pos+=2LL;
	_iter_begin_4698043600:;
	if (!(((*this)._field_pos < static_cast<jule::I64>((*this)._field_data.len())))) { goto _iter_end_4698043600; }
	{
		jule::U8 _49617_r = (*this)._field_data[static_cast<jule::Int>((*this)._field_pos)];
		if ((_49617_r == '\r')) {
			goto _iter_next_4698043600;
		}
		if ((_49617_r == '\n')) {
			(*this)._method_new_line();
			goto _iter_next_4698043600;
		}
		(*this)._field_column+=1LL;
		if ((((((*this)._field_pos + 1LL) < static_cast<jule::I64>((*this)._field_data.len())) && (_49617_r == '*')) && ((*this)._field_data[static_cast<jule::Int>(((*this)._field_pos + 1LL))] == '/'))) {
			(*this)._field_column+=2LL;
			(*this)._field_pos+=2LL;
			return;
		}
	}
	_iter_next_4698043600:;
	((*this)._field_pos)++;
	goto _iter_begin_4698043600;
	_iter_end_4698043600:;
	(*this)._method_push_err(jule::Str("missing_block_comment", 21),jule::Slice<jule::Any>({}));
}



inline jule::Str _11cec0de0_Lex::_method_num(jule::Slice<jule::U8> _51522_txt) {
	jule::Str _51537_lit{jule::Str()};
	_51537_lit=_11cec0de0_hex_num(_51522_txt);
	if ((_51537_lit != jule::Str("", 0))) {
		goto _julec_label_end;
	}
	_51537_lit=_11cec0de0_octal_num(_51522_txt);
	if ((_51537_lit != jule::Str("", 0))) {
		goto _julec_label_end;
	}
	_51537_lit=_11cec0de0_binary_num(_51522_txt);
	if ((_51537_lit != jule::Str("", 0))) {
		goto _julec_label_end;
	}
	_51537_lit=_11cec0de0_common_num(_51522_txt);
	_julec_label_end:;
	(*this)._field_pos+=static_cast<jule::I64>(_51537_lit.len());
	return _51537_lit;
}



inline jule::Str _11cec0de0_Lex::_method_escape_seq(jule::Slice<jule::U8> _53429_txt) {
	jule::Str _53517_seq = jule::Str("", 0);
	if ((static_cast<jule::I64>(_53429_txt.len()) < 2LL)) {
		goto _julec_label_end;
	}
	{
		auto _match_expr{ _53429_txt[static_cast<jule::Int>(1LL)] };
		if (!('\\' == _match_expr || '\'' == _match_expr || '\"' == _match_expr || 'a' == _match_expr || 'b' == _match_expr || 'f' == _match_expr || 'n' == _match_expr || 'r' == _match_expr || 't' == _match_expr || 'v' == _match_expr)) { goto _case_end_4698084992; }
		_case_begin_4698084992:;
		{
			(*this)._field_pos+=2LL;
			return static_cast<jule::Str>(_53429_txt.slice(0LL,static_cast<jule::Int>(2LL)));
		}
		goto _match_end_4698080816;
		_case_end_4698084992:;
		if (!('U' == _match_expr)) { goto _case_end_4698085568; }
		_case_begin_4698085568:;
		{
			_53517_seq=_11cec0de0_big_unicode_point_escape(_53429_txt);
		}
		goto _match_end_4698080816;
		_case_end_4698085568:;
		if (!('u' == _match_expr)) { goto _case_end_4698084656; }
		_case_begin_4698084656:;
		{
			_53517_seq=_11cec0de0_little_unicode_point_escape(_53429_txt);
		}
		goto _match_end_4698080816;
		_case_end_4698084656:;
		if (!('x' == _match_expr)) { goto _case_end_4698084320; }
		_case_begin_4698084320:;
		{
			_53517_seq=_11cec0de0_hex_byte_escape(_53429_txt);
		}
		goto _match_end_4698080816;
		_case_end_4698084320:;
		_case_begin_4698083408:;
		{
			_53517_seq=_11cec0de0_byte_escape(_53429_txt);
		}
		goto _match_end_4698080816;
		_case_end_4698083408:;
		_match_end_4698080816:;
	}
	_julec_label_end:;
	if ((_53517_seq == jule::Str("", 0))) {
		((*this)._field_pos)++;
		(*this)._method_push_err(jule::Str("invalid_escape_sequence", 23),jule::Slice<jule::Any>({}));
		return jule::Str("", 0);
	}
	(*this)._field_pos+=static_cast<jule::I64>(_53517_seq.len());
	return _53517_seq;
}



inline jule::Str _11cec0de0_Lex::_method_get_rune(jule::Slice<jule::U8> _56827_txt,jule::Bool _56840_raw) {
	if (((!_56840_raw) && (_56827_txt[static_cast<jule::Int>(0LL)] == '\\'))) {
		return (*this)._method_escape_seq(_56827_txt);
	}
	jule::I32 _57314_r{};
	jule::Int _57317_n{};
	std::tie(_57314_r,_57317_n) = _10dba43b0_decode_rune(_56827_txt);
	(*this)._field_pos+=_57317_n;
	return static_cast<jule::Str>(_57314_r);
}



inline jule::Str _11cec0de0_Lex::_method_lex_rune(jule::Slice<jule::U8> _57827_txt) {
	jule::Str _57917_run = jule::Str("'", 1);
	((*this)._field_column)++;
	jule::Int _58117_n = 0LL;
	jule::Int _58217_i = 1LL;
	_iter_begin_4698109856:;
	if (!((_58217_i < static_cast<jule::I64>(_57827_txt.len())))) { goto _iter_end_4698109856; }
	{
		if ((_57827_txt[static_cast<jule::Int>(_58217_i)] == '\r')) {
			goto _iter_next_4698109856;
		}
		if ((_57827_txt[static_cast<jule::Int>(_58217_i)] == '\n')) {
			(*this)._method_push_err(jule::Str("missing_rune_end", 16),jule::Slice<jule::Any>({}));
			((*this)._field_pos)++;
			(*this)._method_new_line();
			return jule::Str("", 0);
		}
		jule::Str _59417_r = (*this)._method_get_rune(_57827_txt.slice(static_cast<jule::Int>(_58217_i)),false);
		_57917_run+=_59417_r;
		jule::I64 _59617_length = static_cast<jule::I64>(_59417_r.len());
		(*this)._field_column+=_59617_length;
		if ((_59417_r == jule::Str("'", 1))) {
			((*this)._field_pos)++;
			goto _iter_end_4698109856;
		}
		if ((_59617_length > 1LL)) {
			_58217_i+=(_59617_length - 1LL);
		}
		(_58117_n)++;
	}
	_iter_next_4698109856:;
	(_58217_i)++;
	goto _iter_begin_4698109856;
	_iter_end_4698109856:;
	if ((_58117_n == 0LL)) {
		(*this)._method_push_err(jule::Str("rune_empty", 10),jule::Slice<jule::Any>({}));
	} else if ((_58117_n > 1LL)) {
		(*this)._method_push_err(jule::Str("rune_overflow", 13),jule::Slice<jule::Any>({}));
	}
	return _57917_run;
}



inline jule::Str _11cec0de0_Lex::_method_lex_str(void) {
	jule::Str _61817_s = jule::Str("", 0);
	jule::U8 _61913_mark = (*this)._field_data[static_cast<jule::Int>((*this)._field_pos)];
	((*this)._field_pos)++;
	jule::Bool _62113_raw = (_61913_mark == '`');
	_61817_s+=static_cast<jule::Str>(_61913_mark);
	((*this)._field_column)++;
	_iter_begin_4698142416:;
	if (!(((*this)._field_pos < static_cast<jule::I64>((*this)._field_data.len())))) { goto _iter_end_4698142416; }
	{
		jule::U8 _62617_ch = (*this)._field_data[static_cast<jule::Int>((*this)._field_pos)];
		if ((_62617_ch == '\r')) {
			goto _iter_next_4698142416;
		}
		if ((_62617_ch == '\n')) {
			(*this)._method_new_line();
			if ((!_62113_raw)) {
				(*this)._method_push_err(jule::Str("missing_string_end", 18),jule::Slice<jule::Any>({}));
				((*this)._field_pos)++;
				return jule::Str("", 0);
			}
		}
		jule::Str _63817_r = (*this)._method_get_rune((*this)._field_data.slice(static_cast<jule::Int>((*this)._field_pos)),_62113_raw);
		_61817_s+=_63817_r;
		(*this)._field_column+=static_cast<jule::I64>(_63817_r.len());
		if ((_62617_ch == _61913_mark)) {
			goto _iter_end_4698142416;
		}
	}
	_iter_next_4698142416:;
	goto _iter_begin_4698142416;
	_iter_end_4698142416:;
	return _61817_s;
}



inline void _11cec0de0_Lex::_method_new_line(void) {
	(*this)._field_first_token_of_line=true;
	((*this)._field_row)++;
	(*this)._field_column=1LL;
}



inline jule::Bool _11cec0de0_Lex::_method_is_op(jule::Slice<jule::U8> _65531_txt,jule::Str _65544_kind,jule::Uint _65555_id,_11ce22a00_Token* _65572_t) {
	if ((!_11cec0de0_bytes_has_prefix(_65531_txt,_65544_kind))) {
		return false;
	}
	_65572_t->_field_kind=_65544_kind;
	_65572_t->_field_id=_65555_id;
	(*this)._field_pos+=static_cast<jule::I64>(_65544_kind.len());
	return true;
}



inline jule::Bool _11cec0de0_Lex::_method_lex_basic_ops(jule::Slice<jule::U8> _66639_txt,_11ce22a00_Token* _66656_tok) {
	{
		auto &__julec_range_expr = _11cec0de0_BASIC_OPS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_11cec0de0_KindPair _11cec0de0_pair{_11cec0de0_KindPair()};_11cec0de0_pair = *__julec_range_begin;
			_iter_begin_4698176624:;
			{
				if ((*this)._method_is_op(_66639_txt,_11cec0de0_pair._field_kind,_11cec0de0_pair._field_id,_66656_tok)) {
					return true;
				}
			}
			_iter_next_4698176624:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11cec0de0_pair = *__julec_range_begin; goto _iter_begin_4698176624; }
			_iter_end_4698176624:;
		}
	}
	return false;
}



inline jule::Bool _11cec0de0_Lex::_method_lex_id(jule::Slice<jule::U8> _67632_txt,_11ce22a00_Token* _67649_t) {
	jule::Str _67713_lex = (*this)._method_id(_67632_txt);
	if ((_67713_lex == jule::Str("", 0))) {
		return false;
	}
	_67649_t->_field_kind=_67713_lex;
	_67649_t->_field_id=2LLU;
	return true;
}



inline jule::Bool _11cec0de0_Lex::_method_lex_num(jule::Slice<jule::U8> _68733_txt,_11ce22a00_Token* _68750_t) {
	jule::Str _68813_lex = (*this)._method_num(_68733_txt);
	if ((_68813_lex == jule::Str("", 0))) {
		return false;
	}
	_68750_t->_field_kind=_68813_lex;
	_68750_t->_field_id=6LLU;
	return true;
}



inline _11ce22a00_Token _11cec0de0_Lex::_method_token(void) {
	_11ce22a00_Token _70017_t = _11ce22a00_Token((*this)._field_file,jule::Int(),jule::Int(),jule::Str(),0LLU);
	jule::Slice<jule::U8> _70213_txt = (*this)._method_resume();
	if ((_70213_txt == nullptr)) {
		return _70017_t;
	}
	_70017_t._field_column=(*this)._field_column;
	_70017_t._field_row=(*this)._field_row;
	{
		auto _match_expr{ true };
		if (!((*this)._method_lex_num(_70213_txt,(&_70017_t)) == _match_expr)) { goto _case_end_4698210000; }
		goto _match_end_4698203248;
		_case_end_4698210000:;
		if (!((_70213_txt[static_cast<jule::Int>(0LL)] == '\'') == _match_expr)) { goto _case_end_4698210592; }
		_case_begin_4698210592:;
		{
			_70017_t._field_kind=(*this)._method_lex_rune(_70213_txt);
			_70017_t._field_id=6LLU;
			return _70017_t;
		}
		goto _match_end_4698203248;
		_case_end_4698210592:;
		if (!(((_70213_txt[static_cast<jule::Int>(0LL)] == '\"') || (_70213_txt[static_cast<jule::Int>(0LL)] == '`')) == _match_expr)) { goto _case_end_4698204256; }
		_case_begin_4698204256:;
		{
			_70017_t._field_kind=(*this)._method_lex_str();
			_70017_t._field_id=6LLU;
			return _70017_t;
		}
		goto _match_end_4698203248;
		_case_end_4698204256:;
		if (!(_11cec0de0_bytes_has_prefix(_70213_txt,jule::Str("//", 2)) == _match_expr)) { goto _case_end_4698204368; }
		_case_begin_4698204368:;
		{
			{
				(*this)._method_lex_line_comment((&_70017_t));
			}
			return _70017_t;
		}
		goto _match_end_4698203248;
		_case_end_4698204368:;
		if (!(_11cec0de0_bytes_has_prefix(_70213_txt,jule::Str("/*", 2)) == _match_expr)) { goto _case_end_4698204480; }
		_case_begin_4698204480:;
		{
			(*this)._method_lex_range_comment();
			return _70017_t;
		}
		goto _match_end_4698203248;
		_case_end_4698204480:;
		if (!((*this)._method_is_op(_70213_txt,jule::Str("(", 1),3LLU,(&_70017_t)) == _match_expr || (*this)._method_is_op(_70213_txt,jule::Str(")", 1),3LLU,(&_70017_t)) == _match_expr || (*this)._method_is_op(_70213_txt,jule::Str("{", 1),3LLU,(&_70017_t)) == _match_expr || (*this)._method_is_op(_70213_txt,jule::Str("}", 1),3LLU,(&_70017_t)) == _match_expr || (*this)._method_is_op(_70213_txt,jule::Str("[", 1),3LLU,(&_70017_t)) == _match_expr || (*this)._method_is_op(_70213_txt,jule::Str("]", 1),3LLU,(&_70017_t)) == _match_expr || (*this)._method_lex_basic_ops(_70213_txt,(&_70017_t)) == _match_expr)) { goto _case_end_4698210896; }
		goto _match_end_4698203248;
		_case_end_4698210896:;
		if (!((*this)._method_lex_id(_70213_txt,(&_70017_t)) == _match_expr)) { goto _case_end_4698211008; }
		_case_begin_4698211008:;
		{
			{
				auto &__julec_range_expr = _11cec0de0_KEYWORDS;
				if (__julec_range_expr.begin() != __julec_range_expr.end()) {
					auto __julec_range_begin = __julec_range_expr.begin();
					const auto __julec_range_end = __julec_range_expr.end();
					_11cec0de0_KindPair _11cec0de0_pair{_11cec0de0_KindPair()};_11cec0de0_pair = *__julec_range_begin;
					_iter_begin_4698237104:;
					{
						if ((_11cec0de0_pair._field_kind == _70017_t._field_kind)) {
							_70017_t._field_id=_11cec0de0_pair._field_id;
							goto _iter_end_4698237104;
						}
					}
					_iter_next_4698237104:;
					++__julec_range_begin;
					if (__julec_range_begin != __julec_range_end) { _11cec0de0_pair = *__julec_range_begin; goto _iter_begin_4698237104; }
					_iter_end_4698237104:;
				}
			}
		}
		goto _match_end_4698203248;
		_case_end_4698211008:;
		_case_begin_4698203792:;
		{
			jule::I32 _75218_r{};
			jule::Int _75221_sz{};
			std::tie(_75218_r,_75221_sz) = _10dba43b0_decode_rune(_70213_txt);
			(*this)._method_push_err(jule::Str("invalid_token", 13),jule::Slice<jule::Any>({jule::Any(_75218_r)}));
			(*this)._field_column+=_75221_sz;
			(*this)._field_pos+=_75221_sz;
			return _70017_t;
		}
		goto _match_end_4698203248;
		_case_end_4698203792:;
		_match_end_4698203248:;
	}
	(*this)._field_column+=static_cast<jule::I64>(_70017_t._field_kind.len());
	return _70017_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _11cec0de0_Lex &_Src) {
	_Stream << "Lex{";
	_Stream << "first_token_of_line:" << _Src._field_first_token_of_line << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _11ce19be0_Ast &_Src) {
	_Stream << "Ast{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "top_directives:" << _Src._field_top_directives << ", ";
	_Stream << "use_decls:" << _Src._field_use_decls << ", ";
	_Stream << "impls:" << _Src._field_impls << ", ";
	_Stream << "comments:" << _Src._field_comments << ", ";
	_Stream << "decls:" << _Src._field_decls;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_10e3fc8f0_StructIns> _10e3fc8f0_Struct::_method_instance(void) {
	if (((static_cast<jule::I64>(this->self->_field_generics.len()) == 0LL) && (static_cast<jule::I64>(this->self->_field_instances.len()) == 1LL))) {
		return this->self->_field_instances[static_cast<jule::Int>(0LL)];
	}
	jule::Ref<_10e3fc8f0_StructIns> _6817_ins = jule::new_struct<_10e3fc8f0_StructIns>(new( std::nothrow ) _10e3fc8f0_StructIns(jule::Bool(),this->self,jule::Slice<jule::Ref<_10eeb79b0_TypeKind>>(),jule::Slice<jule::Ref<_10e3fc8f0_FieldIns>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(this->self->_field_fields.len()))),jule::Slice<jule::Ref<_10e56a140_Fn>>::alloc(static_cast<jule::Int>(static_cast<jule::Int>(this->self->_field_methods._method_len()))),jule::Bool()));
	{
		auto &__julec_range_expr = this->self->_field_fields;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e3fc8f0_i{jule::Int()};_10e3fc8f0_i = 0;
			jule::Ref<_10e3fc8f0_Field> _10e3fc8f0_f{jule::Ref<_10e3fc8f0_Field>()};_10e3fc8f0_f = *__julec_range_begin;
			_iter_begin_4708077104:;
			{
				_6817_ins->_field_fields[static_cast<jule::Int>(_10e3fc8f0_i)]=_10e3fc8f0_f->_method_instance();
				if ((jule::real(_10e3fc8f0_f->_field_kind->_field_kind) && _10eeb79b0_is_mut(_10e3fc8f0_f->_field_kind->_field_kind))) {
					_6817_ins->_field_has_mut=true;
				}
			}
			_iter_next_4708077104:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e3fc8f0_i; _10e3fc8f0_f = *__julec_range_begin; goto _iter_begin_4708077104; }
			_iter_end_4708077104:;
		}
	}
	jule::Int _8117_i = 0LL;
	_iter_begin_4708066064:;
	if (!((_8117_i < static_cast<jule::Int>(this->self->_field_methods._method_len())))) { goto _iter_end_4708066064; }
	{
		jule::Ref<_10e56a140_Fn> _8321_f = this->self->_field_methods._method_at(_8117_i);
		jule::Ref<_10e56a140_Fn> _8421_fins = jule::new_struct<_10e56a140_Fn>(new( std::nothrow ) _10e56a140_Fn(_8321_f->_field_sema,_8321_f->_field_token,_8321_f->_field_global,_8321_f->_field_unsafety,_8321_f->_field_public,_8321_f->_field_cpp_linked,_8321_f->_field_statically,_8321_f->_field_ident,_8321_f->_field_directives,_8321_f->_field_doc,_8321_f->_field_scope,_8321_f->_field_generics,_8321_f->_field_result,_8321_f->_field_params,_8321_f->_field_owner,_8321_f->_field_references,nullptr));
		_6817_ins->_field_methods[static_cast<jule::Int>(_8117_i)]=_8421_fins;
	}
	_iter_next_4708066064:;
	(_8117_i)++;
	goto _iter_begin_4708066064;
	_iter_end_4708066064:;
	return _6817_ins;
}



inline jule::Ref<_10e3fc8f0_StructIns> _10e3fc8f0_Struct::_method_append_instance(jule::Ref<_10e3fc8f0_StructIns> _11138_ins) {
	if (((static_cast<jule::I64>((*this)._field_generics.len()) == 0LL) && (static_cast<jule::I64>((*this)._field_instances.len()) == 1LL))) {
		return (*this)._field_instances[static_cast<jule::Int>(0LL)];
	}
	{
		auto &__julec_range_expr = (*this)._field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e3fc8f0_StructIns> _10e3fc8f0_ains{jule::Ref<_10e3fc8f0_StructIns>()};_10e3fc8f0_ains = *__julec_range_begin;
			_iter_begin_4708123024:;
			{
				{
					auto &__julec_range_expr = _10e3fc8f0_ains->_field_generics;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Int _10e3fc8f0_i{jule::Int()};_10e3fc8f0_i = 0;
						jule::Ref<_10eeb79b0_TypeKind> _10e3fc8f0_ag{jule::Ref<_10eeb79b0_TypeKind>()};_10e3fc8f0_ag = *__julec_range_begin;
						_iter_begin_4708124256:;
						{
							if (_10e3fc8f0_ag->_method_equals(_11138_ins->_field_generics[static_cast<jule::Int>(_10e3fc8f0_i)])) {
								return _10e3fc8f0_ains;
							}
						}
						_iter_next_4708124256:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { ++_10e3fc8f0_i; _10e3fc8f0_ag = *__julec_range_begin; goto _iter_begin_4708124256; }
						_iter_end_4708124256:;
					}
				}
			}
			_iter_next_4708123024:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e3fc8f0_ains = *__julec_range_begin; goto _iter_begin_4708123024; }
			_iter_end_4708123024:;
		}
	}
	(*this)._field_instances=append((*this)._field_instances,jule::Slice<jule::Ref<_10e3fc8f0_StructIns>>({_11138_ins}));
	return jule::new_ref<_10e3fc8f0_StructIns>();
}



inline jule::Ref<_10e56a140_Fn> _10e3fc8f0_Struct::_method_find_method(jule::Str _13234_ident,jule::Bool _13246_statically) {
	jule::Int _13317_i = 0LL;
	_iter_begin_4708136624:;
	if (!((_13317_i < static_cast<jule::Int>((*this)._field_methods._method_len())))) { goto _iter_end_4708136624; }
	{
		jule::Ref<_10e56a140_Fn> _13521_f = (*this)._field_methods._method_at(_13317_i);
		if (((_13521_f->_field_statically == _13246_statically) && (_13521_f->_field_ident == _13234_ident))) {
			return _13521_f;
		}
	}
	_iter_next_4708136624:;
	(_13317_i)++;
	goto _iter_begin_4708136624;
	_iter_end_4708136624:;
	return jule::new_ref<_10e56a140_Fn>();
}



inline jule::Ref<_10e3fc8f0_Field> _10e3fc8f0_Struct::_method_find_field(jule::Str _14533_ident) {
	{
		auto &__julec_range_expr = (*this)._field_fields;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e3fc8f0_Field> _10e3fc8f0_f{jule::Ref<_10e3fc8f0_Field>()};_10e3fc8f0_f = *__julec_range_begin;
			_iter_begin_4708145232:;
			{
				if ((_10e3fc8f0_f->_field_ident == _14533_ident)) {
					return _10e3fc8f0_f;
				}
			}
			_iter_next_4708145232:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e3fc8f0_f = *__julec_range_begin; goto _iter_begin_4708145232; }
			_iter_end_4708145232:;
		}
	}
	return jule::new_ref<_10e3fc8f0_Field>();
}



inline jule::Bool _10e3fc8f0_Struct::_method_is_implements(jule::Ref<_10e3d6eb0_Trait> _15532_t) {
	{
		auto &__julec_range_expr = (*this)._field_implements;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e3d6eb0_Trait> _10e3fc8f0_it{jule::Ref<_10e3d6eb0_Trait>()};_10e3fc8f0_it = *__julec_range_begin;
			_iter_begin_4708149584:;
			{
				if (((_15532_t).alloc == (_10e3fc8f0_it).alloc)) {
					return true;
				}
			}
			_iter_next_4708149584:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e3fc8f0_it = *__julec_range_begin; goto _iter_begin_4708149584; }
			_iter_end_4708149584:;
		}
	}
	return false;
}



inline jule::Bool _10e3fc8f0_Struct::_method_is_derives(jule::Str _16529_ident) {
	{
		auto &__julec_range_expr = (*this)._field_directives;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11ce1fd50_Directive> _10e3fc8f0_d{jule::Ref<_11ce1fd50_Directive>()};_10e3fc8f0_d = *__julec_range_begin;
			_iter_begin_4708151088:;
			{
				if ((_10e3fc8f0_d->_field_tag == jule::Str("derive", 6))) {
					if (((static_cast<jule::I64>(_10e3fc8f0_d->_field_args.len()) == 1LL) && (_10e3fc8f0_d->_field_args[static_cast<jule::Int>(0LL)] == _16529_ident))) {
						return true;
					}
				}
			}
			_iter_next_4708151088:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e3fc8f0_d = *__julec_range_begin; goto _iter_begin_4708151088; }
			_iter_end_4708151088:;
		}
	}
	return false;
}



inline jule::Bool _10e3fc8f0_Struct::_method_is_uses(jule::Ref<_10e3fc8f0_Struct> _17726_s) {
	{
		auto &__julec_range_expr = (*this)._field_uses;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e3fc8f0_Struct> _10e3fc8f0_u{jule::Ref<_10e3fc8f0_Struct>()};_10e3fc8f0_u = *__julec_range_begin;
			_iter_begin_4708162672:;
			{
				_iter_begin_4708164640:;
				if (!(((_17726_s).alloc == (_10e3fc8f0_u).alloc))) { goto _iter_end_4708164640; }
				{
					return true;
				}
				_iter_next_4708164640:;
				goto _iter_begin_4708164640;
				_iter_end_4708164640:;
			}
			_iter_next_4708162672:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e3fc8f0_u = *__julec_range_begin; goto _iter_begin_4708162672; }
			_iter_end_4708162672:;
		}
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e3fc8f0_Struct &_Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "depends:" << _Src._field_depends << ", ";
	_Stream << "uses:" << _Src._field_uses << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "implements:" << _Src._field_implements << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Int _10e8ca650_ReferenceStack::_method_len(void) {
	return static_cast<jule::Int>((*this)._field_buffer._method_len());
}



inline jule::Any _10e8ca650_ReferenceStack::_method_at(jule::Int _5125_i) {
	return (*this)._field_buffer._method_at(_5125_i);
}



inline void _10e8ca650_ReferenceStack::_method_push(jule::Any _5631_ref) {
	(*this)._field_buffer._method_push(_5631_ref);
}



inline void _10e8ca650_ReferenceStack::_method_remove(jule::Int _6129_i) {
	(*this)._field_buffer._method_remove_range(_6129_i,1LL);
}



inline jule::Bool _10e8ca650_ReferenceStack::_method_exist_0(jule::Ref<_10ebc2ad0_Var> _6627_t) {
	jule::Int _6717_i = 0LL;
	_iter_begin_4713446416:;
	if (!((_6717_i < static_cast<jule::Int>((*this)._method_len())))) { goto _iter_end_4713446416; }
	{
		jule::Any _6917_ref = (&(*this)._field_buffer)->_method_at(_6717_i);
		{
			auto _match_expr{ _6917_ref };
			if (!(_match_expr.type_is<jule::Ref<_10ebc2ad0_Var>>())) { goto _case_end_4713450576; }
			_case_begin_4713450576:;
			{
				if (((_6917_ref.operator jule::Ref<_10ebc2ad0_Var>()).alloc == (_6627_t).alloc)) {
					return true;
				}
			}
			goto _match_end_4713449952;
			_case_end_4713450576:;
			_match_end_4713449952:;
		}
	}
	_iter_next_4713446416:;
	(_6717_i)++;
	goto _iter_begin_4713446416;
	_iter_end_4713446416:;
	return false;
}

inline jule::Bool _10e8ca650_ReferenceStack::_method_exist_1(jule::Ref<_10e56a140_Fn> _6627_t) {
	jule::Int _6717_i = 0LL;
	_iter_begin_4713464496:;
	if (!((_6717_i < static_cast<jule::Int>((*this)._method_len())))) { goto _iter_end_4713464496; }
	{
		jule::Any _6917_ref = (&(*this)._field_buffer)->_method_at(_6717_i);
		{
			auto _match_expr{ _6917_ref };
			if (!(_match_expr.type_is<jule::Ref<_10e56a140_Fn>>())) { goto _case_end_4713468288; }
			_case_begin_4713468288:;
			{
				if (((_6917_ref.operator jule::Ref<_10e56a140_Fn>()).alloc == (_6627_t).alloc)) {
					return true;
				}
			}
			goto _match_end_4713468512;
			_case_end_4713468288:;
			_match_end_4713468512:;
		}
	}
	_iter_next_4713464496:;
	(_6717_i)++;
	goto _iter_begin_4713464496;
	_iter_end_4713464496:;
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e8ca650_ReferenceStack &_Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _10e97fcf0_Scope &_Src) {
	_Stream << "Scope{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_10e9b6a10_ImportInfo> _10ee5c510_SymbolTable::_method_find_package(jule::Str _2631_ident) {
	jule::Int _2717_i = 0LL;
	_iter_begin_4559959072:;
	if (!((_2717_i < static_cast<jule::Int>((*this)._field_imports._method_len())))) { goto _iter_end_4559959072; }
	{
		jule::Ref<_10e9b6a10_ImportInfo> _2921_pkg = (*this)._field_imports._method_at(_2717_i);
		if ((_2921_pkg->_field_ident == _2631_ident)) {
			return _2921_pkg;
		}
	}
	_iter_next_4559959072:;
	(_2717_i)++;
	goto _iter_begin_4559959072;
	_iter_end_4559959072:;
	return jule::new_ref<_10e9b6a10_ImportInfo>();
}



inline jule::Ref<_10e9b6a10_ImportInfo> _10ee5c510_SymbolTable::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_10e9b6a10_ImportInfo>)> _4033_selector) {
	if ((_4033_selector == nullptr)) {
		return jule::new_ref<_10e9b6a10_ImportInfo>();
	}
	jule::Int _4517_i = 0LL;
	_iter_begin_4559966480:;
	if (!((_4517_i < static_cast<jule::Int>((*this)._field_imports._method_len())))) { goto _iter_end_4559966480; }
	{
		jule::Ref<_10e9b6a10_ImportInfo> _4721_pkg = (*this)._field_imports._method_at(_4517_i);
		if (_4033_selector(_4721_pkg)) {
			return _4721_pkg;
		}
	}
	_iter_next_4559966480:;
	(_4517_i)++;
	goto _iter_begin_4559966480;
	_iter_end_4559966480:;
	return jule::new_ref<_10e9b6a10_ImportInfo>();
}



inline jule::Ref<_10ebc2ad0_Var> _10ee5c510_SymbolTable::_method_find_var(jule::Str _5727_ident,jule::Bool _5739_cpp_linked) {
	return (*this)._method___find_var(_5727_ident,_5739_cpp_linked,false);
}



inline jule::Ref<_10eeb79b0_TypeAlias> _10ee5c510_SymbolTable::_method_find_type_alias(jule::Str _6334_ident,jule::Bool _6346_cpp_linked) {
	return (*this)._method___find_type_alias(_6334_ident,_6346_cpp_linked,false);
}



inline jule::Ref<_10e3fc8f0_Struct> _10ee5c510_SymbolTable::_method_find_struct(jule::Str _6930_ident,jule::Bool _6942_cpp_linked) {
	jule::Int _7017_i = 0LL;
	_iter_begin_4559985424:;
	if (!((_7017_i < static_cast<jule::Int>((*this)._field_structs._method_len())))) { goto _iter_end_4559985424; }
	{
		jule::Ref<_10e3fc8f0_Struct> _7221_s = (*this)._field_structs._method_at(_7017_i);
		if (((_7221_s->_field_ident == _6930_ident) && (_7221_s->_field_cpp_linked == _6942_cpp_linked))) {
			return _7221_s;
		}
	}
	_iter_next_4559985424:;
	(_7017_i)++;
	goto _iter_begin_4559985424;
	_iter_end_4559985424:;
	return jule::new_ref<_10e3fc8f0_Struct>();
}



inline jule::Ref<_10e56a140_Fn> _10ee5c510_SymbolTable::_method_find_fn(jule::Str _8226_ident,jule::Bool _8238_cpp_linked) {
	jule::Int _8317_i = 0LL;
	_iter_begin_4559994928:;
	if (!((_8317_i < static_cast<jule::Int>((*this)._field_funcs._method_len())))) { goto _iter_end_4559994928; }
	{
		jule::Ref<_10e56a140_Fn> _8521_f = (*this)._field_funcs._method_at(_8317_i);
		if (((_8521_f->_field_ident == _8226_ident) && (_8521_f->_field_cpp_linked == _8238_cpp_linked))) {
			return _8521_f;
		}
	}
	_iter_next_4559994928:;
	(_8317_i)++;
	goto _iter_begin_4559994928;
	_iter_end_4559994928:;
	return jule::new_ref<_10e56a140_Fn>();
}



inline jule::Ref<_10e3d6eb0_Trait> _10ee5c510_SymbolTable::_method_find_trait(jule::Str _9529_ident) {
	jule::Int _9617_i = 0LL;
	_iter_begin_4559995216:;
	if (!((_9617_i < static_cast<jule::Int>((*this)._field_traits._method_len())))) { goto _iter_end_4559995216; }
	{
		jule::Ref<_10e3d6eb0_Trait> _9821_t = (*this)._field_traits._method_at(_9617_i);
		if ((_9821_t->_field_ident == _9529_ident)) {
			return _9821_t;
		}
	}
	_iter_next_4559995216:;
	(_9617_i)++;
	goto _iter_begin_4559995216;
	_iter_end_4559995216:;
	return jule::new_ref<_10e3d6eb0_Trait>();
}



inline jule::Ref<_10e975f00_Enum> _10ee5c510_SymbolTable::_method_find_enum(jule::Str _10828_ident) {
	jule::Int _10917_i = 0LL;
	_iter_begin_4560010064:;
	if (!((_10917_i < static_cast<jule::Int>((*this)._field_enums._method_len())))) { goto _iter_end_4560010064; }
	{
		jule::Ref<_10e975f00_Enum> _11121_e = (*this)._field_enums._method_at(_10917_i);
		if ((_11121_e->_field_ident == _10828_ident)) {
			return _11121_e;
		}
	}
	_iter_next_4560010064:;
	(_10917_i)++;
	goto _iter_begin_4560010064;
	_iter_end_4560010064:;
	return jule::new_ref<_10e975f00_Enum>();
}



inline jule::Ref<_10ebc2ad0_Var> _10ee5c510_SymbolTable::_method___find_var(jule::Str _12129_ident,jule::Bool _12141_cpp_linked,jule::Bool _12159_reverse) {
	if (_12159_reverse) {
		jule::Int _12321_i = static_cast<jule::Int>((static_cast<jule::Int>((*this)._field_vars._method_len()) - 1LL));
		_iter_begin_4560023200:;
		if (!((_12321_i >= 0LL))) { goto _iter_end_4560023200; }
		{
			jule::Ref<_10ebc2ad0_Var> _12525_v = (*this)._field_vars._method_at(_12321_i);
			if (((_12525_v->_field_ident == _12129_ident) && (_12525_v->_field_cpp_linked == _12141_cpp_linked))) {
				return _12525_v;
			}
		}
		_iter_next_4560023200:;
		(_12321_i)--;
		goto _iter_begin_4560023200;
		_iter_end_4560023200:;
	} else {
		jule::Int _13121_i = 0LL;
		_iter_begin_4560029488:;
		if (!((_13121_i < static_cast<jule::Int>((*this)._field_vars._method_len())))) { goto _iter_end_4560029488; }
		{
			jule::Ref<_10ebc2ad0_Var> _13325_v = (*this)._field_vars._method_at(_13121_i);
			if (((_13325_v->_field_ident == _12129_ident) && (_13325_v->_field_cpp_linked == _12141_cpp_linked))) {
				return _13325_v;
			}
		}
		_iter_next_4560029488:;
		(_13121_i)++;
		goto _iter_begin_4560029488;
		_iter_end_4560029488:;
	}
	return jule::new_ref<_10ebc2ad0_Var>();
}



inline jule::Ref<_10eeb79b0_TypeAlias> _10ee5c510_SymbolTable::_method___find_type_alias(jule::Str _14236_ident,jule::Bool _14248_cpp_linked,jule::Bool _14266_reverse) {
	if (_14266_reverse) {
		jule::Int _14421_i = static_cast<jule::Int>((static_cast<jule::Int>((*this)._field_type_aliases._method_len()) - 1LL));
		_iter_begin_4560041216:;
		if (!((_14421_i >= 0LL))) { goto _iter_end_4560041216; }
		{
			jule::Ref<_10eeb79b0_TypeAlias> _14625_ta = (*this)._field_type_aliases._method_at(_14421_i);
			if (((_14625_ta->_field_ident == _14236_ident) && (_14625_ta->_field_cpp_linked == _14248_cpp_linked))) {
				return _14625_ta;
			}
		}
		_iter_next_4560041216:;
		(_14421_i)--;
		goto _iter_begin_4560041216;
		_iter_end_4560041216:;
	} else {
		jule::Int _15221_i = 0LL;
		_iter_begin_4560047504:;
		if (!((_15221_i < static_cast<jule::Int>((*this)._field_type_aliases._method_len())))) { goto _iter_end_4560047504; }
		{
			jule::Ref<_10eeb79b0_TypeAlias> _15425_ta = (*this)._field_type_aliases._method_at(_15221_i);
			if (((_15425_ta->_field_ident == _14236_ident) && (_15425_ta->_field_cpp_linked == _14248_cpp_linked))) {
				return _15425_ta;
			}
		}
		_iter_next_4560047504:;
		(_15221_i)++;
		goto _iter_begin_4560047504;
		_iter_end_4560047504:;
	}
	return jule::new_ref<_10eeb79b0_TypeAlias>();
}



inline jule::Any _10ee5c510_SymbolTable::_method_def_by_ident(jule::Str _16531_ident,jule::Bool _16543_cpp_linked) {
	jule::Int _16617_i = 0LL;
	_iter_begin_4560055968:;
	if (!((_16617_i < static_cast<jule::Int>((*this)._field_vars._method_len())))) { goto _iter_end_4560055968; }
	{
		jule::Ref<_10ebc2ad0_Var> _16821_v = (*this)._field_vars._method_at(_16617_i);
		if (((_16821_v->_field_ident == _16531_ident) && (_16821_v->_field_cpp_linked == _16543_cpp_linked))) {
			return _16821_v;
		}
	}
	_iter_next_4560055968:;
	(_16617_i)++;
	goto _iter_begin_4560055968;
	_iter_end_4560055968:;
	_16617_i=0LL;
	_iter_begin_4560061952:;
	if (!((_16617_i < static_cast<jule::Int>((*this)._field_type_aliases._method_len())))) { goto _iter_end_4560061952; }
	{
		jule::Ref<_10eeb79b0_TypeAlias> _17621_ta = (*this)._field_type_aliases._method_at(_16617_i);
		if (((_17621_ta->_field_ident == _16531_ident) && (_17621_ta->_field_cpp_linked == _16543_cpp_linked))) {
			return _17621_ta;
		}
	}
	_iter_next_4560061952:;
	(_16617_i)++;
	goto _iter_begin_4560061952;
	_iter_end_4560061952:;
	_16617_i=0LL;
	_iter_begin_4560068576:;
	if (!((_16617_i < static_cast<jule::Int>((*this)._field_structs._method_len())))) { goto _iter_end_4560068576; }
	{
		jule::Ref<_10e3fc8f0_Struct> _18421_s = (*this)._field_structs._method_at(_16617_i);
		if (((_18421_s->_field_ident == _16531_ident) && (_18421_s->_field_cpp_linked == _16543_cpp_linked))) {
			return _18421_s;
		}
	}
	_iter_next_4560068576:;
	(_16617_i)++;
	goto _iter_begin_4560068576;
	_iter_end_4560068576:;
	_16617_i=0LL;
	_iter_begin_4560071696:;
	if (!((_16617_i < static_cast<jule::Int>((*this)._field_funcs._method_len())))) { goto _iter_end_4560071696; }
	{
		jule::Ref<_10e56a140_Fn> _19221_f = (*this)._field_funcs._method_at(_16617_i);
		if (((_19221_f->_field_ident == _16531_ident) && (_19221_f->_field_cpp_linked == _16543_cpp_linked))) {
			return _19221_f;
		}
	}
	_iter_next_4560071696:;
	(_16617_i)++;
	goto _iter_begin_4560071696;
	_iter_end_4560071696:;
	if (_16543_cpp_linked) {
		return nullptr;
	}
	_16617_i=0LL;
	_iter_begin_4560082144:;
	if (!((_16617_i < static_cast<jule::Int>((*this)._field_traits._method_len())))) { goto _iter_end_4560082144; }
	{
		jule::Ref<_10e3d6eb0_Trait> _20421_t = (*this)._field_traits._method_at(_16617_i);
		if ((_20421_t->_field_ident == _16531_ident)) {
			return _20421_t;
		}
	}
	_iter_next_4560082144:;
	(_16617_i)++;
	goto _iter_begin_4560082144;
	_iter_end_4560082144:;
	_16617_i=0LL;
	_iter_begin_4560085488:;
	if (!((_16617_i < static_cast<jule::Int>((*this)._field_enums._method_len())))) { goto _iter_end_4560085488; }
	{
		jule::Ref<_10e975f00_Enum> _21221_e = (*this)._field_enums._method_at(_16617_i);
		if ((_21221_e->_field_ident == _16531_ident)) {
			return _21221_e;
		}
	}
	_iter_next_4560085488:;
	(_16617_i)++;
	goto _iter_begin_4560085488;
	_iter_end_4560085488:;
	return nullptr;
}



inline jule::Bool _10ee5c510_SymbolTable::_method_is_duplicated_ident(jule::Uintptr _22434_itself,jule::Str _22451_ident,jule::Bool _22463_cpp_linked) {
	jule::Int _22517_i = 0LL;
	_iter_begin_4560095648:;
	if (!((_22517_i < static_cast<jule::Int>((*this)._field_vars._method_len())))) { goto _iter_end_4560095648; }
	{
		jule::Ref<_10ebc2ad0_Var> _22717_v = (&(*this)._field_vars)->_method_at(_22517_i);
		if ((((((jule::Uintptr)((_22717_v).alloc)) != _22434_itself) && (_22717_v->_field_ident == _22451_ident)) && (_22717_v->_field_cpp_linked == _22463_cpp_linked))) {
			return true;
		}
	}
	_iter_next_4560095648:;
	(_22517_i)++;
	goto _iter_begin_4560095648;
	_iter_end_4560095648:;
	_22517_i=0LL;
	_iter_begin_4560096144:;
	if (!((_22517_i < static_cast<jule::Int>((*this)._field_type_aliases._method_len())))) { goto _iter_end_4560096144; }
	{
		jule::Ref<_10eeb79b0_TypeAlias> _23517_ta = (&(*this)._field_type_aliases)->_method_at(_22517_i);
		if ((((((jule::Uintptr)((_23517_ta).alloc)) != _22434_itself) && (_23517_ta->_field_ident == _22451_ident)) && (_23517_ta->_field_cpp_linked == _22463_cpp_linked))) {
			return true;
		}
	}
	_iter_next_4560096144:;
	(_22517_i)++;
	goto _iter_begin_4560096144;
	_iter_end_4560096144:;
	_22517_i=0LL;
	_iter_begin_4560107536:;
	if (!((_22517_i < static_cast<jule::Int>((*this)._field_structs._method_len())))) { goto _iter_end_4560107536; }
	{
		jule::Ref<_10e3fc8f0_Struct> _24317_s = (&(*this)._field_structs)->_method_at(_22517_i);
		if ((((((jule::Uintptr)((_24317_s).alloc)) != _22434_itself) && (_24317_s->_field_ident == _22451_ident)) && (_24317_s->_field_cpp_linked == _22463_cpp_linked))) {
			return true;
		}
	}
	_iter_next_4560107536:;
	(_22517_i)++;
	goto _iter_begin_4560107536;
	_iter_end_4560107536:;
	_22517_i=0LL;
	_iter_begin_4560114112:;
	if (!((_22517_i < static_cast<jule::Int>((*this)._field_funcs._method_len())))) { goto _iter_end_4560114112; }
	{
		jule::Ref<_10e56a140_Fn> _25117_f = (&(*this)._field_funcs)->_method_at(_22517_i);
		if ((((((jule::Uintptr)((_25117_f).alloc)) != _22434_itself) && (_25117_f->_field_ident == _22451_ident)) && (_25117_f->_field_cpp_linked == _22463_cpp_linked))) {
			return true;
		}
	}
	_iter_next_4560114112:;
	(_22517_i)++;
	goto _iter_begin_4560114112;
	_iter_end_4560114112:;
	if (_22463_cpp_linked) {
		return false;
	}
	_22517_i=0LL;
	_iter_begin_4560119392:;
	if (!((_22517_i < static_cast<jule::Int>((*this)._field_traits._method_len())))) { goto _iter_end_4560119392; }
	{
		jule::Ref<_10e3d6eb0_Trait> _26317_t = (&(*this)._field_traits)->_method_at(_22517_i);
		if (((((jule::Uintptr)((_26317_t).alloc)) != _22434_itself) && (_26317_t->_field_ident == _22451_ident))) {
			return true;
		}
	}
	_iter_next_4560119392:;
	(_22517_i)++;
	goto _iter_begin_4560119392;
	_iter_end_4560119392:;
	_22517_i=0LL;
	_iter_begin_4560132528:;
	if (!((_22517_i < static_cast<jule::Int>((*this)._field_enums._method_len())))) { goto _iter_end_4560132528; }
	{
		jule::Ref<_10e975f00_Enum> _27117_e = (&(*this)._field_enums)->_method_at(_22517_i);
		if (((((jule::Uintptr)((_27117_e).alloc)) != _22434_itself) && (_27117_e->_field_ident == _22451_ident))) {
			return true;
		}
	}
	_iter_next_4560132528:;
	(_22517_i)++;
	goto _iter_begin_4560132528;
	_iter_end_4560132528:;
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _10ee5c510_SymbolTable &_Src) {
	_Stream << "SymbolTable{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "imports:" << _Src._field_imports << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "type_aliases:" << _Src._field_type_aliases << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "funcs:" << _Src._field_funcs << ", ";
	_Stream << "traits:" << _Src._field_traits << ", ";
	_Stream << "enums:" << _Src._field_enums << ", ";
	_Stream << "impls:" << _Src._field_impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Int _11ce06ae0_get_last_errno(void) {
	return errno;
}



inline jule::Str _11ce07810_byte_ptr_to_str(jule::U8* _4531_s) {
	if ((_4531_s == nullptr)) {
		return jule::Str("", 0);
	}
	return __jule_str_from_byte_ptr(_4531_s);
}



inline jule::Int _11ce07810_stat(jule::U8* _5320_path,struct stat* _5337_stat) {
	return static_cast<jule::Int>(__jule_stat(((char*)(_5320_path)),_5337_stat));
}



inline jule::Int _11ce07810_open(jule::U8* _5820_path,jule::Int _5833_flag,jule::Int _5844_mode) {
	return static_cast<jule::Int>(open(((char*)(_5820_path)),_5833_flag,_5844_mode));
}



inline jule::U8* _11ce07810_getcwd(jule::U8* _6422_buff,jule::Uint _6435_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_6422_buff)),_6435_bufflen)));
}



inline DIR* _11ce07810_opendir(jule::U8* _6923_path) {
	return opendir(((char*)(_6923_path)));
}



inline struct dirent* _11ce07810_readdir(DIR* _7227_dir) {
	return readdir(_7227_dir);
}



inline jule::Int _11ce07810_closedir(DIR* _7528_dir) {
	return static_cast<jule::Int>(closedir(_7528_dir));
}



inline jule::I64 _11ce071f0_seek(jule::Int _2613_handle,jule::I64 _2626_offset,jule::Int _2639_origin) {
	return static_cast<jule::I64>(lseek(_2613_handle,_2626_offset,_2639_origin));
}



inline jule::Int _11ce071f0_read(jule::Int _3120_handle,void* _3137_buff,jule::Uint _3152_n) {
	return static_cast<jule::Int>(read(_3120_handle,_3137_buff,_3152_n));
}



inline jule::Int _11ce071f0_close(jule::Int _3614_handle) {
	return static_cast<jule::Int>(close(_3614_handle));
}



inline jule::Int _11ce071f0_write(jule::Int _3921_handle,void* _3934_buff,jule::Uint _3949_n) {
	return static_cast<jule::Int>(write(_3921_handle,_3934_buff,_3949_n));
}



inline void _11ce071f0_exit(jule::Int _4413_code) {
	exit(_4413_code);
}



inline void _10cf2f5b0_free(void* _2924_ptr) {
	free(_2924_ptr);
}



inline jule::Int _10cf088c0_get_last_os_error(void) {
	jule::Int _319_err = static_cast<jule::Int>(_11ce06ae0_get_last_errno());
	{
		auto _match_expr{ _319_err };
		if (!(13LL == _match_expr)) { goto _case_end_4556363952; }
		_case_begin_4556363952:;
		{
			return 1LLU;
		}
		goto _match_end_4556360752;
		_case_end_4556363952:;
		if (!(5LL == _match_expr)) { goto _case_end_4556363360; }
		_case_begin_4556363360:;
		{
			return 2LLU;
		}
		goto _match_end_4556360752;
		_case_end_4556363360:;
		if (!(40LL == _match_expr)) { goto _case_end_4556363760; }
		_case_begin_4556363760:;
		{
			return 3LLU;
		}
		goto _match_end_4556360752;
		_case_end_4556363760:;
		if (!(36LL == _match_expr)) { goto _case_end_4556364160; }
		_case_begin_4556364160:;
		{
			return 4LLU;
		}
		goto _match_end_4556360752;
		_case_end_4556364160:;
		if (!(2LL == _match_expr)) { goto _case_end_4556364272; }
		_case_begin_4556364272:;
		{
			return 5LLU;
		}
		goto _match_end_4556360752;
		_case_end_4556364272:;
		if (!(20LL == _match_expr)) { goto _case_end_4556362608; }
		_case_begin_4556362608:;
		{
			return 6LLU;
		}
		goto _match_end_4556360752;
		_case_end_4556362608:;
		if (!(12LL == _match_expr)) { goto _case_end_4556362720; }
		_case_begin_4556362720:;
		{
			return 7LLU;
		}
		goto _match_end_4556360752;
		_case_end_4556362720:;
		_case_begin_4556362304:;
		{
			return 0LLU;
		}
		goto _match_end_4556360752;
		_case_end_4556362304:;
		_match_end_4556360752:;
	}
}



inline std::tuple<jule::Str,jule::Int> _10cf1adb0_getwd(void) {
	return _10cf25d70___getwd();
}



inline void _10cf1adb0_exit(jule::Int _4913_code) {
	_11ce071f0_exit(_4913_code);
}



inline jule::Str _10cf1adb0_executable(void) {
	return __jule_executable();
}



inline void _10cf1adb0_init(void) {
	{
		(*(&_10cf1adb0_ARGS))=__jule_get_command_line_args();
		(*(&_10cf1adb0_ENV))=__jule_get_environment_variables();
	}
}



inline jule::Bool _10cf24fb0_is_path_sep(jule::U8 _1220_c) {
	return (47LL == _1220_c);
}



inline std::tuple<jule::Str,jule::Int> _10cf25d70___getwd(void) {
	jule::U8* _1513_buff = _11ce07810_getcwd(nullptr,0LLU);
	if ((_1513_buff == nullptr)) {
		return std::make_tuple(jule::Str("", 0),_10cf088c0_get_last_os_error());
	}
	jule::Str _199_pwd = _11ce07810_byte_ptr_to_str(_1513_buff);
	{
		_10cf2f5b0_free(_1513_buff);
	}
	return std::make_tuple(_199_pwd,0LLU);
}



inline jule::Str _12ce95080_clean(jule::Str _12018_path) {
	jule::Str _1219_original_path = _12018_path;
	jule::Int _1229_vol_len = static_cast<jule::Int>(_10cf08a20_volume_name_len(_12018_path));
	_12018_path=_12018_path.slice(static_cast<jule::Int>(_1229_vol_len));
	if ((_12018_path == jule::Str("", 0))) {
		if ((((_1229_vol_len > 1LL) && _10cf24fb0_is_path_sep(_1219_original_path[static_cast<jule::Int>(0LL)])) && _10cf24fb0_is_path_sep(_1219_original_path[static_cast<jule::Int>(1LL)]))) {
			return _12ce95080_from_slash(_1219_original_path);
		}
		return (_1219_original_path + jule::Str(".", 1));
	}
	jule::Bool _1319_rooted = _10cf24fb0_is_path_sep(_12018_path[static_cast<jule::Int>(0LL)]);
	jule::I64 _1389_n = static_cast<jule::I64>(_12018_path.len());
	_12ce95080_LazyBuff _13913_out = _12ce95080_LazyBuff(_12018_path,jule::Slice<jule::U8>(),jule::Int(),_1219_original_path,_1229_vol_len);
	jule::Int _14414_r = 0LL;
	jule::Int _14421_dotdot = 0LL;
	std::tie(_14414_r,_14421_dotdot) = std::make_tuple(0LL,0LL);
	if (_1319_rooted) {
		_13913_out._method_append(47LLU);
		std::tie(_14414_r,_14421_dotdot) = std::make_tuple(1LL,1LL);
	}
	_iter_begin_4556441392:;
	if (!((_14414_r < _1389_n))) { goto _iter_end_4556441392; }
	{
		{
			auto _match_expr{ true };
			if (!(_10cf24fb0_is_path_sep(_12018_path[static_cast<jule::Int>(_14414_r)]) == _match_expr)) { goto _case_end_4556460336; }
			_case_begin_4556460336:;
			{
				(_14414_r)++;
			}
			goto _match_end_4556442368;
			_case_end_4556460336:;
			if (!(((_12018_path[static_cast<jule::Int>(_14414_r)] == '.') && (((_14414_r + 1LL) == _1389_n) || _10cf24fb0_is_path_sep(_12018_path[static_cast<jule::Int>((_14414_r + 1LL))]))) == _match_expr)) { goto _case_end_4556460832; }
			_case_begin_4556460832:;
			{
				(_14414_r)++;
			}
			goto _match_end_4556442368;
			_case_end_4556460832:;
			if (!((((_12018_path[static_cast<jule::Int>(_14414_r)] == '.') && (_12018_path[static_cast<jule::Int>((_14414_r + 1LL))] == '.')) && (((_14414_r + 2LL) == _1389_n) || _10cf24fb0_is_path_sep(_12018_path[static_cast<jule::Int>((_14414_r + 2LL))]))) == _match_expr)) { goto _case_end_4556461728; }
			_case_begin_4556461728:;
			{
				_14414_r+=2LL;
				{
					auto _match_expr{ true };
					if (!((_13913_out._field_w > _14421_dotdot) == _match_expr)) { goto _case_end_4556467744; }
					_case_begin_4556467744:;
					{
						(_13913_out._field_w)--;
						_iter_begin_4556473840:;
						if (!(((_13913_out._field_w > _14421_dotdot) && (!_10cf24fb0_is_path_sep(static_cast<jule::U8>(_13913_out._method_index(_13913_out._field_w))))))) { goto _iter_end_4556473840; }
						{
							(_13913_out._field_w)--;
						}
						_iter_next_4556473840:;
						goto _iter_begin_4556473840;
						_iter_end_4556473840:;
					}
					goto _match_end_4556471744;
					_case_end_4556467744:;
					if (!((!_1319_rooted) == _match_expr)) { goto _case_end_4556472320; }
					_case_begin_4556472320:;
					{
						if ((_13913_out._field_w > 0LL)) {
							_13913_out._method_append(47LLU);
						}
						_13913_out._method_append('.');
						_13913_out._method_append('.');
						_14421_dotdot=_13913_out._field_w;
					}
					goto _match_end_4556471744;
					_case_end_4556472320:;
					_match_end_4556471744:;
				}
			}
			goto _match_end_4556442368;
			_case_end_4556461728:;
			_case_begin_4556442624:;
			{
				if (((_1319_rooted && (_13913_out._field_w != 1LL)) || ((!_1319_rooted) && (_13913_out._field_w != 0LL)))) {
					_13913_out._method_append(47LLU);
				}
				if ((((false && (_13913_out._field_w == 0LL)) && (_13913_out._field_vol_len == 0LL)) && (_14414_r != 0LL))) {
					jule::Int _18725_i = _14414_r;
					_iter_begin_4556447920:;
					if (!(((_18725_i < _1389_n) && (!_10cf24fb0_is_path_sep(_12018_path[static_cast<jule::Int>(_18725_i)]))))) { goto _iter_end_4556447920; }
					{
						if ((_12018_path[static_cast<jule::Int>(_18725_i)] == ':')) {
							_13913_out._method_append('.');
							_13913_out._method_append(47LLU);
							goto _iter_end_4556447920;
						}
					}
					_iter_next_4556447920:;
					(_18725_i)++;
					goto _iter_begin_4556447920;
					_iter_end_4556447920:;
				}
				_iter_begin_4556449648:;
				if (!(((_14414_r < _1389_n) && (!_10cf24fb0_is_path_sep(_12018_path[static_cast<jule::Int>(_14414_r)]))))) { goto _iter_end_4556449648; }
				{
					_13913_out._method_append(_12018_path[static_cast<jule::Int>(_14414_r)]);
				}
				_iter_next_4556449648:;
				(_14414_r)++;
				goto _iter_begin_4556449648;
				_iter_end_4556449648:;
			}
			goto _match_end_4556442368;
			_case_end_4556442624:;
			_match_end_4556442368:;
		}
	}
	_iter_next_4556441392:;
	goto _iter_begin_4556441392;
	_iter_end_4556441392:;
	if ((_13913_out._field_w == 0LL)) {
		_13913_out._method_append('.');
	}
	return _12ce95080_from_slash(_13913_out._method_string());
}



inline jule::Str _12ce95080_from_slash(jule::Str _22319_path) {
	if (true) {
		return _22319_path;
	}
	return _22319_path.replace(jule::Str("/", 1),static_cast<jule::Str>(47LL),-1LL);
}



inline jule::Str _12ce95080_join(jule::Slice<jule::Str> _23713_elem) {
	return _10cf08a20___join(_23713_elem);
}



inline jule::Str _12ce95080_ext(jule::Str _24212_path) {
	jule::I64 _24313_i = static_cast<jule::I64>((static_cast<jule::I64>(_24212_path.len()) - 1LL));
	_iter_begin_4556495648:;
	if (!(((_24313_i >= 0LL) && (!_10cf24fb0_is_path_sep(_24212_path[static_cast<jule::Int>(_24313_i)]))))) { goto _iter_end_4556495648; }
	{
		if ((_24212_path[static_cast<jule::Int>(_24313_i)] == '.')) {
			return _24212_path.slice(static_cast<jule::Int>(_24313_i));
		}
	}
	_iter_next_4556495648:;
	(_24313_i)--;
	goto _iter_begin_4556495648;
	_iter_end_4556495648:;
	return jule::Str("", 0);
}



inline std::tuple<jule::Str,jule::Bool> _12ce95080_abs(jule::Str _25712_path) {
	jule::Bool _25730_ok{jule::Bool()};
	return _10cf08a20___abs(_25712_path);
}



inline jule::Str _12ce95080_base(jule::Str _26317_path) {
	if ((_26317_path == jule::Str("", 0))) {
		return jule::Str(".", 1);
	}
	_iter_begin_4556508528:;
	if (!(((static_cast<jule::I64>(_26317_path.len()) > 0LL) && _10cf24fb0_is_path_sep(_26317_path[static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_26317_path.len()) - 1LL)))])))) { goto _iter_end_4556508528; }
	{
		_26317_path=_26317_path.slice(static_cast<jule::Int>(0LL),static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_26317_path.len()) - 1LL))));
	}
	_iter_next_4556508528:;
	goto _iter_begin_4556508528;
	_iter_end_4556508528:;
	_26317_path=_26317_path.slice(static_cast<jule::Int>(static_cast<jule::I64>(_12ce95080_volume_name(_26317_path).len())));
	jule::I64 _27413_i = static_cast<jule::I64>((static_cast<jule::I64>(_26317_path.len()) - 1LL));
	_iter_begin_4556507520:;
	if (!(((_27413_i >= 0LL) && (!_10cf24fb0_is_path_sep(_26317_path[static_cast<jule::Int>(_27413_i)]))))) { goto _iter_end_4556507520; }
	{
		(_27413_i)--;
	}
	_iter_next_4556507520:;
	goto _iter_begin_4556507520;
	_iter_end_4556507520:;
	if ((_27413_i >= 0LL)) {
		_26317_path=_26317_path.slice(static_cast<jule::Int>((_27413_i + 1LL)));
	}
	if ((_26317_path == jule::Str("", 0))) {
		return static_cast<jule::Str>(47LL);
	}
	return _26317_path;
}



inline jule::Str _12ce95080_dir(jule::Str _29412_path) {
	jule::Str _2959_vol = _12ce95080_volume_name(_29412_path);
	jule::I64 _29613_i = static_cast<jule::I64>((static_cast<jule::I64>(_29412_path.len()) - 1LL));
	_iter_begin_4556527728:;
	if (!(((_29613_i >= static_cast<jule::I64>(_2959_vol.len())) && (!_10cf24fb0_is_path_sep(_29412_path[static_cast<jule::Int>(_29613_i)]))))) { goto _iter_end_4556527728; }
	{
		(_29613_i)--;
	}
	_iter_next_4556527728:;
	goto _iter_begin_4556527728;
	_iter_end_4556527728:;
	jule::Str _3009_dir = _12ce95080_clean(_29412_path.slice(static_cast<jule::Int>(static_cast<jule::I64>(_2959_vol.len())),static_cast<jule::Int>((_29613_i + 1LL))));
	if (((_3009_dir == jule::Str(".", 1)) && (static_cast<jule::I64>(_2959_vol.len()) > 2LL))) {
		return _2959_vol;
	}
	return (_2959_vol + _3009_dir);
}



inline jule::Str _12ce95080_volume_name(jule::Str _31220_path) {
	return _12ce95080_from_slash(_31220_path.slice(0LL,static_cast<jule::Int>(static_cast<jule::Int>(_10cf08a20_volume_name_len(_31220_path)))));
}



inline jule::Bool _10cf08a20_is_abs(jule::Str _4115_path) {
	return _4115_path.has_prefix(jule::Str("/", 1));
}



inline jule::Int _10cf08a20_volume_name_len(jule::Str _4520_path) {
	return 0LL;
}



inline std::tuple<jule::Str,jule::Bool> _10cf08a20___abs(jule::Str _4710_path) {
	jule::Bool _4728_ok{jule::Bool()};
	if (_10cf08a20_is_abs(_4710_path)) {
		_4728_ok = true;
		return std::make_tuple(_12ce95080_clean(_4710_path),_4728_ok);
	}
	jule::Str _5110_wd{};
	jule::Int _5114_err{};
	std::tie(_5110_wd,_5114_err) = _10cf1adb0_getwd();
	if ((_5114_err != 0LLU)) {
		_4728_ok = false;
		return std::make_tuple(jule::Str("", 0),_4728_ok);
	}
	_4728_ok = true;
	return std::make_tuple(_10cf08a20___join(jule::Slice<jule::Str>({_5110_wd,_4710_path})),_4728_ok);
}



inline jule::Str _10cf08a20_str_join(jule::Slice<jule::Str> _5813_elems,jule::Str _5827_sep) {
	{
		auto _match_expr{ static_cast<jule::I64>(_5813_elems.len()) };
		if (!(0LL == _match_expr)) { goto _case_end_4556555504; }
		_case_begin_4556555504:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4556554832;
		_case_end_4556555504:;
		if (!(1LL == _match_expr)) { goto _case_end_4556555616; }
		_case_begin_4556555616:;
		{
			return _5813_elems[static_cast<jule::Int>(0LL)];
		}
		goto _match_end_4556554832;
		_case_end_4556555616:;
		_match_end_4556554832:;
	}
	jule::Str _6413_s = _5813_elems[static_cast<jule::Int>(0LL)];
	{
		auto __julec_range_expr = _5813_elems.slice(static_cast<jule::Int>(1LL));
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _10cf08a20_elem{jule::Str()};_10cf08a20_elem = *__julec_range_begin;
			_iter_begin_4556560112:;
			{
				_6413_s+=(_5827_sep + _10cf08a20_elem);
			}
			_iter_next_4556560112:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10cf08a20_elem = *__julec_range_begin; goto _iter_begin_4556560112; }
			_iter_end_4556560112:;
		}
	}
	return _6413_s;
}



inline jule::Str _10cf08a20___join(jule::Slice<jule::Str> _7111_elem) {
	{
		auto &__julec_range_expr = _7111_elem;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10cf08a20_i{jule::Int()};_10cf08a20_i = 0;
			jule::Str _10cf08a20_e{jule::Str()};_10cf08a20_e = *__julec_range_begin;
			_iter_begin_4556562560:;
			{
				if ((_10cf08a20_e != jule::Str("", 0))) {
					return _12ce95080_clean(_10cf08a20_str_join(_7111_elem.slice(static_cast<jule::Int>(_10cf08a20_i)),static_cast<jule::Str>(47LL)));
				}
			}
			_iter_next_4556562560:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10cf08a20_i; _10cf08a20_e = *__julec_range_begin; goto _iter_begin_4556562560; }
			_iter_end_4556562560:;
		}
	}
	return jule::Str("", 0);
}



inline jule::Int _12ce3bcd0_get_last_fs_error(void) {
	jule::Int _709_err = static_cast<jule::Int>(_11ce06ae0_get_last_errno());
	{
		auto _match_expr{ _709_err };
		if (!(13LL == _match_expr)) { goto _case_end_4556633920; }
		_case_begin_4556633920:;
		{
			return 1LLU;
		}
		goto _match_end_4556632096;
		_case_end_4556633920:;
		if (!(5LL == _match_expr)) { goto _case_end_4556634320; }
		_case_begin_4556634320:;
		{
			return 2LLU;
		}
		goto _match_end_4556632096;
		_case_end_4556634320:;
		if (!(40LL == _match_expr)) { goto _case_end_4556633728; }
		_case_begin_4556633728:;
		{
			return 3LLU;
		}
		goto _match_end_4556632096;
		_case_end_4556633728:;
		if (!(36LL == _match_expr)) { goto _case_end_4556634128; }
		_case_begin_4556634128:;
		{
			return 4LLU;
		}
		goto _match_end_4556632096;
		_case_end_4556634128:;
		if (!(2LL == _match_expr)) { goto _case_end_4556634528; }
		_case_begin_4556634528:;
		{
			return 5LLU;
		}
		goto _match_end_4556632096;
		_case_end_4556634528:;
		if (!(20LL == _match_expr)) { goto _case_end_4556634640; }
		_case_begin_4556634640:;
		{
			return 6LLU;
		}
		goto _match_end_4556632096;
		_case_end_4556634640:;
		if (!(75LL == _match_expr)) { goto _case_end_4556632976; }
		_case_begin_4556632976:;
		{
			return 7LLU;
		}
		goto _match_end_4556632096;
		_case_end_4556632976:;
		if (!(9LL == _match_expr)) { goto _case_end_4556633088; }
		_case_begin_4556633088:;
		{
			return 8LLU;
		}
		goto _match_end_4556632096;
		_case_end_4556633088:;
		if (!(24LL == _match_expr)) { goto _case_end_4556633200; }
		_case_begin_4556633200:;
		{
			return 9LLU;
		}
		goto _match_end_4556632096;
		_case_end_4556633200:;
		if (!(23LL == _match_expr)) { goto _case_end_4556635280; }
		_case_begin_4556635280:;
		{
			return 10LLU;
		}
		goto _match_end_4556632096;
		_case_end_4556635280:;
		if (!(12LL == _match_expr)) { goto _case_end_4556635392; }
		_case_begin_4556635392:;
		{
			return 11LLU;
		}
		goto _match_end_4556632096;
		_case_end_4556635392:;
		if (!(17LL == _match_expr)) { goto _case_end_4556635504; }
		_case_begin_4556635504:;
		{
			return 12LLU;
		}
		goto _match_end_4556632096;
		_case_end_4556635504:;
		if (!(4LL == _match_expr)) { goto _case_end_4556635616; }
		_case_begin_4556635616:;
		{
			return 13LLU;
		}
		goto _match_end_4556632096;
		_case_end_4556635616:;
		if (!(22LL == _match_expr)) { goto _case_end_4556635728; }
		_case_begin_4556635728:;
		{
			return 14LLU;
		}
		goto _match_end_4556632096;
		_case_end_4556635728:;
		if (!(21LL == _match_expr)) { goto _case_end_4556635840; }
		_case_begin_4556635840:;
		{
			return 15LLU;
		}
		goto _match_end_4556632096;
		_case_end_4556635840:;
		if (!(63LL == _match_expr)) { goto _case_end_4556635952; }
		_case_begin_4556635952:;
		{
			return 16LLU;
		}
		goto _match_end_4556632096;
		_case_end_4556635952:;
		if (!(28LL == _match_expr)) { goto _case_end_4556636064; }
		_case_begin_4556636064:;
		{
			return 17LLU;
		}
		goto _match_end_4556632096;
		_case_end_4556636064:;
		if (!(6LL == _match_expr)) { goto _case_end_4556636176; }
		_case_begin_4556636176:;
		{
			return 18LLU;
		}
		goto _match_end_4556632096;
		_case_end_4556636176:;
		if (!(30LL == _match_expr)) { goto _case_end_4556636288; }
		_case_begin_4556636288:;
		{
			return 19LLU;
		}
		goto _match_end_4556632096;
		_case_end_4556636288:;
		if (!(11LL == _match_expr)) { goto _case_end_4556636400; }
		_case_begin_4556636400:;
		{
			return 20LLU;
		}
		goto _match_end_4556632096;
		_case_end_4556636400:;
		if (!(26LL == _match_expr)) { goto _case_end_4556636512; }
		_case_begin_4556636512:;
		{
			return 21LLU;
		}
		goto _match_end_4556632096;
		_case_end_4556636512:;
		if (!(27LL == _match_expr)) { goto _case_end_4556636624; }
		_case_begin_4556636624:;
		{
			return 22LLU;
		}
		goto _match_end_4556632096;
		_case_end_4556636624:;
		if (!(32LL == _match_expr)) { goto _case_end_4556636736; }
		_case_begin_4556636736:;
		{
			return 23LLU;
		}
		goto _match_end_4556632096;
		_case_end_4556636736:;
		if (!(34LL == _match_expr)) { goto _case_end_4556636848; }
		_case_begin_4556636848:;
		{
			return 24LLU;
		}
		goto _match_end_4556632096;
		_case_end_4556636848:;
		if (!(29LL == _match_expr)) { goto _case_end_4556636960; }
		_case_begin_4556636960:;
		{
			return 25LLU;
		}
		goto _match_end_4556632096;
		_case_end_4556636960:;
		if (!(105LL == _match_expr)) { goto _case_end_4556637072; }
		_case_begin_4556637072:;
		{
			return 26LLU;
		}
		goto _match_end_4556632096;
		_case_end_4556637072:;
		if (!(74LL == _match_expr)) { goto _case_end_4556637184; }
		_case_begin_4556637184:;
		{
			return 27LLU;
		}
		goto _match_end_4556632096;
		_case_end_4556637184:;
		_case_begin_4556632672:;
		{
			return 0LLU;
		}
		goto _match_end_4556632096;
		_case_end_4556632672:;
		_match_end_4556632096:;
	}
}



inline std::tuple<jule::Ref<_12ce537d0_File>,jule::Int> _12ce3e8f0_open(jule::Str _1713_path,jule::Int _1724_flag,jule::Int _1737_mode) {
	jule::Int _189_handle = static_cast<jule::Int>(static_cast<jule::Int>(_11ce07810_open((&_1713_path[static_cast<jule::Int>(0LL)]),static_cast<jule::Int>(_1724_flag),_1737_mode)));
	if ((_189_handle == -1LL)) {
		return std::make_tuple(jule::new_ref<_12ce537d0_File>(),_12ce3bcd0_get_last_fs_error());
	}
	return std::make_tuple(jule::new_struct<_12ce537d0_File>(new( std::nothrow ) _12ce537d0_File(_189_handle)),0LLU);
}



inline std::tuple<jule::Ref<_12ce6e9e0_Status>,jule::Int> _12ce49290_stat(jule::Str _1113_path) {
	jule::Int _1138_err{0LLU};
	jule::Ref<_12ce6e9e0_Status> _1126_s{jule::Ref<_12ce6e9e0_Status>()};
	struct stat _1213_handle = (struct stat){};
	jule::Int _139_code = static_cast<jule::Int>(static_cast<jule::Int>(_11ce07810_stat((&_1113_path[static_cast<jule::Int>(0LL)]),(&_1213_handle))));
	if ((_139_code != -1LL)) {
		_1138_err=0LLU;
		_1126_s=jule::new_struct<_12ce6e9e0_Status>(new( std::nothrow ) _12ce6e9e0_Status(static_cast<jule::Uint>(_1213_handle.st_mode),static_cast<jule::Uint>(_1213_handle.st_size)));
	} else {
		_1138_err=_12ce3bcd0_get_last_fs_error();
	}
	return std::make_tuple(_1126_s,_1138_err);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Int> _12ce537d0_read_file(jule::Str _12118_path) {
	jule::Ref<_12ce6e9e0_Status> _12210_s{};
	jule::Int _12217_err{};
	std::tie(_12210_s,_12217_err) = _12ce49290_stat(_12118_path);
	if ((_12217_err != 0LLU)) {
		return std::make_tuple(nullptr,_12217_err);
	}
	if ((!_12210_s->_method_is_reg())) {
		return std::make_tuple(nullptr,15LLU);
	}
	if ((_12210_s->_field_size == 0LL)) {
		return std::make_tuple(jule::Slice<jule::U8>::alloc(static_cast<jule::Int>(0LL)),0LLU);
	}
	jule::Ref<_12ce537d0_File> _13514_f{};
	std::tie(_13514_f,_12217_err) = _12ce3e8f0_open(_12118_path,0LL,0LL);
	if ((_12217_err != 0LLU)) {
		return std::make_tuple(nullptr,_12217_err);
	}
	__JULE_DEFER({
		_13514_f->_method_close();
	});
	jule::Slice<jule::U8> _14113_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::Int>(_12210_s->_field_size));
	jule::Int _14210_n{};
	std::tie(_14210_n,_12217_err) = _13514_f->_method_read(_14113_buff);
	if ((_12217_err != 0LLU)) {
		return std::make_tuple(nullptr,_12217_err);
	}
	return std::make_tuple(_14113_buff.slice(0LL,static_cast<jule::Int>(_14210_n)),0LLU);
}



inline std::tuple<jule::Slice<jule::Ref<_12ce4fe70_DirEntry>>,jule::Int> _12ce583c0_read_dir(jule::Str _2017_path) {
	jule::Int _2052_err{0LLU};
	jule::Slice<jule::Ref<_12ce4fe70_DirEntry>> _2030_dirents{jule::Slice<jule::Ref<_12ce4fe70_DirEntry>>()};
	DIR* _2113_dir = _11ce07810_opendir((&_2017_path[static_cast<jule::Int>(0LL)]));
	if ((_2113_dir == nullptr)) {
		_2052_err=_12ce3bcd0_get_last_fs_error();
		return std::make_tuple(_2030_dirents,_2052_err);
	}
	_iter_begin_4556705360:;
	{
		struct dirent* _2713_dirent = _11ce07810_readdir(_2113_dir);
		if ((_2713_dirent == nullptr)) {
			goto _iter_end_4556705360;
		}
		jule::Str _3113_name = _11ce07810_byte_ptr_to_str(((jule::U8*)(_2713_dirent->d_name)));
		jule::Ref<_12ce6e9e0_Status> _3214_stat{};
		jule::Int _3220_serr{};
		std::tie(_3214_stat,_3220_serr) = _12ce49290_stat(_12ce95080_join(jule::Slice<jule::Str>({_2017_path,_3113_name})));
		if ((_3220_serr != 0LLU)) {
			_2052_err=_3220_serr;
			_2030_dirents=nullptr;
			goto _iter_end_4556705360;
		}
		_2030_dirents=append(_2030_dirents,jule::Slice<jule::Ref<_12ce4fe70_DirEntry>>({jule::new_struct<_12ce4fe70_DirEntry>(new( std::nothrow ) _12ce4fe70_DirEntry(_3113_name,_3214_stat))}));
	}
	_iter_next_4556705360:;
	goto _iter_begin_4556705360;
	_iter_end_4556705360:;
	static_cast<jule::Int>(static_cast<jule::Int>(_11ce07810_closedir(_2113_dir)));
	return std::make_tuple(_2030_dirents,_2052_err);
}



inline jule::Int _10e2c0220_leading_zeros64(jule::U64 _6124_x) {
	return static_cast<jule::Int>((64LL - static_cast<jule::Int>(_10e2c0220_len64(_6124_x))));
}



inline jule::Int _10e2c0220_trailing_zeros(jule::Uint _8323_x) {
	if (false) {
		return static_cast<jule::Int>(_10e2c0220_trailing_zeros32(static_cast<jule::U32>(_8323_x)));
	}
	return static_cast<jule::Int>(_10e2c0220_trailing_zeros64(static_cast<jule::U64>(_8323_x)));
}



inline jule::Int _10e2c0220_trailing_zeros32(jule::U32 _10525_x) {
	if ((_10525_x == 0LL)) {
		return 32LL;
	}
	return static_cast<jule::Int>(_10e2c0220_DE_BRUIJN32_TAB[static_cast<jule::Int>((((_10525_x & static_cast<jule::U32>((-_10525_x))) * 125613361LL) >> 27LL))]);
}



inline jule::Int _10e2c0220_trailing_zeros64(jule::U64 _11425_x) {
	if ((_11425_x == 0LL)) {
		return 64LL;
	}
	return static_cast<jule::Int>(_10e2c0220_DE_BRUIJN64_TAB[static_cast<jule::Int>((((_11425_x & static_cast<jule::U64>((-_11425_x))) * 285870213051353865LL) >> 58LL))]);
}



inline jule::Int _10e2c0220_len32(jule::U32 _35218_x) {
	jule::Int _35228_n{jule::Int()};
	if ((_35218_x >= 65536LL)) {
		_35218_x>>=16LL;
		_35228_n=16LL;
	}
	if ((_35218_x >= 256LL)) {
		_35218_x>>=8LL;
		_35228_n+=8LL;
	}
	_35228_n = (_35228_n + static_cast<jule::Int>(static_cast<jule::U8>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_35218_x)])));
	return _35228_n;
}



inline jule::Int _10e2c0220_len64(jule::U64 _36618_x) {
	jule::Int _36628_n{jule::Int()};
	if ((_36618_x >= 4294967296LL)) {
		_36618_x>>=32LL;
		_36628_n=32LL;
	}
	if ((_36618_x >= 65536LL)) {
		_36618_x>>=16LL;
		_36628_n+=16LL;
	}
	if ((_36618_x >= 256LL)) {
		_36618_x>>=8LL;
		_36628_n+=8LL;
	}
	_36628_n = (_36628_n + static_cast<jule::Int>(static_cast<jule::U8>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_36618_x)])));
	return _36628_n;
}



inline std::tuple<jule::U64,jule::U64> _10e2c0220_add64(jule::U64 _41514_x,jule::U64 _41522_y,jule::U64 _41530_carry) {
	jule::U64 _41554_carryout{jule::U64()};
	jule::U64 _41544_sum{jule::U64()};
	_41544_sum=((_41514_x + _41522_y) + _41530_carry);
	_41554_carryout=(((_41514_x & _41522_y) | ((_41514_x | _41522_y) & static_cast<jule::U64>((~_41544_sum)))) >> 63LL);
	return std::make_tuple(_41544_sum,_41554_carryout);
}



inline std::tuple<jule::U64,jule::U64> _10e2c0220_mul64(jule::U64 _49914_x,jule::U64 _49922_y) {
	jule::U64 _49941_lo{jule::U64()};
	jule::U64 _49932_hi{jule::U64()};
	
	jule::U64 _5019_x0 = (_49914_x & 4294967295LL);
	jule::U64 _5029_x1 = (_49914_x >> 32LL);
	jule::U64 _5039_y0 = (_49922_y & 4294967295LL);
	jule::U64 _5049_y1 = (_49922_y >> 32LL);
	jule::U64 _5059_w0 = (_5019_x0 * _5039_y0);
	jule::U64 _5069_t = ((_5029_x1 * _5039_y0) + (_5059_w0 >> 32LL));
	jule::U64 _50713_w1 = (_5069_t & 4294967295LL);
	jule::U64 _5089_w2 = (_5069_t >> 32LL);
	_50713_w1+=(_5019_x0 * _5049_y1);
	_49932_hi=(((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LL));
	_49941_lo=(_49914_x * _49922_y);
	return std::make_tuple(_49932_hi,_49941_lo);
}



inline jule::U32 _10dc3cbe0_f32_bits(jule::F32 _4117_f) {
	return (*((jule::U32*)((&_4117_f))));
}



inline jule::F32 _10dc3cbe0_f32_from_bits(jule::U32 _4722_b) {
	return (*((jule::F32*)((&_4722_b))));
}



inline jule::U64 _10dc3cbe0_f64_bits(jule::F64 _5217_f) {
	return (*((jule::U64*)((&_5217_f))));
}



inline jule::F64 _10dc3cbe0_f64_from_bits(jule::U64 _5822_b) {
	return (*((jule::F64*)((&_5822_b))));
}



inline jule::F64 _10dd389b0_nan(void) {
	return static_cast<jule::F64>(_10dc3cbe0_f64_from_bits(9221120237041090561LLU));
}



inline jule::Bool _10dd389b0_is_nan(jule::F64 _5215_f) {
	return (_5215_f != _5215_f);
}



inline jule::F64 _10dd389b0_inf(jule::Int _6112_sign) {
	if ((_6112_sign >= 0LL)) {
		return static_cast<jule::F64>(_10dc3cbe0_f64_from_bits(9218868437227405312LLU));
	}
	return static_cast<jule::F64>(_10dc3cbe0_f64_from_bits(18442240474082181120LLU));
}



inline jule::Bool _10dd389b0_is_inf(jule::F64 _7215_f,jule::Int _7223_sign) {
	return (((_7223_sign >= 0LL) && (_7215_f > jule::MAX_F64)) || ((_7223_sign <= 0LL) && (_7215_f < jule::MIN_F64)));
}



inline jule::F64 _10dd42e50_abs(jule::F64 _4312_x) {
	return static_cast<jule::F64>(_10dc3cbe0_f64_from_bits(static_cast<jule::U64>((static_cast<jule::U64>(_10dc3cbe0_f64_bits(_4312_x)) & 9223372036854775807LLU))));
}



inline std::tuple<jule::F64,jule::F64> _10de1b5a0_modf(jule::F64 _4413_f) {
	jule::F64 _4437_frac{jule::F64()};
	jule::F64 _4423_integer{jule::F64()};
	
	jule::F64 _469_abs_f = static_cast<jule::F64>(_10dd42e50_abs(_4413_f));
	jule::F64 _4713_i = 0e+00;
	if ((_469_abs_f > 4.503599627370496e+15)) {
		_4713_i=_4413_f;
	} else {
		_4713_i=(_469_abs_f + 4.503599627370496e+15);
		_4713_i-=4.503599627370496e+15;
		_iter_begin_4558496656:;
		if (!((_4713_i > _469_abs_f))) { goto _iter_end_4558496656; }
		{
			(_4713_i)--;
		}
		_iter_next_4558496656:;
		goto _iter_begin_4558496656;
		_iter_end_4558496656:;
		if ((_4413_f < 0e+00)) {
			_4713_i=static_cast<jule::F64>((-_4713_i));
		}
	}
	_4423_integer = _4713_i;
	_4437_frac = (_4413_f - _4713_i);
	return std::make_tuple(_4423_integer,_4437_frac);
}



inline jule::Str _10d916690_fmt_float(jule::F64 _7818_f,jule::U8 _7826_fmt,jule::Int _7837_prec,jule::Int _7848_bit_size) {
	return static_cast<jule::Str>(_10d916690_generic_ftoa(nullptr,_7818_f,_7826_fmt,_7837_prec,_7848_bit_size));
}



inline jule::Slice<jule::U8> _10d916690_generic_ftoa(jule::Slice<jule::U8> _8228_dst,jule::F64 _8241_val,jule::U8 _8251_fmt,jule::Int _8266_prec,jule::Int _8277_bit_size) {
	jule::U64 _8313_bits = 0LLU;
	_10d916690_FloatInfo* _8413_flt = nullptr;
	{
		auto _match_expr{ _8277_bit_size };
		if (!(32LL == _match_expr)) { goto _case_end_4560414784; }
		_case_begin_4560414784:;
		{
			_8313_bits=static_cast<jule::U64>(static_cast<jule::U32>(_10dc3cbe0_f32_bits(static_cast<jule::F32>(_8241_val))));
			_8413_flt=(&_10d916690_F32_INFO);
		}
		goto _match_end_4560413680;
		_case_end_4560414784:;
		if (!(64LL == _match_expr)) { goto _case_end_4560414896; }
		_case_begin_4560414896:;
		{
			_8313_bits=static_cast<jule::U64>(_10dc3cbe0_f64_bits(_8241_val));
			_8413_flt=(&_10d916690_F64_INFO);
		}
		goto _match_end_4560413680;
		_case_end_4560414896:;
		_case_begin_4560413056:;
		{
			jule::panic(jule::Str("std::conv: illegal bit_size", 27));
		}
		goto _match_end_4560413680;
		_case_end_4560413056:;
		_match_end_4560413680:;
	}
	jule::Bool _969_neg = ((_8313_bits >> (_8413_flt->_field_expbits + _8413_flt->_field_mantbits)) != 0LL);
	jule::Int _9713_exp = static_cast<jule::Int>((static_cast<jule::Int>((_8313_bits >> _8413_flt->_field_mantbits)) & static_cast<jule::Int>((static_cast<jule::Int>((1LL << _8413_flt->_field_expbits)) - 1LL))));
	jule::U64 _9813_mant = (_8313_bits & static_cast<jule::Uint>((static_cast<jule::Uint>((static_cast<jule::U64>(1LLU) << _8413_flt->_field_mantbits)) - 1LL)));
	{
		auto _match_expr{ _9713_exp };
		if (!(static_cast<jule::Int>((static_cast<jule::Int>((1LL << _8413_flt->_field_expbits)) - 1LL)) == _match_expr)) { goto _case_end_4560430880; }
		_case_begin_4560430880:;
		{
			jule::Str _10317_s = jule::Str("", 0);
			{
				auto _match_expr{ true };
				if (!((_9813_mant != 0LL) == _match_expr)) { goto _case_end_4560438224; }
				_case_begin_4560438224:;
				{
					_10317_s=jule::Str("nan", 3);
				}
				goto _match_end_4560435728;
				_case_end_4560438224:;
				if (!(_969_neg == _match_expr)) { goto _case_end_4560437312; }
				_case_begin_4560437312:;
				{
					_10317_s=jule::Str("-inf", 4);
				}
				goto _match_end_4560435728;
				_case_end_4560437312:;
				_case_begin_4560436048:;
				{
					_10317_s=jule::Str("+inf", 4);
				}
				goto _match_end_4560435728;
				_case_end_4560436048:;
				_match_end_4560435728:;
			}
			return append(_8228_dst,static_cast<jule::Slice<jule::U8>>(_10317_s));
		}
		goto _match_end_4560427536;
		_case_end_4560430880:;
		if (!(0LL == _match_expr)) { goto _case_end_4560431456; }
		_case_begin_4560431456:;
		{
			(_9713_exp)++;
		}
		goto _match_end_4560427536;
		_case_end_4560431456:;
		_case_begin_4560429408:;
		{
			_9813_mant|=static_cast<jule::Uint>((static_cast<jule::U64>(1LLU) << _8413_flt->_field_mantbits));
		}
		goto _match_end_4560427536;
		_case_end_4560429408:;
		_match_end_4560427536:;
	}
	_9713_exp+=_8413_flt->_field_bias;
	if ((_8251_fmt == 'b')) {
		return _10d916690_fmt_b(_8228_dst,_969_neg,_9813_mant,_9713_exp,_8413_flt);
	}
	if (((_8251_fmt == 'x') || (_8251_fmt == 'X'))) {
		return _10d916690_fmt_x(_8228_dst,_8266_prec,_8251_fmt,_969_neg,_9813_mant,_9713_exp,_8413_flt);
	}
	if (false) {
		return _10d916690_big_ftoa(_8228_dst,_8266_prec,_8251_fmt,_969_neg,_9813_mant,_9713_exp,_8413_flt);
	}
	_10d916690_DecimalSlice _13413_digs = _10d916690_DecimalSlice();
	jule::Bool _13513_ok = false;
	jule::Bool _1379_shortest = (_8266_prec < 0LL);
	if (_1379_shortest) {
		jule::Array<jule::U8,32> _14013_buf = jule::Array<jule::U8,32>({});
		_13413_digs._field_d=_14013_buf.slice(0LL);
		_10ce72a70_ryu_ftoa_shortest((&_13413_digs),_9813_mant,(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits)),_8413_flt);
		_13513_ok=true;
		{
			auto _match_expr{ _8251_fmt };
			if (!('e' == _match_expr || 'E' == _match_expr)) { goto _case_end_4560456896; }
			_case_begin_4560456896:;
			{
				_8266_prec=static_cast<jule::Int>(_10d916690_max((_13413_digs._field_nd - 1LL),0LL));
			}
			goto _match_end_4560456736;
			_case_end_4560456896:;
			if (!('f' == _match_expr)) { goto _case_end_4560457008; }
			_case_begin_4560457008:;
			{
				_8266_prec=static_cast<jule::Int>(_10d916690_max((_13413_digs._field_nd - _13413_digs._field_dp),0LL));
			}
			goto _match_end_4560456736;
			_case_end_4560457008:;
			if (!('g' == _match_expr || 'G' == _match_expr)) { goto _case_end_4560457744; }
			_case_begin_4560457744:;
			{
				_8266_prec=_13413_digs._field_nd;
			}
			goto _match_end_4560456736;
			_case_end_4560457744:;
			_match_end_4560456736:;
		}
	} else if ((_8251_fmt != 'f')) {
		jule::Int _15517_digits = _8266_prec;
		{
			auto _match_expr{ _8251_fmt };
			if (!('e' == _match_expr || 'E' == _match_expr)) { goto _case_end_4560465824; }
			_case_begin_4560465824:;
			{
				(_15517_digits)++;
			}
			goto _match_end_4560461344;
			_case_end_4560465824:;
			if (!('g' == _match_expr || 'G' == _match_expr)) { goto _case_end_4560465296; }
			_case_begin_4560465296:;
			{
				if ((_8266_prec == 0LL)) {
					_8266_prec=1LL;
				}
				_15517_digits=_8266_prec;
			}
			goto _match_end_4560461344;
			_case_end_4560465296:;
			_case_begin_4560464080:;
			{
				_15517_digits=1LL;
			}
			goto _match_end_4560461344;
			_case_end_4560464080:;
			_match_end_4560461344:;
		}
		jule::Array<jule::U8,24> _16813_buf = jule::Array<jule::U8,24>({});
		if (((_8277_bit_size == 32LL) && (_15517_digits <= 9LL))) {
			_13413_digs._field_d=_16813_buf.slice(0LL);
			_10ce72a70_ryu_ftoa_fixed32((&_13413_digs),static_cast<jule::U32>(_9813_mant),(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits)),_15517_digits);
			_13513_ok=true;
		} else if ((_15517_digits <= 18LL)) {
			_13413_digs._field_d=_16813_buf.slice(0LL);
			_10ce72a70_ryu_ftoa_fixed64((&_13413_digs),_9813_mant,(_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits)),_15517_digits);
			_13513_ok=true;
		}
	}
	if ((!_13513_ok)) {
		return _10d916690_big_ftoa(_8228_dst,_8266_prec,_8251_fmt,_969_neg,_9813_mant,_9713_exp,_8413_flt);
	}
	return _10d916690_fmt_digits(_8228_dst,_1379_shortest,_969_neg,_13413_digs,_8266_prec,_8251_fmt);
}



inline jule::Slice<jule::U8> _10d916690_big_ftoa(jule::Slice<jule::U8> _18624_dst,jule::Int _18641_prec,jule::U8 _18652_fmt,jule::Bool _18663_neg,jule::U64 _18717_mant,jule::Int _18728_exp,_10d916690_FloatInfo* _18738_flt) {
	_10ce72c20_Decimal _18813_d = _10ce72c20_Decimal();
	_18813_d._method_assign(_18717_mant);
	_18813_d._method_shift((_18728_exp - static_cast<jule::Int>(_18738_flt->_field_mantbits)));
	_10d916690_DecimalSlice _19113_digs = _10d916690_DecimalSlice();
	jule::Bool _1929_shortest = (_18641_prec < 0LL);
	if (_1929_shortest) {
		_10d916690_round_shortest((&_18813_d),_18717_mant,_18728_exp,_18738_flt);
		_19113_digs=_10d916690_DecimalSlice(_18813_d._field_d.slice(0LL),_18813_d._field_nd,_18813_d._field_dp,jule::Bool());
		{
			auto _match_expr{ _18652_fmt };
			if (!('e' == _match_expr || 'E' == _match_expr)) { goto _case_end_4560499184; }
			_case_begin_4560499184:;
			{
				_18641_prec=(_19113_digs._field_nd - 1LL);
			}
			goto _match_end_4560496816;
			_case_end_4560499184:;
			if (!('f' == _match_expr)) { goto _case_end_4560499296; }
			_case_begin_4560499296:;
			{
				_18641_prec=static_cast<jule::Int>(_10d916690_max((_19113_digs._field_nd - _19113_digs._field_dp),0LL));
			}
			goto _match_end_4560496816;
			_case_end_4560499296:;
			if (!('g' == _match_expr || 'G' == _match_expr)) { goto _case_end_4560499408; }
			_case_begin_4560499408:;
			{
				_18641_prec=_19113_digs._field_nd;
			}
			goto _match_end_4560496816;
			_case_end_4560499408:;
			_match_end_4560496816:;
		}
	} else {
		{
			auto _match_expr{ _18652_fmt };
			if (!('e' == _match_expr || 'E' == _match_expr)) { goto _case_end_4560496704; }
			_case_begin_4560496704:;
			{
				_18813_d._method_round((_18641_prec + 1LL));
			}
			goto _match_end_4560505008;
			_case_end_4560496704:;
			if (!('f' == _match_expr)) { goto _case_end_4560505120; }
			_case_begin_4560505120:;
			{
				_18813_d._method_round((_18813_d._field_dp + _18641_prec));
			}
			goto _match_end_4560505008;
			_case_end_4560505120:;
			if (!('g' == _match_expr || 'G' == _match_expr)) { goto _case_end_4560500032; }
			_case_begin_4560500032:;
			{
				if ((_18641_prec == 0LL)) {
					_18641_prec=1LL;
				}
				_18813_d._method_round(_18641_prec);
			}
			goto _match_end_4560505008;
			_case_end_4560500032:;
			_match_end_4560505008:;
		}
		_19113_digs=_10d916690_DecimalSlice(_18813_d._field_d.slice(0LL),_18813_d._field_nd,_18813_d._field_dp,jule::Bool());
	}
	return _10d916690_fmt_digits(_18624_dst,_1929_shortest,_18663_neg,_19113_digs,_18641_prec,_18652_fmt);
}



inline jule::Slice<jule::U8> _10d916690_fmt_digits(jule::Slice<jule::U8> _22319_dst,jule::Bool _22332_shortest,jule::Bool _22348_neg,_10d916690_DecimalSlice _22413_digs,jule::Int _22437_prec,jule::U8 _22448_fmt) {
	{
		auto _match_expr{ _22448_fmt };
		if (!('e' == _match_expr || 'E' == _match_expr)) { goto _case_end_4560518576; }
		_case_begin_4560518576:;
		{
			return _10d916690_fmt_e(_22319_dst,_22348_neg,_22413_digs,_22437_prec,_22448_fmt);
		}
		goto _match_end_4560517984;
		_case_end_4560518576:;
		if (!('f' == _match_expr)) { goto _case_end_4560518688; }
		_case_begin_4560518688:;
		{
			return _10d916690_fmt_f(_22319_dst,_22348_neg,_22413_digs,_22437_prec);
		}
		goto _match_end_4560517984;
		_case_end_4560518688:;
		if (!('g' == _match_expr || 'G' == _match_expr)) { goto _case_end_4560518800; }
		_case_begin_4560518800:;
		{
			jule::Int _23217_eprec = _22437_prec;
			if (((_23217_eprec > _22413_digs._field_nd) && (_22413_digs._field_nd >= _22413_digs._field_dp))) {
				_23217_eprec=_22413_digs._field_nd;
			}
			if (_22332_shortest) {
				_23217_eprec=6LL;
			}
			jule::Int _24213_exp = (_22413_digs._field_dp - 1LL);
			if (((_24213_exp < -4LL) || (_24213_exp >= _23217_eprec))) {
				if ((_22437_prec > _22413_digs._field_nd)) {
					_22437_prec=_22413_digs._field_nd;
				}
				return _10d916690_fmt_e(_22319_dst,_22348_neg,_22413_digs,(_22437_prec - 1LL),((_22448_fmt + 'e') - 'g'));
			}
			if ((_22437_prec > _22413_digs._field_dp)) {
				_22437_prec=_22413_digs._field_nd;
			}
			return _10d916690_fmt_f(_22319_dst,_22348_neg,_22413_digs,static_cast<jule::Int>(_10d916690_max((_22437_prec - _22413_digs._field_dp),0LL)));
		}
		goto _match_end_4560517984;
		_case_end_4560518800:;
		_match_end_4560517984:;
	}
	return append(_22319_dst,jule::Slice<jule::U8>({'%',_22448_fmt}));
}



inline void _10d916690_round_shortest(_10ce72c20_Decimal* _26130_d,jule::U64 _26143_mant,jule::Int _26154_exp,_10d916690_FloatInfo* _26164_flt) {
	if ((_26143_mant == 0LL)) {
		_26130_d->_field_nd=0LL;
		return;
	}
	jule::Int _2829_minexp = (_26164_flt->_field_bias + 1LL);
	if (((_26154_exp > _2829_minexp) && (static_cast<jule::Int>((332LL * (_26130_d->_field_dp - _26130_d->_field_nd))) >= static_cast<jule::Int>((100LL * (_26154_exp - static_cast<jule::Int>(_26164_flt->_field_mantbits))))))) {
		return;
	}
	_10ce72c20_Decimal _29113_upper = _10ce72c20_Decimal();
	_29113_upper._method_assign(((_26143_mant * 2LL) + 1LL));
	_29113_upper._method_shift(((_26154_exp - static_cast<jule::Int>(_26164_flt->_field_mantbits)) - 1LL));
	jule::U64 _30113_mantlo = 0LLU;
	jule::Int _30213_explo = 0LL;
	if (((_26143_mant > static_cast<jule::Int>((1LL << _26164_flt->_field_mantbits))) || (_26154_exp == _2829_minexp))) {
		_30113_mantlo=(_26143_mant - 1LL);
		_30213_explo=_26154_exp;
	} else {
		_30113_mantlo=((_26143_mant * 2LL) - 1LL);
		_30213_explo=(_26154_exp - 1LL);
	}
	_10ce72c20_Decimal _31013_lower = _10ce72c20_Decimal();
	_31013_lower._method_assign(((_30113_mantlo * 2LL) + 1LL));
	_31013_lower._method_shift(((_30213_explo - static_cast<jule::Int>(_26164_flt->_field_mantbits)) - 1LL));
	jule::Bool _3179_inclusive = ((_26143_mant % 2LL) == 0LL);
	jule::U8 _33013_upperdelta = 0LLU;
	jule::Int _33413_ui = 0LL;
	_iter_begin_4560566272:;
	{
		jule::Int _33913_mi = ((_33413_ui - _29113_upper._field_dp) + _26130_d->_field_dp);
		if ((_33913_mi >= _26130_d->_field_nd)) {
			goto _iter_end_4560566272;
		}
		jule::Int _34313_li = ((_33413_ui - _29113_upper._field_dp) + _31013_lower._field_dp);
		jule::U8 _34417_l = static_cast<jule::U8>(48LLU);
		if (((_34313_li >= 0LL) && (_34313_li < _31013_lower._field_nd))) {
			_34417_l=_31013_lower._field_d[static_cast<jule::Int>(_34313_li)];
		}
		jule::U8 _34817_m = static_cast<jule::U8>(48LLU);
		if ((_33913_mi >= 0LL)) {
			_34817_m=_26130_d->_field_d[static_cast<jule::Int>(_33913_mi)];
		}
		jule::U8 _35217_u = static_cast<jule::U8>(48LLU);
		if ((_33413_ui < _29113_upper._field_nd)) {
			_35217_u=_29113_upper._field_d[static_cast<jule::Int>(_33413_ui)];
		}
		jule::Bool _36013_okdown = ((_34417_l != _34817_m) || (_3179_inclusive && ((_34313_li + 1LL) == _31013_lower._field_nd)));
		{
			auto _match_expr{ true };
			if (!(((_33013_upperdelta == 0LL) && ((_34817_m + 1LL) < _35217_u)) == _match_expr)) { goto _case_end_4560590544; }
			_case_begin_4560590544:;
			{
				_33013_upperdelta=2LL;
			}
			goto _match_end_4560588544;
			_case_end_4560590544:;
			if (!(((_33013_upperdelta == 0LL) && (_34817_m != _35217_u)) == _match_expr)) { goto _case_end_4560589360; }
			_case_begin_4560589360:;
			{
				_33013_upperdelta=1LL;
			}
			goto _match_end_4560588544;
			_case_end_4560589360:;
			if (!(((_33013_upperdelta == 1LL) && ((_34817_m != '9') || (_35217_u != '0'))) == _match_expr)) { goto _case_end_4560589472; }
			_case_begin_4560589472:;
			{
				_33013_upperdelta=2LL;
			}
			goto _match_end_4560588544;
			_case_end_4560589472:;
			_match_end_4560588544:;
		}
		jule::Bool _38113_okup = ((_33013_upperdelta > 0LL) && ((_3179_inclusive || (_33013_upperdelta > 1LL)) || ((_33413_ui + 1LL) < _29113_upper._field_nd)));
		{
			auto _match_expr{ true };
			if (!((_36013_okdown && _38113_okup) == _match_expr)) { goto _case_end_4560599440; }
			_case_begin_4560599440:;
			{
				_26130_d->_method_round((_33913_mi + 1LL));
				return;
			}
			goto _match_end_4560597984;
			_case_end_4560599440:;
			if (!(_36013_okdown == _match_expr)) { goto _case_end_4560598512; }
			_case_begin_4560598512:;
			{
				_26130_d->_method_round_down((_33913_mi + 1LL));
				return;
			}
			goto _match_end_4560597984;
			_case_end_4560598512:;
			if (!(_38113_okup == _match_expr)) { goto _case_end_4560599808; }
			_case_begin_4560599808:;
			{
				_26130_d->_method_round_up((_33913_mi + 1LL));
				return;
			}
			goto _match_end_4560597984;
			_case_end_4560599808:;
			_match_end_4560597984:;
		}
	}
	_iter_next_4560566272:;
	(_33413_ui)++;
	goto _iter_begin_4560566272;
	_iter_end_4560566272:;
}



inline jule::Slice<jule::U8> _10d916690_fmt_e(jule::Slice<jule::U8> _40014_dst,jule::Bool _40027_neg,_10d916690_DecimalSlice _40038_d,jule::Int _40055_prec,jule::U8 _40066_fmt) {
	if (_40027_neg) {
		_40014_dst=append(_40014_dst,jule::Slice<jule::U8>({'-'}));
	}
	jule::U8 _40713_ch = '0';
	if ((_40038_d._field_nd != 0LL)) {
		_40713_ch=_40038_d._field_d[static_cast<jule::Int>(0LL)];
	}
	_40014_dst=append(_40014_dst,jule::Slice<jule::U8>({_40713_ch}));
	if ((_40055_prec > 0LL)) {
		_40014_dst=append(_40014_dst,jule::Slice<jule::U8>({'.'}));
		jule::Int _41617_i = 1LL;
		jule::Int _41713_m = static_cast<jule::Int>(_10d916690_min(_40038_d._field_nd,(_40055_prec + 1LL)));
		if ((_41617_i < _41713_m)) {
			_40014_dst=append(_40014_dst,_40038_d._field_d.slice(static_cast<jule::Int>(_41617_i),static_cast<jule::Int>(_41713_m)));
			_41617_i=_41713_m;
		}
		_iter_begin_4560628480:;
		if (!((_41617_i <= _40055_prec))) { goto _iter_end_4560628480; }
		{
			_40014_dst=append(_40014_dst,jule::Slice<jule::U8>({'0'}));
		}
		_iter_next_4560628480:;
		(_41617_i)++;
		goto _iter_begin_4560628480;
		_iter_end_4560628480:;
	}
	_40014_dst=append(_40014_dst,jule::Slice<jule::U8>({_40066_fmt}));
	jule::Int _42913_exp = (_40038_d._field_dp - 1LL);
	if ((_40038_d._field_nd == 0LL)) {
		_42913_exp=0LL;
	}
	if ((_42913_exp < 0LL)) {
		_40713_ch='-';
		_42913_exp=static_cast<jule::Int>((-_42913_exp));
	} else {
		_40713_ch='+';
	}
	_40014_dst=append(_40014_dst,jule::Slice<jule::U8>({_40713_ch}));
	{
		auto _match_expr{ true };
		if (!((_42913_exp < 10LL) == _match_expr)) { goto _case_end_4560644544; }
		_case_begin_4560644544:;
		{
			_40014_dst=append(_40014_dst,jule::Slice<jule::U8>({'0',static_cast<jule::U8>((static_cast<jule::U8>(_42913_exp) + '0'))}));
		}
		goto _match_end_4560635968;
		_case_end_4560644544:;
		if (!((_42913_exp < 100LL) == _match_expr)) { goto _case_end_4560642704; }
		_case_begin_4560642704:;
		{
			_40014_dst=append(_40014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>((static_cast<jule::U8>(jule::div(_42913_exp,10LL)) + '0')),static_cast<jule::U8>((static_cast<jule::U8>((_42913_exp % 10LL)) + '0'))}));
		}
		goto _match_end_4560635968;
		_case_end_4560642704:;
		_case_begin_4560637872:;
		{
			_40014_dst=append(_40014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>((static_cast<jule::U8>(jule::div(_42913_exp,100LL)) + '0')),static_cast<jule::U8>((static_cast<jule::U8>((static_cast<jule::U8>(jule::div(_42913_exp,10LL)) % 10LL)) + '0')),static_cast<jule::U8>((static_cast<jule::U8>((_42913_exp % 10LL)) + '0'))}));
		}
		goto _match_end_4560635968;
		_case_end_4560637872:;
		_match_end_4560635968:;
	}
	return _40014_dst;
}



inline jule::Slice<jule::U8> _10d916690_fmt_f(jule::Slice<jule::U8> _45514_dst,jule::Bool _45527_neg,_10d916690_DecimalSlice _45538_d,jule::Int _45555_prec) {
	if (_45527_neg) {
		_45514_dst=append(_45514_dst,jule::Slice<jule::U8>({'-'}));
	}
	if ((_45538_d._field_dp > 0LL)) {
		jule::Int _46317_m = static_cast<jule::Int>(_10d916690_min(_45538_d._field_nd,_45538_d._field_dp));
		_45514_dst=append(_45514_dst,_45538_d._field_d.slice(0LL,static_cast<jule::Int>(_46317_m)));
		_iter_begin_4560660432:;
		if (!((_46317_m < _45538_d._field_dp))) { goto _iter_end_4560660432; }
		{
			_45514_dst=append(_45514_dst,jule::Slice<jule::U8>({'0'}));
		}
		_iter_next_4560660432:;
		(_46317_m)++;
		goto _iter_begin_4560660432;
		_iter_end_4560660432:;
	} else {
		_45514_dst=append(_45514_dst,jule::Slice<jule::U8>({'0'}));
	}
	if ((_45555_prec > 0LL)) {
		_45514_dst=append(_45514_dst,jule::Slice<jule::U8>({'.'}));
		jule::Int _47417_i = 0LL;
		_iter_begin_4560676544:;
		if (!((_47417_i < _45555_prec))) { goto _iter_end_4560676544; }
		{
			jule::U8 _47621_ch = static_cast<jule::U8>(48LLU);
			jule::Int _47717_j = (_45538_d._field_dp + _47417_i);
			if (((0LL <= _47717_j) && (_47717_j < _45538_d._field_nd))) {
				_47621_ch=_45538_d._field_d[static_cast<jule::Int>(_47717_j)];
			}
			_45514_dst=append(_45514_dst,jule::Slice<jule::U8>({_47621_ch}));
		}
		_iter_next_4560676544:;
		(_47417_i)++;
		goto _iter_begin_4560676544;
		_iter_end_4560676544:;
	}
	return _45514_dst;
}



inline jule::Slice<jule::U8> _10d916690_fmt_b(jule::Slice<jule::U8> _48821_dst,jule::Bool _48834_neg,jule::U64 _48845_mant,jule::Int _48860_exp,_10d916690_FloatInfo* _48870_flt) {
	if (_48834_neg) {
		_48821_dst=append(_48821_dst,jule::Slice<jule::U8>({'-'}));
	}
	std::tie(_48821_dst,std::ignore) = _10daf8c40_fmt_bits(_48821_dst,_48845_mant,10LL,false,true);
	_48821_dst=append(_48821_dst,jule::Slice<jule::U8>({'p'}));
	_48860_exp-=static_cast<jule::Int>(_48870_flt->_field_mantbits);
	if ((_48860_exp >= 0LL)) {
		_48821_dst=append(_48821_dst,jule::Slice<jule::U8>({'+'}));
	}
	std::tie(_48821_dst,std::ignore) = _10daf8c40_fmt_bits(_48821_dst,static_cast<jule::U64>(_48860_exp),10LL,(_48860_exp < 0LL),true);
	return _48821_dst;
}



inline jule::Slice<jule::U8> _10d916690_fmt_x(jule::Slice<jule::U8> _51021_dst,jule::Int _51034_prec,jule::U8 _51045_fmt,jule::Bool _51056_neg,jule::U64 _51121_mant,jule::Int _51136_exp,_10d916690_FloatInfo* _51146_flt) {
	if ((_51121_mant == 0LL)) {
		_51136_exp=0LL;
	}
	_51121_mant<<=static_cast<jule::Uint>((60LL - _51146_flt->_field_mantbits));
	_iter_begin_4560706736:;
	if (!(((_51121_mant != 0LL) && ((_51121_mant & 1152921504606846976LL) == 0LL)))) { goto _iter_end_4560706736; }
	{
		_51121_mant<<=1LL;
		(_51136_exp)--;
	}
	_iter_next_4560706736:;
	goto _iter_begin_4560706736;
	_iter_end_4560706736:;
	if (((_51034_prec >= 0LL) && (_51034_prec < 15LL))) {
		jule::Uint _52513_shift = static_cast<jule::Uint>((_51034_prec * 4LL));
		jule::U64 _52613_extra = ((_51121_mant << _52513_shift) & 1152921504606846976LL);
		_51121_mant>>=static_cast<jule::Uint>((60LL - _52513_shift));
		if (((_52613_extra | (_51121_mant & 1LL)) > 576460752303423488LL)) {
			(_51121_mant)++;
		}
		_51121_mant<<=static_cast<jule::Uint>((60LL - _52513_shift));
		if (((_51121_mant & 2305843009213693952LL) != 0LL)) {
			_51121_mant>>=1LL;
			(_51136_exp)++;
		}
	}
	jule::Str _53913_hex = jule::Str("0123456789abcdef", 16);
	if ((_51045_fmt == 'X')) {
		_53913_hex=jule::Str("0123456789ABCDEF", 16);
	}
	if (_51056_neg) {
		_51021_dst=append(_51021_dst,jule::Slice<jule::U8>({'-'}));
	}
	_51021_dst=append(_51021_dst,jule::Slice<jule::U8>({'0',_51045_fmt,static_cast<jule::U8>(('0' + static_cast<jule::U8>(((_51121_mant >> 60LL) & 1LL))))}));
	_51121_mant<<=4LL;
	if (((_51034_prec < 0LL) && (_51121_mant != 0LL))) {
		_51021_dst=append(_51021_dst,jule::Slice<jule::U8>({'.'}));
		_iter_begin_4560733152:;
		if (!((_51121_mant != 0LL))) { goto _iter_end_4560733152; }
		{
			_51021_dst=append(_51021_dst,jule::Slice<jule::U8>({_53913_hex[static_cast<jule::Int>(((_51121_mant >> 60LL) & 15LL))]}));
			_51121_mant<<=4LL;
		}
		_iter_next_4560733152:;
		goto _iter_begin_4560733152;
		_iter_end_4560733152:;
	} else if ((_51034_prec > 0LL)) {
		_51021_dst=append(_51021_dst,jule::Slice<jule::U8>({'.'}));
		jule::Int _56017_i = 0LL;
		_iter_begin_4560742000:;
		if (!((_56017_i < _51034_prec))) { goto _iter_end_4560742000; }
		{
			_51021_dst=append(_51021_dst,jule::Slice<jule::U8>({_53913_hex[static_cast<jule::Int>(((_51121_mant >> 60LL) & 15LL))]}));
			_51121_mant<<=4LL;
		}
		_iter_next_4560742000:;
		(_56017_i)++;
		goto _iter_begin_4560742000;
		_iter_end_4560742000:;
	}
	jule::U8 _56813_ch = static_cast<jule::U8>(80LLU);
	if ((_51045_fmt == static_cast<jule::U8>(_10ce6f0a0_lower(_51045_fmt)))) {
		_56813_ch='p';
	}
	_51021_dst=append(_51021_dst,jule::Slice<jule::U8>({_56813_ch}));
	if ((_51136_exp < 0LL)) {
		_56813_ch='-';
		_51136_exp=static_cast<jule::Int>((-_51136_exp));
	} else {
		_56813_ch='+';
	}
	_51021_dst=append(_51021_dst,jule::Slice<jule::U8>({_56813_ch}));
	{
		auto _match_expr{ true };
		if (!((_51136_exp < 100LL) == _match_expr)) { goto _case_end_4560758240; }
		_case_begin_4560758240:;
		{
			_51021_dst=append(_51021_dst,jule::Slice<jule::U8>({static_cast<jule::U8>((static_cast<jule::U8>(jule::div(_51136_exp,10LL)) + '0')),static_cast<jule::U8>((static_cast<jule::U8>((_51136_exp % 10LL)) + '0'))}));
		}
		goto _match_end_4560750048;
		_case_end_4560758240:;
		if (!((_51136_exp < 1000LL) == _match_expr)) { goto _case_end_4560758480; }
		_case_begin_4560758480:;
		{
			_51021_dst=append(_51021_dst,jule::Slice<jule::U8>({static_cast<jule::U8>((static_cast<jule::U8>(jule::div(_51136_exp,100LL)) + '0')),static_cast<jule::U8>((static_cast<jule::U8>((jule::div(_51136_exp,10LL) % 10LL)) + '0')),static_cast<jule::U8>((static_cast<jule::U8>((_51136_exp % 10LL)) + '0'))}));
		}
		goto _match_end_4560750048;
		_case_end_4560758480:;
		_case_begin_4560722368:;
		{
			_51021_dst=append(_51021_dst,jule::Slice<jule::U8>({static_cast<jule::U8>((static_cast<jule::U8>(jule::div(_51136_exp,1000LL)) + '0')),static_cast<jule::U8>((static_cast<jule::U8>((static_cast<jule::U8>(jule::div(_51136_exp,100LL)) % 10LL)) + '0')),static_cast<jule::U8>((static_cast<jule::U8>((jule::div(_51136_exp,10LL) % 10LL)) + '0')),static_cast<jule::U8>((static_cast<jule::U8>((_51136_exp % 10LL)) + '0'))}));
		}
		goto _match_end_4560750048;
		_case_end_4560722368:;
		_match_end_4560750048:;
	}
	return _51021_dst;
}



inline jule::Int _10d916690_min(jule::Int _5938_a,jule::Int _59316_b) {
	if ((_5938_a < _59316_b)) {
		return _5938_a;
	}
	return _59316_b;
}



inline jule::Int _10d916690_max(jule::Int _6008_a,jule::Int _60016_b) {
	if ((_6008_a > _60016_b)) {
		return _6008_a;
	}
	return _60016_b;
}



inline jule::U8 _10ce6f0a0_lower(jule::U8 _4910_c) {
	return (_4910_c | 32LL);
}



inline std::tuple<jule::U64,jule::Int> _10ce6f0a0_parse_uint(jule::Str _5423_s,jule::Int _5435_base,jule::Int _5450_bit_size) {
	if ((_5423_s == jule::Str("", 0))) {
		return std::make_tuple(0LL,2LLU);
	}
	{
		auto _match_expr{ true };
		if (!(((2LL <= _5435_base) && (_5435_base <= 36LL)) == _match_expr)) { goto _case_end_4560789008; }
		goto _match_end_4560784000;
		_case_end_4560789008:;
		if (!((_5435_base == 0LL) == _match_expr)) { goto _case_end_4560787696; }
		_case_begin_4560787696:;
		{
			_5435_base=10LL;
			if ((_5423_s[static_cast<jule::Int>(0LL)] == '0')) {
				{
					auto _match_expr{ true };
					if (!(((static_cast<jule::I64>(_5423_s.len()) >= 3LL) && (static_cast<jule::U8>(_10ce6f0a0_lower(_5423_s[static_cast<jule::Int>(1LL)])) == 'b')) == _match_expr)) { goto _case_end_4560794656; }
					_case_begin_4560794656:;
					{
						_5435_base=2LL;
						_5423_s=_5423_s.slice(static_cast<jule::Int>(2LL));
					}
					goto _match_end_4560792656;
					_case_end_4560794656:;
					if (!(((static_cast<jule::I64>(_5423_s.len()) >= 3LL) && (static_cast<jule::U8>(_10ce6f0a0_lower(_5423_s[static_cast<jule::Int>(1LL)])) == 'o')) == _match_expr)) { goto _case_end_4560794160; }
					_case_begin_4560794160:;
					{
						_5435_base=8LL;
						_5423_s=_5423_s.slice(static_cast<jule::Int>(2LL));
					}
					goto _match_end_4560792656;
					_case_end_4560794160:;
					if (!(((static_cast<jule::I64>(_5423_s.len()) >= 3LL) && (static_cast<jule::U8>(_10ce6f0a0_lower(_5423_s[static_cast<jule::Int>(1LL)])) == 'x')) == _match_expr)) { goto _case_end_4560796144; }
					_case_begin_4560796144:;
					{
						_5435_base=16LL;
						_5423_s=_5423_s.slice(static_cast<jule::Int>(2LL));
					}
					goto _match_end_4560792656;
					_case_end_4560796144:;
					_case_begin_4560792912:;
					{
						_5435_base=8LL;
						_5423_s=_5423_s.slice(static_cast<jule::Int>(1LL));
					}
					goto _match_end_4560792656;
					_case_end_4560792912:;
					_match_end_4560792656:;
				}
			}
		}
		goto _match_end_4560784000;
		_case_end_4560787696:;
		_case_begin_4560784288:;
		{
			return std::make_tuple(0LL,3LLU);
		}
		goto _match_end_4560784000;
		_case_end_4560784288:;
		_match_end_4560784000:;
	}
	if ((_5450_bit_size == 0LL)) {
		_5450_bit_size=64LL;
	} else if (((_5450_bit_size < 0LL) || (_5450_bit_size > 64LL))) {
		return std::make_tuple(0LL,4LLU);
	}
	jule::U64 _9313_cutoff = 0LLU;
	{
		auto _match_expr{ _5435_base };
		if (!(10LL == _match_expr)) { goto _case_end_4560815248; }
		_case_begin_4560815248:;
		{
			_9313_cutoff=1.8446744073709553e+18;
		}
		goto _match_end_4560784144;
		_case_end_4560815248:;
		if (!(16LL == _match_expr)) { goto _case_end_4560814672; }
		_case_begin_4560814672:;
		{
			_9313_cutoff=1.152921504606847e+18;
		}
		goto _match_end_4560784144;
		_case_end_4560814672:;
		_case_begin_4560813584:;
		{
			_9313_cutoff=static_cast<jule::U64>((static_cast<jule::U64>(jule::div(jule::MAX_U64,static_cast<jule::U64>(_5435_base))) + 1LL));
		}
		goto _match_end_4560784144;
		_case_end_4560813584:;
		_match_end_4560784144:;
	}
	jule::U64 _10013_max_val = 0LLU;
	{
		auto _match_expr{ _5450_bit_size };
		if (!(32LL == _match_expr)) { goto _case_end_4560818384; }
		_case_begin_4560818384:;
		{
			_10013_max_val=4294967295LLU;
		}
		goto _match_end_4560818608;
		_case_end_4560818384:;
		if (!(64LL == _match_expr)) { goto _case_end_4560817168; }
		_case_begin_4560817168:;
		{
			_10013_max_val=jule::MAX_U64;
		}
		goto _match_end_4560818608;
		_case_end_4560817168:;
		_match_end_4560818608:;
	}
	jule::U64 _11213_n = 0LLU;
	{
		auto &__julec_range_expr = _5423_s;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::U8 _10ce6f0a0_c{jule::U8()};_10ce6f0a0_c = *__julec_range_begin;
			_iter_begin_4560822416:;
			{
				jule::U8 _11417_d = 0LLU;
				{
					auto _match_expr{ true };
					if (!((('0' <= _10ce6f0a0_c) && (_10ce6f0a0_c <= '9')) == _match_expr)) { goto _case_end_4560828576; }
					_case_begin_4560828576:;
					{
						_11417_d=(_10ce6f0a0_c - '0');
					}
					goto _match_end_4560825856;
					_case_end_4560828576:;
					if (!((('a' <= static_cast<jule::U8>(_10ce6f0a0_lower(_10ce6f0a0_c))) && (static_cast<jule::U8>(_10ce6f0a0_lower(_10ce6f0a0_c)) <= 'z')) == _match_expr)) { goto _case_end_4560827264; }
					_case_begin_4560827264:;
					{
						_11417_d=static_cast<jule::U8>((static_cast<jule::U8>((static_cast<jule::U8>(_10ce6f0a0_lower(_10ce6f0a0_c)) - 'a')) + 10LL));
					}
					goto _match_end_4560825856;
					_case_end_4560827264:;
					_case_begin_4560826176:;
					{
						return std::make_tuple(0LL,2LLU);
					}
					goto _match_end_4560825856;
					_case_end_4560826176:;
					_match_end_4560825856:;
				}
				if ((_11417_d >= static_cast<jule::U8>(_5435_base))) {
					return std::make_tuple(0LL,2LLU);
				}
				if ((_11213_n >= _9313_cutoff)) {
					return std::make_tuple(_10013_max_val,1LLU);
				}
				_11213_n*=static_cast<jule::U64>(_5435_base);
				jule::U64 _13413_n1 = (_11213_n + static_cast<jule::U64>(_11417_d));
				if (((_13413_n1 < _11213_n) || (_13413_n1 > _10013_max_val))) {
					return std::make_tuple(_10013_max_val,1LLU);
				}
				_11213_n=_13413_n1;
			}
			_iter_next_4560822416:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10ce6f0a0_c = *__julec_range_begin; goto _iter_begin_4560822416; }
			_iter_end_4560822416:;
		}
	}
	return std::make_tuple(_11213_n,0LLU);
}



inline std::tuple<jule::I64,jule::Int> _10ce6f0a0_parse_int(jule::Str _16522_s,jule::Int _16530_base,jule::Int _16545_bit_size) {
	jule::Int _16570_err{0LLU};
	jule::I64 _16562_i{jule::I64()};
	if ((_16522_s == jule::Str("", 0))) {
		_16562_i = 0LL;
		_16570_err = 2LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	jule::Bool _17113_neg = false;
	if ((_16522_s[static_cast<jule::Int>(0LL)] == '+')) {
		_16522_s=_16522_s.slice(static_cast<jule::Int>(1LL));
	} else if ((_16522_s[static_cast<jule::Int>(0LL)] == '-')) {
		_17113_neg=true;
		_16522_s=_16522_s.slice(static_cast<jule::Int>(1LL));
	}
	jule::Uint _18013_un = 0LLU;
	std::tie(_18013_un,_16570_err) = _10ce6f0a0_parse_uint(_16522_s,_16530_base,_16545_bit_size);
	if (((_16570_err != 0LLU) && (_16570_err != 1LLU))) {
		_16562_i = 0LL;
		_16570_err = _16570_err;
		return std::make_tuple(_16562_i,_16570_err);
	}
	if ((_16545_bit_size == 0LL)) {
		_16545_bit_size=64LL;
	}
	jule::U64 _1909_cutoff = static_cast<jule::U64>(static_cast<jule::Int>((1LL << static_cast<jule::Uint>((_16545_bit_size - 1LL)))));
	if (((!_17113_neg) && (_18013_un >= _1909_cutoff))) {
		_16562_i = static_cast<jule::I64>((_1909_cutoff - 1LL));
		_16570_err = 1LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	if ((_17113_neg && (_18013_un > _1909_cutoff))) {
		_16562_i = static_cast<jule::I64>((-static_cast<jule::I64>(_1909_cutoff)));
		_16570_err = 1LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	jule::I64 _19713_n = static_cast<jule::I64>(_18013_un);
	if (_17113_neg) {
		_19713_n=static_cast<jule::I64>((-_19713_n));
	}
	_16562_i = _19713_n;
	_16570_err = 0LLU;
	return std::make_tuple(_16562_i,_16570_err);
}



inline std::tuple<jule::F64,jule::Bool> _10ce703a0_eisel_lemire64(jule::U64 _4123_man,jule::Int _4133_exp10,jule::Bool _4145_neg) {
	jule::Bool _4166_ok{jule::Bool()};
	jule::F64 _4158_f{jule::F64()};
	if ((_4123_man == 0LL)) {
		if (_4145_neg) {
			_4158_f=static_cast<jule::F64>(_10dc3cbe0_f64_from_bits(9223372036854775808LLU));
		}
		_4158_f = _4158_f;
		_4166_ok = true;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	if (((_4133_exp10 < -348LL) || (347LL < _4133_exp10))) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::Int _579_clz = static_cast<jule::Int>(_10e2c0220_leading_zeros64(_4123_man));
	_4123_man<<=static_cast<jule::Uint>(_579_clz);
	
	jule::U64 _6013_ret_exp2 = static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::Int>((static_cast<jule::Int>((static_cast<jule::Int>((static_cast<jule::Int>((217706LL * _4133_exp10)) >> 16LL)) + 64LL)) + 1023LL))) - static_cast<jule::U64>(_579_clz)));
	jule::U64 _6314_x_hi{};
	jule::U64 _6324_x_lo{};
	std::tie(_6314_x_hi,_6324_x_lo) = _10e2c0220_mul64(_4123_man,_10ce703a0_DETAILED_POWS_OF_TEN[static_cast<jule::Int>((_4133_exp10 - -348LL))][static_cast<jule::Int>(1LL)]);
	if ((((_6314_x_hi & 511LL) == 511LL) && ((_6324_x_lo + _4123_man) < _4123_man))) {
		jule::U64 _6714_y_hi{};
		jule::U64 _6720_y_lo{};
		std::tie(_6714_y_hi,_6720_y_lo) = _10e2c0220_mul64(_4123_man,_10ce703a0_DETAILED_POWS_OF_TEN[static_cast<jule::Int>((_4133_exp10 - -348LL))][static_cast<jule::Int>(0LL)]);
		jule::U64 _6818_merged_hi = _6314_x_hi;
		jule::U64 _6829_merged_lo = (_6324_x_lo + _6714_y_hi);
		std::tie(_6818_merged_hi,_6829_merged_lo) = std::make_tuple(_6314_x_hi,(_6324_x_lo + _6714_y_hi));
		if ((_6829_merged_lo < _6324_x_lo)) {
			(_6818_merged_hi)++;
		}
		if (((((_6818_merged_hi & 511LL) == 511LL) && ((_6829_merged_lo + 1LL) == 0LL)) && ((_6720_y_lo + _4123_man) < _4123_man))) {
			_4158_f = 0LL;
			_4166_ok = false;
			return std::make_tuple(_4158_f,_4166_ok);
		}
		std::tie(_6314_x_hi,_6324_x_lo) = std::make_tuple(_6818_merged_hi,_6829_merged_lo);
	}
	jule::U64 _799_msb = (_6314_x_hi >> 63LL);
	jule::U64 _8013_ret_mantissa = (_6314_x_hi >> (_799_msb + 9LL));
	_6013_ret_exp2-=static_cast<jule::U64>((1LL ^ _799_msb));
	if ((((_6324_x_lo == 0LL) && ((_6314_x_hi & 511LL) == 0LL)) && ((_8013_ret_mantissa & 3LL) == 1LL))) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	_8013_ret_mantissa+=(_8013_ret_mantissa & 1LL);
	_8013_ret_mantissa>>=1LL;
	if (((_8013_ret_mantissa >> 53LL) > 0LL)) {
		_8013_ret_mantissa>>=1LL;
		_6013_ret_exp2+=1LL;
	}
	if (((_6013_ret_exp2 - 1LL) >= 2046LL)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::U64 _10313_ret_bits = ((_6013_ret_exp2 << 52LL) | (_8013_ret_mantissa & 4503599627370495LL));
	if (_4145_neg) {
		_10313_ret_bits|=9223372036854775808LLU;
	}
	_4158_f = static_cast<jule::F64>(_10dc3cbe0_f64_from_bits(_10313_ret_bits));
	_4166_ok = true;
	return std::make_tuple(_4158_f,_4166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _10ce703a0_eisel_lemire32(jule::U64 _11023_man,jule::Int _11033_exp10,jule::Bool _11045_neg) {
	jule::Bool _11066_ok{jule::Bool()};
	jule::F32 _11058_f{jule::F32()};
	if ((_11023_man == 0LL)) {
		if (_11045_neg) {
			_11058_f=static_cast<jule::F32>(_10dc3cbe0_f32_from_bits(2147483648LLU));
		}
		_11058_f = _11058_f;
		_11066_ok = true;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	if (((_11033_exp10 < -348LL) || (347LL < _11033_exp10))) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::Int _1329_clz = static_cast<jule::Int>(_10e2c0220_leading_zeros64(_11023_man));
	_11023_man<<=static_cast<jule::Uint>(_1329_clz);
	
	jule::U64 _13513_ret_exp2 = static_cast<jule::U64>((static_cast<jule::U64>(static_cast<jule::Int>((static_cast<jule::Int>((static_cast<jule::Int>((static_cast<jule::Int>((217706LL * _11033_exp10)) >> 16LL)) + 64LL)) + 127LL))) - static_cast<jule::U64>(_1329_clz)));
	jule::U64 _13814_x_hi{};
	jule::U64 _13824_x_lo{};
	std::tie(_13814_x_hi,_13824_x_lo) = _10e2c0220_mul64(_11023_man,_10ce703a0_DETAILED_POWS_OF_TEN[static_cast<jule::Int>((_11033_exp10 - -348LL))][static_cast<jule::Int>(1LL)]);
	if ((((_13814_x_hi & 274877906943LL) == 274877906943LL) && ((_13824_x_lo + _11023_man) < _11023_man))) {
		jule::U64 _14214_y_hi{};
		jule::U64 _14220_y_lo{};
		std::tie(_14214_y_hi,_14220_y_lo) = _10e2c0220_mul64(_11023_man,_10ce703a0_DETAILED_POWS_OF_TEN[static_cast<jule::Int>((_11033_exp10 - -348LL))][static_cast<jule::Int>(0LL)]);
		jule::U64 _14318_merged_hi = _13814_x_hi;
		jule::U64 _14329_merged_lo = (_13824_x_lo + _14214_y_hi);
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,(_13824_x_lo + _14214_y_hi));
		if ((_14329_merged_lo < _13824_x_lo)) {
			(_14318_merged_hi)++;
		}
		if (((((_14318_merged_hi & 274877906943LL) == 274877906943LL) && ((_14329_merged_lo + 1LL) == 0LL)) && ((_14220_y_lo + _11023_man) < _11023_man))) {
			_11058_f = 0LL;
			_11066_ok = false;
			return std::make_tuple(_11058_f,_11066_ok);
		}
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	}
	jule::U64 _1549_msb = (_13814_x_hi >> 63LL);
	jule::U64 _15513_ret_mantissa = (_13814_x_hi >> (_1549_msb + 38LL));
	_13513_ret_exp2-=static_cast<jule::U64>((1LL ^ _1549_msb));
	if ((((_13824_x_lo == 0LL) && ((_13814_x_hi & 274877906943LL) == 0LL)) && ((_15513_ret_mantissa & 3LL) == 1LL))) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	_15513_ret_mantissa+=(_15513_ret_mantissa & 1LL);
	_15513_ret_mantissa>>=1LL;
	if (((_15513_ret_mantissa >> 24LL) > 0LL)) {
		_15513_ret_mantissa>>=1LL;
		_13513_ret_exp2+=1LL;
	}
	if (((_13513_ret_exp2 - 1LL) >= 254LL)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::U64 _17813_ret_bits = ((_13513_ret_exp2 << 23LL) | (_15513_ret_mantissa & 8388607LL));
	if (_11045_neg) {
		_17813_ret_bits|=2147483648LL;
	}
	_11058_f = static_cast<jule::F32>(_10dc3cbe0_f32_from_bits(static_cast<jule::U32>(_17813_ret_bits)));
	_11066_ok = true;
	return std::make_tuple(_11058_f,_11066_ok);
}



inline jule::Int _10cec8240_common_prefix_len_ignore_case(jule::Str _4534_s,jule::Str _4542_prefix) {
	jule::I64 _4613_n = static_cast<jule::I64>(_4542_prefix.len());
	if ((_4613_n > static_cast<jule::I64>(_4534_s.len()))) {
		_4613_n=static_cast<jule::I64>(_4534_s.len());
	}
	jule::Int _5013_i = 0LL;
	_iter_begin_4560986672:;
	if (!((_5013_i < _4613_n))) { goto _iter_end_4560986672; }
	{
		jule::U8 _5217_c = _4534_s[static_cast<jule::Int>(_5013_i)];
		if ((('A' <= _5217_c) && (_5217_c <= 'Z'))) {
			_5217_c+=32LL;
		}
		if ((_5217_c != _4542_prefix[static_cast<jule::Int>(_5013_i)])) {
			return _5013_i;
		}
	}
	_iter_next_4560986672:;
	(_5013_i)++;
	goto _iter_begin_4560986672;
	_iter_end_4560986672:;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::Int,jule::Bool> _10cec8240_special(jule::Str _6816_s) {
	jule::Bool _6842_ok{jule::Bool()};
	jule::Int _6834_n{jule::Int()};
	jule::F64 _6826_f{jule::F64()};
	if ((_6816_s == jule::Str("", 0))) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	}
	jule::Int _7213_sign = 1LL;
	jule::Int _7313_nsign = 0LL;
	{
		auto _match_expr{ _6816_s[static_cast<jule::Int>(0LL)] };
		if (!('+' == _match_expr || '-' == _match_expr)) { goto _case_end_4561003584; }
		_case_begin_4561003584:;
		{
			if ((_6816_s[static_cast<jule::Int>(0LL)] == '-')) {
				_7213_sign=-1LL;
			}
			_7313_nsign=1LL;
			_6816_s=_6816_s.slice(static_cast<jule::Int>(1LL));
			goto _case_begin_4561003696;
		}
		goto _match_end_4561001888;
		_case_end_4561003584:;
		if (!('i' == _match_expr || 'I' == _match_expr)) { goto _case_end_4561003696; }
		_case_begin_4561003696:;
		{
			jule::Int _8317_case_n = static_cast<jule::Int>(_10cec8240_common_prefix_len_ignore_case(_6816_s,jule::Str("infinity", 8)));
			if (((3LL < _8317_case_n) && (_8317_case_n < 8LL))) {
				_8317_case_n=3LL;
			}
			if (((_8317_case_n == 3LL) || (_8317_case_n == 8LL))) {
				_6826_f = static_cast<jule::F64>(_10dd389b0_inf(_7213_sign));
				_6834_n = (_7313_nsign + _6834_n);
				_6842_ok = true;
				return std::make_tuple(_6826_f,_6834_n,_6842_ok);
			}
		}
		goto _match_end_4561001888;
		_case_end_4561003696:;
		if (!('n' == _match_expr || 'N' == _match_expr)) { goto _case_end_4561003808; }
		_case_begin_4561003808:;
		{
			if ((static_cast<jule::Int>(_10cec8240_common_prefix_len_ignore_case(_6816_s,jule::Str("nan", 3))) == 3LL)) {
				_6826_f = static_cast<jule::F64>(_10dd389b0_nan());
				_6834_n = 3LL;
				_6842_ok = true;
				return std::make_tuple(_6826_f,_6834_n,_6842_ok);
			}
		}
		goto _match_end_4561001888;
		_case_end_4561003808:;
		_match_end_4561001888:;
	}
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::Int,jule::Bool,jule::Bool,jule::Bool,jule::Int,jule::Bool> _10cec8240_read_float(jule::Str _10315_s) {
	jule::Bool _10457_ok{jule::Bool()};
	jule::Int _10449_i{jule::Int()};
	jule::Bool _10438_hex{jule::Bool()};
	jule::Bool _10425_trunc{jule::Bool()};
	jule::Bool _10350_neg{jule::Bool()};
	jule::Int _10340_exp{jule::Int()};
	jule::U64 _10325_mantissa{jule::U64()};
	if ((_10449_i >= static_cast<jule::I64>(_10315_s.len()))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	{
		auto _match_expr{ true };
		if (!((_10315_s[static_cast<jule::Int>(_10449_i)] == '+') == _match_expr)) { goto _case_end_4561028640; }
		_case_begin_4561028640:;
		{
			(_10449_i)++;
		}
		goto _match_end_4561027792;
		_case_end_4561028640:;
		if (!((_10315_s[static_cast<jule::Int>(_10449_i)] == '-') == _match_expr)) { goto _case_end_4561029120; }
		_case_begin_4561029120:;
		{
			_10350_neg=true;
			(_10449_i)++;
		}
		goto _match_end_4561027792;
		_case_end_4561029120:;
		_match_end_4561027792:;
	}
	jule::U64 _11813_base = 10LLU;
	jule::Int _11913_max_mant_digits = 19LL;
	jule::U8 _12013_exp_char = 'e';
	if (((((_10449_i + 2LL) < static_cast<jule::I64>(_10315_s.len())) && (_10315_s[static_cast<jule::Int>(_10449_i)] == '0')) && (static_cast<jule::U8>(_10ce6f0a0_lower(_10315_s[static_cast<jule::Int>((_10449_i + 1LL))])) == 'x'))) {
		_11813_base=16LL;
		_11913_max_mant_digits=16LL;
		_10449_i+=2LL;
		_12013_exp_char='p';
		_10438_hex=true;
	}
	jule::Bool _12813_sawdot = false;
	jule::Bool _12913_sawdigits = false;
	jule::Int _13013_nd = 0LL;
	jule::Int _13113_nd_mant = 0LL;
	jule::Int _13213_dp = 0LL;
	_iter_begin_4561046736:;
	if (!((_10449_i < static_cast<jule::I64>(_10315_s.len())))) { goto _iter_end_4561046736; }
	{
		jule::U8 _13413_c = _10315_s[static_cast<jule::Int>(_10449_i)];
		{
			auto _match_expr{ true };
			if (!((_13413_c == '.') == _match_expr)) { goto _case_end_4561051344; }
			_case_begin_4561051344:;
			{
				if (_12813_sawdot) {
					goto _julec_label_loop_end;
				}
				_12813_sawdot=true;
				_13213_dp=_13013_nd;
				goto _iter_next_4561046736;
			}
			goto _match_end_4561051168;
			_case_end_4561051344:;
			if (!((('0' <= _13413_c) && (_13413_c <= '9')) == _match_expr)) { goto _case_end_4561051456; }
			_case_begin_4561051456:;
			{
				_12913_sawdigits=true;
				if (((_13413_c == '0') && (_13013_nd == 0LL))) {
					(_13213_dp)--;
					goto _iter_next_4561046736;
				}
				(_13013_nd)++;
				if ((_13113_nd_mant < _11913_max_mant_digits)) {
					_10325_mantissa*=_11813_base;
					_10325_mantissa+=static_cast<jule::U64>((_13413_c - '0'));
					(_13113_nd_mant)++;
				} else if ((_13413_c != '0')) {
					_10425_trunc=true;
				}
				goto _iter_next_4561046736;
			}
			goto _match_end_4561051168;
			_case_end_4561051456:;
			if (!((((_11813_base == 16LL) && ('a' <= static_cast<jule::U8>(_10ce6f0a0_lower(_13413_c)))) && (static_cast<jule::U8>(_10ce6f0a0_lower(_13413_c)) <= 'f')) == _match_expr)) { goto _case_end_4561051568; }
			_case_begin_4561051568:;
			{
				_12913_sawdigits=true;
				(_13013_nd)++;
				if ((_13113_nd_mant < _11913_max_mant_digits)) {
					_10325_mantissa*=16LL;
					_10325_mantissa+=static_cast<jule::U64>(static_cast<jule::U8>((static_cast<jule::U8>((static_cast<jule::U8>(_10ce6f0a0_lower(_13413_c)) - 'a')) + 10LL)));
					(_13113_nd_mant)++;
				} else {
					_10425_trunc=true;
				}
				goto _iter_next_4561046736;
			}
			goto _match_end_4561051168;
			_case_end_4561051568:;
			_match_end_4561051168:;
		}
		goto _iter_end_4561046736;
	}
	_iter_next_4561046736:;
	(_10449_i)++;
	goto _iter_begin_4561046736;
	_iter_end_4561046736:;
	_julec_label_loop_end:;
	if ((!_12913_sawdigits)) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if ((!_12813_sawdot)) {
		_13213_dp=_13013_nd;
	}
	if ((_11813_base == 16LL)) {
		_13213_dp*=4LL;
		_13113_nd_mant*=4LL;
	}
	if (((_10449_i < static_cast<jule::I64>(_10315_s.len())) && (static_cast<jule::U8>(_10ce6f0a0_lower(_10315_s[static_cast<jule::Int>(_10449_i)])) == _12013_exp_char))) {
		(_10449_i)++;
		if ((_10449_i >= static_cast<jule::I64>(_10315_s.len()))) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::Int _19517_esign = 1LL;
		if ((_10315_s[static_cast<jule::Int>(_10449_i)] == '+')) {
			(_10449_i)++;
		} else if ((_10315_s[static_cast<jule::Int>(_10449_i)] == '-')) {
			(_10449_i)++;
			_19517_esign=-1LL;
		}
		if ((((_10449_i >= static_cast<jule::I64>(_10315_s.len())) || (_10315_s[static_cast<jule::Int>(_10449_i)] < '0')) || (_10315_s[static_cast<jule::Int>(_10449_i)] > '9'))) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::Int _20517_e = 0LL;
		_iter_begin_4561086752:;
		if (!(((_10449_i < static_cast<jule::I64>(_10315_s.len())) && (('0' <= _10315_s[static_cast<jule::Int>(_10449_i)]) && (_10315_s[static_cast<jule::Int>(_10449_i)] <= '9'))))) { goto _iter_end_4561086752; }
		{
			if ((_20517_e < 10000LL)) {
				_20517_e=(((_20517_e * 10LL) + static_cast<jule::Int>(_10315_s[static_cast<jule::Int>(_10449_i)])) - '0');
			}
		}
		_iter_next_4561086752:;
		(_10449_i)++;
		goto _iter_begin_4561086752;
		_iter_end_4561086752:;
		_13213_dp+=(_20517_e * _19517_esign);
	} else if ((_11813_base == 16LL)) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if ((_10325_mantissa != 0LL)) {
		_10340_exp=(_13213_dp - _13113_nd_mant);
	}
	_10457_ok=true;
	return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
}



inline std::tuple<jule::F64,jule::Bool> _10cec8240_atof64exact(jule::U64 _47216_mantissa,jule::Int _47235_exp,jule::Bool _47245_neg) {
	jule::Bool _47266_ok{jule::Bool()};
	jule::F64 _47258_f{jule::F64()};
	if (((_47216_mantissa >> _10d916690_F64_INFO._field_mantbits) != 0LL)) {
		return std::make_tuple(_47258_f,_47266_ok);
	}
	_47258_f=static_cast<jule::F64>(_47216_mantissa);
	if (_47245_neg) {
		_47258_f=static_cast<jule::F64>((-_47258_f));
	}
	{
		auto _match_expr{ true };
		if (!((_47235_exp == 0LL) == _match_expr)) { goto _case_end_4561125968; }
		_case_begin_4561125968:;
		{
			_47258_f = _47258_f;
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_4561124656;
		_case_end_4561125968:;
		if (!(((_47235_exp > 0LL) && (_47235_exp <= 37LL)) == _match_expr)) { goto _case_end_4561126080; }
		_case_begin_4561126080:;
		{
			if ((_47235_exp > 22LL)) {
				_47258_f*=_10cec8240_F64_POW10[static_cast<jule::Int>((_47235_exp - 22LL))];
				_47235_exp=22LL;
			}
			if (((_47258_f > 1e+15) || (_47258_f < -1000000000000000LL))) {
				return std::make_tuple(_47258_f,_47266_ok);
			}
			_47258_f = (_47258_f * _10cec8240_F64_POW10[static_cast<jule::Int>(_47235_exp)]);
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_4561124656;
		_case_end_4561126080:;
		if (!(((_47235_exp < 0LL) && (_47235_exp >= -22LL)) == _match_expr)) { goto _case_end_4561127264; }
		_case_begin_4561127264:;
		{
			_47258_f = jule::div(_47258_f,_10cec8240_F64_POW10[static_cast<jule::Int>(static_cast<jule::Int>((-_47235_exp)))]);
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_4561124656;
		_case_end_4561127264:;
		_match_end_4561124656:;
	}
	return std::make_tuple(_47258_f,_47266_ok);
}



inline std::tuple<jule::F32,jule::Bool> _10cec8240_atof32exact(jule::U64 _50616_mantissa,jule::Int _50635_exp,jule::Bool _50649_neg) {
	jule::Bool _50670_ok{jule::Bool()};
	jule::F32 _50662_f{jule::F32()};
	if (((_50616_mantissa >> _10d916690_F32_INFO._field_mantbits) != 0LL)) {
		return std::make_tuple(_50662_f,_50670_ok);
	}
	_50662_f=static_cast<jule::F32>(_50616_mantissa);
	if (_50649_neg) {
		_50662_f=static_cast<jule::F32>((-_50662_f));
	}
	{
		auto _match_expr{ true };
		if (!((_50635_exp == 0LL) == _match_expr)) { goto _case_end_4561146496; }
		_case_begin_4561146496:;
		{
			_50662_f = _50662_f;
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_4561146832;
		_case_end_4561146496:;
		if (!(((_50635_exp > 0LL) && (_50635_exp <= 17LL)) == _match_expr)) { goto _case_end_4561146608; }
		_case_begin_4561146608:;
		{
			if ((_50635_exp > 10LL)) {
				_50662_f*=_10cec8240_F32_POW10[static_cast<jule::Int>((_50635_exp - 10LL))];
				_50635_exp=10LL;
			}
			if (((_50662_f > 1e+07) || (_50662_f < -10000000LL))) {
				return std::make_tuple(_50662_f,_50670_ok);
			}
			_50662_f = (_50662_f * _10cec8240_F32_POW10[static_cast<jule::Int>(_50635_exp)]);
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_4561146832;
		_case_end_4561146608:;
		if (!(((_50635_exp < 0LL) && (_50635_exp >= -10LL)) == _match_expr)) { goto _case_end_4561147504; }
		_case_begin_4561147504:;
		{
			_50662_f = jule::div(_50662_f,_10cec8240_F32_POW10[static_cast<jule::Int>(static_cast<jule::Int>((-_50635_exp)))]);
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_4561146832;
		_case_end_4561147504:;
		_match_end_4561146832:;
	}
	return std::make_tuple(_50662_f,_50670_ok);
}



inline std::tuple<jule::F64,jule::Int> _10cec8240_atof_hex(jule::Str _54220_s,_10d916690_FloatInfo* _54228_flt,jule::U64 _54249_mantissa,jule::Int _54268_exp,jule::Bool _54278_neg,jule::Bool _54289_trunc) {
	jule::Int _5439_max_exp = static_cast<jule::Int>((static_cast<jule::Int>((static_cast<jule::Int>((1LL << _54228_flt->_field_expbits)) + _54228_flt->_field_bias)) - 2LL));
	jule::Int _5449_min_exp = (_54228_flt->_field_bias + 1LL);
	_54268_exp+=static_cast<jule::Int>(_54228_flt->_field_mantbits);
	_iter_begin_4561168688:;
	if (!(((_54249_mantissa != 0LL) && ((_54249_mantissa >> (_54228_flt->_field_mantbits + 2LL)) == 0LL)))) { goto _iter_end_4561168688; }
	{
		_54249_mantissa<<=1LL;
		(_54268_exp)--;
	}
	_iter_next_4561168688:;
	goto _iter_begin_4561168688;
	_iter_end_4561168688:;
	if (_54289_trunc) {
		_54249_mantissa|=1LL;
	}
	_iter_begin_4561170224:;
	if (!(((_54249_mantissa >> static_cast<jule::Uint>((static_cast<jule::Uint>((1LL + _54228_flt->_field_mantbits)) + 2LL))) != 0LL))) { goto _iter_end_4561170224; }
	{
		_54249_mantissa=((_54249_mantissa >> 1LL) | (_54249_mantissa & 1LL));
		(_54268_exp)++;
	}
	_iter_next_4561170224:;
	goto _iter_begin_4561170224;
	_iter_end_4561170224:;
	_iter_begin_4561177472:;
	if (!(((_54249_mantissa > 1LL) && (_54268_exp < (_5449_min_exp - 2LL))))) { goto _iter_end_4561177472; }
	{
		_54249_mantissa=((_54249_mantissa >> 1LL) | (_54249_mantissa & 1LL));
		(_54268_exp)++;
	}
	_iter_next_4561177472:;
	goto _iter_begin_4561177472;
	_iter_end_4561177472:;
	jule::U64 _57413_round = (_54249_mantissa & 3LL);
	_54249_mantissa>>=2LL;
	_57413_round|=(_54249_mantissa & 1LL);
	_54268_exp+=2LL;
	if ((_57413_round == 3LL)) {
		(_54249_mantissa)++;
		if ((_54249_mantissa == static_cast<jule::Int>((1LL << static_cast<jule::Uint>((1LL + _54228_flt->_field_mantbits)))))) {
			_54249_mantissa>>=1LL;
			(_54268_exp)++;
		}
	}
	if (((_54249_mantissa >> _54228_flt->_field_mantbits) == 0LL)) {
		_54268_exp=_54228_flt->_field_bias;
	}
	jule::Int _58913_err = 0LLU;
	if ((_54268_exp > _5439_max_exp)) {
		_54249_mantissa=static_cast<jule::U64>(static_cast<jule::Int>((1LL << _54228_flt->_field_mantbits)));
		_54268_exp=(_5439_max_exp + 1LL);
		_58913_err=1LLU;
	}
	jule::U64 _59613_bits = (_54249_mantissa & static_cast<jule::Int>((static_cast<jule::Int>((1LL << _54228_flt->_field_mantbits)) - 1LL)));
	_59613_bits|=static_cast<jule::U64>((static_cast<jule::U64>(((_54268_exp - _54228_flt->_field_bias) & static_cast<jule::Int>((static_cast<jule::Int>((1LL << _54228_flt->_field_expbits)) - 1LL)))) << _54228_flt->_field_mantbits));
	if (_54278_neg) {
		_59613_bits|=static_cast<jule::Int>((static_cast<jule::Int>((1LL << _54228_flt->_field_mantbits)) << _54228_flt->_field_expbits));
	}
	if (((*_54228_flt) == _10d916690_F32_INFO)) {
		return std::make_tuple(static_cast<jule::F64>(static_cast<jule::F32>(_10dc3cbe0_f32_from_bits(static_cast<jule::U32>(_59613_bits)))),_58913_err);
	}
	return std::make_tuple(static_cast<jule::F64>(_10dc3cbe0_f64_from_bits(_59613_bits)),_58913_err);
}



inline std::tuple<jule::F32,jule::Int,jule::Int> _10cec8240_atof32(jule::Str _60718_s) {
	jule::Int _60752_err{0LLU};
	jule::Int _60740_n{jule::Int()};
	jule::F32 _60728_f{jule::F32()};
	{
		jule::F64 _60914_val{};
		jule::Int _60919__n{};
		jule::Bool _60923_ok{};
		std::tie(_60914_val,_60919__n,_60923_ok) = _10cec8240_special(_60718_s);
		if (_60923_ok) {
			_60728_f = static_cast<jule::F32>(_60914_val);
			_60740_n = _60919__n;
			_60752_err = 0LLU;
			return std::make_tuple(_60728_f,_60740_n,_60752_err);
		}
	}
	jule::U64 _61510_mantissa{};
	jule::Int _61520_exp{};
	jule::Bool _61525_neg{};
	jule::Bool _61530_trunc{};
	jule::Bool _61537_hex{};
	jule::Int _61542__n{};
	jule::Bool _61550_ok{};
	std::tie(_61510_mantissa,_61520_exp,_61525_neg,_61530_trunc,_61537_hex,_61542__n,_61550_ok) = _10cec8240_read_float(_60718_s);
	_60740_n=_61542__n;
	if ((!_61550_ok)) {
		_60728_f = 0LL;
		_60740_n = _60740_n;
		_60752_err = 2LLU;
		return std::make_tuple(_60728_f,_60740_n,_60752_err);
	}
	if (_61537_hex) {
		jule::F64 _62217_ff = 0e+00;
		std::tie(_62217_ff,_60752_err) = _10cec8240_atof_hex(_60718_s.slice(0LL,static_cast<jule::Int>(_60740_n)),(&_10d916690_F32_INFO),_61510_mantissa,_61520_exp,_61525_neg,_61530_trunc);
		_60728_f = static_cast<jule::F32>(_62217_ff);
		_60740_n = _60740_n;
		_60752_err = _60752_err;
		return std::make_tuple(_60728_f,_60740_n,_60752_err);
	}
	if (true) {
		if ((!_61530_trunc)) {
			std::tie(_60728_f,_61550_ok) = _10cec8240_atof32exact(_61510_mantissa,_61520_exp,_61525_neg);
			if (_61550_ok) {
				_60728_f = _60728_f;
				_60740_n = _60740_n;
				_60752_err = 0LLU;
				return std::make_tuple(_60728_f,_60740_n,_60752_err);
			}
		}
		std::tie(_60728_f,_61550_ok) = _10ce703a0_eisel_lemire32(_61510_mantissa,_61520_exp,_61525_neg);
		if (_61550_ok) {
			if ((!_61530_trunc)) {
				_60728_f = _60728_f;
				_60740_n = _60740_n;
				_60752_err = 0LLU;
				return std::make_tuple(_60728_f,_60740_n,_60752_err);
			}
			jule::F32 _64421_f_up = 0e+00;
			std::tie(_64421_f_up,_61550_ok) = _10ce703a0_eisel_lemire32((_61510_mantissa + 1LL),_61520_exp,_61525_neg);
			if ((_61550_ok && (_60728_f == _64421_f_up))) {
				_60728_f = _60728_f;
				_60740_n = _60740_n;
				_60752_err = 0LLU;
				return std::make_tuple(_60728_f,_60740_n,_60752_err);
			}
		}
	}
	_10ce72c20_Decimal _65313_d = _10ce72c20_Decimal();
	if ((!_65313_d._method_set(_60718_s.slice(0LL,static_cast<jule::Int>(_60740_n))))) {
		_60728_f = 0LL;
		_60740_n = _60740_n;
		_60752_err = 2LLU;
		return std::make_tuple(_60728_f,_60740_n,_60752_err);
	}
	jule::U64 _65710_b{};
	jule::Bool _65713_ovf{};
	std::tie(_65710_b,_65713_ovf) = _65313_d._method_float_bits((&_10d916690_F32_INFO));
	_60728_f=static_cast<jule::F32>(_10dc3cbe0_f32_from_bits(static_cast<jule::U32>(_65710_b)));
	if (_65713_ovf) {
		_60752_err=1LLU;
	}
	_60728_f = _60728_f;
	_60740_n = _60740_n;
	_60752_err = _60752_err;
	return std::make_tuple(_60728_f,_60740_n,_60752_err);
}



inline std::tuple<jule::F64,jule::Int,jule::Int> _10cec8240_atof64(jule::Str _66518_s) {
	jule::Int _66552_err{0LLU};
	jule::Int _66544_n{jule::Int()};
	jule::F64 _66532_f{jule::F64()};
	{
		jule::F64 _66714_val{};
		jule::Int _66719__n{};
		jule::Bool _66723_ok{};
		std::tie(_66714_val,_66719__n,_66723_ok) = _10cec8240_special(_66518_s);
		if (_66723_ok) {
			_66532_f = _66714_val;
			_66544_n = _66719__n;
			_66552_err = 0LLU;
			return std::make_tuple(_66532_f,_66544_n,_66552_err);
		}
	}
	jule::U64 _67310_mantissa{};
	jule::Int _67320_exp{};
	jule::Bool _67325_neg{};
	jule::Bool _67330_trunc{};
	jule::Bool _67337_hex{};
	jule::Int _67342__n{};
	jule::Bool _67350_ok{};
	std::tie(_67310_mantissa,_67320_exp,_67325_neg,_67330_trunc,_67337_hex,_67342__n,_67350_ok) = _10cec8240_read_float(_66518_s);
	_66544_n=_67342__n;
	if ((!_67350_ok)) {
		_66532_f = 0LL;
		_66544_n = _66544_n;
		_66552_err = 2LLU;
		return std::make_tuple(_66532_f,_66544_n,_66552_err);
	}
	if (_67337_hex) {
		std::tie(_66532_f,_66552_err) = _10cec8240_atof_hex(_66518_s.slice(0LL,static_cast<jule::Int>(_66544_n)),(&_10d916690_F64_INFO),_67310_mantissa,_67320_exp,_67325_neg,_67330_trunc);
		_66532_f = _66532_f;
		_66544_n = _66544_n;
		_66552_err = _66552_err;
		return std::make_tuple(_66532_f,_66544_n,_66552_err);
	}
	if (true) {
		if ((!_67330_trunc)) {
			std::tie(_66532_f,_67350_ok) = _10cec8240_atof64exact(_67310_mantissa,_67320_exp,_67325_neg);
			if (_67350_ok) {
				_66532_f = _66532_f;
				_66544_n = _66544_n;
				_66552_err = 0LLU;
				return std::make_tuple(_66532_f,_66544_n,_66552_err);
			}
		}
		std::tie(_66532_f,_67350_ok) = _10ce703a0_eisel_lemire64(_67310_mantissa,_67320_exp,_67325_neg);
		if (_67350_ok) {
			if ((!_67330_trunc)) {
				_66532_f = _66532_f;
				_66544_n = _66544_n;
				_66552_err = 0LLU;
				return std::make_tuple(_66532_f,_66544_n,_66552_err);
			}
			jule::F64 _70121_f_up = 0e+00;
			std::tie(_70121_f_up,_67350_ok) = _10ce703a0_eisel_lemire64((_67310_mantissa + 1LL),_67320_exp,_67325_neg);
			if ((_67350_ok && (_66532_f == _70121_f_up))) {
				_66532_f = _66532_f;
				_66544_n = _66544_n;
				_66552_err = 0LLU;
				return std::make_tuple(_66532_f,_66544_n,_66552_err);
			}
		}
	}
	_10ce72c20_Decimal _71013_d = _10ce72c20_Decimal();
	if ((!_71013_d._method_set(_66518_s.slice(0LL,static_cast<jule::Int>(_66544_n))))) {
		_66532_f = 0LL;
		_66544_n = _66544_n;
		_66552_err = 2LLU;
		return std::make_tuple(_66532_f,_66544_n,_66552_err);
	}
	jule::U64 _71410_b{};
	jule::Bool _71413_ovf{};
	std::tie(_71410_b,_71413_ovf) = _71013_d._method_float_bits((&_10d916690_F64_INFO));
	_66532_f=static_cast<jule::F64>(_10dc3cbe0_f64_from_bits(_71410_b));
	if (_71413_ovf) {
		_66552_err=1LLU;
	}
	_66532_f = _66532_f;
	_66544_n = _66544_n;
	_66552_err = _66552_err;
	return std::make_tuple(_66532_f,_66544_n,_66552_err);
}



inline std::tuple<jule::F64,jule::Int,jule::Int> _10cec8240_parse_float_prefix(jule::Str _72230_s,jule::Int _72238_bit_size) {
	if ((_72238_bit_size == 32LL)) {
		jule::F32 _72414_f{};
		jule::Int _72417_n{};
		jule::Int _72420_err{};
		std::tie(_72414_f,_72417_n,_72420_err) = _10cec8240_atof32(_72230_s);
		return std::make_tuple(static_cast<jule::F64>(_72414_f),_72417_n,_72420_err);
	}
	return _10cec8240_atof64(_72230_s);
}



inline std::tuple<jule::F64,jule::Int> _10cec8240_parse_float(jule::Str _75420_s,jule::Int _75428_bit_size) {
	jule::F64 _75510_f{};
	jule::Int _75513_n{};
	jule::Int _75516_err{};
	std::tie(_75510_f,_75513_n,_75516_err) = _10cec8240_parse_float_prefix(_75420_s,_75428_bit_size);
	if (((_75513_n != static_cast<jule::I64>(_75420_s.len())) && ((_75516_err == 0LLU) || (_75516_err != 2LLU)))) {
		return std::make_tuple(0LL,2LLU);
	}
	return std::make_tuple(_75510_f,_75516_err);
}



inline void _10ce72a70_ryu_ftoa_fixed32(_10d916690_DecimalSlice* _4932_d,jule::U32 _4954_mant,jule::Int _4965_exp,jule::Int _4975_prec) {
	if ((_4975_prec < 0LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with negative prec", 42));
	}
	if ((_4975_prec > 9LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with prec > 9", 37));
	}
	if ((_4954_mant == 0LL)) {
		std::tie(_4932_d->_field_nd,_4932_d->_field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::Int _6213_e2 = _4965_exp;
	jule::Int _639_b = static_cast<jule::Int>(_10e2c0220_len32(_4954_mant));
	if ((_639_b < 25LL)) {
		_4954_mant<<=static_cast<jule::Uint>(static_cast<jule::Int>((25LL - _639_b)));
		_6213_e2+=static_cast<jule::Int>((static_cast<jule::Int>(_639_b) - 25LL));
	}
	jule::Int _749_q = static_cast<jule::Int>((static_cast<jule::Int>((static_cast<jule::Int>((-static_cast<jule::Int>(_10ce72a70_mul_by_log2_log10((_6213_e2 + 24LL))))) + _4975_prec)) - 1LL));
	jule::Bool _7913_exact = ((_749_q <= 27LL) && (_749_q >= 0LL));
	jule::U32 _8114_di{};
	jule::Int _8118_dexp2{};
	jule::Bool _8129_d0{};
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _10ce72a70_mult64bit_pow10(_4954_mant,_6213_e2,_749_q);
	if ((_8118_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult64bit_pow10", 49));
	}
	if ((((_749_q < 0LL) && (_749_q >= -10LL)) && _10ce72a70_divisible_by_pow5(static_cast<jule::U64>(_4954_mant),static_cast<jule::Int>((-_749_q))))) {
		_7913_exact=true;
		_8129_d0=true;
	}
	jule::Uint _949_extra = static_cast<jule::Uint>(static_cast<jule::Int>((-_8118_dexp2)));
	jule::U32 _959_extra_mask = static_cast<jule::U32>(static_cast<jule::Int>((static_cast<jule::Int>((1LL << _949_extra)) - 1LL)));
	jule::U32 _9713_dfrac = 0LLU;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple((_8114_di >> _949_extra),(_8114_di & _959_extra_mask));
	jule::Bool _9913_round_up = false;
	if (_7913_exact) {
		_9913_round_up=(((_9713_dfrac > static_cast<jule::Int>((1LL << (_949_extra - 1LL)))) || ((_9713_dfrac == static_cast<jule::Int>((1LL << (_949_extra - 1LL)))) && (!_8129_d0))) || (((_9713_dfrac == static_cast<jule::Int>((1LL << (_949_extra - 1LL)))) && _8129_d0) && ((_8114_di & 1LL) == 1LL)));
	} else {
		_9913_round_up=((_9713_dfrac >> (_949_extra - 1LL)) == 1LL);
	}
	if ((_9713_dfrac != 0LL)) {
		_8129_d0=false;
	}
	_10ce72a70_format_decimal(_4932_d,static_cast<jule::U64>(_8114_di),(!_8129_d0),_9913_round_up,_4975_prec);
	_4932_d->_field_dp-=_749_q;
}



inline void _10ce72a70_ryu_ftoa_fixed64(_10d916690_DecimalSlice* _12332_d,jule::U64 _12354_mant,jule::Int _12365_exp,jule::Int _12375_prec) {
	if ((_12375_prec > 18LL)) {
		jule::panic(jule::Str("ryu_ftoa_fixed64 called with prec > 18", 38));
	}
	if ((_12354_mant == 0LL)) {
		std::tie(_12332_d->_field_nd,_12332_d->_field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::Int _13313_e2 = _12365_exp;
	jule::Int _1349_b = static_cast<jule::Int>(_10e2c0220_len64(_12354_mant));
	if ((_1349_b < 55LL)) {
		_12354_mant=(_12354_mant << static_cast<jule::Uint>(static_cast<jule::Int>((55LL - _1349_b))));
		_13313_e2+=static_cast<jule::Int>((static_cast<jule::Int>(_1349_b) - 55LL));
	}
	jule::Int _1489_q = static_cast<jule::Int>((static_cast<jule::Int>((static_cast<jule::Int>((-static_cast<jule::Int>(_10ce72a70_mul_by_log2_log10((_13313_e2 + 54LL))))) + _12375_prec)) - 1LL));
	jule::Bool _15313_exact = ((_1489_q <= 55LL) && (_1489_q >= 0LL));
	jule::U64 _15514_di{};
	jule::Int _15518_dexp2{};
	jule::Bool _15529_d0{};
	std::tie(_15514_di,_15518_dexp2,_15529_d0) = _10ce72a70_mult128bit_pow10(_12354_mant,_13313_e2,_1489_q);
	if ((_15518_dexp2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50));
	}
	if ((((_1489_q < 0LL) && (_1489_q >= -22LL)) && _10ce72a70_divisible_by_pow5(_12354_mant,static_cast<jule::Int>((-_1489_q))))) {
		_15313_exact=true;
		_15529_d0=true;
	}
	jule::Uint _1689_extra = static_cast<jule::Uint>(static_cast<jule::Int>((-_15518_dexp2)));
	jule::U64 _1699_extra_mask = static_cast<jule::U64>(static_cast<jule::Int>((static_cast<jule::Int>((1LL << _1689_extra)) - 1LL)));
	jule::U64 _17113_dfrac = 0LLU;
	std::tie(_15514_di,_17113_dfrac) = std::make_tuple((_15514_di >> _1689_extra),(_15514_di & _1699_extra_mask));
	jule::Bool _17313_round_up = false;
	if (_15313_exact) {
		_17313_round_up=(((_17113_dfrac > static_cast<jule::Int>((1LL << (_1689_extra - 1LL)))) || ((_17113_dfrac == static_cast<jule::Int>((1LL << (_1689_extra - 1LL)))) && (!_15529_d0))) || (((_17113_dfrac == static_cast<jule::Int>((1LL << (_1689_extra - 1LL)))) && _15529_d0) && ((_15514_di & 1LL) == 1LL)));
	} else {
		_17313_round_up=((_17113_dfrac >> (_1689_extra - 1LL)) == 1LL);
	}
	if ((_17113_dfrac != 0LL)) {
		_15529_d0=false;
	}
	_10ce72a70_format_decimal(_12332_d,_15514_di,(!_15529_d0),_17313_round_up,_12375_prec);
	_12332_d->_field_dp-=_1489_q;
}



inline void _10ce72a70_format_decimal(_10d916690_DecimalSlice* _20430_d,jule::U64 _20452_m,jule::Bool _20464_trunc,jule::Bool _20481_round_up,jule::Int _20497_prec) {
	jule::U64 _2059_max = _10ce72a70_U64_POW10[static_cast<jule::Int>(_20497_prec)];
	jule::Int _20613_trimmed = 0LL;
	_iter_begin_4561435680:;
	if (!((_20452_m >= _2059_max))) { goto _iter_end_4561435680; }
	{
		jule::U64 _20814_a = jule::div(_20452_m,10LL);
		jule::U64 _20817_b = (_20452_m % 10LL);
		std::tie(_20814_a,_20817_b) = std::make_tuple(jule::div(_20452_m,10LL),(_20452_m % 10LL));
		_20452_m=_20814_a;
		(_20613_trimmed)++;
		if ((_20817_b > 5LL)) {
			_20481_round_up=true;
		} else if ((_20817_b < 5LL)) {
			_20481_round_up=false;
		} else {
			_20481_round_up=(_20464_trunc || ((_20452_m & 1LL) == 1LL));
		}
		if ((_20817_b != 0LL)) {
			_20464_trunc=true;
		}
	}
	_iter_next_4561435680:;
	goto _iter_begin_4561435680;
	_iter_end_4561435680:;
	if (_20481_round_up) {
		(_20452_m)++;
	}
	if ((_20452_m >= _2059_max)) {
		_20452_m/=10LL;
		(_20613_trimmed)++;
	}
	jule::Uint _23313_n = static_cast<jule::Uint>(_20497_prec);
	_20430_d->_field_nd=static_cast<jule::Int>(_20497_prec);
	jule::U64 _23513_v = _20452_m;
	_iter_begin_4561449712:;
	if (!((_23513_v >= 100LL))) { goto _iter_end_4561449712; }
	{
		jule::U64 _23717_v1 = 0LLU;
		jule::U64 _23817_v2 = 0LLU;
		if (((_23513_v >> 32LL) == 0LL)) {
			std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>(static_cast<jule::U32>(jule::div(static_cast<jule::U32>(_23513_v),100LL))),static_cast<jule::U64>(static_cast<jule::U32>((static_cast<jule::U32>(_23513_v) % 100LL))));
		} else {
			std::tie(_23717_v1,_23817_v2) = std::make_tuple(jule::div(_23513_v,100LL),(_23513_v % 100LL));
		}
		_23313_n-=2LL;
		_20430_d->_field_d[static_cast<jule::Int>((_23313_n + 1LL))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(static_cast<jule::U64>((static_cast<jule::U64>((2LL * _23817_v2)) + 1LL)))]);
		_20430_d->_field_d[static_cast<jule::Int>((_23313_n + 0LL))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(static_cast<jule::U64>((static_cast<jule::U64>((2LL * _23817_v2)) + 0LL)))]);
		_23513_v=_23717_v1;
	}
	_iter_next_4561449712:;
	goto _iter_begin_4561449712;
	_iter_end_4561449712:;
	if ((_23513_v > 0LL)) {
		(_23313_n)--;
		_20430_d->_field_d[static_cast<jule::Int>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(static_cast<jule::U64>((static_cast<jule::U64>((2LL * _23513_v)) + 1LL)))]);
	}
	if ((_23513_v >= 10LL)) {
		(_23313_n)--;
		_20430_d->_field_d[static_cast<jule::Int>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(static_cast<jule::U64>((2LL * _23513_v)))]);
	}
	_iter_begin_4561477184:;
	if (!((_20430_d->_field_d[static_cast<jule::Int>((_20430_d->_field_nd - 1LL))] == '0'))) { goto _iter_end_4561477184; }
	{
		(_20430_d->_field_nd)--;
		(_20613_trimmed)++;
	}
	_iter_next_4561477184:;
	goto _iter_begin_4561477184;
	_iter_end_4561477184:;
	_20430_d->_field_dp=(_20430_d->_field_nd + _20613_trimmed);
}



inline void _10ce72a70_ryu_ftoa_shortest(_10d916690_DecimalSlice* _26533_d,jule::U64 _26555_mant,jule::Int _26566_exp,_10d916690_FloatInfo* _26576_flt) {
	if ((_26555_mant == 0LL)) {
		std::tie(_26533_d->_field_nd,_26533_d->_field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	if (((_26566_exp <= 0LL) && (static_cast<jule::Int>(_10e2c0220_trailing_zeros64(_26555_mant)) >= static_cast<jule::Int>((-_26566_exp))))) {
		_26555_mant>>=static_cast<jule::Uint>(static_cast<jule::Int>((-_26566_exp)));
		_10ce72a70_ryu_digits(_26533_d,_26555_mant,_26555_mant,_26555_mant,true,false);
		return;
	}
	jule::U64 _27710_ml{};
	jule::U64 _27714_mc{};
	jule::U64 _27718_mu{};
	jule::Int _27726_e2{};
	std::tie(_27710_ml,_27714_mc,_27718_mu,_27726_e2) = _10ce72a70_compute_bounds(_26555_mant,_26566_exp,_26576_flt);
	if ((_27726_e2 == 0LL)) {
		_10ce72a70_ryu_digits(_26533_d,_27710_ml,_27714_mc,_27718_mu,true,false);
		return;
	}
	jule::Int _2839_q = static_cast<jule::Int>((static_cast<jule::Int>(_10ce72a70_mul_by_log2_log10(static_cast<jule::Int>((-_27726_e2)))) + 1LL));
	jule::U64 _28713_dl = 0LLU;
	jule::U64 _28813_dc = 0LLU;
	jule::U64 _28913_du = 0LLU;
	jule::Bool _29013_dl0 = false;
	jule::Bool _29113_dc0 = false;
	jule::Bool _29213_du0 = false;
	if (((*_26576_flt) == _10d916690_F32_INFO)) {
		jule::U32 _29417_dl32 = 0LLU;
		jule::U32 _29517_dc32 = 0LLU;
		jule::U32 _29617_du32 = 0LLU;
		std::tie(_29417_dl32,std::ignore,_29013_dl0) = _10ce72a70_mult64bit_pow10(static_cast<jule::U32>(_27710_ml),_27726_e2,_2839_q);
		std::tie(_29517_dc32,std::ignore,_29113_dc0) = _10ce72a70_mult64bit_pow10(static_cast<jule::U32>(_27714_mc),_27726_e2,_2839_q);
		std::tie(_29617_du32,_27726_e2,_29213_du0) = _10ce72a70_mult64bit_pow10(static_cast<jule::U32>(_27718_mu),_27726_e2,_2839_q);
		std::tie(_28713_dl,_28813_dc,_28913_du) = std::make_tuple(static_cast<jule::U64>(_29417_dl32),static_cast<jule::U64>(_29517_dc32),static_cast<jule::U64>(_29617_du32));
	} else {
		std::tie(_28713_dl,std::ignore,_29013_dl0) = _10ce72a70_mult128bit_pow10(_27710_ml,_27726_e2,_2839_q);
		std::tie(_28813_dc,std::ignore,_29113_dc0) = _10ce72a70_mult128bit_pow10(_27714_mc,_27726_e2,_2839_q);
		std::tie(_28913_du,_27726_e2,_29213_du0) = _10ce72a70_mult128bit_pow10(_27718_mu,_27726_e2,_2839_q);
	}
	if ((_27726_e2 >= 0LL)) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50));
	}
	if ((_2839_q > 55LL)) {
		std::tie(_29013_dl0,_29113_dc0,_29213_du0) = std::make_tuple(false,false,false);
	}
	if (((_2839_q < 0LL) && (_2839_q >= -24LL))) {
		if (_10ce72a70_divisible_by_pow5(_27710_ml,static_cast<jule::Int>((-_2839_q)))) {
			_29013_dl0=true;
		}
		if (_10ce72a70_divisible_by_pow5(_27714_mc,static_cast<jule::Int>((-_2839_q)))) {
			_29113_dc0=true;
		}
		if (_10ce72a70_divisible_by_pow5(_27718_mu,static_cast<jule::Int>((-_2839_q)))) {
			_29213_du0=true;
		}
	}
	jule::Uint _3299_extra = static_cast<jule::Uint>(static_cast<jule::Int>((-_27726_e2)));
	jule::U64 _3309_extra_mask = static_cast<jule::U64>(static_cast<jule::Int>((static_cast<jule::Int>((1LL << _3299_extra)) - 1LL)));
	jule::U64 _33213_fracl = 0LLU;
	std::tie(_28713_dl,_33213_fracl) = std::make_tuple((_28713_dl >> _3299_extra),(_28713_dl & _3309_extra_mask));
	jule::U64 _33413_fracc = 0LLU;
	std::tie(_28813_dc,_33413_fracc) = std::make_tuple((_28813_dc >> _3299_extra),(_28813_dc & _3309_extra_mask));
	jule::U64 _33613_fracu = 0LLU;
	std::tie(_28913_du,_33613_fracu) = std::make_tuple((_28913_du >> _3299_extra),(_28913_du & _3309_extra_mask));
	jule::Bool _34213_uok = ((!_29213_du0) || (_33613_fracu > 0LL));
	if ((_29213_du0 && (_33613_fracu == 0LL))) {
		_34213_uok=((_26555_mant & 1LL) == 0LL);
	}
	if ((!_34213_uok)) {
		(_28913_du)--;
	}
	jule::Bool _35113_cup = false;
	if (_29113_dc0) {
		_35113_cup=((_33413_fracc > static_cast<jule::Int>((1LL << (_3299_extra - 1LL)))) || ((_33413_fracc == static_cast<jule::Int>((1LL << (_3299_extra - 1LL)))) && ((_28813_dc & 1LL) == 1LL)));
	} else {
		_35113_cup=((_33413_fracc >> (_3299_extra - 1LL)) == 1LL);
	}
	jule::Bool _3679_lok = ((_29013_dl0 && (_33213_fracl == 0LL)) && ((_26555_mant & 1LL) == 0LL));
	if ((!_3679_lok)) {
		(_28713_dl)++;
	}
	jule::Bool _3729_c0 = (_29113_dc0 && (_33413_fracc == 0LL));
	_10ce72a70_ryu_digits(_26533_d,_28713_dl,_28813_dc,_28913_du,_3729_c0,_35113_cup);
	_26533_d->_field_dp-=_2839_q;
}



inline jule::Int _10ce72a70_mul_by_log2_log10(jule::Int _38322_x) {
	return ((_38322_x * 78913LL) >> 18LL);
}



inline jule::Int _10ce72a70_mul_by_log10_log2(jule::Int _39322_x) {
	return ((_39322_x * 108853LL) >> 15LL);
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::Int> _10ce72a70_compute_bounds(jule::U64 _40126_mant,jule::Int _40137_exp,_10d916690_FloatInfo* _40225_flt) {
	jule::Int _40282_e2{jule::Int()};
	jule::U64 _40270_upper{jule::U64()};
	jule::U64 _40256_central{jule::U64()};
	jule::U64 _40244_lower{jule::U64()};
	if (((_40126_mant != static_cast<jule::Int>((1LL << _40225_flt->_field_mantbits))) || (_40137_exp == ((_40225_flt->_field_bias + 1LL) - static_cast<jule::Int>(_40225_flt->_field_mantbits))))) {
		std::tie(_40244_lower,_40256_central,_40270_upper) = std::make_tuple(static_cast<jule::U64>((static_cast<jule::U64>((2LL * _40126_mant)) - 1LL)),static_cast<jule::U64>((2LL * _40126_mant)),static_cast<jule::U64>((static_cast<jule::U64>((2LL * _40126_mant)) + 1LL)));
		_40282_e2=(_40137_exp - 1LL);
	} else {
		std::tie(_40244_lower,_40256_central,_40270_upper) = std::make_tuple(static_cast<jule::U64>((static_cast<jule::U64>((4LL * _40126_mant)) - 1LL)),static_cast<jule::U64>((4LL * _40126_mant)),static_cast<jule::U64>((static_cast<jule::U64>((4LL * _40126_mant)) + 2LL)));
		_40282_e2=(_40137_exp - 2LL);
	}
	return std::make_tuple(_40244_lower,_40256_central,_40270_upper,_40282_e2);
}



inline void _10ce72a70_ryu_digits(_10d916690_DecimalSlice* _41526_d,jule::U64 _41544_lower,jule::U64 _41556_central,jule::U64 _41570_upper,jule::Bool _41586_c0,jule::Bool _415100_cup) {
	jule::U32 _41614_lhi{};
	jule::U32 _41619_llo{};
	std::tie(_41614_lhi,_41619_llo) = _10ce72a70_divmod1e9(_41544_lower);
	jule::U32 _41710_chi{};
	jule::U32 _41715_clo{};
	std::tie(_41710_chi,_41715_clo) = _10ce72a70_divmod1e9(_41556_central);
	jule::U32 _41810_uhi{};
	jule::U32 _41815_ulo{};
	std::tie(_41810_uhi,_41815_ulo) = _10ce72a70_divmod1e9(_41570_upper);
	if ((_41810_uhi == 0LL)) {
		_10ce72a70_ryu_digits32(_41526_d,_41619_llo,_41715_clo,_41815_ulo,_41586_c0,_415100_cup,8LL);
	} else if ((_41614_lhi < _41810_uhi)) {
		if ((_41619_llo != 0LL)) {
			(_41614_lhi)++;
		}
		_41586_c0=(_41586_c0 && (_41715_clo == 0LL));
		_415100_cup=((_41715_clo > 5e+08) || ((_41715_clo == 5e+08) && _415100_cup));
		_10ce72a70_ryu_digits32(_41526_d,_41614_lhi,_41710_chi,_41810_uhi,_41586_c0,_415100_cup,8LL);
		_41526_d->_field_dp+=9LL;
	} else {
		_41526_d->_field_nd=0LL;
		jule::Uint _43417_n = static_cast<jule::Uint>(9LLU);
		jule::U32 _43517_v = _41710_chi;
		_iter_begin_4561606640:;
		if (!((_43517_v > 0LL))) { goto _iter_end_4561606640; }
		{
			jule::U32 _43718_v1 = jule::div(_43517_v,10LL);
			jule::U32 _43722_v2 = (_43517_v % 10LL);
			std::tie(_43718_v1,_43722_v2) = std::make_tuple(jule::div(_43517_v,10LL),(_43517_v % 10LL));
			_43517_v=_43718_v1;
			(_43417_n)--;
			_41526_d->_field_d[static_cast<jule::Int>(_43417_n)]=static_cast<jule::U8>((_43722_v2 + '0'));
		}
		_iter_next_4561606640:;
		goto _iter_begin_4561606640;
		_iter_end_4561606640:;
		_41526_d->_field_d=_41526_d->_field_d.slice(static_cast<jule::Int>(_43417_n));
		_41526_d->_field_nd=static_cast<jule::Int>(static_cast<jule::Uint>((9LL - _43417_n)));
		_10ce72a70_ryu_digits32(_41526_d,_41619_llo,_41715_clo,_41815_ulo,_41586_c0,_415100_cup,(_41526_d->_field_nd + 8LL));
	}
	_iter_begin_4561615808:;
	if (!(((_41526_d->_field_nd > 0LL) && (_41526_d->_field_d[static_cast<jule::Int>((_41526_d->_field_nd - 1LL))] == '0')))) { goto _iter_end_4561615808; }
	{
		(_41526_d->_field_nd)--;
	}
	_iter_next_4561615808:;
	goto _iter_begin_4561615808;
	_iter_end_4561615808:;
	_iter_begin_4561619328:;
	if (!(((_41526_d->_field_nd > 0LL) && (_41526_d->_field_d[static_cast<jule::Int>(0LL)] == '0')))) { goto _iter_end_4561619328; }
	{
		(_41526_d->_field_nd)--;
		(_41526_d->_field_dp)--;
		_41526_d->_field_d=_41526_d->_field_d.slice(static_cast<jule::Int>(1LL));
	}
	_iter_next_4561619328:;
	goto _iter_begin_4561619328;
	_iter_end_4561619328:;
}



inline void _10ce72a70_ryu_digits32(_10d916690_DecimalSlice* _46028_d,jule::U32 _46050_lower,jule::U32 _46066_central,jule::U32 _46125_upper,jule::Bool _46141_c0,jule::Bool _46155_cup,jule::Int _46170_endindex) {
	if ((_46125_upper == 0LL)) {
		_46028_d->_field_dp=(_46170_endindex + 1LL);
		return;
	}
	jule::Int _46613_trimmed = 0LL;
	jule::Int _46913_c_next_digit = 0LL;
	_iter_begin_4561633984:;
	if (!((_46125_upper > 0LL))) { goto _iter_end_4561633984; }
	{
		jule::U32 _47613_l = jule::div((_46050_lower + 9LL),10LL);
		jule::U32 _47718_c = jule::div(_46066_central,10LL);
		jule::U32 _47725_cdigit = (_46066_central % 10LL);
		std::tie(_47718_c,_47725_cdigit) = std::make_tuple(jule::div(_46066_central,10LL),(_46066_central % 10LL));
		jule::U32 _47813_u = jule::div(_46125_upper,10LL);
		if ((_47613_l > _47813_u)) {
			goto _iter_end_4561633984;
		}
		if (((_47613_l == (_47718_c + 1LL)) && (_47718_c < _47813_u))) {
			(_47718_c)++;
			_47725_cdigit=0LL;
			_46155_cup=false;
		}
		(_46613_trimmed)++;
		_46141_c0=(_46141_c0 && (_46913_c_next_digit == 0LL));
		_46913_c_next_digit=static_cast<jule::Int>(_47725_cdigit);
		std::tie(_46050_lower,_46066_central,_46125_upper) = std::make_tuple(_47613_l,_47718_c,_47813_u);
	}
	_iter_next_4561633984:;
	goto _iter_begin_4561633984;
	_iter_end_4561633984:;
	if ((_46613_trimmed > 0LL)) {
		_46155_cup=(((_46913_c_next_digit > 5LL) || ((_46913_c_next_digit == 5LL) && (!_46141_c0))) || (((_46913_c_next_digit == 5LL) && _46141_c0) && ((_46066_central & 1LL) == 1LL)));
	}
	if (((_46066_central < _46125_upper) && _46155_cup)) {
		(_46066_central)++;
	}
	_46170_endindex-=_46613_trimmed;
	jule::U32 _51713_v = _46066_central;
	jule::Int _51813_n = _46170_endindex;
	_iter_begin_4561634480:;
	if (!((_51813_n > _46028_d->_field_nd))) { goto _iter_end_4561634480; }
	{
		jule::U32 _52014_v1 = jule::div(_51713_v,100LL);
		jule::U32 _52018_v2 = (_51713_v % 100LL);
		std::tie(_52014_v1,_52018_v2) = std::make_tuple(jule::div(_51713_v,100LL),(_51713_v % 100LL));
		_46028_d->_field_d[static_cast<jule::Int>(_51813_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(static_cast<jule::U32>((static_cast<jule::U32>((2LL * _52018_v2)) + 1LL)))]);
		_46028_d->_field_d[static_cast<jule::Int>((_51813_n - 1LL))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(static_cast<jule::U32>((static_cast<jule::U32>((2LL * _52018_v2)) + 0LL)))]);
		_51813_n-=2LL;
		_51713_v=_52014_v1;
	}
	_iter_next_4561634480:;
	goto _iter_begin_4561634480;
	_iter_end_4561634480:;
	if ((_51813_n == _46028_d->_field_nd)) {
		_46028_d->_field_d[static_cast<jule::Int>(_51813_n)]=static_cast<jule::U8>((_51713_v + '0'));
	}
	_46028_d->_field_nd=(_46170_endindex + 1LL);
	_46028_d->_field_dp=(_46028_d->_field_nd + _46613_trimmed);
}



inline std::tuple<jule::U32,jule::Int,jule::Bool> _10ce72a70_mult64bit_pow10(jule::U32 _54220_m,jule::Int _54232_e2,jule::Int _54241_q) {
	jule::Bool _54273_exact{jule::Bool()};
	jule::Int _54262_resE{jule::Int()};
	jule::U32 _54251_resM{jule::U32()};
	if ((_54241_q == 0LL)) {
		_54251_resM = (_54220_m << 6LL);
		_54262_resE = (_54232_e2 - 6LL);
		_54273_exact = true;
		return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
	}
	if (((_54241_q < -348LL) || (347LL < _54241_q))) {
		jule::panic(jule::Str("mult64bit_pow10: power of 10 is out of range", 44));
	}
	jule::U64 _55113_pow = _10ce703a0_DETAILED_POWS_OF_TEN[static_cast<jule::Int>((_54241_q - -348LL))][static_cast<jule::Int>(1LL)];
	if ((_54241_q < 0LL)) {
		_55113_pow+=1LL;
	}
	jule::U64 _55610_hi{};
	jule::U64 _55614_lo{};
	std::tie(_55610_hi,_55614_lo) = _10e2c0220_mul64(static_cast<jule::U64>(_54220_m),_55113_pow);
	_54232_e2+=static_cast<jule::Int>((static_cast<jule::Int>((static_cast<jule::Int>(_10ce72a70_mul_by_log10_log2(_54241_q)) - 63LL)) + 57LL));
	_54251_resM = static_cast<jule::U32>(((_55610_hi << 7LL) | (_55614_lo >> 57LL)));
	_54262_resE = _54232_e2;
	_54273_exact = ((_55614_lo << 7LL) == 0LL);
	return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
}



inline std::tuple<jule::U64,jule::Int,jule::Bool> _10ce72a70_mult128bit_pow10(jule::U64 _57021_m,jule::Int _57033_e2,jule::Int _57042_q) {
	jule::Bool _57074_exact{jule::Bool()};
	jule::Int _57063_resE{jule::Int()};
	jule::U64 _57052_resM{jule::U64()};
	if ((_57042_q == 0LL)) {
		_57052_resM = (_57021_m << 8LL);
		_57063_resE = (_57033_e2 - 8LL);
		_57074_exact = true;
		return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
	}
	if (((_57042_q < -348LL) || (347LL < _57042_q))) {
		jule::panic(jule::Str("mult128bit_pow10: power of 10 is out of range", 45));
	}
	jule::Array<jule::U64,2> _57913_pow = _10ce703a0_DETAILED_POWS_OF_TEN[static_cast<jule::Int>((_57042_q - -348LL))];
	if ((_57042_q < 0LL)) {
		_57913_pow[static_cast<jule::Int>(0LL)]+=1LL;
	}
	_57033_e2+=static_cast<jule::Int>((static_cast<jule::Int>((static_cast<jule::Int>(_10ce72a70_mul_by_log10_log2(_57042_q)) - 127LL)) + 119LL));
	jule::U64 _58710_l1{};
	jule::U64 _58714_l0{};
	std::tie(_58710_l1,_58714_l0) = _10e2c0220_mul64(_57021_m,_57913_pow[static_cast<jule::Int>(0LL)]);
	jule::U64 _58814_h1{};
	jule::U64 _58818_h0{};
	std::tie(_58814_h1,_58818_h0) = _10e2c0220_mul64(_57021_m,_57913_pow[static_cast<jule::Int>(1LL)]);
	jule::U64 _58910_mid{};
	jule::U64 _58915_carry{};
	std::tie(_58910_mid,_58915_carry) = _10e2c0220_add64(_58710_l1,_58818_h0,0LLU);
	_58814_h1+=_58915_carry;
	_57052_resM = ((_58814_h1 << 9LL) | (_58910_mid >> 55LL));
	_57063_resE = _57033_e2;
	_57074_exact = (((_58910_mid << 9LL) == 0LL) && (_58714_l0 == 0LL));
	return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
}



inline jule::Bool _10ce72a70_divisible_by_pow5(jule::U64 _59426_m,jule::Int _59434_k) {
	if ((_59426_m == 0LL)) {
		return true;
	}
	jule::Int _59813_i = 0LL;
	_iter_begin_4561724736:;
	if (!((_59813_i < _59434_k))) { goto _iter_end_4561724736; }
	{
		if (((_59426_m % 5LL) != 0LL)) {
			return false;
		}
		_59426_m/=5LL;
	}
	_iter_next_4561724736:;
	(_59813_i)++;
	goto _iter_begin_4561724736;
	_iter_end_4561724736:;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _10ce72a70_divmod1e9(jule::U64 _61014_x) {
	if (true) {
		return std::make_tuple(static_cast<jule::U32>(jule::div(_61014_x,1e+09)),static_cast<jule::U32>((_61014_x % 1000000000LL)));
	}
	jule::U64 _61510_hi{};
	std::tie(_61510_hi,std::ignore) = _10e2c0220_mul64((_61014_x >> 1LL),9903520314283042200LLU);
	jule::U64 _6169_q = (_61510_hi >> 28LL);
	return std::make_tuple(static_cast<jule::U32>(_6169_q),static_cast<jule::U32>((_61014_x - (_6169_q * 1e+09))));
}



inline void _10ce72c20_trim(_10ce72c20_Decimal* _27520_a) {
	_iter_begin_4561742400:;
	if (!(((_27520_a->_field_nd > 0LL) && (_27520_a->_field_d[static_cast<jule::Int>((_27520_a->_field_nd - 1LL))] == '0')))) { goto _iter_end_4561742400; }
	{
		(_27520_a->_field_nd)--;
	}
	_iter_next_4561742400:;
	goto _iter_begin_4561742400;
	_iter_end_4561742400:;
	if ((_27520_a->_field_nd == 0LL)) {
		_27520_a->_field_dp=0LL;
	}
}



inline void _10ce72c20_right_shift(_10ce72c20_Decimal* _28527_a,jule::Uint _28540_k) {
	jule::Int _28613_r = 0LL;
	jule::Int _28713_w = 0LL;
	jule::Uint _29013_n = 0LLU;
	_iter_begin_4561746816:;
	if (!(((_29013_n >> _28540_k) == 0LL))) { goto _iter_end_4561746816; }
	{
		if ((_28613_r >= _28527_a->_field_nd)) {
			if ((_29013_n == 0LL)) {
				_28527_a->_field_nd=0LL;
				return;
			}
			_iter_begin_4561756640:;
			if (!(((_29013_n >> _28540_k) == 0LL))) { goto _iter_end_4561756640; }
			{
				_29013_n=(_29013_n * 10LL);
				(_28613_r)++;
			}
			_iter_next_4561756640:;
			goto _iter_begin_4561756640;
			_iter_end_4561756640:;
			goto _iter_end_4561746816;
		}
		jule::Uint _30413_c = static_cast<jule::Uint>(_28527_a->_field_d[static_cast<jule::Int>(_28613_r)]);
		_29013_n=(((_29013_n * 10LL) + _30413_c) - '0');
	}
	_iter_next_4561746816:;
	(_28613_r)++;
	goto _iter_begin_4561746816;
	_iter_end_4561746816:;
	_28527_a->_field_dp-=(_28613_r - 1LL);
	jule::Uint _3099_mask = static_cast<jule::Uint>((static_cast<jule::Uint>(static_cast<jule::Int>((1LL << _28540_k))) - 1LL));
	_iter_begin_4561763104:;
	if (!((_28613_r < _28527_a->_field_nd))) { goto _iter_end_4561763104; }
	{
		jule::Uint _31313_c = static_cast<jule::Uint>(_28527_a->_field_d[static_cast<jule::Int>(_28613_r)]);
		jule::Uint _31413_dig = (_29013_n >> _28540_k);
		_29013_n&=_3099_mask;
		_28527_a->_field_d[static_cast<jule::Int>(_28713_w)]=static_cast<jule::U8>((_31413_dig + '0'));
		(_28713_w)++;
		_29013_n=(((_29013_n * 10LL) + _31313_c) - '0');
	}
	_iter_next_4561763104:;
	(_28613_r)++;
	goto _iter_begin_4561763104;
	_iter_end_4561763104:;
	_iter_begin_4561751952:;
	if (!((_29013_n > 0LL))) { goto _iter_end_4561751952; }
	{
		jule::Uint _32313_dig = (_29013_n >> _28540_k);
		_29013_n&=_3099_mask;
		if ((_28713_w < 800LL)) {
			_28527_a->_field_d[static_cast<jule::Int>(_28713_w)]=static_cast<jule::U8>((_32313_dig + '0'));
			(_28713_w)++;
		} else if ((_32313_dig > 0LL)) {
			_28527_a->_field_trunc=true;
		}
		_29013_n=(_29013_n * 10LL);
	}
	_iter_next_4561751952:;
	goto _iter_begin_4561751952;
	_iter_end_4561751952:;
	_28527_a->_field_nd=_28713_w;
	_10ce72c20_trim(_28527_a);
}



inline jule::Bool _10ce72c20_prefix_is_less_than(jule::Slice<jule::U8> _33924_b,jule::Str _33935_s) {
	jule::Int _34013_i = 0LL;
	_iter_begin_4561783056:;
	if (!((_34013_i < static_cast<jule::I64>(_33935_s.len())))) { goto _iter_end_4561783056; }
	{
		if ((_34013_i >= static_cast<jule::I64>(_33924_b.len()))) {
			return true;
		}
		if ((_33924_b[static_cast<jule::Int>(_34013_i)] != _33935_s[static_cast<jule::Int>(_34013_i)])) {
			return (_33924_b[static_cast<jule::Int>(_34013_i)] < _33935_s[static_cast<jule::Int>(_34013_i)]);
		}
	}
	_iter_next_4561783056:;
	(_34013_i)++;
	goto _iter_begin_4561783056;
	_iter_end_4561783056:;
	return false;
}



inline void _10ce72c20_left_shift(_10ce72c20_Decimal* _35326_a,jule::Uint _35339_k) {
	jule::Int _35413_delta = _10ce72c20_LEFTCHEATS[static_cast<jule::Int>(_35339_k)]._field_delta;
	if (_10ce72c20_prefix_is_less_than(_35326_a->_field_d.slice(static_cast<jule::Int>(0LL),static_cast<jule::Int>(_35326_a->_field_nd)),_10ce72c20_LEFTCHEATS[static_cast<jule::Int>(_35339_k)]._field_cutoff)) {
		(_35413_delta)--;
	}
	jule::Int _35913_r = _35326_a->_field_nd;
	jule::Int _36013_w = (_35326_a->_field_nd + _35413_delta);
	jule::Uint _36313_n = 0LLU;
	(_35913_r)--;
	_iter_begin_4561802912:;
	if (!((_35913_r >= 0LL))) { goto _iter_end_4561802912; }
	{
		_36313_n+=static_cast<jule::Uint>((static_cast<jule::Uint>((static_cast<jule::Uint>(_35326_a->_field_d[static_cast<jule::Int>(_35913_r)]) - '0')) << _35339_k));
		jule::Uint _36713_quo = jule::div(_36313_n,10LL);
		jule::Uint _36813_rem = (_36313_n - static_cast<jule::Uint>((10LL * _36713_quo)));
		(_36013_w)--;
		if ((_36013_w < 800LL)) {
			_35326_a->_field_d[static_cast<jule::Int>(_36013_w)]=static_cast<jule::U8>((_36813_rem + '0'));
		} else if ((_36813_rem != 0LL)) {
			_35326_a->_field_trunc=true;
		}
		_36313_n=_36713_quo;
	}
	_iter_next_4561802912:;
	(_35913_r)--;
	goto _iter_begin_4561802912;
	_iter_end_4561802912:;
	_iter_begin_4561802992:;
	if (!((_36313_n > 0LL))) { goto _iter_end_4561802992; }
	{
		jule::Uint _38013_quo = jule::div(_36313_n,10LL);
		jule::Uint _38113_rem = (_36313_n - static_cast<jule::Uint>((10LL * _38013_quo)));
		(_36013_w)--;
		if ((_36013_w < 800LL)) {
			_35326_a->_field_d[static_cast<jule::Int>(_36013_w)]=static_cast<jule::U8>((_38113_rem + '0'));
		} else if ((_38113_rem != 0LL)) {
			_35326_a->_field_trunc=true;
		}
		_36313_n=_38013_quo;
	}
	_iter_next_4561802992:;
	goto _iter_begin_4561802992;
	_iter_end_4561802992:;
	_35326_a->_field_nd+=_35413_delta;
	if ((_35326_a->_field_nd >= 800LL)) {
		_35326_a->_field_nd=800LL;
	}
	_35326_a->_field_dp+=_35413_delta;
	_10ce72c20_trim(_35326_a);
}



inline jule::Bool _10ce72c20_should_round_up(_10ce72c20_Decimal* _40027_a,jule::Int _40040_nd) {
	if (((_40040_nd < 0LL) || (_40040_nd >= _40027_a->_field_nd))) {
		return false;
	}
	if (((_40027_a->_field_d[static_cast<jule::Int>(_40040_nd)] == '5') && ((_40040_nd + 1LL) == _40027_a->_field_nd))) {
		if (_40027_a->_field_trunc) {
			return true;
		}
		return ((_40040_nd > 0LL) && (((_40027_a->_field_d[static_cast<jule::Int>((_40040_nd - 1LL))] - '0') % 2LL) != 0LL));
	}
	return (_40027_a->_field_d[static_cast<jule::Int>(_40040_nd)] >= '5');
}



inline jule::Str _10daf8c40_fmt_uint(jule::U64 _6217_i,jule::Int _6225_base) {
	if (((true && (_6217_i < 100LL)) && (_6225_base == 10LL))) {
		return _10daf8c40_small(static_cast<jule::Int>(_6217_i));
	}
	jule::Str _6613_s{};
	std::tie(std::ignore,_6613_s) = _10daf8c40_fmt_bits(nullptr,_6217_i,_6225_base,false,false);
	return _6613_s;
}



inline jule::Str _10daf8c40_fmt_int(jule::I64 _7316_i,jule::Int _7324_base) {
	if ((((true && (0LL <= _7316_i)) && (_7316_i < 100LL)) && (_7324_base == 10LL))) {
		return _10daf8c40_small(static_cast<jule::Int>(_7316_i));
	}
	jule::Str _7713_s{};
	std::tie(std::ignore,_7713_s) = _10daf8c40_fmt_bits(nullptr,static_cast<jule::U64>(_7316_i),_7324_base,(_7316_i < 0LL),false);
	return _7713_s;
}



inline jule::Str _10daf8c40_itoa(jule::Int _8213_i) {
	return _10daf8c40_fmt_int(static_cast<jule::I64>(_8213_i),10LL);
}



inline jule::Str _10daf8c40_small(jule::Int _8510_i) {
	if ((_8510_i < 10LL)) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(static_cast<jule::Int>(_8510_i),static_cast<jule::Int>((_8510_i + 1LL)));
	}
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice(static_cast<jule::Int>((_8510_i * 2LL)),static_cast<jule::Int>(((_8510_i * 2LL) + 2LL)));
}



inline jule::Bool _10daf8c40_is_power_of_two(jule::Int _9220_x) {
	return ((_9220_x & (_9220_x - 1LL)) == 0LL);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _10daf8c40_fmt_bits(jule::Slice<jule::U8> _9917_dst,jule::U64 _9934_u,jule::Int _9942_base,jule::Bool _9953_neg,jule::Bool _9964_append_) {
	jule::Str _9992_s{jule::Str()};
	jule::Slice<jule::U8> _9981_d{jule::Slice<jule::U8>()};
	if (((_9942_base < 2LL) || (_9942_base > static_cast<jule::I64>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).len())))) {
		jule::panic(jule::Str("std::conv: illegal base", 23));
	}
	jule::Array<jule::U8,65> _10513_a = jule::Array<jule::U8,65>({});
	jule::Int _10613_i = 65LL;
	if (_9953_neg) {
		_9934_u=static_cast<jule::U64>((-_9934_u));
	}
	if ((_9942_base == 10LL)) {
		if (false) {
			_iter_begin_4561874384:;
			if (!((_9934_u >= 1e+09))) { goto _iter_end_4561874384; }
			{
				jule::U64 _12521_q = jule::div(_9934_u,1e+09);
				jule::Uint _12625_us = static_cast<jule::Uint>((_9934_u - (_12521_q * 1e+09)));
				jule::Int _12725_j = 4LL;
				_iter_begin_4561877792:;
				if (!((_12725_j > 0LL))) { goto _iter_end_4561877792; }
				{
					jule::Uint _12925_is = ((_12625_us % 100LL) * 2LL);
					_12625_us/=100LL;
					_10613_i-=2LL;
					_10513_a[static_cast<jule::Int>((_10613_i + 1LL))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((_12925_is + 1LL))]);
					_10513_a[static_cast<jule::Int>((_10613_i + 0LL))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((_12925_is + 0LL))]);
				}
				_iter_next_4561877792:;
				(_12725_j)--;
				goto _iter_begin_4561877792;
				_iter_end_4561877792:;
				(_10613_i)--;
				_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(((_12625_us * 2LL) + 1LL))]);
				_9934_u=_12521_q;
			}
			_iter_next_4561874384:;
			goto _iter_begin_4561874384;
			_iter_end_4561874384:;
		}
		jule::Uint _14717_us = static_cast<jule::Uint>(_9934_u);
		_iter_begin_4561874064:;
		if (!((_14717_us >= 100LL))) { goto _iter_end_4561874064; }
		{
			jule::Uint _14917_is = ((_14717_us % 100LL) * 2LL);
			_14717_us/=100LL;
			_10613_i-=2LL;
			_10513_a[static_cast<jule::Int>((_10613_i + 1LL))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((_14917_is + 1LL))]);
			_10513_a[static_cast<jule::Int>((_10613_i + 0LL))]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((_14917_is + 0LL))]);
		}
		_iter_next_4561874064:;
		goto _iter_begin_4561874064;
		_iter_end_4561874064:;
		jule::Uint _15713_is = (_14717_us * 2LL);
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((_15713_is + 1LL))]);
		if ((_14717_us >= 10LL)) {
			(_10613_i)--;
			_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_15713_is)]);
		}
	} else if (_10daf8c40_is_power_of_two(_9942_base)) {
		jule::Uint _17213_shift = static_cast<jule::Uint>((static_cast<jule::Uint>(static_cast<jule::Int>(_10e2c0220_trailing_zeros(static_cast<jule::Uint>(_9942_base)))) & 7LL));
		jule::U64 _17313_b = static_cast<jule::U64>(_9942_base);
		jule::Uint _17413_m = static_cast<jule::Uint>((static_cast<jule::Uint>(_9942_base) - 1LL));
		_iter_begin_4561913536:;
		if (!((_9934_u >= _17313_b))) { goto _iter_end_4561913536; }
		{
			(_10613_i)--;
			_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>((static_cast<jule::Uint>(_9934_u) & _17413_m)))]);
			_9934_u>>=_17213_shift;
		}
		_iter_next_4561913536:;
		goto _iter_begin_4561913536;
		_iter_end_4561913536:;
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u))]);
	} else {
		jule::U64 _18513_b = static_cast<jule::U64>(_9942_base);
		_iter_begin_4561923856:;
		if (!((_9934_u >= _18513_b))) { goto _iter_end_4561923856; }
		{
			(_10613_i)--;
			jule::U64 _19117_q = jule::div(_9934_u,_18513_b);
			_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>((_9934_u - (_19117_q * _18513_b))))]);
			_9934_u=_19117_q;
		}
		_iter_next_4561923856:;
		goto _iter_begin_4561923856;
		_iter_end_4561923856:;
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u))]);
	}
	if (_9953_neg) {
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]='-';
	}
	if (_9964_append_) {
		_9981_d=append(_9917_dst,_10513_a.slice(static_cast<jule::Int>(_10613_i)));
		return std::make_tuple(_9981_d,_9992_s);
	}
	_9992_s=static_cast<jule::Str>(_10513_a.slice(static_cast<jule::Int>(_10613_i)));
	return std::make_tuple(_9981_d,_9992_s);
}



inline jule::Bool _11ce23cb0_is_std_header_path(jule::Str _2627_p) {
	return ((_2627_p[static_cast<jule::Int>(0LL)] == '<') && (_2627_p[static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_2627_p.len()) - 1LL)))] == '>'));
}



inline jule::Bool _11ce23cb0_is_valid_header_ext(jule::Str _3128_ext) {
	{
		auto &__julec_range_expr = _11ce23cb0_CPP_HEADER_EXTS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _11ce23cb0_valid_ext{jule::Str()};_11ce23cb0_valid_ext = *__julec_range_begin;
			_iter_begin_4562284304:;
			{
				if ((_3128_ext == _11ce23cb0_valid_ext)) {
					return true;
				}
			}
			_iter_next_4562284304:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11ce23cb0_valid_ext = *__julec_range_begin; goto _iter_begin_4562284304; }
			_iter_end_4562284304:;
		}
	}
	return false;
}



inline jule::Bool _11ce23cb0_is_valid_cpp_ext(jule::Str _4225_ext) {
	{
		auto &__julec_range_expr = _11ce23cb0_CPP_EXTS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _11ce23cb0_e{jule::Str()};_11ce23cb0_e = *__julec_range_begin;
			_iter_begin_4562283424:;
			{
				if ((_4225_ext == _11ce23cb0_e)) {
					return true;
				}
			}
			_iter_next_4562283424:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11ce23cb0_e = *__julec_range_begin; goto _iter_begin_4562283424; }
			_iter_end_4562283424:;
		}
	}
	{
		auto &__julec_range_expr = _11ce23cb0_OBJECTIVE_CPP_EXTS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _11ce23cb0_e{jule::Str()};_11ce23cb0_e = *__julec_range_begin;
			_iter_begin_4562286832:;
			{
				if ((_4225_ext == _11ce23cb0_e)) {
					return true;
				}
			}
			_iter_next_4562286832:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11ce23cb0_e = *__julec_range_begin; goto _iter_begin_4562286832; }
			_iter_end_4562286832:;
		}
	}
	return false;
}



inline std::tuple<jule::Bool,jule::Bool> _10d890250_check_os(jule::Str _713_arg) {
	jule::Bool _735_exist{jule::Bool()};
	jule::Bool _725_ok{jule::Bool()};
	_725_ok=false;
	_735_exist=true;
	{
		auto _match_expr{ _713_arg };
		if (!(jule::Str("windows", 7) == _match_expr)) { goto _case_end_4562301872; }
		_case_begin_4562301872:;
		{
			_725_ok=_13cfdfa50_is_windows(_13cfea710_OS);
		}
		goto _match_end_4562299136;
		_case_end_4562301872:;
		if (!(jule::Str("darwin", 6) == _match_expr)) { goto _case_end_4562302336; }
		_case_begin_4562302336:;
		{
			_725_ok=_13cfdfa50_is_darwin(_13cfea710_OS);
		}
		goto _match_end_4562299136;
		_case_end_4562302336:;
		if (!(jule::Str("linux", 5) == _match_expr)) { goto _case_end_4562300400; }
		_case_begin_4562300400:;
		{
			_725_ok=_13cfdfa50_is_linux(_13cfea710_OS);
		}
		goto _match_end_4562299136;
		_case_end_4562300400:;
		if (!(jule::Str("unix", 4) == _match_expr)) { goto _case_end_4562300512; }
		_case_begin_4562300512:;
		{
			_725_ok=_13cfdfa50_is_unix(_13cfea710_OS);
		}
		goto _match_end_4562299136;
		_case_end_4562300512:;
		_case_begin_4562299248:;
		{
			_725_ok=true;
			_735_exist=false;
		}
		goto _match_end_4562299136;
		_case_end_4562299248:;
		_match_end_4562299136:;
	}
	return std::make_tuple(_725_ok,_735_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _10d890250_check_arch(jule::Str _2415_arg) {
	jule::Bool _2437_exist{jule::Bool()};
	jule::Bool _2427_ok{jule::Bool()};
	_2427_ok=false;
	_2437_exist=true;
	{
		auto _match_expr{ _2415_arg };
		if (!(jule::Str("i386", 4) == _match_expr)) { goto _case_end_4562310288; }
		_case_begin_4562310288:;
		{
			_2427_ok=_13cfdfa50_is_i386(_13cfea710_ARCH);
		}
		goto _match_end_4562308432;
		_case_end_4562310288:;
		if (!(jule::Str("amd64", 5) == _match_expr)) { goto _case_end_4562309696; }
		_case_begin_4562309696:;
		{
			_2427_ok=_13cfdfa50_is_amd64(_13cfea710_ARCH);
		}
		goto _match_end_4562308432;
		_case_end_4562309696:;
		if (!(jule::Str("arm", 3) == _match_expr)) { goto _case_end_4562309808; }
		_case_begin_4562309808:;
		{
			_2427_ok=_13cfdfa50_is_arm(_13cfea710_ARCH);
		}
		goto _match_end_4562308432;
		_case_end_4562309808:;
		if (!(jule::Str("arm64", 5) == _match_expr)) { goto _case_end_4562309920; }
		_case_begin_4562309920:;
		{
			_2427_ok=_13cfdfa50_is_arm64(_13cfea710_ARCH);
		}
		goto _match_end_4562308432;
		_case_end_4562309920:;
		if (!(jule::Str("64bit", 5) == _match_expr)) { goto _case_end_4562310528; }
		_case_begin_4562310528:;
		{
			_2427_ok=_13cfdfa50_is_64bit(_13cfea710_ARCH);
		}
		goto _match_end_4562308432;
		_case_end_4562310528:;
		if (!(jule::Str("32bit", 5) == _match_expr)) { goto _case_end_4562310640; }
		_case_begin_4562310640:;
		{
			_2427_ok=_13cfdfa50_is_32bit(_13cfea710_ARCH);
		}
		goto _match_end_4562308432;
		_case_end_4562310640:;
		_case_begin_4562309344:;
		{
			_2427_ok=true;
			_2437_exist=false;
		}
		goto _match_end_4562308432;
		_case_end_4562309344:;
		_match_end_4562308432:;
	}
	return std::make_tuple(_2427_ok,_2437_exist);
}



inline jule::Bool _10d890250_is_pass_file_annotation(jule::Str _4436_p) {
	_4436_p=_12ce95080_base(_4436_p);
	jule::I64 _469_n = static_cast<jule::I64>(_4436_p.len());
	_4436_p=_4436_p.slice(0LL,static_cast<jule::Int>((_469_n - static_cast<jule::I64>(_12ce95080_ext(_4436_p).len()))));
	jule::Str _5213_a1 = jule::Str("", 0);
	jule::Str _5513_a2 = jule::Str("", 0);
	jule::Int _5813_i = static_cast<jule::Int>(_4436_p.rfind(jule::Str("_", 1)));
	if ((_5813_i == -1LL)) {
		jule::Bool _6118_ok{};
		jule::Bool _6126_exist{};
		std::tie(_6118_ok,_6126_exist) = _10d890250_check_os(_4436_p);
		if (_6126_exist) {
			return _6118_ok;
		}
		std::tie(_6118_ok,_6126_exist) = _10d890250_check_arch(_4436_p);
		return ((!_6126_exist) || _6118_ok);
	}
	if (((_5813_i + 1LL) >= _469_n)) {
		return true;
	}
	_5213_a1=_4436_p.slice(static_cast<jule::Int>((_5813_i + 1LL)));
	_4436_p=_4436_p.slice(0LL,static_cast<jule::Int>(_5813_i));
	_5813_i=static_cast<jule::Int>(_4436_p.rfind(jule::Str("_", 1)));
	if ((_5813_i != -1LL)) {
		_5513_a2=_4436_p.slice(static_cast<jule::Int>((_5813_i + 1LL)));
	}
	if ((_5513_a2 == jule::Str("", 0))) {
		jule::Bool _8218_ok{};
		jule::Bool _8226_exist{};
		std::tie(_8218_ok,_8226_exist) = _10d890250_check_os(_5213_a1);
		if (_8226_exist) {
			return _8218_ok;
		}
		std::tie(_8218_ok,_8226_exist) = _10d890250_check_arch(_5213_a1);
		return ((!_8226_exist) || _8218_ok);
	}
	jule::Bool _9014_ok{};
	jule::Bool _9022_exist{};
	std::tie(_9014_ok,_9022_exist) = _10d890250_check_arch(_5213_a1);
	if (_9022_exist) {
		if ((!_9014_ok)) {
			return false;
		}
		jule::Bool _9514_ok{};
		jule::Bool _9518_exist{};
		std::tie(_9514_ok,_9518_exist) = _10d890250_check_os(_5513_a2);
		return ((!_9518_exist) || _9514_ok);
	}
	std::tie(_9014_ok,_9022_exist) = _10d890250_check_os(_5213_a1);
	return ((!_9022_exist) || _9014_ok);
}



inline jule::Str _10d8aeab0_errorf(jule::Str _20015_key,jule::Slice<jule::Any> _20025_args) {
	jule::Str _2019_fmt = _10d8aeab0_ERRORS[_20015_key];
	return _10d8aeab0_apply_fmt(_2019_fmt,_20025_args);
}



inline jule::Str _10d8aeab0_arg_to_str(jule::Any _20515_arg) {
	{
		auto _match_expr{ _20515_arg };
		if (!(_match_expr.type_is<jule::Str>())) { goto _case_end_4562377616; }
		_case_begin_4562377616:;
		{
			return _20515_arg.operator jule::Str();
		}
		goto _match_end_4562376608;
		_case_end_4562377616:;
		if (!(_match_expr.type_is<jule::U8>())) { goto _case_end_4562376992; }
		_case_begin_4562376992:;
		{
			return static_cast<jule::Str>(_20515_arg.operator jule::U8());
		}
		goto _match_end_4562376608;
		_case_end_4562376992:;
		if (!(_match_expr.type_is<jule::I32>())) { goto _case_end_4562377104; }
		_case_begin_4562377104:;
		{
			return static_cast<jule::Str>(_20515_arg.operator jule::I32());
		}
		goto _match_end_4562376608;
		_case_end_4562377104:;
		_case_begin_4562376048:;
		{
			return jule::Str("<fmt?>", 6);
		}
		goto _match_end_4562376608;
		_case_end_4562376048:;
		_match_end_4562376608:;
	}
}



inline jule::Int _10d8aeab0_find_next_fmt(jule::Str _21418_fmt) {
	{
		auto &__julec_range_expr = _21418_fmt;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10d8aeab0_i{jule::Int()};_10d8aeab0_i = 0;
			jule::U8 _10d8aeab0_b{jule::U8()};_10d8aeab0_b = *__julec_range_begin;
			_iter_begin_4562378176:;
			{
				if ((_10d8aeab0_b == '@')) {
					return _10d8aeab0_i;
				}
			}
			_iter_next_4562378176:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10d8aeab0_i; _10d8aeab0_b = *__julec_range_begin; goto _iter_begin_4562378176; }
			_iter_end_4562378176:;
		}
	}
	return -1LL;
}



inline jule::Str _10d8aeab0_apply_fmt(jule::Str _22318_fmt,jule::Slice<jule::Any> _22328_args) {
	jule::Str _22413_s = jule::Str("", 0);
	{
		auto &__julec_range_expr = _22328_args;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _10d8aeab0_arg{jule::Any()};_10d8aeab0_arg = *__julec_range_begin;
			_iter_begin_4562387904:;
			{
				jule::Int _22713_i = static_cast<jule::Int>(_10d8aeab0_find_next_fmt(_22318_fmt));
				if ((_22713_i == -1LL)) {
					goto _iter_end_4562387904;
				}
				_22413_s+=_22318_fmt.slice(0LL,static_cast<jule::Int>(_22713_i));
				_22413_s+=_10d8aeab0_arg_to_str(_10d8aeab0_arg);
				_22318_fmt=_22318_fmt.slice(static_cast<jule::Int>((_22713_i + 1LL)));
			}
			_iter_next_4562387904:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10d8aeab0_arg = *__julec_range_begin; goto _iter_begin_4562387904; }
			_iter_end_4562387904:;
		}
	}
	_22413_s+=_22318_fmt;
	return _22413_s;
}



inline jule::Bool _13cfd67b0_is_top_directive(jule::Str _3225_directive) {
	return (_3225_directive == jule::Str("pass", 4));
}



inline jule::Bool _13cfdfa50_is_windows(jule::Str _5419_os) {
	return (_5419_os == jule::Str("windows", 7));
}



inline jule::Bool _13cfdfa50_is_darwin(jule::Str _5618_os) {
	return (_5618_os == jule::Str("darwin", 6));
}



inline jule::Bool _13cfdfa50_is_linux(jule::Str _5817_os) {
	return (_5817_os == jule::Str("linux", 5));
}



inline jule::Bool _13cfdfa50_is_i386(jule::Str _6016_arch) {
	return (_6016_arch == jule::Str("i386", 4));
}



inline jule::Bool _13cfdfa50_is_amd64(jule::Str _6217_arch) {
	return (_6217_arch == jule::Str("amd64", 5));
}



inline jule::Bool _13cfdfa50_is_arm(jule::Str _6415_arch) {
	return (_6415_arch == jule::Str("arm", 3));
}



inline jule::Bool _13cfdfa50_is_arm64(jule::Str _6617_arch) {
	return (_6617_arch == jule::Str("arm64", 5));
}



inline jule::Bool _13cfdfa50_is_unix(jule::Str _6816_os) {
	return (_13cfdfa50_is_darwin(_6816_os) || _13cfdfa50_is_linux(_6816_os));
}



inline jule::Bool _13cfdfa50_is_32bit(jule::Str _7017_arch) {
	return (_13cfdfa50_is_i386(_7017_arch) || _13cfdfa50_is_arm(_7017_arch));
}



inline jule::Bool _13cfdfa50_is_64bit(jule::Str _7217_arch) {
	return (_13cfdfa50_is_amd64(_7217_arch) || _13cfdfa50_is_arm64(_7217_arch));
}



inline void _13cfea710_exit_err(jule::Str _2413_msg) {
	
	jule::outln(_2413_msg);
	_10cf1adb0_exit(1LL);
}



inline void _13cfea710_init(void) {
	jule::Str _3213_path = _10cf1adb0_executable();
	if ((_3213_path == jule::Str("", 0))) {
		_13cfea710_exit_err(jule::Str("std::jule::build: executable file cannot found", 46));
	}
	jule::Str _3710_pwd{};
	jule::Int _3715_err{};
	std::tie(_3710_pwd,_3715_err) = _10cf1adb0_getwd();
	if ((_3715_err != 0LLU)) {
		_13cfea710_exit_err(jule::Str("std::jule::build: working directory path cannot found", 53));
	}
	jule::Str _429_path_exec = _12ce95080_dir(_3213_path);
	_3213_path=_12ce95080_join(jule::Slice<jule::Str>({_429_path_exec,jule::Str("..", 2)}));
	{
		(*(&_13cfea710_PATH_WD))=_3710_pwd;
		(*(&_13cfea710_PATH_EXEC))=_429_path_exec;
		(*(&_13cfea710_PATH_STDLIB))=_12ce95080_join(jule::Slice<jule::Str>({_3213_path,jule::Str("std", 3)}));
		(*(&_13cfea710_PATH_API))=_12ce95080_join(jule::Slice<jule::Str>({_13cfea710_PATH_EXEC,jule::Str("..", 2)}));
		(*(&_13cfea710_PATH_API))=_12ce95080_join(jule::Slice<jule::Str>({_13cfea710_PATH_API,jule::Str("api", 3)}));
		(*(&_13cfea710_PATH_API))=_12ce95080_join(jule::Slice<jule::Str>({_13cfea710_PATH_API,jule::Str("jule.hpp", 8)}));
	}
}



inline std::tuple<jule::I32,jule::Int> _10dba43b0_decode_rune(jule::Slice<jule::U8> _18220_p) {
	jule::Int _18242_size{jule::Int()};
	jule::I32 _18233_r{jule::I32()};
	if ((static_cast<jule::I64>(_18220_p.len()) < 1LL)) {
		_18233_r = 65533LL;
		_18242_size = 0LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _1869_p0 = _18220_p[static_cast<jule::Int>(0LL)];
	jule::U8 _1879_x = _10dba43b0_FIRST[static_cast<jule::Int>(_1869_p0)];
	if ((_1879_x >= 240LL)) {
		jule::I32 _19213_mask = ((_1879_x << 31LL) >> 31LL);
		_18233_r = static_cast<jule::I32>((static_cast<jule::I32>((static_cast<jule::I32>(_18220_p[static_cast<jule::Int>(0LL)]) & static_cast<jule::I32>((~_19213_mask)))) | static_cast<jule::I32>((65533LL & _19213_mask))));
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::Int _1959_sz = static_cast<jule::Int>((_1879_x & 7LL));
	_10dba43b0_accept_range _1969_accept = _10dba43b0_ACCEPT_RANGES[static_cast<jule::Int>((_1879_x >> 4LL))];
	if ((static_cast<jule::I64>(_18220_p.len()) < _1959_sz)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2009_b1 = _18220_p[static_cast<jule::Int>(1LL)];
	if (((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1))) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if ((_1959_sz <= 2LL)) {
		_18233_r = static_cast<jule::I32>((static_cast<jule::I32>((static_cast<jule::I32>((_1869_p0 & 31LL)) << 6LL)) | static_cast<jule::I32>((_2009_b1 & 63LL))));
		_18242_size = 2LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2079_b2 = _18220_p[static_cast<jule::Int>(2LL)];
	if (((_2079_b2 < 128LL) || (191LL < _2079_b2))) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if ((_1959_sz <= 3LL)) {
		_18233_r = static_cast<jule::I32>((static_cast<jule::I32>((static_cast<jule::I32>((static_cast<jule::I32>((_1869_p0 & 15LL)) << 12LL)) | static_cast<jule::I32>((static_cast<jule::I32>((_2009_b1 & 63LL)) << 6LL)))) | static_cast<jule::I32>((_2079_b2 & 63LL))));
		_18242_size = 3LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2149_b3 = _18220_p[static_cast<jule::Int>(3LL)];
	if (((_2149_b3 < 128LL) || (191LL < _2149_b3))) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	_18233_r = static_cast<jule::I32>((static_cast<jule::I32>((static_cast<jule::I32>((static_cast<jule::I32>((static_cast<jule::I32>((_1869_p0 & 7LL)) << 18LL)) | static_cast<jule::I32>((static_cast<jule::I32>((_2009_b1 & 63LL)) << 12LL)))) | static_cast<jule::I32>((static_cast<jule::I32>((_2079_b2 & 63LL)) << 6LL)))) | static_cast<jule::I32>((_2149_b3 & 63LL))));
	_18242_size = 4LL;
	return std::make_tuple(_18233_r,_18242_size);
}



inline std::tuple<jule::I32,jule::Int> _10dba43b0_decode_rune_str(jule::Str _22924_s) {
	jule::Int _22943_size{jule::Int()};
	jule::I32 _22934_r{jule::I32()};
	if ((static_cast<jule::I64>(_22924_s.len()) < 1LL)) {
		_22934_r = 65533LL;
		_22943_size = 0LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2339_s0 = _22924_s[static_cast<jule::Int>(0LL)];
	jule::U8 _2349_x = _10dba43b0_FIRST[static_cast<jule::Int>(_2339_s0)];
	if ((_2349_x >= 240LL)) {
		jule::I32 _23913_mask = ((_2349_x << 31LL) >> 31LL);
		_22934_r = static_cast<jule::I32>((static_cast<jule::I32>((static_cast<jule::I32>(_22924_s[static_cast<jule::Int>(0LL)]) & static_cast<jule::I32>((~_23913_mask)))) | static_cast<jule::I32>((65533LL & _23913_mask))));
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::Int _2429_sz = static_cast<jule::Int>((_2349_x & 7LL));
	_10dba43b0_accept_range _2439_accept = _10dba43b0_ACCEPT_RANGES[static_cast<jule::Int>((_2349_x >> 4LL))];
	if ((static_cast<jule::I64>(_22924_s.len()) < _2429_sz)) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2479_s1 = _22924_s[static_cast<jule::Int>(1LL)];
	if (((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1))) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	if ((_2429_sz <= 2LL)) {
		_22934_r = static_cast<jule::I32>((static_cast<jule::I32>((static_cast<jule::I32>((_2339_s0 & 31LL)) << 6LL)) | static_cast<jule::I32>((_2479_s1 & 63LL))));
		_22943_size = 2LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2549_s2 = _22924_s[static_cast<jule::Int>(2LL)];
	if (((_2549_s2 < 128LL) || (191LL < _2549_s2))) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	if ((_2429_sz <= 3LL)) {
		_22934_r = static_cast<jule::I32>((static_cast<jule::I32>((static_cast<jule::I32>((static_cast<jule::I32>((_2339_s0 & 15LL)) << 12LL)) | static_cast<jule::I32>((static_cast<jule::I32>((_2479_s1 & 63LL)) << 6LL)))) | static_cast<jule::I32>((_2549_s2 & 63LL))));
		_22943_size = 3LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2619_s3 = _22924_s[static_cast<jule::Int>(3LL)];
	if (((_2619_s3 < 128LL) || (191LL < _2619_s3))) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	_22934_r = static_cast<jule::I32>((static_cast<jule::I32>((static_cast<jule::I32>((static_cast<jule::I32>((static_cast<jule::I32>((_2339_s0 & 7LL)) << 18LL)) | static_cast<jule::I32>((static_cast<jule::I32>((_2479_s1 & 63LL)) << 12LL)))) | static_cast<jule::I32>((static_cast<jule::I32>((_2549_s2 & 63LL)) << 6LL)))) | static_cast<jule::I32>((_2619_s3 & 63LL))));
	_22943_size = 4LL;
	return std::make_tuple(_22934_r,_22943_size);
}



inline jule::Bool _11ce22a00_is_unary_op(jule::Str _31020_kind) {
	{
		auto &__julec_range_expr = _11ce22a00_UNARY_OPS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _11ce22a00_op{jule::Str("::", 2)};_11ce22a00_op = *__julec_range_begin;
			_iter_begin_4697641984:;
			{
				if ((_31020_kind == _11ce22a00_op)) {
					return true;
				}
			}
			_iter_next_4697641984:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11ce22a00_op = *__julec_range_begin; goto _iter_begin_4697641984; }
			_iter_end_4697641984:;
		}
	}
	return false;
}



inline jule::Bool _11ce22a00_is_str(jule::Str _34315_k) {
	return ((_34315_k != jule::Str("", 0)) && ((_34315_k[static_cast<jule::Int>(0LL)] == '\"') || _11ce22a00_is_raw_str(_34315_k)));
}



inline jule::Bool _11ce22a00_is_raw_str(jule::Str _34519_k) {
	return ((_34519_k != jule::Str("", 0)) && (_34519_k[static_cast<jule::Int>(0LL)] == '`'));
}



inline jule::Bool _11ce22a00_is_rune(jule::Str _34816_k) {
	return ((_34816_k != jule::Str("", 0)) && (_34816_k[static_cast<jule::Int>(0LL)] == '\''));
}



inline jule::Bool _11ce22a00_is_bool(jule::Str _35216_k) {
	return ((_35216_k == jule::Str("true", 4)) || (_35216_k == jule::Str("false", 5)));
}



inline jule::Bool _11ce22a00_contains_any(jule::Str _35417_s,jule::Str _35425_bytes) {
	{
		auto &__julec_range_expr = _35425_bytes;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::U8 _11ce22a00_b{jule::U8()};_11ce22a00_b = *__julec_range_begin;
			_iter_begin_4697664352:;
			{
				jule::Int _35613_i = static_cast<jule::Int>(_35417_s.find(static_cast<jule::Str>(_11ce22a00_b)));
				if ((_35613_i >= 0LL)) {
					return true;
				}
			}
			_iter_next_4697664352:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11ce22a00_b = *__julec_range_begin; goto _iter_begin_4697664352; }
			_iter_end_4697664352:;
		}
	}
	return false;
}



inline jule::Bool _11ce22a00_is_float(jule::Str _36617_k) {
	if (_36617_k.has_prefix(jule::Str("0x", 2))) {
		return _11ce22a00_contains_any(_36617_k,jule::Str(".pP", 3));
	}
	return _11ce22a00_contains_any(_36617_k,jule::Str(".eE", 3));
}



inline jule::Bool _11ce22a00_is_num(jule::Str _37515_k) {
	if ((_37515_k == jule::Str("", 0))) {
		return false;
	}
	jule::U8 _3809_b = _37515_k[static_cast<jule::Int>(0LL)];
	return ((_3809_b == '.') || (('0' <= _3809_b) && (_3809_b <= '9')));
}



inline jule::Bool _11ce22a00_is_ignore_ident(jule::Str _39024_ident) {
	return (_39024_ident == jule::Str("_", 1));
}



inline jule::Bool _11ce22a00_is_anon_ident(jule::Str _39222_ident) {
	return (_39222_ident == jule::Str("<anonymous>", 11));
}



inline jule::Bool _11ce22a00_is_space(jule::I32 _40617_r) {
	{
		auto &__julec_range_expr = _11ce22a00_SPACES;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::I32 _11ce22a00_cr{jule::I32()};_11ce22a00_cr = *__julec_range_begin;
			_iter_begin_4697688784:;
			{
				if ((_40617_r == _11ce22a00_cr)) {
					return true;
				}
			}
			_iter_next_4697688784:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11ce22a00_cr = *__julec_range_begin; goto _iter_begin_4697688784; }
			_iter_end_4697688784:;
		}
	}
	return false;
}



inline jule::Bool _11ce22a00_is_letter(jule::I32 _41718_r) {
	return ((('a' <= _41718_r) && (_41718_r <= 'z')) || (('A' <= _41718_r) && (_41718_r <= 'Z')));
}



inline jule::Bool _11ce22a00_is_ident_rune(jule::Str _42322_s) {
	if ((_42322_s == jule::Str("", 0))) {
		return false;
	}
	if ((_42322_s[static_cast<jule::Int>(0LL)] != '_')) {
		jule::I32 _42914_r{};
		std::tie(_42914_r,std::ignore) = _10dba43b0_decode_rune_str(_42322_s);
		if ((!_11ce22a00_is_letter(_42914_r))) {
			return false;
		}
	}
	return true;
}



inline jule::Bool _11ce22a00_is_decimal(jule::U8 _43919_b) {
	return (('0' <= _43919_b) && (_43919_b <= '9'));
}



inline jule::Bool _11ce22a00_is_binary(jule::U8 _44118_b) {
	return ((_44118_b == '0') || (_44118_b == '1'));
}



inline jule::Bool _11ce22a00_is_octal(jule::U8 _44317_b) {
	return (('0' <= _44317_b) && (_44317_b <= '7'));
}



inline jule::Bool _11ce22a00_is_hex(jule::U8 _44615_b) {
	{
		auto _match_expr{ true };
		if (!((('0' <= _44615_b) && (_44615_b <= '9')) == _match_expr)) { goto _case_end_4697707712; }
		_case_begin_4697707712:;
		{
			return true;
		}
		goto _match_end_4697706560;
		_case_end_4697707712:;
		if (!((('a' <= _44615_b) && (_44615_b <= 'f')) == _match_expr)) { goto _case_end_4697707824; }
		_case_begin_4697707824:;
		{
			return true;
		}
		goto _match_end_4697706560;
		_case_end_4697707824:;
		if (!((('A' <= _44615_b) && (_44615_b <= 'F')) == _match_expr)) { goto _case_end_4697707936; }
		_case_begin_4697707936:;
		{
			return true;
		}
		goto _match_end_4697706560;
		_case_end_4697707936:;
		_case_begin_4697706992:;
		{
			return false;
		}
		goto _match_end_4697706560;
		_case_end_4697706992:;
		_match_end_4697706560:;
	}
}



inline jule::Bool _11ce22a00_is_assign(jule::Uint _45818_id) {
	return (((((((_45818_id == 2LLU) || (_45818_id == 31LLU)) || (_45818_id == 34LLU)) || (_45818_id == 20LLU)) || (_45818_id == 28LLU)) || (_45818_id == 3LLU)) || (_45818_id == 7LLU));
}



inline jule::Bool _11ce22a00_is_postfix_op(jule::Str _47122_kind) {
	{
		auto &__julec_range_expr = _11ce22a00_POSTFIX_OPS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _11ce22a00_op{jule::Str("::", 2)};_11ce22a00_op = *__julec_range_begin;
			_iter_begin_4697716832:;
			{
				if ((_47122_kind == _11ce22a00_op)) {
					return true;
				}
			}
			_iter_next_4697716832:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11ce22a00_op = *__julec_range_begin; goto _iter_begin_4697716832; }
			_iter_end_4697716832:;
		}
	}
	return false;
}



inline jule::Bool _11ce22a00_is_assign_op(jule::Str _48221_kind) {
	if (_11ce22a00_is_postfix_op(_48221_kind)) {
		return true;
	}
	{
		auto &__julec_range_expr = _11ce22a00_ASSING_OPS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _11ce22a00_op{jule::Str("::", 2)};_11ce22a00_op = *__julec_range_begin;
			_iter_begin_4563376944:;
			{
				if ((_48221_kind == _11ce22a00_op)) {
					return true;
				}
			}
			_iter_next_4563376944:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _11ce22a00_op = *__julec_range_begin; goto _iter_begin_4563376944; }
			_iter_end_4563376944:;
		}
	}
	return false;
}



inline jule::Ref<_11ce078a0_File> _11ce078a0_new_file_set(jule::Str _4021_path) {
	return jule::new_struct<_11ce078a0_File>(new( std::nothrow ) _11ce078a0_File(_4021_path,_10dba8790_Vector_0()));
}



inline _13cfd2d20_Log _11cec0de0_make_err(jule::Int _10413_row,jule::Int _10423_col,jule::Ref<_11ce078a0_File> _10433_f,jule::Str _10443_key,jule::Slice<jule::Any> _10453_args) {
	return _13cfd2d20_Log(1LLU,_10413_row,_10423_col,_10433_f->_method_path(),_10d8aeab0_errorf(_10443_key,_10453_args));
}



inline jule::Bool _11cec0de0_bytes_has_prefix(jule::Slice<jule::U8> _11421_bytes,jule::Str _11436_prefix) {
	if ((static_cast<jule::I64>(_11421_bytes.len()) < static_cast<jule::I64>(_11436_prefix.len()))) {
		return false;
	}
	{
		auto &__julec_range_expr = _11436_prefix;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _11cec0de0_i{jule::Int()};_11cec0de0_i = 0;
			_iter_begin_4697735376:;
			{
				if ((_11421_bytes[static_cast<jule::Int>(_11cec0de0_i)] != _11436_prefix[static_cast<jule::Int>(_11cec0de0_i)])) {
					return false;
				}
			}
			_iter_next_4697735376:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_11cec0de0_i; goto _iter_begin_4697735376; }
			_iter_end_4697735376:;
		}
	}
	return true;
}



inline jule::Str _11cec0de0_float_fmt_e(jule::Slice<jule::U8> _12616_txt,jule::Int _12633_i) {
	jule::Str _12643_lit{jule::Str()};
	(_12633_i)++;
	if ((_12633_i >= static_cast<jule::I64>(_12616_txt.len()))) {
		return _12643_lit;
	}
	jule::U8 _1329_b = _12616_txt[static_cast<jule::Int>(_12633_i)];
	if (((_1329_b == '+') || (_1329_b == '-'))) {
		(_12633_i)++;
		if ((_12633_i >= static_cast<jule::I64>(_12616_txt.len()))) {
			return _12643_lit;
		}
	}
	jule::Int _1409_first = _12633_i;
	_iter_begin_4697749488:;
	if (!((_12633_i < static_cast<jule::I64>(_12616_txt.len())))) { goto _iter_end_4697749488; }
	{
		jule::U8 _14213_b = _12616_txt[static_cast<jule::Int>(_12633_i)];
		if ((!_11ce22a00_is_decimal(_14213_b))) {
			goto _iter_end_4697749488;
		}
	}
	_iter_next_4697749488:;
	(_12633_i)++;
	goto _iter_begin_4697749488;
	_iter_end_4697749488:;
	if ((_12633_i == _1409_first)) {
		_12643_lit = jule::Str("", 0);
		return _12643_lit;
	}
	_12643_lit = static_cast<jule::Str>(_12616_txt.slice(0LL,static_cast<jule::Int>(_12633_i)));
	return _12643_lit;
}



inline jule::Str _11cec0de0_float_fmt_p(jule::Slice<jule::U8> _15416_txt,jule::Int _15429_i) {
	return _11cec0de0_float_fmt_e(_15416_txt,_15429_i);
}



inline jule::Str _11cec0de0_float_fmt_dotnp(jule::Slice<jule::U8> _15620_txt,jule::Int _15637_i) {
	if ((_15620_txt[static_cast<jule::Int>(_15637_i)] != '.')) {
		return jule::Str("", 0);
	}
	(_15637_i)++;
	_julec_label_loop:;
	_iter_begin_4697761328:;
	if (!((_15637_i < static_cast<jule::I64>(_15620_txt.len())))) { goto _iter_end_4697761328; }
	{
		jule::U8 _16413_b = _15620_txt[static_cast<jule::Int>(_15637_i)];
		{
			auto _match_expr{ true };
			if (!(_11ce22a00_is_decimal(_16413_b) == _match_expr)) { goto _case_end_4697765856; }
			_case_begin_4697765856:;
			{
				goto _iter_next_4697761328;
			}
			goto _match_end_4697765264;
			_case_end_4697765856:;
			if (!(_11cec0de0_is_float_fmt_p(_16413_b,_15637_i) == _match_expr)) { goto _case_end_4697765968; }
			_case_begin_4697765968:;
			{
				return _11cec0de0_float_fmt_p(_15620_txt,_15637_i);
			}
			goto _match_end_4697765264;
			_case_end_4697765968:;
			_case_begin_4697765552:;
			{
				goto _iter_end_4697761328;
			}
			goto _match_end_4697765264;
			_case_end_4697765552:;
			_match_end_4697765264:;
		}
	}
	_iter_next_4697761328:;
	(_15637_i)++;
	goto _iter_begin_4697761328;
	_iter_end_4697761328:;
	return jule::Str("", 0);
}



inline jule::Str _11cec0de0_float_fmt_dotfp(jule::Slice<jule::U8> _17420_txt,jule::Int _17437_i) {
	_17437_i+=2LL;
	return _11cec0de0_float_fmt_e(_17420_txt,_17437_i);
}



inline jule::Str _11cec0de0_float_fmt_dotp(jule::Slice<jule::U8> _18119_txt,jule::Int _18136_i) {
	(_18136_i)++;
	return _11cec0de0_float_fmt_e(_18119_txt,_18136_i);
}



inline jule::Str _11cec0de0_float_num(jule::Slice<jule::U8> _18814_txt,jule::Int _18831_i) {
	jule::Str _18841_lit{jule::Str()};
	(_18831_i)++;
	_iter_begin_4697777104:;
	if (!((_18831_i < static_cast<jule::I64>(_18814_txt.len())))) { goto _iter_end_4697777104; }
	{
		jule::U8 _19113_b = _18814_txt[static_cast<jule::Int>(_18831_i)];
		if (((_18831_i > 1LL) && ((_19113_b == 'e') || (_19113_b == 'E')))) {
			_18841_lit = _11cec0de0_float_fmt_e(_18814_txt,_18831_i);
			return _18841_lit;
		}
		if ((!_11ce22a00_is_decimal(_19113_b))) {
			goto _iter_end_4697777104;
		}
	}
	_iter_next_4697777104:;
	(_18831_i)++;
	goto _iter_begin_4697777104;
	_iter_end_4697777104:;
	if ((_18831_i == 1LL)) {
		return _18841_lit;
	}
	_18841_lit = static_cast<jule::Str>(_18814_txt.slice(0LL,static_cast<jule::Int>(_18831_i)));
	return _18841_lit;
}



inline jule::Str _11cec0de0_common_num(jule::Slice<jule::U8> _20615_txt) {
	jule::Str _20630_lit{jule::Str()};
	jule::Int _20713_i = 0LL;
	_julec_label_loop:;
	_iter_begin_4697789248:;
	if (!((_20713_i < static_cast<jule::I64>(_20615_txt.len())))) { goto _iter_end_4697789248; }
	{
		jule::U8 _21013_b = _20615_txt[static_cast<jule::Int>(_20713_i)];
		{
			auto _match_expr{ true };
			if (!((_21013_b == '.') == _match_expr)) { goto _case_end_4697792800; }
			_case_begin_4697792800:;
			{
				_20630_lit = _11cec0de0_float_num(_20615_txt,_20713_i);
				return _20630_lit;
			}
			goto _match_end_4697792448;
			_case_end_4697792800:;
			if (!(_11cec0de0_is_float_fmt_e(_21013_b,_20713_i) == _match_expr)) { goto _case_end_4697792912; }
			_case_begin_4697792912:;
			{
				_20630_lit = _11cec0de0_float_fmt_e(_20615_txt,_20713_i);
				return _20630_lit;
			}
			goto _match_end_4697792448;
			_case_end_4697792912:;
			if (!((!_11ce22a00_is_decimal(_21013_b)) == _match_expr)) { goto _case_end_4697793024; }
			_case_begin_4697793024:;
			{
				goto _iter_end_4697789248;
			}
			goto _match_end_4697792448;
			_case_end_4697793024:;
			_match_end_4697792448:;
		}
	}
	_iter_next_4697789248:;
	(_20713_i)++;
	goto _iter_begin_4697789248;
	_iter_end_4697789248:;
	if ((_20713_i == 0LL)) {
		return _20630_lit;
	}
	_20630_lit = static_cast<jule::Str>(_20615_txt.slice(0LL,static_cast<jule::Int>(_20713_i)));
	return _20630_lit;
}



inline jule::Str _11cec0de0_binary_num(jule::Slice<jule::U8> _22415_txt) {
	jule::Str _22430_lit{jule::Str()};
	if ((!_11cec0de0_bytes_has_prefix(_22415_txt,jule::Str("0b", 2)))) {
		_22430_lit = jule::Str("", 0);
		return _22430_lit;
	}
	if ((static_cast<jule::I64>(_22415_txt.len()) < 2LL)) {
		return _22430_lit;
	}
	
	jule::Int _23313_i = 2LL;
	_iter_begin_4697802048:;
	if (!((_23313_i < static_cast<jule::I64>(_22415_txt.len())))) { goto _iter_end_4697802048; }
	{
		if ((!_11ce22a00_is_binary(_22415_txt[static_cast<jule::Int>(_23313_i)]))) {
			goto _iter_end_4697802048;
		}
	}
	_iter_next_4697802048:;
	(_23313_i)++;
	goto _iter_begin_4697802048;
	_iter_end_4697802048:;
	if ((_23313_i == 2LL)) {
		return _22430_lit;
	}
	_22430_lit = static_cast<jule::Str>(_22415_txt.slice(0LL,static_cast<jule::Int>(_23313_i)));
	return _22430_lit;
}



inline jule::Bool _11cec0de0_is_float_fmt_e(jule::U8 _24619_b,jule::Int _24628_i) {
	return ((_24628_i > 0LL) && ((_24619_b == 'e') || (_24619_b == 'E')));
}



inline jule::Bool _11cec0de0_is_float_fmt_p(jule::U8 _24719_b,jule::Int _24728_i) {
	return ((_24728_i > 0LL) && ((_24719_b == 'p') || (_24719_b == 'P')));
}



inline jule::Bool _11cec0de0_is_float_fmt_dotnp(jule::Slice<jule::U8> _24923_txt,jule::Int _24940_i) {
	if ((_24923_txt[static_cast<jule::Int>(_24940_i)] != '.')) {
		return false;
	}
	(_24940_i)++;
	_julec_label_loop:;
	_iter_begin_4697821168:;
	if (!((_24940_i < static_cast<jule::I64>(_24923_txt.len())))) { goto _iter_end_4697821168; }
	{
		jule::U8 _25713_b = _24923_txt[static_cast<jule::Int>(_24940_i)];
		{
			auto _match_expr{ true };
			if (!(_11ce22a00_is_decimal(_25713_b) == _match_expr)) { goto _case_end_4697826656; }
			_case_begin_4697826656:;
			{
				goto _iter_next_4697821168;
			}
			goto _match_end_4697826064;
			_case_end_4697826656:;
			if (!(_11cec0de0_is_float_fmt_p(_25713_b,_24940_i) == _match_expr)) { goto _case_end_4697826768; }
			_case_begin_4697826768:;
			{
				return true;
			}
			goto _match_end_4697826064;
			_case_end_4697826768:;
			_case_begin_4697826352:;
			{
				goto _iter_end_4697821168;
			}
			goto _match_end_4697826064;
			_case_end_4697826352:;
			_match_end_4697826064:;
		}
	}
	_iter_next_4697821168:;
	(_24940_i)++;
	goto _iter_begin_4697821168;
	_iter_end_4697821168:;
	return false;
}



inline jule::Bool _11cec0de0_is_float_fmt_dotp(jule::Slice<jule::U8> _26822_txt,jule::Int _26835_i) {
	{
		auto _match_expr{ true };
		if (!((static_cast<jule::I64>(_26822_txt.len()) < 3LL) == _match_expr)) { goto _case_end_4697833808; }
		_case_begin_4697833808:;
		{
			goto _case_begin_4697832960;
		}
		goto _match_end_4697832384;
		_case_end_4697833808:;
		if (!((_26822_txt[static_cast<jule::Int>(_26835_i)] != '.') == _match_expr)) { goto _case_end_4697832960; }
		_case_begin_4697832960:;
		{
			goto _case_begin_4697833072;
		}
		goto _match_end_4697832384;
		_case_end_4697832960:;
		if (!(((_26822_txt[static_cast<jule::Int>((_26835_i + 1LL))] != 'p') && (_26822_txt[static_cast<jule::Int>((_26835_i + 1LL))] != 'P')) == _match_expr)) { goto _case_end_4697833072; }
		_case_begin_4697833072:;
		{
			return false;
		}
		goto _match_end_4697832384;
		_case_end_4697833072:;
		_case_begin_4697832656:;
		{
			return true;
		}
		goto _match_end_4697832384;
		_case_end_4697832656:;
		_match_end_4697832384:;
	}
}



inline jule::Bool _11cec0de0_is_float_fmt_dotfp(jule::Slice<jule::U8> _27723_txt,jule::Int _27736_i) {
	{
		auto _match_expr{ true };
		if (!((static_cast<jule::I64>(_27723_txt.len()) < 4LL) == _match_expr)) { goto _case_end_4697842256; }
		_case_begin_4697842256:;
		{
			goto _case_begin_4697841440;
		}
		goto _match_end_4697840832;
		_case_end_4697842256:;
		if (!((_27723_txt[static_cast<jule::Int>(_27736_i)] != '.') == _match_expr)) { goto _case_end_4697841440; }
		_case_begin_4697841440:;
		{
			goto _case_begin_4697841552;
		}
		goto _match_end_4697840832;
		_case_end_4697841440:;
		if (!(((_27723_txt[static_cast<jule::Int>((_27736_i + 1LL))] != 'f') && (_27723_txt[static_cast<jule::Int>((_27736_i + 1LL))] != 'F')) == _match_expr)) { goto _case_end_4697841552; }
		_case_begin_4697841552:;
		{
			goto _case_begin_4697841664;
		}
		goto _match_end_4697840832;
		_case_end_4697841552:;
		if (!(((_27723_txt[static_cast<jule::Int>((_27736_i + 2LL))] != 'p') && (_27723_txt[static_cast<jule::Int>((_27736_i + 1LL))] != 'P')) == _match_expr)) { goto _case_end_4697841664; }
		_case_begin_4697841664:;
		{
			return false;
		}
		goto _match_end_4697840832;
		_case_end_4697841664:;
		_case_begin_4697841136:;
		{
			return true;
		}
		goto _match_end_4697840832;
		_case_end_4697841136:;
		_match_end_4697840832:;
	}
}



inline jule::Str _11cec0de0_octal_num(jule::Slice<jule::U8> _28714_txt) {
	jule::Str _28729_lit{jule::Str()};
	if ((_28714_txt[static_cast<jule::Int>(0LL)] != '0')) {
		_28729_lit = jule::Str("", 0);
		return _28729_lit;
	}
	if ((static_cast<jule::I64>(_28714_txt.len()) < 2LL)) {
		return _28729_lit;
	}
	
	jule::Int _29613_i = 1LL;
	_iter_begin_4697853136:;
	if (!((_29613_i < static_cast<jule::I64>(_28714_txt.len())))) { goto _iter_end_4697853136; }
	{
		jule::U8 _29813_b = _28714_txt[static_cast<jule::Int>(_29613_i)];
		if (_11cec0de0_is_float_fmt_e(_29813_b,_29613_i)) {
			_28729_lit = _11cec0de0_float_fmt_e(_28714_txt,_29613_i);
			return _28729_lit;
		}
		if ((!_11ce22a00_is_octal(_29813_b))) {
			goto _iter_end_4697853136;
		}
	}
	_iter_next_4697853136:;
	(_29613_i)++;
	goto _iter_begin_4697853136;
	_iter_end_4697853136:;
	if ((_29613_i == 1LL)) {
		return _28729_lit;
	}
	_28729_lit = static_cast<jule::Str>(_28714_txt.slice(0LL,static_cast<jule::Int>(_29613_i)));
	return _28729_lit;
}



inline jule::Str _11cec0de0_hex_num(jule::Slice<jule::U8> _31312_txt) {
	jule::Str _31327_lit{jule::Str()};
	if ((static_cast<jule::I64>(_31312_txt.len()) < 3LL)) {
		return _31327_lit;
	}
	if (((_31312_txt[static_cast<jule::Int>(0LL)] != '0') || ((_31312_txt[static_cast<jule::Int>(1LL)] != 'x') && (_31312_txt[static_cast<jule::Int>(1LL)] != 'X')))) {
		return _31327_lit;
	}
	
	jule::Int _32213_i = 2LL;
	_julec_label_loop:;
	_iter_begin_4697876352:;
	if (!((_32213_i < static_cast<jule::I64>(_31312_txt.len())))) { goto _iter_end_4697876352; }
	{
		jule::U8 _32513_b = _31312_txt[static_cast<jule::Int>(_32213_i)];
		{
			auto _match_expr{ true };
			if (!(_11cec0de0_is_float_fmt_dotp(_31312_txt,_32213_i) == _match_expr)) { goto _case_end_4697879904; }
			_case_begin_4697879904:;
			{
				_31327_lit = _11cec0de0_float_fmt_dotp(_31312_txt,_32213_i);
				return _31327_lit;
			}
			goto _match_end_4697879520;
			_case_end_4697879904:;
			if (!(_11cec0de0_is_float_fmt_dotfp(_31312_txt,_32213_i) == _match_expr)) { goto _case_end_4697880016; }
			_case_begin_4697880016:;
			{
				_31327_lit = _11cec0de0_float_fmt_dotfp(_31312_txt,_32213_i);
				return _31327_lit;
			}
			goto _match_end_4697879520;
			_case_end_4697880016:;
			if (!(_11cec0de0_is_float_fmt_p(_32513_b,_32213_i) == _match_expr)) { goto _case_end_4697880128; }
			_case_begin_4697880128:;
			{
				_31327_lit = _11cec0de0_float_fmt_p(_31312_txt,_32213_i);
				return _31327_lit;
			}
			goto _match_end_4697879520;
			_case_end_4697880128:;
			if (!(_11cec0de0_is_float_fmt_dotnp(_31312_txt,_32213_i) == _match_expr)) { goto _case_end_4697880240; }
			_case_begin_4697880240:;
			{
				_31327_lit = _11cec0de0_float_fmt_dotnp(_31312_txt,_32213_i);
				return _31327_lit;
			}
			goto _match_end_4697879520;
			_case_end_4697880240:;
			if (!((!_11ce22a00_is_hex(_32513_b)) == _match_expr)) { goto _case_end_4697880352; }
			_case_begin_4697880352:;
			{
				goto _iter_end_4697876352;
			}
			goto _match_end_4697879520;
			_case_end_4697880352:;
			_match_end_4697879520:;
		}
	}
	_iter_next_4697876352:;
	(_32213_i)++;
	goto _iter_begin_4697876352;
	_iter_end_4697876352:;
	if ((_32213_i == 2LL)) {
		return _31327_lit;
	}
	_31327_lit = static_cast<jule::Str>(_31312_txt.slice(0LL,static_cast<jule::Int>(_32213_i)));
	return _31327_lit;
}



inline jule::Str _11cec0de0_hex_escape(jule::Slice<jule::U8> _35015_txt,jule::Int _35028_n) {
	jule::Str _35038_seq{jule::Str()};
	if ((static_cast<jule::I64>(_35015_txt.len()) < _35028_n)) {
		return _35038_seq;
	}
	
	jule::Int _35613_i = 2LL;
	_iter_begin_4697896928:;
	if (!((_35613_i < _35028_n))) { goto _iter_end_4697896928; }
	{
		if ((!_11ce22a00_is_hex(_35015_txt[static_cast<jule::Int>(_35613_i)]))) {
			return _35038_seq;
		}
	}
	_iter_next_4697896928:;
	(_35613_i)++;
	goto _iter_begin_4697896928;
	_iter_end_4697896928:;
	_35038_seq=static_cast<jule::Str>(_35015_txt.slice(0LL,static_cast<jule::Int>(_35028_n)));
	return _35038_seq;
}



inline jule::Str _11cec0de0_big_unicode_point_escape(jule::Slice<jule::U8> _36829_txt) {
	return _11cec0de0_hex_escape(_36829_txt,10LL);
}



inline jule::Str _11cec0de0_little_unicode_point_escape(jule::Slice<jule::U8> _37132_txt) {
	return _11cec0de0_hex_escape(_37132_txt,6LL);
}



inline jule::Str _11cec0de0_hex_byte_escape(jule::Slice<jule::U8> _37420_txt) {
	return _11cec0de0_hex_escape(_37420_txt,4LL);
}



inline jule::Str _11cec0de0_byte_escape(jule::Slice<jule::U8> _37716_txt) {
	jule::Str _37731_seq{jule::Str()};
	if ((static_cast<jule::I64>(_37716_txt.len()) < 4LL)) {
		return _37731_seq;
	}
	if ((((!_11ce22a00_is_octal(_37716_txt[static_cast<jule::Int>(1LL)])) || (!_11ce22a00_is_octal(_37716_txt[static_cast<jule::Int>(2LL)]))) || (!_11ce22a00_is_octal(_37716_txt[static_cast<jule::Int>(3LL)])))) {
		return _37731_seq;
	}
	_37731_seq = static_cast<jule::Str>(_37716_txt.slice(0LL,static_cast<jule::Int>(4LL)));
	return _37731_seq;
}



inline jule::Slice<_13cfd2d20_Log> _11cec0de0_lex(jule::Ref<_11ce078a0_File> _76716_f,jule::Slice<jule::U8> _76726_text) {
	if ((!jule::real(_76716_f))) {
		return nullptr;
	}
	_11cec0de0_Lex _77213_lex = _11cec0de0_Lex(jule::Bool(),_10dba8790_Vector_0(),_76726_text,_76716_f,0LL,jule::Int(),-1LL,jule::Slice<_13cfd2d20_Log>());
	_77213_lex._method_new_line();
	_77213_lex._method_lex();
	if ((static_cast<jule::I64>(_77213_lex._field_errors.len()) > 0LL)) {
		return _77213_lex._field_errors;
	}
	_76716_f->_field__tokens=_77213_lex._field_tokens;
	return nullptr;
}



inline jule::Ref<_10e3d3fd0_FileInfo> _10e3d3fd0_parse_file(jule::Ref<_11ce078a0_File> _2223_f) {
	if ((!jule::real(_2223_f))) {
		return jule::new_ref<_10e3d3fd0_FileInfo>();
	}
	jule::Ref<_10e3d3fd0_FileInfo> _2713_finf = jule::new_struct<_10e3d3fd0_FileInfo>(new( std::nothrow ) _10e3d3fd0_FileInfo());
	std::tie(_2713_finf->_field_ast,_2713_finf->_field_errors) = _10e3d3fd0_parse_fileset(_2223_f);
	if ((_2713_finf->_field_errors != nullptr)) {
		jule::drop(_2713_finf->_field_ast);
	}
	return _2713_finf;
}



inline std::tuple<jule::Ref<_11ce19be0_Ast>,jule::Slice<_13cfd2d20_Log>> _10e3d3fd0_parse_fileset(jule::Ref<_11ce078a0_File> _5722_f) {
	jule::Ref<_10e5e45f0_Parser> _5813_p = jule::new_struct<_10e5e45f0_Parser>(new( std::nothrow ) _10e5e45f0_Parser());
	_5813_p->_method_parse(_5722_f);
	return std::make_tuple(_5813_p->_field_ast,_5813_p->_field_errors);
}



inline jule::Ref<_11ce1fd50_ScopeTree> _10e3d3e70_new_scope(void) {
	return jule::new_struct<_11ce1fd50_ScopeTree>(new( std::nothrow ) _11ce1fd50_ScopeTree());
}



inline std::tuple<jule::Bool,jule::Bool> _10e3d3e70_is_st(_11ce22a00_Token _4210_current,_11ce22a00_Token _4226_prev) {
	jule::Bool _4251_terminated{jule::Bool()};
	jule::Bool _4241_ok{jule::Bool()};
	_4241_ok=((_4210_current._field_id == 5LLU) || (_4226_prev._field_row < _4210_current._field_row));
	_4251_terminated=(_4210_current._field_id == 5LLU);
	return std::make_tuple(_4241_ok,_4251_terminated);
}



inline std::tuple<jule::Int,jule::Bool> _10e3d3e70_next_st_pos(jule::Slice<_11ce22a00_Token> _4916_tokens,jule::Int _4933_start) {
	jule::Int _5013_brace_n = 0LL;
	jule::Int _5113_i = _4933_start;
	_iter_begin_4699608736:;
	if (!((_5113_i < static_cast<jule::I64>(_4916_tokens.len())))) { goto _iter_end_4699608736; }
	{
		jule::Bool _5317_ok = false;
		jule::Bool _5417_terminated = false;
		_11ce22a00_Token _5513_tok = _4916_tokens[static_cast<jule::Int>(_5113_i)];
		if ((_5513_tok._field_id == 3LLU)) {
			{
				auto _match_expr{ _5513_tok._field_kind };
				if (!(jule::Str("{", 1) == _match_expr || jule::Str("[", 1) == _match_expr || jule::Str("(", 1) == _match_expr)) { goto _case_end_4699625840; }
				_case_begin_4699625840:;
				{
					if (((_5013_brace_n == 0LL) && (_5113_i > _4933_start))) {
						std::tie(_5317_ok,_5417_terminated) = _10e3d3e70_is_st(_5513_tok,_4916_tokens[static_cast<jule::Int>((_5113_i - 1LL))]);
						if (_5317_ok) {
							goto _julec_label_return;
						}
					}
					(_5013_brace_n)++;
					goto _iter_next_4699608736;
				}
				goto _match_end_4699616784;
				_case_end_4699625840:;
				_case_begin_4699617664:;
				{
					(_5013_brace_n)--;
					if (((_5013_brace_n == 0LL) && ((_5113_i + 1LL) < static_cast<jule::I64>(_4916_tokens.len())))) {
						std::tie(_5317_ok,_5417_terminated) = _10e3d3e70_is_st(_4916_tokens[static_cast<jule::Int>((_5113_i + 1LL))],_5513_tok);
						if (_5317_ok) {
							(_5113_i)++;
							goto _julec_label_return;
						}
					}
					goto _iter_next_4699608736;
				}
				goto _match_end_4699616784;
				_case_end_4699617664:;
				_match_end_4699616784:;
			}
		}
		if ((_5013_brace_n != 0LL)) {
			goto _iter_next_4699608736;
		} else if ((_5113_i > _4933_start)) {
			std::tie(_5317_ok,_5417_terminated) = _10e3d3e70_is_st(_5513_tok,_4916_tokens[static_cast<jule::Int>((_5113_i - 1LL))]);
		} else {
			std::tie(_5317_ok,_5417_terminated) = _10e3d3e70_is_st(_5513_tok,_5513_tok);
		}
		if ((!_5317_ok)) {
			goto _iter_next_4699608736;
		}
		_julec_label_return:;
		if (_5417_terminated) {
			(_5113_i)++;
		}
		return std::make_tuple(_5113_i,_5417_terminated);
	}
	_iter_next_4699608736:;
	(_5113_i)++;
	goto _iter_begin_4699608736;
	_iter_end_4699608736:;
	return std::make_tuple(_5113_i,false);
}



inline std::tuple<jule::Slice<_11ce22a00_Token>,jule::Bool> _10e3d3e70_skip_st(jule::Int* _10523_i,jule::Slice<_11ce22a00_Token> _10536_tokens) {
	jule::Int _1069_start = (*_10523_i);
	jule::Bool _10713_terminated = false;
	std::tie((*_10523_i),_10713_terminated) = _10e3d3e70_next_st_pos(_10536_tokens,_1069_start);
	jule::Slice<_11ce22a00_Token> _10913_st_tokens = _10536_tokens.slice(static_cast<jule::Int>(_1069_start),static_cast<jule::Int>((*_10523_i)));
	if (_10713_terminated) {
		if ((static_cast<jule::I64>(_10913_st_tokens.len()) == 1LL)) {
			return _10e3d3e70_skip_st(_10523_i,_10536_tokens);
		}
		_10913_st_tokens=_10913_st_tokens.slice(0LL,static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_10913_st_tokens.len()) - 1LL))));
	}
	return std::make_tuple(_10913_st_tokens,_10713_terminated);
}



inline jule::Slice<jule::Ref<_10e3d3e70_Stmt>> _10e3d3e70_split_stms(jule::Slice<_11ce22a00_Token> _12619_tokens) {
	jule::Slice<jule::Ref<_10e3d3e70_Stmt>> _12713_stms = nullptr;
	jule::Int _12813_pos = 0LL;
	_iter_begin_4699658496:;
	if (!((_12813_pos < static_cast<jule::I64>(_12619_tokens.len())))) { goto _iter_end_4699658496; }
	{
		jule::Slice<_11ce22a00_Token> _13018_tokens{};
		jule::Bool _13026_terminated{};
		std::tie(_13018_tokens,_13026_terminated) = _10e3d3e70_skip_st((&_12813_pos),_12619_tokens);
		_12713_stms=append(_12713_stms,jule::Slice<jule::Ref<_10e3d3e70_Stmt>>({jule::new_struct<_10e3d3e70_Stmt>(new( std::nothrow ) _10e3d3e70_Stmt(_13018_tokens,_13026_terminated))}));
	}
	_iter_next_4699658496:;
	goto _iter_begin_4699658496;
	_iter_end_4699658496:;
	return _12713_stms;
}



inline jule::Slice<_11ce22a00_Token> _10e3df5b0_is_fn_call(jule::Slice<_11ce22a00_Token> _3819_tokens) {
	{
		auto _match_expr{ _3819_tokens[static_cast<jule::Int>(0LL)]._field_id };
		if (!(3LLU == _match_expr || 2LLU == _match_expr || 1LLU == _match_expr)) { goto _case_end_4699674704; }
		goto _match_end_4699667760;
		_case_end_4699674704:;
		_case_begin_4699666176:;
		{
			_11ce22a00_Token _4613_tok = _3819_tokens[static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_3819_tokens.len()) - 1LL)))];
			if (((_4613_tok._field_id != 3LLU) && (_4613_tok._field_kind != jule::Str(")", 1)))) {
				return nullptr;
			}
		}
		goto _match_end_4699667760;
		_case_end_4699666176:;
		_match_end_4699667760:;
	}
	_11ce22a00_Token _519_tok = _3819_tokens[static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_3819_tokens.len()) - 1LL)))];
	if (((_519_tok._field_id != 3LLU) || (_519_tok._field_kind != jule::Str(")", 1)))) {
		return nullptr;
	}
	jule::Int _5513_brace_n = 0LL;
	jule::I64 _5813_i = static_cast<jule::I64>((static_cast<jule::I64>(_3819_tokens.len()) - 1LL));
	_iter_begin_4699673184:;
	if (!((_5813_i >= 1LL))) { goto _iter_end_4699673184; }
	{
		_11ce22a00_Token _6013_tok = _3819_tokens[static_cast<jule::Int>(_5813_i)];
		if ((_6013_tok._field_id == 3LLU)) {
			{
				auto _match_expr{ _6013_tok._field_kind };
				if (!(jule::Str(")", 1) == _match_expr)) { goto _case_end_4699685904; }
				_case_begin_4699685904:;
				{
					(_5513_brace_n)++;
				}
				goto _match_end_4699684976;
				_case_end_4699685904:;
				if (!(jule::Str("(", 1) == _match_expr)) { goto _case_end_4699686016; }
				_case_begin_4699686016:;
				{
					(_5513_brace_n)--;
				}
				goto _match_end_4699684976;
				_case_end_4699686016:;
				_match_end_4699684976:;
			}
			if ((_5513_brace_n == 0LL)) {
				return _3819_tokens.slice(0LL,static_cast<jule::Int>(_5813_i));
			}
		}
	}
	_iter_next_4699673184:;
	(_5813_i)--;
	goto _iter_begin_4699673184;
	_iter_end_4699673184:;
	return nullptr;
}



inline jule::Ref<_10e3df5b0_CallData> _10e3df5b0_get_call_data(jule::Slice<_11ce22a00_Token> _8022_tokens) {
	jule::Ref<_10e3df5b0_CallData> _8113_data = jule::new_struct<_10e3df5b0_CallData>(new( std::nothrow ) _10e3df5b0_CallData());
	std::tie(_8113_data->_field_expr_tokens,_8113_data->_field_args_tokens) = _10e5e45f0_range_last(_8022_tokens);
	if ((static_cast<jule::I64>(_8113_data->_field_expr_tokens.len()) == 0LL)) {
		return _8113_data;
	}
	_11ce22a00_Token _889_token = _8113_data->_field_expr_tokens[static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_8113_data->_field_expr_tokens.len()) - 1LL)))];
	if (((_889_token._field_id == 3LLU) && (_889_token._field_kind == jule::Str("]", 1)))) {
		std::tie(_8113_data->_field_expr_tokens,_8113_data->_field_generics_tokens) = _10e5e45f0_range_last(_8113_data->_field_expr_tokens);
	}
	return _8113_data;
}



inline jule::Slice<_11ce22a00_Token> _10e3df5b0_get_block_expr(jule::Slice<_11ce22a00_Token> _9623_tokens) {
	jule::Int _9713_brace_n = 0LL;
	{
		auto &__julec_range_expr = _9623_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e3df5b0_i{jule::Int()};_10e3df5b0_i = 0;
			_11ce22a00_Token _10e3df5b0_tok{_11ce22a00_Token()};_10e3df5b0_tok = *__julec_range_begin;
			_iter_begin_4699703168:;
			{
				if ((_10e3df5b0_tok._field_id == 3LLU)) {
					{
						auto _match_expr{ _10e3df5b0_tok._field_kind };
						if (!(jule::Str("{", 1) == _match_expr)) { goto _case_end_4699708800; }
						_case_begin_4699708800:;
						{
							if ((_9713_brace_n > 0LL)) {
								(_9713_brace_n)++;
								goto _match_end_4699706416;
							}
							return _9623_tokens.slice(0LL,static_cast<jule::Int>(_10e3df5b0_i));
						}
						goto _match_end_4699706416;
						_case_end_4699708800:;
						if (!(jule::Str("[", 1) == _match_expr || jule::Str("(", 1) == _match_expr)) { goto _case_end_4699708464; }
						_case_begin_4699708464:;
						{
							(_9713_brace_n)++;
						}
						goto _match_end_4699706416;
						_case_end_4699708464:;
						_case_begin_4699707296:;
						{
							(_9713_brace_n)--;
						}
						goto _match_end_4699706416;
						_case_end_4699707296:;
						_match_end_4699706416:;
					}
				}
			}
			_iter_next_4699703168:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e3df5b0_i; _10e3df5b0_tok = *__julec_range_begin; goto _iter_begin_4699703168; }
			_iter_end_4699703168:;
		}
	}
	return nullptr;
}



inline std::tuple<jule::Slice<_11ce22a00_Token>,jule::Slice<_11ce22a00_Token>> _10e3df5b0_split_colon(jule::Slice<_11ce22a00_Token> _12220_tokens) {
	jule::Int _12313_range_n = 0LL;
	{
		auto &__julec_range_expr = _12220_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e3df5b0_i{jule::Int()};_10e3df5b0_i = 0;
			_11ce22a00_Token _10e3df5b0_token{_11ce22a00_Token()};_10e3df5b0_token = *__julec_range_begin;
			_iter_begin_4699713232:;
			{
				{
					auto _match_expr{ _10e3df5b0_token._field_id };
					if (!(3LLU == _match_expr)) { goto _case_end_4699715984; }
					_case_begin_4699715984:;
					{
						{
							auto _match_expr{ _10e3df5b0_token._field_kind };
							if (!(jule::Str("{", 1) == _match_expr || jule::Str("[", 1) == _match_expr || jule::Str("(", 1) == _match_expr)) { goto _case_end_4699736128; }
							_case_begin_4699736128:;
							{
								(_12313_range_n)++;
								goto _iter_next_4699713232;
							}
							goto _match_end_4699734624;
							_case_end_4699736128:;
							_case_begin_4699716880:;
							{
								(_12313_range_n)--;
							}
							goto _match_end_4699734624;
							_case_end_4699716880:;
							_match_end_4699734624:;
						}
					}
					goto _match_end_4699715072;
					_case_end_4699715984:;
					if (!(11LLU == _match_expr)) { goto _case_end_4699716096; }
					_case_begin_4699716096:;
					{
						if ((_12313_range_n < 1LL)) {
							jule::Slice<_11ce22a00_Token> _14025_l = _12220_tokens.slice(0LL,static_cast<jule::Int>(_10e3df5b0_i));
							jule::Slice<_11ce22a00_Token> _14125_r = _12220_tokens.slice(static_cast<jule::Int>((_10e3df5b0_i + 1LL)));
							return std::make_tuple(_14025_l,_14125_r);
						}
					}
					goto _match_end_4699715072;
					_case_end_4699716096:;
					_match_end_4699715072:;
				}
			}
			_iter_next_4699713232:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e3df5b0_i; _10e3df5b0_token = *__julec_range_begin; goto _iter_begin_4699713232; }
			_iter_end_4699713232:;
		}
	}
	return std::make_tuple(nullptr,nullptr);
}



inline jule::Slice<_11ce22a00_Token> _10e3df5b0_eliminate_comments(jule::Slice<_11ce22a00_Token> _18027_tokens) {
	jule::Slice<_11ce22a00_Token> _18113_cutted = nullptr;
	{
		auto &__julec_range_expr = _18027_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_11ce22a00_Token _10e3df5b0_token{_11ce22a00_Token()};_10e3df5b0_token = *__julec_range_begin;
			_iter_begin_4699745552:;
			{
				if ((_10e3df5b0_token._field_id != 18LLU)) {
					_18113_cutted=append(_18113_cutted,jule::Slice<_11ce22a00_Token>({_10e3df5b0_token}));
				}
			}
			_iter_next_4699745552:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e3df5b0_token = *__julec_range_begin; goto _iter_begin_4699745552; }
			_iter_end_4699745552:;
		}
	}
	return _18113_cutted;
}



inline jule::Int _10e3df5b0_find_lowest_prec_op(jule::Slice<_11ce22a00_Token> _19224_tokens) {
	_10e3df5b0_Precedencer _19313_prec = _10e3df5b0_Precedencer();
	jule::Int _19413_brace_n = 0LL;
	{
		auto &__julec_range_expr = _19224_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e3df5b0_i{jule::Int()};_10e3df5b0_i = 0;
			_11ce22a00_Token _10e3df5b0_token{_11ce22a00_Token()};_10e3df5b0_token = *__julec_range_begin;
			_iter_begin_4699754848:;
			{
				{
					auto _match_expr{ true };
					if (!((_10e3df5b0_token._field_id == 3LLU) == _match_expr)) { goto _case_end_4699757376; }
					_case_begin_4699757376:;
					{
						{
							auto _match_expr{ _10e3df5b0_token._field_kind };
							if (!(jule::Str("{", 1) == _match_expr || jule::Str("(", 1) == _match_expr || jule::Str("[", 1) == _match_expr)) { goto _case_end_4699761872; }
							_case_begin_4699761872:;
							{
								(_19413_brace_n)++;
							}
							goto _match_end_4699758080;
							_case_end_4699761872:;
							_case_begin_4699758368:;
							{
								(_19413_brace_n)--;
							}
							goto _match_end_4699758080;
							_case_end_4699758368:;
							_match_end_4699758080:;
						}
						goto _iter_next_4699754848;
					}
					goto _match_end_4699757040;
					_case_end_4699757376:;
					if (!((_10e3df5b0_i == 0LL) == _match_expr)) { goto _case_end_4699757488; }
					_case_begin_4699757488:;
					{
						goto _iter_next_4699754848;
					}
					goto _match_end_4699757040;
					_case_end_4699757488:;
					if (!((_10e3df5b0_token._field_id != 7LLU) == _match_expr)) { goto _case_end_4699757600; }
					_case_begin_4699757600:;
					{
						goto _iter_next_4699754848;
					}
					goto _match_end_4699757040;
					_case_end_4699757600:;
					if (!((_19413_brace_n > 0LL) == _match_expr)) { goto _case_end_4699757728; }
					_case_begin_4699757728:;
					{
						goto _iter_next_4699754848;
					}
					goto _match_end_4699757040;
					_case_end_4699757728:;
					_match_end_4699757040:;
				}
				_11ce22a00_Token _21913_left = _19224_tokens[static_cast<jule::Int>((_10e3df5b0_i - 1LL))];
				if (((_21913_left._field_id == 7LLU) || (_21913_left._field_id == 11LLU))) {
					goto _iter_next_4699754848;
				}
				if ((((_10e3df5b0_i > 1LL) && (_21913_left._field_id == 3LLU)) && (_21913_left._field_kind == jule::Str("]", 1)))) {
					_11ce22a00_Token _22717_lleft = _19224_tokens[static_cast<jule::Int>((_10e3df5b0_i - 2LL))];
					if (((_22717_lleft._field_id == 3LLU) && (_22717_lleft._field_kind == jule::Str("[", 1)))) {
						if (((_10e3df5b0_token._field_kind == jule::Str("&", 1)) || (_10e3df5b0_token._field_kind == jule::Str("*", 1)))) {
							goto _iter_next_4699754848;
						}
					}
				}
				jule::Int _23613_p = static_cast<jule::Int>(_10e3df5b0_token._method_prec());
				if ((_23613_p != -1LL)) {
					_19313_prec._method_set(_23613_p,jule::Any(_10e3df5b0_i));
				}
			}
			_iter_next_4699754848:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e3df5b0_i; _10e3df5b0_token = *__julec_range_begin; goto _iter_begin_4699754848; }
			_iter_end_4699754848:;
		}
	}
	jule::Any _2429_data = _19313_prec._method_get_lower();
	if ((_2429_data == nullptr)) {
		return -1LL;
	}
	return _2429_data.operator jule::Int();
}



inline jule::Ref<_11ce1fd50_IdentExpr> _10e3df5b0_build_ident_expr(_11ce22a00_Token _24925_token) {
	return jule::new_struct<_11ce1fd50_IdentExpr>(new( std::nothrow ) _11ce1fd50_IdentExpr(_24925_token,_24925_token._field_kind,false));
}



inline std::tuple<jule::Slice<_11ce22a00_Token>,jule::Int> _10e3df5b0_get_range_expr_tokens(jule::Slice<_11ce22a00_Token> _25730_tokens) {
	jule::Int _25813_range_n = 0LL;
	jule::I64 _25913_i = static_cast<jule::I64>((static_cast<jule::I64>(_25730_tokens.len()) - 1LL));
	_iter_begin_4699791152:;
	if (!((_25913_i >= 0LL))) { goto _iter_end_4699791152; }
	{
		_11ce22a00_Token _26113_tok = _25730_tokens[static_cast<jule::Int>(_25913_i)];
		if ((_26113_tok._field_id == 3LLU)) {
			{
				auto _match_expr{ _26113_tok._field_kind };
				if (!(jule::Str("}", 1) == _match_expr || jule::Str("]", 1) == _match_expr || jule::Str(")", 1) == _match_expr)) { goto _case_end_4699797168; }
				_case_begin_4699797168:;
				{
					(_25813_range_n)++;
				}
				goto _match_end_4699794784;
				_case_end_4699797168:;
				_case_begin_4699795664:;
				{
					(_25813_range_n)--;
				}
				goto _match_end_4699794784;
				_case_end_4699795664:;
				_match_end_4699794784:;
			}
		}
		if ((_25813_range_n == 0LL)) {
			return std::make_tuple(_25730_tokens.slice(0LL,static_cast<jule::Int>(_25913_i)),_25813_range_n);
		}
	}
	_iter_next_4699791152:;
	(_25913_i)--;
	goto _iter_begin_4699791152;
	_iter_end_4699791152:;
	return std::make_tuple(nullptr,_25813_range_n);
}



inline jule::Bool _10e5e5b00_check_assign_tokens(jule::Slice<_11ce22a00_Token> _1624_tokens) {
	if (((static_cast<jule::I64>(_1624_tokens.len()) == 0LL) || (!_11ce22a00_is_assign(_1624_tokens[static_cast<jule::Int>(0LL)]._field_id)))) {
		return false;
	}
	jule::Int _2113_brace_n = 0LL;
	{
		auto &__julec_range_expr = _1624_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_11ce22a00_Token _10e5e5b00_t{_11ce22a00_Token()};_10e5e5b00_t = *__julec_range_begin;
			_iter_begin_4699805984:;
			{
				if ((_10e5e5b00_t._field_id == 3LLU)) {
					{
						auto _match_expr{ _10e5e5b00_t._field_kind };
						if (!(jule::Str("{", 1) == _match_expr || jule::Str("[", 1) == _match_expr || jule::Str("(", 1) == _match_expr)) { goto _case_end_4699811024; }
						_case_begin_4699811024:;
						{
							(_2113_brace_n)++;
						}
						goto _match_end_4699808640;
						_case_end_4699811024:;
						_case_begin_4699809520:;
						{
							(_2113_brace_n)--;
						}
						goto _match_end_4699808640;
						_case_end_4699809520:;
						_match_end_4699808640:;
					}
				}
				if ((_2113_brace_n < 0LL)) {
					return false;
				} else if ((_2113_brace_n > 0LL)) {
					goto _iter_next_4699805984;
				} else if (((_10e5e5b00_t._field_id == 7LLU) && _11ce22a00_is_assign_op(_10e5e5b00_t._field_kind))) {
					return true;
				}
			}
			_iter_next_4699805984:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e5e5b00_t = *__julec_range_begin; goto _iter_begin_4699805984; }
			_iter_end_4699805984:;
		}
	}
	return false;
}



inline _13cfd2d20_Log _10e5e45f0_make_err(jule::Int _5513_row,jule::Int _5523_col,jule::Ref<_11ce078a0_File> _5533_f,jule::Str _5543_key,jule::Slice<jule::Any> _5553_args) {
	return _13cfd2d20_Log(1LLU,_5513_row,_5523_col,_5533_f->_method_path(),_10d8aeab0_errorf(_5543_key,_5553_args));
}



inline jule::Slice<_11ce22a00_Token> _10e5e45f0_range(jule::Int* _7621_i,jule::Str _7630_open,jule::Str _7647_close,jule::Slice<_11ce22a00_Token> _7669_tokens) {
	if (((_7621_i == nullptr) || ((*_7621_i) >= static_cast<jule::I64>(_7669_tokens.len())))) {
		return nullptr;
	}
	_11ce22a00_Token _819_tok = _7669_tokens[static_cast<jule::Int>((*_7621_i))];
	if (((_819_tok._field_id != 3LLU) || (_819_tok._field_kind != _7630_open))) {
		return nullptr;
	}
	((*_7621_i))++;
	jule::Int _8713_range_n = 1LL;
	jule::Int _889_start = (*_7621_i);
	_iter_begin_4699832224:;
	if (!(((_8713_range_n != 0LL) && ((*_7621_i) < static_cast<jule::I64>(_7669_tokens.len()))))) { goto _iter_end_4699832224; }
	{
		_11ce22a00_Token _9013_token = _7669_tokens[static_cast<jule::Int>((*_7621_i))];
		if ((_9013_token._field_id == 3LLU)) {
			{
				auto _match_expr{ _9013_token._field_kind };
				if (!(_7630_open == _match_expr)) { goto _case_end_4699837664; }
				_case_begin_4699837664:;
				{
					(_8713_range_n)++;
				}
				goto _match_end_4699836736;
				_case_end_4699837664:;
				if (!(_7647_close == _match_expr)) { goto _case_end_4699837776; }
				_case_begin_4699837776:;
				{
					(_8713_range_n)--;
				}
				goto _match_end_4699836736;
				_case_end_4699837776:;
				_match_end_4699836736:;
			}
		}
	}
	_iter_next_4699832224:;
	((*_7621_i))++;
	goto _iter_begin_4699832224;
	_iter_end_4699832224:;
	return _7669_tokens.slice(static_cast<jule::Int>(_889_start),static_cast<jule::Int>(((*_7621_i) - 1LL)));
}



inline std::tuple<jule::Slice<_11ce22a00_Token>,jule::Slice<_11ce22a00_Token>> _10e5e45f0_range_last(jule::Slice<_11ce22a00_Token> _10919_tokens) {
	jule::Slice<_11ce22a00_Token> _10955_cut{jule::Slice<_11ce22a00_Token>()};
	jule::Slice<_11ce22a00_Token> _10938_cutted{jule::Slice<_11ce22a00_Token>()};
	if ((static_cast<jule::I64>(_10919_tokens.len()) == 0LL)) {
		_10938_cutted = _10919_tokens;
		_10955_cut = nullptr;
		return std::make_tuple(_10938_cutted,_10955_cut);
	} else if ((_10919_tokens[static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_10919_tokens.len()) - 1LL)))]._field_id != 3LLU)) {
		_10938_cutted = _10919_tokens;
		_10955_cut = nullptr;
		return std::make_tuple(_10938_cutted,_10955_cut);
	}
	jule::Int _11613_brace_n = 0LL;
	jule::I64 _11713_i = static_cast<jule::I64>((static_cast<jule::I64>(_10919_tokens.len()) - 1LL));
	_iter_begin_4699842768:;
	if (!((_11713_i >= 0LL))) { goto _iter_end_4699842768; }
	{
		_11ce22a00_Token _11913_token = _10919_tokens[static_cast<jule::Int>(_11713_i)];
		if ((_11913_token._field_id == 3LLU)) {
			{
				auto _match_expr{ _11913_token._field_kind };
				if (!(jule::Str("}", 1) == _match_expr || jule::Str("]", 1) == _match_expr || jule::Str(")", 1) == _match_expr)) { goto _case_end_4699858816; }
				_case_begin_4699858816:;
				{
					(_11613_brace_n)++;
					goto _iter_next_4699842768;
				}
				goto _match_end_4699856432;
				_case_end_4699858816:;
				_case_begin_4699857312:;
				{
					(_11613_brace_n)--;
				}
				goto _match_end_4699856432;
				_case_end_4699857312:;
				_match_end_4699856432:;
			}
		}
		if ((_11613_brace_n == 0LL)) {
			_10938_cutted = _10919_tokens.slice(0LL,static_cast<jule::Int>(_11713_i));
			_10955_cut = _10919_tokens.slice(static_cast<jule::Int>(_11713_i));
			return std::make_tuple(_10938_cutted,_10955_cut);
		}
	}
	_iter_next_4699842768:;
	(_11713_i)--;
	goto _iter_begin_4699842768;
	_iter_end_4699842768:;
	_10938_cutted = _10919_tokens;
	_10955_cut = nullptr;
	return std::make_tuple(_10938_cutted,_10955_cut);
}



inline std::tuple<jule::Slice<jule::Slice<_11ce22a00_Token>>,jule::Slice<_13cfd2d20_Log>> _10e5e45f0_parts(jule::Slice<_11ce22a00_Token> _14714_tokens,jule::Uint _14731_id,jule::Bool _14744_expr_must) {
	if ((static_cast<jule::I64>(_14714_tokens.len()) == 0LL)) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Slice<jule::Slice<_11ce22a00_Token>> _15213_parts = nullptr;
	jule::Slice<_13cfd2d20_Log> _15313_errors = nullptr;
	jule::Int _15513_range_n = 0LL;
	jule::Int _15613_last = 0LL;
	{
		auto &__julec_range_expr = _14714_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e5e45f0_i{jule::Int()};_10e5e45f0_i = 0;
			_11ce22a00_Token _10e5e45f0_token{_11ce22a00_Token()};_10e5e45f0_token = *__julec_range_begin;
			_iter_begin_4699874000:;
			{
				if ((_10e5e45f0_token._field_id == 3LLU)) {
					{
						auto _match_expr{ _10e5e45f0_token._field_kind };
						if (!(jule::Str("{", 1) == _match_expr || jule::Str("[", 1) == _match_expr || jule::Str("(", 1) == _match_expr)) { goto _case_end_4699879808; }
						_case_begin_4699879808:;
						{
							(_15513_range_n)++;
							goto _iter_next_4699874000;
						}
						goto _match_end_4699877424;
						_case_end_4699879808:;
						_case_begin_4699878304:;
						{
							(_15513_range_n)--;
						}
						goto _match_end_4699877424;
						_case_end_4699878304:;
						_match_end_4699877424:;
					}
				}
				if ((_15513_range_n > 0LL)) {
					goto _iter_next_4699874000;
				}
				if ((_10e5e45f0_token._field_id == _14731_id)) {
					if ((_14744_expr_must && ((_10e5e45f0_i - _15613_last) <= 0LL))) {
						_13cfd2d20_Log _17621_err = _10e5e45f0_make_err(_10e5e45f0_token._field_row,_10e5e45f0_token._field_column,_10e5e45f0_token._field_file,jule::Str("missing_expr", 12),jule::Slice<jule::Any>({}));
						_15313_errors=append(_15313_errors,jule::Slice<_13cfd2d20_Log>({_17621_err}));
					}
					_15213_parts=append(_15213_parts,jule::Slice<jule::Slice<_11ce22a00_Token>>({_14714_tokens.slice(static_cast<jule::Int>(_15613_last),static_cast<jule::Int>(_10e5e45f0_i))}));
					_15613_last=(_10e5e45f0_i + 1LL);
				}
			}
			_iter_next_4699874000:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e5e45f0_i; _10e5e45f0_token = *__julec_range_begin; goto _iter_begin_4699874000; }
			_iter_end_4699874000:;
		}
	}
	if ((_15613_last < static_cast<jule::I64>(_14714_tokens.len()))) {
		_15213_parts=append(_15213_parts,jule::Slice<jule::Slice<_11ce22a00_Token>>({_14714_tokens.slice(static_cast<jule::Int>(_15613_last))}));
	} else if ((!_14744_expr_must)) {
		_15213_parts=append(_15213_parts,jule::Slice<jule::Slice<_11ce22a00_Token>>({jule::Slice<_11ce22a00_Token>({})}));
	}
	return std::make_tuple(_15213_parts,_15313_errors);
}



inline _13cfd2d20_Log _10e5e45f0_compiler_err(_11ce22a00_Token _19317_token,jule::Str _19331_key,jule::Slice<jule::Any> _19341_args) {
	return _13cfd2d20_Log(1LLU,_19317_token._field_row,_19317_token._field_column,_19317_token._field_file->_method_path(),_10d8aeab0_errorf(_19331_key,_19341_args));
}



inline jule::Ref<_11ce1fd50_Comment> _10e5e45f0_build_comment(_11ce22a00_Token _20322_token) {
	_20322_token._field_kind=_20322_token._field_kind.slice(static_cast<jule::Int>(2LL)).trim(jule::Str(" \n\r\t\v", 5));
	return jule::new_struct<_11ce1fd50_Comment>(new( std::nothrow ) _11ce1fd50_Comment(_20322_token,_20322_token._field_kind));
}



inline jule::Str _10e5e45f0_tokstoa(jule::Slice<_11ce22a00_Token> _21212_tokens) {
	jule::Str _21313_s = jule::Str("", 0);
	{
		auto &__julec_range_expr = _21212_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_11ce22a00_Token _10e5e45f0_token{_11ce22a00_Token()};_10e5e45f0_token = *__julec_range_begin;
			_iter_begin_4699912656:;
			{
				_21313_s+=_10e5e45f0_token._field_kind;
			}
			_iter_next_4699912656:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e5e45f0_token = *__julec_range_begin; goto _iter_begin_4699912656; }
			_iter_end_4699912656:;
		}
	}
	return _21313_s;
}



inline jule::Ref<_11ce1fd50_TypeDecl> _10e7e4720_build_void_type(void) {
	return jule::new_struct<_11ce1fd50_TypeDecl>(new( std::nothrow ) _11ce1fd50_TypeDecl());
}



inline jule::Ref<_11ce1fd50_TypeDecl> _10e7e4720_build_prim_type(_11ce22a00_Token _1924_token) {
	return jule::new_struct<_11ce1fd50_TypeDecl>(new( std::nothrow ) _11ce1fd50_TypeDecl(_1924_token,jule::new_struct<_11ce1fd50_IdentTypeDecl>(new( std::nothrow ) _11ce1fd50_IdentTypeDecl(_1924_token,_1924_token._field_kind,false,nullptr))));
}



inline std::tuple<jule::Slice<_11ce22a00_Token>,jule::Int> _10e7e4720_split_map_range(jule::Slice<_11ce22a00_Token> _3431_tokens,jule::Int* _3452_i) {
	jule::Int _3486_colon{jule::Int()};
	jule::Slice<_11ce22a00_Token> _3463_range_tokens{jule::Slice<_11ce22a00_Token>()};
	_3486_colon=-1LL;
	jule::Int _3613_range_n = 0LL;
	jule::Int _379_start = (*_3452_i);
	_iter_begin_4699922224:;
	if (!(((*_3452_i) < static_cast<jule::I64>(_3431_tokens.len())))) { goto _iter_end_4699922224; }
	{
		_11ce22a00_Token _3913_token = _3431_tokens[static_cast<jule::Int>((*_3452_i))];
		if ((_3913_token._field_id == 3LLU)) {
			{
				auto _match_expr{ _3913_token._field_kind };
				if (!(jule::Str("{", 1) == _match_expr || jule::Str("[", 1) == _match_expr || jule::Str("(", 1) == _match_expr)) { goto _case_end_4699928896; }
				_case_begin_4699928896:;
				{
					(_3613_range_n)++;
					goto _iter_next_4699922224;
				}
				goto _match_end_4699926512;
				_case_end_4699928896:;
				_case_begin_4699927392:;
				{
					(_3613_range_n)--;
				}
				goto _match_end_4699926512;
				_case_end_4699927392:;
				_match_end_4699926512:;
			}
		}
		if ((_3613_range_n == 0LL)) {
			if (((_379_start + 1LL) > (*_3452_i))) {
				return std::make_tuple(_3463_range_tokens,_3486_colon);
			}
			_3463_range_tokens=_3431_tokens.slice(static_cast<jule::Int>((_379_start + 1LL)),static_cast<jule::Int>((*_3452_i)));
			goto _iter_end_4699922224;
		} else if ((_3613_range_n != 1LL)) {
			goto _iter_next_4699922224;
		}
		if (((_3486_colon == -1LL) && (_3913_token._field_id == 11LLU))) {
			_3486_colon=(((*_3452_i) - _379_start) - 1LL);
		}
	}
	_iter_next_4699922224:;
	((*_3452_i))++;
	goto _iter_begin_4699922224;
	_iter_end_4699922224:;
	return std::make_tuple(_3463_range_tokens,_3486_colon);
}



inline jule::Ref<_10f4ed830_Const> _10f4ed830_new_i64(jule::I64 _1216_x) {
	return jule::new_struct<_10f4ed830_Const>(new( std::nothrow ) _10f4ed830_Const(_1216_x));
}



inline jule::Ref<_10f4ed830_Const> _10f4ed830_new_u64(jule::U64 _1416_x) {
	return jule::new_struct<_10f4ed830_Const>(new( std::nothrow ) _10f4ed830_Const(_1416_x));
}



inline jule::Ref<_10f4ed830_Const> _10f4ed830_new_bool(jule::Bool _1617_x) {
	return jule::new_struct<_10f4ed830_Const>(new( std::nothrow ) _10f4ed830_Const(_1617_x));
}



inline jule::Ref<_10f4ed830_Const> _10f4ed830_new_str(jule::Str _1816_x) {
	return jule::new_struct<_10f4ed830_Const>(new( std::nothrow ) _10f4ed830_Const(_1816_x));
}



inline jule::Ref<_10f4ed830_Const> _10f4ed830_new_f64(jule::F64 _2016_x) {
	return jule::new_struct<_10f4ed830_Const>(new( std::nothrow ) _10f4ed830_Const(_2016_x));
}



inline jule::Ref<_10f4ed830_Const> _10f4ed830_new_nil(void) {
	return jule::new_struct<_10f4ed830_Const>(new( std::nothrow ) _10f4ed830_Const(nullptr));
}



inline void _10f4ed830_lshift_unsig(_10f4ed830_Const* _53028_c,_10f4ed830_Const _53039_x) {
	jule::U64 _5319_l = static_cast<jule::U64>(_53028_c->_method_as_u64());
	jule::U64 _5329_r = static_cast<jule::U64>(_53039_x._method_as_u64());
	_53028_c->_method_set_u64((_5319_l << _5329_r));
}



inline void _10f4ed830_rshift_unsig(_10f4ed830_Const* _53628_c,_10f4ed830_Const _53639_x) {
	jule::U64 _5379_l = static_cast<jule::U64>(_53628_c->_method_as_u64());
	jule::U64 _5389_r = static_cast<jule::U64>(_53639_x._method_as_u64());
	_53628_c->_method_set_u64((_5379_l >> _5389_r));
}



inline jule::Str _10f521350_real_kind_of(jule::Str _4121_kind) {
	{
		auto _match_expr{ _4121_kind };
		if (!(jule::Str("int", 3) == _match_expr)) { goto _case_end_4703686304; }
		_case_begin_4703686304:;
		{
			return _10f521350_SYS_INT;
		}
		goto _match_end_4703680832;
		_case_end_4703686304:;
		if (!(jule::Str("uint", 4) == _match_expr || jule::Str("uintptr", 7) == _match_expr)) { goto _case_end_4703686416; }
		_case_begin_4703686416:;
		{
			return _10f521350_SYS_UINT;
		}
		goto _match_end_4703680832;
		_case_end_4703686416:;
		_case_begin_4703680256:;
		{
			return _4121_kind;
		}
		goto _match_end_4703680832;
		_case_end_4703680256:;
		_match_end_4703680832:;
	}
}



inline jule::Int _10f521350_bitsize_of(jule::Str _5719_k) {
	{
		auto _match_expr{ _5719_k };
		if (!(jule::Str("i8", 2) == _match_expr || jule::Str("u8", 2) == _match_expr)) { goto _case_end_4703690064; }
		_case_begin_4703690064:;
		{
			return 8LL;
		}
		goto _match_end_4703687552;
		_case_end_4703690064:;
		if (!(jule::Str("i16", 3) == _match_expr || jule::Str("u16", 3) == _match_expr)) { goto _case_end_4703690176; }
		_case_begin_4703690176:;
		{
			return 16LL;
		}
		goto _match_end_4703687552;
		_case_end_4703690176:;
		if (!(jule::Str("i32", 3) == _match_expr || jule::Str("u32", 3) == _match_expr || jule::Str("f32", 3) == _match_expr)) { goto _case_end_4703690304; }
		_case_begin_4703690304:;
		{
			return 32LL;
		}
		goto _match_end_4703687552;
		_case_end_4703690304:;
		if (!(jule::Str("i64", 3) == _match_expr || jule::Str("u64", 3) == _match_expr || jule::Str("f64", 3) == _match_expr)) { goto _case_end_4703690432; }
		_case_begin_4703690432:;
		{
			return 64LL;
		}
		goto _match_end_4703687552;
		_case_end_4703690432:;
		if (!(jule::Str("uint", 4) == _match_expr || jule::Str("int", 3) == _match_expr)) { goto _case_end_4703690560; }
		_case_begin_4703690560:;
		{
			return 64LL;
		}
		goto _match_end_4703687552;
		_case_end_4703690560:;
		_case_begin_4703687840:;
		{
			return -1LL;
		}
		goto _match_end_4703687552;
		_case_end_4703687840:;
		_match_end_4703687552:;
	}
}



inline jule::Str _10f521350_int_from_bits(jule::U64 _8922_bits) {
	{
		auto _match_expr{ _8922_bits };
		if (!(8LL == _match_expr)) { goto _case_end_4703696144; }
		_case_begin_4703696144:;
		{
			return jule::Str("i8", 2);
		}
		goto _match_end_4703695984;
		_case_end_4703696144:;
		if (!(16LL == _match_expr)) { goto _case_end_4703696256; }
		_case_begin_4703696256:;
		{
			return jule::Str("i16", 3);
		}
		goto _match_end_4703695984;
		_case_end_4703696256:;
		if (!(32LL == _match_expr)) { goto _case_end_4703696368; }
		_case_begin_4703696368:;
		{
			return jule::Str("i32", 3);
		}
		goto _match_end_4703695984;
		_case_end_4703696368:;
		if (!(64LL == _match_expr)) { goto _case_end_4703697008; }
		_case_begin_4703697008:;
		{
			return jule::Str("i64", 3);
		}
		goto _match_end_4703695984;
		_case_end_4703697008:;
		_case_begin_4703688448:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4703695984;
		_case_end_4703688448:;
		_match_end_4703695984:;
	}
}



inline jule::Str _10f521350_uint_from_bits(jule::U64 _10223_bits) {
	{
		auto _match_expr{ _10223_bits };
		if (!(8LL == _match_expr)) { goto _case_end_4703701568; }
		_case_begin_4703701568:;
		{
			return jule::Str("u8", 2);
		}
		goto _match_end_4703701344;
		_case_end_4703701568:;
		if (!(16LL == _match_expr)) { goto _case_end_4703698336; }
		_case_begin_4703698336:;
		{
			return jule::Str("u16", 3);
		}
		goto _match_end_4703701344;
		_case_end_4703698336:;
		if (!(32LL == _match_expr)) { goto _case_end_4703698448; }
		_case_begin_4703698448:;
		{
			return jule::Str("u32", 3);
		}
		goto _match_end_4703701344;
		_case_end_4703698448:;
		if (!(64LL == _match_expr)) { goto _case_end_4703698560; }
		_case_begin_4703698560:;
		{
			return jule::Str("u64", 3);
		}
		goto _match_end_4703701344;
		_case_end_4703698560:;
		_case_begin_4703698816:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4703701344;
		_case_end_4703698816:;
		_match_end_4703701344:;
	}
}



inline jule::Str _10f521350_float_from_bits(jule::U64 _11624_bits) {
	{
		auto _match_expr{ _11624_bits };
		if (!(32LL == _match_expr)) { goto _case_end_4703706464; }
		_case_begin_4703706464:;
		{
			return jule::Str("f32", 3);
		}
		goto _match_end_4703706240;
		_case_end_4703706464:;
		if (!(64LL == _match_expr)) { goto _case_end_4703703408; }
		_case_begin_4703703408:;
		{
			return jule::Str("f64", 3);
		}
		goto _match_end_4703706240;
		_case_end_4703703408:;
		_case_begin_4703700688:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4703706240;
		_case_end_4703700688:;
		_match_end_4703706240:;
	}
}



inline jule::Bool _10f521350_check_bit_float(jule::Str _14124_val,jule::Int _14134_bit) {
	jule::Int _14213_err{};
	std::tie(std::ignore,_14213_err) = _10cec8240_parse_float(_14124_val,_14134_bit);
	return (_14213_err == 0LLU);
}



inline jule::U64 _10f521350_bitsize_of_float(jule::F64 _15125_x) {
	{
		auto _match_expr{ true };
		if (!(((-3.4028234663852886e+38 <= _15125_x) && (_15125_x <= 3.4028234663852886e+38)) == _match_expr)) { goto _case_end_4703732624; }
		_case_begin_4703732624:;
		{
			return 32LL;
		}
		goto _match_end_4703730640;
		_case_end_4703732624:;
		_case_begin_4703731488:;
		{
			return 64LL;
		}
		goto _match_end_4703730640;
		_case_end_4703731488:;
		_match_end_4703730640:;
	}
}



inline jule::U64 _10f521350_bitsize_of_int(jule::I64 _16523_x) {
	{
		auto _match_expr{ true };
		if (!(((-128LL <= _16523_x) && (_16523_x <= 127LL)) == _match_expr)) { goto _case_end_4703736032; }
		_case_begin_4703736032:;
		{
			return 8LL;
		}
		goto _match_end_4703731296;
		_case_end_4703736032:;
		if (!(((-32768LL <= _16523_x) && (_16523_x <= 32767LL)) == _match_expr)) { goto _case_end_4703736144; }
		_case_begin_4703736144:;
		{
			return 16LL;
		}
		goto _match_end_4703731296;
		_case_end_4703736144:;
		if (!(((-2147483648LL <= _16523_x) && (_16523_x <= 2147483647LL)) == _match_expr)) { goto _case_end_4703735504; }
		_case_begin_4703735504:;
		{
			return 32LL;
		}
		goto _match_end_4703731296;
		_case_end_4703735504:;
		_case_begin_4703734896:;
		{
			return 64LL;
		}
		goto _match_end_4703731296;
		_case_end_4703734896:;
		_match_end_4703731296:;
	}
}



inline jule::U64 _10f521350_bitsize_of_uint(jule::U64 _18124_x) {
	{
		auto _match_expr{ true };
		if (!((_18124_x <= 255LL) == _match_expr)) { goto _case_end_4703742928; }
		_case_begin_4703742928:;
		{
			return 8LL;
		}
		goto _match_end_4703740208;
		_case_end_4703742928:;
		if (!((_18124_x <= 65535LL) == _match_expr)) { goto _case_end_4703743040; }
		_case_begin_4703743040:;
		{
			return 16LL;
		}
		goto _match_end_4703740208;
		_case_end_4703743040:;
		if (!((_18124_x <= 4294967295LL) == _match_expr)) { goto _case_end_4703742480; }
		_case_begin_4703742480:;
		{
			return 32LL;
		}
		goto _match_end_4703740208;
		_case_end_4703742480:;
		_case_begin_4703741824:;
		{
			return 64LL;
		}
		goto _match_end_4703740208;
		_case_end_4703741824:;
		_match_end_4703740208:;
	}
}



inline void _10f521350_init(void) {
	{
		auto _match_expr{ 64LL };
		if (!(32LL == _match_expr)) { goto _case_end_4703745728; }
		_case_begin_4703745728:;
		{
			{
				(*(&_10f521350_SYS_INT))=jule::Str("i32", 3);
				(*(&_10f521350_SYS_UINT))=jule::Str("u32", 3);
			}
		}
		goto _match_end_4703744816;
		_case_end_4703745728:;
		if (!(64LL == _match_expr)) { goto _case_end_4703745840; }
		_case_begin_4703745840:;
		{
			{
				(*(&_10f521350_SYS_INT))=jule::Str("i64", 3);
				(*(&_10f521350_SYS_UINT))=jule::Str("u64", 3);
			}
		}
		goto _match_end_4703744816;
		_case_end_4703745840:;
		_match_end_4703744816:;
	}
}



inline jule::F64 _10f53b9f0_min_of(jule::Str _4319_k) {
	_4319_k=_10f521350_real_kind_of(_4319_k);
	{
		auto _match_expr{ _4319_k };
		if (!(jule::Str("i8", 2) == _match_expr)) { goto _case_end_4703754080; }
		_case_begin_4703754080:;
		{
			return -128LL;
		}
		goto _match_end_4703752560;
		_case_end_4703754080:;
		if (!(jule::Str("i16", 3) == _match_expr)) { goto _case_end_4703754192; }
		_case_begin_4703754192:;
		{
			return -32768LL;
		}
		goto _match_end_4703752560;
		_case_end_4703754192:;
		if (!(jule::Str("i32", 3) == _match_expr)) { goto _case_end_4703754304; }
		_case_begin_4703754304:;
		{
			return -2147483648LL;
		}
		goto _match_end_4703752560;
		_case_end_4703754304:;
		if (!(jule::Str("i64", 3) == _match_expr)) { goto _case_end_4703754416; }
		_case_begin_4703754416:;
		{
			return jule::MIN_I64;
		}
		goto _match_end_4703752560;
		_case_end_4703754416:;
		if (!(jule::Str("f32", 3) == _match_expr)) { goto _case_end_4703753152; }
		_case_begin_4703753152:;
		{
			return -3.4028234663852886e+38;
		}
		goto _match_end_4703752560;
		_case_end_4703753152:;
		if (!(jule::Str("f64", 3) == _match_expr)) { goto _case_end_4703753264; }
		_case_begin_4703753264:;
		{
			return jule::MIN_F64;
		}
		goto _match_end_4703752560;
		_case_end_4703753264:;
		_case_begin_4703747536:;
		{
			return 0LL;
		}
		goto _match_end_4703752560;
		_case_end_4703747536:;
		_match_end_4703752560:;
	}
}



inline jule::F64 _10f53b9f0_max_of(jule::Str _5819_k) {
	_5819_k=_10f521350_real_kind_of(_5819_k);
	{
		auto _match_expr{ _5819_k };
		if (!(jule::Str("i8", 2) == _match_expr)) { goto _case_end_4703761344; }
		_case_begin_4703761344:;
		{
			return 127LL;
		}
		goto _match_end_4703760384;
		_case_end_4703761344:;
		if (!(jule::Str("i16", 3) == _match_expr)) { goto _case_end_4703760912; }
		_case_begin_4703760912:;
		{
			return 32767LL;
		}
		goto _match_end_4703760384;
		_case_end_4703760912:;
		if (!(jule::Str("i32", 3) == _match_expr)) { goto _case_end_4703761024; }
		_case_begin_4703761024:;
		{
			return 2147483647LL;
		}
		goto _match_end_4703760384;
		_case_end_4703761024:;
		if (!(jule::Str("i64", 3) == _match_expr)) { goto _case_end_4703761136; }
		_case_begin_4703761136:;
		{
			return jule::MAX_I64;
		}
		goto _match_end_4703760384;
		_case_end_4703761136:;
		if (!(jule::Str("u8", 2) == _match_expr)) { goto _case_end_4703761792; }
		_case_begin_4703761792:;
		{
			return 255LL;
		}
		goto _match_end_4703760384;
		_case_end_4703761792:;
		if (!(jule::Str("u16", 3) == _match_expr)) { goto _case_end_4703761904; }
		_case_begin_4703761904:;
		{
			return 65535LL;
		}
		goto _match_end_4703760384;
		_case_end_4703761904:;
		if (!(jule::Str("u32", 3) == _match_expr)) { goto _case_end_4703762016; }
		_case_begin_4703762016:;
		{
			return 4294967295LL;
		}
		goto _match_end_4703760384;
		_case_end_4703762016:;
		if (!(jule::Str("u64", 3) == _match_expr)) { goto _case_end_4703762128; }
		_case_begin_4703762128:;
		{
			return jule::MAX_U64;
		}
		goto _match_end_4703760384;
		_case_end_4703762128:;
		if (!(jule::Str("f32", 3) == _match_expr)) { goto _case_end_4703762240; }
		_case_begin_4703762240:;
		{
			return 3.4028234663852886e+38;
		}
		goto _match_end_4703760384;
		_case_end_4703762240:;
		if (!(jule::Str("f64", 3) == _match_expr)) { goto _case_end_4703762352; }
		_case_begin_4703762352:;
		{
			return jule::MAX_F64;
		}
		goto _match_end_4703760384;
		_case_end_4703762352:;
		_case_begin_4703760496:;
		{
			return 0LL;
		}
		goto _match_end_4703760384;
		_case_end_4703760496:;
		_match_end_4703760384:;
	}
}



inline jule::Bool _10f51ba00_is_i8_compatible(jule::Str _629_k) {
	_629_k=_10f521350_real_kind_of(_629_k);
	return (_629_k == jule::Str("i8", 2));
}



inline jule::Bool _10f51ba00_is_i16_compatible(jule::Str _1230_k) {
	_1230_k=_10f521350_real_kind_of(_1230_k);
	return (((_1230_k == jule::Str("i8", 2)) || (_1230_k == jule::Str("i16", 3))) || (_1230_k == jule::Str("u8", 2)));
}



inline jule::Bool _10f51ba00_is_i32_compatible(jule::Str _2230_k) {
	_2230_k=_10f521350_real_kind_of(_2230_k);
	return (((((_2230_k == jule::Str("i8", 2)) || (_2230_k == jule::Str("i16", 3))) || (_2230_k == jule::Str("i32", 3))) || (_2230_k == jule::Str("u8", 2))) || (_2230_k == jule::Str("u16", 3)));
}



inline jule::Bool _10f51ba00_is_i64_compatible(jule::Str _3430_k) {
	_3430_k=_10f521350_real_kind_of(_3430_k);
	return (((((((_3430_k == jule::Str("i8", 2)) || (_3430_k == jule::Str("i16", 3))) || (_3430_k == jule::Str("i32", 3))) || (_3430_k == jule::Str("i64", 3))) || (_3430_k == jule::Str("u8", 2))) || (_3430_k == jule::Str("u16", 3))) || (_3430_k == jule::Str("u32", 3)));
}



inline jule::Bool _10f51ba00_is_u8_compatible(jule::Str _4829_k) {
	_4829_k=_10f521350_real_kind_of(_4829_k);
	return (_4829_k == jule::Str("u8", 2));
}



inline jule::Bool _10f51ba00_is_u16_compatible(jule::Str _5430_k) {
	_5430_k=_10f521350_real_kind_of(_5430_k);
	return ((_5430_k == jule::Str("u8", 2)) || (_5430_k == jule::Str("u16", 3)));
}



inline jule::Bool _10f51ba00_is_u32_compatible(jule::Str _6030_k) {
	_6030_k=_10f521350_real_kind_of(_6030_k);
	return (((_6030_k == jule::Str("u8", 2)) || (_6030_k == jule::Str("u16", 3))) || (_6030_k == jule::Str("u32", 3)));
}



inline jule::Bool _10f51ba00_is_u64_compatible(jule::Str _7030_k) {
	_7030_k=_10f521350_real_kind_of(_7030_k);
	return ((((_7030_k == jule::Str("u8", 2)) || (_7030_k == jule::Str("u16", 3))) || (_7030_k == jule::Str("u32", 3))) || (_7030_k == jule::Str("u64", 3)));
}



inline jule::Bool _10f51ba00_is_f32_compatible(jule::Str _8130_k) {
	_8130_k=_10f521350_real_kind_of(_8130_k);
	return (((((((((_8130_k == jule::Str("f32", 3)) || (_8130_k == jule::Str("i8", 2))) || (_8130_k == jule::Str("i16", 3))) || (_8130_k == jule::Str("i32", 3))) || (_8130_k == jule::Str("i64", 3))) || (_8130_k == jule::Str("u8", 2))) || (_8130_k == jule::Str("u16", 3))) || (_8130_k == jule::Str("u32", 3))) || (_8130_k == jule::Str("u64", 3)));
}



inline jule::Bool _10f51ba00_is_f64_compatible(jule::Str _9730_k) {
	_9730_k=_10f521350_real_kind_of(_9730_k);
	return ((((((((((_9730_k == jule::Str("f64", 3)) || (_9730_k == jule::Str("f32", 3))) || (_9730_k == jule::Str("i8", 2))) || (_9730_k == jule::Str("i16", 3))) || (_9730_k == jule::Str("i32", 3))) || (_9730_k == jule::Str("i64", 3))) || (_9730_k == jule::Str("u8", 2))) || (_9730_k == jule::Str("u16", 3))) || (_9730_k == jule::Str("u32", 3))) || (_9730_k == jule::Str("u64", 3)));
}



inline jule::Bool _10f51ba00_types_are_compatible(jule::Str _11633_k1,jule::Str _11642_k2) {
	_11633_k1=_10f521350_real_kind_of(_11633_k1);
	{
		auto _match_expr{ _11633_k1 };
		if (!(jule::Str("any", 3) == _match_expr)) { goto _case_end_4703811472; }
		_case_begin_4703811472:;
		{
			return true;
		}
		goto _match_end_4703810928;
		_case_end_4703811472:;
		if (!(jule::Str("i8", 2) == _match_expr)) { goto _case_end_4703811584; }
		_case_begin_4703811584:;
		{
			return _10f51ba00_is_i8_compatible(_11642_k2);
		}
		goto _match_end_4703810928;
		_case_end_4703811584:;
		if (!(jule::Str("i16", 3) == _match_expr)) { goto _case_end_4703811696; }
		_case_begin_4703811696:;
		{
			return _10f51ba00_is_i16_compatible(_11642_k2);
		}
		goto _match_end_4703810928;
		_case_end_4703811696:;
		if (!(jule::Str("i32", 3) == _match_expr)) { goto _case_end_4703812480; }
		_case_begin_4703812480:;
		{
			return _10f51ba00_is_i32_compatible(_11642_k2);
		}
		goto _match_end_4703810928;
		_case_end_4703812480:;
		if (!(jule::Str("i64", 3) == _match_expr)) { goto _case_end_4703812592; }
		_case_begin_4703812592:;
		{
			return _10f51ba00_is_i64_compatible(_11642_k2);
		}
		goto _match_end_4703810928;
		_case_end_4703812592:;
		if (!(jule::Str("u8", 2) == _match_expr)) { goto _case_end_4703812704; }
		_case_begin_4703812704:;
		{
			return _10f51ba00_is_u8_compatible(_11642_k2);
		}
		goto _match_end_4703810928;
		_case_end_4703812704:;
		if (!(jule::Str("u16", 3) == _match_expr)) { goto _case_end_4703812816; }
		_case_begin_4703812816:;
		{
			return _10f51ba00_is_u16_compatible(_11642_k2);
		}
		goto _match_end_4703810928;
		_case_end_4703812816:;
		if (!(jule::Str("u32", 3) == _match_expr)) { goto _case_end_4703812976; }
		_case_begin_4703812976:;
		{
			return _10f51ba00_is_u32_compatible(_11642_k2);
		}
		goto _match_end_4703810928;
		_case_end_4703812976:;
		if (!(jule::Str("u64", 3) == _match_expr)) { goto _case_end_4703813088; }
		_case_begin_4703813088:;
		{
			return _10f51ba00_is_u64_compatible(_11642_k2);
		}
		goto _match_end_4703810928;
		_case_end_4703813088:;
		if (!(jule::Str("f32", 3) == _match_expr)) { goto _case_end_4703813200; }
		_case_begin_4703813200:;
		{
			return _10f51ba00_is_f32_compatible(_11642_k2);
		}
		goto _match_end_4703810928;
		_case_end_4703813200:;
		if (!(jule::Str("f64", 3) == _match_expr)) { goto _case_end_4703813312; }
		_case_begin_4703813312:;
		{
			return _10f51ba00_is_f64_compatible(_11642_k2);
		}
		goto _match_end_4703810928;
		_case_end_4703813312:;
		if (!(jule::Str("bool", 4) == _match_expr)) { goto _case_end_4703813424; }
		_case_begin_4703813424:;
		{
			return (_11642_k2 == jule::Str("bool", 4));
		}
		goto _match_end_4703810928;
		_case_end_4703813424:;
		if (!(jule::Str("str", 3) == _match_expr)) { goto _case_end_4703813536; }
		_case_begin_4703813536:;
		{
			return (_11642_k2 == jule::Str("str", 3));
		}
		goto _match_end_4703810928;
		_case_end_4703813536:;
		_case_begin_4703811040:;
		{
			return false;
		}
		goto _match_end_4703810928;
		_case_end_4703811040:;
		_match_end_4703810928:;
	}
}



inline jule::Bool _10f51ba00_is_i16_greater(jule::Str _13727_k) {
	_13727_k=_10f521350_real_kind_of(_13727_k);
	return (_13727_k == jule::Str("u8", 2));
}



inline jule::Bool _10f51ba00_is_i32_greater(jule::Str _14327_k) {
	_14327_k=_10f521350_real_kind_of(_14327_k);
	return ((_14327_k == jule::Str("i8", 2)) || (_14327_k == jule::Str("i16", 3)));
}



inline jule::Bool _10f51ba00_is_i64_greater(jule::Str _14927_k) {
	_14927_k=_10f521350_real_kind_of(_14927_k);
	return (((_14927_k == jule::Str("i8", 2)) || (_14927_k == jule::Str("i16", 3))) || (_14927_k == jule::Str("i32", 3)));
}



inline jule::Bool _10f51ba00_is_u8_greater(jule::Str _15926_k) {
	_15926_k=_10f521350_real_kind_of(_15926_k);
	return (_15926_k == jule::Str("i8", 2));
}



inline jule::Bool _10f51ba00_is_u16_greater(jule::Str _16527_k) {
	_16527_k=_10f521350_real_kind_of(_16527_k);
	return (((_16527_k == jule::Str("u8", 2)) || (_16527_k == jule::Str("i8", 2))) || (_16527_k == jule::Str("i16", 3)));
}



inline jule::Bool _10f51ba00_is_u32_greater(jule::Str _17527_k) {
	_17527_k=_10f521350_real_kind_of(_17527_k);
	return (((((_17527_k == jule::Str("u8", 2)) || (_17527_k == jule::Str("u16", 3))) || (_17527_k == jule::Str("i8", 2))) || (_17527_k == jule::Str("i16", 3))) || (_17527_k == jule::Str("i32", 3)));
}



inline jule::Bool _10f51ba00_is_u64_greater(jule::Str _18727_k) {
	_18727_k=_10f521350_real_kind_of(_18727_k);
	return (((((((_18727_k == jule::Str("u8", 2)) || (_18727_k == jule::Str("u16", 3))) || (_18727_k == jule::Str("u32", 3))) || (_18727_k == jule::Str("i8", 2))) || (_18727_k == jule::Str("i16", 3))) || (_18727_k == jule::Str("i32", 3))) || (_18727_k == jule::Str("i64", 3)));
}



inline jule::Bool _10f51ba00_is_f32_greater(jule::Str _20123_k) {
	return (_20123_k != jule::Str("f64", 3));
}



inline jule::Bool _10f51ba00_is_f64_greater(jule::Str _20323_k) {
	return true;
}



inline jule::Bool _10f51ba00_is_greater(jule::Str _20623_k1,jule::Str _20632_k2) {
	_20623_k1=_10f521350_real_kind_of(_20623_k1);
	{
		auto _match_expr{ _20623_k1 };
		if (!(jule::Str("i16", 3) == _match_expr)) { goto _case_end_4703853088; }
		_case_begin_4703853088:;
		{
			return _10f51ba00_is_i16_greater(_20632_k2);
		}
		goto _match_end_4703852544;
		_case_end_4703853088:;
		if (!(jule::Str("i32", 3) == _match_expr)) { goto _case_end_4703853200; }
		_case_begin_4703853200:;
		{
			return _10f51ba00_is_i32_greater(_20632_k2);
		}
		goto _match_end_4703852544;
		_case_end_4703853200:;
		if (!(jule::Str("i64", 3) == _match_expr)) { goto _case_end_4703853312; }
		_case_begin_4703853312:;
		{
			return _10f51ba00_is_i64_greater(_20632_k2);
		}
		goto _match_end_4703852544;
		_case_end_4703853312:;
		if (!(jule::Str("u16", 3) == _match_expr)) { goto _case_end_4703854096; }
		_case_begin_4703854096:;
		{
			return _10f51ba00_is_u16_greater(_20632_k2);
		}
		goto _match_end_4703852544;
		_case_end_4703854096:;
		if (!(jule::Str("u8", 2) == _match_expr)) { goto _case_end_4703854208; }
		_case_begin_4703854208:;
		{
			return _10f51ba00_is_u8_greater(_20632_k2);
		}
		goto _match_end_4703852544;
		_case_end_4703854208:;
		if (!(jule::Str("u32", 3) == _match_expr)) { goto _case_end_4703854320; }
		_case_begin_4703854320:;
		{
			return _10f51ba00_is_u32_greater(_20632_k2);
		}
		goto _match_end_4703852544;
		_case_end_4703854320:;
		if (!(jule::Str("u64", 3) == _match_expr)) { goto _case_end_4703854432; }
		_case_begin_4703854432:;
		{
			return _10f51ba00_is_u64_greater(_20632_k2);
		}
		goto _match_end_4703852544;
		_case_end_4703854432:;
		if (!(jule::Str("f32", 3) == _match_expr)) { goto _case_end_4703854592; }
		_case_begin_4703854592:;
		{
			return _10f51ba00_is_f32_greater(_20632_k2);
		}
		goto _match_end_4703852544;
		_case_end_4703854592:;
		if (!(jule::Str("f64", 3) == _match_expr)) { goto _case_end_4703854704; }
		_case_begin_4703854704:;
		{
			return _10f51ba00_is_f64_greater(_20632_k2);
		}
		goto _match_end_4703852544;
		_case_end_4703854704:;
		if (!(jule::Str("any", 3) == _match_expr)) { goto _case_end_4703854816; }
		_case_begin_4703854816:;
		{
			return true;
		}
		goto _match_end_4703852544;
		_case_end_4703854816:;
		_case_begin_4703852656:;
		{
			return false;
		}
		goto _match_end_4703852544;
		_case_end_4703852656:;
		_match_end_4703852544:;
	}
}



inline jule::Bool _10f5ea650_is_sig_int(jule::Str _2723_k) {
	_2723_k=_10f521350_real_kind_of(_2723_k);
	return ((((_2723_k == jule::Str("i8", 2)) || (_2723_k == jule::Str("i16", 3))) || (_2723_k == jule::Str("i32", 3))) || (_2723_k == jule::Str("i64", 3)));
}



inline jule::Bool _10f5ea650_is_unsig_int(jule::Str _3825_k) {
	_3825_k=_10f521350_real_kind_of(_3825_k);
	return ((((_3825_k == jule::Str("u8", 2)) || (_3825_k == jule::Str("u16", 3))) || (_3825_k == jule::Str("u32", 3))) || (_3825_k == jule::Str("u64", 3)));
}



inline jule::Bool _10f5ea650_is_int(jule::Str _4915_k) {
	return (_10f5ea650_is_sig_int(_4915_k) || _10f5ea650_is_unsig_int(_4915_k));
}



inline jule::Bool _10f5ea650_is_float(jule::Str _5417_k) {
	return ((_5417_k == jule::Str("f32", 3)) || (_5417_k == jule::Str("f64", 3)));
}



inline jule::Bool _10f5ea650_is_num(jule::Str _5915_k) {
	return (_10f5ea650_is_int(_5915_k) || _10f5ea650_is_float(_5915_k));
}



inline std::tuple<jule::Str,jule::Bool> _10f668c10_is_byte_lit(jule::Str _1524_kind) {
	if ((static_cast<jule::I64>(_1524_kind.len()) < 3LL)) {
		return std::make_tuple(jule::Str("", 0),false);
	}
	_1524_kind=_1524_kind.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_1524_kind.len()) - 1LL))));
	jule::Bool _2113_is_byte = false;
	{
		auto _match_expr{ true };
		if (!(((static_cast<jule::I64>(_1524_kind.len()) == 1LL) && (_1524_kind[static_cast<jule::Int>(0LL)] <= 255LL)) == _match_expr)) { goto _case_end_4703900800; }
		_case_begin_4703900800:;
		{
			_2113_is_byte=true;
		}
		goto _match_end_4703900288;
		_case_end_4703900800:;
		if (!(((_1524_kind[static_cast<jule::Int>(0LL)] == '\\') && (_1524_kind[static_cast<jule::Int>(1LL)] == 'x')) == _match_expr)) { goto _case_end_4703900912; }
		_case_begin_4703900912:;
		{
			_2113_is_byte=true;
		}
		goto _match_end_4703900288;
		_case_end_4703900912:;
		if (!((((_1524_kind[static_cast<jule::Int>(0LL)] == '\\') && (_1524_kind[static_cast<jule::Int>(1LL)] >= '0')) && (_1524_kind[static_cast<jule::Int>(1LL)] <= '7')) == _match_expr)) { goto _case_end_4703901024; }
		_case_begin_4703901024:;
		{
			_2113_is_byte=true;
		}
		goto _match_end_4703900288;
		_case_end_4703901024:;
		_match_end_4703900288:;
	}
	return std::make_tuple(_1524_kind,_2113_is_byte);
}



inline jule::I32 _10f668c10_to_rune(jule::Slice<jule::U8> _4016_bytes) {
	if ((static_cast<jule::I64>(_4016_bytes.len()) == 0LL)) {
		return 0LL;
	}
	jule::I32 _4513_r = 0LL;
	if (((_4016_bytes[static_cast<jule::Int>(0LL)] == '\\') && (static_cast<jule::I64>(_4016_bytes.len()) > 1LL))) {
		jule::Int _4717_i = 0LL;
		_4513_r=static_cast<jule::I32>(static_cast<jule::I32>(_10f668c10_rune_from_esq_seq(_4016_bytes,(&_4717_i))));
	} else {
		std::tie(_4513_r,std::ignore) = _10dba43b0_decode_rune(_4016_bytes);
	}
	return _4513_r;
}



inline jule::Str _10f668c10_to_raw_str(jule::Slice<jule::U8> _5919_bytes) {
	return static_cast<jule::Str>(_5919_bytes);
}



inline jule::Str _10f668c10_to_str(jule::Slice<jule::U8> _6415_bytes) {
	if ((static_cast<jule::I64>(_6415_bytes.len()) == 0LL)) {
		return jule::Str("", 0);
	}
	jule::Str _6913_s = jule::Str("", 0);
	jule::Int _7013_i = 0LL;
	_iter_begin_4703944032:;
	if (!((_7013_i < static_cast<jule::I64>(_6415_bytes.len())))) { goto _iter_end_4703944032; }
	{
		jule::U8 _7213_b = _6415_bytes[static_cast<jule::Int>(_7013_i)];
		if ((_7213_b == '\\')) {
			_6913_s+=_10f668c10_str_esq_seq(_6415_bytes,(&_7013_i));
		} else {
			jule::I32 _7618_r{};
			jule::Int _7621_size{};
			std::tie(_7618_r,_7621_size) = _10dba43b0_decode_rune(_6415_bytes.slice(static_cast<jule::Int>(_7013_i)));
			_7013_i+=_7621_size;
			_6913_s+=static_cast<jule::Str>(_7618_r);
		}
	}
	_iter_next_4703944032:;
	goto _iter_begin_4703944032;
	_iter_end_4703944032:;
	return _6913_s;
}



inline std::tuple<jule::U8,jule::Bool> _10f668c10_try_btoa_common_esq(jule::Slice<jule::U8> _8424_bytes) {
	jule::Bool _8452_ok{jule::Bool()};
	jule::U8 _8441_seq{jule::U8()};
	if (((static_cast<jule::I64>(_8424_bytes.len()) < 2LL) || (_8424_bytes[static_cast<jule::Int>(0LL)] != '\\'))) {
		return std::make_tuple(_8441_seq,_8452_ok);
	}
	{
		auto _match_expr{ _8424_bytes[static_cast<jule::Int>(1LL)] };
		if (!('\\' == _match_expr)) { goto _case_end_4703960000; }
		_case_begin_4703960000:;
		{
			_8441_seq='\\';
		}
		goto _match_end_4703956848;
		_case_end_4703960000:;
		if (!('\'' == _match_expr)) { goto _case_end_4703960112; }
		_case_begin_4703960112:;
		{
			_8441_seq='\'';
		}
		goto _match_end_4703956848;
		_case_end_4703960112:;
		if (!('\"' == _match_expr)) { goto _case_end_4703960224; }
		_case_begin_4703960224:;
		{
			_8441_seq='\"';
		}
		goto _match_end_4703956848;
		_case_end_4703960224:;
		if (!('a' == _match_expr)) { goto _case_end_4703960336; }
		_case_begin_4703960336:;
		{
			_8441_seq='\a';
		}
		goto _match_end_4703956848;
		_case_end_4703960336:;
		if (!('b' == _match_expr)) { goto _case_end_4703960448; }
		_case_begin_4703960448:;
		{
			_8441_seq='\b';
		}
		goto _match_end_4703956848;
		_case_end_4703960448:;
		if (!('f' == _match_expr)) { goto _case_end_4703960560; }
		_case_begin_4703960560:;
		{
			_8441_seq='\f';
		}
		goto _match_end_4703956848;
		_case_end_4703960560:;
		if (!('n' == _match_expr)) { goto _case_end_4703960672; }
		_case_begin_4703960672:;
		{
			_8441_seq='\n';
		}
		goto _match_end_4703956848;
		_case_end_4703960672:;
		if (!('r' == _match_expr)) { goto _case_end_4703960784; }
		_case_begin_4703960784:;
		{
			_8441_seq='\r';
		}
		goto _match_end_4703956848;
		_case_end_4703960784:;
		if (!('t' == _match_expr)) { goto _case_end_4703960896; }
		_case_begin_4703960896:;
		{
			_8441_seq='\t';
		}
		goto _match_end_4703956848;
		_case_end_4703960896:;
		if (!('v' == _match_expr)) { goto _case_end_4703961008; }
		_case_begin_4703961008:;
		{
			_8441_seq='\v';
		}
		goto _match_end_4703956848;
		_case_end_4703961008:;
		_match_end_4703956848:;
	}
	_8452_ok=(_8441_seq != 0LL);
	return std::make_tuple(_8441_seq,_8452_ok);
}



inline jule::I32 _10f668c10_rune_from_esq_seq(jule::Slice<jule::U8> _10629_bytes,jule::Int* _10648_i) {
	jule::U8 _10710_b{};
	jule::Bool _10713_ok{};
	std::tie(_10710_b,_10713_ok) = _10f668c10_try_btoa_common_esq(_10629_bytes.slice(static_cast<jule::Int>((*_10648_i))));
	((*_10648_i))++;
	if (_10713_ok) {
		((*_10648_i))++;
		return static_cast<jule::I32>(_10710_b);
	}
	{
		auto _match_expr{ _10629_bytes[static_cast<jule::Int>((*_10648_i))] };
		if (!('u' == _match_expr)) { goto _case_end_4703980976; }
		_case_begin_4703980976:;
		{
			
			jule::U64 _11714_rc{};
			std::tie(_11714_rc,std::ignore) = _10ce6f0a0_parse_uint(static_cast<jule::Str>(_10629_bytes.slice(static_cast<jule::Int>(((*_10648_i) + 1LL)),static_cast<jule::Int>(((*_10648_i) + 5LL)))),16LL,64LL);
			(*_10648_i)+=5LL;
			jule::I32 _11913_r = static_cast<jule::I32>(_11714_rc);
			return _11913_r;
		}
		goto _match_end_4703973488;
		_case_end_4703980976:;
		if (!('U' == _match_expr)) { goto _case_end_4703983424; }
		_case_begin_4703983424:;
		{
			
			jule::U64 _12414_rc{};
			std::tie(_12414_rc,std::ignore) = _10ce6f0a0_parse_uint(static_cast<jule::Str>(_10629_bytes.slice(static_cast<jule::Int>(((*_10648_i) + 1LL)),static_cast<jule::Int>(((*_10648_i) + 9LL)))),16LL,64LL);
			(*_10648_i)+=9LL;
			jule::I32 _12613_r = static_cast<jule::I32>(_12414_rc);
			return _12613_r;
		}
		goto _match_end_4703973488;
		_case_end_4703983424:;
		if (!('x' == _match_expr)) { goto _case_end_4703984000; }
		_case_begin_4703984000:;
		{
			
			jule::Slice<jule::U8> _13113_seq = _10629_bytes.slice(static_cast<jule::Int>(((*_10648_i) + 1LL)),static_cast<jule::Int>(((*_10648_i) + 3LL)));
			(*_10648_i)+=3LL;
			jule::U64 _13314_b{};
			std::tie(_13314_b,std::ignore) = _10ce6f0a0_parse_uint(static_cast<jule::Str>(_13113_seq),16LL,64LL);
			return static_cast<jule::I32>(_13314_b);
		}
		goto _match_end_4703973488;
		_case_end_4703984000:;
		_case_begin_4703975680:;
		{
			
			jule::Slice<jule::U8> _13813_seq = _10629_bytes.slice(static_cast<jule::Int>((*_10648_i)),static_cast<jule::Int>(((*_10648_i) + 3LL)));
			(*_10648_i)+=3LL;
			jule::U64 _14014_b{};
			std::tie(_14014_b,std::ignore) = _10ce6f0a0_parse_uint(static_cast<jule::Str>(_13813_seq.slice(static_cast<jule::Int>(1LL))),8LL,64LL);
			return static_cast<jule::I32>(_14014_b);
		}
		goto _match_end_4703973488;
		_case_end_4703975680:;
		_match_end_4703973488:;
	}
}



inline jule::Str _10f668c10_str_esq_seq(jule::Slice<jule::U8> _14523_bytes,jule::Int* _14542_i) {
	jule::I32 _1469_r = static_cast<jule::I32>(_10f668c10_rune_from_esq_seq(_14523_bytes,_14542_i));
	if ((_1469_r <= 255LL)) {
		return static_cast<jule::Str>(_1469_r);
	}
	return _10f668c10_to_str(static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1469_r)));
}



inline jule::Ref<_10e8ca650_ReferenceStack> _10e8ca650_new_reference_stack(void) {
	return jule::new_struct<_10e8ca650_ReferenceStack>(new( std::nothrow ) _10e8ca650_ReferenceStack());
}



inline jule::Str _10e8ca650_str_repeat(jule::Str _9115_sub,jule::Int _9129_n) {
	if ((_9129_n == 0LL)) {
		return jule::Str("", 0);
	}
	jule::Str _9613_s = jule::Str("", 0);
	_iter_begin_4706713824:;
	if (!((_9129_n > 0LL))) { goto _iter_end_4706713824; }
	{
		_9613_s+=_9115_sub;
	}
	_iter_next_4706713824:;
	(_9129_n)--;
	goto _iter_begin_4706713824;
	_iter_end_4706713824:;
	return _9613_s;
}



inline jule::Str _10e8ca650_build_doc(jule::Ref<_11ce1fd50_CommentGroup> _10318_cg) {
	if ((!jule::real(_10318_cg))) {
		return jule::Str("", 0);
	}
	jule::Str _10813_doc = jule::Str("", 0);
	{
		auto &__julec_range_expr = _10318_cg->_field_comments;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11ce1fd50_Comment> _10e8ca650_c{jule::Ref<_11ce1fd50_Comment>()};_10e8ca650_c = *__julec_range_begin;
			_iter_begin_4706718352:;
			{
				_10813_doc+=_10e8ca650_c->_field_text;
				_10813_doc+=jule::Str(" ", 1);
			}
			_iter_next_4706718352:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e8ca650_c = *__julec_range_begin; goto _iter_begin_4706718352; }
			_iter_end_4706718352:;
		}
	}
	return _10813_doc;
}



inline jule::Ref<_10eeb79b0_TypeSymbol> _10e8ca650_build_type(jule::Ref<_11ce1fd50_TypeDecl> _11619_t) {
	if ((!jule::real(_11619_t))) {
		return jule::new_ref<_10eeb79b0_TypeSymbol>();
	}
	return jule::new_struct<_10eeb79b0_TypeSymbol>(new( std::nothrow ) _10eeb79b0_TypeSymbol(_11619_t,jule::Ref<_10eeb79b0_TypeKind>()));
}



inline jule::Ref<_10ee8a260_Value> _10e8ca650_build_expr(jule::Ref<_11ce1fd50_Expr> _12519_expr) {
	if ((!jule::real(_12519_expr))) {
		return jule::new_ref<_10ee8a260_Value>();
	}
	return jule::new_struct<_10ee8a260_Value>(new( std::nothrow ) _10ee8a260_Value(_12519_expr,jule::Ref<_10ee8a260_Data>()));
}



inline jule::Ref<_10eeb79b0_TypeAlias> _10e8ca650_build_type_alias(jule::Ref<_11ce1fd50_TypeAliasDecl> _13525_decl) {
	return jule::new_struct<_10eeb79b0_TypeAlias>(new( std::nothrow ) _10eeb79b0_TypeAlias(_13525_decl->_field_scope,_13525_decl->_field_public,_13525_decl->_field_cpp_linked,jule::Bool(),_13525_decl->_field_token,_13525_decl->_field_ident,_10e8ca650_build_type(_13525_decl->_field_kind),_10e8ca650_build_doc(_13525_decl->_field_doc_comments),jule::Slice<jule::Any>()));
}



inline jule::Ref<_10e3fc8f0_Field> _10e8ca650_build_field(jule::Ref<_11ce1fd50_FieldDecl> _14720_decl) {
	return jule::new_struct<_10e3fc8f0_Field>(new( std::nothrow ) _10e3fc8f0_Field(jule::Ref<_10e3fc8f0_Struct>(),_14720_decl->_field_token,_14720_decl->_field_public,_14720_decl->_field_mutable,_14720_decl->_field_ident,_10e8ca650_build_type(_14720_decl->_field_kind)));
}



inline jule::Slice<jule::Ref<_10e3fc8f0_Field>> _10e8ca650_build_fields(jule::Slice<jule::Ref<_11ce1fd50_FieldDecl>> _15721_decls) {
	jule::Slice<jule::Ref<_10e3fc8f0_Field>> _15813_fields = jule::Slice<jule::Ref<_10e3fc8f0_Field>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_15721_decls.len())));
	{
		auto &__julec_range_expr = _15721_decls;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e8ca650_i{jule::Int()};_10e8ca650_i = 0;
			jule::Ref<_11ce1fd50_FieldDecl> _10e8ca650_decl{jule::Ref<_11ce1fd50_FieldDecl>()};_10e8ca650_decl = *__julec_range_begin;
			_iter_begin_4706737408:;
			{
				_15813_fields[static_cast<jule::Int>(_10e8ca650_i)]=_10e8ca650_build_field(_10e8ca650_decl);
			}
			_iter_next_4706737408:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e8ca650_i; _10e8ca650_decl = *__julec_range_begin; goto _iter_begin_4706737408; }
			_iter_end_4706737408:;
		}
	}
	return _15813_fields;
}



inline jule::Ref<_10e3fc8f0_Struct> _10e8ca650_build_struct(jule::Ref<_11ce1fd50_StructDecl> _16521_decl) {
	return jule::new_struct<_10e3fc8f0_Struct>(new( std::nothrow ) _10e3fc8f0_Struct(jule::Ref<_10e9847f0_Sema>(),jule::Slice<jule::Ref<_10e3fc8f0_Struct>>(),jule::Slice<jule::Ref<_10e3fc8f0_Struct>>(),_16521_decl->_field_token,_16521_decl->_field_ident,_10e8ca650_build_fields(_16521_decl->_field_fields),_10dba8790_Vector_11(),_16521_decl->_field_public,_16521_decl->_field_cpp_linked,_16521_decl->_field_directives,_10e8ca650_build_doc(_16521_decl->_field_doc_comments),_16521_decl->_field_generics,jule::Slice<jule::Ref<_10e3d6eb0_Trait>>(),_10e8ca650_new_reference_stack(),jule::Slice<jule::Ref<_10e3fc8f0_StructIns>>()));
}



inline jule::Ref<_10e56a140_Param> _10e8ca650_build_param(jule::Ref<_11ce1fd50_ParamDecl> _17920_decl) {
	return jule::new_struct<_10e56a140_Param>(new( std::nothrow ) _10e56a140_Param(_17920_decl->_field_token,_17920_decl->_field_mutable,_17920_decl->_field_variadic,_17920_decl->_field_reference,_10e8ca650_build_type(_17920_decl->_field_kind),_17920_decl->_field_ident));
}



inline jule::Slice<jule::Ref<_10e56a140_Param>> _10e8ca650_build_params(jule::Slice<jule::Ref<_11ce1fd50_ParamDecl>> _19021_decls) {
	jule::Slice<jule::Ref<_10e56a140_Param>> _19113_params = jule::Slice<jule::Ref<_10e56a140_Param>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_19021_decls.len())));
	{
		auto &__julec_range_expr = _19021_decls;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e8ca650_i{jule::Int()};_10e8ca650_i = 0;
			jule::Ref<_11ce1fd50_ParamDecl> _10e8ca650_decl{jule::Ref<_11ce1fd50_ParamDecl>()};_10e8ca650_decl = *__julec_range_begin;
			_iter_begin_4706754224:;
			{
				_19113_params[static_cast<jule::Int>(_10e8ca650_i)]=_10e8ca650_build_param(_10e8ca650_decl);
			}
			_iter_next_4706754224:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e8ca650_i; _10e8ca650_decl = *__julec_range_begin; goto _iter_begin_4706754224; }
			_iter_end_4706754224:;
		}
	}
	return _19113_params;
}



inline jule::Ref<_10e56a140_RetType> _10e8ca650_build_ret_type(jule::Ref<_11ce1fd50_RetTypeDecl> _19823_decl) {
	if (((_19823_decl->_field_idents == nullptr) && (!jule::real(_19823_decl->_field_kind)))) {
		return jule::new_ref<_10e56a140_RetType>();
	}
	return jule::new_struct<_10e56a140_RetType>(new( std::nothrow ) _10e56a140_RetType(_10e8ca650_build_type(_19823_decl->_field_kind),_19823_decl->_field_idents));
}



inline jule::Ref<_10e56a140_Fn> _10e8ca650_build_fn(jule::Ref<_11ce1fd50_FnDecl> _20817_decl) {
	return jule::new_struct<_10e56a140_Fn>(new( std::nothrow ) _10e56a140_Fn(jule::Ref<_10e9847f0_Sema>(),_20817_decl->_field_token,_20817_decl->_field_global,_20817_decl->_field_unsafety,_20817_decl->_field_public,_20817_decl->_field_cpp_linked,_20817_decl->_field_statically,_20817_decl->_field_ident,_20817_decl->_field_directives,_10e8ca650_build_doc(_20817_decl->_field_doc_comments),_20817_decl->_field_scope,_20817_decl->_field_generics,_10e8ca650_build_ret_type(_20817_decl->_field_result),_10e8ca650_build_params(_20817_decl->_field_params),jule::Ref<_10e3fc8f0_Struct>(),_10e8ca650_new_reference_stack(),jule::Slice<jule::Ref<_10e56a140_FnIns>>()));
}



inline jule::Slice<jule::Ref<_10e56a140_Fn>> _10e8ca650_build_methods(jule::Slice<jule::Ref<_11ce1fd50_FnDecl>> _22722_decls) {
	jule::Slice<jule::Ref<_10e56a140_Fn>> _22813_methods = jule::Slice<jule::Ref<_10e56a140_Fn>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_22722_decls.len())));
	{
		auto &__julec_range_expr = _22722_decls;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e8ca650_i{jule::Int()};_10e8ca650_i = 0;
			jule::Ref<_11ce1fd50_FnDecl> _10e8ca650_decl{jule::Ref<_11ce1fd50_FnDecl>()};_10e8ca650_decl = *__julec_range_begin;
			_iter_begin_4706774304:;
			{
				_22813_methods[static_cast<jule::Int>(_10e8ca650_i)]=_10e8ca650_build_fn(_10e8ca650_decl);
			}
			_iter_next_4706774304:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e8ca650_i; _10e8ca650_decl = *__julec_range_begin; goto _iter_begin_4706774304; }
			_iter_end_4706774304:;
		}
	}
	return _22813_methods;
}



inline jule::Ref<_10e3d6eb0_Trait> _10e8ca650_build_trait(jule::Ref<_11ce1fd50_TraitDecl> _23520_decl) {
	return jule::new_struct<_10e3d6eb0_Trait>(new( std::nothrow ) _10e3d6eb0_Trait(_23520_decl->_field_token,_23520_decl->_field_ident,_23520_decl->_field_public,_10e8ca650_build_doc(_23520_decl->_field_doc_comments),_10e8ca650_build_methods(_23520_decl->_field_methods),jule::Slice<jule::Ref<_10e3fc8f0_Struct>>()));
}



inline jule::Ref<_10e975f00_EnumItem> _10e8ca650_build_enum_item(jule::Ref<_11ce1fd50_EnumItemDecl> _24524_decl) {
	return jule::new_struct<_10e975f00_EnumItem>(new( std::nothrow ) _10e975f00_EnumItem(_24524_decl->_field_token,_24524_decl->_field_ident,_10e8ca650_build_expr(_24524_decl->_field_expr)));
}



inline jule::Slice<jule::Ref<_10e975f00_EnumItem>> _10e8ca650_build_enum_items(jule::Slice<jule::Ref<_11ce1fd50_EnumItemDecl>> _25325_decls) {
	jule::Slice<jule::Ref<_10e975f00_EnumItem>> _25413_items = jule::Slice<jule::Ref<_10e975f00_EnumItem>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_25325_decls.len())));
	{
		auto &__julec_range_expr = _25325_decls;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e8ca650_i{jule::Int()};_10e8ca650_i = 0;
			jule::Ref<_11ce1fd50_EnumItemDecl> _10e8ca650_decl{jule::Ref<_11ce1fd50_EnumItemDecl>()};_10e8ca650_decl = *__julec_range_begin;
			_iter_begin_4706788720:;
			{
				_25413_items[static_cast<jule::Int>(_10e8ca650_i)]=_10e8ca650_build_enum_item(_10e8ca650_decl);
			}
			_iter_next_4706788720:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e8ca650_i; _10e8ca650_decl = *__julec_range_begin; goto _iter_begin_4706788720; }
			_iter_end_4706788720:;
		}
	}
	return _25413_items;
}



inline jule::Ref<_10e975f00_Enum> _10e8ca650_build_enum(jule::Ref<_11ce1fd50_EnumDecl> _26119_decl) {
	return jule::new_struct<_10e975f00_Enum>(new( std::nothrow ) _10e975f00_Enum(_26119_decl->_field_token,_26119_decl->_field_public,_26119_decl->_field_ident,_10e8ca650_build_type(_26119_decl->_field_kind),_10e8ca650_build_enum_items(_26119_decl->_field_items),_10e8ca650_build_doc(_26119_decl->_field_doc_comments)));
}



inline jule::Ref<_10ebc2ad0_Var> _10e8ca650_build_var(jule::Ref<_11ce1fd50_VarDecl> _27218_decl) {
	return jule::new_struct<_10ebc2ad0_Var>(new( std::nothrow ) _10ebc2ad0_Var(_27218_decl->_field_scope,_27218_decl->_field_token,_27218_decl->_field_ident,_27218_decl->_field_cpp_linked,_27218_decl->_field_constant,_27218_decl->_field_mutable,_27218_decl->_field_public,jule::Bool(),_27218_decl->_field_statically,_27218_decl->_field_reference,_10e8ca650_build_doc(_27218_decl->_field_doc_comments),_10e8ca650_build_type(_27218_decl->_field_kind),_10e8ca650_build_expr(_27218_decl->_field_expr),_10e8ca650_new_reference_stack(),jule::Slice<jule::Ref<_10ebc2ad0_Var>>()));
}



inline jule::Ref<_10e97d820_Impl> _10e8ca650_build_impl(jule::Ref<_11ce1fd50_Impl> _29019_decl) {
	return jule::new_struct<_10e97d820_Impl>(new( std::nothrow ) _10e97d820_Impl(_29019_decl->_field_base,_29019_decl->_field_dest,_10e8ca650_build_methods(_29019_decl->_field_methods)));
}



inline jule::Ref<_10e97fcf0_ScopeChecker> _10e97fcf0_new_scope_checker_base(jule::Ref<_10e9847f0_Sema> _3831_s,jule::Ref<_10e56a140_FnIns> _3845_owner) {
	return jule::new_struct<_10e97fcf0_ScopeChecker>(new( std::nothrow ) _10e97fcf0_ScopeChecker(_3831_s,_3845_owner,jule::Ref<_10e97fcf0_ScopeChecker>(),jule::Int(),jule::new_struct<_10ee5c510_SymbolTable>(new( std::nothrow ) _10ee5c510_SymbolTable()),jule::Ref<_10e97fcf0_Scope>(),jule::Ref<_11ce1fd50_ScopeTree>(),jule::Uintptr(),jule::Uintptr(),jule::Ref<jule::Slice<jule::Ref<_10e97fcf0_ScopeLabel>>>(),jule::Ref<jule::Slice<jule::Ref<_10e97fcf0_ScopeGoto>>>(),jule::Int()));
}



inline jule::Ref<_10e97fcf0_ScopeChecker> _10e97fcf0_new_scope_checker(jule::Ref<_10e9847f0_Sema> _4626_s,jule::Ref<_10e56a140_FnIns> _4640_owner) {
	jule::Ref<_10e97fcf0_ScopeChecker> _4713_base = _10e97fcf0_new_scope_checker_base(_4626_s,_4640_owner);
	_4713_base->_field_labels=jule::new_ref<jule::Slice<jule::Ref<_10e97fcf0_ScopeLabel>>>(nullptr);
	_4713_base->_field_gotos=jule::new_ref<jule::Slice<jule::Ref<_10e97fcf0_ScopeGoto>>>(nullptr);
	return _4713_base;
}



inline jule::Ref<_10e97fcf0_ScopeLabel> _10e97fcf0_find_label_parent(jule::Str _5622_ident,jule::Ref<_10e97fcf0_ScopeChecker> _5638_scope) {
	jule::Ref<_10e97fcf0_ScopeLabel> _5713_label = _5638_scope->_method_find_label_scope(_5622_ident);
	_iter_begin_4706820496:;
	if (!((!jule::real(_5713_label)))) { goto _iter_end_4706820496; }
	{
		if (((!jule::real(_5638_scope->_field_parent)) || jule::real(_5638_scope->_field_owner))) {
			return jule::new_ref<_10e97fcf0_ScopeLabel>();
		}
		_5638_scope=_5638_scope->_field_parent;
		_5713_label=_5638_scope->_method_find_label_scope(_5622_ident);
	}
	_iter_next_4706820496:;
	goto _iter_begin_4706820496;
	_iter_end_4706820496:;
	return _5713_label;
}



inline jule::Int _10e97fcf0_count_match_type(jule::Ref<_10e97fcf0_Match> _7021_m,jule::Ref<_10eeb79b0_TypeKind> _7032_t) {
	jule::Int _7113_n = 0LL;
	jule::Str _729_kind = _7032_t->_method_to_str();
	_julec_label_loop:;
	{
		auto &__julec_range_expr = _7021_m->_field_cases;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e97fcf0_Case> _10e97fcf0_c{jule::Ref<_10e97fcf0_Case>()};_10e97fcf0_c = *__julec_range_begin;
			_iter_begin_4706830800:;
			{
				if ((!jule::real(_10e97fcf0_c))) {
					goto _iter_next_4706830800;
				}
				{
					auto &__julec_range_expr = _10e97fcf0_c->_field_exprs;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Any _10e97fcf0_expr{jule::Any()};_10e97fcf0_expr = *__julec_range_begin;
						_iter_begin_4706834128:;
						{
							if ((_10e97fcf0_expr == nullptr)) {
								goto _iter_end_4706830800;
							}
							if ((_729_kind == _10e97fcf0_expr.operator jule::Ref<_10eeb79b0_TypeKind>()->_method_to_str())) {
								(_7113_n)++;
							}
						}
						_iter_next_4706834128:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _10e97fcf0_expr = *__julec_range_begin; goto _iter_begin_4706834128; }
						_iter_end_4706834128:;
					}
				}
			}
			_iter_next_4706830800:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e97fcf0_c = *__julec_range_begin; goto _iter_begin_4706830800; }
			_iter_end_4706830800:;
		}
	}
	return _7113_n;
}



inline jule::Slice<jule::Ref<_10ee8a260_Data>> _10e97fcf0_get_datas_from_tuple_data(jule::Ref<_10ee8a260_Data> _9434_d) {
	if (jule::real(_9434_d->_field_kind->_method_tup())) {
		{
			auto _match_expr{ _9434_d->_field_model };
			if (!(_match_expr.type_is<jule::Ref<_10e9ca470_TupleExprModel>>())) { goto _case_end_4706852592; }
			_case_begin_4706852592:;
			{
				return _9434_d->_field_model.operator jule::Ref<_10e9ca470_TupleExprModel>()->_field_datas;
			}
			goto _match_end_4706840896;
			_case_end_4706852592:;
			_case_begin_4706841520:;
			{
				jule::Ref<_10eeb79b0_Tuple> _10121_t = _9434_d->_field_kind->_method_tup();
				jule::Slice<jule::Ref<_10ee8a260_Data>> _10221_r = jule::Slice<jule::Ref<_10ee8a260_Data>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_10121_t->_field_types.len())));
				{
					auto &__julec_range_expr = _10121_t->_field_types;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Int _10e97fcf0_i{jule::Int()};_10e97fcf0_i = 0;
						jule::Ref<_10eeb79b0_TypeKind> _10e97fcf0_kind{jule::Ref<_10eeb79b0_TypeKind>()};_10e97fcf0_kind = *__julec_range_begin;
						_iter_begin_4706850304:;
						{
							_10221_r[static_cast<jule::Int>(_10e97fcf0_i)]=jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(_10e97fcf0_kind,jule::Ref<_10eeb79b0_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
						}
						_iter_next_4706850304:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { ++_10e97fcf0_i; _10e97fcf0_kind = *__julec_range_begin; goto _iter_begin_4706850304; }
						_iter_end_4706850304:;
					}
				}
				return _10221_r;
			}
			goto _match_end_4706840896;
			_case_end_4706841520:;
			_match_end_4706840896:;
		}
	} else {
		return jule::Slice<jule::Ref<_10ee8a260_Data>>({_9434_d});
	}
}



inline jule::Slice<jule::Any> _10e97fcf0_get_expr_models(jule::Any _11624_m) {
	{
		auto _match_expr{ _11624_m };
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_TupleExpr>>())) { goto _case_end_4706859328; }
		_case_begin_4706859328:;
		{
			return _11624_m.operator jule::Ref<_11ce1fd50_TupleExpr>()->_field_expr;
		}
		goto _match_end_4706857856;
		_case_end_4706859328:;
		_case_begin_4706857200:;
		{
			return jule::Slice<jule::Any>({_11624_m});
		}
		goto _match_end_4706857856;
		_case_end_4706857200:;
		_match_end_4706857856:;
	}
}



inline jule::Bool _10e97fcf0_check_mut(jule::Ref<_10e9847f0_Sema> _12318_s,jule::Ref<_10ee8a260_Data> _12328_left,jule::Ref<_10ee8a260_Data> _12345_right,_11ce22a00_Token _12359_error_token) {
	jule::Bool _12381_ok{jule::Bool()};
	{
		auto _match_expr{ true };
		if (!((!_12328_left->_field_mutable) == _match_expr)) { goto _case_end_4706864272; }
		_case_begin_4706864272:;
		{
			_12318_s->_method_push_err(_12359_error_token,jule::Str("assignment_to_non_mut", 21),jule::Slice<jule::Any>({}));
			_12381_ok = false;
			return _12381_ok;
		}
		goto _match_end_4706863712;
		_case_end_4706864272:;
		if (!(((jule::real(_12345_right) && (!_12345_right->_field_mutable)) && _10eeb79b0_is_mut(_12345_right->_field_kind)) == _match_expr)) { goto _case_end_4706864384; }
		_case_begin_4706864384:;
		{
			_12318_s->_method_push_err(_12359_error_token,jule::Str("assignment_non_mut_to_mut", 25),jule::Slice<jule::Any>({}));
			_12381_ok = false;
			return _12381_ok;
		}
		goto _match_end_4706863712;
		_case_end_4706864384:;
		_case_begin_4706863968:;
		{
			_12381_ok = true;
			return _12381_ok;
		}
		goto _match_end_4706863712;
		_case_end_4706863968:;
		_match_end_4706863712:;
	}
}



inline jule::Bool _10e97fcf0_check_assign(jule::Ref<_10e9847f0_Sema> _13821_s,jule::Ref<_10ee8a260_Data> _13835_left,jule::Ref<_10ee8a260_Data> _13852_right,_11ce22a00_Token _13866_error_token) {
	jule::Bool _13888_ok{jule::Bool()};
	jule::Ref<_10e56a140_FnIns> _1399_f = _13835_left->_field_kind->_method_fnc();
	if (((jule::real(_1399_f) && jule::real(_1399_f->_field_decl)) && _1399_f->_field_decl->_field_global)) {
		_13821_s->_method_push_err(_13866_error_token,jule::Str("assign_type_not_support_value", 29),jule::Slice<jule::Any>({}));
		_13888_ok = false;
		return _13888_ok;
	}
	{
		auto _match_expr{ true };
		if (!((!_13835_left->_field_lvalue) == _match_expr)) { goto _case_end_4706883408; }
		_case_begin_4706883408:;
		{
			_13821_s->_method_push_err(_13866_error_token,jule::Str("assign_require_lvalue", 21),jule::Slice<jule::Any>({}));
			_13888_ok = false;
			return _13888_ok;
		}
		goto _match_end_4706882720;
		_case_end_4706883408:;
		if (!(_13835_left->_method_is_const() == _match_expr)) { goto _case_end_4706883520; }
		_case_begin_4706883520:;
		{
			_13821_s->_method_push_err(_13866_error_token,jule::Str("assign_const", 12),jule::Slice<jule::Any>({}));
			_13888_ok = false;
			return _13888_ok;
		}
		goto _match_end_4706882720;
		_case_end_4706883520:;
		if (!((!_10e97fcf0_check_mut(_13821_s,_13835_left,_13852_right,_13866_error_token)) == _match_expr)) { goto _case_end_4706883632; }
		_case_begin_4706883632:;
		{
			_13888_ok = false;
			return _13888_ok;
		}
		goto _match_end_4706882720;
		_case_end_4706883632:;
		_case_begin_4706883104:;
		{
			_13888_ok = true;
			return _13888_ok;
		}
		goto _match_end_4706882720;
		_case_end_4706883104:;
		_match_end_4706882720:;
	}
}



inline jule::Bool _10e97fcf0_is_valid_ast_st_for_next_st(jule::Any _16236_n) {
	{
		auto _match_expr{ _16236_n };
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_AssignSt>>())) { goto _case_end_4706894816; }
		_case_begin_4706894816:;
		{
			return (!_16236_n.operator jule::Ref<_11ce1fd50_AssignSt>()->_field_declarative);
		}
		goto _match_end_4706893472;
		_case_end_4706894816:;
		if (!(_match_expr.type_is<jule::Ref<_11ce1fd50_FnCallExpr>>() || _match_expr.type_is<jule::Ref<_11ce1fd50_Expr>>())) { goto _case_end_4706894928; }
		_case_begin_4706894928:;
		{
			return true;
		}
		goto _match_end_4706893472;
		_case_end_4706894928:;
		_case_begin_4706893680:;
		{
			return false;
		}
		goto _match_end_4706893472;
		_case_end_4706893680:;
		_match_end_4706893472:;
	}
}



inline jule::Bool _10e97fcf0_is_valid_st_for_next_st(jule::Any _17628_st) {
	{
		auto _match_expr{ _17628_st };
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_FnCallExprModel>>() || _match_expr.type_is<jule::Ref<_10e97fcf0_Postfix>>() || _match_expr.type_is<jule::Ref<_10e97fcf0_Assign>>() || _match_expr.type_is<jule::Ref<_10e97fcf0_MultiAssign>>())) { goto _case_end_4706899440; }
		_case_begin_4706899440:;
		{
			return true;
		}
		goto _match_end_4706897616;
		_case_end_4706899440:;
		if (!(_match_expr.type_is<jule::Ref<_10ee8a260_Data>>())) { goto _case_end_4706899552; }
		_case_begin_4706899552:;
		{
			{
				auto _match_expr{ _17628_st.operator jule::Ref<_10ee8a260_Data>()->_field_model };
				if (!(_match_expr.type_is<jule::Ref<_10e9ca470_FnCallExprModel>>())) { goto _case_end_4706908720; }
				_case_begin_4706908720:;
				{
					return true;
				}
				goto _match_end_4706907680;
				_case_end_4706908720:;
				_case_begin_4706907792:;
				{
					return false;
				}
				goto _match_end_4706907680;
				_case_end_4706907792:;
				_match_end_4706907680:;
			}
		}
		goto _match_end_4706897616;
		_case_end_4706899552:;
		_case_begin_4706897728:;
		{
			return false;
		}
		goto _match_end_4706897616;
		_case_end_4706897728:;
		_match_end_4706897616:;
	}
}



inline jule::Bool _10e97fcf0_st_is_def(jule::Any _19514_st) {
	{
		auto _match_expr{ _19514_st };
		if (!(_match_expr.type_is<jule::Ref<_10ebc2ad0_Var>>())) { goto _case_end_4706909136; }
		_case_begin_4706909136:;
		{
			return true;
		}
		goto _match_end_4706910048;
		_case_end_4706909136:;
		_case_begin_4706895632:;
		{
			return false;
		}
		goto _match_end_4706910048;
		_case_end_4706895632:;
		_match_end_4706910048:;
	}
}



inline jule::Ref<_10ebc2ad0_Var> _10e9b6a10_find_var_in_package(jule::Slice<jule::Ref<_10ee5c510_SymbolTable>> _2728_files,jule::Str _2751_ident,jule::Bool _2763_cpp_linked) {
	{
		auto &__julec_range_expr = _2728_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ee5c510_SymbolTable> _10e9b6a10_f{jule::Ref<_10ee5c510_SymbolTable>()};_10e9b6a10_f = *__julec_range_begin;
			_iter_begin_4706912336:;
			{
				jule::Ref<_10ebc2ad0_Var> _2917_v = _10e9b6a10_f->_method_find_var(_2751_ident,_2763_cpp_linked);
				if (jule::real(_2917_v)) {
					return _2917_v;
				}
			}
			_iter_next_4706912336:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9b6a10_f = *__julec_range_begin; goto _iter_begin_4706912336; }
			_iter_end_4706912336:;
		}
	}
	return jule::new_ref<_10ebc2ad0_Var>();
}



inline jule::Ref<_10eeb79b0_TypeAlias> _10e9b6a10_find_type_alias_in_package(jule::Slice<jule::Ref<_10ee5c510_SymbolTable>> _3935_files,jule::Str _3958_ident,jule::Bool _3970_cpp_linked) {
	{
		auto &__julec_range_expr = _3935_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ee5c510_SymbolTable> _10e9b6a10_f{jule::Ref<_10ee5c510_SymbolTable>()};_10e9b6a10_f = *__julec_range_begin;
			_iter_begin_4706920736:;
			{
				jule::Ref<_10eeb79b0_TypeAlias> _4117_ta = _10e9b6a10_f->_method_find_type_alias(_3958_ident,_3970_cpp_linked);
				if (jule::real(_4117_ta)) {
					return _4117_ta;
				}
			}
			_iter_next_4706920736:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9b6a10_f = *__julec_range_begin; goto _iter_begin_4706920736; }
			_iter_end_4706920736:;
		}
	}
	return jule::new_ref<_10eeb79b0_TypeAlias>();
}



inline jule::Ref<_10e3fc8f0_Struct> _10e9b6a10_find_struct_in_package(jule::Slice<jule::Ref<_10ee5c510_SymbolTable>> _5131_files,jule::Str _5154_ident,jule::Bool _5166_cpp_linked) {
	{
		auto &__julec_range_expr = _5131_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ee5c510_SymbolTable> _10e9b6a10_f{jule::Ref<_10ee5c510_SymbolTable>()};_10e9b6a10_f = *__julec_range_begin;
			_iter_begin_4706928224:;
			{
				jule::Ref<_10e3fc8f0_Struct> _5317_s = _10e9b6a10_f->_method_find_struct(_5154_ident,_5166_cpp_linked);
				if (jule::real(_5317_s)) {
					return _5317_s;
				}
			}
			_iter_next_4706928224:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9b6a10_f = *__julec_range_begin; goto _iter_begin_4706928224; }
			_iter_end_4706928224:;
		}
	}
	return jule::new_ref<_10e3fc8f0_Struct>();
}



inline jule::Ref<_10e56a140_Fn> _10e9b6a10_find_fn_in_package(jule::Slice<jule::Ref<_10ee5c510_SymbolTable>> _6327_files,jule::Str _6350_ident,jule::Bool _6362_cpp_linked) {
	{
		auto &__julec_range_expr = _6327_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ee5c510_SymbolTable> _10e9b6a10_file{jule::Ref<_10ee5c510_SymbolTable>()};_10e9b6a10_file = *__julec_range_begin;
			_iter_begin_4706935712:;
			{
				jule::Ref<_10e56a140_Fn> _6517_f = _10e9b6a10_file->_method_find_fn(_6350_ident,_6362_cpp_linked);
				if (jule::real(_6517_f)) {
					return _6517_f;
				}
			}
			_iter_next_4706935712:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9b6a10_file = *__julec_range_begin; goto _iter_begin_4706935712; }
			_iter_end_4706935712:;
		}
	}
	return jule::new_ref<_10e56a140_Fn>();
}



inline jule::Ref<_10e3d6eb0_Trait> _10e9b6a10_find_trait_in_package(jule::Slice<jule::Ref<_10ee5c510_SymbolTable>> _7530_files,jule::Str _7553_ident) {
	{
		auto &__julec_range_expr = _7530_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ee5c510_SymbolTable> _10e9b6a10_f{jule::Ref<_10ee5c510_SymbolTable>()};_10e9b6a10_f = *__julec_range_begin;
			_iter_begin_4706941344:;
			{
				jule::Ref<_10e3d6eb0_Trait> _7717_t = _10e9b6a10_f->_method_find_trait(_7553_ident);
				if (jule::real(_7717_t)) {
					return _7717_t;
				}
			}
			_iter_next_4706941344:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9b6a10_f = *__julec_range_begin; goto _iter_begin_4706941344; }
			_iter_end_4706941344:;
		}
	}
	return jule::new_ref<_10e3d6eb0_Trait>();
}



inline jule::Ref<_10e975f00_Enum> _10e9b6a10_find_enum_in_package(jule::Slice<jule::Ref<_10ee5c510_SymbolTable>> _8729_files,jule::Str _8752_ident) {
	{
		auto &__julec_range_expr = _8729_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ee5c510_SymbolTable> _10e9b6a10_f{jule::Ref<_10ee5c510_SymbolTable>()};_10e9b6a10_f = *__julec_range_begin;
			_iter_begin_4706943312:;
			{
				jule::Ref<_10e975f00_Enum> _8917_e = _10e9b6a10_f->_method_find_enum(_8752_ident);
				if (jule::real(_8917_e)) {
					return _8917_e;
				}
			}
			_iter_next_4706943312:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9b6a10_f = *__julec_range_begin; goto _iter_begin_4706943312; }
			_iter_end_4706943312:;
		}
	}
	return jule::new_ref<_10e975f00_Enum>();
}



inline _13cfd2d20_Log _10e9847f0_compiler_err(_11ce22a00_Token _1617_token,jule::Str _1631_key,jule::Slice<jule::Any> _1641_args) {
	return _13cfd2d20_Log(1LLU,_1617_token._field_row,_1617_token._field_column,_1617_token._field_file->_method_path(),_10d8aeab0_errorf(_1631_key,_1641_args));
}



inline jule::Bool _10e9847f0_imp_is_lookupable(jule::Ref<_10e9b6a10_ImportInfo> _2622_i,jule::Str _2638_ident) {
	if (_2622_i->_field_cpp_linked) {
		return false;
	}
	if ((!_2622_i->_field_import_all)) {
		if ((static_cast<jule::I64>(_2622_i->_field_selected.len()) > 0LL)) {
			return _2622_i->_method_exist_ident(_2638_ident);
		}
	}
	return _2622_i->_field_import_all;
}



inline jule::Slice<jule::Ref<_10ebc2ad0_Var>> _10e9847f0_build_ret_vars(jule::Ref<_10e56a140_FnIns> _3923_f) {
	if ((_3923_f->_field_decl->_method_is_void() || (!jule::real(_3923_f->_field_result)))) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_10ebc2ad0_Var>> _4413_vars = nullptr;
	jule::Slice<jule::Ref<_10eeb79b0_TypeKind>> _4513_types = _10eb9c740_get_fn_result_types(_3923_f);
	{
		auto &__julec_range_expr = _3923_f->_field_decl->_field_result->_field_idents;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e9847f0_i{jule::Int()};_10e9847f0_i = 0;
			_11ce22a00_Token _10e9847f0_ident{_11ce22a00_Token()};_10e9847f0_ident = *__julec_range_begin;
			_iter_begin_4706972624:;
			{
				if (_11ce22a00_is_ignore_ident(_10e9847f0_ident._field_kind)) {
					goto _iter_next_4706972624;
				}
				jule::Ref<_10ebc2ad0_Var> _5117_v = jule::new_struct<_10ebc2ad0_Var>(new( std::nothrow ) _10ebc2ad0_Var(_3923_f->_field_decl->_field_scope,_10e9847f0_ident,_10e9847f0_ident._field_kind,jule::Bool(),jule::Bool(),true,jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_10eeb79b0_TypeSymbol>(new( std::nothrow ) _10eeb79b0_TypeSymbol(jule::Ref<_11ce1fd50_TypeDecl>(),_4513_types[static_cast<jule::Int>(_10e9847f0_i)])),jule::new_struct<_10ee8a260_Value>(new( std::nothrow ) _10ee8a260_Value(jule::Ref<_11ce1fd50_Expr>(),jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data()))),jule::Ref<_10e8ca650_ReferenceStack>(),jule::Slice<jule::Ref<_10ebc2ad0_Var>>()));
				_4413_vars=append(_4413_vars,jule::Slice<jule::Ref<_10ebc2ad0_Var>>({_5117_v}));
			}
			_iter_next_4706972624:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e9847f0_i; _10e9847f0_ident = *__julec_range_begin; goto _iter_begin_4706972624; }
			_iter_end_4706972624:;
		}
	}
	return _4413_vars;
}



inline jule::Slice<jule::Ref<_10ebc2ad0_Var>> _10e9847f0_build_param_vars(jule::Ref<_10e56a140_FnIns> _6825_f) {
	if ((static_cast<jule::I64>(_6825_f->_field_params.len()) == 0LL)) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_10ebc2ad0_Var>> _7313_vars = jule::Slice<jule::Ref<_10ebc2ad0_Var>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_6825_f->_field_params.len())));
	{
		auto &__julec_range_expr = _6825_f->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e9847f0_i{jule::Int()};_10e9847f0_i = 0;
			jule::Ref<_10e56a140_ParamIns> _10e9847f0_p{jule::Ref<_10e56a140_ParamIns>()};_10e9847f0_p = *__julec_range_begin;
			_iter_begin_4706991872:;
			{
				jule::Ref<_10ebc2ad0_Var> _7517_v = jule::new_struct<_10ebc2ad0_Var>(new( std::nothrow ) _10ebc2ad0_Var(_6825_f->_field_decl->_field_scope,_10e9847f0_p->_field_decl->_field_token,_10e9847f0_p->_field_decl->_field_ident,jule::Bool(),jule::Bool(),_10e9847f0_p->_field_decl->_field_mutable,jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_10eeb79b0_TypeSymbol>(new( std::nothrow ) _10eeb79b0_TypeSymbol()),jule::new_struct<_10ee8a260_Value>(new( std::nothrow ) _10ee8a260_Value(jule::Ref<_11ce1fd50_Expr>(),jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data()))),jule::Ref<_10e8ca650_ReferenceStack>(),jule::Slice<jule::Ref<_10ebc2ad0_Var>>()));
				{
					auto _match_expr{ true };
					if (!(_10e9847f0_p->_field_decl->_method_is_self() == _match_expr)) { goto _case_end_4707001680; }
					_case_begin_4707001680:;
					{
						_7517_v->_field_kind->_field_kind=jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_6825_f->_field_owner));
						if (_10e9847f0_p->_field_decl->_method_is_ref()) {
							_7517_v->_field_ident=_7517_v->_field_ident.slice(static_cast<jule::Int>(1LL));
							_7517_v->_field_kind->_field_kind->_field_kind=jule::new_struct<_10eeb79b0_Ref>(new( std::nothrow ) _10eeb79b0_Ref(_7517_v->_field_kind->_field_kind->_method_clone()));
						}
					}
					goto _match_end_4706994192;
					_case_end_4707001680:;
					if (!(_10e9847f0_p->_field_decl->_field_variadic == _match_expr)) { goto _case_end_4707002720; }
					_case_begin_4707002720:;
					{
						_7517_v->_field_kind->_field_kind=jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_10eeb79b0_Slc>(new( std::nothrow ) _10eeb79b0_Slc(_10e9847f0_p->_field_kind->_method_clone()))));
					}
					goto _match_end_4706994192;
					_case_end_4707002720:;
					_case_begin_4707000256:;
					{
						_7517_v->_field_kind->_field_kind=_10e9847f0_p->_field_kind->_method_clone();
					}
					goto _match_end_4706994192;
					_case_end_4707000256:;
					_match_end_4706994192:;
				}
				_7313_vars[static_cast<jule::Int>(_10e9847f0_i)]=_7517_v;
			}
			_iter_next_4706991872:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e9847f0_i; _10e9847f0_p = *__julec_range_begin; goto _iter_begin_4706991872; }
			_iter_end_4706991872:;
		}
	}
	return _7313_vars;
}



inline jule::Slice<jule::Ref<_10eeb79b0_TypeAlias>> _10e9847f0_build_generic_type_aliases(jule::Ref<_10e56a140_FnIns> _11535_f) {
	jule::I64 _11613_size = static_cast<jule::I64>(_11535_f->_field_generics.len());
	if (jule::real(_11535_f->_field_decl->_field_owner)) {
		_11613_size+=static_cast<jule::I64>(_11535_f->_field_decl->_field_owner->_field_generics.len());
	}
	if ((_11613_size == 0LL)) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_10eeb79b0_TypeAlias>> _12513_aliases = jule::Slice<jule::Ref<_10eeb79b0_TypeAlias>>::alloc(static_cast<jule::Int>(_11613_size));
	{
		auto &__julec_range_expr = _11535_f->_field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e9847f0_i{jule::Int()};_10e9847f0_i = 0;
			jule::Ref<_10eeb79b0_TypeKind> _10e9847f0_g{jule::Ref<_10eeb79b0_TypeKind>()};_10e9847f0_g = *__julec_range_begin;
			_iter_begin_4707028608:;
			{
				jule::Ref<_11ce1fd50_GenericDecl> _12817_decl = _11535_f->_field_decl->_field_generics[static_cast<jule::Int>(_10e9847f0_i)];
				_12513_aliases[static_cast<jule::Int>(_10e9847f0_i)]=jule::new_struct<_10eeb79b0_TypeAlias>(new( std::nothrow ) _10eeb79b0_TypeAlias(_11535_f->_field_decl->_field_scope,jule::Bool(),jule::Bool(),true,_12817_decl->_field_token,_12817_decl->_field_ident,jule::new_struct<_10eeb79b0_TypeSymbol>(new( std::nothrow ) _10eeb79b0_TypeSymbol(jule::Ref<_11ce1fd50_TypeDecl>(),_10e9847f0_g)),jule::Str(),jule::Slice<jule::Any>()));
			}
			_iter_next_4707028608:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e9847f0_i; _10e9847f0_g = *__julec_range_begin; goto _iter_begin_4707028608; }
			_iter_end_4707028608:;
		}
	}
	if (jule::real(_11535_f->_field_decl->_field_owner)) {
		jule::Ref<_10e3fc8f0_StructIns> _13917_owner = _11535_f->_field_owner;
		{
			auto &__julec_range_expr = _13917_owner->_field_generics;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Int _10e9847f0_i{jule::Int()};_10e9847f0_i = 0;
				jule::Ref<_10eeb79b0_TypeKind> _10e9847f0_g{jule::Ref<_10eeb79b0_TypeKind>()};_10e9847f0_g = *__julec_range_begin;
				_iter_begin_4707038848:;
				{
					jule::Ref<_11ce1fd50_GenericDecl> _14121_decl = _13917_owner->_field_decl->_field_generics[static_cast<jule::Int>(_10e9847f0_i)];
					_12513_aliases[static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_11535_f->_field_generics.len()) + _10e9847f0_i)))]=jule::new_struct<_10eeb79b0_TypeAlias>(new( std::nothrow ) _10eeb79b0_TypeAlias(_11535_f->_field_decl->_field_scope,jule::Bool(),jule::Bool(),true,_14121_decl->_field_token,_14121_decl->_field_ident,jule::new_struct<_10eeb79b0_TypeSymbol>(new( std::nothrow ) _10eeb79b0_TypeSymbol(jule::Ref<_11ce1fd50_TypeDecl>(),_10e9847f0_g)),jule::Str(),jule::Slice<jule::Any>()));
				}
				_iter_next_4707038848:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { ++_10e9847f0_i; _10e9847f0_g = *__julec_range_begin; goto _iter_begin_4707038848; }
				_iter_end_4707038848:;
			}
		}
	}
	return _12513_aliases;
}



inline jule::Ref<_10ee5c510_SymbolTable> _10e9847f0_find_file(jule::Slice<jule::Ref<_10ee5c510_SymbolTable>> _15518_files,jule::Ref<_11ce078a0_File> _15541_handler) {
	{
		auto &__julec_range_expr = _15518_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ee5c510_SymbolTable> _10e9847f0_fl{jule::Ref<_10ee5c510_SymbolTable>()};_10e9847f0_fl = *__julec_range_begin;
			_iter_begin_4707048912:;
			{
				if (((_10e9847f0_fl->_field_file).alloc == (_15541_handler).alloc)) {
					return _10e9847f0_fl;
				}
			}
			_iter_next_4707048912:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9847f0_fl = *__julec_range_begin; goto _iter_begin_4707048912; }
			_iter_end_4707048912:;
		}
	}
	return jule::new_ref<_10ee5c510_SymbolTable>();
}



inline std::tuple<jule::Bool,jule::Bool> _10e9847f0_conditional_has_ret(jule::Ref<_10e97fcf0_Conditional> _16428_c) {
	jule::Bool _16457_breaking{jule::Bool()};
	jule::Bool _16447_ok{jule::Bool()};
	jule::Bool _16513_breaked = false;
	{
		auto &__julec_range_expr = _16428_c->_field_elifs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e97fcf0_If> _10e9847f0_elif{jule::Ref<_10e97fcf0_If>()};_10e9847f0_elif = *__julec_range_begin;
			_iter_begin_4707054432:;
			{
				if ((!jule::real(_10e9847f0_elif))) {
					_16447_ok = false;
					_16457_breaking = false;
					return std::make_tuple(_16447_ok,_16457_breaking);
				}
				std::tie(_16447_ok,std::ignore,_16457_breaking) = _10e9847f0___has_ret(_10e9847f0_elif->_field_scope);
				_16513_breaked=(_16513_breaked || _16457_breaking);
				if ((!_16447_ok)) {
					_16447_ok = false;
					_16457_breaking = _16513_breaked;
					return std::make_tuple(_16447_ok,_16457_breaking);
				}
			}
			_iter_next_4707054432:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9847f0_elif = *__julec_range_begin; goto _iter_begin_4707054432; }
			_iter_end_4707054432:;
		}
	}
	if ((!jule::real(_16428_c->_field_default))) {
		_16447_ok = false;
		_16457_breaking = _16513_breaked;
		return std::make_tuple(_16447_ok,_16457_breaking);
	}
	std::tie(_16447_ok,std::ignore,_16457_breaking) = _10e9847f0___has_ret(_16428_c->_field_default->_field_scope);
	_16513_breaked=(_16513_breaked || _16457_breaking);
	_16447_ok = _16447_ok;
	_16457_breaking = _16513_breaked;
	return std::make_tuple(_16447_ok,_16457_breaking);
}



inline jule::Bool _10e9847f0_match_has_ret(jule::Ref<_10e97fcf0_Match> _18622_m) {
	if ((!jule::real(_18622_m->_field_default))) {
		return false;
	}
	jule::Bool _19113_ok = true;
	jule::Bool _19213_falled = false;
	jule::Bool _19313_breaked = false;
	{
		auto &__julec_range_expr = _18622_m->_field_cases;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e97fcf0_Case> _10e9847f0_c{jule::Ref<_10e97fcf0_Case>()};_10e9847f0_c = *__julec_range_begin;
			_iter_begin_4707089344:;
			{
				if ((!jule::real(_10e9847f0_c))) {
					return false;
				}
				std::tie(_19113_ok,_19213_falled,_19313_breaked) = _10e9847f0___has_ret(_10e9847f0_c->_field_scope);
				if ((((!_19113_ok) && (!_19213_falled)) || _19313_breaked)) {
					return false;
				}
				{
					auto _match_expr{ true };
					if (!((!_19113_ok) == _match_expr)) { goto _case_end_4707095504; }
					_case_begin_4707095504:;
					{
						if ((!_19213_falled)) {
							return false;
						}
						goto _case_begin_4707095840;
					}
					goto _match_end_4707094624;
					_case_end_4707095504:;
					if (!(_19213_falled == _match_expr)) { goto _case_end_4707095840; }
					_case_begin_4707095840:;
					{
						if ((!jule::real(_10e9847f0_c->_field_next))) {
							return false;
						}
						goto _iter_next_4707089344;
					}
					goto _match_end_4707094624;
					_case_end_4707095840:;
					_match_end_4707094624:;
				}
				_19213_falled=false;
			}
			_iter_next_4707089344:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e9847f0_c = *__julec_range_begin; goto _iter_begin_4707089344; }
			_iter_end_4707089344:;
		}
	}
	return _10e9847f0_has_ret(_18622_m->_field_default->_field_scope);
}



inline std::tuple<jule::Bool,jule::Bool,jule::Bool> _10e9847f0___has_ret(jule::Ref<_10e97fcf0_Scope> _22218_s) {
	jule::Bool _22255_breaked{jule::Bool()};
	jule::Bool _22241_falled{jule::Bool()};
	jule::Bool _22231_ok{jule::Bool()};
	if ((!jule::real(_22218_s))) {
		_22231_ok = false;
		_22241_falled = false;
		_22255_breaked = false;
		return std::make_tuple(_22231_ok,_22241_falled,_22255_breaked);
	}
	jule::Int _22713_i = 0LL;
	_iter_begin_4707103456:;
	if (!((_22713_i < static_cast<jule::Int>(_22218_s->_field_stmts._method_len())))) { goto _iter_end_4707103456; }
	{
		jule::Any _22917_st = _22218_s->_field_stmts._method_at(_22713_i);
		{
			auto _match_expr{ _22917_st };
			if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_FallSt>>())) { goto _case_end_4707110976; }
			_case_begin_4707110976:;
			{
				_22241_falled=true;
			}
			goto _match_end_4707110320;
			_case_end_4707110976:;
			if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_BreakSt>>())) { goto _case_end_4707111088; }
			_case_begin_4707111088:;
			{
				_22231_ok = false;
				_22241_falled = false;
				_22255_breaked = true;
				return std::make_tuple(_22231_ok,_22241_falled,_22255_breaked);
			}
			goto _match_end_4707110320;
			_case_end_4707111088:;
			if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_RetSt>>())) { goto _case_end_4707111200; }
			_case_begin_4707111200:;
			{
				_22231_ok = true;
				_22241_falled = _22241_falled;
				_22255_breaked = _22255_breaked;
				return std::make_tuple(_22231_ok,_22241_falled,_22255_breaked);
			}
			goto _match_end_4707110320;
			_case_end_4707111200:;
			if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_Scope>>())) { goto _case_end_4707111312; }
			_case_begin_4707111312:;
			{
				jule::Bool _24117_ok = _10e9847f0_has_ret(_22917_st.operator jule::Ref<_10e97fcf0_Scope>());
				if (_24117_ok) {
					_22231_ok = true;
					_22241_falled = false;
					_22255_breaked = false;
					return std::make_tuple(_22231_ok,_22241_falled,_22255_breaked);
				}
			}
			goto _match_end_4707110320;
			_case_end_4707111312:;
			if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_Recover>>())) { goto _case_end_4707111424; }
			_case_begin_4707111424:;
			{
				jule::Bool _24718_ok{};
				jule::Bool _24722_falled{};
				jule::Bool _24730_breaked{};
				std::tie(_24718_ok,_24722_falled,_24730_breaked) = _10e9847f0___has_ret(_22917_st.operator jule::Ref<_10e97fcf0_Recover>()->_field_scope);
				if (_24718_ok) {
					_22231_ok = true;
					_22241_falled = _24722_falled;
					_22255_breaked = _24730_breaked;
					return std::make_tuple(_22231_ok,_22241_falled,_22255_breaked);
				}
			}
			goto _match_end_4707110320;
			_case_end_4707111424:;
			if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_Conditional>>())) { goto _case_end_4707111536; }
			_case_begin_4707111536:;
			{
				jule::Bool _25318_ok{};
				jule::Bool _25322_breaking{};
				std::tie(_25318_ok,_25322_breaking) = _10e9847f0_conditional_has_ret(_22917_st.operator jule::Ref<_10e97fcf0_Conditional>());
				if (_25318_ok) {
					_22231_ok = true;
					_22241_falled = false;
					_22255_breaked = false;
					return std::make_tuple(_22231_ok,_22241_falled,_22255_breaked);
				}
				if (_25322_breaking) {
					_22231_ok = false;
					_22241_falled = false;
					_22255_breaked = _22255_breaked;
					return std::make_tuple(_22231_ok,_22241_falled,_22255_breaked);
				}
			}
			goto _match_end_4707110320;
			_case_end_4707111536:;
			if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_Match>>())) { goto _case_end_4707111648; }
			_case_begin_4707111648:;
			{
				jule::Bool _26317_ok = _10e9847f0_match_has_ret(_22917_st.operator jule::Ref<_10e97fcf0_Match>());
				if (_26317_ok) {
					_22231_ok = true;
					_22241_falled = false;
					_22255_breaked = false;
					return std::make_tuple(_22231_ok,_22241_falled,_22255_breaked);
				}
			}
			goto _match_end_4707110320;
			_case_end_4707111648:;
			_match_end_4707110320:;
		}
	}
	_iter_next_4707103456:;
	(_22713_i)++;
	goto _iter_begin_4707103456;
	_iter_end_4707103456:;
	_22231_ok = false;
	_22241_falled = _22241_falled;
	_22255_breaked = _22255_breaked;
	return std::make_tuple(_22231_ok,_22241_falled,_22255_breaked);
}



inline jule::Bool _10e9847f0_has_ret(jule::Ref<_10e97fcf0_Scope> _27316_s) {
	jule::Bool _27410_ok{};
	std::tie(_27410_ok,std::ignore,std::ignore) = _10e9847f0___has_ret(_27316_s);
	return _27410_ok;
}



inline jule::Slice<jule::Ref<_10eeb79b0_TypeKind>> _10eb9c740_get_fn_result_types(jule::Ref<_10e56a140_FnIns> _3528_f) {
	{
		auto _match_expr{ true };
		if (!((_3528_f->_field_decl->_method_is_void() || (!jule::real(_3528_f->_field_result))) == _match_expr)) { goto _case_end_4707154144; }
		_case_begin_4707154144:;
		{
			return nullptr;
		}
		goto _match_end_4707151920;
		_case_end_4707154144:;
		if (!((!jule::real(_3528_f->_field_result->_method_tup())) == _match_expr)) { goto _case_end_4707155280; }
		_case_begin_4707155280:;
		{
			return jule::Slice<jule::Ref<_10eeb79b0_TypeKind>>({_3528_f->_field_result});
		}
		goto _match_end_4707151920;
		_case_end_4707155280:;
		_case_begin_4707152192:;
		{
			return _3528_f->_field_result->_method_tup()->_field_types;
		}
		goto _match_end_4707151920;
		_case_end_4707152192:;
		_match_end_4707151920:;
	}
}



inline jule::Bool _10eb9c740_trait_has_reference_receiver(jule::Ref<_10e3d6eb0_Trait> _4833_t) {
	{
		auto &__julec_range_expr = _4833_t->_field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e56a140_Fn> _10eb9c740_f{jule::Ref<_10e56a140_Fn>()};_10eb9c740_f = *__julec_range_begin;
			_iter_begin_4707159616:;
			{
				if (_10eb9c740_f->_field_statically) {
					goto _iter_next_4707159616;
				}
				jule::Ref<_10e56a140_Param> _5513_p = _10eb9c740_f->_field_params[static_cast<jule::Int>(0LL)];
				if ((_5513_p->_method_is_ref() && _5513_p->_method_is_self())) {
					return true;
				}
			}
			_iter_next_4707159616:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10eb9c740_f = *__julec_range_begin; goto _iter_begin_4707159616; }
			_iter_end_4707159616:;
		}
	}
	return false;
}



inline jule::Bool _10eb9c740_float_assignable(jule::Str _6321_kind,jule::Ref<_10ee8a260_Data> _6332_d) {
	jule::Str _649_value = _10d916690_fmt_float(static_cast<jule::F64>(_6332_d->_field_constant->_method_read_f64()),'e',-1LL,64LL);
	return _10f521350_check_bit_float(_649_value,static_cast<jule::Int>(_10f521350_bitsize_of(_6321_kind)));
}



inline jule::Bool _10eb9c740_sig_assignable(jule::Str _6819_kind,jule::Ref<_10ee8a260_Data> _6830_d) {
	jule::F64 _699_min = static_cast<jule::F64>(_10f53b9f0_min_of(_6819_kind));
	jule::F64 _709_max = static_cast<jule::F64>(_10f53b9f0_max_of(_6819_kind));
	{
		auto _match_expr{ true };
		if (!(_6830_d->_field_constant->_method_is_f64() == _match_expr)) { goto _case_end_4707178208; }
		_case_begin_4707178208:;
		{
			jule::F64 _7413_x = static_cast<jule::F64>(static_cast<jule::F64>(_6830_d->_field_constant->_method_read_f64()));
			jule::F64 _7514_i{};
			jule::F64 _7517_frac{};
			std::tie(_7514_i,_7517_frac) = _10de1b5a0_modf(_7413_x);
			if ((_7517_frac != 0LL)) {
				return false;
			}
			return ((_7514_i >= _699_min) && (_7514_i <= _709_max));
		}
		goto _match_end_4707177920;
		_case_end_4707178208:;
		if (!(_6830_d->_field_constant->_method_is_u64() == _match_expr)) { goto _case_end_4707178320; }
		_case_begin_4707178320:;
		{
			jule::F64 _8213_x = static_cast<jule::F64>(static_cast<jule::U64>(_6830_d->_field_constant->_method_read_u64()));
			if ((_8213_x <= _709_max)) {
				return true;
			}
		}
		goto _match_end_4707177920;
		_case_end_4707178320:;
		if (!(_6830_d->_field_constant->_method_is_i64() == _match_expr)) { goto _case_end_4707178432; }
		_case_begin_4707178432:;
		{
			jule::F64 _8813_x = static_cast<jule::F64>(static_cast<jule::I64>(_6830_d->_field_constant->_method_read_i64()));
			return ((_699_min <= _8813_x) && (_8813_x <= _709_max));
		}
		goto _match_end_4707177920;
		_case_end_4707178432:;
		_match_end_4707177920:;
	}
	return false;
}



inline jule::Bool _10eb9c740_unsig_assignable(jule::Str _9521_kind,jule::Ref<_10ee8a260_Data> _9532_d) {
	jule::F64 _969_max = static_cast<jule::F64>(_10f53b9f0_max_of(_9521_kind));
	{
		auto _match_expr{ true };
		if (!(_9532_d->_field_constant->_method_is_f64() == _match_expr)) { goto _case_end_4707199824; }
		_case_begin_4707199824:;
		{
			jule::F64 _10013_x = static_cast<jule::F64>(_9532_d->_field_constant->_method_read_f64());
			if ((_10013_x < 0LL)) {
				return false;
			}
			jule::F64 _10514_i{};
			jule::F64 _10517_frac{};
			std::tie(_10514_i,_10517_frac) = _10de1b5a0_modf(_10013_x);
			if ((_10517_frac != 0LL)) {
				return false;
			}
			return (_10514_i <= _969_max);
		}
		goto _match_end_4707199440;
		_case_end_4707199824:;
		if (!(_9532_d->_field_constant->_method_is_u64() == _match_expr)) { goto _case_end_4707199936; }
		_case_begin_4707199936:;
		{
			jule::F64 _11213_x = static_cast<jule::F64>(static_cast<jule::U64>(_9532_d->_field_constant->_method_read_u64()));
			if ((_11213_x <= _969_max)) {
				return true;
			}
		}
		goto _match_end_4707199440;
		_case_end_4707199936:;
		if (!(_9532_d->_field_constant->_method_is_i64() == _match_expr)) { goto _case_end_4707200048; }
		_case_begin_4707200048:;
		{
			jule::F64 _11813_x = static_cast<jule::F64>(static_cast<jule::I64>(_9532_d->_field_constant->_method_read_i64()));
			return ((0LL <= _11813_x) && (_11813_x <= _969_max));
		}
		goto _match_end_4707199440;
		_case_end_4707200048:;
		_match_end_4707199440:;
	}
	return false;
}



inline jule::Bool _10eb9c740_int_assignable(jule::Str _12519_kind,jule::Ref<_10ee8a260_Data> _12530_d) {
	{
		auto _match_expr{ true };
		if (!(_10f5ea650_is_sig_int(_12519_kind) == _match_expr)) { goto _case_end_4707220240; }
		_case_begin_4707220240:;
		{
			return _10eb9c740_sig_assignable(_12519_kind,_12530_d);
		}
		goto _match_end_4707217056;
		_case_end_4707220240:;
		if (!(_10f5ea650_is_unsig_int(_12519_kind) == _match_expr)) { goto _case_end_4707219456; }
		_case_begin_4707219456:;
		{
			return _10eb9c740_unsig_assignable(_12519_kind,_12530_d);
		}
		goto _match_end_4707217056;
		_case_end_4707219456:;
		_case_begin_4707218768:;
		{
			return false;
		}
		goto _match_end_4707217056;
		_case_end_4707218768:;
		_match_end_4707217056:;
	}
}



inline jule::Any _10ee8a260_find_builtins_import(jule::Str _8625_ident,jule::Ref<_10e9b6a10_ImportInfo> _8637_imp) {
	return _10f3f9210_find_package_builtin_def(_8637_imp->_field_link_path,_8625_ident);
}



inline jule::Any _10ee8a260_find_builtins_sema(jule::Str _9023_ident,jule::Ref<_10e9847f0_Sema> _9039_s) {
	jule::Int _9113_i = 0LL;
	_iter_begin_4707226864:;
	if (!((_9113_i < static_cast<jule::Int>(_9039_s->_field_file->_field_imports._method_len())))) { goto _iter_end_4707226864; }
	{
		jule::Ref<_10e9b6a10_ImportInfo> _9317_imp = _9039_s->_field_file->_field_imports._method_at(_9113_i);
		if ((_9317_imp->_field_import_all || _9317_imp->_method_exist_ident(_9023_ident))) {
			jule::Any _9521_def = _10ee8a260_find_builtins_import(_9023_ident,_9317_imp);
			if ((_9521_def != nullptr)) {
				return _9521_def;
			}
		}
	}
	_iter_next_4707226864:;
	(_9113_i)++;
	goto _iter_begin_4707226864;
	_iter_end_4707226864:;
	return nullptr;
}



inline jule::Bool _10ee8a260_is_ok_for_shifting(jule::Ref<_10ee8a260_Data> _10427_d) {
	jule::Ref<_10eeb79b0_Prim> _1059_prim = _10427_d->_field_kind->_method_prim();
	if (((!jule::real(_1059_prim)) || (!_10f5ea650_is_int(_1059_prim->_method_to_str())))) {
		return false;
	}
	if ((!_10427_d->_method_is_const())) {
		return true;
	}
	{
		auto _match_expr{ true };
		if (!(_10427_d->_field_constant->_method_is_i64() == _match_expr)) { goto _case_end_4707246096; }
		_case_begin_4707246096:;
		{
			return (static_cast<jule::I64>(_10427_d->_field_constant->_method_read_i64()) >= 0LL);
		}
		goto _match_end_4707243344;
		_case_end_4707246096:;
		if (!(_10427_d->_field_constant->_method_is_u64() == _match_expr)) { goto _case_end_4707245328; }
		_case_begin_4707245328:;
		{
			return true;
		}
		goto _match_end_4707243344;
		_case_end_4707245328:;
		_case_begin_4707239344:;
		{
			return false;
		}
		goto _match_end_4707243344;
		_case_end_4707239344:;
		_match_end_4707243344:;
	}
}



inline jule::Bool _10ee8a260_is_instanced_struct(jule::Ref<_10e3fc8f0_StructIns> _12124_s) {
	return (static_cast<jule::I64>(_12124_s->_field_decl->_field_generics.len()) == static_cast<jule::I64>(_12124_s->_field_generics.len()));
}



inline void _10ee8a260_normalize_bitsize(jule::Ref<_10ee8a260_Data> _12526_d) {
	if ((!_12526_d->_method_is_const())) {
		return;
	}
	jule::Str _13013_kind = jule::Str("", 0);
	{
		auto _match_expr{ true };
		if (!(_12526_d->_field_constant->_method_is_f64() == _match_expr)) { goto _case_end_4707257504; }
		_case_begin_4707257504:;
		{
			jule::F64 _13313_x = static_cast<jule::F64>(_12526_d->_field_constant->_method_read_f64());
			_13013_kind=_10f521350_float_from_bits(static_cast<jule::U64>(_10f521350_bitsize_of_float(_13313_x)));
		}
		goto _match_end_4707256144;
		_case_end_4707257504:;
		if (!(_12526_d->_field_constant->_method_is_i64() == _match_expr)) { goto _case_end_4707257616; }
		_case_begin_4707257616:;
		{
			jule::I64 _13713_x = static_cast<jule::I64>(_12526_d->_field_constant->_method_read_i64());
			_13013_kind=_10f521350_int_from_bits(static_cast<jule::U64>(_10f521350_bitsize_of_int(_13713_x)));
		}
		goto _match_end_4707256144;
		_case_end_4707257616:;
		if (!(_12526_d->_field_constant->_method_is_u64() == _match_expr)) { goto _case_end_4707256672; }
		_case_begin_4707256672:;
		{
			jule::U64 _14113_x = static_cast<jule::U64>(_12526_d->_field_constant->_method_read_u64());
			_13013_kind=_10f521350_uint_from_bits(static_cast<jule::U64>(_10f521350_bitsize_of_uint(_14113_x)));
		}
		goto _match_end_4707256144;
		_case_end_4707256672:;
		_case_begin_4707256368:;
		{
			return;
		}
		goto _match_end_4707256144;
		_case_end_4707256368:;
		_match_end_4707256144:;
	}
	if (jule::real(_12526_d->_field_kind->_method_enm())) {
		return;
	}
	_12526_d->_field_kind->_field_kind=_10eeb79b0_build_prim_type(_13013_kind);
}



inline void _10ee8a260_normalize_type(jule::Ref<_10ee8a260_Data> _15623_d) {
	{
		auto _match_expr{ true };
		if (!(_10eb9c740_int_assignable(jule::Str("int", 3),_15623_d) == _match_expr)) { goto _case_end_4707275792; }
		_case_begin_4707275792:;
		{
			_15623_d->_field_kind->_field_kind=_10eeb79b0_build_prim_type(jule::Str("int", 3));
			_15623_d->_field_constant->_method_set_i64(static_cast<jule::I64>(static_cast<jule::F64>(_15623_d->_field_constant->_method_as_f64())));
		}
		goto _match_end_4707275008;
		_case_end_4707275792:;
		if (!(_10eb9c740_int_assignable(jule::Str("uint", 4),_15623_d) == _match_expr)) { goto _case_end_4707275904; }
		_case_begin_4707275904:;
		{
			_15623_d->_field_kind->_field_kind=_10eeb79b0_build_prim_type(jule::Str("uint", 4));
			_15623_d->_field_constant->_method_set_u64(static_cast<jule::U64>(static_cast<jule::F64>(_15623_d->_field_constant->_method_as_f64())));
		}
		goto _match_end_4707275008;
		_case_end_4707275904:;
		_match_end_4707275008:;
	}
}



inline void _10ee8a260_apply_cast_kind_model(jule::Ref<_10ee8a260_Data> _16830_d) {
	_16830_d->_field_model=jule::Any(jule::new_struct<_10e9ca470_CastingExprModel>(new( std::nothrow ) _10e9ca470_CastingExprModel(_16830_d->_field_model,_16830_d->_field_cast_kind,_16830_d->_field_kind)));
}



inline void _10ee8a260_apply_cast_kind(jule::Ref<_10ee8a260_Data> _17624_d) {
	if ((!jule::real(_17624_d->_field_cast_kind))) {
		return;
	}
	_10ee8a260_apply_cast_kind_model(_17624_d);
	_17624_d->_field_kind=_17624_d->_field_cast_kind;
	jule::drop(_17624_d->_field_cast_kind);
}



inline jule::Ref<_10ee8a260_Data> _10ee8a260_build_void_data(void) {
	return jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("void", 4)))),jule::Ref<_10eeb79b0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_10f4ed830_Const>()));
}



inline jule::Str _10ee8a260_kind_by_bitsize(jule::Any _19720_expr) {
	{
		auto _match_expr{ _19720_expr };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_4707300224; }
		_case_begin_4707300224:;
		{
			jule::F64 _20013_x = _19720_expr.operator jule::F64();
			return _10f521350_float_from_bits(static_cast<jule::U64>(_10f521350_bitsize_of_float(_20013_x)));
		}
		goto _match_end_4707299152;
		_case_end_4707300224:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_4707299616; }
		_case_begin_4707299616:;
		{
			jule::I64 _20413_x = _19720_expr.operator jule::I64();
			return _10f521350_int_from_bits(static_cast<jule::U64>(_10f521350_bitsize_of_int(_20413_x)));
		}
		goto _match_end_4707299152;
		_case_end_4707299616:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_4707299728; }
		_case_begin_4707299728:;
		{
			jule::U64 _20813_x = _19720_expr.operator jule::U64();
			return _10f521350_uint_from_bits(static_cast<jule::U64>(_10f521350_bitsize_of_uint(_20813_x)));
		}
		goto _match_end_4707299152;
		_case_end_4707299728:;
		_case_begin_4707299264:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4707299152;
		_case_end_4707299264:;
		_match_end_4707299152:;
	}
}



inline jule::Str _10ee8a260_check_data_for_integer_indexing(jule::Ref<_10ee8a260_Data> _21640_d) {
	jule::Str _21652_err_key{jule::Str()};
	if ((!jule::real(_21640_d))) {
		_21652_err_key = jule::Str("", 0);
		return _21652_err_key;
	}
	jule::Ref<_10eeb79b0_TypeKind> _22113_kind = _21640_d->_field_kind;
	if (jule::real(_22113_kind->_method_ref())) {
		_22113_kind=_22113_kind->_method_ref()->_field_elem;
	}
	{
		auto _match_expr{ true };
		if (!((!jule::real(_22113_kind->_method_prim())) == _match_expr)) { goto _case_end_4706572400; }
		_case_begin_4706572400:;
		{
			_21652_err_key = jule::Str("invalid_expr", 12);
			return _21652_err_key;
		}
		goto _match_end_4707313616;
		_case_end_4706572400:;
		if (!((!_10f5ea650_is_int(_22113_kind->_method_prim()->_method_to_str())) == _match_expr)) { goto _case_end_4707317488; }
		_case_begin_4707317488:;
		{
			_21652_err_key = jule::Str("invalid_expr", 12);
			return _21652_err_key;
		}
		goto _match_end_4707313616;
		_case_end_4707317488:;
		if (!((_21640_d->_method_is_const() && (static_cast<jule::I64>(_21640_d->_field_constant->_method_as_i64()) < 0LL)) == _match_expr)) { goto _case_end_4707317600; }
		_case_begin_4707317600:;
		{
			_21652_err_key = jule::Str("overflow_limits", 15);
			return _21652_err_key;
		}
		goto _match_end_4707313616;
		_case_end_4707317600:;
		_case_begin_4707317184:;
		{
			_21640_d->_field_cast_kind=jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("int", 3))));
			_10ee8a260_apply_cast_kind(_21640_d);
			_21652_err_key = jule::Str("", 0);
			return _21652_err_key;
		}
		goto _match_end_4707313616;
		_case_end_4707317184:;
		_match_end_4707313616:;
	}
}



inline jule::Bool _10eeb79b0_can_get_ptr(jule::Ref<_10ee8a260_Data> _44520_d) {
	if (((!_44520_d->_field_lvalue) || _44520_d->_method_is_const())) {
		return false;
	}
	{
		auto _match_expr{ true };
		if (!((jule::real(_44520_d->_field_kind->_method_fnc()) || jule::real(_44520_d->_field_kind->_method_enm())) == _match_expr)) { goto _case_end_4707331392; }
		_case_begin_4707331392:;
		{
			return false;
		}
		goto _match_end_4707329664;
		_case_end_4707331392:;
		_case_begin_4707330192:;
		{
			return true;
		}
		goto _match_end_4707329664;
		_case_end_4707330192:;
		_match_end_4707329664:;
	}
}



inline jule::Bool _10eeb79b0_is_lvalue(jule::Ref<_10eeb79b0_TypeKind> _45918_t) {
	return (((jule::real(_45918_t->_method_ref()) || jule::real(_45918_t->_method_ptr())) || jule::real(_45918_t->_method_slc())) || jule::real(_45918_t->_method_map()));
}



inline jule::Bool _10eeb79b0_is_mut(jule::Ref<_10eeb79b0_TypeKind> _46315_t) {
	if (jule::real(_46315_t->_method_strct())) {
		return _46315_t->_method_strct()->_field_has_mut;
	}
	if (jule::real(_46315_t->_method_prim())) {
		jule::Ref<_10eeb79b0_Prim> _46813_p = _46315_t->_method_prim();
		return _46813_p->_method_is_any();
	}
	return ((jule::real(_46315_t->_method_slc()) || jule::real(_46315_t->_method_ptr())) || jule::real(_46315_t->_method_ref()));
}



inline jule::Bool _10eeb79b0_supports_clonning(jule::Ref<_10eeb79b0_TypeKind> _47426_k) {
	{
		auto _match_expr{ true };
		if (!(jule::real(_47426_k->_method_prim()) == _match_expr)) { goto _case_end_4707357664; }
		_case_begin_4707357664:;
		{
			return (!_47426_k->_method_prim()->_method_is_any());
		}
		goto _match_end_4707355200;
		_case_end_4707357664:;
		if (!(jule::real(_47426_k->_method_enm()) == _match_expr)) { goto _case_end_4707357072; }
		_case_begin_4707357072:;
		{
			return true;
		}
		goto _match_end_4707355200;
		_case_end_4707357072:;
		if (!(jule::real(_47426_k->_method_fnc()) == _match_expr)) { goto _case_end_4707357184; }
		_case_begin_4707357184:;
		{
			return true;
		}
		goto _match_end_4707355200;
		_case_end_4707357184:;
		if (!(jule::real(_47426_k->_method_ptr()) == _match_expr)) { goto _case_end_4707357968; }
		_case_begin_4707357968:;
		{
			return true;
		}
		goto _match_end_4707355200;
		_case_end_4707357968:;
		if (!(jule::real(_47426_k->_method_slc()) == _match_expr)) { goto _case_end_4707358080; }
		_case_begin_4707358080:;
		{
			return _10eeb79b0_supports_clonning(_47426_k->_method_slc()->_field_elem);
		}
		goto _match_end_4707355200;
		_case_end_4707358080:;
		if (!(jule::real(_47426_k->_method_map()) == _match_expr)) { goto _case_end_4707358192; }
		_case_begin_4707358192:;
		{
			return (_10eeb79b0_supports_clonning(_47426_k->_method_map()->_field_key) && _10eeb79b0_supports_clonning(_47426_k->_method_map()->_field_val));
		}
		goto _match_end_4707355200;
		_case_end_4707358192:;
		if (!(jule::real(_47426_k->_method_arr()) == _match_expr)) { goto _case_end_4707358304; }
		_case_begin_4707358304:;
		{
			return _10eeb79b0_supports_clonning(_47426_k->_method_arr()->_field_elem);
		}
		goto _match_end_4707355200;
		_case_end_4707358304:;
		if (!(jule::real(_47426_k->_method_ref()) == _match_expr)) { goto _case_end_4707358416; }
		_case_begin_4707358416:;
		{
			return _10eeb79b0_supports_clonning(_47426_k->_method_ref()->_field_elem);
		}
		goto _match_end_4707355200;
		_case_end_4707358416:;
		if (!(jule::real(_47426_k->_method_strct()) == _match_expr)) { goto _case_end_4707358528; }
		_case_begin_4707358528:;
		{
			jule::Ref<_10e3fc8f0_StructIns> _50117_s = _47426_k->_method_strct();
			if ((!_50117_s->_field_has_mut)) {
				return true;
			}
			if ((((!jule::real(_50117_s->_field_decl)) || _50117_s->_field_decl->_field_cpp_linked) || (!_50117_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
				return false;
			}
			return true;
		}
		goto _match_end_4707355200;
		_case_end_4707358528:;
		_case_begin_4707356608:;
		{
			return false;
		}
		goto _match_end_4707355200;
		_case_end_4707356608:;
		_match_end_4707355200:;
	}
}



inline jule::Bool _10eeb79b0_is_nil_compatible(jule::Ref<_10eeb79b0_TypeKind> _51526_t) {
	jule::Ref<_10eeb79b0_Prim> _5169_prim = _51526_t->_method_prim();
	if ((jule::real(_5169_prim) && _5169_prim->_method_is_any())) {
		return true;
	}
	return (((((_51526_t->_method_is_nil() || jule::real(_51526_t->_method_fnc())) || jule::real(_51526_t->_method_ptr())) || jule::real(_51526_t->_method_trt())) || jule::real(_51526_t->_method_slc())) || jule::real(_51526_t->_method_map()));
}



inline jule::Bool _10eeb79b0_is_valid_for_ref(jule::Ref<_10eeb79b0_TypeKind> _53125_t) {
	jule::Ref<_10e3fc8f0_StructIns> _53213_s = _53125_t->_method_strct();
	if (((jule::real(_53213_s) && jule::real(_53213_s->_field_decl)) && _53213_s->_field_decl->_field_cpp_linked)) {
		return false;
	}
	return (!(((jule::real(_53125_t->_method_enm()) || jule::real(_53125_t->_method_ptr())) || jule::real(_53125_t->_method_ref())) || jule::real(_53125_t->_method_arr())));
}



inline jule::Bool _10eeb79b0_is_variadicable(jule::Ref<_10eeb79b0_TypeKind> _53924_tk) {
	return jule::real(_53924_tk->_method_slc());
}



inline jule::Str _10eeb79b0_build_link_path_by_tokens(jule::Slice<_11ce22a00_Token> _54130_tokens) {
	jule::Str _54213_s = _54130_tokens[static_cast<jule::Int>(0LL)]._field_kind;
	{
		auto __julec_range_expr = _54130_tokens.slice(static_cast<jule::Int>(1LL));
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_11ce22a00_Token _10eeb79b0_token{_11ce22a00_Token()};_10eeb79b0_token = *__julec_range_begin;
			_iter_begin_4707407904:;
			{
				_54213_s+=jule::Str("::", 2);
				_54213_s+=_10eeb79b0_token._field_kind;
			}
			_iter_next_4707407904:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10eeb79b0_token = *__julec_range_begin; goto _iter_begin_4707407904; }
			_iter_end_4707407904:;
		}
	}
	return _54213_s;
}



inline jule::Ref<_10eeb79b0_Prim> _10eeb79b0_build_prim_type(jule::Str _55020_kind) {
	return jule::new_struct<_10eeb79b0_Prim>(new( std::nothrow ) _10eeb79b0_Prim(_55020_kind));
}



inline jule::Bool _10eeb79b0_is_prim(jule::Str _55712_kind) {
	return ((((((((((((((((_55712_kind == jule::Str("i8", 2)) || (_55712_kind == jule::Str("i16", 3))) || (_55712_kind == jule::Str("i32", 3))) || (_55712_kind == jule::Str("i64", 3))) || (_55712_kind == jule::Str("u8", 2))) || (_55712_kind == jule::Str("u16", 3))) || (_55712_kind == jule::Str("u32", 3))) || (_55712_kind == jule::Str("u64", 3))) || (_55712_kind == jule::Str("f32", 3))) || (_55712_kind == jule::Str("f64", 3))) || (_55712_kind == jule::Str("int", 3))) || (_55712_kind == jule::Str("uint", 4))) || (_55712_kind == jule::Str("uintptr", 7))) || (_55712_kind == jule::Str("bool", 4))) || (_55712_kind == jule::Str("str", 3))) || (_55712_kind == jule::Str("any", 3)));
}



inline std::tuple<jule::Ref<_10ee5c510_SymbolTable>,jule::Slice<_13cfd2d20_Log>> _10f32caf0_build_symbols(jule::Ref<_11ce19be0_Ast> _922_ast,jule::Trait<_10e9b6a10_Importer> _937_importer,jule::Ref<_10e8ca650_SymbolBuilder> _961_owner) {
	jule::Ref<_10e8ca650_SymbolBuilder> _1013_sb = jule::new_struct<_10e8ca650_SymbolBuilder>(new( std::nothrow ) _10e8ca650_SymbolBuilder(_961_owner,_937_importer,jule::Slice<_13cfd2d20_Log>(),_922_ast,jule::Ref<_10ee5c510_SymbolTable>()));
	_1013_sb->_method_build();
	if ((static_cast<jule::I64>(_1013_sb->_field_errors.len()) == 0LL)) {
		return std::make_tuple(_1013_sb->_field_table,nullptr);
	}
	return std::make_tuple(jule::new_ref<_10ee5c510_SymbolTable>(),_1013_sb->_field_errors);
}



inline std::tuple<jule::Ref<_10e9b6a10_Package>,jule::Slice<_13cfd2d20_Log>> _10f32caf0___analyze_package(jule::Slice<jule::Ref<_11ce19be0_Ast>> _2326_files,jule::Trait<_10e9b6a10_Importer> _2345_importer) {
	jule::Slice<jule::Ref<_10ee5c510_SymbolTable>> _2513_tables = jule::Slice<jule::Ref<_10ee5c510_SymbolTable>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_2326_files.len())));
	{
		auto &__julec_range_expr = _2326_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10f32caf0_i{jule::Int()};_10f32caf0_i = 0;
			jule::Ref<_11ce19be0_Ast> _10f32caf0_f{jule::Ref<_11ce19be0_Ast>()};_10f32caf0_f = *__julec_range_begin;
			_iter_begin_4707435088:;
			{
				jule::Ref<_10ee5c510_SymbolTable> _2718_table{};
				jule::Slice<_13cfd2d20_Log> _2729_errors{};
				std::tie(_2718_table,_2729_errors) = _10f32caf0_build_symbols(_10f32caf0_f,_2345_importer,jule::new_ref<_10e8ca650_SymbolBuilder>());
				if ((static_cast<jule::I64>(_2729_errors.len()) > 0LL)) {
					return std::make_tuple(jule::new_ref<_10e9b6a10_Package>(),_2729_errors);
				}
				_2513_tables[static_cast<jule::Int>(_10f32caf0_i)]=_2718_table;
			}
			_iter_next_4707435088:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10f32caf0_i; _10f32caf0_f = *__julec_range_begin; goto _iter_begin_4707435088; }
			_iter_end_4707435088:;
		}
	}
	jule::Ref<_10e9847f0_Sema> _3413_sema = jule::new_struct<_10e9847f0_Sema>(new( std::nothrow ) _10e9847f0_Sema());
	_3413_sema->_method_check(_2513_tables);
	if ((static_cast<jule::I64>(_3413_sema->_field_errors.len()) > 0LL)) {
		return std::make_tuple(jule::new_ref<_10e9b6a10_Package>(),_3413_sema->_field_errors);
	}
	jule::Ref<_10e9b6a10_Package> _4013_pkg = jule::new_struct<_10e9b6a10_Package>(new( std::nothrow ) _10e9b6a10_Package(_3413_sema->_field_files));
	return std::make_tuple(_4013_pkg,nullptr);
}



inline std::tuple<jule::Ref<_10e9b6a10_Package>,jule::Slice<_13cfd2d20_Log>> _10f32caf0_analyze_package(jule::Slice<jule::Ref<_11ce19be0_Ast>> _6428_files,jule::Trait<_10e9b6a10_Importer> _6447_importer) {
	if ((static_cast<jule::I64>(_6428_files.len()) == 0LL)) {
		return std::make_tuple(jule::new_ref<_10e9b6a10_Package>(),nullptr);
	}
	return _10f32caf0___analyze_package(_6428_files,_6447_importer);
}



inline void _10f3f9210_init(void) {
	_10f3f9210_BUILTIN_FN_OUT->_field_caller=_10f3f9210_builtin_caller_out;
	_10f3f9210_BUILTIN_FN_OUTLN->_field_caller=_10f3f9210_builtin_caller_outln;
	_10f3f9210_BUILTIN_FN_NEW->_field_caller=_10f3f9210_builtin_caller_new;
	_10f3f9210_BUILTIN_FN_REAL->_field_caller=_10f3f9210_builtin_caller_real;
	_10f3f9210_BUILTIN_FN_DROP->_field_caller=_10f3f9210_builtin_caller_drop;
	_10f3f9210_BUILTIN_FN_PANIC->_field_caller=_10f3f9210_builtin_caller_panic;
	_10f3f9210_BUILTIN_FN_MAKE->_field_caller=_10f3f9210_builtin_caller_make;
	_10f3f9210_BUILTIN_FN_APPEND->_field_caller=_10f3f9210_builtin_caller_append;
	_10f3f9210_BUILTIN_FN_COPY->_field_caller=_10f3f9210_builtin_caller_copy;
	_10f3f9210_BUILTIN_FN_RECOVER->_field_caller=_10f3f9210_builtin_caller_recover;
	_10f3f9210_BUILTIN_FN_CLONE->_field_caller=_10f3f9210_builtin_caller_clone;
	_10f3f9210_BUILTIN_FN_STD_MEM_SIZE_OF->_field_caller=_10f3f9210_builtin_caller_std_mem_size_of;
	_10f3f9210_BUILTIN_FN_STD_MEM_ALIGN_OF->_field_caller=_10f3f9210_builtin_caller_std_mem_align_of;
	jule::Ref<_10e56a140_Fn> _9113_error_method = _10f3f9210_BUILTIN_TRAIT_ERROR->_method_find_method(jule::Str("error", 5));
	jule::Ref<_10e56a140_FnIns> _9213_error_method_ins = _9113_error_method->_method_instance();
	_9213_error_method_ins->_field_result=jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("str", 3))));
	_9213_error_method_ins->_field_caller=_10f3f9210_builtin_caller_common;
	_9113_error_method->_method_append_instance(_9213_error_method_ins);
}



inline jule::Ref<_10e56a140_FnIns> _10f3f9210_find_builtin_fn(jule::Str _9820_ident) {
	{
		auto _match_expr{ _9820_ident };
		if (!(jule::Str("out", 3) == _match_expr)) { goto _case_end_4707492752; }
		_case_begin_4707492752:;
		{
			return _10f3f9210_BUILTIN_FN_OUT;
		}
		goto _match_end_4707490656;
		_case_end_4707492752:;
		if (!(jule::Str("outln", 5) == _match_expr)) { goto _case_end_4707492864; }
		_case_begin_4707492864:;
		{
			return _10f3f9210_BUILTIN_FN_OUTLN;
		}
		goto _match_end_4707490656;
		_case_end_4707492864:;
		if (!(jule::Str("new", 3) == _match_expr)) { goto _case_end_4707492496; }
		_case_begin_4707492496:;
		{
			return _10f3f9210_BUILTIN_FN_NEW;
		}
		goto _match_end_4707490656;
		_case_end_4707492496:;
		if (!(jule::Str("real", 4) == _match_expr)) { goto _case_end_4707492608; }
		_case_begin_4707492608:;
		{
			return _10f3f9210_BUILTIN_FN_REAL;
		}
		goto _match_end_4707490656;
		_case_end_4707492608:;
		if (!(jule::Str("drop", 4) == _match_expr)) { goto _case_end_4707492128; }
		_case_begin_4707492128:;
		{
			return _10f3f9210_BUILTIN_FN_DROP;
		}
		goto _match_end_4707490656;
		_case_end_4707492128:;
		if (!(jule::Str("panic", 5) == _match_expr)) { goto _case_end_4707492240; }
		_case_begin_4707492240:;
		{
			return _10f3f9210_BUILTIN_FN_PANIC;
		}
		goto _match_end_4707490656;
		_case_end_4707492240:;
		if (!(jule::Str("make", 4) == _match_expr)) { goto _case_end_4707491472; }
		_case_begin_4707491472:;
		{
			return _10f3f9210_BUILTIN_FN_MAKE;
		}
		goto _match_end_4707490656;
		_case_end_4707491472:;
		if (!(jule::Str("append", 6) == _match_expr)) { goto _case_end_4707491584; }
		_case_begin_4707491584:;
		{
			return _10f3f9210_BUILTIN_FN_APPEND;
		}
		goto _match_end_4707490656;
		_case_end_4707491584:;
		if (!(jule::Str("copy", 4) == _match_expr)) { goto _case_end_4707491696; }
		_case_begin_4707491696:;
		{
			return _10f3f9210_BUILTIN_FN_COPY;
		}
		goto _match_end_4707490656;
		_case_end_4707491696:;
		if (!(jule::Str("recover", 7) == _match_expr)) { goto _case_end_4707493120; }
		_case_begin_4707493120:;
		{
			return _10f3f9210_BUILTIN_FN_RECOVER;
		}
		goto _match_end_4707490656;
		_case_end_4707493120:;
		if (!(jule::Str("clone", 5) == _match_expr)) { goto _case_end_4707493232; }
		_case_begin_4707493232:;
		{
			return _10f3f9210_BUILTIN_FN_CLONE;
		}
		goto _match_end_4707490656;
		_case_end_4707493232:;
		_case_begin_4707490528:;
		{
			return jule::new_ref<_10e56a140_FnIns>();
		}
		goto _match_end_4707490656;
		_case_end_4707490528:;
		_match_end_4707490656:;
	}
}



inline jule::Ref<_10eeb79b0_TypeAlias> _10f3f9210_find_builtin_type_alias(jule::Str _11528_ident) {
	{
		auto _match_expr{ _11528_ident };
		if (!(jule::Str("byte", 4) == _match_expr)) { goto _case_end_4707503360; }
		_case_begin_4707503360:;
		{
			return _10f3f9210_BUILTIN_TYPE_ALIAS_BYTE;
		}
		goto _match_end_4707501776;
		_case_end_4707503360:;
		if (!(jule::Str("rune", 4) == _match_expr)) { goto _case_end_4707503472; }
		_case_begin_4707503472:;
		{
			return _10f3f9210_BUILTIN_TYPE_ALIAS_RUNE;
		}
		goto _match_end_4707501776;
		_case_end_4707503472:;
		_case_begin_4707499760:;
		{
			return jule::new_ref<_10eeb79b0_TypeAlias>();
		}
		goto _match_end_4707501776;
		_case_end_4707499760:;
		_match_end_4707501776:;
	}
}



inline jule::Ref<_10e3d6eb0_Trait> _10f3f9210_find_builtin_trait(jule::Str _12323_ident) {
	{
		auto _match_expr{ _12323_ident };
		if (!(jule::Str("Error", 5) == _match_expr)) { goto _case_end_4707506624; }
		_case_begin_4707506624:;
		{
			return _10f3f9210_BUILTIN_TRAIT_ERROR;
		}
		goto _match_end_4707505600;
		_case_end_4707506624:;
		_case_begin_4707503968:;
		{
			return jule::new_ref<_10e3d6eb0_Trait>();
		}
		goto _match_end_4707505600;
		_case_end_4707503968:;
		_match_end_4707505600:;
	}
}



inline jule::Any _10f3f9210_find_builtin_def(jule::Str _13021_ident) {
	jule::Ref<_10e56a140_FnIns> _13113_f = _10f3f9210_find_builtin_fn(_13021_ident);
	if (jule::real(_13113_f)) {
		return _13113_f;
	}
	jule::Ref<_10eeb79b0_TypeAlias> _13613_ta = _10f3f9210_find_builtin_type_alias(_13021_ident);
	if (jule::real(_13613_ta)) {
		return _13613_ta;
	}
	jule::Ref<_10e3d6eb0_Trait> _14113_t = _10f3f9210_find_builtin_trait(_13021_ident);
	if (jule::real(_14113_t)) {
		return _14113_t;
	}
	return nullptr;
}



inline jule::Any _10f3f9210_find_builtin_def_std_mem(jule::Str _14929_ident) {
	{
		auto _match_expr{ _14929_ident };
		if (!(jule::Str("size_of", 7) == _match_expr)) { goto _case_end_4707516112; }
		_case_begin_4707516112:;
		{
			return _10f3f9210_BUILTIN_FN_STD_MEM_SIZE_OF;
		}
		goto _match_end_4707515136;
		_case_end_4707516112:;
		if (!(jule::Str("align_of", 8) == _match_expr)) { goto _case_end_4707516320; }
		_case_begin_4707516320:;
		{
			return _10f3f9210_BUILTIN_FN_STD_MEM_ALIGN_OF;
		}
		goto _match_end_4707515136;
		_case_end_4707516320:;
		_case_begin_4707513872:;
		{
			return nullptr;
		}
		goto _match_end_4707515136;
		_case_end_4707513872:;
		_match_end_4707515136:;
	}
}



inline jule::Any _10f3f9210_find_package_builtin_def(jule::Str _15729_link_path,jule::Str _15745_ident) {
	{
		auto _match_expr{ _15729_link_path };
		if (!(jule::Str("std::mem", 8) == _match_expr)) { goto _case_end_4707519952; }
		_case_begin_4707519952:;
		{
			return _10f3f9210_find_builtin_def_std_mem(_15745_ident);
		}
		goto _match_end_4707518464;
		_case_end_4707519952:;
		_case_begin_4707518944:;
		{
			return nullptr;
		}
		goto _match_end_4707518464;
		_case_end_4707518944:;
		_match_end_4707518464:;
	}
}



inline jule::Ref<_10ee8a260_Data> _10f3f9210_builtin_caller_common_plain(jule::Ref<_10ee8a260_Eval> _16436_e,jule::Ref<_11ce1fd50_FnCallExpr> _16450_fc,jule::Ref<_10ee8a260_Data> _16471_d) {
	jule::Ref<_10e56a140_FnIns> _16513_f = _16471_d->_field_kind->_method_fnc();
	_10eb9c740_FnCallArgChecker _16713_fcac = _10eb9c740_FnCallArgChecker(_16436_e,_16450_fc->_field_args,_16450_fc->_field_token,_16513_f,false,jule::Slice<jule::Any>());
	_16713_fcac._method_check();
	jule::Ref<_10e9ca470_FnCallExprModel> _17613_model = jule::new_struct<_10e9ca470_FnCallExprModel>(new( std::nothrow ) _10e9ca470_FnCallExprModel(_16513_f,_16450_fc->_field_concurrent,_16471_d->_field_model,_16713_fcac._field_arg_models));
	if ((!jule::real(_16513_f->_field_result))) {
		_16471_d=_10ee8a260_build_void_data();
	} else {
		_16471_d=jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(_16513_f->_field_result,jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
	}
	_16471_d->_field_model=jule::Any(_17613_model);
	return _16471_d;
}



inline jule::Ref<_10ee8a260_Data> _10f3f9210_builtin_caller_common(jule::Ref<_10ee8a260_Eval> _19530_e,jule::Ref<_11ce1fd50_FnCallExpr> _19544_fc,jule::Ref<_10ee8a260_Data> _19565_d) {
	if ((static_cast<jule::I64>(_19544_fc->_field_generics.len()) > 0LL)) {
		_19530_e->_method_push_err(_19544_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	return _10f3f9210_builtin_caller_common_plain(_19530_e,_19544_fc,_19565_d);
}



inline jule::Ref<_10ee8a260_Data> _10f3f9210_builtin_caller_common_mut(jule::Ref<_10ee8a260_Eval> _20334_e,jule::Ref<_11ce1fd50_FnCallExpr> _20348_fc,jule::Ref<_10ee8a260_Data> _20369_d) {
	if ((!_20369_d->_field_mutable)) {
		_20334_e->_method_push_err(_20348_fc->_field_token,jule::Str("mutable_operation_on_immutable", 30),jule::Slice<jule::Any>({}));
	}
	return _10f3f9210_builtin_caller_common(_20334_e,_20348_fc,_20369_d);
}



inline jule::Ref<_10ee8a260_Data> _10f3f9210_builtin_caller_out(jule::Ref<_10ee8a260_Eval> _21027_e,jule::Ref<_11ce1fd50_FnCallExpr> _21041_fc,jule::Ref<_10ee8a260_Data> ) {
	if ((static_cast<jule::I64>(_21041_fc->_field_generics.len()) > 0LL)) {
		_21027_e->_method_push_err(_21041_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	if ((static_cast<jule::I64>(_21041_fc->_field_args.len()) < 1LL)) {
		_21027_e->_method_push_err(_21041_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	if ((static_cast<jule::I64>(_21041_fc->_field_args.len()) > 1LL)) {
		_21027_e->_method_push_err(_21041_fc->_field_args[static_cast<jule::Int>(1LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_10ee8a260_Data> _22213_expr = _21027_e->_method_eval_expr(_21041_fc->_field_args[static_cast<jule::Int>(0LL)]);
	if ((!jule::real(_22213_expr))) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	if ((_22213_expr->_method_is_void() || jule::real(_22213_expr->_field_kind->_method_fnc()))) {
		_21027_e->_method_push_err(_21041_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("invalid_expr", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	jule::Ref<_10ee8a260_Data> _23213_d = _10ee8a260_build_void_data();
	_23213_d->_field_model=jule::Any(jule::new_struct<_10e9ca470_BuiltinOutCallExprModel>(new( std::nothrow ) _10e9ca470_BuiltinOutCallExprModel(_22213_expr->_field_model)));
	return _23213_d;
}



inline jule::Ref<_10ee8a260_Data> _10f3f9210_builtin_caller_outln(jule::Ref<_10ee8a260_Eval> _23729_e,jule::Ref<_11ce1fd50_FnCallExpr> _23743_fc,jule::Ref<_10ee8a260_Data> ) {
	jule::Ref<_10ee8a260_Data> _23813_d = _10f3f9210_builtin_caller_out(_23729_e,_23743_fc,jule::new_ref<_10ee8a260_Data>());
	if ((!jule::real(_23813_d))) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	_23813_d->_field_model=jule::Any(jule::new_struct<_10e9ca470_BuiltinOutlnCallExprModel>(new( std::nothrow ) _10e9ca470_BuiltinOutlnCallExprModel(_23813_d->_field_model.operator jule::Ref<_10e9ca470_BuiltinOutCallExprModel>()->_field_expr)));
	return _23813_d;
}



inline jule::Ref<_10ee8a260_Data> _10f3f9210_builtin_caller_new(jule::Ref<_10ee8a260_Eval> _24927_e,jule::Ref<_11ce1fd50_FnCallExpr> _24941_fc,jule::Ref<_10ee8a260_Data> _24962_d) {
	if ((static_cast<jule::I64>(_24941_fc->_field_generics.len()) > 0LL)) {
		_24927_e->_method_push_err(_24941_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	if ((static_cast<jule::I64>(_24941_fc->_field_args.len()) < 1LL)) {
		_24927_e->_method_push_err(_24941_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("type", 4))}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	if ((static_cast<jule::I64>(_24941_fc->_field_args.len()) > 2LL)) {
		_24927_e->_method_push_err(_24941_fc->_field_args[static_cast<jule::Int>(2LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_10ee8a260_Data> _26113_t = _24927_e->_method_eval_expr_kind(_24941_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_kind);
	if ((!jule::real(_26113_t))) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	if ((!_26113_t->_field_decl)) {
		_24927_e->_method_push_err(_24941_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("invalid_type", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	if ((!_10eeb79b0_is_valid_for_ref(_26113_t->_field_kind))) {
		jule::Ref<_10e3fc8f0_StructIns> _27217_s = _26113_t->_field_kind->_method_strct();
		if (((jule::real(_27217_s) && jule::real(_27217_s->_field_decl)) && _27217_s->_field_decl->_field_cpp_linked)) {
			_24927_e->_method_push_err(_24941_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("cpp_linked_struct_for_ref", 25),jule::Slice<jule::Any>({}));
		} else {
			_24927_e->_method_push_err(_24941_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("invalid_type", 12),jule::Slice<jule::Any>({}));
		}
		return jule::new_ref<_10ee8a260_Data>();
	}
	_24962_d->_field_kind=jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_10eeb79b0_Ref>(new( std::nothrow ) _10eeb79b0_Ref(_26113_t->_field_kind->_method_clone()))));
	if ((static_cast<jule::I64>(_24941_fc->_field_args.len()) == 2LL)) {
		jule::Ref<_10ee8a260_Data> _28417_init = _24927_e->_field_s->_method_evalp(_24941_fc->_field_args[static_cast<jule::Int>(1LL)],_24927_e->_field_lookup,_26113_t->_field_kind);
		if (jule::real(_28417_init)) {
			_26113_t->_field_mutable=true;
			_10e97fcf0_check_mut(_24927_e->_field_s,_26113_t,_28417_init,_24941_fc->_field_args[static_cast<jule::Int>(1LL)]->_field_token);
			_24927_e->_field_s->_method_check_assign_type(_26113_t->_field_kind,_28417_init,_24941_fc->_field_args[static_cast<jule::Int>(1LL)]->_field_token,false);
			if (jule::real(_28417_init->_field_kind->_method_ref())) {
				_28417_init->_field_model=jule::Any(jule::new_struct<_10e9ca470_ExplicitDerefExprModel>(new( std::nothrow ) _10e9ca470_ExplicitDerefExprModel(_28417_init->_field_model)));
			}
			_24962_d->_field_model=jule::Any(jule::new_struct<_10e9ca470_BuiltinNewCallExprModel>(new( std::nothrow ) _10e9ca470_BuiltinNewCallExprModel(_26113_t->_field_kind,_28417_init->_field_model)));
		}
	} else {
		_24962_d->_field_model=jule::Any(jule::new_struct<_10e9ca470_BuiltinNewCallExprModel>(new( std::nothrow ) _10e9ca470_BuiltinNewCallExprModel(_26113_t->_field_kind,jule::Any())));
	}
	return _24962_d;
}



inline jule::Ref<_10ee8a260_Data> _10f3f9210_builtin_caller_real(jule::Ref<_10ee8a260_Eval> _30828_e,jule::Ref<_11ce1fd50_FnCallExpr> _30842_fc,jule::Ref<_10ee8a260_Data> _30863_d) {
	if ((static_cast<jule::I64>(_30842_fc->_field_generics.len()) > 0LL)) {
		_30828_e->_method_push_err(_30842_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	if ((static_cast<jule::I64>(_30842_fc->_field_args.len()) < 1LL)) {
		_30828_e->_method_push_err(_30842_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("ref", 3))}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	if ((static_cast<jule::I64>(_30842_fc->_field_args.len()) > 1LL)) {
		_30828_e->_method_push_err(_30842_fc->_field_args[static_cast<jule::Int>(1LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_10ee8a260_Data> _32013_ref = _30828_e->_method_eval_expr(_30842_fc->_field_args[static_cast<jule::Int>(0LL)]);
	if ((!jule::real(_32013_ref))) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	if ((!jule::real(_32013_ref->_field_kind->_method_ref()))) {
		_30828_e->_method_push_err(_30842_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("invalid_expr", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	_30863_d->_field_kind=_10f3f9210_BUILTIN_FN_REAL->_field_result;
	_30863_d->_field_model=jule::Any(jule::new_struct<_10e9ca470_BuiltinRealCallExprModel>(new( std::nothrow ) _10e9ca470_BuiltinRealCallExprModel(_32013_ref->_field_model)));
	return _30863_d;
}



inline jule::Ref<_10ee8a260_Data> _10f3f9210_builtin_caller_drop(jule::Ref<_10ee8a260_Eval> _33528_e,jule::Ref<_11ce1fd50_FnCallExpr> _33542_fc,jule::Ref<_10ee8a260_Data> ) {
	if ((static_cast<jule::I64>(_33542_fc->_field_generics.len()) > 0LL)) {
		_33528_e->_method_push_err(_33542_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	if ((static_cast<jule::I64>(_33542_fc->_field_args.len()) < 1LL)) {
		_33528_e->_method_push_err(_33542_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("ref", 3))}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	if ((static_cast<jule::I64>(_33542_fc->_field_args.len()) > 1LL)) {
		_33528_e->_method_push_err(_33542_fc->_field_args[static_cast<jule::Int>(2LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_10ee8a260_Data> _34713_ref = _33528_e->_method_eval_expr(_33542_fc->_field_args[static_cast<jule::Int>(0LL)]);
	if ((!jule::real(_34713_ref))) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	if ((!jule::real(_34713_ref->_field_kind->_method_ref()))) {
		_33528_e->_method_push_err(_33542_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("invalid_expr", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	_10e97fcf0_check_mut(_33528_e->_field_s,_34713_ref,jule::new_ref<_10ee8a260_Data>(),_33542_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token);
	jule::Ref<_10ee8a260_Data> _35913_d = _10ee8a260_build_void_data();
	_35913_d->_field_model=jule::Any(jule::new_struct<_10e9ca470_BuiltinDropCallExprModel>(new( std::nothrow ) _10e9ca470_BuiltinDropCallExprModel(_34713_ref->_field_model)));
	return _35913_d;
}



inline jule::Ref<_10ee8a260_Data> _10f3f9210_builtin_caller_panic(jule::Ref<_10ee8a260_Eval> _36429_e,jule::Ref<_11ce1fd50_FnCallExpr> _36443_fc,jule::Ref<_10ee8a260_Data> ) {
	if ((static_cast<jule::I64>(_36443_fc->_field_generics.len()) > 0LL)) {
		_36429_e->_method_push_err(_36443_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	if ((static_cast<jule::I64>(_36443_fc->_field_args.len()) < 1LL)) {
		_36429_e->_method_push_err(_36443_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("error", 5))}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	if ((static_cast<jule::I64>(_36443_fc->_field_args.len()) > 1LL)) {
		_36429_e->_method_push_err(_36443_fc->_field_args[static_cast<jule::Int>(2LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_10ee8a260_Data> _37613_expr = _36429_e->_method_eval_expr(_36443_fc->_field_args[static_cast<jule::Int>(0LL)]);
	if ((!jule::real(_37613_expr))) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	if (jule::real(_37613_expr->_field_kind->_method_strct())) {
		jule::Ref<_10e3fc8f0_StructIns> _38213_s = _37613_expr->_field_kind->_method_strct();
		if (_38213_s->_field_decl->_method_is_implements(_10f3f9210_BUILTIN_TRAIT_ERROR)) {
			_37613_expr->_field_cast_kind=jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10f3f9210_BUILTIN_TRAIT_ERROR));
			_10ee8a260_apply_cast_kind(_37613_expr);
		}
	}
	jule::Ref<_10ee8a260_Data> _39113_d = _10ee8a260_build_void_data();
	_39113_d->_field_model=jule::Any(jule::new_struct<_10e9ca470_BuiltinPanicCallExprModel>(new( std::nothrow ) _10e9ca470_BuiltinPanicCallExprModel(_37613_expr->_field_model)));
	return _39113_d;
}



inline jule::Ref<_10ee8a260_Data> _10f3f9210_builtin_caller_make(jule::Ref<_10ee8a260_Eval> _39628_e,jule::Ref<_11ce1fd50_FnCallExpr> _39642_fc,jule::Ref<_10ee8a260_Data> _39663_d) {
	if ((static_cast<jule::I64>(_39642_fc->_field_generics.len()) > 0LL)) {
		_39628_e->_method_push_err(_39642_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	if ((static_cast<jule::I64>(_39642_fc->_field_args.len()) < 2LL)) {
		if ((static_cast<jule::I64>(_39642_fc->_field_args.len()) == 1LL)) {
			_39628_e->_method_push_err(_39642_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("size", 4))}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		_39628_e->_method_push_err(_39642_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("type, size", 10))}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	if ((static_cast<jule::I64>(_39642_fc->_field_args.len()) > 3LL)) {
		_39628_e->_method_push_err(_39642_fc->_field_args[static_cast<jule::Int>(3LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_10ee8a260_Data> _41213_t = _39628_e->_method_eval_expr_kind(_39642_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_kind);
	if ((!jule::real(_41213_t))) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	if (((!_41213_t->_field_decl) || (!jule::real(_41213_t->_field_kind->_method_slc())))) {
		_39628_e->_method_push_err(_39642_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("invalid_type", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	_39663_d->_field_kind=_41213_t->_field_kind;
	jule::Ref<_10ee8a260_Data> _42413_len = _39628_e->_field_s->_method_evalp(_39642_fc->_field_args[static_cast<jule::Int>(1LL)],_39628_e->_field_lookup,_41213_t->_field_kind);
	if ((!jule::real(_42413_len))) {
		return _39663_d;
	}
	_39628_e->_method_check_integer_indexing_by_data(_42413_len,_39642_fc->_field_args[static_cast<jule::Int>(1LL)]->_field_token);
	if ((static_cast<jule::I64>(_39642_fc->_field_args.len()) == 3LL)) {
		jule::Ref<_10ee8a260_Data> _43217_cap = _39628_e->_field_s->_method_evalp(_39642_fc->_field_args[static_cast<jule::Int>(2LL)],_39628_e->_field_lookup,_41213_t->_field_kind);
		if ((!jule::real(_43217_cap))) {
			return _39663_d;
		}
		_39628_e->_method_check_integer_indexing_by_data(_43217_cap,_39642_fc->_field_args[static_cast<jule::Int>(2LL)]->_field_token);
		_39663_d->_field_model=jule::Any(jule::new_struct<_10e9ca470_BuiltinMakeCallExprModel>(new( std::nothrow ) _10e9ca470_BuiltinMakeCallExprModel(_41213_t->_field_kind,_42413_len->_field_model,_43217_cap->_field_model)));
	} else {
		_39663_d->_field_model=jule::Any(jule::new_struct<_10e9ca470_BuiltinMakeCallExprModel>(new( std::nothrow ) _10e9ca470_BuiltinMakeCallExprModel(_41213_t->_field_kind,_42413_len->_field_model,jule::Any())));
	}
	return _39663_d;
}



inline jule::Ref<_10ee8a260_Data> _10f3f9210_builtin_caller_append(jule::Ref<_10ee8a260_Eval> _45330_e,jule::Ref<_11ce1fd50_FnCallExpr> _45344_fc,jule::Ref<_10ee8a260_Data> _45365_d) {
	if ((static_cast<jule::I64>(_45344_fc->_field_generics.len()) > 0LL)) {
		_45330_e->_method_push_err(_45344_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	if ((static_cast<jule::I64>(_45344_fc->_field_args.len()) < 2LL)) {
		if ((static_cast<jule::I64>(_45344_fc->_field_args.len()) == 1LL)) {
			_45330_e->_method_push_err(_45344_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		_45330_e->_method_push_err(_45344_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	jule::Ref<_10ee8a260_Data> _46613_t = _45330_e->_method_eval_expr(_45344_fc->_field_args[static_cast<jule::Int>(0LL)]);
	if ((!jule::real(_46613_t))) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	jule::Bool _47113_ref = false;
	if (jule::real(_46613_t->_field_kind->_method_ref())) {
		_46613_t->_field_kind=_46613_t->_field_kind->_method_ref()->_field_elem;
		_47113_ref=true;
	}
	if ((!jule::real(_46613_t->_field_kind->_method_slc()))) {
		_45330_e->_method_push_err(_45344_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("invalid_expr", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	jule::Ref<_10e56a140_FnIns> _48213_f = jule::new_struct<_10e56a140_FnIns>(new( std::nothrow ) _10e56a140_FnIns(jule::Ref<_10e3fc8f0_StructIns>(),jule::Ref<_10e56a140_Fn>(),jule::Slice<jule::Ref<_10eeb79b0_TypeKind>>(),jule::Slice<jule::Ref<_10e56a140_ParamIns>>({jule::new_struct<_10e56a140_ParamIns>(new( std::nothrow ) _10e56a140_ParamIns(jule::new_struct<_10e56a140_Param>(new( std::nothrow ) _10e56a140_Param(_11ce22a00_Token(),true,jule::Bool(),jule::Bool(),jule::Ref<_10eeb79b0_TypeSymbol>(),jule::Str())),_46613_t->_field_kind->_method_clone())),jule::new_struct<_10e56a140_ParamIns>(new( std::nothrow ) _10e56a140_ParamIns(jule::new_struct<_10e56a140_Param>(new( std::nothrow ) _10e56a140_Param(_11ce22a00_Token(),true,true,jule::Bool(),jule::Ref<_10eeb79b0_TypeSymbol>(),jule::Str())),_46613_t->_field_kind->_method_slc()->_field_elem->_method_clone()))}),_46613_t->_field_kind->_method_clone(),jule::Ref<_10e97fcf0_Scope>(),_10f3f9210_builtin_caller_common_plain,jule::Bool()));
	_45365_d->_field_kind=jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_48213_f));
	_45365_d->_field_model=jule::Any(jule::new_struct<_10e9ca470_CommonIdentExprModel>(new( std::nothrow ) _10e9ca470_CommonIdentExprModel(jule::Str("append", 6))));
	_45365_d=_10f3f9210_builtin_caller_common_plain(_45330_e,_45344_fc,_45365_d);
	if ((jule::real(_45365_d) && _47113_ref)) {
		_45365_d->_field_model.operator jule::Ref<_10e9ca470_FnCallExprModel>()->_field_args[static_cast<jule::Int>(0LL)]=jule::Any(jule::new_struct<_10e9ca470_ExplicitDerefExprModel>(new( std::nothrow ) _10e9ca470_ExplicitDerefExprModel(_46613_t->_field_model)));
	}
	return _45365_d;
}



inline jule::Ref<_10ee8a260_Data> _10f3f9210_builtin_caller_copy(jule::Ref<_10ee8a260_Eval> _51328_e,jule::Ref<_11ce1fd50_FnCallExpr> _51342_fc,jule::Ref<_10ee8a260_Data> _51363_d) {
	if ((static_cast<jule::I64>(_51342_fc->_field_generics.len()) > 0LL)) {
		_51328_e->_method_push_err(_51342_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	if ((static_cast<jule::I64>(_51342_fc->_field_args.len()) < 2LL)) {
		if ((static_cast<jule::I64>(_51342_fc->_field_args.len()) == 1LL)) {
			_51328_e->_method_push_err(_51342_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return jule::new_ref<_10ee8a260_Data>();
		}
		_51328_e->_method_push_err(_51342_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	if ((static_cast<jule::I64>(_51342_fc->_field_args.len()) > 2LL)) {
		_51328_e->_method_push_err(_51342_fc->_field_args[static_cast<jule::Int>(2LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_10ee8a260_Data> _52913_t = _51328_e->_method_eval_expr(_51342_fc->_field_args[static_cast<jule::Int>(0LL)]);
	if ((!jule::real(_52913_t))) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	jule::Bool _53413_ref = false;
	if (jule::real(_52913_t->_field_kind->_method_ref())) {
		_52913_t->_field_kind=_52913_t->_field_kind->_method_ref()->_field_elem;
		_53413_ref=false;
	}
	if ((!jule::real(_52913_t->_field_kind->_method_slc()))) {
		_51328_e->_method_push_err(_51342_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("invalid_expr", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	if ((!_52913_t->_field_mutable)) {
		_51328_e->_method_push_err(_51342_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("mutable_operation_on_immutable", 30),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_10e56a140_FnIns> _54913_f = jule::new_struct<_10e56a140_FnIns>(new( std::nothrow ) _10e56a140_FnIns(jule::Ref<_10e3fc8f0_StructIns>(),jule::Ref<_10e56a140_Fn>(),jule::Slice<jule::Ref<_10eeb79b0_TypeKind>>(),jule::Slice<jule::Ref<_10e56a140_ParamIns>>({jule::new_struct<_10e56a140_ParamIns>(new( std::nothrow ) _10e56a140_ParamIns(jule::new_struct<_10e56a140_Param>(new( std::nothrow ) _10e56a140_Param()),_52913_t->_field_kind->_method_clone())),jule::new_struct<_10e56a140_ParamIns>(new( std::nothrow ) _10e56a140_ParamIns(jule::new_struct<_10e56a140_Param>(new( std::nothrow ) _10e56a140_Param(_11ce22a00_Token(),true,jule::Bool(),jule::Bool(),jule::Ref<_10eeb79b0_TypeSymbol>(),jule::Str())),_52913_t->_field_kind->_method_clone()))}),_10f3f9210_BUILTIN_FN_COPY->_field_result,jule::Ref<_10e97fcf0_Scope>(),_10f3f9210_builtin_caller_common_plain,jule::Bool()));
	_51363_d->_field_kind=jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_54913_f));
	_51363_d->_field_model=jule::Any(jule::new_struct<_10e9ca470_CommonIdentExprModel>(new( std::nothrow ) _10e9ca470_CommonIdentExprModel(jule::Str("copy", 4))));
	_51363_d=_10f3f9210_builtin_caller_common_plain(_51328_e,_51342_fc,_51363_d);
	if ((jule::real(_51363_d) && _53413_ref)) {
		_51363_d->_field_model.operator jule::Ref<_10e9ca470_FnCallExprModel>()->_field_args[static_cast<jule::Int>(0LL)]=jule::Any(jule::new_struct<_10e9ca470_ExplicitDerefExprModel>(new( std::nothrow ) _10e9ca470_ExplicitDerefExprModel(_52913_t->_field_model)));
	}
	return _51363_d;
}



inline jule::Ref<_10ee8a260_Data> _10f3f9210_builtin_caller_recover(jule::Ref<_10ee8a260_Eval> _57831_e,jule::Ref<_11ce1fd50_FnCallExpr> _57845_fc,jule::Ref<_10ee8a260_Data> ) {
	if ((static_cast<jule::I64>(_57845_fc->_field_generics.len()) > 0LL)) {
		_57831_e->_method_push_err(_57845_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	
	if ((static_cast<jule::I64>(_57845_fc->_field_args.len()) < 1LL)) {
		_57831_e->_method_push_err(_57845_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("handler", 7))}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	if ((static_cast<jule::I64>(_57845_fc->_field_args.len()) > 1LL)) {
		_57831_e->_method_push_err(_57845_fc->_field_args[static_cast<jule::Int>(1LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_10ee8a260_Data> _59213_t = _57831_e->_method_eval_expr(_57845_fc->_field_args[static_cast<jule::Int>(0LL)]);
	if ((!jule::real(_59213_t))) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	if ((!jule::real(_59213_t->_field_kind->_method_fnc()))) {
		_57831_e->_method_push_err(_57845_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("invalid_expr", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	jule::Str _6029_tkind = _59213_t->_field_kind->_method_fnc()->_method_to_str();
	if ((_6029_tkind != jule::Str("fn(Error)", 9))) {
		_57831_e->_method_push_err(_57845_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any(_6029_tkind),jule::Any(jule::Str("fn(Error)", 9))}));
	}
	jule::Ref<_10ee8a260_Data> _60713_d = _10ee8a260_build_void_data();
	_60713_d->_field_kind=_59213_t->_field_kind->_method_clone();
	_60713_d->_field_model=jule::Any(jule::new_struct<_10e97fcf0_Recover>(new( std::nothrow ) _10e97fcf0_Recover(jule::Ref<_10e56a140_FnIns>(),_59213_t->_field_model,jule::Ref<_10e97fcf0_Scope>())));
	return _60713_d;
}



inline jule::Ref<_10ee8a260_Data> _10f3f9210_builtin_caller_clone(jule::Ref<_10ee8a260_Eval> _61529_e,jule::Ref<_11ce1fd50_FnCallExpr> _61543_fc,jule::Ref<_10ee8a260_Data> ) {
	if ((static_cast<jule::I64>(_61543_fc->_field_generics.len()) > 0LL)) {
		_61529_e->_method_push_err(_61543_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	if ((static_cast<jule::I64>(_61543_fc->_field_args.len()) < 1LL)) {
		_61529_e->_method_push_err(_61543_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return jule::new_ref<_10ee8a260_Data>();
	}
	if ((static_cast<jule::I64>(_61543_fc->_field_args.len()) > 1LL)) {
		_61529_e->_method_push_err(_61543_fc->_field_args[static_cast<jule::Int>(1LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_10ee8a260_Data> _62813_d = _61529_e->_method_eval_expr_kind(_61543_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_kind);
	if ((!jule::real(_62813_d))) {
		return jule::new_ref<_10ee8a260_Data>();
	}
	jule::Fn<void(jule::Ref<_10eeb79b0_TypeKind>)> _6339_check_kind = jule::Fn<void(jule::Ref<_10eeb79b0_TypeKind>)>([&](jule::Ref<_10eeb79b0_TypeKind> _63329_k) mutable -> void {
		{
			auto _match_expr{ true };
			if (!(jule::real(_63329_k->_method_slc()) == _match_expr)) { goto _case_end_4707957920; }
			_case_begin_4707957920:;
			{
				if ((!_10eeb79b0_supports_clonning(_63329_k->_method_slc()->_field_elem))) {
					_61529_e->_method_push_err(_61543_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("internal_type_not_supports_clone", 32),jule::Slice<jule::Any>({jule::Any(_63329_k->_method_to_str())}));
				}
			}
			goto _match_end_4707956064;
			_case_end_4707957920:;
			if (!(jule::real(_63329_k->_method_map()) == _match_expr)) { goto _case_end_4707957152; }
			_case_begin_4707957152:;
			{
				if (((!_10eeb79b0_supports_clonning(_63329_k->_method_map()->_field_key)) || _10eeb79b0_supports_clonning(_63329_k->_method_map()->_field_val))) {
					_61529_e->_method_push_err(_61543_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("internal_type_not_supports_clone", 32),jule::Slice<jule::Any>({jule::Any(_63329_k->_method_to_str())}));
				}
			}
			goto _match_end_4707956064;
			_case_end_4707957152:;
			if (!(jule::real(_63329_k->_method_arr()) == _match_expr)) { goto _case_end_4707957264; }
			_case_begin_4707957264:;
			{
				if ((!_10eeb79b0_supports_clonning(_63329_k->_method_arr()->_field_elem))) {
					_61529_e->_method_push_err(_61543_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("internal_type_not_supports_clone", 32),jule::Slice<jule::Any>({jule::Any(_63329_k->_method_to_str())}));
				}
			}
			goto _match_end_4707956064;
			_case_end_4707957264:;
			if (!(jule::real(_63329_k->_method_ref()) == _match_expr)) { goto _case_end_4707956640; }
			_case_begin_4707956640:;
			{
				if ((!_10eeb79b0_supports_clonning(_63329_k->_method_ref()->_field_elem))) {
					_61529_e->_method_push_err(_61543_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("internal_type_not_supports_clone", 32),jule::Slice<jule::Any>({jule::Any(_63329_k->_method_to_str())}));
				}
			}
			goto _match_end_4707956064;
			_case_end_4707956640:;
			if (!(jule::real(_63329_k->_method_strct()) == _match_expr)) { goto _case_end_4707956752; }
			_case_begin_4707956752:;
			{
				jule::Ref<_10e3fc8f0_StructIns> _65617_s = _62813_d->_field_kind->_method_strct();
				if ((!_65617_s->_field_has_mut)) {
					_61529_e->_method_push_err(_61543_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("clone_immut_struct", 18),jule::Slice<jule::Any>({jule::Any(_62813_d->_field_kind->_method_to_str())}));
				}
				if ((((!jule::real(_65617_s->_field_decl)) || _65617_s->_field_decl->_field_cpp_linked) || (!_65617_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
					_61529_e->_method_push_err(_61543_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("type_is_not_derives", 19),jule::Slice<jule::Any>({jule::Any(_62813_d->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
				}
			}
			goto _match_end_4707956064;
			_case_end_4707956752:;
			_case_begin_4707956336:;
			{
				_61529_e->_method_push_err(_61543_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("type_is_not_derives", 19),jule::Slice<jule::Any>({jule::Any(_62813_d->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
			}
			goto _match_end_4707956064;
			_case_end_4707956336:;
			_match_end_4707956064:;
		}
	});
	{
		auto _match_expr{ true };
		if (!(_62813_d->_field_mutable == _match_expr)) { goto _case_end_4708006080; }
		_case_begin_4708006080:;
		{
			_61529_e->_method_push_err(_61543_fc->_field_token,jule::Str("clone_with_mut", 14),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4707984688;
		_case_end_4708006080:;
		if (!((!_62813_d->_field_lvalue) == _match_expr)) { goto _case_end_4708006192; }
		_case_begin_4708006192:;
		{
			_61529_e->_method_push_err(_61543_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("clone_non_lvalue", 16),jule::Slice<jule::Any>({}));
		}
		goto _match_end_4707984688;
		_case_end_4708006192:;
		if (!((!_10eeb79b0_supports_clonning(_62813_d->_field_kind)) == _match_expr)) { goto _case_end_4708005712; }
		_case_begin_4708005712:;
		{
			_6339_check_kind(_62813_d->_field_kind);
		}
		goto _match_end_4707984688;
		_case_end_4708005712:;
		_match_end_4707984688:;
	}
	_62813_d->_field_mutable=true;
	_62813_d->_field_model=jule::Any(jule::new_struct<_10e9ca470_BuiltinCloneCallExprModel>(new( std::nothrow ) _10e9ca470_BuiltinCloneCallExprModel(_62813_d->_field_model)));
	return _62813_d;
}



inline jule::Ref<_10ee8a260_Data> _10f3f9210_builtin_caller_std_mem_size_of(jule::Ref<_10ee8a260_Eval> _68539_e,jule::Ref<_11ce1fd50_FnCallExpr> _68553_fc,jule::Ref<_10ee8a260_Data> ) {
	if ((static_cast<jule::I64>(_68553_fc->_field_generics.len()) > 0LL)) {
		_68539_e->_method_push_err(_68553_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_10ee8a260_Data> _68913_result = jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("uint", 4)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
	if ((static_cast<jule::I64>(_68553_fc->_field_args.len()) < 1LL)) {
		_68539_e->_method_push_err(_68553_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _68913_result;
	}
	if ((static_cast<jule::I64>(_68553_fc->_field_args.len()) > 1LL)) {
		_68539_e->_method_push_err(_68553_fc->_field_args[static_cast<jule::Int>(1LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_10ee8a260_Data> _70113_d = _68539_e->_method_eval_expr_kind(_68553_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_kind);
	if ((!jule::real(_70113_d))) {
		return _68913_result;
	}
	_68913_result->_field_model=jule::Any(jule::new_struct<_10e9ca470_SizeofExprModel>(new( std::nothrow ) _10e9ca470_SizeofExprModel(_70113_d->_field_model)));
	return _68913_result;
}



inline jule::Ref<_10ee8a260_Data> _10f3f9210_builtin_caller_std_mem_align_of(jule::Ref<_10ee8a260_Eval> _71040_e,jule::Ref<_11ce1fd50_FnCallExpr> _71054_fc,jule::Ref<_10ee8a260_Data> ) {
	if ((static_cast<jule::I64>(_71054_fc->_field_generics.len()) > 0LL)) {
		_71040_e->_method_push_err(_71054_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_10ee8a260_Data> _71413_result = jule::new_struct<_10ee8a260_Data>(new( std::nothrow ) _10ee8a260_Data(jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eeb79b0_build_prim_type(jule::Str("uint", 4)))),jule::Ref<_10eeb79b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_10f4ed830_Const>()));
	if ((static_cast<jule::I64>(_71054_fc->_field_args.len()) < 1LL)) {
		_71040_e->_method_push_err(_71054_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _71413_result;
	}
	if ((static_cast<jule::I64>(_71054_fc->_field_args.len()) > 1LL)) {
		_71040_e->_method_push_err(_71054_fc->_field_args[static_cast<jule::Int>(1LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_10ee8a260_Data> _72613_d = _71040_e->_method_eval_expr_kind(_71054_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_kind);
	if ((!jule::real(_72613_d))) {
		return _71413_result;
	}
	_71413_result->_field_model=jule::Any(jule::new_struct<_10e9ca470_AlignofExprModel>(new( std::nothrow ) _10e9ca470_AlignofExprModel(_72613_d->_field_model)));
	return _71413_result;
}



inline void _12ce24da0_exit_err(jule::Str _2213_msg) {
	
	jule::outln(_2213_msg);
	_10cf1adb0_exit(1LL);
}



inline jule::Slice<jule::U8> _12ce24da0_read_buff(jule::Str _2914_path) {
	jule::Slice<jule::U8> _3014_buffer{};
	jule::Int _3022_err{};
	std::tie(_3014_buffer,_3022_err) = _12ce537d0_read_file(_2914_path);
	if ((_3022_err != 0LLU)) {
		_12ce24da0_exit_err(jule::Str("error: file cannot read", 23));
	}
	return _3014_buffer;
}



inline _13cfd2d20_Log _12ce24da0_flat_compiler_err(jule::Str _3722_text) {
	return _13cfd2d20_Log(1LLU,jule::Int(),jule::Int(),jule::Str(),_3722_text);
}



inline std::tuple<jule::Slice<jule::Ref<_12ce4fe70_DirEntry>>,jule::Str> _12ce24da0_read_package_dirents(jule::Str _4425_path) {
	jule::Str _4451_err_msg{jule::Str()};
	jule::Slice<jule::Ref<_12ce4fe70_DirEntry>> _4514_dirents{};
	jule::Int _4523_err{};
	std::tie(_4514_dirents,_4523_err) = _12ce583c0_read_dir(_4425_path);
	if ((_4523_err != 0LLU)) {
		_4451_err_msg = (jule::Str("connot read package directory: ", 31) + _4425_path);
		return std::make_tuple(nullptr,_4451_err_msg);
	}
	jule::Slice<jule::Ref<_12ce4fe70_DirEntry>> _5013_passed_dirents = nullptr;
	{
		auto &__julec_range_expr = _4514_dirents;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_12ce4fe70_DirEntry> _12ce24da0_dirent{jule::Ref<_12ce4fe70_DirEntry>()};_12ce24da0_dirent = *__julec_range_begin;
			_iter_begin_4712791344:;
			{
				jule::Str _5213_name = _12ce24da0_dirent->_field_name;
				if (((_12ce24da0_dirent->_field_stat->_method_is_dir() || (!_5213_name.has_suffix(jule::Str(".jule", 5)))) || (!_10d890250_is_pass_file_annotation(_5213_name)))) {
					goto _iter_next_4712791344;
				}
				_5013_passed_dirents=append(_5013_passed_dirents,jule::Slice<jule::Ref<_12ce4fe70_DirEntry>>({_12ce24da0_dirent}));
			}
			_iter_next_4712791344:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _12ce24da0_dirent = *__julec_range_begin; goto _iter_begin_4712791344; }
			_iter_end_4712791344:;
		}
	}
	_4451_err_msg = jule::Str("", 0);
	return std::make_tuple(_5013_passed_dirents,_4451_err_msg);
}



inline jule::Slice<jule::Str> _12ce09d10_get_all_unique_passes(jule::Ref<_10e9b6a10_Package> _8130_pkg,jule::Slice<jule::Ref<_10e9b6a10_ImportInfo>> _8149_uses) {
	jule::Slice<jule::Str> _8213_passes = nullptr;
	jule::Fn<void(jule::Ref<_10e9b6a10_Package>)> _839_push_passes = jule::Fn<void(jule::Ref<_10e9b6a10_Package>)>([&](jule::Ref<_10e9b6a10_Package> _8330_p) mutable -> void {
		{
			auto &__julec_range_expr = _8330_p->_field_files;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_10ee5c510_SymbolTable> _12ce09d10_f{jule::Ref<_10ee5c510_SymbolTable>()};_12ce09d10_f = *__julec_range_begin;
				_iter_begin_4712862752:;
				{
					jule::Int _8521_i = 0LL;
					_julec_label_push:;
					_iter_begin_4712866304:;
					if (!((_8521_i < static_cast<jule::Int>(_12ce09d10_f->_field_passes._method_len())))) { goto _iter_end_4712866304; }
					{
						_10e8ca650_Pass _8825_pass = _12ce09d10_f->_field_passes._method_at(_8521_i);
						if ((_8825_pass._field_text == jule::Str("", 0))) {
							goto _iter_next_4712866304;
						}
						{
							auto &__julec_range_expr = _8213_passes;
							if (__julec_range_expr.begin() != __julec_range_expr.end()) {
								auto __julec_range_begin = __julec_range_expr.begin();
								const auto __julec_range_end = __julec_range_expr.end();
								jule::Str _12ce09d10_cpass{jule::Str()};_12ce09d10_cpass = *__julec_range_begin;
								_iter_begin_4712871744:;
								{
									if ((_12ce09d10_cpass == _8825_pass._field_text)) {
										goto _iter_next_4712866304;
									}
								}
								_iter_next_4712871744:;
								++__julec_range_begin;
								if (__julec_range_begin != __julec_range_end) { _12ce09d10_cpass = *__julec_range_begin; goto _iter_begin_4712871744; }
								_iter_end_4712871744:;
							}
						}
						_8213_passes=append(_8213_passes,jule::Slice<jule::Str>({_8825_pass._field_text}));
					}
					_iter_next_4712866304:;
					(_8521_i)++;
					goto _iter_begin_4712866304;
					_iter_end_4712866304:;
				}
				_iter_next_4712862752:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _12ce09d10_f = *__julec_range_begin; goto _iter_begin_4712862752; }
				_iter_end_4712862752:;
			}
		}
	});
	_839_push_passes(_8130_pkg);
	{
		auto &__julec_range_expr = _8149_uses;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e9b6a10_ImportInfo> _12ce09d10_u{jule::Ref<_10e9b6a10_ImportInfo>()};_12ce09d10_u = *__julec_range_begin;
			_iter_begin_4712859328:;
			{
				if ((!_12ce09d10_u->_field_cpp_linked)) {
					_839_push_passes(_12ce09d10_u->_field_package);
				}
			}
			_iter_next_4712859328:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _12ce09d10_u = *__julec_range_begin; goto _iter_begin_4712859328; }
			_iter_end_4712859328:;
		}
	}
	return _8213_passes;
}



inline std::tuple<jule::Ref<_12ce09d10_IR>,jule::Slice<_13cfd2d20_Log>> _12ce09d10_build_ir(jule::Str _12017_path) {
	jule::Ref<_12ce24da0_PlainImporter> _12113_importer = jule::new_struct<_12ce24da0_PlainImporter>(new( std::nothrow ) _12ce24da0_PlainImporter());
	jule::Slice<jule::Ref<_11ce19be0_Ast>> _12214_files{};
	jule::Slice<_13cfd2d20_Log> _12225_logs{};
	std::tie(_12214_files,_12225_logs) = _12113_importer->_method_import_package(_12017_path);
	if ((static_cast<jule::I64>(_12225_logs.len()) > 0LL)) {
		return std::make_tuple(jule::new_ref<_12ce09d10_IR>(),_12225_logs);
	}
	if ((static_cast<jule::I64>(_12214_files.len()) == 0LL)) {
		return std::make_tuple(jule::new_ref<_12ce09d10_IR>(),nullptr);
	}
	jule::Ref<_10e9b6a10_Package> _13114_pkg{};
	std::tie(_13114_pkg,_12225_logs) = _10f32caf0_analyze_package(_12214_files,_12113_importer);
	if ((static_cast<jule::I64>(_12225_logs.len()) > 0LL)) {
		return std::make_tuple(jule::new_ref<_12ce09d10_IR>(),_12225_logs);
	}
	jule::Ref<_12ce09d10_IR> _13613_ir = jule::new_struct<_12ce09d10_IR>(new( std::nothrow ) _12ce09d10_IR(jule::Slice<jule::Str>(),_13114_pkg,_12113_importer->_field_all_packages));
	_13613_ir->_field_passes=_12ce09d10_get_all_unique_passes(_13613_ir->_field_main,_13613_ir->_field_used);
	return std::make_tuple(_13613_ir,nullptr);
}



inline jule::Bool _13cf78d70_is_exist_0(jule::Slice<jule::Any> _2616_arr,jule::Ref<_10e56a140_Fn> _2628_t) {
	{
		auto &__julec_range_expr = _2616_arr;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _13cf78d70_ref{jule::Any()};_13cf78d70_ref = *__julec_range_begin;
			_iter_begin_4712982000:;
			{
				{
					auto _match_expr{ _13cf78d70_ref };
					if (!(_match_expr.type_is<jule::Ref<_10e56a140_Fn>>())) { goto _case_end_4712983840; }
					_case_begin_4712983840:;
					{
						if (((_13cf78d70_ref.operator jule::Ref<_10e56a140_Fn>()).alloc == (_2628_t).alloc)) {
							return true;
						}
					}
					goto _match_end_4712984336;
					_case_end_4712983840:;
					_match_end_4712984336:;
				}
			}
			_iter_next_4712982000:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13cf78d70_ref = *__julec_range_begin; goto _iter_begin_4712982000; }
			_iter_end_4712982000:;
		}
	}
	return false;
}

inline jule::Bool _13cf78d70_is_exist_1(jule::Slice<jule::Any> _2616_arr,jule::Ref<_10ebc2ad0_Var> _2628_t) {
	{
		auto &__julec_range_expr = _2616_arr;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _13cf78d70_ref{jule::Any()};_13cf78d70_ref = *__julec_range_begin;
			_iter_begin_4712990720:;
			{
				{
					auto _match_expr{ _13cf78d70_ref };
					if (!(_match_expr.type_is<jule::Ref<_10ebc2ad0_Var>>())) { goto _case_end_4712992560; }
					_case_begin_4712992560:;
					{
						if (((_13cf78d70_ref.operator jule::Ref<_10ebc2ad0_Var>()).alloc == (_2628_t).alloc)) {
							return true;
						}
					}
					goto _match_end_4712993056;
					_case_end_4712992560:;
					_match_end_4712993056:;
				}
			}
			_iter_next_4712990720:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13cf78d70_ref = *__julec_range_begin; goto _iter_begin_4712990720; }
			_iter_end_4712990720:;
		}
	}
	return false;
}

inline jule::Bool _13cf78d70_is_exist_2(jule::Slice<jule::Any> _2616_arr,jule::Ref<_10e3fc8f0_Struct> _2628_t) {
	{
		auto &__julec_range_expr = _2616_arr;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _13cf78d70_ref{jule::Any()};_13cf78d70_ref = *__julec_range_begin;
			_iter_begin_4712999504:;
			{
				{
					auto _match_expr{ _13cf78d70_ref };
					if (!(_match_expr.type_is<jule::Ref<_10e3fc8f0_Struct>>())) { goto _case_end_4713001344; }
					_case_begin_4713001344:;
					{
						if (((_13cf78d70_ref.operator jule::Ref<_10e3fc8f0_Struct>()).alloc == (_2628_t).alloc)) {
							return true;
						}
					}
					goto _match_end_4713001840;
					_case_end_4713001344:;
					_match_end_4713001840:;
				}
			}
			_iter_next_4712999504:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13cf78d70_ref = *__julec_range_begin; goto _iter_begin_4712999504; }
			_iter_end_4712999504:;
		}
	}
	return false;
}

inline jule::Bool _13cf78d70_is_exist_3(jule::Slice<jule::Any> _2616_arr,jule::Ref<_10e3d6eb0_Trait> _2628_t) {
	{
		auto &__julec_range_expr = _2616_arr;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _13cf78d70_ref{jule::Any()};_13cf78d70_ref = *__julec_range_begin;
			_iter_begin_4713008224:;
			{
				{
					auto _match_expr{ _13cf78d70_ref };
					if (!(_match_expr.type_is<jule::Ref<_10e3d6eb0_Trait>>())) { goto _case_end_4713010064; }
					_case_begin_4713010064:;
					{
						if (((_13cf78d70_ref.operator jule::Ref<_10e3d6eb0_Trait>()).alloc == (_2628_t).alloc)) {
							return true;
						}
					}
					goto _match_end_4713010560;
					_case_end_4713010064:;
					_match_end_4713010560:;
				}
			}
			_iter_next_4713008224:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13cf78d70_ref = *__julec_range_begin; goto _iter_begin_4713008224; }
			_iter_end_4713008224:;
		}
	}
	return false;
}



inline jule::Bool _13cf78d70_is_exist_ref(jule::Slice<jule::Any> _3821_refs,jule::Any _3834_ref) {
	{
		auto _match_expr{ _3834_ref };
		if (!(_match_expr.type_is<jule::Ref<_10e56a140_Fn>>())) { goto _case_end_4712974752; }
		_case_begin_4712974752:;
		{
			return _13cf78d70_is_exist_0(_3821_refs,_3834_ref.operator jule::Ref<_10e56a140_Fn>());
		}
		goto _match_end_4712952624;
		_case_end_4712974752:;
		if (!(_match_expr.type_is<jule::Ref<_10ebc2ad0_Var>>())) { goto _case_end_4712975056; }
		_case_begin_4712975056:;
		{
			return _13cf78d70_is_exist_1(_3821_refs,_3834_ref.operator jule::Ref<_10ebc2ad0_Var>());
		}
		goto _match_end_4712952624;
		_case_end_4712975056:;
		if (!(_match_expr.type_is<jule::Ref<_10e3fc8f0_Struct>>())) { goto _case_end_4712975168; }
		_case_begin_4712975168:;
		{
			return _13cf78d70_is_exist_2(_3821_refs,_3834_ref.operator jule::Ref<_10e3fc8f0_Struct>());
		}
		goto _match_end_4712952624;
		_case_end_4712975168:;
		if (!(_match_expr.type_is<jule::Ref<_10e3d6eb0_Trait>>())) { goto _case_end_4712974240; }
		_case_begin_4712974240:;
		{
			return _13cf78d70_is_exist_3(_3821_refs,_3834_ref.operator jule::Ref<_10e3d6eb0_Trait>());
		}
		goto _match_end_4712952624;
		_case_end_4712974240:;
		_case_begin_4712952752:;
		{
			return false;
		}
		goto _match_end_4712952624;
		_case_end_4712952752:;
		_match_end_4712952624:;
	}
}



inline jule::Bool _13cf78d70_is_dead(jule::Any _4816_ref) {
	jule::Bool _4828_dead{jule::Bool()};
	if (_13cf78d70_is_exist_ref(_13cf78d70_deads,_4816_ref)) {
		_4828_dead = true;
		return _4828_dead;
	}
	if (_13cf78d70_is_exist_ref(_13cf78d70_checking,_4816_ref)) {
		_4828_dead = false;
		return _4828_dead;
	}
	jule::Any _5813_old = _13cf78d70_current;
	_13cf78d70_current=_4816_ref;
	jule::I64 _609_len = static_cast<jule::I64>(_13cf78d70_checking.len());
	_13cf78d70_checking=append(_13cf78d70_checking,jule::Slice<jule::Any>({_4816_ref}));
	__JULE_DEFER({
		_13cf78d70_current=_5813_old;
		{
			_13cf78d70_drop_ref((&_13cf78d70_checking),_609_len);
		}
		if (_4828_dead) {
			_13cf78d70_deads=append(_13cf78d70_deads,jule::Slice<jule::Any>({_4816_ref}));
		}
	});
	{
		auto _match_expr{ _4816_ref };
		if (!(_match_expr.type_is<jule::Ref<_10e56a140_Fn>>())) { goto _case_end_4714343232; }
		_case_begin_4714343232:;
		{
			_4828_dead = _13cf78d70_is_fn_dead(_4816_ref.operator jule::Ref<_10e56a140_Fn>());
			return _4828_dead;
		}
		goto _match_end_4713730608;
		_case_end_4714343232:;
		if (!(_match_expr.type_is<jule::Ref<_10ebc2ad0_Var>>())) { goto _case_end_4714337632; }
		_case_begin_4714337632:;
		{
			_4828_dead = _13cf78d70_is_var_dead(_4816_ref.operator jule::Ref<_10ebc2ad0_Var>());
			return _4828_dead;
		}
		goto _match_end_4713730608;
		_case_end_4714337632:;
		if (!(_match_expr.type_is<jule::Ref<_10e3fc8f0_Struct>>())) { goto _case_end_4714365584; }
		_case_begin_4714365584:;
		{
			_4828_dead = _13cf78d70_is_struct_dead(_4816_ref.operator jule::Ref<_10e3fc8f0_Struct>());
			return _4828_dead;
		}
		goto _match_end_4713730608;
		_case_end_4714365584:;
		if (!(_match_expr.type_is<jule::Ref<_10e3d6eb0_Trait>>())) { goto _case_end_4714367488; }
		_case_begin_4714367488:;
		{
			_4828_dead = _13cf78d70_is_trait_dead(_4816_ref.operator jule::Ref<_10e3d6eb0_Trait>());
			return _4828_dead;
		}
		goto _match_end_4713730608;
		_case_end_4714367488:;
		_case_begin_4713734000:;
		{
			_4828_dead = false;
			return _4828_dead;
		}
		goto _match_end_4713730608;
		_case_end_4713734000:;
		_match_end_4713730608:;
	}
}



inline void _13cf78d70_drop_ref(jule::Slice<jule::Any>* _7924_refs,jule::Int _7938_pos) {
	(*_7924_refs)=(*_7924_refs).slice(0LL,static_cast<jule::Int>(_7938_pos));
}



inline jule::Bool _13cf78d70_is_all_references_are_dead_0(jule::Ref<_10e8ca650_ReferenceStack> _8838_references) {
	jule::Int _8913_i = 0LL;
	_iter_begin_4714381216:;
	if (!((_8913_i < static_cast<jule::Int>(_8838_references->_method_len())))) { goto _iter_end_4714381216; }
	{
		jule::Any _9117_ref = _8838_references->_method_at(_8913_i);
		{
			auto _match_expr{ _13cf78d70_current };
			if (!(_match_expr.type_is<jule::Ref<_10e56a140_Fn>>())) { goto _case_end_4714385056; }
			_case_begin_4714385056:;
			{
				{
					auto _match_expr{ _9117_ref };
					if (!(_match_expr.type_is<jule::Ref<_10e56a140_Fn>>())) { goto _case_end_4714385968; }
					_case_begin_4714385968:;
					{
						if (((_13cf78d70_current.operator jule::Ref<_10e56a140_Fn>()).alloc == (_9117_ref.operator jule::Ref<_10e56a140_Fn>()).alloc)) {
							goto _iter_next_4714381216;
						}
					}
					goto _match_end_4714386960;
					_case_end_4714385968:;
					_match_end_4714386960:;
				}
			}
			goto _match_end_4714382624;
			_case_end_4714385056:;
			_match_end_4714382624:;
		}
		if ((!_13cf78d70_is_dead(_9117_ref))) {
			return false;
		}
	}
	_iter_next_4714381216:;
	(_8913_i)++;
	goto _iter_begin_4714381216;
	_iter_end_4714381216:;
	return true;
}

inline jule::Bool _13cf78d70_is_all_references_are_dead_1(jule::Ref<_10e8ca650_ReferenceStack> _8838_references) {
	jule::Int _8913_i = 0LL;
	_iter_begin_4715464688:;
	if (!((_8913_i < static_cast<jule::Int>(_8838_references->_method_len())))) { goto _iter_end_4715464688; }
	{
		jule::Any _9117_ref = _8838_references->_method_at(_8913_i);
		{
			auto _match_expr{ _13cf78d70_current };
			if (!(_match_expr.type_is<jule::Ref<_10ebc2ad0_Var>>())) { goto _case_end_4715467968; }
			_case_begin_4715467968:;
			{
				{
					auto _match_expr{ _9117_ref };
					if (!(_match_expr.type_is<jule::Ref<_10ebc2ad0_Var>>())) { goto _case_end_4715468928; }
					_case_begin_4715468928:;
					{
						if (((_13cf78d70_current.operator jule::Ref<_10ebc2ad0_Var>()).alloc == (_9117_ref.operator jule::Ref<_10ebc2ad0_Var>()).alloc)) {
							goto _iter_next_4715464688;
						}
					}
					goto _match_end_4715469920;
					_case_end_4715468928:;
					_match_end_4715469920:;
				}
			}
			goto _match_end_4715466096;
			_case_end_4715467968:;
			_match_end_4715466096:;
		}
		if ((!_13cf78d70_is_dead(_9117_ref))) {
			return false;
		}
	}
	_iter_next_4715464688:;
	(_8913_i)++;
	goto _iter_begin_4715464688;
	_iter_end_4715464688:;
	return true;
}

inline jule::Bool _13cf78d70_is_all_references_are_dead_2(jule::Ref<_10e8ca650_ReferenceStack> _8838_references) {
	jule::Int _8913_i = 0LL;
	_iter_begin_4715483984:;
	if (!((_8913_i < static_cast<jule::Int>(_8838_references->_method_len())))) { goto _iter_end_4715483984; }
	{
		jule::Any _9117_ref = _8838_references->_method_at(_8913_i);
		{
			auto _match_expr{ _13cf78d70_current };
			if (!(_match_expr.type_is<jule::Ref<_10e3fc8f0_Struct>>())) { goto _case_end_4715487264; }
			_case_begin_4715487264:;
			{
				{
					auto _match_expr{ _9117_ref };
					if (!(_match_expr.type_is<jule::Ref<_10e3fc8f0_Struct>>())) { goto _case_end_4715488224; }
					_case_begin_4715488224:;
					{
						if (((_13cf78d70_current.operator jule::Ref<_10e3fc8f0_Struct>()).alloc == (_9117_ref.operator jule::Ref<_10e3fc8f0_Struct>()).alloc)) {
							goto _iter_next_4715483984;
						}
					}
					goto _match_end_4715489216;
					_case_end_4715488224:;
					_match_end_4715489216:;
				}
			}
			goto _match_end_4715485584;
			_case_end_4715487264:;
			_match_end_4715485584:;
		}
		if ((!_13cf78d70_is_dead(_9117_ref))) {
			return false;
		}
	}
	_iter_next_4715483984:;
	(_8913_i)++;
	goto _iter_begin_4715483984;
	_iter_end_4715483984:;
	return true;
}



inline jule::Bool _13cf78d70_is_fn_dead(jule::Ref<_10e56a140_Fn> _10819_f) {
	if ((((((!_10819_f->_field_global) || _10819_f->_field_cpp_linked) || _10819_f->_method_is_entry_point()) || _10819_f->_method_is_init()) || _10819_f->_method_is_anon())) {
		return false;
	}
	if ((static_cast<jule::I64>(_10819_f->_field_generics.len()) > 0LL)) {
		return (static_cast<jule::I64>(_10819_f->_field_instances.len()) == 0LL);
	}
	return _13cf78d70_is_all_references_are_dead_0(_10819_f->_field_references);
}



inline jule::Bool _13cf78d70_is_var_dead(jule::Ref<_10ebc2ad0_Var> _12220_v) {
	if (_12220_v->_field_constant) {
		return true;
	}
	if (_12220_v->_field_cpp_linked) {
		return false;
	}
	return _13cf78d70_is_all_references_are_dead_1(_12220_v->_field_references);
}



inline jule::Bool _13cf78d70_is_struct_dead(jule::Ref<_10e3fc8f0_Struct> _13423_s) {
	if (_13423_s->_field_cpp_linked) {
		return false;
	}
	if ((static_cast<jule::I64>(_13423_s->_field_generics.len()) > 0LL)) {
		return (static_cast<jule::I64>(_13423_s->_field_instances.len()) == 0LL);
	}
	return _13cf78d70_is_all_references_are_dead_2(_13423_s->_field_references);
}



inline jule::Bool _13cf78d70_is_trait_dead(jule::Ref<_10e3d6eb0_Trait> _14822_t) {
	{
		auto &__julec_range_expr = _14822_t->_field_implemented;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e3fc8f0_Struct> _13cf78d70_imp{jule::Ref<_10e3fc8f0_Struct>()};_13cf78d70_imp = *__julec_range_begin;
			_iter_begin_4715494432:;
			{
				if ((!_13cf78d70_is_struct_dead(_13cf78d70_imp))) {
					return false;
				}
			}
			_iter_next_4715494432:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13cf78d70_imp = *__julec_range_begin; goto _iter_begin_4715494432; }
			_iter_end_4715494432:;
		}
	}
	return true;
}



inline void _13cf78d70_eliminate_dead_functions(_10dba8790_Vector_11* _15740_funcs) {
	jule::Int _15813_i = 0LL;
	_iter_begin_4715495296:;
	if (!((_15813_i < static_cast<jule::Int>(_15740_funcs->_method_len())))) { goto _iter_end_4715495296; }
	{
		jule::Ref<_10e56a140_Fn> _16017_f = _15740_funcs->_method_at(_15813_i);
		if (_13cf78d70_is_fn_dead(_16017_f)) {
			_15740_funcs->_method_remove_range(_15813_i,1LL);
		} else {
			{
				auto &__julec_range_expr = _16017_f->_field_instances;
				if (__julec_range_expr.begin() != __julec_range_expr.end()) {
					auto __julec_range_begin = __julec_range_expr.begin();
					const auto __julec_range_end = __julec_range_expr.end();
					jule::Ref<_10e56a140_FnIns> _13cf78d70_ins{jule::Ref<_10e56a140_FnIns>()};_13cf78d70_ins = *__julec_range_begin;
					_iter_begin_4715505952:;
					{
						_13cf6e710_eliminate_dead_code_of_scope(_13cf78d70_ins->_field_scope);
					}
					_iter_next_4715505952:;
					++__julec_range_begin;
					if (__julec_range_begin != __julec_range_end) { _13cf78d70_ins = *__julec_range_begin; goto _iter_begin_4715505952; }
					_iter_end_4715505952:;
				}
			}
			(_15813_i)++;
		}
	}
	_iter_next_4715495296:;
	goto _iter_begin_4715495296;
	_iter_end_4715495296:;
}



inline void _13cf78d70_eliminate_dead_globals(jule::Ref<_10e9b6a10_Package> _17231_pkg) {
	{
		auto &__julec_range_expr = _17231_pkg->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ee5c510_SymbolTable> _13cf78d70_f{jule::Ref<_10ee5c510_SymbolTable>()};_13cf78d70_f = *__julec_range_begin;
			_iter_begin_4715499184:;
			{
				jule::Int _17417_i = 0LL;
				_iter_begin_4715511888:;
				if (!((_17417_i < static_cast<jule::Int>(_13cf78d70_f->_field_vars._method_len())))) { goto _iter_end_4715511888; }
				{
					if (_13cf78d70_is_var_dead(_13cf78d70_f->_field_vars._method_at(_17417_i))) {
						_13cf78d70_f->_field_vars._method_remove_range(_17417_i,1LL);
					} else {
						(_17417_i)++;
					}
				}
				_iter_next_4715511888:;
				goto _iter_begin_4715511888;
				_iter_end_4715511888:;
			}
			_iter_next_4715499184:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13cf78d70_f = *__julec_range_begin; goto _iter_begin_4715499184; }
			_iter_end_4715499184:;
		}
	}
}



inline void _13cf78d70_eliminate_dead_functions_package(jule::Ref<_10e9b6a10_Package> _18541_pkg) {
	{
		auto &__julec_range_expr = _18541_pkg->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ee5c510_SymbolTable> _13cf78d70_f{jule::Ref<_10ee5c510_SymbolTable>()};_13cf78d70_f = *__julec_range_begin;
			_iter_begin_4715518432:;
			{
				{
					_13cf78d70_eliminate_dead_functions((&_13cf78d70_f->_field_funcs));
				}
			}
			_iter_next_4715518432:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13cf78d70_f = *__julec_range_begin; goto _iter_begin_4715518432; }
			_iter_end_4715518432:;
		}
	}
}



inline void _13cf78d70_eliminate_dead_structs(jule::Ref<_10e9b6a10_Package> _19131_pkg) {
	{
		auto &__julec_range_expr = _19131_pkg->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ee5c510_SymbolTable> _13cf78d70_f{jule::Ref<_10ee5c510_SymbolTable>()};_13cf78d70_f = *__julec_range_begin;
			_iter_begin_4715510352:;
			{
				jule::Int _19317_i = 0LL;
				_iter_begin_4715524768:;
				if (!((_19317_i < static_cast<jule::Int>(_13cf78d70_f->_field_structs._method_len())))) { goto _iter_end_4715524768; }
				{
					jule::Ref<_10e3fc8f0_Struct> _19521_s = _13cf78d70_f->_field_structs._method_at(_19317_i);
					if (_13cf78d70_is_struct_dead(_19521_s)) {
						_13cf78d70_f->_field_structs._method_remove_range(_19317_i,1LL);
					} else {
						{
							_13cf78d70_eliminate_dead_functions((&_19521_s->_field_methods));
						}
						(_19317_i)++;
					}
				}
				_iter_next_4715524768:;
				goto _iter_begin_4715524768;
				_iter_end_4715524768:;
			}
			_iter_next_4715510352:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13cf78d70_f = *__julec_range_begin; goto _iter_begin_4715510352; }
			_iter_end_4715510352:;
		}
	}
}



inline void _13cf78d70_eliminate_dead_traits(jule::Ref<_10e9b6a10_Package> _21030_pkg) {
	{
		auto &__julec_range_expr = _21030_pkg->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ee5c510_SymbolTable> _13cf78d70_f{jule::Ref<_10ee5c510_SymbolTable>()};_13cf78d70_f = *__julec_range_begin;
			_iter_begin_4715523280:;
			{
				jule::Int _21217_i = 0LL;
				_iter_begin_4715536576:;
				if (!((_21217_i < static_cast<jule::Int>(_13cf78d70_f->_field_traits._method_len())))) { goto _iter_end_4715536576; }
				{
					if (_13cf78d70_is_trait_dead(_13cf78d70_f->_field_traits._method_at(_21217_i))) {
						_13cf78d70_f->_field_traits._method_remove_range(_21217_i,1LL);
					} else {
						(_21217_i)++;
					}
				}
				_iter_next_4715536576:;
				goto _iter_begin_4715536576;
				_iter_end_4715536576:;
			}
			_iter_next_4715523280:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13cf78d70_f = *__julec_range_begin; goto _iter_begin_4715523280; }
			_iter_end_4715523280:;
		}
	}
}



inline void _13cf78d70_eliminate_dead_code_package(jule::Ref<_10e9b6a10_Package> _22336_pkg) {
	_13cf78d70_eliminate_dead_globals(_22336_pkg);
	_13cf78d70_eliminate_dead_functions_package(_22336_pkg);
	_13cf78d70_eliminate_dead_structs(_22336_pkg);
	_13cf78d70_eliminate_dead_traits(_22336_pkg);
}



inline void _13cf78d70_eliminate_dead_code(jule::Ref<_12ce09d10_IR> _23032_ir) {
	{
		auto &__julec_range_expr = _23032_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e9b6a10_ImportInfo> _13cf78d70_u{jule::Ref<_10e9b6a10_ImportInfo>()};_13cf78d70_u = *__julec_range_begin;
			_iter_begin_4715548752:;
			{
				if ((!_13cf78d70_u->_field_cpp_linked)) {
					_13cf78d70_eliminate_dead_code_package(_13cf78d70_u->_field_package);
				}
			}
			_iter_next_4715548752:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13cf78d70_u = *__julec_range_begin; goto _iter_begin_4715548752; }
			_iter_end_4715548752:;
		}
	}
	_13cf78d70_eliminate_dead_code_package(_23032_ir->_field_main);
	_13cf78d70_deads=nullptr;
	_13cf78d70_checking=nullptr;
	_13cf78d70_current=jule::Any(nullptr);
}



inline void _13cf6e710_eliminate_dead_code_of_scope(jule::Ref<_10e97fcf0_Scope> _6437_s) {
	jule::Ref<_13cf6e710_ScopeDeadCode> _6513_sdc = jule::new_struct<_13cf6e710_ScopeDeadCode>(new( std::nothrow ) _13cf6e710_ScopeDeadCode(jule::Ref<_13cf6e710_ScopeDeadCode>(),_6437_s,(&_6437_s->_field_stmts),jule::Int()));
	{
		_6513_sdc->_method_optimize_stmts();
	}
}



inline void _12ce1e490_push_opt_level(jule::Int _2623_level) {
	{
		auto _match_expr{ _2623_level };
		if (!(0LLU == _match_expr)) { goto _case_end_4715603424; }
		_case_begin_4715603424:;
		{
			_12ce1e490_OPTIMIZATIONS=nullptr;
		}
		goto _match_end_4715602432;
		_case_end_4715603424:;
		if (!(1LLU == _match_expr)) { goto _case_end_4715603536; }
		_case_begin_4715603536:;
		{
			_12ce1e490_OPTIMIZATIONS=append(_12ce1e490_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-copy", 10),jule::Str("--opt-deadcode", 14)}));
		}
		goto _match_end_4715602432;
		_case_end_4715603536:;
		_case_begin_4715601808:;
		{
			return;
		}
		goto _match_end_4715602432;
		_case_end_4715601808:;
		_match_end_4715602432:;
	}
}



inline jule::Bool _12ce1e490_is_opt_enabled(jule::Str _4223_opt) {
	{
		auto &__julec_range_expr = _12ce1e490_OPTIMIZATIONS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _12ce1e490_oopt{jule::Str("--opt-copy", 10)};_12ce1e490_oopt = *__julec_range_begin;
			_iter_begin_4715600096:;
			{
				if ((_4223_opt == _12ce1e490_oopt)) {
					return true;
				}
			}
			_iter_next_4715600096:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _12ce1e490_oopt = *__julec_range_begin; goto _iter_begin_4715600096; }
			_iter_end_4715600096:;
		}
	}
	return false;
}



inline jule::Str _10e890bb0_gen_if(jule::Ref<_10e97fcf0_If> _13015_i) {
	jule::Str _13113_obj = jule::Str("if (", 4);
	_13113_obj+=_10f32ecc0_gen_expr(_13015_i->_field_expr);
	_13113_obj+=jule::Str(") ", 2);
	_13113_obj+=_10e890bb0_gen_scope(_13015_i->_field_scope);
	return _13113_obj;
}



inline jule::Str _10e890bb0_gen_conditional(jule::Ref<_10e97fcf0_Conditional> _13824_c) {
	jule::Str _13913_obj = _10e890bb0_gen_if(_13824_c->_field_elifs[static_cast<jule::Int>(0LL)]);
	{
		auto __julec_range_expr = _13824_c->_field_elifs.slice(static_cast<jule::Int>(1LL));
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e97fcf0_If> _10e890bb0_elif{jule::Ref<_10e97fcf0_If>()};_10e890bb0_elif = *__julec_range_begin;
			_iter_begin_4715895456:;
			{
				_13913_obj+=jule::Str(" else ", 6);
				_13913_obj+=_10e890bb0_gen_if(_10e890bb0_elif);
			}
			_iter_next_4715895456:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e890bb0_elif = *__julec_range_begin; goto _iter_begin_4715895456; }
			_iter_end_4715895456:;
		}
	}
	if (jule::real(_13824_c->_field_default)) {
		_13913_obj+=jule::Str(" else ", 6);
		_13913_obj+=_10e890bb0_gen_scope(_13824_c->_field_default->_field_scope);
	}
	return _13913_obj;
}



inline jule::Str _10e890bb0_gen_inf_iter(jule::Ref<_10e97fcf0_InfIter> _15421_it) {
	jule::Str _1559_begin = _10eb3a1d0_iter_begin_label_ident(((jule::Uintptr)((_15421_it).alloc)));
	jule::Str _1569_end = _10eb3a1d0_iter_end_label_ident(((jule::Uintptr)((_15421_it).alloc)));
	jule::Str _1579_next = _10eb3a1d0_iter_next_label_ident(((jule::Uintptr)((_15421_it).alloc)));
	jule::Str _1589_indent = _10f7d1d90_indent();
	jule::Str _16013_obj = (_1559_begin + jule::Str(":;\n", 3));
	_16013_obj+=_1589_indent;
	_16013_obj+=_10e890bb0_gen_scope(_15421_it->_field_scope);
	_16013_obj+=jule::Str("\n", 1);
	_16013_obj+=_1589_indent;
	_16013_obj+=(_1579_next + jule::Str(":;\n", 3));
	_16013_obj+=_1589_indent;
	_16013_obj+=((jule::Str("goto ", 5) + _1559_begin) + jule::Str(";\n", 2));
	_16013_obj+=_1589_indent;
	_16013_obj+=(_1569_end + jule::Str(":;", 2));
	return _16013_obj;
}



inline jule::Str _10e890bb0_gen_while_iter(jule::Ref<_10e97fcf0_WhileIter> _17423_it) {
	jule::Str _1759_begin = _10eb3a1d0_iter_begin_label_ident(((jule::Uintptr)((_17423_it).alloc)));
	jule::Str _1769_end = _10eb3a1d0_iter_end_label_ident(((jule::Uintptr)((_17423_it).alloc)));
	jule::Str _1779_next = _10eb3a1d0_iter_next_label_ident(((jule::Uintptr)((_17423_it).alloc)));
	jule::Str _1789_indent = _10f7d1d90_indent();
	jule::Str _18013_obj = (_1759_begin + jule::Str(":;\n", 3));
	_18013_obj+=_1789_indent;
	if ((_17423_it->_field_expr != nullptr)) {
		_18013_obj+=jule::Str("if (!(", 6);
		_18013_obj+=_10f32ecc0_gen_expr(_17423_it->_field_expr);
		_18013_obj+=jule::Str(")) { goto ", 10);
		_18013_obj+=_1769_end;
		_18013_obj+=jule::Str("; }\n", 4);
		_18013_obj+=_1789_indent;
	}
	_18013_obj+=_10e890bb0_gen_scope(_17423_it->_field_scope);
	_18013_obj+=jule::Str("\n", 1);
	_18013_obj+=_1789_indent;
	_18013_obj+=(_1779_next + jule::Str(":;\n", 3));
	_18013_obj+=_1789_indent;
	if ((_17423_it->_field_next != nullptr)) {
		_18013_obj+=_10e890bb0_gen_st(_17423_it->_field_next);
		_18013_obj+=jule::Str("\n", 1);
		_18013_obj+=_1789_indent;
	}
	_18013_obj+=((jule::Str("goto ", 5) + _1759_begin) + jule::Str(";\n", 2));
	_18013_obj+=_1789_indent;
	_18013_obj+=(_1769_end + jule::Str(":;", 2));
	return _18013_obj;
}



inline jule::Trait<_10e890bb0_RangeSetter> _10e890bb0_get_range_setter(jule::Ref<_10e97fcf0_RangeIter> _20725_it) {
	{
		auto _match_expr{ true };
		if (!(jule::real(_20725_it->_field_expr->_field_kind->_method_slc()) == _match_expr)) { goto _case_end_4715939088; }
		_case_begin_4715939088:;
		{
			return jule::new_struct<_10e890bb0_IndexRangeSetter>(new( std::nothrow ) _10e890bb0_IndexRangeSetter());
		}
		goto _match_end_4715924688;
		_case_end_4715939088:;
		if (!(jule::real(_20725_it->_field_expr->_field_kind->_method_arr()) == _match_expr)) { goto _case_end_4715940944; }
		_case_begin_4715940944:;
		{
			return jule::new_struct<_10e890bb0_IndexRangeSetter>(new( std::nothrow ) _10e890bb0_IndexRangeSetter());
		}
		goto _match_end_4715924688;
		_case_end_4715940944:;
		if (!(jule::real(_20725_it->_field_expr->_field_kind->_method_map()) == _match_expr)) { goto _case_end_4715941056; }
		_case_begin_4715941056:;
		{
			return jule::new_struct<_10e890bb0_MapRangeSetter>(new( std::nothrow ) _10e890bb0_MapRangeSetter());
		}
		goto _match_end_4715924688;
		_case_end_4715941056:;
		_case_begin_4715936272:;
		{
			return jule::new_struct<_10e890bb0_IndexRangeSetter>(new( std::nothrow ) _10e890bb0_IndexRangeSetter());
		}
		goto _match_end_4715924688;
		_case_end_4715936272:;
		_match_end_4715924688:;
	}
}



inline jule::Str _10e890bb0_gen_range_iter(jule::Ref<_10e97fcf0_RangeIter> _21623_it) {
	_10f7d1d90_add_indent();
	jule::Str _2199_begin = _10eb3a1d0_iter_begin_label_ident(((jule::Uintptr)((_21623_it).alloc)));
	jule::Str _2209_end = _10eb3a1d0_iter_end_label_ident(((jule::Uintptr)((_21623_it).alloc)));
	jule::Str _2219_next = _10eb3a1d0_iter_next_label_ident(((jule::Uintptr)((_21623_it).alloc)));
	jule::Str _22213__indent = _10f7d1d90_indent();
	jule::Trait<_10e890bb0_RangeSetter> _2239_setter = _10e890bb0_get_range_setter(_21623_it);
	jule::Str _22513_obj = jule::Str("{\n", 2);
	_22513_obj+=_22213__indent;
	if ((_21623_it->_field_expr->_field_lvalue && _12ce1e490_is_opt_enabled(jule::Str("--opt-copy", 10)))) {
		_22513_obj+=jule::Str("auto &__julec_range_expr = ", 27);
	} else {
		_22513_obj+=jule::Str("auto __julec_range_expr = ", 26);
	}
	_22513_obj+=(_10f32ecc0_gen_expr(_21623_it->_field_expr->_field_model) + jule::Str(";\n", 2));
	_22513_obj+=_22213__indent;
	_22513_obj+=jule::Str("if (__julec_range_expr.begin() != __julec_range_expr.end()) {\n", 62);
	_10f7d1d90_add_indent();
	_22213__indent=_10f7d1d90_indent();
	_22513_obj+=_22213__indent;
	_22513_obj+=jule::Str("auto __julec_range_begin = __julec_range_expr.begin();\n", 55);
	_22513_obj+=_22213__indent;
	_22513_obj+=jule::Str("const auto __julec_range_end = __julec_range_expr.end();\n", 57);
	_22513_obj+=_22213__indent;
	_22513_obj+=_2239_setter.get()._method_setup_vars(_21623_it->_field_key_a,_21623_it->_field_key_b);
	_22513_obj+=(_2199_begin + jule::Str(":;\n", 3));
	_22513_obj+=_22213__indent;
	_22513_obj+=_10e890bb0_gen_scope(_21623_it->_field_scope);
	_22513_obj+=jule::Str("\n", 1);
	_22513_obj+=_22213__indent;
	_22513_obj+=(_2219_next + jule::Str(":;\n", 3));
	_22513_obj+=_22213__indent;
	_22513_obj+=_2239_setter.get()._method_next_steps(_21623_it->_field_key_a,_21623_it->_field_key_b,_2199_begin);
	_22513_obj+=_22213__indent;
	_22513_obj+=(_2209_end + jule::Str(":;\n", 3));
	_10f7d1d90_done_indent();
	_22213__indent=_10f7d1d90_indent();
	_22513_obj+=_22213__indent;
	_22513_obj+=jule::Str("}\n", 2);
	_10f7d1d90_done_indent();
	_22213__indent=_10f7d1d90_indent();
	_22513_obj+=_22213__indent;
	_22513_obj+=jule::Str("}", 1);
	return _22513_obj;
}



inline jule::Str _10e890bb0_gen_cont(jule::Ref<_10e97fcf0_ContSt> _27113_c) {
	return ((jule::Str("goto ", 5) + _10eb3a1d0_iter_next_label_ident(_27113_c->_field_it)) + jule::Str(";", 1));
}



inline jule::Str _10e890bb0_gen_label(jule::Ref<_10e97fcf0_Label> _27514_l) {
	return (_10eb3a1d0_label_ident(_27514_l->_field_ident) + jule::Str(":;", 2));
}



inline jule::Str _10e890bb0_gen_goto(jule::Ref<_10e97fcf0_GotoSt> _27913_gt) {
	return ((jule::Str("goto ", 5) + _10eb3a1d0_label_ident(_27913_gt->_field_ident)) + jule::Str(";", 1));
}



inline jule::Str _10e890bb0_gen_postfix(jule::Ref<_10e97fcf0_Postfix> _28320_p) {
	return ((((jule::Str("(", 1) + _10f32ecc0_gen_expr(_28320_p->_field_expr)) + jule::Str(")", 1)) + _28320_p->_field_op) + jule::Str(";", 1));
}



inline jule::Str _10e890bb0_gen_assign(jule::Ref<_10e97fcf0_Assign> _28719_a) {
	jule::Str _28813_obj = _10f32ecc0_gen_expr(_28719_a->_field_l);
	_28813_obj+=_28719_a->_field_op;
	_28813_obj+=_10f32ecc0_gen_expr(_28719_a->_field_r);
	_28813_obj+=jule::Str(";", 1);
	return _28813_obj;
}



inline jule::Str _10e890bb0_gen_multi_assign(jule::Ref<_10e97fcf0_MultiAssign> _29525_a) {
	jule::Str _29613_obj = jule::Str("std::tie(", 9);
	{
		auto &__julec_range_expr = _29525_a->_field_l;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _10e890bb0_l{jule::Any()};_10e890bb0_l = *__julec_range_begin;
			_iter_begin_4715997824:;
			{
				if ((_10e890bb0_l == nullptr)) {
					_29613_obj+=jule::Str("std::ignore,", 12);
				} else {
					_29613_obj+=(_10f32ecc0_gen_expr(_10e890bb0_l) + jule::Str(",", 1));
				}
			}
			_iter_next_4715997824:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e890bb0_l = *__julec_range_begin; goto _iter_begin_4715997824; }
			_iter_end_4715997824:;
		}
	}
	_29613_obj=_29613_obj.slice(0LL,static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_29613_obj.len()) - 1LL))));
	_29613_obj+=jule::Str(") = ", 4);
	_29613_obj+=_10f32ecc0_gen_expr(_29525_a->_field_r);
	_29613_obj+=jule::Str(";", 1);
	return _29613_obj;
}



inline jule::Str _10e890bb0_gen_case(jule::Ref<_10e97fcf0_Match> _31313_m,jule::Ref<_10e97fcf0_Case> _31328_c) {
	
	jule::Str _3169_end = _10eb3a1d0_case_end_label_ident(((jule::Uintptr)((_31328_c).alloc)));
	jule::Str _31713_obj = jule::Str("", 0);
	if ((static_cast<jule::I64>(_31328_c->_field_exprs.len()) > 0LL)) {
		_31713_obj+=jule::Str("if (!(", 6);
		{
			auto &__julec_range_expr = _31328_c->_field_exprs;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Int _10e890bb0_i{jule::Int()};_10e890bb0_i = 0;
				jule::Any _10e890bb0_expr{jule::Any()};_10e890bb0_expr = *__julec_range_begin;
				_iter_begin_4716012752:;
				{
					if ((!_31313_m->_field_type_match)) {
						_31713_obj+=_10f32ecc0_gen_expr(_10e890bb0_expr);
						_31713_obj+=jule::Str(" == ", 4);
					}
					_31713_obj+=jule::Str("_match_expr", 11);
					if (_31313_m->_field_type_match) {
						_31713_obj+=((jule::Str(".type_is<", 9) + _10f32ecc0_gen_expr(_10e890bb0_expr)) + jule::Str(">()", 3));
					}
					if (((_10e890bb0_i + 1LL) < static_cast<jule::I64>(_31328_c->_field_exprs.len()))) {
						_31713_obj+=jule::Str(" || ", 4);
					}
				}
				_iter_next_4716012752:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { ++_10e890bb0_i; _10e890bb0_expr = *__julec_range_begin; goto _iter_begin_4716012752; }
				_iter_end_4716012752:;
			}
		}
		_31713_obj+=jule::Str(")) { goto ", 10);
		_31713_obj+=(_3169_end + jule::Str("; }\n", 4));
	}
	if ((static_cast<jule::Int>(_31328_c->_field_scope->_field_stmts._method_len()) > 0LL)) {
		_31713_obj+=_10f7d1d90_indent();
		_31713_obj+=(_10eb3a1d0_case_begin_label_ident(((jule::Uintptr)((_31328_c).alloc))) + jule::Str(":;\n", 3));
		_31713_obj+=_10f7d1d90_indent();
		_31713_obj+=_10e890bb0_gen_scope(_31328_c->_field_scope);
		_31713_obj+=jule::Str("\n", 1);
	}
	_31713_obj+=_10f7d1d90_indent();
	_31713_obj+=jule::Str("goto ", 5);
	_31713_obj+=(_10eb3a1d0_match_end_label_ident(((jule::Uintptr)((_31313_m).alloc))) + jule::Str(";", 1));
	_31713_obj+=jule::Str("\n", 1);
	_31713_obj+=_10f7d1d90_indent();
	_31713_obj+=(_3169_end + jule::Str(":;", 2));
	return _31713_obj;
}



inline jule::Str _10e890bb0_gen_match(jule::Ref<_10e97fcf0_Match> _35818_m) {
	jule::Str _35913_obj = jule::Str("{\n", 2);
	_10f7d1d90_add_indent();
	_35913_obj+=_10f7d1d90_indent();
	_35913_obj+=jule::Str("auto _match_expr{ ", 18);
	_35913_obj+=_10f32ecc0_gen_expr(_35818_m->_field_expr);
	_35913_obj+=jule::Str(" };\n", 4);
	_35913_obj+=_10f7d1d90_indent();
	if ((static_cast<jule::I64>(_35818_m->_field_cases.len()) > 0LL)) {
		_35913_obj+=_10e890bb0_gen_case(_35818_m,_35818_m->_field_cases[static_cast<jule::Int>(0LL)]);
		{
			auto __julec_range_expr = _35818_m->_field_cases.slice(static_cast<jule::Int>(1LL));
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_10e97fcf0_Case> _10e890bb0_c{jule::Ref<_10e97fcf0_Case>()};_10e890bb0_c = *__julec_range_begin;
				_iter_begin_4716044592:;
				{
					_35913_obj+=jule::Str("\n", 1);
					_35913_obj+=_10f7d1d90_indent();
					_35913_obj+=_10e890bb0_gen_case(_35818_m,_10e890bb0_c);
				}
				_iter_next_4716044592:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _10e890bb0_c = *__julec_range_begin; goto _iter_begin_4716044592; }
				_iter_end_4716044592:;
			}
		}
	}
	if (jule::real(_35818_m->_field_default)) {
		_35913_obj+=jule::Str("\n", 1);
		_35913_obj+=_10e890bb0_gen_case(_35818_m,_35818_m->_field_default);
	}
	_35913_obj+=jule::Str("\n", 1);
	_35913_obj+=_10f7d1d90_indent();
	_35913_obj+=(_10eb3a1d0_match_end_label_ident(((jule::Uintptr)((_35818_m).alloc))) + jule::Str(":;", 2));
	_35913_obj+=jule::Str("\n", 1);
	_10f7d1d90_done_indent();
	_35913_obj+=_10f7d1d90_indent();
	_35913_obj+=jule::Str("}", 1);
	return _35913_obj;
}



inline jule::Str _10e890bb0_gen_fall_st(jule::Ref<_10e97fcf0_FallSt> _39616_f) {
	return ((jule::Str("goto ", 5) + _10eb3a1d0_case_begin_label_ident(_39616_f->_field_dest_case)) + jule::Str(";", 1));
}



inline jule::Str _10e890bb0_gen_break_st(jule::Ref<_10e97fcf0_BreakSt> _40017_b) {
	jule::Str _40113_obj = jule::Str("goto ", 5);
	if ((_40017_b->_field_it != 0LL)) {
		_40113_obj+=_10eb3a1d0_iter_end_label_ident(_40017_b->_field_it);
	} else {
		_40113_obj+=_10eb3a1d0_match_end_label_ident(_40017_b->_field_mtch);
	}
	_40113_obj+=jule::Str(";", 1);
	return _40113_obj;
}



inline jule::Str _10e890bb0_gen_ret_vars(jule::Ref<_10e97fcf0_RetSt> _41221_r) {
	jule::Str _41313_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _41221_r->_field_vars;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ebc2ad0_Var> _10e890bb0_v{jule::Ref<_10ebc2ad0_Var>()};_10e890bb0_v = *__julec_range_begin;
			_iter_begin_4716057616:;
			{
				if (_11ce22a00_is_ignore_ident(_10e890bb0_v->_field_ident)) {
					_41313_obj+=_10f32ecc0_get_init_expr(_10e890bb0_v->_field_kind->_field_kind);
				} else {
					_41313_obj+=_10eb3a1d0_var_out_ident(_10e890bb0_v);
				}
				_41313_obj+=jule::Str(",", 1);
			}
			_iter_next_4716057616:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10e890bb0_v = *__julec_range_begin; goto _iter_begin_4716057616; }
			_iter_end_4716057616:;
		}
	}
	_41313_obj=_41313_obj.slice(0LL,static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_41313_obj.len()) - 1LL))));
	if ((static_cast<jule::I64>(_41221_r->_field_vars.len()) > 1LL)) {
		_41313_obj=((jule::Str("return std::make_tuple(", 23) + _41313_obj) + jule::Str(")", 1));
	} else {
		_41313_obj=(jule::Str("return ", 7) + _41313_obj);
	}
	_41313_obj+=jule::Str(";", 1);
	return _41313_obj;
}



inline jule::Str _10e890bb0_gen_ret_expr_tuple(jule::Ref<_10e97fcf0_RetSt> _43627_r) {
	{
		auto _match_expr{ _43627_r->_field_expr };
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_FnCallExprModel>>())) { goto _case_end_4716070448; }
		_case_begin_4716070448:;
		{
			return ((jule::Str("return ", 7) + _10f32ecc0_gen_expr_model(_43627_r->_field_expr)) + jule::Str(";", 1));
		}
		goto _match_end_4716069200;
		_case_end_4716070448:;
		_match_end_4716069200:;
	}
	jule::Slice<jule::Ref<_10ee8a260_Data>> _44213_datas = _43627_r->_field_expr.operator jule::Ref<_10e9ca470_TupleExprModel>()->_field_datas;
	jule::Str _44313_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _43627_r->_field_vars;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e890bb0_i{jule::Int()};_10e890bb0_i = 0;
			jule::Ref<_10ebc2ad0_Var> _10e890bb0_v{jule::Ref<_10ebc2ad0_Var>()};_10e890bb0_v = *__julec_range_begin;
			_iter_begin_4716075552:;
			{
				if ((!_11ce22a00_is_ignore_ident(_10e890bb0_v->_field_ident))) {
					jule::Str _44717_ident = _10eb3a1d0_var_out_ident(_10e890bb0_v);
					_44313_obj+=(((_44717_ident + jule::Str(" = ", 3)) + _10f32ecc0_gen_expr(_44213_datas[static_cast<jule::Int>(_10e890bb0_i)]->_field_model)) + jule::Str(";\n", 2));
					_44313_obj+=_10f7d1d90_indent();
				}
			}
			_iter_next_4716075552:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e890bb0_i; _10e890bb0_v = *__julec_range_begin; goto _iter_begin_4716075552; }
			_iter_end_4716075552:;
		}
	}
	_44313_obj+=jule::Str("return std::make_tuple(", 23);
	{
		auto &__julec_range_expr = _44213_datas;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10e890bb0_i{jule::Int()};_10e890bb0_i = 0;
			jule::Ref<_10ee8a260_Data> _10e890bb0_d{jule::Ref<_10ee8a260_Data>()};_10e890bb0_d = *__julec_range_begin;
			_iter_begin_4716078720:;
			{
				jule::Ref<_10ebc2ad0_Var> _45517_v = _43627_r->_field_vars[static_cast<jule::Int>(_10e890bb0_i)];
				if (_11ce22a00_is_ignore_ident(_45517_v->_field_ident)) {
					_44313_obj+=_10f32ecc0_gen_expr(_10e890bb0_d->_field_model);
				} else {
					_44313_obj+=_10eb3a1d0_var_out_ident(_45517_v);
				}
				_44313_obj+=jule::Str(",", 1);
			}
			_iter_next_4716078720:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10e890bb0_i; _10e890bb0_d = *__julec_range_begin; goto _iter_begin_4716078720; }
			_iter_end_4716078720:;
		}
	}
	_44313_obj=_44313_obj.slice(0LL,static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_44313_obj.len()) - 1LL))));
	_44313_obj+=jule::Str(");", 2);
	return _44313_obj;
}



inline jule::Str _10e890bb0_gen_ret_expr(jule::Ref<_10e97fcf0_RetSt> _47021_r) {
	if ((static_cast<jule::I64>(_47021_r->_field_vars.len()) == 0LL)) {
		return ((jule::Str("return ", 7) + _10f32ecc0_gen_expr(_47021_r->_field_expr)) + jule::Str(";", 1));
	}
	if ((static_cast<jule::I64>(_47021_r->_field_vars.len()) > 1LL)) {
		return _10e890bb0_gen_ret_expr_tuple(_47021_r);
	}
	if ((!_11ce22a00_is_ignore_ident(_47021_r->_field_vars[static_cast<jule::Int>(0LL)]->_field_ident))) {
		jule::Str _48013_ident = _10eb3a1d0_var_out_ident(_47021_r->_field_vars[static_cast<jule::Int>(0LL)]);
		jule::Str _48117_obj = (((_48013_ident + jule::Str(" = ", 3)) + _10f32ecc0_gen_expr(_47021_r->_field_expr)) + jule::Str(";\n", 2));
		_48117_obj+=_10f7d1d90_indent();
		_48117_obj+=((jule::Str("return ", 7) + _48013_ident) + jule::Str(";", 1));
		return _48117_obj;
	}
	return ((jule::Str("return ", 7) + _10f32ecc0_gen_expr(_47021_r->_field_expr)) + jule::Str(";", 1));
}



inline jule::Str _10e890bb0_gen_ret_st(jule::Ref<_10e97fcf0_RetSt> _49019_r) {
	if (((_49019_r->_field_expr == nullptr) && (static_cast<jule::I64>(_49019_r->_field_vars.len()) == 0LL))) {
		return jule::Str("return;", 7);
	}
	if ((_49019_r->_field_expr == nullptr)) {
		return _10e890bb0_gen_ret_vars(_49019_r);
	}
	return _10e890bb0_gen_ret_expr(_49019_r);
}



inline jule::Str _10e890bb0_gen_recover(jule::Ref<_10e97fcf0_Recover> _50220_r) {
	jule::Str _50313_obj = jule::Str("try ", 4);
	_50313_obj+=_10e890bb0_gen_scope(_50220_r->_field_scope);
	_50313_obj+=jule::Str(" catch(jule::Exception e) ", 26);
	if (_50220_r->_field_handler->_method_is_anon()) {
		jule::Ref<_10e56a140_Param> _51413_handler_param = _50220_r->_field_handler->_field_decl->_field_params[static_cast<jule::Int>(0LL)];
		if (((!_11ce22a00_is_ignore_ident(_51413_handler_param->_field_ident)) && (!_11ce22a00_is_anon_ident(_51413_handler_param->_field_ident)))) {
			_10f7d1d90_add_indent();
			_50313_obj+=jule::Str("{\n", 2);
			_50313_obj+=_10f7d1d90_indent();
			_50313_obj+=jule::Str("jule::Trait<jule::Error> ", 25);
			_50313_obj+=_10eb3a1d0_param_out_ident(_51413_handler_param);
			_50313_obj+=jule::Str("{ jule::exception_to_error(e) };\n", 33);
			_50313_obj+=_10f7d1d90_indent();
			_50313_obj+=_10e890bb0_gen_scope(_50220_r->_field_handler->_field_scope);
			_10f7d1d90_done_indent();
			_50313_obj+=jule::Str("\n", 1);
			_50313_obj+=_10f7d1d90_indent();
			_50313_obj+=jule::Str("}", 1);
		} else {
			_50313_obj+=_10e890bb0_gen_scope(_50220_r->_field_handler->_field_scope);
		}
	} else {
		_50313_obj+=jule::Str("{ ", 2);
		_50313_obj+=_10f32ecc0_gen_expr(_50220_r->_field_handler_expr);
		_50313_obj+=jule::Str("(jule::exception_to_error(e)); }", 32);
	}
	return _50313_obj;
}



inline jule::Str _10e890bb0_gen_data_expr(jule::Ref<_10ee8a260_Data> _54322_d) {
	return (_10f32ecc0_gen_expr(_54322_d->_field_model) + jule::Str(";", 1));
}



inline jule::Str _10e890bb0_gen_st(jule::Any _54815_st) {
	{
		auto _match_expr{ _54815_st };
		if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_Scope>>())) { goto _case_end_4716141216; }
		_case_begin_4716141216:;
		{
			return _10e890bb0_gen_scope(_54815_st.operator jule::Ref<_10e97fcf0_Scope>());
		}
		goto _match_end_4716139584;
		_case_end_4716141216:;
		if (!(_match_expr.type_is<jule::Ref<_10ebc2ad0_Var>>())) { goto _case_end_4716141616; }
		_case_begin_4716141616:;
		{
			return _10f7d1d90_gen_var(_54815_st.operator jule::Ref<_10ebc2ad0_Var>());
		}
		goto _match_end_4716139584;
		_case_end_4716141616:;
		if (!(_match_expr.type_is<jule::Ref<_10ee8a260_Data>>())) { goto _case_end_4716141920; }
		_case_begin_4716141920:;
		{
			return _10e890bb0_gen_data_expr(_54815_st.operator jule::Ref<_10ee8a260_Data>());
		}
		goto _match_end_4716139584;
		_case_end_4716141920:;
		if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_Conditional>>())) { goto _case_end_4716142032; }
		_case_begin_4716142032:;
		{
			return _10e890bb0_gen_conditional(_54815_st.operator jule::Ref<_10e97fcf0_Conditional>());
		}
		goto _match_end_4716139584;
		_case_end_4716142032:;
		if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_InfIter>>())) { goto _case_end_4716142144; }
		_case_begin_4716142144:;
		{
			return _10e890bb0_gen_inf_iter(_54815_st.operator jule::Ref<_10e97fcf0_InfIter>());
		}
		goto _match_end_4716139584;
		_case_end_4716142144:;
		if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_WhileIter>>())) { goto _case_end_4716142256; }
		_case_begin_4716142256:;
		{
			return _10e890bb0_gen_while_iter(_54815_st.operator jule::Ref<_10e97fcf0_WhileIter>());
		}
		goto _match_end_4716139584;
		_case_end_4716142256:;
		if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_RangeIter>>())) { goto _case_end_4716142368; }
		_case_begin_4716142368:;
		{
			return _10e890bb0_gen_range_iter(_54815_st.operator jule::Ref<_10e97fcf0_RangeIter>());
		}
		goto _match_end_4716139584;
		_case_end_4716142368:;
		if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_ContSt>>())) { goto _case_end_4716142480; }
		_case_begin_4716142480:;
		{
			return _10e890bb0_gen_cont(_54815_st.operator jule::Ref<_10e97fcf0_ContSt>());
		}
		goto _match_end_4716139584;
		_case_end_4716142480:;
		if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_Label>>())) { goto _case_end_4716142592; }
		_case_begin_4716142592:;
		{
			return _10e890bb0_gen_label(_54815_st.operator jule::Ref<_10e97fcf0_Label>());
		}
		goto _match_end_4716139584;
		_case_end_4716142592:;
		if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_GotoSt>>())) { goto _case_end_4716142704; }
		_case_begin_4716142704:;
		{
			return _10e890bb0_gen_goto(_54815_st.operator jule::Ref<_10e97fcf0_GotoSt>());
		}
		goto _match_end_4716139584;
		_case_end_4716142704:;
		if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_Postfix>>())) { goto _case_end_4716142816; }
		_case_begin_4716142816:;
		{
			return _10e890bb0_gen_postfix(_54815_st.operator jule::Ref<_10e97fcf0_Postfix>());
		}
		goto _match_end_4716139584;
		_case_end_4716142816:;
		if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_Assign>>())) { goto _case_end_4716142928; }
		_case_begin_4716142928:;
		{
			return _10e890bb0_gen_assign(_54815_st.operator jule::Ref<_10e97fcf0_Assign>());
		}
		goto _match_end_4716139584;
		_case_end_4716142928:;
		if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_MultiAssign>>())) { goto _case_end_4716143040; }
		_case_begin_4716143040:;
		{
			return _10e890bb0_gen_multi_assign(_54815_st.operator jule::Ref<_10e97fcf0_MultiAssign>());
		}
		goto _match_end_4716139584;
		_case_end_4716143040:;
		if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_Match>>())) { goto _case_end_4716143152; }
		_case_begin_4716143152:;
		{
			return _10e890bb0_gen_match(_54815_st.operator jule::Ref<_10e97fcf0_Match>());
		}
		goto _match_end_4716139584;
		_case_end_4716143152:;
		if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_FallSt>>())) { goto _case_end_4716143280; }
		_case_begin_4716143280:;
		{
			return _10e890bb0_gen_fall_st(_54815_st.operator jule::Ref<_10e97fcf0_FallSt>());
		}
		goto _match_end_4716139584;
		_case_end_4716143280:;
		if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_BreakSt>>())) { goto _case_end_4716143408; }
		_case_begin_4716143408:;
		{
			return _10e890bb0_gen_break_st(_54815_st.operator jule::Ref<_10e97fcf0_BreakSt>());
		}
		goto _match_end_4716139584;
		_case_end_4716143408:;
		if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_RetSt>>())) { goto _case_end_4716143536; }
		_case_begin_4716143536:;
		{
			return _10e890bb0_gen_ret_st(_54815_st.operator jule::Ref<_10e97fcf0_RetSt>());
		}
		goto _match_end_4716139584;
		_case_end_4716143536:;
		if (!(_match_expr.type_is<jule::Ref<_10e97fcf0_Recover>>())) { goto _case_end_4716143664; }
		_case_begin_4716143664:;
		{
			return _10e890bb0_gen_recover(_54815_st.operator jule::Ref<_10e97fcf0_Recover>());
		}
		goto _match_end_4716139584;
		_case_end_4716143664:;
		_case_begin_4716140576:;
		{
			return jule::Str("<unimplemented_stmt>", 20);
		}
		goto _match_end_4716139584;
		_case_end_4716140576:;
		_match_end_4716139584:;
	}
}



inline jule::Str _10e890bb0_gen_scope(jule::Ref<_10e97fcf0_Scope> _57318_s) {
	jule::Str _57413_obj = jule::Str("{\n", 2);
	_10f7d1d90_add_indent();
	jule::Int _57713_i = 0LL;
	_iter_begin_4716180912:;
	if (!((_57713_i < static_cast<jule::Int>(_57318_s->_field_stmts._method_len())))) { goto _iter_end_4716180912; }
	{
		jule::Any _57917_st = _57318_s->_field_stmts._method_at(_57713_i);
		_57413_obj+=_10f7d1d90_indent();
		_57413_obj+=_10e890bb0_gen_st(_57917_st);
		_57413_obj+=jule::Str("\n", 1);
	}
	_iter_next_4716180912:;
	(_57713_i)++;
	goto _iter_begin_4716180912;
	_iter_end_4716180912:;
	_10f7d1d90_done_indent();
	_57413_obj+=_10f7d1d90_indent();
	_57413_obj+=jule::Str("}", 1);
	if (_57318_s->_field_deferred) {
		_57413_obj=((jule::Str("__JULE_DEFER(", 13) + _57413_obj) + jule::Str(");", 2));
	}
	return _57413_obj;
}



inline jule::Str _10e890bb0_gen_fn_scope(jule::Ref<_10e56a140_FnIns> _59721_f) {
	if (jule::real(_59721_f->_field_owner)) {
		return _10e890bb0_gen_method_scope(_59721_f);
	}
	return _10e890bb0_gen_scope(_59721_f->_field_scope);
}



inline jule::Str _10e890bb0_gen_method_scope(jule::Ref<_10e56a140_FnIns> _60625_f) {
	return _10e890bb0_gen_scope(_60625_f->_field_scope);
}



inline jule::Str _10f32ecc0_get_accessor(jule::Ref<_10eeb79b0_TypeKind> _7321_t) {
	if ((jule::real(_7321_t->_method_ref()) || jule::real(_7321_t->_method_ptr()))) {
		return jule::Str("->", 2);
	}
	return jule::Str(".", 1);
}



inline jule::Str _10f32ecc0_decompose_common_esq(jule::U8 _8025_b) {
	{
		auto _match_expr{ _8025_b };
		if (!('\\' == _match_expr)) { goto _case_end_4716200576; }
		_case_begin_4716200576:;
		{
			return jule::Str("\\\\", 2);
		}
		goto _match_end_4716196128;
		_case_end_4716200576:;
		if (!('\'' == _match_expr)) { goto _case_end_4716200688; }
		_case_begin_4716200688:;
		{
			return jule::Str("'", 1);
		}
		goto _match_end_4716196128;
		_case_end_4716200688:;
		if (!('\"' == _match_expr)) { goto _case_end_4716200800; }
		_case_begin_4716200800:;
		{
			return jule::Str("\\\"", 2);
		}
		goto _match_end_4716196128;
		_case_end_4716200800:;
		if (!('\a' == _match_expr)) { goto _case_end_4716201504; }
		_case_begin_4716201504:;
		{
			return jule::Str("\\a", 2);
		}
		goto _match_end_4716196128;
		_case_end_4716201504:;
		if (!('\b' == _match_expr)) { goto _case_end_4716201616; }
		_case_begin_4716201616:;
		{
			return jule::Str("\\b", 2);
		}
		goto _match_end_4716196128;
		_case_end_4716201616:;
		if (!('\f' == _match_expr)) { goto _case_end_4716201728; }
		_case_begin_4716201728:;
		{
			return jule::Str("\\f", 2);
		}
		goto _match_end_4716196128;
		_case_end_4716201728:;
		if (!('\n' == _match_expr)) { goto _case_end_4716201840; }
		_case_begin_4716201840:;
		{
			return jule::Str("\\n", 2);
		}
		goto _match_end_4716196128;
		_case_end_4716201840:;
		if (!('\r' == _match_expr)) { goto _case_end_4716201952; }
		_case_begin_4716201952:;
		{
			return jule::Str("\\r", 2);
		}
		goto _match_end_4716196128;
		_case_end_4716201952:;
		if (!('\t' == _match_expr)) { goto _case_end_4716202064; }
		_case_begin_4716202064:;
		{
			return jule::Str("\\t", 2);
		}
		goto _match_end_4716196128;
		_case_end_4716202064:;
		if (!('\v' == _match_expr)) { goto _case_end_4716202176; }
		_case_begin_4716202176:;
		{
			return jule::Str("\\v", 2);
		}
		goto _match_end_4716196128;
		_case_end_4716202176:;
		_case_begin_4716200176:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4716196128;
		_case_end_4716200176:;
		_match_end_4716196128:;
	}
}



inline jule::Str _10f32ecc0_sbtoa(jule::U8 _9610_b) {
	if ((_9610_b == 0LL)) {
		return jule::Str("\\x00", 4);
	}
	if ((_9610_b <= 127LL)) {
		jule::Str _10213_seq = _10f32ecc0_decompose_common_esq(_9610_b);
		if ((_10213_seq != jule::Str("", 0))) {
			return _10213_seq;
		}
		if (((32LL <= _9610_b) && (_9610_b <= 126LL))) {
			return static_cast<jule::Str>(_9610_b);
		}
	}
	jule::Str _1129_seq = _10daf8c40_fmt_uint(static_cast<jule::U64>(_9610_b),8LL);
	if ((static_cast<jule::I64>(_1129_seq.len()) == 2LL)) {
		return (jule::Str("\\0", 2) + _1129_seq);
	}
	return (jule::Str("\\", 1) + _1129_seq);
}



inline jule::Str _10f32ecc0_get_str_model(jule::Ref<_10f4ed830_Const> _11918_c) {
	jule::Str _1209_content = _11918_c->_method_read_str();
	jule::Slice<jule::U8> _1219_bytes = static_cast<jule::Slice<jule::U8>>(_1209_content);
	jule::Str _1229_len = _10daf8c40_fmt_int(static_cast<jule::I64>(static_cast<jule::I64>(_1219_bytes.len())),10LL);
	jule::Str _12413_lit = jule::Str("", 0);
	{
		auto &__julec_range_expr = _1219_bytes;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::U8 _10f32ecc0_b{jule::U8()};_10f32ecc0_b = *__julec_range_begin;
			_iter_begin_4716228160:;
			{
				_12413_lit+=_10f32ecc0_sbtoa(_10f32ecc0_b);
			}
			_iter_next_4716228160:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10f32ecc0_b = *__julec_range_begin; goto _iter_begin_4716228160; }
			_iter_end_4716228160:;
		}
	}
	return (((((_10eb3a1d0_as_jt(jule::Str("str", 3)) + jule::Str("(\"", 2)) + _12413_lit) + jule::Str("\", ", 3)) + _1229_len) + jule::Str(")", 1));
}



inline jule::Str _10f32ecc0_get_bool_model(jule::Ref<_10f4ed830_Const> _13219_c) {
	if (_13219_c->_method_read_bool()) {
		return jule::Str("true", 4);
	}
	return jule::Str("false", 5);
}



inline jule::Str _10f32ecc0_get_nil_model(void) {
	return jule::Str("nullptr", 7);
}



inline jule::Str _10f32ecc0_gen_float_special_cases(jule::F64 _14128_x) {
	{
		auto _match_expr{ true };
		if (!(_10dd389b0_is_nan(_14128_x) == _match_expr)) { goto _case_end_4716237536; }
		_case_begin_4716237536:;
		{
			return jule::Str("NAN", 3);
		}
		goto _match_end_4716236112;
		_case_end_4716237536:;
		if (!(_10dd389b0_is_inf(_14128_x,1LL) == _match_expr)) { goto _case_end_4716236688; }
		_case_begin_4716236688:;
		{
			return jule::Str("INFINITY", 8);
		}
		goto _match_end_4716236112;
		_case_end_4716236688:;
		if (!(_10dd389b0_is_inf(_14128_x,-1LL) == _match_expr)) { goto _case_end_4716236800; }
		_case_begin_4716236800:;
		{
			return jule::Str("-INFINITY", 9);
		}
		goto _match_end_4716236112;
		_case_end_4716236800:;
		_case_begin_4716236384:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4716236112;
		_case_end_4716236384:;
		_match_end_4716236112:;
	}
}



inline jule::Str _10f32ecc0_get_f32_model(jule::Ref<_10f4ed830_Const> _15018_c) {
	jule::F64 _1519_x = static_cast<jule::F64>(_15018_c->_method_as_f64());
	jule::Str _1549_f = _10f32ecc0_gen_float_special_cases(_1519_x);
	if ((_1549_f != jule::Str("", 0))) {
		return _1549_f;
	}
	{
		auto _match_expr{ true };
		if (!((_1519_x == 3.4028234663852886e+38) == _match_expr)) { goto _case_end_4716244992; }
		_case_begin_4716244992:;
		{
			return jule::Str("jule::MAX_F32", 13);
		}
		goto _match_end_4716246016;
		_case_end_4716244992:;
		if (!((_1519_x == -3.4028234663852886e+38) == _match_expr)) { goto _case_end_4716245104; }
		_case_begin_4716245104:;
		{
			return jule::Str("jule::MIN_F32", 13);
		}
		goto _match_end_4716246016;
		_case_end_4716245104:;
		_match_end_4716246016:;
	}
	return (_10d916690_fmt_float(_1519_x,'e',-1LL,32LL) + jule::Str("f", 1));
}



inline jule::Str _10f32ecc0_get_f64_model(jule::Ref<_10f4ed830_Const> _16718_c) {
	jule::F64 _1689_x = static_cast<jule::F64>(_16718_c->_method_as_f64());
	jule::Str _1719_f = _10f32ecc0_gen_float_special_cases(_1689_x);
	if ((_1719_f != jule::Str("", 0))) {
		return _1719_f;
	}
	{
		auto _match_expr{ true };
		if (!((_1689_x == jule::MAX_F64) == _match_expr)) { goto _case_end_4716257168; }
		_case_begin_4716257168:;
		{
			return jule::Str("jule::MAX_F64", 13);
		}
		goto _match_end_4716258192;
		_case_end_4716257168:;
		if (!((_1689_x == jule::MIN_F64) == _match_expr)) { goto _case_end_4716257280; }
		_case_begin_4716257280:;
		{
			return jule::Str("jule::MIN_F64", 13);
		}
		goto _match_end_4716258192;
		_case_end_4716257280:;
		_match_end_4716258192:;
	}
	return _10d916690_fmt_float(_1689_x,'e',-1LL,64LL);
}



inline jule::Str _10f32ecc0_get_float_model(jule::Ref<_10ee8a260_Data> _18424_d) {
	{
		auto _match_expr{ true };
		if (!(_18424_d->_field_kind->_method_prim()->_method_is_f32() == _match_expr)) { goto _case_end_4716263488; }
		_case_begin_4716263488:;
		{
			return _10f32ecc0_get_f32_model(_18424_d->_field_constant);
		}
		goto _match_end_4716262160;
		_case_end_4716263488:;
		_case_begin_4716262352:;
		{
			return _10f32ecc0_get_f64_model(_18424_d->_field_constant);
		}
		goto _match_end_4716262160;
		_case_end_4716262352:;
		_match_end_4716262160:;
	}
}



inline jule::Str _10f32ecc0_i64toa(jule::I64 _19111_x) {
	{
		auto _match_expr{ true };
		if (!((_19111_x == jule::MAX_I64) == _match_expr)) { goto _case_end_4716268736; }
		_case_begin_4716268736:;
		{
			return jule::Str("jule::MAX_I64", 13);
		}
		goto _match_end_4716268624;
		_case_end_4716268736:;
		if (!((_19111_x == jule::MIN_I64) == _match_expr)) { goto _case_end_4716266528; }
		_case_begin_4716266528:;
		{
			return jule::Str("jule::MIN_I64", 13);
		}
		goto _match_end_4716268624;
		_case_end_4716266528:;
		_match_end_4716268624:;
	}
	jule::Str _1979_fmt = _10daf8c40_fmt_int(_19111_x,10LL);
	if (_13cfdfa50_is_64bit(jule::Str("arm64", 5))) {
		return (_1979_fmt + jule::Str("LL", 2));
	}
	return (_1979_fmt + jule::Str("L", 1));
}



inline jule::Str _10f32ecc0_get_i64_model(jule::Ref<_10f4ed830_Const> _20418_c) {
	return _10f32ecc0_i64toa(static_cast<jule::I64>(_20418_c->_method_read_i64()));
}



inline jule::Str _10f32ecc0_get_u64_model(jule::Ref<_10f4ed830_Const> _20818_c) {
	jule::U64 _2099_x = static_cast<jule::U64>(_20818_c->_method_read_u64());
	{
		auto _match_expr{ true };
		if (!((_2099_x == jule::MAX_U64) == _match_expr)) { goto _case_end_4716279744; }
		_case_begin_4716279744:;
		{
			return jule::Str("jule::MAX_U64", 13);
		}
		goto _match_end_4716279424;
		_case_end_4716279744:;
		_match_end_4716279424:;
	}
	jule::Str _2169_fmt = _10daf8c40_fmt_uint(_2099_x,10LL);
	if (_13cfdfa50_is_64bit(jule::Str("arm64", 5))) {
		return (_2169_fmt + jule::Str("LLU", 3));
	}
	return (_2169_fmt + jule::Str("LU", 2));
}



inline jule::Str _10f32ecc0_gen_const_expr(jule::Ref<_10ee8a260_Data> _22323_d) {
	{
		auto _match_expr{ true };
		if (!(_22323_d->_field_constant->_method_is_str() == _match_expr)) { goto _case_end_4716286064; }
		_case_begin_4716286064:;
		{
			return _10f32ecc0_get_str_model(_22323_d->_field_constant);
		}
		goto _match_end_4716285488;
		_case_end_4716286064:;
		if (!(_22323_d->_field_constant->_method_is_bool() == _match_expr)) { goto _case_end_4716286176; }
		_case_begin_4716286176:;
		{
			return _10f32ecc0_get_bool_model(_22323_d->_field_constant);
		}
		goto _match_end_4716285488;
		_case_end_4716286176:;
		if (!(_22323_d->_field_constant->_method_is_f64() == _match_expr)) { goto _case_end_4716286288; }
		_case_begin_4716286288:;
		{
			return _10f32ecc0_get_float_model(_22323_d);
		}
		goto _match_end_4716285488;
		_case_end_4716286288:;
		if (!(_22323_d->_field_constant->_method_is_i64() == _match_expr)) { goto _case_end_4716287248; }
		_case_begin_4716287248:;
		{
			return _10f32ecc0_get_i64_model(_22323_d->_field_constant);
		}
		goto _match_end_4716285488;
		_case_end_4716287248:;
		if (!(_22323_d->_field_constant->_method_is_u64() == _match_expr)) { goto _case_end_4716287360; }
		_case_begin_4716287360:;
		{
			return _10f32ecc0_get_u64_model(_22323_d->_field_constant);
		}
		goto _match_end_4716285488;
		_case_end_4716287360:;
		if (!(_22323_d->_field_constant->_method_is_nil() == _match_expr)) { goto _case_end_4716287472; }
		_case_begin_4716287472:;
		{
			return _10f32ecc0_get_nil_model();
		}
		goto _match_end_4716285488;
		_case_end_4716287472:;
		_case_begin_4716285760:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4716285488;
		_case_end_4716285760:;
		_match_end_4716285488:;
	}
}



inline jule::Str _10f32ecc0_gen_const_expr_model(jule::Ref<_10f4ed830_Const> _23525_m) {
	{
		auto _match_expr{ true };
		if (!(_23525_m->_method_is_str() == _match_expr)) { goto _case_end_4716303328; }
		_case_begin_4716303328:;
		{
			return _10f32ecc0_get_str_model(_23525_m);
		}
		goto _match_end_4716302704;
		_case_end_4716303328:;
		if (!(_23525_m->_method_is_bool() == _match_expr)) { goto _case_end_4716303440; }
		_case_begin_4716303440:;
		{
			return _10f32ecc0_get_bool_model(_23525_m);
		}
		goto _match_end_4716302704;
		_case_end_4716303440:;
		if (!(_23525_m->_method_is_f64() == _match_expr)) { goto _case_end_4716303552; }
		_case_begin_4716303552:;
		{
			return _10f32ecc0_get_f64_model(_23525_m);
		}
		goto _match_end_4716302704;
		_case_end_4716303552:;
		if (!(_23525_m->_method_is_i64() == _match_expr)) { goto _case_end_4716304128; }
		_case_begin_4716304128:;
		{
			return _10f32ecc0_get_i64_model(_23525_m);
		}
		goto _match_end_4716302704;
		_case_end_4716304128:;
		if (!(_23525_m->_method_is_u64() == _match_expr)) { goto _case_end_4716304240; }
		_case_begin_4716304240:;
		{
			return _10f32ecc0_get_u64_model(_23525_m);
		}
		goto _match_end_4716302704;
		_case_end_4716304240:;
		if (!(_23525_m->_method_is_nil() == _match_expr)) { goto _case_end_4716304352; }
		_case_begin_4716304352:;
		{
			return _10f32ecc0_get_nil_model();
		}
		goto _match_end_4716302704;
		_case_end_4716304352:;
		_case_begin_4716301776:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_4716302704;
		_case_end_4716301776:;
		_match_end_4716302704:;
	}
}



inline jule::Str _10f32ecc0_gen_binop_expr_model(jule::Ref<_10e9ca470_BinopExprModel> _24729_m) {
	{
		auto _match_expr{ _24729_m->_field_op };
		if (!(jule::Str("/", 1) == _match_expr)) { goto _case_end_4716318832; }
		_case_begin_4716318832:;
		{
			jule::Str _25017_obj = jule::Str("jule::div(", 10);
			_25017_obj+=_10f32ecc0_gen_expr(_24729_m->_field_left);
			_25017_obj+=jule::Str(",", 1);
			_25017_obj+=_10f32ecc0_gen_expr(_24729_m->_field_right);
			_25017_obj+=jule::Str(")", 1);
			return _25017_obj;
		}
		goto _match_end_4716314016;
		_case_end_4716318832:;
		_case_begin_4716314608:;
		{
			jule::Str _25817_obj = jule::Str("(", 1);
			_25817_obj+=_10f32ecc0_gen_expr_model(_24729_m->_field_left);
			_25817_obj+=jule::Str(" ", 1);
			_25817_obj+=_24729_m->_field_op;
			_25817_obj+=jule::Str(" ", 1);
			_25817_obj+=_10f32ecc0_gen_expr_model(_24729_m->_field_right);
			_25817_obj+=jule::Str(")", 1);
			return _25817_obj;
		}
		goto _match_end_4716314016;
		_case_end_4716314608:;
		_match_end_4716314016:;
	}
}



inline jule::Str _10f32ecc0_gen_var_expr_model(jule::Ref<_10ebc2ad0_Var> _26927_m) {
	return _10eb3a1d0_var_out_ident(_26927_m);
}



inline jule::Str _10f32ecc0_gen_struct_expr_model(jule::Ref<_10e3fc8f0_Struct> _27326_m) {
	return _10f7a32c0_gen_struct_kind(_27326_m);
}



inline jule::Str _10f32ecc0_gen_struct_ins_expr_model(jule::Ref<_10e3fc8f0_StructIns> _27734_m) {
	return _10f7a32c0_gen_struct_kind_ins(_27734_m);
}



inline jule::Str _10f32ecc0_gen_unary_expr_model(jule::Ref<_10e9ca470_UnaryExprModel> _28129_m) {
	{
		auto _match_expr{ _28129_m->_field_op };
		if (!(jule::Str("^", 1) == _match_expr)) { goto _case_end_4716332384; }
		_case_begin_4716332384:;
		{
			return ((jule::Str("(~", 2) + _10f32ecc0_gen_expr(_28129_m->_field_expr)) + jule::Str(")", 1));
		}
		goto _match_end_4716329456;
		_case_end_4716332384:;
		_case_begin_4716328272:;
		{
			return (((jule::Str("(", 1) + _28129_m->_field_op) + _10f32ecc0_gen_expr(_28129_m->_field_expr)) + jule::Str(")", 1));
		}
		goto _match_end_4716329456;
		_case_end_4716328272:;
		_match_end_4716329456:;
	}
}



inline jule::Str _10f32ecc0_gen_get_ref_ptr_expr_model(jule::Ref<_10e9ca470_GetRefPtrExprModel> _28835_m) {
	return ((jule::Str("(", 1) + _10f32ecc0_gen_expr(_28835_m->_field_expr)) + jule::Str(").alloc", 7));
}



inline jule::Str _10f32ecc0_gen_cpp_struct_lit_expr_model(jule::Ref<_10e9ca470_StructLitExprModel> _29238_m) {
	jule::Str _29313_obj = (jule::Str("(", 1) + _10eb3a1d0_struct_ins_out_ident(_29238_m->_field_strct));
	_29313_obj+=jule::Str("){", 2);
	if ((static_cast<jule::I64>(_29238_m->_field_args.len()) > 0LL)) {
		_julec_label_iter:;
		{
			auto &__julec_range_expr = _29238_m->_field_strct->_field_fields;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_10e3fc8f0_FieldIns> _10f32ecc0_f{jule::Ref<_10e3fc8f0_FieldIns>()};_10f32ecc0_f = *__julec_range_begin;
				_iter_begin_4716340976:;
				{
					_29313_obj+=(_10eb3a1d0_field_out_ident(_10f32ecc0_f->_field_decl) + jule::Str(": ", 2));
					{
						auto &__julec_range_expr = _29238_m->_field_args;
						if (__julec_range_expr.begin() != __julec_range_expr.end()) {
							auto __julec_range_begin = __julec_range_expr.begin();
							const auto __julec_range_end = __julec_range_expr.end();
							jule::Ref<_10e9ca470_StructArgExprModel> _10f32ecc0_arg{jule::Ref<_10e9ca470_StructArgExprModel>()};_10f32ecc0_arg = *__julec_range_begin;
							_iter_begin_4716343168:;
							{
								if ((_10f32ecc0_arg->_field_field == _10f32ecc0_f)) {
									_29313_obj+=(_10f32ecc0_gen_expr(_10f32ecc0_arg->_field_expr) + jule::Str(",", 1));
									goto _iter_next_4716340976;
								}
							}
							_iter_next_4716343168:;
							++__julec_range_begin;
							if (__julec_range_begin != __julec_range_end) { _10f32ecc0_arg = *__julec_range_begin; goto _iter_begin_4716343168; }
							_iter_end_4716343168:;
						}
					}
					_29313_obj+=(_10f32ecc0_get_init_expr(_10f32ecc0_f->_field_kind) + jule::Str(",", 1));
				}
				_iter_next_4716340976:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _10f32ecc0_f = *__julec_range_begin; goto _iter_begin_4716340976; }
				_iter_end_4716340976:;
			}
		}
		_29313_obj=_29313_obj.slice(0LL,static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_29313_obj.len()) - 1LL))));
	}
	_29313_obj+=jule::Str("}", 1);
	return _29313_obj;
}



inline jule::Str _10f32ecc0_gen_struct_lit_expr_model(jule::Ref<_10e9ca470_StructLitExprModel> _31334_m) {
	if (_31334_m->_field_strct->_field_decl->_field_cpp_linked) {
		return _10f32ecc0_gen_cpp_struct_lit_expr_model(_31334_m);
	}
	jule::Str _31813_obj = _10eb3a1d0_struct_ins_out_ident(_31334_m->_field_strct);
	_31813_obj+=jule::Str("(", 1);
	if ((static_cast<jule::I64>(_31334_m->_field_args.len()) > 0LL)) {
		_julec_label_iter:;
		{
			auto &__julec_range_expr = _31334_m->_field_strct->_field_fields;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_10e3fc8f0_FieldIns> _10f32ecc0_f{jule::Ref<_10e3fc8f0_FieldIns>()};_10f32ecc0_f = *__julec_range_begin;
				_iter_begin_4716360416:;
				{
					{
						auto &__julec_range_expr = _31334_m->_field_args;
						if (__julec_range_expr.begin() != __julec_range_expr.end()) {
							auto __julec_range_begin = __julec_range_expr.begin();
							const auto __julec_range_end = __julec_range_expr.end();
							jule::Ref<_10e9ca470_StructArgExprModel> _10f32ecc0_arg{jule::Ref<_10e9ca470_StructArgExprModel>()};_10f32ecc0_arg = *__julec_range_begin;
							_iter_begin_4716362256:;
							{
								if ((_10f32ecc0_arg->_field_field == _10f32ecc0_f)) {
									_31813_obj+=(_10f32ecc0_gen_expr(_10f32ecc0_arg->_field_expr) + jule::Str(",", 1));
									goto _iter_next_4716360416;
								}
							}
							_iter_next_4716362256:;
							++__julec_range_begin;
							if (__julec_range_begin != __julec_range_end) { _10f32ecc0_arg = *__julec_range_begin; goto _iter_begin_4716362256; }
							_iter_end_4716362256:;
						}
					}
					_31813_obj+=(_10f32ecc0_get_init_expr(_10f32ecc0_f->_field_kind) + jule::Str(",", 1));
				}
				_iter_next_4716360416:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _10f32ecc0_f = *__julec_range_begin; goto _iter_begin_4716360416; }
				_iter_end_4716360416:;
			}
		}
		_31813_obj=_31813_obj.slice(0LL,static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_31813_obj.len()) - 1LL))));
	}
	_31813_obj+=jule::Str(")", 1);
	return _31813_obj;
}



inline jule::Str _10f32ecc0_gen_alloc_struct_lit_expr_model(jule::Ref<_10e9ca470_AllocStructLitExprModel> _33740_m) {
	jule::Str _33813_obj = jule::Str("jule::new_struct<", 17);
	_33813_obj+=_10eb3a1d0_struct_out_ident(_33740_m->_field_lit->_field_strct->_field_decl);
	_33813_obj+=jule::Str(">(new( std::nothrow ) ", 22);
	_33813_obj+=_10f32ecc0_gen_struct_lit_expr_model(_33740_m->_field_lit);
	_33813_obj+=jule::Str(")", 1);
	return _33813_obj;
}



inline jule::Str _10f32ecc0_gen_casting_expr_model(jule::Ref<_10e9ca470_CastingExprModel> _34631_m) {
	jule::Str _34713_obj = jule::Str("", 0);
	{
		auto _match_expr{ true };
		if (!((jule::real(_34631_m->_field_kind->_method_prim()) && _34631_m->_field_kind->_method_prim()->_method_is_any()) == _match_expr)) { goto _case_end_4716383840; }
		_case_begin_4716383840:;
		{
			_34713_obj+=_10f7a32c0_gen_type_kind(_34631_m->_field_kind);
			_34713_obj+=jule::Str("(", 1);
			_34713_obj+=_10f32ecc0_gen_expr_model(_34631_m->_field_expr);
			_34713_obj+=jule::Str(")", 1);
		}
		goto _match_end_4716378960;
		_case_end_4716383840:;
		if (!(jule::real(_34631_m->_field_expr_kind->_method_ptr()) == _match_expr || jule::real(_34631_m->_field_kind->_method_ptr()) == _match_expr)) { goto _case_end_4716384208; }
		_case_begin_4716384208:;
		{
			_34713_obj+=jule::Str("((", 2);
			_34713_obj+=_10f7a32c0_gen_type_kind(_34631_m->_field_kind);
			_34713_obj+=jule::Str(")(", 2);
			_34713_obj+=_10f32ecc0_gen_expr(_34631_m->_field_expr);
			_34713_obj+=jule::Str("))", 2);
		}
		goto _match_end_4716378960;
		_case_end_4716384208:;
		if (!(jule::real(_34631_m->_field_expr_kind->_method_trt()) == _match_expr || (jule::real(_34631_m->_field_expr_kind->_method_prim()) && _34631_m->_field_expr_kind->_method_prim()->_method_is_any()) == _match_expr)) { goto _case_end_4716382800; }
		_case_begin_4716382800:;
		{
			_34713_obj+=_10f32ecc0_gen_expr_model(_34631_m->_field_expr);
			_34713_obj+=_10f32ecc0_get_accessor(_34631_m->_field_expr_kind);
			_34713_obj+=jule::Str("operator ", 9);
			_34713_obj+=_10f7a32c0_gen_type_kind(_34631_m->_field_kind);
			_34713_obj+=jule::Str("()", 2);
		}
		goto _match_end_4716378960;
		_case_end_4716382800:;
		_case_begin_4716379280:;
		{
			_34713_obj+=jule::Str("static_cast<", 12);
			_34713_obj+=_10f7a32c0_gen_type_kind(_34631_m->_field_kind);
			_34713_obj+=jule::Str(">(", 2);
			_34713_obj+=_10f32ecc0_gen_expr(_34631_m->_field_expr);
			_34713_obj+=jule::Str(")", 1);
		}
		goto _match_end_4716378960;
		_case_end_4716379280:;
		_match_end_4716378960:;
	}
	return _34713_obj;
}



inline jule::Str _10f32ecc0_gen_arg_expr_models(jule::Slice<jule::Any> _38128_models) {
	if ((static_cast<jule::I64>(_38128_models.len()) == 0LL)) {
		return jule::Str("", 0);
	}
	jule::Str _38613_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _38128_models;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _10f32ecc0_m{jule::Any()};_10f32ecc0_m = *__julec_range_begin;
			_iter_begin_4716404960:;
			{
				_38613_obj+=(_10f32ecc0_gen_expr(_10f32ecc0_m) + jule::Str(",", 1));
			}
			_iter_next_4716404960:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10f32ecc0_m = *__julec_range_begin; goto _iter_begin_4716404960; }
			_iter_end_4716404960:;
		}
	}
	_38613_obj=_38613_obj.slice(0LL,static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_38613_obj.len()) - 1LL))));
	return _38613_obj;
}



inline jule::Str _10f32ecc0_gen_fn_call_expr_model(jule::Ref<_10e9ca470_FnCallExprModel> _39431_m) {
	jule::Str _39513_obj = _10f32ecc0_gen_expr_model(_39431_m->_field_expr);
	if ((!_39431_m->_field_func->_method_is_builtin())) {
		if ((_39431_m->_field_func->_field_decl->_field_cpp_linked && (static_cast<jule::I64>(_39431_m->_field_func->_field_generics.len()) > 0LL))) {
			if ((!_10f7a32c0_has_directive(_39431_m->_field_func->_field_decl->_field_directives,jule::Str("cdef", 4)))) {
				_39513_obj+=jule::Str("<", 1);
				{
					auto &__julec_range_expr = _39431_m->_field_func->_field_generics;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_10eeb79b0_TypeKind> _10f32ecc0_g{jule::Ref<_10eeb79b0_TypeKind>()};_10f32ecc0_g = *__julec_range_begin;
						_iter_begin_4716415888:;
						{
							_39513_obj+=(_10f7a32c0_gen_type_kind(_10f32ecc0_g) + jule::Str(",", 1));
						}
						_iter_next_4716415888:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _10f32ecc0_g = *__julec_range_begin; goto _iter_begin_4716415888; }
						_iter_end_4716415888:;
					}
				}
				_39513_obj=_39513_obj.slice(0LL,static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_39513_obj.len()) - 1LL))));
				_39513_obj+=jule::Str(">", 1);
			}
		}
	}
	_39513_obj+=jule::Str("(", 1);
	_39513_obj+=_10f32ecc0_gen_arg_expr_models(_39431_m->_field_args);
	_39513_obj+=jule::Str(")", 1);
	if (_39431_m->_field_is_co) {
		_39513_obj=((jule::Str("__JULE_CO(", 10) + _39513_obj) + jule::Str(")", 1));
	}
	return _39513_obj;
}



inline jule::Str _10f32ecc0_gen_slice_expr_model(jule::Ref<_10e9ca470_SliceExprModel> _41929_m) {
	jule::Str _42013_obj = _10f7a32c0_as_slice_kind(_41929_m->_field_elem_kind);
	_42013_obj+=jule::Str("({", 2);
	_42013_obj+=_10f32ecc0_gen_arg_expr_models(_41929_m->_field_elems);
	_42013_obj+=jule::Str("})", 2);
	return _42013_obj;
}



inline jule::Str _10f32ecc0_gen_indexing_expr_model(jule::Ref<_10e9ca470_IndexigExprModel> _42732_m) {
	jule::Str _42813_obj = _10f32ecc0_gen_expr_model(_42732_m->_field_expr);
	_42813_obj+=jule::Str("[", 1);
	_42813_obj+=_10f32ecc0_gen_expr(_42732_m->_field_index);
	_42813_obj+=jule::Str("]", 1);
	return _42813_obj;
}



inline jule::Str _10f32ecc0_gen_anon_fn_expr_model(jule::Ref<_10e9ca470_AnonFnExprModel> _43531_m) {
	jule::Str _43613_obj = _10f7a32c0_gen_fn_kind(_43531_m->_field_func);
	if (_43531_m->_field_global) {
		_43613_obj+=jule::Str("([]", 3);
	} else {
		_43613_obj+=jule::Str("([&]", 4);
	}
	_43613_obj+=_10f7d1d90_gen_params_ins(_43531_m->_field_func->_field_params);
	_43613_obj+=jule::Str(" mutable -> ", 12);
	_43613_obj+=_10f7d1d90_gen_fn_ins_result(_43531_m->_field_func);
	_43613_obj+=jule::Str(" ", 1);
	_43613_obj+=_10e890bb0_gen_fn_scope(_43531_m->_field_func);
	_43613_obj+=jule::Str(")", 1);
	return _43613_obj;
}



inline jule::Str _10f32ecc0_gen_map_expr_model(jule::Ref<_10e9ca470_MapExprModel> _45127_m) {
	jule::Str _45213_obj = _10eb3a1d0_as_jt(jule::Str("map", 3));
	_45213_obj+=jule::Str("<", 1);
	_45213_obj+=_10f7a32c0_gen_type_kind(_45127_m->_field_key_kind);
	_45213_obj+=jule::Str(",", 1);
	_45213_obj+=_10f7a32c0_gen_type_kind(_45127_m->_field_val_kind);
	_45213_obj+=jule::Str(">({", 3);
	if ((static_cast<jule::I64>(_45127_m->_field_entries.len()) > 0LL)) {
		{
			auto &__julec_range_expr = _45127_m->_field_entries;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_10e9ca470_KeyValPairExprModel> _10f32ecc0_pair{jule::Ref<_10e9ca470_KeyValPairExprModel>()};_10f32ecc0_pair = *__julec_range_begin;
				_iter_begin_4716450752:;
				{
					jule::Str _46021_pair_obj = jule::Str("{", 1);
					_46021_pair_obj+=_10f32ecc0_gen_expr(_10f32ecc0_pair->_field_key);
					_46021_pair_obj+=jule::Str(",", 1);
					_46021_pair_obj+=_10f32ecc0_gen_expr(_10f32ecc0_pair->_field_val);
					_46021_pair_obj+=jule::Str("}", 1);
					_45213_obj+=_46021_pair_obj;
					_45213_obj+=jule::Str(",", 1);
				}
				_iter_next_4716450752:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _10f32ecc0_pair = *__julec_range_begin; goto _iter_begin_4716450752; }
				_iter_end_4716450752:;
			}
		}
		_45213_obj=_45213_obj.slice(0LL,static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_45213_obj.len()) - 1LL))));
	}
	_45213_obj+=jule::Str("})", 2);
	return _45213_obj;
}



inline jule::Str _10f32ecc0_gen_slicing_expr_model(jule::Ref<_10e9ca470_SlicingExprModel> _47431_m) {
	jule::Str _47513_obj = _10f32ecc0_gen_expr_model(_47431_m->_field_expr);
	_47513_obj+=jule::Str(".slice(", 7);
	_47513_obj+=_10f32ecc0_gen_expr(_47431_m->_field_left);
	if ((_47431_m->_field_right != nullptr)) {
		_47513_obj+=jule::Str(",", 1);
		_47513_obj+=_10f32ecc0_gen_expr(_47431_m->_field_right);
	}
	_47513_obj+=jule::Str(")", 1);
	return _47513_obj;
}



inline jule::Str _10f32ecc0_gen_trait_sub_ident_expr_model(jule::Ref<_10e9ca470_TraitSubIdentExprModel> _48639_m) {
	jule::Str _48713_obj = _10f32ecc0_gen_expr_model(_48639_m->_field_expr);
	_48713_obj+=jule::Str(".get()._method_", 15);
	_48713_obj+=_48639_m->_field_ident;
	return _48713_obj;
}



inline jule::Str _10f32ecc0_gen_struct_sub_ident_expr_model(jule::Ref<_10e9ca470_StructSubIdentExprModel> _49340_m) {
	jule::Str _49413_obj = _10f32ecc0_gen_expr_model(_49340_m->_field_expr);
	_49413_obj+=_10f32ecc0_get_accessor(_49340_m->_field_expr_kind);
	if (jule::real(_49340_m->_field_field)) {
		_49413_obj+=_10eb3a1d0_field_out_ident(_49340_m->_field_field->_field_decl);
	} else {
		_49413_obj+=_10eb3a1d0_fn_ins_out_ident(_49340_m->_field_method);
	}
	return _49413_obj;
}



inline jule::Str _10f32ecc0_gen_common_ident_expr_model(jule::Ref<_10e9ca470_CommonIdentExprModel> _50432_m) {
	return _50432_m->_field_ident;
}



inline jule::Str _10f32ecc0_gen_common_sub_ident_expr_model(jule::Ref<_10e9ca470_CommonSubIdentExprModel> _50840_m) {
	jule::Str _50913_obj = _10f32ecc0_gen_expr_model(_50840_m->_field_expr);
	_50913_obj+=_10f32ecc0_get_accessor(_50840_m->_field_expr_kind);
	_50913_obj+=_50840_m->_field_ident;
	return _50913_obj;
}



inline jule::Str _10f32ecc0_gen_array_expr_model(jule::Ref<_10e9ca470_ArrayExprModel> _51529_m) {
	jule::Str _51613_obj = _10f7a32c0_gen_array_kind(_51529_m->_field_kind);
	_51613_obj+=jule::Str("({", 2);
	_51613_obj+=_10f32ecc0_gen_arg_expr_models(_51529_m->_field_elems);
	_51613_obj+=jule::Str("})", 2);
	return _51613_obj;
}



inline jule::Str _10f32ecc0_gen_fn_ins_expr_model(jule::Ref<_10e56a140_FnIns> _52326_m) {
	return _10eb3a1d0_fn_ins_out_ident(_52326_m);
}



inline jule::Str _10f32ecc0_gen_tuple_expr_model(jule::Ref<_10e9ca470_TupleExprModel> _52729_m) {
	jule::Str _52813_obj = jule::Str("std::make_tuple(", 16);
	{
		auto &__julec_range_expr = _52729_m->_field_datas;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ee8a260_Data> _10f32ecc0_d{jule::Ref<_10ee8a260_Data>()};_10f32ecc0_d = *__julec_range_begin;
			_iter_begin_4716490944:;
			{
				_52813_obj+=(_10f32ecc0_gen_expr(_10f32ecc0_d->_field_model) + jule::Str(",", 1));
			}
			_iter_next_4716490944:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10f32ecc0_d = *__julec_range_begin; goto _iter_begin_4716490944; }
			_iter_end_4716490944:;
		}
	}
	_52813_obj=_52813_obj.slice(0LL,static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_52813_obj.len()) - 1LL))));
	_52813_obj+=jule::Str(")", 1);
	return _52813_obj;
}



inline jule::Str _10f32ecc0_gen_builtin_new_call_expr_model(jule::Ref<_10e9ca470_BuiltinNewCallExprModel> _53740_m) {
	jule::Str _53813_obj = jule::Str("jule::new_ref<", 14);
	_53813_obj+=_10f7a32c0_gen_type_kind(_53740_m->_field_kind);
	_53813_obj+=jule::Str(">(", 2);
	if ((_53740_m->_field_init != nullptr)) {
		_53813_obj+=_10f32ecc0_gen_expr(_53740_m->_field_init);
	}
	_53813_obj+=jule::Str(")", 1);
	return _53813_obj;
}



inline jule::Str _10f32ecc0_gen_builtin_out_call_expr_model(jule::Ref<_10e9ca470_BuiltinOutCallExprModel> _54840_m) {
	jule::Str _54913_obj = jule::Str("jule::out(", 10);
	_54913_obj+=_10f32ecc0_gen_expr(_54840_m->_field_expr);
	_54913_obj+=jule::Str(")", 1);
	return _54913_obj;
}



inline jule::Str _10f32ecc0_gen_builtin_outln_call_expr_model(jule::Ref<_10e9ca470_BuiltinOutlnCallExprModel> _55542_m) {
	jule::Str _55613_obj = jule::Str("jule::outln(", 12);
	_55613_obj+=_10f32ecc0_gen_expr(_55542_m->_field_expr);
	_55613_obj+=jule::Str(")", 1);
	return _55613_obj;
}



inline jule::Str _10f32ecc0_gen_builtin_real_call_expr_model(jule::Ref<_10e9ca470_BuiltinRealCallExprModel> _56241_m) {
	jule::Str _56313_obj = jule::Str("jule::real(", 11);
	_56313_obj+=_10f32ecc0_gen_expr(_56241_m->_field_expr);
	_56313_obj+=jule::Str(")", 1);
	return _56313_obj;
}



inline jule::Str _10f32ecc0_gen_builtin_drop_call_expr_model(jule::Ref<_10e9ca470_BuiltinDropCallExprModel> _56941_m) {
	jule::Str _57013_obj = jule::Str("jule::drop(", 11);
	_57013_obj+=_10f32ecc0_gen_expr(_56941_m->_field_expr);
	_57013_obj+=jule::Str(")", 1);
	return _57013_obj;
}



inline jule::Str _10f32ecc0_gen_builtin_panic_call_expr_model(jule::Ref<_10e9ca470_BuiltinPanicCallExprModel> _57642_m) {
	jule::Str _57713_obj = jule::Str("jule::panic(", 12);
	_57713_obj+=_10f32ecc0_gen_expr(_57642_m->_field_expr);
	_57713_obj+=jule::Str(")", 1);
	return _57713_obj;
}



inline jule::Str _10f32ecc0_gen_builtin_make_call_expr_model(jule::Ref<_10e9ca470_BuiltinMakeCallExprModel> _58341_m) {
	jule::Str _58413_obj = jule::Str("", 0);
	if ((_58341_m->_field_len != nullptr)) {
		_58413_obj+=_10f32ecc0_gen_expr(_58341_m->_field_len);
	} else {
		_58413_obj+=jule::Str("0", 1);
	}
	if ((_58341_m->_field_cap != nullptr)) {
		_58413_obj+=(jule::Str(",", 1) + _10f32ecc0_gen_expr(_58341_m->_field_cap));
	}
	if (jule::real(_58341_m->_field_kind->_method_slc()->_field_elem->_method_enm())) {
		_58413_obj+=jule::Str(",", 1);
		_58413_obj+=_10f32ecc0_get_init_expr(_58341_m->_field_kind->_method_slc()->_field_elem);
		if ((_58341_m->_field_cap != nullptr)) {
			_58413_obj=((_10f7a32c0_gen_type_kind(_58341_m->_field_kind) + jule::Str("::alloc(", 8)) + _58413_obj);
		} else {
			_58413_obj=((_10f7a32c0_gen_type_kind(_58341_m->_field_kind) + jule::Str("::alloc_def(", 12)) + _58413_obj);
		}
	} else {
		_58413_obj=((_10f7a32c0_gen_type_kind(_58341_m->_field_kind) + jule::Str("::alloc(", 8)) + _58413_obj);
	}
	_58413_obj+=jule::Str(")", 1);
	return _58413_obj;
}



inline jule::Str _10f32ecc0_gen_builtin_clone_call_expr_model(jule::Ref<_10e9ca470_BuiltinCloneCallExprModel> _61042_m) {
	jule::Str _61113_obj = jule::Str("jule::clone(", 12);
	_61113_obj+=_10f32ecc0_gen_expr_model(_61042_m->_field_expr);
	_61113_obj+=jule::Str(")", 1);
	return _61113_obj;
}



inline jule::Str _10f32ecc0_gen_sizeof_expr_model(jule::Ref<_10e9ca470_SizeofExprModel> _61730_m) {
	jule::Str _61813_obj = jule::Str("sizeof(", 7);
	_61813_obj+=_10f32ecc0_gen_expr(_61730_m->_field_expr);
	_61813_obj+=jule::Str(")", 1);
	return _61813_obj;
}



inline jule::Str _10f32ecc0_gen_alignof_expr_model(jule::Ref<_10e9ca470_AlignofExprModel> _62431_m) {
	jule::Str _62513_obj = jule::Str("alignof(", 8);
	_62513_obj+=_10f32ecc0_gen_expr(_62431_m->_field_expr);
	_62513_obj+=jule::Str(")", 1);
	return _62513_obj;
}



inline jule::Str _10f32ecc0_gen_rune_expr_model(jule::Ref<_10e9ca470_RuneExprModel> _63124_m) {
	if ((_63124_m->_field_code <= 127LL)) {
		jule::Str _63317_b = _10f32ecc0_sbtoa(static_cast<jule::U8>(_63124_m->_field_code));
		if ((_63317_b == jule::Str("'", 1))) {
			_63317_b=jule::Str("\\'", 2);
		}
		return ((jule::Str("'", 1) + _63317_b) + jule::Str("'", 1));
	}
	return _10f32ecc0_i64toa(static_cast<jule::I64>(_63124_m->_field_code));
}



inline jule::Str _10f32ecc0_gen_builtin_error_trait_sub_ident_expr_model(jule::Ref<_10e9ca470_BuiltinErrorTraitSubIdentExprModel> _64253_m) {
	jule::Str _64313_obj = _10f32ecc0_gen_expr_model(_64253_m->_field_expr);
	_64313_obj+=jule::Str(".get().", 7);
	_64313_obj+=_64253_m->_field_ident;
	return _64313_obj;
}



inline jule::Str _10f32ecc0_gen_explicit_deref_expr_model(jule::Ref<_10e9ca470_ExplicitDerefExprModel> _64938_m) {
	jule::Str _65013_obj = _10f32ecc0_gen_expr_model(_64938_m->_field_expr);
	_65013_obj+=jule::Str(".get()", 6);
	return _65013_obj;
}



inline jule::Str _10f32ecc0_gen_struct_static_ident_expr_model(jule::Ref<_10e9ca470_StructStaticIdentExprModel> _65543_m) {
	jule::Str _65613_obj = _10eb3a1d0_struct_ins_out_ident(_65543_m->_field_structure);
	_65613_obj+=jule::Str("::", 2);
	_65613_obj+=_10eb3a1d0_fn_ins_out_ident(_65543_m->_field_method);
	return _65613_obj;
}



inline jule::Str _10f32ecc0_gen_expr_model(jule::Any _66223_m) {
	{
		auto _match_expr{ _66223_m };
		if (!(_match_expr.type_is<jule::Ref<_10eeb79b0_TypeKind>>())) { goto _case_end_4716583072; }
		_case_begin_4716583072:;
		{
			return _10f7a32c0_gen_type_kind(_66223_m.operator jule::Ref<_10eeb79b0_TypeKind>());
		}
		goto _match_end_4716581456;
		_case_end_4716583072:;
		if (!(_match_expr.type_is<jule::Ref<_10f4ed830_Const>>())) { goto _case_end_4716582448; }
		_case_begin_4716582448:;
		{
			return _10f32ecc0_gen_const_expr_model(_66223_m.operator jule::Ref<_10f4ed830_Const>());
		}
		goto _match_end_4716581456;
		_case_end_4716582448:;
		if (!(_match_expr.type_is<jule::Ref<_10ebc2ad0_Var>>())) { goto _case_end_4716582560; }
		_case_begin_4716582560:;
		{
			return _10f32ecc0_gen_var_expr_model(_66223_m.operator jule::Ref<_10ebc2ad0_Var>());
		}
		goto _match_end_4716581456;
		_case_end_4716582560:;
		if (!(_match_expr.type_is<jule::Ref<_10e3d6eb0_Trait>>())) { goto _case_end_4716582672; }
		_case_begin_4716582672:;
		{
			return _10eb3a1d0_trait_out_ident(_66223_m.operator jule::Ref<_10e3d6eb0_Trait>());
		}
		goto _match_end_4716581456;
		_case_end_4716582672:;
		if (!(_match_expr.type_is<jule::Ref<_10e3fc8f0_Struct>>())) { goto _case_end_4716584336; }
		_case_begin_4716584336:;
		{
			return _10f32ecc0_gen_struct_expr_model(_66223_m.operator jule::Ref<_10e3fc8f0_Struct>());
		}
		goto _match_end_4716581456;
		_case_end_4716584336:;
		if (!(_match_expr.type_is<jule::Ref<_10e3fc8f0_StructIns>>())) { goto _case_end_4716584448; }
		_case_begin_4716584448:;
		{
			return _10f32ecc0_gen_struct_ins_expr_model(_66223_m.operator jule::Ref<_10e3fc8f0_StructIns>());
		}
		goto _match_end_4716581456;
		_case_end_4716584448:;
		if (!(_match_expr.type_is<jule::Ref<_10e56a140_FnIns>>())) { goto _case_end_4716584560; }
		_case_begin_4716584560:;
		{
			return _10f32ecc0_gen_fn_ins_expr_model(_66223_m.operator jule::Ref<_10e56a140_FnIns>());
		}
		goto _match_end_4716581456;
		_case_end_4716584560:;
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_BinopExprModel>>())) { goto _case_end_4716584672; }
		_case_begin_4716584672:;
		{
			return _10f32ecc0_gen_binop_expr_model(_66223_m.operator jule::Ref<_10e9ca470_BinopExprModel>());
		}
		goto _match_end_4716581456;
		_case_end_4716584672:;
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_UnaryExprModel>>())) { goto _case_end_4716584784; }
		_case_begin_4716584784:;
		{
			return _10f32ecc0_gen_unary_expr_model(_66223_m.operator jule::Ref<_10e9ca470_UnaryExprModel>());
		}
		goto _match_end_4716581456;
		_case_end_4716584784:;
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_GetRefPtrExprModel>>())) { goto _case_end_4716584896; }
		_case_begin_4716584896:;
		{
			return _10f32ecc0_gen_get_ref_ptr_expr_model(_66223_m.operator jule::Ref<_10e9ca470_GetRefPtrExprModel>());
		}
		goto _match_end_4716581456;
		_case_end_4716584896:;
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_StructLitExprModel>>())) { goto _case_end_4716585008; }
		_case_begin_4716585008:;
		{
			return _10f32ecc0_gen_struct_lit_expr_model(_66223_m.operator jule::Ref<_10e9ca470_StructLitExprModel>());
		}
		goto _match_end_4716581456;
		_case_end_4716585008:;
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_AllocStructLitExprModel>>())) { goto _case_end_4716585120; }
		_case_begin_4716585120:;
		{
			return _10f32ecc0_gen_alloc_struct_lit_expr_model(_66223_m.operator jule::Ref<_10e9ca470_AllocStructLitExprModel>());
		}
		goto _match_end_4716581456;
		_case_end_4716585120:;
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_CastingExprModel>>())) { goto _case_end_4716585232; }
		_case_begin_4716585232:;
		{
			return _10f32ecc0_gen_casting_expr_model(_66223_m.operator jule::Ref<_10e9ca470_CastingExprModel>());
		}
		goto _match_end_4716581456;
		_case_end_4716585232:;
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_FnCallExprModel>>())) { goto _case_end_4716585344; }
		_case_begin_4716585344:;
		{
			return _10f32ecc0_gen_fn_call_expr_model(_66223_m.operator jule::Ref<_10e9ca470_FnCallExprModel>());
		}
		goto _match_end_4716581456;
		_case_end_4716585344:;
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_SliceExprModel>>())) { goto _case_end_4716585456; }
		_case_begin_4716585456:;
		{
			return _10f32ecc0_gen_slice_expr_model(_66223_m.operator jule::Ref<_10e9ca470_SliceExprModel>());
		}
		goto _match_end_4716581456;
		_case_end_4716585456:;
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_ArrayExprModel>>())) { goto _case_end_4716585568; }
		_case_begin_4716585568:;
		{
			return _10f32ecc0_gen_array_expr_model(_66223_m.operator jule::Ref<_10e9ca470_ArrayExprModel>());
		}
		goto _match_end_4716581456;
		_case_end_4716585568:;
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_IndexigExprModel>>())) { goto _case_end_4716585680; }
		_case_begin_4716585680:;
		{
			return _10f32ecc0_gen_indexing_expr_model(_66223_m.operator jule::Ref<_10e9ca470_IndexigExprModel>());
		}
		goto _match_end_4716581456;
		_case_end_4716585680:;
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_AnonFnExprModel>>())) { goto _case_end_4716585792; }
		_case_begin_4716585792:;
		{
			return _10f32ecc0_gen_anon_fn_expr_model(_66223_m.operator jule::Ref<_10e9ca470_AnonFnExprModel>());
		}
		goto _match_end_4716581456;
		_case_end_4716585792:;
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_MapExprModel>>())) { goto _case_end_4716585904; }
		_case_begin_4716585904:;
		{
			return _10f32ecc0_gen_map_expr_model(_66223_m.operator jule::Ref<_10e9ca470_MapExprModel>());
		}
		goto _match_end_4716581456;
		_case_end_4716585904:;
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_SlicingExprModel>>())) { goto _case_end_4716586016; }
		_case_begin_4716586016:;
		{
			return _10f32ecc0_gen_slicing_expr_model(_66223_m.operator jule::Ref<_10e9ca470_SlicingExprModel>());
		}
		goto _match_end_4716581456;
		_case_end_4716586016:;
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_TraitSubIdentExprModel>>())) { goto _case_end_4716586128; }
		_case_begin_4716586128:;
		{
			return _10f32ecc0_gen_trait_sub_ident_expr_model(_66223_m.operator jule::Ref<_10e9ca470_TraitSubIdentExprModel>());
		}
		goto _match_end_4716581456;
		_case_end_4716586128:;
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_StructSubIdentExprModel>>())) { goto _case_end_4716586240; }
		_case_begin_4716586240:;
		{
			return _10f32ecc0_gen_struct_sub_ident_expr_model(_66223_m.operator jule::Ref<_10e9ca470_StructSubIdentExprModel>());
		}
		goto _match_end_4716581456;
		_case_end_4716586240:;
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_CommonIdentExprModel>>())) { goto _case_end_4716586352; }
		_case_begin_4716586352:;
		{
			return _10f32ecc0_gen_common_ident_expr_model(_66223_m.operator jule::Ref<_10e9ca470_CommonIdentExprModel>());
		}
		goto _match_end_4716581456;
		_case_end_4716586352:;
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_CommonSubIdentExprModel>>())) { goto _case_end_4716586464; }
		_case_begin_4716586464:;
		{
			return _10f32ecc0_gen_common_sub_ident_expr_model(_66223_m.operator jule::Ref<_10e9ca470_CommonSubIdentExprModel>());
		}
		goto _match_end_4716581456;
		_case_end_4716586464:;
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_TupleExprModel>>())) { goto _case_end_4716586576; }
		_case_begin_4716586576:;
		{
			return _10f32ecc0_gen_tuple_expr_model(_66223_m.operator jule::Ref<_10e9ca470_TupleExprModel>());
		}
		goto _match_end_4716581456;
		_case_end_4716586576:;
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_BuiltinOutCallExprModel>>())) { goto _case_end_4716586688; }
		_case_begin_4716586688:;
		{
			return _10f32ecc0_gen_builtin_out_call_expr_model(_66223_m.operator jule::Ref<_10e9ca470_BuiltinOutCallExprModel>());
		}
		goto _match_end_4716581456;
		_case_end_4716586688:;
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_BuiltinOutlnCallExprModel>>())) { goto _case_end_4716586800; }
		_case_begin_4716586800:;
		{
			return _10f32ecc0_gen_builtin_outln_call_expr_model(_66223_m.operator jule::Ref<_10e9ca470_BuiltinOutlnCallExprModel>());
		}
		goto _match_end_4716581456;
		_case_end_4716586800:;
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_BuiltinNewCallExprModel>>())) { goto _case_end_4716586912; }
		_case_begin_4716586912:;
		{
			return _10f32ecc0_gen_builtin_new_call_expr_model(_66223_m.operator jule::Ref<_10e9ca470_BuiltinNewCallExprModel>());
		}
		goto _match_end_4716581456;
		_case_end_4716586912:;
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_BuiltinRealCallExprModel>>())) { goto _case_end_4716587024; }
		_case_begin_4716587024:;
		{
			return _10f32ecc0_gen_builtin_real_call_expr_model(_66223_m.operator jule::Ref<_10e9ca470_BuiltinRealCallExprModel>());
		}
		goto _match_end_4716581456;
		_case_end_4716587024:;
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_BuiltinDropCallExprModel>>())) { goto _case_end_4716587136; }
		_case_begin_4716587136:;
		{
			return _10f32ecc0_gen_builtin_drop_call_expr_model(_66223_m.operator jule::Ref<_10e9ca470_BuiltinDropCallExprModel>());
		}
		goto _match_end_4716581456;
		_case_end_4716587136:;
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_BuiltinPanicCallExprModel>>())) { goto _case_end_4716587248; }
		_case_begin_4716587248:;
		{
			return _10f32ecc0_gen_builtin_panic_call_expr_model(_66223_m.operator jule::Ref<_10e9ca470_BuiltinPanicCallExprModel>());
		}
		goto _match_end_4716581456;
		_case_end_4716587248:;
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_BuiltinMakeCallExprModel>>())) { goto _case_end_4716587360; }
		_case_begin_4716587360:;
		{
			return _10f32ecc0_gen_builtin_make_call_expr_model(_66223_m.operator jule::Ref<_10e9ca470_BuiltinMakeCallExprModel>());
		}
		goto _match_end_4716581456;
		_case_end_4716587360:;
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_BuiltinCloneCallExprModel>>())) { goto _case_end_4716587472; }
		_case_begin_4716587472:;
		{
			return _10f32ecc0_gen_builtin_clone_call_expr_model(_66223_m.operator jule::Ref<_10e9ca470_BuiltinCloneCallExprModel>());
		}
		goto _match_end_4716581456;
		_case_end_4716587472:;
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_SizeofExprModel>>())) { goto _case_end_4716587600; }
		_case_begin_4716587600:;
		{
			return _10f32ecc0_gen_sizeof_expr_model(_66223_m.operator jule::Ref<_10e9ca470_SizeofExprModel>());
		}
		goto _match_end_4716581456;
		_case_end_4716587600:;
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_AlignofExprModel>>())) { goto _case_end_4716587728; }
		_case_begin_4716587728:;
		{
			return _10f32ecc0_gen_alignof_expr_model(_66223_m.operator jule::Ref<_10e9ca470_AlignofExprModel>());
		}
		goto _match_end_4716581456;
		_case_end_4716587728:;
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_RuneExprModel>>())) { goto _case_end_4716587856; }
		_case_begin_4716587856:;
		{
			return _10f32ecc0_gen_rune_expr_model(_66223_m.operator jule::Ref<_10e9ca470_RuneExprModel>());
		}
		goto _match_end_4716581456;
		_case_end_4716587856:;
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_BuiltinErrorTraitSubIdentExprModel>>())) { goto _case_end_4716587984; }
		_case_begin_4716587984:;
		{
			return _10f32ecc0_gen_builtin_error_trait_sub_ident_expr_model(_66223_m.operator jule::Ref<_10e9ca470_BuiltinErrorTraitSubIdentExprModel>());
		}
		goto _match_end_4716581456;
		_case_end_4716587984:;
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_ExplicitDerefExprModel>>())) { goto _case_end_4716588112; }
		_case_begin_4716588112:;
		{
			return _10f32ecc0_gen_explicit_deref_expr_model(_66223_m.operator jule::Ref<_10e9ca470_ExplicitDerefExprModel>());
		}
		goto _match_end_4716581456;
		_case_end_4716588112:;
		if (!(_match_expr.type_is<jule::Ref<_10e9ca470_StructStaticIdentExprModel>>())) { goto _case_end_4716588240; }
		_case_begin_4716588240:;
		{
			return _10f32ecc0_gen_struct_static_ident_expr_model(_66223_m.operator jule::Ref<_10e9ca470_StructStaticIdentExprModel>());
		}
		goto _match_end_4716581456;
		_case_end_4716588240:;
		_case_begin_4716581584:;
		{
			return jule::Str("<unimplemented_expression_model>", 32);
		}
		goto _match_end_4716581456;
		_case_end_4716581584:;
		_match_end_4716581456:;
	}
}



inline jule::Str _10f32ecc0_gen_expr(jule::Any _78617_e) {
	jule::Str _7879_obj = _10f32ecc0_gen_expr_model(_78617_e);
	return _7879_obj;
}



inline jule::Str _10f32ecc0_gen_val(jule::Ref<_10ee8a260_Value> _79116_v) {
	if (_79116_v->_field_data->_method_is_const()) {
		return _10f32ecc0_gen_const_expr(_79116_v->_field_data);
	}
	return _10f32ecc0_gen_expr(_79116_v->_field_data->_field_model);
}



inline jule::Str _10f32ecc0_get_init_expr(jule::Ref<_10eeb79b0_TypeKind> _79822_t) {
	if (jule::real(_79822_t->_method_ptr())) {
		return jule::Str("nullptr", 7);
	}
	jule::Ref<_10e975f00_Enum> _80313_enm = _79822_t->_method_enm();
	if ((!jule::real(_80313_enm))) {
		return (_10f7a32c0_gen_type_kind(_79822_t) + jule::Str("()", 2));
	}
	return _10f32ecc0_gen_val(_80313_enm->_field_items[static_cast<jule::Int>(0LL)]->_field_value);
}



inline jule::Str _10f7a0fa0_get_derive_fn_decl_clone(jule::Ref<_10e3fc8f0_Struct> _729_s) {
	jule::Str _813_obj = _10f7a32c0_gen_struct_kind(_729_s);
	_813_obj+=jule::Str(" clone(void) const ", 19);
	return _813_obj;
}



inline jule::Str _10f7a0fa0_get_derive_fn_def_clone(jule::Ref<_10e3fc8f0_Struct> _1328_s) {
	jule::Str _1413_obj = _10f7a32c0_gen_struct_kind(_1328_s);
	_1413_obj+=((jule::Str(" ", 1) + _1413_obj) + jule::Str("::clone(void) const ", 20));
	return _1413_obj;
}



inline jule::Str _10eb3a1d0_as_ident(jule::Str _2513_ident) {
	return (jule::Str("_", 1) + _2513_ident);
}



inline jule::Str _10eb3a1d0_as_jt(jule::Str _2810_id) {
	jule::Slice<jule::I32> _2913_ident = static_cast<jule::Slice<jule::I32>>(_2810_id);
	if (((97LL <= _2913_ident[static_cast<jule::Int>(0LL)]) && (_2913_ident[static_cast<jule::Int>(0LL)] <= 122LL))) {
		_2913_ident[static_cast<jule::Int>(0LL)]-=32LL;
	}
	return (jule::Str("jule::", 6) + static_cast<jule::Str>(_2913_ident));
}



inline jule::Str _10eb3a1d0_get_ptr_as_ident(jule::Uintptr _3721_ptr) {
	jule::Str _3813_addr = (jule::Str("_", 1) + _10daf8c40_fmt_uint(static_cast<jule::U64>(_3721_ptr),16LL));
	{
		auto &__julec_range_expr = _3813_addr;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10eb3a1d0_i{jule::Int()};_10eb3a1d0_i = 0;
			jule::U8 _10eb3a1d0_r{jule::U8()};_10eb3a1d0_r = *__julec_range_begin;
			_iter_begin_4716693680:;
			{
				if ((_10eb3a1d0_r != '0')) {
					_3813_addr=_3813_addr.slice(static_cast<jule::Int>(_10eb3a1d0_i));
					goto _iter_end_4716693680;
				}
			}
			_iter_next_4716693680:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10eb3a1d0_i; _10eb3a1d0_r = *__julec_range_begin; goto _iter_begin_4716693680; }
			_iter_end_4716693680:;
		}
	}
	return _3813_addr;
}



inline jule::Str _10eb3a1d0_as_out_ident(jule::Str _5317_ident,jule::Uintptr _5329_ptr) {
	if ((_5329_ptr != 0LL)) {
		return ((_10eb3a1d0_get_ptr_as_ident(_5329_ptr) + jule::Str("_", 1)) + _5317_ident);
	}
	return _10eb3a1d0_as_ident(_5317_ident);
}



inline jule::Str _10eb3a1d0_as_local_ident(jule::Int _6619_row,jule::Int _6629_col,jule::Str _6643_ident) {
	_6643_ident=(((_10daf8c40_itoa(_6619_row) + _10daf8c40_itoa(_6629_col)) + jule::Str("_", 1)) + _6643_ident);
	return _10eb3a1d0_as_ident(_6643_ident);
}



inline jule::Str _10eb3a1d0_fn_out_ident(jule::Ref<_10e56a140_Fn> _7217_f) {
	{
		auto _match_expr{ true };
		if (!(_7217_f->_field_cpp_linked == _match_expr)) { goto _case_end_4716708960; }
		_case_begin_4716708960:;
		{
			return _7217_f->_field_ident;
		}
		goto _match_end_4716707120;
		_case_end_4716708960:;
		if (!((_7217_f->_field_ident == jule::Str("main", 4)) == _match_expr)) { goto _case_end_4716708528; }
		_case_begin_4716708528:;
		{
			return jule::Str("entry_point", 11);
		}
		goto _match_end_4716707120;
		_case_end_4716708528:;
		if (!(_7217_f->_method_is_method() == _match_expr)) { goto _case_end_4716711568; }
		_case_begin_4716711568:;
		{
			if (_7217_f->_field_statically) {
				return (jule::Str("_static_method_", 15) + _7217_f->_field_ident);
			}
			return (jule::Str("_method_", 8) + _7217_f->_field_ident);
		}
		goto _match_end_4716707120;
		_case_end_4716711568:;
		_case_begin_4716707392:;
		{
			return _10eb3a1d0_as_out_ident(_7217_f->_field_ident,static_cast<jule::Uintptr>(_7217_f->_field_token._field_file->_method_addr()));
		}
		goto _match_end_4716707120;
		_case_end_4716707392:;
		_match_end_4716707120:;
	}
}



inline jule::Str _10eb3a1d0_fn_ins_out_ident(jule::Ref<_10e56a140_FnIns> _9221_f) {
	if (_9221_f->_method_is_builtin()) {
		return (jule::Str("jule::", 6) + _9221_f->_field_decl->_field_ident);
	}
	if ((_9221_f->_field_decl->_field_cpp_linked || (static_cast<jule::I64>(_9221_f->_field_generics.len()) == 0LL))) {
		return _10eb3a1d0_fn_out_ident(_9221_f->_field_decl);
	}
	{
		auto &__julec_range_expr = _9221_f->_field_decl->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10eb3a1d0_i{jule::Int()};_10eb3a1d0_i = 0;
			jule::Ref<_10e56a140_FnIns> _10eb3a1d0_ins{jule::Ref<_10e56a140_FnIns>()};_10eb3a1d0_ins = *__julec_range_begin;
			_iter_begin_4716723024:;
			{
				jule::Ref<_10eeb79b0_TypeKind> _10213_kind = jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eb3a1d0_ins));
				if (_9221_f->_method_equals(_10213_kind)) {
					return ((_10eb3a1d0_fn_out_ident(_9221_f->_field_decl) + jule::Str("_", 1)) + _10daf8c40_itoa(_10eb3a1d0_i));
				}
			}
			_iter_next_4716723024:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10eb3a1d0_i; _10eb3a1d0_ins = *__julec_range_begin; goto _iter_begin_4716723024; }
			_iter_end_4716723024:;
		}
	}
	return jule::Str("__?__", 5);
}



inline jule::Str _10eb3a1d0_trait_out_ident(jule::Ref<_10e3d6eb0_Trait> _11220_t) {
	if (_11220_t->_method_is_builtin()) {
		return (jule::Str("jule::", 6) + _11220_t->_field_ident);
	}
	return _10eb3a1d0_as_out_ident(_11220_t->_field_ident,static_cast<jule::Uintptr>(_11220_t->_field_token._field_file->_method_addr()));
}



inline jule::Str _10eb3a1d0_param_out_ident(jule::Ref<_10e56a140_Param> _12020_p) {
	if ((_11ce22a00_is_anon_ident(_12020_p->_field_ident) || _11ce22a00_is_ignore_ident(_12020_p->_field_ident))) {
		return jule::Str("", 0);
	}
	return _10eb3a1d0_as_local_ident(_12020_p->_field_token._field_row,_12020_p->_field_token._field_column,_12020_p->_field_ident);
}



inline jule::Str _10eb3a1d0_struct_out_ident(jule::Ref<_10e3fc8f0_Struct> _12821_s) {
	if (_12821_s->_field_cpp_linked) {
		if (_10f7a32c0_has_directive(_12821_s->_field_directives,jule::Str("typedef", 7))) {
			return _12821_s->_field_ident;
		}
		return (jule::Str("struct ", 7) + _12821_s->_field_ident);
	}
	return _10eb3a1d0_as_out_ident(_12821_s->_field_ident,static_cast<jule::Uintptr>(_12821_s->_field_token._field_file->_method_addr()));
}



inline jule::Str _10eb3a1d0_struct_ins_out_ident(jule::Ref<_10e3fc8f0_StructIns> _13925_s) {
	if ((_13925_s->_field_decl->_field_cpp_linked || (static_cast<jule::I64>(_13925_s->_field_generics.len()) == 0LL))) {
		return _10eb3a1d0_struct_out_ident(_13925_s->_field_decl);
	}
	{
		auto &__julec_range_expr = _13925_s->_field_decl->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10eb3a1d0_i{jule::Int()};_10eb3a1d0_i = 0;
			jule::Ref<_10e3fc8f0_StructIns> _10eb3a1d0_ins{jule::Ref<_10e3fc8f0_StructIns>()};_10eb3a1d0_ins = *__julec_range_begin;
			_iter_begin_4716752256:;
			{
				jule::Ref<_10eeb79b0_TypeKind> _14513_kind = jule::new_struct<_10eeb79b0_TypeKind>(new( std::nothrow ) _10eeb79b0_TypeKind(jule::Bool(),jule::Str(),_10eb3a1d0_ins));
				if (_13925_s->_method_equals(_14513_kind)) {
					return ((_10eb3a1d0_struct_out_ident(_13925_s->_field_decl) + jule::Str("_", 1)) + _10daf8c40_itoa(_10eb3a1d0_i));
				}
			}
			_iter_next_4716752256:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10eb3a1d0_i; _10eb3a1d0_ins = *__julec_range_begin; goto _iter_begin_4716752256; }
			_iter_end_4716752256:;
		}
	}
	return jule::Str("__?__", 5);
}



inline jule::Str _10eb3a1d0_field_out_ident(jule::Ref<_10e3fc8f0_Field> _15520_f) {
	if (_15520_f->_field_owner->_field_cpp_linked) {
		return _15520_f->_field_ident;
	}
	return (jule::Str("_field_", 7) + _15520_f->_field_ident);
}



inline jule::Str _10eb3a1d0_var_out_ident(jule::Ref<_10ebc2ad0_Var> _16322_v) {
	{
		auto _match_expr{ true };
		if (!(_16322_v->_field_cpp_linked == _match_expr)) { goto _case_end_4716765776; }
		_case_begin_4716765776:;
		{
			return _16322_v->_field_ident;
		}
		goto _match_end_4716763472;
		_case_end_4716765776:;
		if (!((_16322_v->_field_ident == jule::Str("self", 4)) == _match_expr)) { goto _case_end_4716767520; }
		_case_begin_4716767520:;
		{
			if (jule::real(_16322_v->_field_kind->_field_kind->_method_ref())) {
				return jule::Str("this->self", 10);
			}
			return jule::Str("(*this)", 7);
		}
		goto _match_end_4716763472;
		_case_end_4716767520:;
		if (!(jule::real(_16322_v->_field_scope) == _match_expr)) { goto _case_end_4716764864; }
		_case_begin_4716764864:;
		{
			return _10eb3a1d0_as_local_ident(_16322_v->_field_token._field_row,_16322_v->_field_token._field_column,_16322_v->_field_ident);
		}
		goto _match_end_4716763472;
		_case_end_4716764864:;
		_case_begin_4716763728:;
		{
			return _10eb3a1d0_as_out_ident(_16322_v->_field_ident,static_cast<jule::Uintptr>(_16322_v->_field_token._field_file->_method_addr()));
		}
		goto _match_end_4716763472;
		_case_end_4716763728:;
		_match_end_4716763472:;
	}
}



inline jule::Str _10eb3a1d0_iter_begin_label_ident(jule::Uintptr _18327_it) {
	return (jule::Str("_iter_begin_", 12) + _10daf8c40_itoa(static_cast<jule::Int>(_18327_it)));
}



inline jule::Str _10eb3a1d0_iter_end_label_ident(jule::Uintptr _18825_it) {
	return (jule::Str("_iter_end_", 10) + _10daf8c40_itoa(static_cast<jule::Int>(_18825_it)));
}



inline jule::Str _10eb3a1d0_iter_next_label_ident(jule::Uintptr _19326_it) {
	return (jule::Str("_iter_next_", 11) + _10daf8c40_itoa(static_cast<jule::Int>(_19326_it)));
}



inline jule::Str _10eb3a1d0_label_ident(jule::Str _19816_ident) {
	return (jule::Str("_julec_label_", 13) + _19816_ident);
}



inline jule::Str _10eb3a1d0_match_end_label_ident(jule::Uintptr _20326_m) {
	return (jule::Str("_match_end_", 11) + _10daf8c40_itoa(static_cast<jule::Int>(_20326_m)));
}



inline jule::Str _10eb3a1d0_case_begin_label_ident(jule::Uintptr _20827_c) {
	return (jule::Str("_case_begin_", 12) + _10daf8c40_itoa(static_cast<jule::Int>(_20827_c)));
}



inline jule::Str _10eb3a1d0_case_end_label_ident(jule::Uintptr _21325_c) {
	return (jule::Str("_case_end_", 10) + _10daf8c40_itoa(static_cast<jule::Int>(_21325_c)));
}



inline jule::Bool _10f7a32c0_has_directive(jule::Slice<jule::Ref<_11ce1fd50_Directive>> _2518_directives,jule::Str _2560_tag) {
	{
		auto &__julec_range_expr = _2518_directives;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_11ce1fd50_Directive> _10f7a32c0_dr{jule::Ref<_11ce1fd50_Directive>()};_10f7a32c0_dr = *__julec_range_begin;
			_iter_begin_4716786656:;
			{
				if ((_10f7a32c0_dr->_field_tag == _2560_tag)) {
					return true;
				}
			}
			_iter_next_4716786656:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10f7a32c0_dr = *__julec_range_begin; goto _iter_begin_4716786656; }
			_iter_end_4716786656:;
		}
	}
	return false;
}



inline jule::Str _10f7a32c0_gen_prim_kind(jule::Ref<_10eeb79b0_Prim> _3518_p) {
	return _10eb3a1d0_as_jt(_3518_p->_method_to_str());
}



inline jule::Str _10f7a32c0_gen_tuple_kind(jule::Ref<_10eeb79b0_Tuple> _4023_t) {
	jule::Str _4113_obj = jule::Str("std::tuple<", 11);
	{
		auto &__julec_range_expr = _4023_t->_field_types;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10eeb79b0_TypeKind> _10f7a32c0_t{jule::Ref<_10eeb79b0_TypeKind>()};_10f7a32c0_t = *__julec_range_begin;
			_iter_begin_4716796832:;
			{
				_4113_obj+=(_10f7a32c0_gen_type_kind(_10f7a32c0_t) + jule::Str(",", 1));
			}
			_iter_next_4716796832:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10f7a32c0_t = *__julec_range_begin; goto _iter_begin_4716796832; }
			_iter_end_4716796832:;
		}
	}
	_4113_obj=_4113_obj.slice(0LL,static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_4113_obj.len()) - 1LL))));
	return (_4113_obj + jule::Str(">", 1));
}



inline jule::Str _10f7a32c0_as_ref_kind(jule::Str _5016_elem) {
	jule::Str _519_ref = _10eb3a1d0_as_jt(jule::Str("ref", 3));
	return (((_519_ref + jule::Str("<", 1)) + _5016_elem) + jule::Str(">", 1));
}



inline jule::Str _10f7a32c0_gen_ref_kind(jule::Ref<_10eeb79b0_Ref> _5621_r) {
	jule::Str _579_elem = _10f7a32c0_gen_type_kind(_5621_r->_field_elem);
	return _10f7a32c0_as_ref_kind(_579_elem);
}



inline jule::Str _10f7a32c0_gen_ptr_kind(jule::Ref<_10eeb79b0_Ptr> _6221_p) {
	
	if (_6221_p->_method_is_unsafe()) {
		return jule::Str("void*", 5);
	}
	jule::Str _689_elem = _10f7a32c0_gen_type_kind(_6221_p->_field_elem);
	return (_689_elem + jule::Str("*", 1));
}



inline jule::Str _10f7a32c0_gen_enum_kind(jule::Ref<_10e975f00_Enum> _7322_e) {
	return _10f7a32c0_gen_type_kind(_7322_e->_field_kind->_field_kind);
}



inline jule::Str _10f7a32c0_as_slice_kind(jule::Ref<_10eeb79b0_TypeKind> _7722_elem) {
	jule::Str _789_elem_s = _10f7a32c0_gen_type_kind(_7722_elem);
	jule::Str _799_slc = _10eb3a1d0_as_jt(jule::Str("slice", 5));
	return (((_799_slc + jule::Str("<", 1)) + _789_elem_s) + jule::Str(">", 1));
}



inline jule::Str _10f7a32c0_gen_slice_kind(jule::Ref<_10eeb79b0_Slc> _8423_s) {
	return _10f7a32c0_as_slice_kind(_8423_s->_field_elem);
}



inline jule::Str _10f7a32c0_gen_map_kind(jule::Ref<_10eeb79b0_Map> _8921_m) {
	jule::Str _909_key = _10f7a32c0_gen_type_kind(_8921_m->_field_key);
	jule::Str _919_val = _10f7a32c0_gen_type_kind(_8921_m->_field_val);
	jule::Str _929__map = _10eb3a1d0_as_jt(jule::Str("map", 3));
	return (((((_929__map + jule::Str("<", 1)) + _909_key) + jule::Str(",", 1)) + _919_val) + jule::Str(">", 1));
}



inline jule::Str _10f7a32c0_gen_trait_kind_from_ident(jule::Str _9630_ident) {
	jule::Str _979_trt = _10eb3a1d0_as_jt(jule::Str("trait", 5));
	return (((_979_trt + jule::Str("<", 1)) + _9630_ident) + jule::Str(">", 1));
}



inline jule::Str _10f7a32c0_gen_trait_kind(jule::Ref<_10e3d6eb0_Trait> _10219_t) {
	jule::Str _1039_ident = _10eb3a1d0_trait_out_ident(_10219_t);
	return _10f7a32c0_gen_trait_kind_from_ident(_1039_ident);
}



inline jule::Str _10f7a32c0_gen_struct_kind(jule::Ref<_10e3fc8f0_Struct> _10820_s) {
	jule::Str _10913_rep = jule::Str("", 0);
	if ((_10820_s->_field_cpp_linked && (!_10f7a32c0_has_directive(_10820_s->_field_directives,jule::Str("typedef", 7))))) {
		_10913_rep+=jule::Str("struct ", 7);
	}
	_10913_rep+=_10eb3a1d0_struct_out_ident(_10820_s);
	return _10913_rep;
}



inline jule::Str _10f7a32c0_gen_struct_kind_ins(jule::Ref<_10e3fc8f0_StructIns> _11928_s) {
	if (_11928_s->_field_decl->_field_cpp_linked) {
		jule::Str _12117_ident = _10eb3a1d0_struct_ins_out_ident(_11928_s);
		if ((static_cast<jule::I64>(_11928_s->_field_generics.len()) > 0LL)) {
			_12117_ident+=jule::Str("<", 1);
			{
				auto &__julec_range_expr = _11928_s->_field_generics;
				if (__julec_range_expr.begin() != __julec_range_expr.end()) {
					auto __julec_range_begin = __julec_range_expr.begin();
					const auto __julec_range_end = __julec_range_expr.end();
					jule::Ref<_10eeb79b0_TypeKind> _10f7a32c0_g{jule::Ref<_10eeb79b0_TypeKind>()};_10f7a32c0_g = *__julec_range_begin;
					_iter_begin_4716846560:;
					{
						_12117_ident+=(_10f7a32c0_gen_type_kind(_10f7a32c0_g) + jule::Str(",", 1));
					}
					_iter_next_4716846560:;
					++__julec_range_begin;
					if (__julec_range_begin != __julec_range_end) { _10f7a32c0_g = *__julec_range_begin; goto _iter_begin_4716846560; }
					_iter_end_4716846560:;
				}
			}
			_12117_ident=_12117_ident.slice(0LL,static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_12117_ident.len()) - 1LL))));
			_12117_ident+=jule::Str(">", 1);
		}
		return _12117_ident;
	}
	return _10eb3a1d0_struct_ins_out_ident(_11928_s);
}



inline jule::Str _10f7a32c0_gen_array_kind(jule::Ref<_10eeb79b0_Arr> _13623_a) {
	jule::Str _1379_arr = _10eb3a1d0_as_jt(jule::Str("array", 5));
	jule::Str _1389_elem = _10f7a32c0_gen_type_kind(_13623_a->_field_elem);
	jule::Str _1399_size = _10daf8c40_itoa(_13623_a->_field_n);
	return (((((_1379_arr + jule::Str("<", 1)) + _1389_elem) + jule::Str(",", 1)) + _1399_size) + jule::Str(">", 1));
}



inline jule::Str _10f7a32c0_gen_fn_anon_decl(jule::Ref<_10e56a140_FnIns> _14325_f) {
	jule::Str _14413_decl = _10f7d1d90_gen_fn_ins_result(_14325_f);
	_14413_decl+=jule::Str("(", 1);
	if ((static_cast<jule::I64>(_14325_f->_field_params.len()) > 0LL)) {
		{
			auto &__julec_range_expr = _14325_f->_field_params;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_10e56a140_ParamIns> _10f7a32c0_param{jule::Ref<_10e56a140_ParamIns>()};_10f7a32c0_param = *__julec_range_begin;
				_iter_begin_4716863312:;
				{
					if (_10f7a32c0_param->_field_decl->_method_is_self()) {
						goto _iter_next_4716863312;
					}
					_14413_decl+=_10f7d1d90_gen_param_ins_prototype(_10f7a32c0_param);
					_14413_decl+=jule::Str(",", 1);
				}
				_iter_next_4716863312:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _10f7a32c0_param = *__julec_range_begin; goto _iter_begin_4716863312; }
				_iter_end_4716863312:;
			}
		}
		_14413_decl=_14413_decl.slice(0LL,static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_14413_decl.len()) - 1LL))));
	} else {
		_14413_decl+=jule::Str("void", 4);
	}
	_14413_decl+=jule::Str(")", 1);
	return _14413_decl;
}



inline jule::Str _10f7a32c0_gen_fn_kind(jule::Ref<_10e56a140_FnIns> _16620_f) {
	jule::Str _1679_fnc = _10eb3a1d0_as_jt(jule::Str("fn", 2));
	jule::Str _1689_decl = _10f7a32c0_gen_fn_anon_decl(_16620_f);
	return (((_1679_fnc + jule::Str("<", 1)) + _1689_decl) + jule::Str(">", 1));
}



inline jule::Str _10f7a32c0_gen_type_kind(jule::Ref<_10eeb79b0_TypeKind> _17322_k) {
	{
		auto _match_expr{ true };
		if (!(_17322_k->_field_cpp_linked == _match_expr)) { goto _case_end_4716880656; }
		_case_begin_4716880656:;
		{
			return _17322_k->_field_cpp_ident;
		}
		goto _match_end_4716878656;
		_case_end_4716880656:;
		if (!(jule::real(_17322_k->_method_prim()) == _match_expr)) { goto _case_end_4716880768; }
		_case_begin_4716880768:;
		{
			return _10f7a32c0_gen_prim_kind(_17322_k->_method_prim());
		}
		goto _match_end_4716878656;
		_case_end_4716880768:;
		if (!(jule::real(_17322_k->_method_tup()) == _match_expr)) { goto _case_end_4716880880; }
		_case_begin_4716880880:;
		{
			return _10f7a32c0_gen_tuple_kind(_17322_k->_method_tup());
		}
		goto _match_end_4716878656;
		_case_end_4716880880:;
		if (!(jule::real(_17322_k->_method_ref()) == _match_expr)) { goto _case_end_4716882016; }
		_case_begin_4716882016:;
		{
			return _10f7a32c0_gen_ref_kind(_17322_k->_method_ref());
		}
		goto _match_end_4716878656;
		_case_end_4716882016:;
		if (!(jule::real(_17322_k->_method_ptr()) == _match_expr)) { goto _case_end_4716882128; }
		_case_begin_4716882128:;
		{
			return _10f7a32c0_gen_ptr_kind(_17322_k->_method_ptr());
		}
		goto _match_end_4716878656;
		_case_end_4716882128:;
		if (!(jule::real(_17322_k->_method_enm()) == _match_expr)) { goto _case_end_4716882240; }
		_case_begin_4716882240:;
		{
			return _10f7a32c0_gen_enum_kind(_17322_k->_method_enm());
		}
		goto _match_end_4716878656;
		_case_end_4716882240:;
		if (!(jule::real(_17322_k->_method_slc()) == _match_expr)) { goto _case_end_4716882352; }
		_case_begin_4716882352:;
		{
			return _10f7a32c0_gen_slice_kind(_17322_k->_method_slc());
		}
		goto _match_end_4716878656;
		_case_end_4716882352:;
		if (!(jule::real(_17322_k->_method_map()) == _match_expr)) { goto _case_end_4716882464; }
		_case_begin_4716882464:;
		{
			return _10f7a32c0_gen_map_kind(_17322_k->_method_map());
		}
		goto _match_end_4716878656;
		_case_end_4716882464:;
		if (!(jule::real(_17322_k->_method_trt()) == _match_expr)) { goto _case_end_4716882576; }
		_case_begin_4716882576:;
		{
			return _10f7a32c0_gen_trait_kind(_17322_k->_method_trt());
		}
		goto _match_end_4716878656;
		_case_end_4716882576:;
		if (!(jule::real(_17322_k->_method_strct()) == _match_expr)) { goto _case_end_4716882736; }
		_case_begin_4716882736:;
		{
			return _10f7a32c0_gen_struct_kind_ins(_17322_k->_method_strct());
		}
		goto _match_end_4716878656;
		_case_end_4716882736:;
		if (!(jule::real(_17322_k->_method_arr()) == _match_expr)) { goto _case_end_4716882848; }
		_case_begin_4716882848:;
		{
			return _10f7a32c0_gen_array_kind(_17322_k->_method_arr());
		}
		goto _match_end_4716878656;
		_case_end_4716882848:;
		if (!(jule::real(_17322_k->_method_fnc()) == _match_expr)) { goto _case_end_4716882960; }
		_case_begin_4716882960:;
		{
			return _10f7a32c0_gen_fn_kind(_17322_k->_method_fnc());
		}
		goto _match_end_4716878656;
		_case_end_4716882960:;
		_case_begin_4716880352:;
		{
			return jule::Str("[<unimplemented_type_kind>]", 27);
		}
		goto _match_end_4716878656;
		_case_end_4716880352:;
		_match_end_4716878656:;
	}
}



inline void _10f7d1d90_add_indent(void) {
	(_10f7d1d90_INDENT)++;
}



inline void _10f7d1d90_done_indent(void) {
	(_10f7d1d90_INDENT)--;
}



inline jule::Str _10f7d1d90_indent(void) {
	
	if ((_10f7d1d90_INDENT == 0LL)) {
		return jule::Str("", 0);
	}
	jule::Str _7913_s = jule::Str("", 0);
	jule::Int _8013_i = 0LL;
	_iter_begin_4716908960:;
	if (!((_8013_i < _10f7d1d90_INDENT))) { goto _iter_end_4716908960; }
	{
		_7913_s+=jule::Str("\t", 1);
	}
	_iter_next_4716908960:;
	(_8013_i)++;
	goto _iter_begin_4716908960;
	_iter_end_4716908960:;
	return _7913_s;
}



inline jule::Bool _10f7d1d90_is_cpp_header_file(jule::Str _8723_path) {
	jule::Int _889_offset = static_cast<jule::Int>(_8723_path.rfind(jule::Str(".", 1)));
	if ((_889_offset == -1LL)) {
		return false;
	}
	return _11ce23cb0_is_valid_header_ext(_8723_path.slice(static_cast<jule::Int>(_889_offset)));
}



inline jule::Str _10f7d1d90_gen_links(jule::Ref<_12ce09d10_IR> _9618_ir) {
	jule::Str _9713_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _9618_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e9b6a10_ImportInfo> _10f7d1d90_pkg{jule::Ref<_10e9b6a10_ImportInfo>()};_10f7d1d90_pkg = *__julec_range_begin;
			_iter_begin_4716923488:;
			{
				{
					auto _match_expr{ true };
					if (!((!_10f7d1d90_pkg->_field_cpp_linked) == _match_expr)) { goto _case_end_4716926240; }
					_case_begin_4716926240:;
					{
						goto _iter_next_4716923488;
					}
					goto _match_end_4716925936;
					_case_end_4716926240:;
					if (!(_11ce23cb0_is_std_header_path(_10f7d1d90_pkg->_field_path) == _match_expr)) { goto _case_end_4716926352; }
					_case_begin_4716926352:;
					{
						_9713_obj+=((jule::Str("#include ", 9) + _10f7d1d90_pkg->_field_path) + jule::Str("\n", 1));
					}
					goto _match_end_4716925936;
					_case_end_4716926352:;
					_match_end_4716925936:;
				}
			}
			_iter_next_4716923488:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10f7d1d90_pkg = *__julec_range_begin; goto _iter_begin_4716923488; }
			_iter_end_4716923488:;
		}
	}
	{
		auto &__julec_range_expr = _9618_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e9b6a10_ImportInfo> _10f7d1d90_pkg{jule::Ref<_10e9b6a10_ImportInfo>()};_10f7d1d90_pkg = *__julec_range_begin;
			_iter_begin_4716925488:;
			{
				{
					auto _match_expr{ true };
					if (!((!_10f7d1d90_pkg->_field_cpp_linked) == _match_expr)) { goto _case_end_4716932640; }
					_case_begin_4716932640:;
					{
						goto _iter_next_4716925488;
					}
					goto _match_end_4716932336;
					_case_end_4716932640:;
					if (!(_10f7d1d90_is_cpp_header_file(_10f7d1d90_pkg->_field_path) == _match_expr)) { goto _case_end_4716932752; }
					_case_begin_4716932752:;
					{
						_9713_obj+=((jule::Str("#include \"", 10) + _10f7d1d90_pkg->_field_path) + jule::Str("\"\n", 2));
					}
					goto _match_end_4716932336;
					_case_end_4716932752:;
					_match_end_4716932336:;
				}
			}
			_iter_next_4716925488:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10f7d1d90_pkg = *__julec_range_begin; goto _iter_begin_4716925488; }
			_iter_end_4716925488:;
		}
	}
	return _9713_obj;
}



inline jule::Str _10f7d1d90_gen_fn_result(jule::Ref<_10e56a140_Fn> _12122_f) {
	if (_12122_f->_method_is_void()) {
		return jule::Str("void", 4);
	}
	return _10f7a32c0_gen_type_kind(_12122_f->_field_result->_field_kind->_field_kind);
}



inline jule::Str _10f7d1d90_gen_fn_ins_result(jule::Ref<_10e56a140_FnIns> _12926_f) {
	if (_12926_f->_field_decl->_method_is_void()) {
		return jule::Str("void", 4);
	}
	return _10f7a32c0_gen_type_kind(_12926_f->_field_result);
}



inline jule::Str _10f7d1d90_gen_param_prototype(jule::Ref<_10e56a140_Param> _13728_p) {
	jule::Str _13813_obj = jule::Str("", 0);
	if (_13728_p->_field_variadic) {
		_13813_obj+=_10eb3a1d0_as_jt(jule::Str("slice", 5));
		_13813_obj+=jule::Str("<", 1);
		_13813_obj+=_10f7a32c0_gen_type_kind(_13728_p->_field_kind->_field_kind);
		_13813_obj+=jule::Str(">", 1);
	} else {
		_13813_obj+=_10f7a32c0_gen_type_kind(_13728_p->_field_kind->_field_kind);
	}
	return _13813_obj;
}



inline jule::Str _10f7d1d90_gen_param_ins(jule::Ref<_10e56a140_ParamIns> _15122_p) {
	jule::Str _15213_obj = _10f7d1d90_gen_param_ins_prototype(_15122_p);
	_15213_obj+=jule::Str(" ", 1);
	_15213_obj+=_10eb3a1d0_param_out_ident(_15122_p->_field_decl);
	return _15213_obj;
}



inline jule::Str _10f7d1d90_gen_param_ins_prototype(jule::Ref<_10e56a140_ParamIns> _15932_p) {
	jule::Str _16013_obj = jule::Str("", 0);
	if (_15932_p->_field_decl->_field_variadic) {
		_16013_obj+=_10eb3a1d0_as_jt(jule::Str("slice", 5));
		_16013_obj+=jule::Str("<", 1);
		_16013_obj+=_10f7a32c0_gen_type_kind(_15932_p->_field_kind);
		_16013_obj+=jule::Str(">", 1);
	} else {
		_16013_obj+=_10f7a32c0_gen_type_kind(_15932_p->_field_kind);
	}
	if (_15932_p->_field_decl->_field_reference) {
		_16013_obj+=jule::Str("&", 1);
	}
	return _16013_obj;
}



inline jule::Str _10f7d1d90_gen_param(jule::Ref<_10e56a140_Param> _17818_p) {
	jule::Str _17913_obj = _10f7d1d90_gen_param_prototype(_17818_p);
	if ((((_17818_p->_field_ident != jule::Str("", 0)) && (!_11ce22a00_is_ignore_ident(_17818_p->_field_ident))) && (!_11ce22a00_is_anon_ident(_17818_p->_field_ident)))) {
		_17913_obj+=(jule::Str(" ", 1) + _10eb3a1d0_param_out_ident(_17818_p));
	}
	return _17913_obj;
}



inline jule::Str _10f7d1d90_gen_params(jule::Slice<jule::Ref<_10e56a140_Param>> _18719_params) {
	{
		auto _match_expr{ true };
		if (!((static_cast<jule::I64>(_18719_params.len()) == 0LL) == _match_expr)) { goto _case_end_4716973792; }
		_case_begin_4716973792:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4716973488;
		_case_end_4716973792:;
		if (!(((static_cast<jule::I64>(_18719_params.len()) == 1LL) && _18719_params[static_cast<jule::Int>(0LL)]->_method_is_self()) == _match_expr)) { goto _case_end_4716973904; }
		_case_begin_4716973904:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4716973488;
		_case_end_4716973904:;
		_match_end_4716973488:;
	}
	jule::Str _19613_obj = jule::Str("(", 1);
	{
		auto &__julec_range_expr = _18719_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e56a140_Param> _10f7d1d90_p{jule::Ref<_10e56a140_Param>()};_10f7d1d90_p = *__julec_range_begin;
			_iter_begin_4716979696:;
			{
				if ((!_10f7d1d90_p->_method_is_self())) {
					_19613_obj+=(_10f7d1d90_gen_param(_10f7d1d90_p) + jule::Str(",", 1));
				}
			}
			_iter_next_4716979696:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10f7d1d90_p = *__julec_range_begin; goto _iter_begin_4716979696; }
			_iter_end_4716979696:;
		}
	}
	_19613_obj=_19613_obj.slice(0LL,static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_19613_obj.len()) - 1LL))));
	return (_19613_obj + jule::Str(")", 1));
}



inline jule::Str _10f7d1d90_gen_params_ins(jule::Slice<jule::Ref<_10e56a140_ParamIns>> _20823_params) {
	{
		auto _match_expr{ true };
		if (!((static_cast<jule::I64>(_20823_params.len()) == 0LL) == _match_expr)) { goto _case_end_4716986928; }
		_case_begin_4716986928:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4716986624;
		_case_end_4716986928:;
		if (!(((static_cast<jule::I64>(_20823_params.len()) == 1LL) && _20823_params[static_cast<jule::Int>(0LL)]->_field_decl->_method_is_self()) == _match_expr)) { goto _case_end_4716987040; }
		_case_begin_4716987040:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4716986624;
		_case_end_4716987040:;
		_match_end_4716986624:;
	}
	jule::Str _21713_obj = jule::Str("(", 1);
	{
		auto &__julec_range_expr = _20823_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e56a140_ParamIns> _10f7d1d90_p{jule::Ref<_10e56a140_ParamIns>()};_10f7d1d90_p = *__julec_range_begin;
			_iter_begin_4716992448:;
			{
				if ((!_10f7d1d90_p->_field_decl->_method_is_self())) {
					_21713_obj+=(_10f7d1d90_gen_param_ins(_10f7d1d90_p) + jule::Str(",", 1));
				}
			}
			_iter_next_4716992448:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10f7d1d90_p = *__julec_range_begin; goto _iter_begin_4716992448; }
			_iter_end_4716992448:;
		}
	}
	_21713_obj=_21713_obj.slice(0LL,static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_21713_obj.len()) - 1LL))));
	return (_21713_obj + jule::Str(")", 1));
}



inline jule::Str _10f7d1d90_gen_params_prototypes(jule::Slice<jule::Ref<_10e56a140_ParamIns>> _23030_params) {
	{
		auto _match_expr{ true };
		if (!((static_cast<jule::I64>(_23030_params.len()) == 0LL) == _match_expr)) { goto _case_end_4717000608; }
		_case_begin_4717000608:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4716994784;
		_case_end_4717000608:;
		if (!(((static_cast<jule::I64>(_23030_params.len()) == 1LL) && _23030_params[static_cast<jule::Int>(0LL)]->_field_decl->_method_is_self()) == _match_expr)) { goto _case_end_4717000720; }
		_case_begin_4717000720:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_4716994784;
		_case_end_4717000720:;
		_match_end_4716994784:;
	}
	jule::Str _23913_obj = jule::Str("(", 1);
	{
		auto &__julec_range_expr = _23030_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e56a140_ParamIns> _10f7d1d90_p{jule::Ref<_10e56a140_ParamIns>()};_10f7d1d90_p = *__julec_range_begin;
			_iter_begin_4717006688:;
			{
				if ((!_10f7d1d90_p->_field_decl->_method_is_self())) {
					_23913_obj+=(_10f7d1d90_gen_param_ins_prototype(_10f7d1d90_p) + jule::Str(",", 1));
				}
			}
			_iter_next_4717006688:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10f7d1d90_p = *__julec_range_begin; goto _iter_begin_4717006688; }
			_iter_end_4717006688:;
		}
	}
	_23913_obj=_23913_obj.slice(0LL,static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_23913_obj.len()) - 1LL))));
	return (_23913_obj + jule::Str(")", 1));
}



inline jule::Str _10f7d1d90_gen_trait(jule::Ref<_10e3d6eb0_Trait> _25218_t) {
	
	jule::Str _2549_outid = _10eb3a1d0_trait_out_ident(_25218_t);
	jule::Str _25613_obj = jule::Str("struct ", 7);
	_25613_obj+=_2549_outid;
	_25613_obj+=jule::Str(" {\n", 3);
	_25613_obj+=jule::Str("\t", 1);
	_25613_obj+=jule::Str("virtual ~", 9);
	_25613_obj+=_2549_outid;
	_25613_obj+=jule::Str("(void)   {}\n\n", 13);
	{
		auto &__julec_range_expr = _25218_t->_field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e56a140_Fn> _10f7d1d90_f{jule::Ref<_10e56a140_Fn>()};_10f7d1d90_f = *__julec_range_begin;
			_iter_begin_4717020592:;
			{
				_25613_obj+=jule::Str("\t", 1);
				_25613_obj+=jule::Str("virtual ", 8);
				_25613_obj+=_10f7d1d90_gen_fn_result(_10f7d1d90_f);
				_25613_obj+=jule::Str(" _method_", 9);
				_25613_obj+=_10f7d1d90_f->_field_ident;
				_25613_obj+=_10f7d1d90_gen_params(_10f7d1d90_f->_field_params);
				_25613_obj+=jule::Str(" {", 2);
				if ((!_10f7d1d90_f->_method_is_void())) {
					_25613_obj+=jule::Str(" return {}; ", 12);
				}
				_25613_obj+=jule::Str("}\n", 2);
			}
			_iter_next_4717020592:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10f7d1d90_f = *__julec_range_begin; goto _iter_begin_4717020592; }
			_iter_end_4717020592:;
		}
	}
	_25613_obj+=jule::Str("};", 2);
	return _25613_obj;
}



inline jule::Str _10f7d1d90_gen_traits_tbl(jule::Ref<_10ee5c510_SymbolTable> _28123_tbl) {
	jule::Str _28213_obj = jule::Str("", 0);
	jule::Int _28313_i = 0LL;
	_iter_begin_4717031216:;
	if (!((_28313_i < static_cast<jule::Int>(_28123_tbl->_field_traits._method_len())))) { goto _iter_end_4717031216; }
	{
		jule::Ref<_10e3d6eb0_Trait> _28517_t = _28123_tbl->_field_traits._method_at(_28313_i);
		_28213_obj+=(_10f7d1d90_gen_trait(_28517_t) + jule::Str("\n\n", 2));
	}
	_iter_next_4717031216:;
	(_28313_i)++;
	goto _iter_begin_4717031216;
	_iter_end_4717031216:;
	return _28213_obj;
}



inline jule::Str _10f7d1d90_gen_traits_pkg(jule::Ref<_10e9b6a10_Package> _29223_pkg) {
	jule::Str _29313_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _29223_pkg->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ee5c510_SymbolTable> _10f7d1d90_tbl{jule::Ref<_10ee5c510_SymbolTable>()};_10f7d1d90_tbl = *__julec_range_begin;
			_iter_begin_4717040544:;
			{
				_29313_obj+=_10f7d1d90_gen_traits_tbl(_10f7d1d90_tbl);
			}
			_iter_next_4717040544:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10f7d1d90_tbl = *__julec_range_begin; goto _iter_begin_4717040544; }
			_iter_end_4717040544:;
		}
	}
	return _29313_obj;
}



inline jule::Str _10f7d1d90_gen_traits(jule::Ref<_12ce09d10_IR> _30119_ir) {
	jule::Str _30213_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _30119_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e9b6a10_ImportInfo> _10f7d1d90_u{jule::Ref<_10e9b6a10_ImportInfo>()};_10f7d1d90_u = *__julec_range_begin;
			_iter_begin_4717045104:;
			{
				if ((!_10f7d1d90_u->_field_cpp_linked)) {
					_30213_obj+=_10f7d1d90_gen_traits_pkg(_10f7d1d90_u->_field_package);
				}
			}
			_iter_next_4717045104:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10f7d1d90_u = *__julec_range_begin; goto _iter_begin_4717045104; }
			_iter_end_4717045104:;
		}
	}
	_30213_obj+=_10f7d1d90_gen_traits_pkg(_30119_ir->_field_main);
	return _30213_obj;
}



inline jule::Str _10f7d1d90_gen_trait_prototype(jule::Ref<_10e3d6eb0_Trait> _31324_t) {
	return ((jule::Str("struct ", 7) + _10eb3a1d0_trait_out_ident(_31324_t)) + jule::Str(";", 1));
}



inline jule::Str _10f7d1d90_gen_trait_prototypes(jule::Ref<_10e9b6a10_Package> _31829_p) {
	jule::Str _31913_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _31829_p->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ee5c510_SymbolTable> _10f7d1d90_f{jule::Ref<_10ee5c510_SymbolTable>()};_10f7d1d90_f = *__julec_range_begin;
			_iter_begin_4717053632:;
			{
				jule::Int _32117_i = 0LL;
				_iter_begin_4717056912:;
				if (!((_32117_i < static_cast<jule::Int>(_10f7d1d90_f->_field_traits._method_len())))) { goto _iter_end_4717056912; }
				{
					jule::Ref<_10e3d6eb0_Trait> _32317_t = _10f7d1d90_f->_field_traits._method_at(_32117_i);
					if ((_32317_t->_field_token._field_id != 0LLU)) {
						_31913_obj+=(_10f7d1d90_gen_trait_prototype(_32317_t) + jule::Str("\n", 1));
					}
				}
				_iter_next_4717056912:;
				(_32117_i)++;
				goto _iter_begin_4717056912;
				_iter_end_4717056912:;
			}
			_iter_next_4717053632:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10f7d1d90_f = *__julec_range_begin; goto _iter_begin_4717053632; }
			_iter_end_4717053632:;
		}
	}
	return _31913_obj;
}



inline jule::Str _10f7d1d90_gen_struct_plain_prototype(jule::Ref<_10e3fc8f0_Struct> _33331_s) {
	jule::Str _33413_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _33331_s->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e3fc8f0_StructIns> _10f7d1d90_ins{jule::Ref<_10e3fc8f0_StructIns>()};_10f7d1d90_ins = *__julec_range_begin;
			_iter_begin_4717064880:;
			{
				_33413_obj+=jule::Str("\nstruct ", 8);
				_33413_obj+=_10eb3a1d0_struct_ins_out_ident(_10f7d1d90_ins);
				_33413_obj+=jule::Str(";", 1);
				_33413_obj+=jule::Str("\n", 1);
			}
			_iter_next_4717064880:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10f7d1d90_ins = *__julec_range_begin; goto _iter_begin_4717064880; }
			_iter_end_4717064880:;
		}
	}
	return _33413_obj;
}



inline jule::Str _10f7d1d90_gen_struct_plain_prototypes(jule::Slice<jule::Ref<_10e3fc8f0_Struct>> _34536_structs) {
	jule::Str _34613_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _34536_structs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e3fc8f0_Struct> _10f7d1d90_s{jule::Ref<_10e3fc8f0_Struct>()};_10f7d1d90_s = *__julec_range_begin;
			_iter_begin_4717068128:;
			{
				if (((!_10f7d1d90_s->_field_cpp_linked) && (_10f7d1d90_s->_field_token._field_id != 0LLU))) {
					_34613_obj+=(_10f7d1d90_gen_struct_plain_prototype(_10f7d1d90_s) + jule::Str("\n", 1));
				}
			}
			_iter_next_4717068128:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10f7d1d90_s = *__julec_range_begin; goto _iter_begin_4717068128; }
			_iter_end_4717068128:;
		}
	}
	return _34613_obj;
}



inline jule::Str _10f7d1d90_gen_struct_traits(jule::Ref<_10e3fc8f0_Struct> _35622_s) {
	if ((static_cast<jule::I64>(_35622_s->_field_implements.len()) == 0LL)) {
		return jule::Str("", 0);
	}
	jule::Str _36113_obj = jule::Str(": ", 2);
	{
		auto &__julec_range_expr = _35622_s->_field_implements;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e3d6eb0_Trait> _10f7d1d90_i{jule::Ref<_10e3d6eb0_Trait>()};_10f7d1d90_i = *__julec_range_begin;
			_iter_begin_4717078784:;
			{
				_36113_obj+=jule::Str("public ", 7);
				_36113_obj+=_10eb3a1d0_trait_out_ident(_10f7d1d90_i);
				_36113_obj+=jule::Str(",", 1);
			}
			_iter_next_4717078784:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10f7d1d90_i = *__julec_range_begin; goto _iter_begin_4717078784; }
			_iter_end_4717078784:;
		}
	}
	_36113_obj=_36113_obj.slice(0LL,static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_36113_obj.len()) - 1LL))));
	return _36113_obj;
}



inline jule::Str _10f7d1d90_gen_field_decl(jule::Ref<_10e3fc8f0_FieldIns> _37223_f) {
	jule::Str _37313_obj = (_10f7a32c0_gen_type_kind(_37223_f->_field_kind) + jule::Str(" ", 1));
	_37313_obj+=_10eb3a1d0_field_out_ident(_37223_f->_field_decl);
	_37313_obj+=((jule::Str("{", 1) + _10f32ecc0_get_init_expr(_37223_f->_field_kind)) + jule::Str("}", 1));
	_37313_obj+=jule::Str(";", 1);
	return _37313_obj;
}



inline jule::Str _10f7d1d90_gen_struct_self_field_type_kind(jule::Ref<_10e3fc8f0_StructIns> _38140_s) {
	return _10f7a32c0_as_ref_kind(_10f7a32c0_gen_struct_kind_ins(_38140_s));
}



inline jule::Str _10f7d1d90_gen_struct_self_field(jule::Ref<_10e3fc8f0_StructIns> _38630_s) {
	jule::Str _38713_obj = _10f7d1d90_gen_struct_self_field_type_kind(_38630_s);
	_38713_obj+=jule::Str(" self{};", 8);
	return _38713_obj;
}



inline jule::Str _10f7d1d90_gen_struct_self_field_init_st(jule::Ref<_10e3fc8f0_StructIns> _39238_s) {
	jule::Str _39313_obj = jule::Str("this->self = ", 13);
	_39313_obj+=_10f7d1d90_gen_struct_self_field_type_kind(_39238_s);
	_39313_obj+=jule::Str("::make(this, nullptr);", 22);
	return _39313_obj;
}



inline jule::Str _10f7d1d90_gen_struct_constructor(jule::Ref<_10e3fc8f0_StructIns> _39931_s) {
	jule::Str _40013_obj = _10eb3a1d0_struct_ins_out_ident(_39931_s);
	_40013_obj+=jule::Str("(", 1);
	if ((static_cast<jule::I64>(_39931_s->_field_fields.len()) > 0LL)) {
		{
			auto &__julec_range_expr = _39931_s->_field_fields;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_10e3fc8f0_FieldIns> _10f7d1d90_f{jule::Ref<_10e3fc8f0_FieldIns>()};_10f7d1d90_f = *__julec_range_begin;
				_iter_begin_4717102000:;
				{
					_40013_obj+=_10f7a32c0_gen_type_kind(_10f7d1d90_f->_field_kind);
					_40013_obj+=((jule::Str(" __param_", 9) + _10f7d1d90_f->_field_decl->_field_ident) + jule::Str(", ", 2));
				}
				_iter_next_4717102000:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _10f7d1d90_f = *__julec_range_begin; goto _iter_begin_4717102000; }
				_iter_end_4717102000:;
			}
		}
		_40013_obj=_40013_obj.slice(0LL,static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_40013_obj.len()) - 2LL))));
	} else {
		_40013_obj+=jule::Str("void", 4);
	}
	_40013_obj+=jule::Str(")   {\n", 6);
	_10f7d1d90_add_indent();
	_40013_obj+=_10f7d1d90_indent();
	_40013_obj+=_10f7d1d90_gen_struct_self_field_init_st(_39931_s);
	_40013_obj+=jule::Str("\n", 1);
	if ((static_cast<jule::I64>(_39931_s->_field_fields.len()) > 0LL)) {
		{
			auto &__julec_range_expr = _39931_s->_field_fields;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_10e3fc8f0_FieldIns> _10f7d1d90_f{jule::Ref<_10e3fc8f0_FieldIns>()};_10f7d1d90_f = *__julec_range_begin;
				_iter_begin_4717109216:;
				{
					_40013_obj+=jule::Str("\n", 1);
					_40013_obj+=_10f7d1d90_indent();
					_40013_obj+=jule::Str("this->", 6);
					_40013_obj+=_10eb3a1d0_field_out_ident(_10f7d1d90_f->_field_decl);
					_40013_obj+=jule::Str(" = ", 3);
					_40013_obj+=(jule::Str("__param_", 8) + _10f7d1d90_f->_field_decl->_field_ident);
					_40013_obj+=jule::Str(";", 1);
				}
				_iter_next_4717109216:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _10f7d1d90_f = *__julec_range_begin; goto _iter_begin_4717109216; }
				_iter_end_4717109216:;
			}
		}
	}
	_10f7d1d90_done_indent();
	_40013_obj+=((jule::Str("\n", 1) + _10f7d1d90_indent()) + jule::Str("}", 1));
	return _40013_obj;
}



inline jule::Str _10f7d1d90_gen_struct_destructor(jule::Ref<_10e3fc8f0_StructIns> _43626_s) {
	jule::Str _43713_obj = jule::Str("~", 1);
	_43713_obj+=_10eb3a1d0_struct_ins_out_ident(_43626_s);
	_43713_obj+=jule::Str("(void)   { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }", 93);
	return _43713_obj;
}



inline jule::Str _10f7d1d90_gen_struct_operators(jule::Ref<_10e3fc8f0_StructIns> _44329_s) {
	jule::Str _4449_out_ident = _10eb3a1d0_struct_ins_out_ident(_44329_s);
	jule::Str _44513_obj = jule::Str("", 0);
	_44513_obj+=_10f7d1d90_indent();
	_44513_obj+=jule::Str("inline bool operator==(const ", 29);
	_44513_obj+=_4449_out_ident;
	_44513_obj+=jule::Str(" &_Src) {", 9);
	if ((static_cast<jule::I64>(_44329_s->_field_fields.len()) > 0LL)) {
		_10f7d1d90_add_indent();
		_44513_obj+=jule::Str("\n", 1);
		_44513_obj+=_10f7d1d90_indent();
		_44513_obj+=jule::Str("return ", 7);
		_10f7d1d90_add_indent();
		jule::Int _45717_n = 0LL;
		{
			auto &__julec_range_expr = _44329_s->_field_fields;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_10e3fc8f0_FieldIns> _10f7d1d90_f{jule::Ref<_10e3fc8f0_FieldIns>()};_10f7d1d90_f = *__julec_range_begin;
				_iter_begin_4717132448:;
				{
					jule::Ref<_10e3fc8f0_StructIns> _46017_strct = _10f7d1d90_f->_field_kind->_method_strct();
					if (((jule::real(_46017_strct) && jule::real(_46017_strct->_field_decl)) && _46017_strct->_field_decl->_field_cpp_linked)) {
						goto _iter_next_4717132448;
					}
					(_45717_n)++;
					_44513_obj+=jule::Str("\n", 1);
					_44513_obj+=_10f7d1d90_indent();
					_44513_obj+=jule::Str("this->", 6);
					jule::Str _46917_f_ident = _10eb3a1d0_field_out_ident(_10f7d1d90_f->_field_decl);
					_44513_obj+=_46917_f_ident;
					_44513_obj+=jule::Str(" == _Src.", 9);
					_44513_obj+=_46917_f_ident;
					_44513_obj+=jule::Str(" &&", 3);
				}
				_iter_next_4717132448:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _10f7d1d90_f = *__julec_range_begin; goto _iter_begin_4717132448; }
				_iter_end_4717132448:;
			}
		}
		_10f7d1d90_done_indent();
		if ((_45717_n > 0LL)) {
			_44513_obj=_44513_obj.slice(0LL,static_cast<jule::Int>(static_cast<jule::I64>((static_cast<jule::I64>(_44513_obj.len()) - 3LL))));
		} else {
			_44513_obj+=jule::Str("true", 4);
		}
		_44513_obj+=jule::Str(";\n", 2);
		_10f7d1d90_done_indent();
		_44513_obj+=_10f7d1d90_indent();
		_44513_obj+=jule::Str("}", 1);
	} else {
		_44513_obj+=jule::Str(" return true; }", 15);
	}
	_44513_obj+=jule::Str("\n\n", 2);
	_44513_obj+=_10f7d1d90_indent();
	_44513_obj+=jule::Str("inline bool operator!=(const ", 29);
	_44513_obj+=_4449_out_ident;
	_44513_obj+=jule::Str(" &_Src) { return !this->operator==(_Src); }", 43);
	return _44513_obj;
}



inline jule::Str _10f7d1d90_gen_struct_derive_defs_prototypes(jule::Ref<_10e3fc8f0_StructIns> _49638_s) {
	jule::Str _49713_obj = jule::Str("", 0);
	if (_49638_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))) {
		_49713_obj+=_10f7d1d90_indent();
		_49713_obj+=_10f7a0fa0_get_derive_fn_decl_clone(_49638_s->_field_decl);
		_49713_obj+=jule::Str(";\n\n", 3);
	}
	return _49713_obj;
}



inline jule::Str _10f7d1d90_gen_struct_ins_prototype(jule::Ref<_10e3fc8f0_StructIns> _50833_s) {
	jule::Str _50913_obj = jule::Str("struct ", 7);
	jule::Str _5109_out_ident = _10eb3a1d0_struct_ins_out_ident(_50833_s);
	_50913_obj+=_5109_out_ident;
	_50913_obj+=_10f7d1d90_gen_struct_traits(_50833_s->_field_decl);
	_50913_obj+=jule::Str(" {\n", 3);
	_10f7d1d90_add_indent();
	_50913_obj+=_10f7d1d90_indent();
	_50913_obj+=_10f7d1d90_gen_struct_self_field(_50833_s);
	_50913_obj+=jule::Str("\n\n", 2);
	if ((static_cast<jule::I64>(_50833_s->_field_fields.len()) > 0LL)) {
		{
			auto &__julec_range_expr = _50833_s->_field_fields;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_10e3fc8f0_FieldIns> _10f7d1d90_f{jule::Ref<_10e3fc8f0_FieldIns>()};_10f7d1d90_f = *__julec_range_begin;
				_iter_begin_4717170688:;
				{
					_50913_obj+=_10f7d1d90_indent();
					_50913_obj+=_10f7d1d90_gen_field_decl(_10f7d1d90_f);
					_50913_obj+=jule::Str("\n", 1);
				}
				_iter_next_4717170688:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _10f7d1d90_f = *__julec_range_begin; goto _iter_begin_4717170688; }
				_iter_end_4717170688:;
			}
		}
		_50913_obj+=jule::Str("\n\n", 2);
		_50913_obj+=_10f7d1d90_indent();
		_50913_obj+=_10f7d1d90_gen_struct_constructor(_50833_s);
		_50913_obj+=jule::Str("\n\n", 2);
	}
	_50913_obj+=_10f7d1d90_indent();
	_50913_obj+=_10f7d1d90_gen_struct_destructor(_50833_s);
	_50913_obj+=jule::Str("\n\n", 2);
	_50913_obj+=_10f7d1d90_indent();
	_50913_obj+=_5109_out_ident;
	_50913_obj+=jule::Str("(void)   { ", 11);
	_50913_obj+=_10f7d1d90_gen_struct_self_field_init_st(_50833_s);
	_50913_obj+=jule::Str(" }\n\n", 4);
	{
		auto &__julec_range_expr = _50833_s->_field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e56a140_Fn> _10f7d1d90_f{jule::Ref<_10e56a140_Fn>()};_10f7d1d90_f = *__julec_range_begin;
			_iter_begin_4717170384:;
			{
				jule::Str _54317_proto = _10f7d1d90_gen_fn_prototype(_10f7d1d90_f,true);
				if (_10f7d1d90_f->_field_statically) {
					_54317_proto=((_10f7d1d90_indent() + jule::Str("static ", 7)) + _54317_proto.trim(jule::Str("\t ", 2)));
				}
				_50913_obj+=_54317_proto;
				_50913_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4717170384:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10f7d1d90_f = *__julec_range_begin; goto _iter_begin_4717170384; }
			_iter_end_4717170384:;
		}
	}
	_50913_obj+=_10f7d1d90_gen_struct_derive_defs_prototypes(_50833_s);
	_50913_obj+=_10f7d1d90_gen_struct_operators(_50833_s);
	_50913_obj+=jule::Str("\n", 1);
	_10f7d1d90_done_indent();
	_50913_obj+=(_10f7d1d90_indent() + jule::Str("};", 2));
	return _50913_obj;
}



inline jule::Str _10f7d1d90_gen_struct_prototype(jule::Ref<_10e3fc8f0_Struct> _56229_s) {
	jule::Str _56313_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _56229_s->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e3fc8f0_StructIns> _10f7d1d90_ins{jule::Ref<_10e3fc8f0_StructIns>()};_10f7d1d90_ins = *__julec_range_begin;
			_iter_begin_4717193296:;
			{
				_56313_obj+=(_10f7d1d90_gen_struct_ins_prototype(_10f7d1d90_ins) + jule::Str("\n\n", 2));
			}
			_iter_next_4717193296:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10f7d1d90_ins = *__julec_range_begin; goto _iter_begin_4717193296; }
			_iter_end_4717193296:;
		}
	}
	return _56313_obj;
}



inline jule::Str _10f7d1d90_gen_struct_prototypes(jule::Slice<jule::Ref<_10e3fc8f0_Struct>> _57130_structs) {
	jule::Str _57213_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _57130_structs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e3fc8f0_Struct> _10f7d1d90_s{jule::Ref<_10e3fc8f0_Struct>()};_10f7d1d90_s = *__julec_range_begin;
			_iter_begin_4717198224:;
			{
				if (((!_10f7d1d90_s->_field_cpp_linked) && (_10f7d1d90_s->_field_token._field_id != 0LLU))) {
					_57213_obj+=(_10f7d1d90_gen_struct_prototype(_10f7d1d90_s) + jule::Str("\n", 1));
				}
			}
			_iter_next_4717198224:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10f7d1d90_s = *__julec_range_begin; goto _iter_begin_4717198224; }
			_iter_end_4717198224:;
		}
	}
	return _57213_obj;
}



inline jule::Str _10f7d1d90_gen_fn_decl_head(jule::Ref<_10e56a140_FnIns> _58125_f,jule::Bool _58136_method) {
	jule::Str _58213_obj = jule::Str("", 0);
	if ((!_58125_f->_field_decl->_method_is_entry_point())) {
		_58213_obj+=jule::Str("inline ", 7);
	}
	_58213_obj+=(_10f7d1d90_gen_fn_ins_result(_58125_f) + jule::Str(" ", 1));
	if (((!_58136_method) && jule::real(_58125_f->_field_decl->_field_owner))) {
		_58213_obj+=(_10eb3a1d0_struct_ins_out_ident(_58125_f->_field_owner) + jule::Str("::", 2));
	}
	_58213_obj+=_10eb3a1d0_fn_ins_out_ident(_58125_f);
	return _58213_obj;
}



inline jule::Str _10f7d1d90_gen_fn_prototype(jule::Ref<_10e56a140_Fn> _59825_f,jule::Bool _59833_method) {
	jule::Str _59913_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _59825_f->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e56a140_FnIns> _10f7d1d90_c{jule::Ref<_10e56a140_FnIns>()};_10f7d1d90_c = *__julec_range_begin;
			_iter_begin_4717214848:;
			{
				_59913_obj+=_10f7d1d90_indent();
				_59913_obj+=_10f7d1d90_gen_fn_decl_head(_10f7d1d90_c,_59833_method);
				_59913_obj+=_10f7d1d90_gen_params_prototypes(_10f7d1d90_c->_field_params);
				_59913_obj+=jule::Str(";\n", 2);
			}
			_iter_next_4717214848:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10f7d1d90_c = *__julec_range_begin; goto _iter_begin_4717214848; }
			_iter_end_4717214848:;
		}
	}
	return _59913_obj;
}



inline jule::Str _10f7d1d90_gen_fn_prototypes(jule::Ref<_10e9b6a10_Package> _61026_pkg) {
	jule::Str _61113_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _61026_pkg->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ee5c510_SymbolTable> _10f7d1d90_file{jule::Ref<_10ee5c510_SymbolTable>()};_10f7d1d90_file = *__julec_range_begin;
			_iter_begin_4717222016:;
			{
				jule::Int _61317_i = 0LL;
				_iter_begin_4717225088:;
				if (!((_61317_i < static_cast<jule::Int>(_10f7d1d90_file->_field_funcs._method_len())))) { goto _iter_end_4717225088; }
				{
					jule::Ref<_10e56a140_Fn> _61521_f = _10f7d1d90_file->_field_funcs._method_at(_61317_i);
					if (((!_61521_f->_field_cpp_linked) && (_61521_f->_field_token._field_id != 0LLU))) {
						_61113_obj+=_10f7d1d90_gen_fn_prototype(_61521_f,false);
					}
				}
				_iter_next_4717225088:;
				(_61317_i)++;
				goto _iter_begin_4717225088;
				_iter_end_4717225088:;
			}
			_iter_next_4717222016:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10f7d1d90_file = *__julec_range_begin; goto _iter_begin_4717222016; }
			_iter_end_4717222016:;
		}
	}
	return _61113_obj;
}



inline jule::Str _10f7d1d90_gen_prototypes(jule::Ref<_12ce09d10_IR> _62523_ir,jule::Slice<jule::Ref<_10e3fc8f0_Struct>> _62536_structs) {
	jule::Str _62613_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _62523_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e9b6a10_ImportInfo> _10f7d1d90_u{jule::Ref<_10e9b6a10_ImportInfo>()};_10f7d1d90_u = *__julec_range_begin;
			_iter_begin_4717234256:;
			{
				if ((!_10f7d1d90_u->_field_cpp_linked)) {
					_62613_obj+=_10f7d1d90_gen_trait_prototypes(_10f7d1d90_u->_field_package);
				}
			}
			_iter_next_4717234256:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10f7d1d90_u = *__julec_range_begin; goto _iter_begin_4717234256; }
			_iter_end_4717234256:;
		}
	}
	_62613_obj+=_10f7d1d90_gen_trait_prototypes(_62523_ir->_field_main);
	_62613_obj+=_10f7d1d90_gen_struct_plain_prototypes(_62536_structs);
	_62613_obj+=(_10f7d1d90_gen_traits(_62523_ir) + jule::Str("\n", 1));
	_62613_obj+=_10f7d1d90_gen_struct_prototypes(_62536_structs);
	{
		auto &__julec_range_expr = _62523_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e9b6a10_ImportInfo> _10f7d1d90_u{jule::Ref<_10e9b6a10_ImportInfo>()};_10f7d1d90_u = *__julec_range_begin;
			_iter_begin_4715860288:;
			{
				if ((!_10f7d1d90_u->_field_cpp_linked)) {
					_62613_obj+=_10f7d1d90_gen_fn_prototypes(_10f7d1d90_u->_field_package);
				}
			}
			_iter_next_4715860288:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10f7d1d90_u = *__julec_range_begin; goto _iter_begin_4715860288; }
			_iter_end_4715860288:;
		}
	}
	_62613_obj+=_10f7d1d90_gen_fn_prototypes(_62523_ir->_field_main);
	return _62613_obj;
}



inline jule::Str _10f7d1d90_gen_var(jule::Ref<_10ebc2ad0_Var> _65316_v) {
	if (_11ce22a00_is_ignore_ident(_65316_v->_field_ident)) {
		return jule::Str("", 0);
	}
	if (_65316_v->_field_constant) {
		return jule::Str("", 0);
	}
	jule::Str _66113_obj = jule::Str("", 0);
	if (_65316_v->_field_statically) {
		_66113_obj+=jule::Str("static ", 7);
	}
	_66113_obj+=(_10f7a32c0_gen_type_kind(_65316_v->_field_kind->_field_kind) + jule::Str(" ", 1));
	if (_65316_v->_field_reference) {
		_66113_obj+=jule::Str("&", 1);
	}
	_66113_obj+=_10eb3a1d0_var_out_ident(_65316_v);
	if ((jule::real(_65316_v->_field_value) && jule::real(_65316_v->_field_value->_field_expr))) {
		if ((_65316_v->_field_value->_field_data->_field_model != nullptr)) {
			_66113_obj+=jule::Str(" = ", 3);
			_66113_obj+=_10f32ecc0_gen_val(_65316_v->_field_value);
		} else {
			_66113_obj+=jule::Str("{}", 2);
		}
	} else {
		_66113_obj+=((jule::Str("{", 1) + _10f32ecc0_get_init_expr(_65316_v->_field_kind->_field_kind)) + jule::Str("}", 1));
	}
	_66113_obj+=jule::Str(";", 1);
	return _66113_obj;
}



inline jule::Str _10f7d1d90_gen_globals(jule::Slice<jule::Ref<_10ebc2ad0_Var>> _68620_globals) {
	jule::Str _68713_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _68620_globals;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ebc2ad0_Var> _10f7d1d90_v{jule::Ref<_10ebc2ad0_Var>()};_10f7d1d90_v = *__julec_range_begin;
			_iter_begin_4717265728:;
			{
				if (((!_10f7d1d90_v->_field_constant) && (_10f7d1d90_v->_field_token._field_id != 0LLU))) {
					_68713_obj+=(_10f7d1d90_gen_var(_10f7d1d90_v) + jule::Str("\n", 1));
				}
			}
			_iter_next_4717265728:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10f7d1d90_v = *__julec_range_begin; goto _iter_begin_4717265728; }
			_iter_end_4717265728:;
		}
	}
	return _68713_obj;
}



inline jule::Str _10f7d1d90_gen_fn(jule::Ref<_10e56a140_Fn> _69915_f) {
	jule::Str _70013_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _69915_f->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e56a140_FnIns> _10f7d1d90_ins{jule::Ref<_10e56a140_FnIns>()};_10f7d1d90_ins = *__julec_range_begin;
			_iter_begin_4717272032:;
			{
				_70013_obj+=_10f7d1d90_gen_fn_decl_head(_10f7d1d90_ins,false);
				_70013_obj+=(_10f7d1d90_gen_params_ins(_10f7d1d90_ins->_field_params) + jule::Str(" ", 1));
				_70013_obj+=_10e890bb0_gen_fn_scope(_10f7d1d90_ins);
				_70013_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4717272032:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10f7d1d90_ins = *__julec_range_begin; goto _iter_begin_4717272032; }
			_iter_end_4717272032:;
		}
	}
	return _70013_obj;
}



inline jule::Str _10f7d1d90_gen_pkg_fns(jule::Ref<_10e9b6a10_Package> _71120_p) {
	jule::Str _71213_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _71120_p->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ee5c510_SymbolTable> _10f7d1d90_f{jule::Ref<_10ee5c510_SymbolTable>()};_10f7d1d90_f = *__julec_range_begin;
			_iter_begin_4717279168:;
			{
				jule::Int _71417_i = 0LL;
				_iter_begin_4717282256:;
				if (!((_71417_i < static_cast<jule::Int>(_10f7d1d90_f->_field_funcs._method_len())))) { goto _iter_end_4717282256; }
				{
					jule::Ref<_10e56a140_Fn> _71621_f = _10f7d1d90_f->_field_funcs._method_at(_71417_i);
					if (((!_71621_f->_field_cpp_linked) && (_71621_f->_field_token._field_id != 0LLU))) {
						_71213_obj+=(_10f7d1d90_gen_fn(_71621_f) + jule::Str("\n\n", 2));
					}
				}
				_iter_next_4717282256:;
				(_71417_i)++;
				goto _iter_begin_4717282256;
				_iter_end_4717282256:;
			}
			_iter_next_4717279168:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10f7d1d90_f = *__julec_range_begin; goto _iter_begin_4717279168; }
			_iter_end_4717279168:;
		}
	}
	return _71213_obj;
}



inline jule::Str _10f7d1d90_gen_struct_method_defs(jule::Ref<_10e3fc8f0_StructIns> _72631_s) {
	jule::Str _72713_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _72631_s->_field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e56a140_Fn> _10f7d1d90_f{jule::Ref<_10e56a140_Fn>()};_10f7d1d90_f = *__julec_range_begin;
			_iter_begin_4717290848:;
			{
				_72713_obj+=_10f7d1d90_indent();
				_72713_obj+=_10f7d1d90_gen_fn(_10f7d1d90_f);
				_72713_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_4717290848:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10f7d1d90_f = *__julec_range_begin; goto _iter_begin_4717290848; }
			_iter_end_4717290848:;
		}
	}
	return _72713_obj;
}



inline jule::Str _10f7d1d90_gen_struct_ostream(jule::Ref<_10e3fc8f0_StructIns> _73727_s) {
	jule::Str _73813_obj = jule::Str("", 0);
	_73813_obj+=_10f7d1d90_indent();
	_73813_obj+=jule::Str("std::ostream &operator<<(std::ostream &_Stream, const ", 54);
	_73813_obj+=_10eb3a1d0_struct_ins_out_ident(_73727_s);
	_73813_obj+=jule::Str(" &_Src) {\n", 10);
	_10f7d1d90_add_indent();
	_73813_obj+=_10f7d1d90_indent();
	_73813_obj+=jule::Str("_Stream << \"", 12);
	_73813_obj+=_73727_s->_field_decl->_field_ident;
	_73813_obj+=jule::Str("{\";\n", 4);
	{
		auto &__julec_range_expr = _73727_s->_field_fields;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _10f7d1d90_i{jule::Int()};_10f7d1d90_i = 0;
			jule::Ref<_10e3fc8f0_FieldIns> _10f7d1d90_f{jule::Ref<_10e3fc8f0_FieldIns>()};_10f7d1d90_f = *__julec_range_begin;
			_iter_begin_4717302016:;
			{
				_73813_obj+=_10f7d1d90_indent();
				_73813_obj+=jule::Str("_Stream << \"", 12);
				_73813_obj+=_10f7d1d90_f->_field_decl->_field_ident;
				_73813_obj+=jule::Str(":", 1);
				jule::Ref<_10e3fc8f0_StructIns> _75613_strct = _10f7d1d90_f->_field_kind->_method_strct();
				if (((jule::real(_75613_strct) && jule::real(_75613_strct->_field_decl)) && _75613_strct->_field_decl->_field_cpp_linked)) {
					_73813_obj+=((jule::Str(" cpp.", 5) + _10eb3a1d0_field_out_ident(_10f7d1d90_f->_field_decl)) + jule::Str("\"", 1));
				} else {
					_73813_obj+=jule::Str("\" << _Src.", 10);
					_73813_obj+=_10eb3a1d0_field_out_ident(_10f7d1d90_f->_field_decl);
				}
				if (((_10f7d1d90_i + 1LL) < static_cast<jule::I64>(_73727_s->_field_fields.len()))) {
					_73813_obj+=jule::Str(" << \", \"", 8);
				}
				_73813_obj+=jule::Str(";\n", 2);
			}
			_iter_next_4717302016:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_10f7d1d90_i; _10f7d1d90_f = *__julec_range_begin; goto _iter_begin_4717302016; }
			_iter_end_4717302016:;
		}
	}
	_73813_obj+=_10f7d1d90_indent();
	_73813_obj+=jule::Str("_Stream << \"}\";\n", 16);
	_73813_obj+=_10f7d1d90_indent();
	_73813_obj+=jule::Str("return _Stream;\n", 16);
	_10f7d1d90_done_indent();
	_73813_obj+=_10f7d1d90_indent();
	_73813_obj+=jule::Str("}", 1);
	return _73813_obj;
}



inline jule::Str _10f7d1d90_gen_struct_derive_defs(jule::Ref<_10e3fc8f0_StructIns> _77931_s) {
	jule::Str _78013_obj = jule::Str("", 0);
	if (_77931_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))) {
		_78013_obj+=_10f7d1d90_indent();
		_78013_obj+=_10f7a0fa0_get_derive_fn_def_clone(_77931_s->_field_decl);
		_78013_obj+=jule::Str("{\n", 2);
		_10f7d1d90_add_indent();
		_78013_obj+=_10f7d1d90_indent();
		_78013_obj+=_10f7a32c0_gen_struct_kind_ins(_77931_s);
		_78013_obj+=jule::Str(" clone;\n", 8);
		{
			auto &__julec_range_expr = _77931_s->_field_fields;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_10e3fc8f0_FieldIns> _10f7d1d90_f{jule::Ref<_10e3fc8f0_FieldIns>()};_10f7d1d90_f = *__julec_range_begin;
				_iter_begin_4716901968:;
				{
					jule::Str _79117_ident = _10eb3a1d0_field_out_ident(_10f7d1d90_f->_field_decl);
					_78013_obj+=_10f7d1d90_indent();
					_78013_obj+=jule::Str("clone.", 6);
					_78013_obj+=_79117_ident;
					_78013_obj+=jule::Str(" = jule::clone(this->", 21);
					_78013_obj+=_79117_ident;
					_78013_obj+=jule::Str(");\n", 3);
				}
				_iter_next_4716901968:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _10f7d1d90_f = *__julec_range_begin; goto _iter_begin_4716901968; }
				_iter_end_4716901968:;
			}
		}
		_78013_obj+=_10f7d1d90_indent();
		_78013_obj+=jule::Str("return clone;\n", 14);
		_10f7d1d90_done_indent();
		_78013_obj+=_10f7d1d90_indent();
		_78013_obj+=jule::Str("}", 1);
	}
	return _78013_obj;
}



inline jule::Str _10f7d1d90_gen_struct_ins(jule::Ref<_10e3fc8f0_StructIns> _81123_s) {
	jule::Str _81213_obj = _10f7d1d90_gen_struct_method_defs(_81123_s);
	_81213_obj+=jule::Str("\n\n", 2);
	_81213_obj+=_10f7d1d90_gen_struct_derive_defs(_81123_s);
	_81213_obj+=jule::Str("\n\n", 2);
	_81213_obj+=_10f7d1d90_gen_struct_ostream(_81123_s);
	return _81213_obj;
}



inline jule::Str _10f7d1d90_gen_struct(jule::Ref<_10e3fc8f0_Struct> _82119_s) {
	jule::Str _82213_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _82119_s->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e3fc8f0_StructIns> _10f7d1d90_ins{jule::Ref<_10e3fc8f0_StructIns>()};_10f7d1d90_ins = *__julec_range_begin;
			_iter_begin_4717341680:;
			{
				_82213_obj+=(_10f7d1d90_gen_struct_ins(_10f7d1d90_ins) + jule::Str("\n\n", 2));
			}
			_iter_next_4717341680:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10f7d1d90_ins = *__julec_range_begin; goto _iter_begin_4717341680; }
			_iter_end_4717341680:;
		}
	}
	return _82213_obj;
}



inline jule::Str _10f7d1d90_gen_structs(jule::Slice<jule::Ref<_10e3fc8f0_Struct>> _83020_structs) {
	jule::Str _83113_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _83020_structs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e3fc8f0_Struct> _10f7d1d90_s{jule::Ref<_10e3fc8f0_Struct>()};_10f7d1d90_s = *__julec_range_begin;
			_iter_begin_4717346608:;
			{
				if (((!_10f7d1d90_s->_field_cpp_linked) && (_10f7d1d90_s->_field_token._field_id != 0LLU))) {
					_83113_obj+=_10f7d1d90_gen_struct(_10f7d1d90_s);
					_83113_obj+=jule::Str("\n\n", 2);
				}
			}
			_iter_next_4717346608:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10f7d1d90_s = *__julec_range_begin; goto _iter_begin_4717346608; }
			_iter_end_4717346608:;
		}
	}
	return _83113_obj;
}



inline jule::Str _10f7d1d90_gen_fns(jule::Ref<_12ce09d10_IR> _84216_ir) {
	jule::Str _84313_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _84216_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e9b6a10_ImportInfo> _10f7d1d90_u{jule::Ref<_10e9b6a10_ImportInfo>()};_10f7d1d90_u = *__julec_range_begin;
			_iter_begin_4717353040:;
			{
				if ((!_10f7d1d90_u->_field_cpp_linked)) {
					_84313_obj+=_10f7d1d90_gen_pkg_fns(_10f7d1d90_u->_field_package);
				}
			}
			_iter_next_4717353040:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10f7d1d90_u = *__julec_range_begin; goto _iter_begin_4717353040; }
			_iter_end_4717353040:;
		}
	}
	_84313_obj+=_10f7d1d90_gen_pkg_fns(_84216_ir->_field_main);
	return _84313_obj;
}



inline jule::Str _10f7d1d90_gen_init_caller(jule::Ref<_12ce09d10_IR> _85624_ir) {
	
	jule::Str _85913_obj = jule::Str("void ", 5);
	_85913_obj+=jule::Str("__jule_call_initializers", 24);
	_85913_obj+=jule::Str("(void) {", 8);
	jule::Fn<void(jule::Ref<_10e9b6a10_Package>)> _8639_push_init = jule::Fn<void(jule::Ref<_10e9b6a10_Package>)>([&](jule::Ref<_10e9b6a10_Package> _86328_pkg) mutable -> void {
		
		jule::Ref<_10e56a140_Fn> _86513_f = _86328_pkg->_method_find_fn(jule::Str("init", 4),false);
		if ((!jule::real(_86513_f))) {
			return;
		}
		_85913_obj+=((jule::Str("\n\t", 2) + _10eb3a1d0_fn_out_ident(_86513_f)) + jule::Str("();", 3));
	});
	{
		auto &__julec_range_expr = _85624_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e9b6a10_ImportInfo> _10f7d1d90_u{jule::Ref<_10e9b6a10_ImportInfo>()};_10f7d1d90_u = *__julec_range_begin;
			_iter_begin_4717371168:;
			{
				if ((!_10f7d1d90_u->_field_cpp_linked)) {
					_8639_push_init(_10f7d1d90_u->_field_package);
				}
			}
			_iter_next_4717371168:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10f7d1d90_u = *__julec_range_begin; goto _iter_begin_4717371168; }
			_iter_end_4717371168:;
		}
	}
	_8639_push_init(_85624_ir->_field_main);
	_85913_obj+=jule::Str("\n}", 2);
	return _85913_obj;
}



inline void _10f7d1d90_append_standard(jule::Str* _88435_obj_code,jule::Str _88451_compiler,jule::Str _88466_compiler_cmd) {
	struct JuleCompileTime _8859_time = time_now();
	jule::Str _88713_time_str = jule::Str("", 0);
	_88713_time_str+=_10daf8c40_itoa(_8859_time.day);
	_88713_time_str+=jule::Str("/", 1);
	_88713_time_str+=_10daf8c40_itoa(_8859_time.month);
	_88713_time_str+=jule::Str("/", 1);
	_88713_time_str+=_10daf8c40_itoa(_8859_time.year);
	_88713_time_str+=jule::Str(" ", 1);
	_88713_time_str+=_10daf8c40_itoa(_8859_time.hour);
	_88713_time_str+=jule::Str(".", 1);
	_88713_time_str+=_10daf8c40_itoa(_8859_time.minute);
	_88713_time_str+=jule::Str(" (DD/MM/YYYY) (HH.MM)", 21);
	jule::Str _89913_s = jule::Str("", 0);
	_89913_s+=jule::Str("// Auto generated by JuleC.\n", 28);
	_89913_s+=jule::Str("// JuleC version: ", 18);
	_89913_s+=jule::Str("beta 0.0.3 @master", 18);
	_89913_s+=jule::Str("\n", 1);
	_89913_s+=jule::Str("// Date: ", 9);
	_89913_s+=_88713_time_str;
	_89913_s+=jule::Str("\n//\n// Recommended Compile Command;\n// ", 39);
	_89913_s+=_88451_compiler;
	_89913_s+=jule::Str(" ", 1);
	_89913_s+=_88466_compiler_cmd;
	_89913_s+=jule::Str("\n\n#include \"", 12);
	_89913_s+=_13cfea710_PATH_API;
	_89913_s+=jule::Str("\"\n\n", 3);
	_89913_s+=(*_88435_obj_code);
	_89913_s+=jule::Str("\nint main(int argc, char *argv[], char *envp[]) {\n\tstd::set_terminate(&jule::terminate_handler);\n\tjule::set_sig_handler(jule::signal_handler);\n\tjule::setup_command_line_args(argc, argv);\n\tjule::setup_environment_variables(envp);\n\n\t__jule_call_initializers();\n\tentry_point();\n\n\treturn EXIT_SUCCESS;\n}", 299);
	(*_88435_obj_code)=_89913_s;
}



inline jule::Str _10f7d1d90_gen(jule::Ref<_12ce09d10_IR> _93316_ir) {
	jule::Ref<_10f7d1d90_OrderedDecls> _93413_od = jule::new_struct<_10f7d1d90_OrderedDecls>(new( std::nothrow ) _10f7d1d90_OrderedDecls());
	_93413_od->_field_structs=_93316_ir->_method_get_all_structures();
	_10f7a37c0_order_structures(_93413_od->_field_structs);
	_93413_od->_field_globals=_93316_ir->_method_get_all_variables();
	_10f7a37c0_order_variables(_93413_od->_field_globals);
	jule::Str _94113_obj = jule::Str("", 0);
	_94113_obj+=(_10f7d1d90_gen_links(_93316_ir) + jule::Str("\n", 1));
	_94113_obj+=(_10f7d1d90_gen_prototypes(_93316_ir,_93413_od->_field_structs) + jule::Str("\n\n", 2));
	_94113_obj+=(_10f7d1d90_gen_globals(_93413_od->_field_globals) + jule::Str("\n", 1));
	_94113_obj+=_10f7d1d90_gen_structs(_93413_od->_field_structs);
	_94113_obj+=(_10f7d1d90_gen_fns(_93316_ir) + jule::Str("\n", 1));
	_94113_obj+=(_10f7d1d90_gen_init_caller(_93316_ir) + jule::Str("\n", 1));
	return _94113_obj;
}



inline jule::Bool _10f7a37c0_is_struct_ordered(jule::Slice<jule::Ref<_10e3fc8f0_Struct>> _822_structs,jule::Ref<_10e3fc8f0_Struct> _842_s) {
	{
		auto &__julec_range_expr = _842_s->_field_depends;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e3fc8f0_Struct> _10f7a37c0_d{jule::Ref<_10e3fc8f0_Struct>()};_10f7a37c0_d = *__julec_range_begin;
			_iter_begin_4717416208:;
			{
				{
					auto &__julec_range_expr = _822_structs;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_10e3fc8f0_Struct> _10f7a37c0_ss{jule::Ref<_10e3fc8f0_Struct>()};_10f7a37c0_ss = *__julec_range_begin;
						_iter_begin_4717418544:;
						{
							if (((_10f7a37c0_ss).alloc == (_842_s).alloc)) {
								return false;
							} else if (((_10f7a37c0_ss).alloc == (_10f7a37c0_d).alloc)) {
								goto _iter_end_4717418544;
							}
						}
						_iter_next_4717418544:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _10f7a37c0_ss = *__julec_range_begin; goto _iter_begin_4717418544; }
						_iter_end_4717418544:;
					}
				}
			}
			_iter_next_4717416208:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10f7a37c0_d = *__julec_range_begin; goto _iter_begin_4717416208; }
			_iter_end_4717416208:;
		}
	}
	return true;
}



inline void _10f7a37c0_order_structures(jule::Slice<jule::Ref<_10e3fc8f0_Struct>> _2425_structs) {
	jule::I64 _259_n = static_cast<jule::I64>(_2425_structs.len());
	jule::Int _2613_i = 0LL;
	_iter_begin_4717423840:;
	if (!((_2613_i < _259_n))) { goto _iter_end_4717423840; }
	{
		jule::Bool _2817_swapped = false;
		jule::Int _3017_j = 0LL;
		_iter_begin_4717427600:;
		if (!((_3017_j < ((_259_n - _2613_i) - 1LL)))) { goto _iter_end_4717427600; }
		{
			if ((static_cast<jule::I64>(_2425_structs[static_cast<jule::Int>(_3017_j)]->_field_depends.len()) > 1LL)) {
				std::tie(_2425_structs[static_cast<jule::Int>(_3017_j)],_2425_structs[static_cast<jule::Int>((_3017_j + 1LL))]) = std::make_tuple(_2425_structs[static_cast<jule::Int>((_3017_j + 1LL))],_2425_structs[static_cast<jule::Int>(_3017_j)]);
				_2817_swapped=true;
			}
		}
		_iter_next_4717427600:;
		(_3017_j)++;
		goto _iter_begin_4717427600;
		_iter_end_4717427600:;
		if ((!_2817_swapped)) {
			goto _iter_end_4717423840;
		}
	}
	_iter_next_4717423840:;
	(_2613_i)++;
	goto _iter_begin_4717423840;
	_iter_end_4717423840:;
	_2613_i=0LL;
	_iter_begin_4717428096:;
	if (!((_2613_i < _259_n))) { goto _iter_end_4717428096; }
	{
		jule::Bool _4517_swapped = false;
		jule::Int _4717_j = 0LL;
		_iter_begin_4717440304:;
		if (!((_4717_j < ((_259_n - _2613_i) - 1LL)))) { goto _iter_end_4717440304; }
		{
			if ((!_10f7a37c0_is_struct_ordered(_2425_structs,_2425_structs[static_cast<jule::Int>(_4717_j)]))) {
				std::tie(_2425_structs[static_cast<jule::Int>(_4717_j)],_2425_structs[static_cast<jule::Int>((_4717_j + 1LL))]) = std::make_tuple(_2425_structs[static_cast<jule::Int>((_4717_j + 1LL))],_2425_structs[static_cast<jule::Int>(_4717_j)]);
				_4517_swapped=true;
			}
		}
		_iter_next_4717440304:;
		(_4717_j)++;
		goto _iter_begin_4717440304;
		_iter_end_4717440304:;
		if ((!_4517_swapped)) {
			goto _iter_end_4717428096;
		}
	}
	_iter_next_4717428096:;
	(_2613_i)++;
	goto _iter_begin_4717428096;
	_iter_end_4717428096:;
}



inline jule::Bool _10f7a37c0_is_var_ordered(jule::Slice<jule::Ref<_10ebc2ad0_Var>> _6219_vars,jule::Ref<_10ebc2ad0_Var> _6233_v) {
	{
		auto &__julec_range_expr = _6233_v->_field_depends;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10ebc2ad0_Var> _10f7a37c0_d{jule::Ref<_10ebc2ad0_Var>()};_10f7a37c0_d = *__julec_range_begin;
			_iter_begin_4717450448:;
			{
				{
					auto &__julec_range_expr = _6219_vars;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_10ebc2ad0_Var> _10f7a37c0_vv{jule::Ref<_10ebc2ad0_Var>()};_10f7a37c0_vv = *__julec_range_begin;
						_iter_begin_4717452784:;
						{
							if (((_10f7a37c0_vv).alloc == (_6233_v).alloc)) {
								return false;
							} else if (((_10f7a37c0_vv).alloc == (_10f7a37c0_d).alloc)) {
								goto _iter_end_4717452784;
							}
						}
						_iter_next_4717452784:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _10f7a37c0_vv = *__julec_range_begin; goto _iter_begin_4717452784; }
						_iter_end_4717452784:;
					}
				}
			}
			_iter_next_4717450448:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _10f7a37c0_d = *__julec_range_begin; goto _iter_begin_4717450448; }
			_iter_end_4717450448:;
		}
	}
	return true;
}



inline void _10f7a37c0_order_variables(jule::Slice<jule::Ref<_10ebc2ad0_Var>> _7824_vars) {
	jule::I64 _799_n = static_cast<jule::I64>(_7824_vars.len());
	jule::Int _8013_i = 0LL;
	_iter_begin_4717458080:;
	if (!((_8013_i < _799_n))) { goto _iter_end_4717458080; }
	{
		jule::Bool _8217_swapped = false;
		jule::Int _8417_j = 0LL;
		_iter_begin_4717461840:;
		if (!((_8417_j < ((_799_n - _8013_i) - 1LL)))) { goto _iter_end_4717461840; }
		{
			if ((!_10f7a37c0_is_var_ordered(_7824_vars,_7824_vars[static_cast<jule::Int>(_8417_j)]))) {
				std::tie(_7824_vars[static_cast<jule::Int>(_8417_j)],_7824_vars[static_cast<jule::Int>((_8417_j + 1LL))]) = std::make_tuple(_7824_vars[static_cast<jule::Int>((_8417_j + 1LL))],_7824_vars[static_cast<jule::Int>(_8417_j)]);
				_8217_swapped=true;
			}
		}
		_iter_next_4717461840:;
		(_8417_j)++;
		goto _iter_begin_4717461840;
		_iter_end_4717461840:;
		if ((!_8217_swapped)) {
			goto _iter_end_4717458080;
		}
	}
	_iter_next_4717458080:;
	(_8013_i)++;
	goto _iter_begin_4717458080;
	_iter_end_4717458080:;
}



inline jule::Str _13ce08d20_str_repeat(jule::Str _8015_sub,jule::Int _8029_n) {
	if ((_8029_n == 0LL)) {
		return jule::Str("", 0);
	}
	jule::Str _8513_s = jule::Str("", 0);
	_iter_begin_4714627152:;
	if (!((_8029_n > 0LL))) { goto _iter_end_4714627152; }
	{
		_8513_s+=_8015_sub;
	}
	_iter_next_4714627152:;
	(_8029_n)--;
	goto _iter_begin_4714627152;
	_iter_end_4714627152:;
	return _8513_s;
}



inline void _13ce08d20_print_error_message(jule::Str _9224_msg) {
	jule::outln(_9224_msg);
}



inline void _13ce08d20_help(void) {
	if ((static_cast<jule::I64>(_10cf1adb0_ARGS.len()) > 2LL)) {
		_13ce08d20_print_error_message((jule::Str("invalid command: ", 17) + _10cf1adb0_ARGS[static_cast<jule::Int>(2LL)]));
		return;
	}
	jule::I64 _10013_max = static_cast<jule::I64>(_13ce08d20_HELP_MAP[static_cast<jule::Int>(0LL)][static_cast<jule::Int>(0LL)].len());
	{
		auto &__julec_range_expr = _13ce08d20_HELP_MAP;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Array<jule::Str,2> _13ce08d20_k{jule::Array<jule::Str,2>()};_13ce08d20_k = *__julec_range_begin;
			_iter_begin_4714638528:;
			{
				jule::I64 _10213_n = static_cast<jule::I64>(_13ce08d20_k[static_cast<jule::Int>(0LL)].len());
				if ((_10213_n > _10013_max)) {
					_10013_max=_10213_n;
				}
			}
			_iter_next_4714638528:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13ce08d20_k = *__julec_range_begin; goto _iter_begin_4714638528; }
			_iter_end_4714638528:;
		}
	}
	jule::Str _10813_s = jule::Str("", 0);
	
	{
		auto &__julec_range_expr = _13ce08d20_HELP_MAP;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _13ce08d20_i{jule::Int()};_13ce08d20_i = 0;
			jule::Array<jule::Str,2> _13ce08d20_part{jule::Array<jule::Str,2>()};_13ce08d20_part = *__julec_range_begin;
			_iter_begin_4714645184:;
			{
				_10813_s+=_13ce08d20_part[static_cast<jule::Int>(0LL)];
				_10813_s+=_13ce08d20_str_repeat(jule::Str(" ", 1),((_10013_max - static_cast<jule::I64>(_13ce08d20_part[static_cast<jule::Int>(0LL)].len())) + 5LL));
				_10813_s+=_13ce08d20_part[static_cast<jule::Int>(1LL)];
				if (((_13ce08d20_i + 1LL) < 3LL)) {
					_10813_s+=jule::Str("\n", 1);
				}
			}
			_iter_next_4714645184:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_13ce08d20_i; _13ce08d20_part = *__julec_range_begin; goto _iter_begin_4714645184; }
			_iter_end_4714645184:;
		}
	}
	jule::outln(_10813_s);
}



inline void _13ce08d20_version(void) {
	if ((static_cast<jule::I64>(_10cf1adb0_ARGS.len()) > 2LL)) {
		_13ce08d20_print_error_message((jule::Str("invalid command: ", 17) + _10cf1adb0_ARGS[static_cast<jule::Int>(2LL)]));
		return;
	}
	jule::out(jule::Str("julec version ", 14));
	jule::outln(jule::Str("beta 0.0.3 @master", 18));
}



inline void _13ce08d20_tool_distos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	{
		auto &__julec_range_expr = _13cfdfa50_DISTOS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _13ce08d20_os{jule::Str("windows", 7)};_13ce08d20_os = *__julec_range_begin;
			_iter_begin_4714658448:;
			{
				jule::out(_13ce08d20_os);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_4714658448:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13ce08d20_os = *__julec_range_begin; goto _iter_begin_4714658448; }
			_iter_end_4714658448:;
		}
	}
	jule::outln(jule::Str("", 0));
}



inline void _13ce08d20_tool_distarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	{
		auto &__julec_range_expr = _13cfdfa50_DISTARCH;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _13ce08d20_arch{jule::Str("i386", 4)};_13ce08d20_arch = *__julec_range_begin;
			_iter_begin_4714664912:;
			{
				jule::out(_13ce08d20_arch);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_4714664912:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13ce08d20_arch = *__julec_range_begin; goto _iter_begin_4714664912; }
			_iter_end_4714664912:;
		}
	}
	jule::outln(jule::Str("", 0));
}



inline void _13ce08d20_tool(void) {
	if ((static_cast<jule::I64>(_10cf1adb0_ARGS.len()) == 2LL)) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;
	} else if ((static_cast<jule::I64>(_10cf1adb0_ARGS.len()) > 3LL)) {
		_13ce08d20_print_error_message((jule::Str("invalid command: ", 17) + _10cf1adb0_ARGS[static_cast<jule::Int>(3LL)]));
		return;
	}
	jule::Str _1599_cmd = _10cf1adb0_ARGS[static_cast<jule::Int>(2LL)];
	{
		auto _match_expr{ _1599_cmd };
		if (!(jule::Str("distos", 6) == _match_expr)) { goto _case_end_4714676448; }
		_case_begin_4714676448:;
		{
			_13ce08d20_tool_distos();
		}
		goto _match_end_4714675664;
		_case_end_4714676448:;
		if (!(jule::Str("distarch", 8) == _match_expr)) { goto _case_end_4714676560; }
		_case_begin_4714676560:;
		{
			_13ce08d20_tool_distarch();
		}
		goto _match_end_4714675664;
		_case_end_4714676560:;
		_case_begin_4714670208:;
		{
			_13ce08d20_print_error_message((jule::Str("Undefined command: ", 19) + _1599_cmd));
		}
		goto _match_end_4714675664;
		_case_end_4714670208:;
		_match_end_4714675664:;
	}
}



inline jule::Bool _13ce08d20_process_command(void) {
	{
		auto _match_expr{ _10cf1adb0_ARGS[static_cast<jule::Int>(1LL)] };
		if (!(jule::Str("help", 4) == _match_expr)) { goto _case_end_4714681952; }
		_case_begin_4714681952:;
		{
			_13ce08d20_help();
		}
		goto _match_end_4714675520;
		_case_end_4714681952:;
		if (!(jule::Str("version", 7) == _match_expr)) { goto _case_end_4714682064; }
		_case_begin_4714682064:;
		{
			_13ce08d20_version();
		}
		goto _match_end_4714675520;
		_case_end_4714682064:;
		if (!(jule::Str("tool", 4) == _match_expr)) { goto _case_end_4714681056; }
		_case_begin_4714681056:;
		{
			_13ce08d20_tool();
		}
		goto _match_end_4714675520;
		_case_end_4714681056:;
		_case_begin_4714680752:;
		{
			return false;
		}
		goto _match_end_4714675520;
		_case_end_4714680752:;
		_match_end_4714675520:;
	}
	return true;
}



inline void _13ce08d20_init(void) {
	if ((static_cast<jule::I64>(_10cf1adb0_ARGS.len()) < 2LL)) {
		_10cf1adb0_exit(0LL);
	}
	if (false) {
		_13ce08d20_COMPILER=jule::Str("gcc", 3);
		_13ce08d20_COMPILER_PATH=jule::Str("g++", 3);
	} else {
		_13ce08d20_COMPILER=jule::Str("clang", 5);
		_13ce08d20_COMPILER_PATH=jule::Str("clang++", 7);
	}
	if (_13ce08d20_process_command()) {
		_10cf1adb0_exit(0LL);
	}
}



inline std::tuple<jule::Str,jule::Str> _13ce08d20_get_option(jule::Slice<jule::Str> _19922_args,jule::Int* _19939_i) {
	jule::Str _19960_content{jule::Str()};
	jule::Str _19950_arg{jule::Str()};
	_iter_begin_4714694864:;
	if (!(((*_19939_i) < static_cast<jule::I64>(_19922_args.len())))) { goto _iter_end_4714694864; }
	{
		_19950_arg=_19922_args[static_cast<jule::Int>((*_19939_i))];
		jule::Int _20217_j = 0LL;
		jule::Slice<jule::I32> _20317_runes = static_cast<jule::Slice<jule::I32>>(_19950_arg);
		jule::I32 _20417_r = _20317_runes[static_cast<jule::Int>(_20217_j)];
		if ((_20417_r != '-')) {
			_19960_content+=_19950_arg;
			_19950_arg=jule::Str("", 0);
			goto _iter_next_4714694864;
		}
		(_20217_j)++;
		if ((_20217_j >= static_cast<jule::I64>(_20317_runes.len()))) {
			_13ce08d20_exit_err((jule::Str("undefined syntax: ", 18) + _19950_arg));
		}
		_20417_r=_20317_runes[static_cast<jule::Int>(_20217_j)];
		if ((_20417_r == '-')) {
			(_20217_j)++;
			if ((_20217_j >= static_cast<jule::I64>(_20317_runes.len()))) {
				_13ce08d20_exit_err((jule::Str("undefined syntax: ", 18) + _19950_arg));
			}
			_20417_r=_20317_runes[static_cast<jule::Int>(_20217_j)];
		}
		if ((!_11ce22a00_is_ident_rune(static_cast<jule::Str>(_20417_r)))) {
			_13ce08d20_exit_err((jule::Str("undefined syntax: ", 18) + _19950_arg));
		}
		(_20217_j)++;
		_iter_begin_4714708848:;
		if (!((_20217_j < static_cast<jule::I64>(_20317_runes.len())))) { goto _iter_end_4714708848; }
		{
			_20417_r=_20317_runes[static_cast<jule::Int>(_20217_j)];
			if ((((((!_11ce22a00_is_space(_20417_r)) && (!_11ce22a00_is_letter(_20417_r))) && (!_11ce22a00_is_decimal(static_cast<jule::U8>(_20417_r)))) && (_20417_r != '_')) && (_20417_r != '-'))) {
				_13ce08d20_exit_err((jule::Str("undefined syntax: ", 18) + static_cast<jule::Str>(_20317_runes.slice(static_cast<jule::Int>(_20217_j)))));
			}
		}
		_iter_next_4714708848:;
		(_20217_j)++;
		goto _iter_begin_4714708848;
		_iter_end_4714708848:;
		goto _iter_end_4714694864;
	}
	_iter_next_4714694864:;
	((*_19939_i))++;
	goto _iter_begin_4714694864;
	_iter_end_4714694864:;
	return std::make_tuple(_19950_arg,_19960_content);
}



inline jule::Str _13ce08d20_get_option_value(jule::Slice<jule::Str> _24328_args,jule::Int* _24345_i) {
	((*_24345_i))++;
	if (((*_24345_i) < static_cast<jule::I64>(_24328_args.len()))) {
		jule::Str _24613_arg = _24328_args[static_cast<jule::Int>((*_24345_i))];
		return _24613_arg;
	}
	return jule::Str("", 0);
}



inline void _13ce08d20_parse_out_option(jule::Slice<jule::Str> _25228_args,jule::Int* _25245_i) {
	jule::Str _2539_value = _13ce08d20_get_option_value(_25228_args,_25245_i);
	if ((_2539_value == jule::Str("", 0))) {
		_13ce08d20_exit_err(jule::Str("missing option value: -o --out", 30));
	}
	_13ce08d20_OUT=_2539_value;
}



inline void _13ce08d20_parse_opt_option(jule::Slice<jule::Str> _26028_args,jule::Int* _26045_i) {
	jule::Str _2619_value = _13ce08d20_get_option_value(_26028_args,_26045_i);
	if ((_2619_value == jule::Str("", 0))) {
		_13ce08d20_exit_err(jule::Str("missing option value: --opt", 27));
	}
	{
		auto _match_expr{ _2619_value };
		if (!(jule::Str("L0", 2) == _match_expr)) { goto _case_end_4714743088; }
		_case_begin_4714743088:;
		{
			_12ce1e490_push_opt_level(0LLU);
		}
		goto _match_end_4714741888;
		_case_end_4714743088:;
		if (!(jule::Str("L1", 2) == _match_expr)) { goto _case_end_4714743200; }
		_case_begin_4714743200:;
		{
			_12ce1e490_push_opt_level(1LLU);
		}
		goto _match_end_4714741888;
		_case_end_4714743200:;
		_case_begin_4714739696:;
		{
			_13ce08d20_exit_err((jule::Str("invalid optimization level: ", 28) + _2619_value));
		}
		goto _match_end_4714741888;
		_case_end_4714739696:;
		_match_end_4714741888:;
	}
}



inline void _13ce08d20_check_target_arch(jule::Str _27322_arch) {
	{
		auto &__julec_range_expr = _13cfdfa50_DISTARCH;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _13ce08d20_distarch{jule::Str("i386", 4)};_13ce08d20_distarch = *__julec_range_begin;
			_iter_begin_4714746464:;
			{
				if ((_27322_arch == _13ce08d20_distarch)) {
					return;
				}
			}
			_iter_next_4714746464:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13ce08d20_distarch = *__julec_range_begin; goto _iter_begin_4714746464; }
			_iter_end_4714746464:;
		}
	}
	_13ce08d20_exit_err((jule::Str("unsupported/undefined architecture: ", 36) + _27322_arch));
}



inline void _13ce08d20_check_target_os(jule::Str _28320_os) {
	{
		auto &__julec_range_expr = _13cfdfa50_DISTOS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _13ce08d20_distos{jule::Str("windows", 7)};_13ce08d20_distos = *__julec_range_begin;
			_iter_begin_4714737728:;
			{
				if ((_28320_os == _13ce08d20_distos)) {
					return;
				}
			}
			_iter_next_4714737728:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13ce08d20_distos = *__julec_range_begin; goto _iter_begin_4714737728; }
			_iter_end_4714737728:;
		}
	}
	_13ce08d20_exit_err((jule::Str("unsupported/undefined operating system: ", 40) + _28320_os));
}



inline void _13ce08d20_parse_target_option(jule::Slice<jule::Str> _29331_args,jule::Int* _29348_i) {
	jule::Str _2949_value = _13ce08d20_get_option_value(_29331_args,_29348_i);
	if ((_2949_value == jule::Str("", 0))) {
		_13ce08d20_exit_err(jule::Str("missing option value: --target", 30));
	}
	jule::Slice<jule::Str> _2999_parts = _2949_value.split(jule::Str("-", 1),-1LL);
	if ((static_cast<jule::I64>(_2999_parts.len()) != 2LL)) {
		_13ce08d20_exit_err((jule::Str("undefined platform target format: ", 34) + _2949_value));
	}
	jule::Str _30410_os = _2999_parts[static_cast<jule::Int>(0LL)];
	jule::Str _30414_arch = _2999_parts[static_cast<jule::Int>(1LL)];
	std::tie(_30410_os,_30414_arch) = std::make_tuple(_2999_parts[static_cast<jule::Int>(0LL)],_2999_parts[static_cast<jule::Int>(1LL)]);
	if ((_30410_os != jule::Str("native", 6))) {
		_13ce08d20_check_target_os(_30410_os);
		_13cfea710_OS=_30410_os;
	}
	if ((_30414_arch != jule::Str("native", 6))) {
		_13ce08d20_check_target_arch(_30414_arch);
		_13cfea710_ARCH=_30414_arch;
	}
}



inline void _13ce08d20_parse_compiler_option(jule::Slice<jule::Str> _31733_args,jule::Int* _31750_i) {
	jule::Str _3189_value = _13ce08d20_get_option_value(_31733_args,_31750_i);
	{
		auto _match_expr{ _3189_value };
		if (!(jule::Str("", 0) == _match_expr)) { goto _case_end_4714777280; }
		_case_begin_4714777280:;
		{
			_13ce08d20_exit_err(jule::Str("missing option value: --compiler", 32));
		}
		goto _match_end_4714775856;
		_case_end_4714777280:;
		if (!(jule::Str("clang", 5) == _match_expr)) { goto _case_end_4714777392; }
		_case_begin_4714777392:;
		{
			_13ce08d20_COMPILER=jule::Str("clang", 5);
			_13ce08d20_COMPILER_PATH=jule::Str("clang++", 7);
		}
		goto _match_end_4714775856;
		_case_end_4714777392:;
		if (!(jule::Str("gcc", 3) == _match_expr)) { goto _case_end_4714778512; }
		_case_begin_4714778512:;
		{
			_13ce08d20_COMPILER=jule::Str("gcc", 3);
			_13ce08d20_COMPILER_PATH=jule::Str("g++", 3);
		}
		goto _match_end_4714775856;
		_case_end_4714778512:;
		_case_begin_4714776032:;
		{
			_13ce08d20_exit_err((jule::Str("invalid option value for --compiler: ", 37) + _3189_value));
		}
		goto _match_end_4714775856;
		_case_end_4714776032:;
		_match_end_4714775856:;
	}
}



inline jule::Str _13ce08d20_parse_options(jule::Slice<jule::Str> _33618_args) {
	jule::Str _33713_cmd = jule::Str("", 0);
	jule::Int _33813_i = 1LL;
	_iter_begin_4714783744:;
	if (!((_33813_i < static_cast<jule::I64>(_33618_args.len())))) { goto _iter_end_4714783744; }
	{
		jule::Str _34014_arg{};
		jule::Str _34019_content{};
		std::tie(_34014_arg,_34019_content) = _13ce08d20_get_option(_33618_args,(&_33813_i));
		_33713_cmd+=_34019_content;
		{
			auto _match_expr{ _34014_arg };
			if (!(jule::Str("", 0) == _match_expr)) { goto _case_end_4714749680; }
			goto _match_end_4714789168;
			_case_end_4714749680:;
			if (!(jule::Str("-o", 2) == _match_expr || jule::Str("--out", 5) == _match_expr)) { goto _case_end_4714789392; }
			_case_begin_4714789392:;
			{
				{
					_13ce08d20_parse_out_option(_33618_args,(&_33813_i));
				}
			}
			goto _match_end_4714789168;
			_case_end_4714789392:;
			if (!(jule::Str("-t", 2) == _match_expr || jule::Str("--transpile", 11) == _match_expr)) { goto _case_end_4714790128; }
			_case_begin_4714790128:;
			{
				_13ce08d20_MODE=1LLU;
			}
			goto _match_end_4714789168;
			_case_end_4714790128:;
			if (!(jule::Str("-c", 2) == _match_expr || jule::Str("--compile", 9) == _match_expr)) { goto _case_end_4714790240; }
			_case_begin_4714790240:;
			{
				_13ce08d20_MODE=0LLU;
			}
			goto _match_end_4714789168;
			_case_end_4714790240:;
			if (!(jule::Str("--compiler", 10) == _match_expr)) { goto _case_end_4714790352; }
			_case_begin_4714790352:;
			{
				{
					_13ce08d20_parse_compiler_option(_33618_args,(&_33813_i));
				}
			}
			goto _match_end_4714789168;
			_case_end_4714790352:;
			if (!(jule::Str("--opt-copy", 10) == _match_expr)) { goto _case_end_4714792496; }
			_case_begin_4714792496:;
			{
				_12ce1e490_OPTIMIZATIONS=append(_12ce1e490_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-copy", 10)}));
			}
			goto _match_end_4714789168;
			_case_end_4714792496:;
			if (!(jule::Str("--opt-deadcode", 14) == _match_expr)) { goto _case_end_4714792608; }
			_case_begin_4714792608:;
			{
				_12ce1e490_OPTIMIZATIONS=append(_12ce1e490_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-deadcode", 14)}));
			}
			goto _match_end_4714789168;
			_case_end_4714792608:;
			if (!(jule::Str("--opt", 5) == _match_expr)) { goto _case_end_4714792720; }
			_case_begin_4714792720:;
			{
				{
					_13ce08d20_parse_opt_option(_33618_args,(&_33813_i));
				}
			}
			goto _match_end_4714789168;
			_case_end_4714792720:;
			if (!(jule::Str("--target", 8) == _match_expr)) { goto _case_end_4714792832; }
			_case_begin_4714792832:;
			{
				{
					_13ce08d20_parse_target_option(_33618_args,(&_33813_i));
				}
			}
			goto _match_end_4714789168;
			_case_end_4714792832:;
			_case_begin_4714789280:;
			{
				_13ce08d20_exit_err((jule::Str("undefined option: ", 18) + _34014_arg));
			}
			goto _match_end_4714789168;
			_case_end_4714789280:;
			_match_end_4714789168:;
		}
	}
	_iter_next_4714783744:;
	(_33813_i)++;
	goto _iter_begin_4714783744;
	_iter_end_4714783744:;
	_33713_cmd=_33713_cmd.trim(jule::Str(" \t\r\n\v", 5));
	return _33713_cmd;
}



inline void _13ce08d20_write_output(jule::Str _37717_path,jule::Str _37728_content) {
	jule::Str _3789_dir = _12ce95080_dir(_37717_path);
	jule::Int _38017_err{};
	std::tie(std::ignore,_38017_err) = _12ce49290_stat(_3789_dir);
	if ((_38017_err != 0LLU)) {
		jule::Bool _38213_ok = mkdir(_3789_dir);
		if ((!_38213_ok)) {
			_13ce08d20_exit_err(jule::Str("a problem occurs when code generation", 37));
		}
	}
	jule::Ref<_12ce537d0_File> _38814_f{};
	std::tie(_38814_f,_38017_err) = _12ce3e8f0_open(_37717_path,578LL,438LL);
	if ((_38017_err != 0LLU)) {
		_13ce08d20_exit_err(jule::Str("a problem occurs when code generation", 37));
	}
	std::tie(std::ignore,_38017_err) = _38814_f->_method_write(static_cast<jule::Slice<jule::U8>>(_37728_content));
	if ((_38017_err != 0LLU)) {
		_13ce08d20_exit_err(jule::Str("a problem occurs when code generation", 37));
	}
	_38814_f->_method_close();
}



inline void _13ce08d20_clear_objects(void) {
	rmdir(_13ce08d20_OUT_DIR);
}



inline void _13ce08d20_compile_ir(jule::Str _40415_compiler,jule::Str _40430_compiler_cmd) {
	jule::Int _4059_status = static_cast<jule::Int>(system(((_40415_compiler + jule::Str(" ", 1)) + _40430_compiler_cmd)));
	if ((_4059_status != 0LL)) {
		jule::out(jule::Str("external compiler failed with status code: ", 43));
		jule::outln(_4059_status);
		_13ce08d20_exit_err(jule::Str("", 0));
	}
	_13ce08d20_clear_objects();
}



inline void _13ce08d20_do_spell(jule::Str _41513_obj,jule::Str _41523_compiler,jule::Str _41538_compiler_cmd) {
	jule::Str _4169_path = _13ce08d20_get_compile_path();
	_13ce08d20_write_output(_4169_path,_41513_obj);
	{
		auto _match_expr{ _13ce08d20_MODE };
		if (!(0LLU == _match_expr)) { goto _case_end_4714845280; }
		_case_begin_4714845280:;
		{
			_13ce08d20_compile_ir(_41523_compiler,_41538_compiler_cmd);
		}
		goto _match_end_4714845168;
		_case_end_4714845280:;
		_match_end_4714845168:;
	}
}



inline void _13ce08d20_exit_err(jule::Str _42413_msg) {
	jule::outln(_42413_msg);
	_10cf1adb0_exit(1LL);
}



inline void _13ce08d20_check_mode(void) {
	if (((_13ce08d20_MODE != 1LLU) && (_13ce08d20_MODE != 0LLU))) {
		jule::outln(_10d8aeab0_errorf(jule::Str("invalid_value_for_key", 21),jule::Slice<jule::Any>({jule::Any(_13ce08d20_MODE),jule::Any(jule::Str("mode", 4))})));
		_13ce08d20_exit_err(jule::Str("", 0));
	}
}



inline void _13ce08d20_check_compiler(void) {
	if (((_13ce08d20_COMPILER != jule::Str("gcc", 3)) && (_13ce08d20_COMPILER != jule::Str("clang", 5)))) {
		jule::outln(_10d8aeab0_errorf(jule::Str("invalid_value_for_key", 21),jule::Slice<jule::Any>({jule::Any(_13ce08d20_COMPILER),jule::Any(jule::Str("compiler", 8))})));
		_13ce08d20_exit_err(jule::Str("", 0));
	}
}



inline void _13ce08d20_set(void) {
	_13ce08d20_check_mode();
	_13ce08d20_check_compiler();
}



inline void _13ce08d20_print_logs(jule::Slice<_13cfd2d20_Log> _45015_logs) {
	jule::Str _45113_s = jule::Str("", 0);
	{
		auto &__julec_range_expr = _45015_logs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_13cfd2d20_Log _13ce08d20_l{_13cfd2d20_Log()};_13ce08d20_l = *__julec_range_begin;
			_iter_begin_4714861920:;
			{
				_45113_s+=(_13ce08d20_l._method_to_str() + jule::Str("\n", 1));
			}
			_iter_next_4714861920:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13ce08d20_l = *__julec_range_begin; goto _iter_begin_4714861920; }
			_iter_end_4714861920:;
		}
	}
	jule::out(_45113_s);
}



inline jule::Bool _13ce08d20_is_cpp_source_file(jule::Str _45823_path) {
	jule::Int _4599_offset = static_cast<jule::Int>(_45823_path.rfind(jule::Str(".", 1)));
	if ((_4599_offset == -1LL)) {
		return false;
	}
	return _11ce23cb0_is_valid_cpp_ext(_45823_path.slice(static_cast<jule::Int>(_4599_offset)));
}



inline std::tuple<jule::Str,jule::Str> _13ce08d20_gen_compile_cmd(jule::Str _46620_source_path,jule::Ref<_12ce09d10_IR> _46638_ir) {
	jule::Str _4679_compiler = _13ce08d20_COMPILER_PATH;
	
	
	
	jule::Str _47313_cmd = jule::Str("-O0 ", 4);
	_47313_cmd+=jule::Str("-Wno-everything ", 16);
	_47313_cmd+=jule::Str("--std=c++14 ", 12);
	{
		auto &__julec_range_expr = _46638_ir->_field_passes;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _13ce08d20_pass{jule::Str()};_13ce08d20_pass = *__julec_range_begin;
			_iter_begin_4714879344:;
			{
				_47313_cmd+=(_13ce08d20_pass + jule::Str(" ", 1));
			}
			_iter_next_4714879344:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13ce08d20_pass = *__julec_range_begin; goto _iter_begin_4714879344; }
			_iter_end_4714879344:;
		}
	}
	{
		auto &__julec_range_expr = _46638_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_10e9b6a10_ImportInfo> _13ce08d20_u{jule::Ref<_10e9b6a10_ImportInfo>()};_13ce08d20_u = *__julec_range_begin;
			_iter_begin_4714883184:;
			{
				if ((_13ce08d20_u->_field_cpp_linked && _13ce08d20_is_cpp_source_file(_13ce08d20_u->_field_path))) {
					_47313_cmd+=(_13ce08d20_u->_field_path + jule::Str(" ", 1));
				}
			}
			_iter_next_4714883184:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13ce08d20_u = *__julec_range_begin; goto _iter_begin_4714883184; }
			_iter_end_4714883184:;
		}
	}
	if ((_13ce08d20_OUT != jule::Str("", 0))) {
		_47313_cmd+=((jule::Str("-o ", 3) + _13ce08d20_OUT) + jule::Str(" ", 1));
	}
	_47313_cmd+=_46620_source_path;
	return std::make_tuple(_4679_compiler,_47313_cmd);
}



inline jule::Str _13ce08d20_get_compile_path(void) {
	jule::Str _49813_path = _12ce95080_join(jule::Slice<jule::Str>({_13cfea710_PATH_WD,_13ce08d20_OUT_DIR}));
	_49813_path=_12ce95080_join(jule::Slice<jule::Str>({_49813_path,_13ce08d20_OUT_NAME}));
	return _49813_path;
}



inline void _13ce08d20_apply_target_independent_optimizations(jule::Ref<_12ce09d10_IR> _50347_ir) {
	if (_12ce1e490_is_opt_enabled(jule::Str("--opt-deadcode", 14))) {
		_13cf78d70_eliminate_dead_code(_50347_ir);
	}
}



void entry_point(void) {
	jule::Str _5109_path = _13ce08d20_parse_options(_10cf1adb0_ARGS);
	if ((_5109_path == jule::Str("", 0))) {
		_13ce08d20_exit_err(_10d8aeab0_errorf(jule::Str("missing_compile_path", 20),jule::Slice<jule::Any>({})));
	}
	jule::Ref<_12ce6e9e0_Status> _51610_inf{};
	jule::Int _51615_err{};
	std::tie(_51610_inf,_51615_err) = _12ce49290_stat(_13cfea710_PATH_STDLIB);
	if (((_51615_err != 0LLU) || (!_51610_inf->_method_is_dir()))) {
		_13ce08d20_exit_err(_10d8aeab0_errorf(jule::Str("stdlib_not_exist", 16),jule::Slice<jule::Any>({})));
	}
	_13ce08d20_set();
	jule::Ref<_12ce09d10_IR> _52314_ir{};
	jule::Slice<_13cfd2d20_Log> _52318_logs{};
	std::tie(_52314_ir,_52318_logs) = _12ce09d10_build_ir(_5109_path);
	if (((!jule::real(_52314_ir)) && (_52318_logs == nullptr))) {
		_13ce08d20_exit_err(_10d8aeab0_errorf(jule::Str("no_file_in_entry_package", 24),jule::Slice<jule::Any>({jule::Any(_5109_path)})));
	}
	if ((_52318_logs != nullptr)) {
		_13ce08d20_print_logs(_52318_logs);
		_13ce08d20_exit_err(jule::Str("", 0));
	}
	
	jule::Ref<_10e56a140_Fn> _5359_f = _52314_ir->_field_main->_method_find_fn(jule::Str("main", 4),false);
	if ((!jule::real(_5359_f))) {
		_13ce08d20_exit_err(_10d8aeab0_errorf(jule::Str("no_entry_point", 14),jule::Slice<jule::Any>({})));
	}
	_13ce08d20_apply_target_independent_optimizations(_52314_ir);
	jule::Str _54210_compiler{};
	jule::Str _54220_compiler_cmd{};
	std::tie(_54210_compiler,_54220_compiler_cmd) = _13ce08d20_gen_compile_cmd(_13ce08d20_get_compile_path(),_52314_ir);
	jule::Str _54413_obj = _10f7d1d90_gen(_52314_ir);
	{
		_10f7d1d90_append_standard((&_54413_obj),_54210_compiler,_54220_compiler_cmd);
	}
	_13ce08d20_do_spell(_54413_obj,_54210_compiler,_54220_compiler_cmd);
}




void __jule_call_initializers(void) {
	_10cf1adb0_init();
	_13cfea710_init();
	_10f521350_init();
	_10f3f9210_init();
	_13ce08d20_init();
}

int main(int argc, char *argv[], char *envp[]) {
	std::set_terminate(&jule::terminate_handler);
	jule::set_sig_handler(jule::signal_handler);
	jule::setup_command_line_args(argc, argv);
	jule::setup_environment_variables(envp);

	__jule_call_initializers();
	entry_point();

	return EXIT_SUCCESS;
}