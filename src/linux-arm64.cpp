#include "api/jule.hpp"

#include <dirent.h>
#include <fcntl.h>
#include <cstdio>
#include <sys/stat.h>
#include "std/sys/syscall_unix.hpp"
#include "std/env/proc.hpp"
#include "std/process/process.hpp"
#include "src/julec/julec.hpp"
#include "std/vector/alloc.hpp"
#include "std/jule/parser/parser.hpp"
#include "src/julec/obj/cxx/cxx.hpp"

struct _1300a4650_Importer;
struct _1304dc9b0_Kind;
struct _1304dc360_Lookup;
struct _127fba3d0_RangeSetter;

struct _136ec98d0_LazyBuff;


struct _136f888c0_FloatInfo;


struct _136f888c0_DecimalSlice;


struct _126f5c9e0_LeftCheat;


struct _126f5c9e0_Decimal;


struct _136e99d00_Log;


struct _127281550_DirEntry;


struct _1275c8a10_File;


struct _1275e3c20_Status;


struct _1275d1920_accept_range;


struct _127941de0_Token;


struct _127774a70_KindPair;


struct _1275d7180_CommentGroup;


struct _1275d7180_NamespaceTypeDecl;


struct _1275d7180_RefTypeDecl;


struct _1275d7180_SlcTypeDecl;


struct _1275d7180_TupleTypeDecl;


struct _1275d7180_PtrTypeDecl;


struct _1275d7180_ArrTypeDecl;


struct _1275d7180_MapTypeDecl;


struct _1275d7180_RetTypeDecl;


struct _1275d7180_TupleExpr;


struct _1275d7180_LitExpr;


struct _1275d7180_UnsafeExpr;


struct _1275d7180_IdentExpr;


struct _1275d7180_UnaryExpr;


struct _1275d7180_VariadicExpr;


struct _1275d7180_CastExpr;


struct _1275d7180_NsSelectionExpr;


struct _1275d7180_SubIdentExpr;


struct _1275d7180_BinopExpr;


struct _1275d7180_FieldExprPair;


struct _1275d7180_StructLit;


struct _1275d7180_BraceLit;


struct _1275d7180_KeyValPair;


struct _1275d7180_SliceExpr;


struct _1275d7180_IndexingExpr;


struct _1275d7180_SlicingExpr;


struct _1275d7180_LabelSt;


struct _1275d7180_FallSt;


struct _1275d7180_AssignSt;


struct _1275d7180_ScopeTree;


struct _1275d7180_RetSt;


struct _1275d7180_Iter;


struct _1275d7180_WhileKind;


struct _1275d7180_RangeKind;


struct _1275d7180_Conditional;


struct _1275d7180_MatchCase;


struct _127b065b0_FileInfo;


struct _127b06690_Stmt;


struct _127b06690_ScopeParser;


struct _127b10a80_CallData;


struct _127b10a80_Precedencer;


struct _127b10a80_ExprBuilder;


struct _127b060e0_Parser;


struct _127b2c380_TypeBuilder;


struct _130c83140_Const;


struct _127b2e960_FieldIns;


struct _127b2e960_StructIns;


struct _127ed52e0_RetType;


struct _127ed52e0_ParamIns;


struct _127ed52e0_FnIns;


struct _127ff3480_SymbolBuilder;


struct _1300a11b0_If;


struct _1300a11b0_Else;


struct _1300a11b0_Conditional;


struct _1300a11b0_InfIter;


struct _1300a11b0_WhileIter;


struct _1300a11b0_RangeIter;


struct _1300a11b0_ContSt;


struct _1300a11b0_BreakSt;


struct _1300a11b0_Label;


struct _1300a11b0_GotoSt;


struct _1300a11b0_Postfix;


struct _1300a11b0_Assign;


struct _1300a11b0_MultiAssign;


struct _1300a11b0_Match;


struct _1300a11b0_Case;


struct _1300a11b0_FallSt;


struct _1300a11b0_RetSt;


struct _1300a11b0_Recover;


struct _1300a11b0_ScopeGoto;


struct _1300a11b0_ScopeChecker;


struct _1279cf930_BinopExprModel;


struct _1279cf930_UnaryExprModel;


struct _1279cf930_GetRefPtrExprModel;


struct _1279cf930_StructArgExprModel;


struct _1279cf930_StructLitExprModel;


struct _1279cf930_AllocStructLitExprModel;


struct _1279cf930_CastingExprModel;


struct _1279cf930_FnCallExprModel;


struct _1279cf930_SliceExprModel;


struct _1279cf930_IndexigExprModel;


struct _1279cf930_AnonFnExprModel;


struct _1279cf930_KeyValPairExprModel;


struct _1279cf930_MapExprModel;


struct _1279cf930_SlicingExprModel;


struct _1279cf930_TraitSubIdentExprModel;


struct _1279cf930_StructSubIdentExprModel;


struct _1279cf930_StructStaticIdentExprModel;


struct _1279cf930_ArrayExprModel;


struct _1279cf930_CommonIdentExprModel;


struct _1279cf930_CommonSubIdentExprModel;


struct _1279cf930_TupleExprModel;


struct _1279cf930_BuiltinOutCallExprModel;


struct _1279cf930_BuiltinOutlnCallExprModel;


struct _1279cf930_BuiltinCloneCallExprModel;


struct _1279cf930_BuiltinNewCallExprModel;


struct _1279cf930_BuiltinRealCallExprModel;


struct _1279cf930_BuiltinDropCallExprModel;


struct _1279cf930_BuiltinPanicCallExprModel;


struct _1279cf930_BuiltinMakeCallExprModel;


struct _1279cf930_BuiltinErrorTraitSubIdentExprModel;


struct _1279cf930_SizeofExprModel;


struct _1279cf930_AlignofExprModel;


struct _1279cf930_RuneExprModel;


struct _1279cf930_ExplicitDerefExprModel;


struct _1300a4650_Package;


struct _1300a20d0_Sema;


struct _13032cf90_DynamicTypeAnnotation;


struct _13032cf90_StructLitChecker;


struct _13032cf90_RangeChecker;


struct _13064b610_Data;


struct _13064b610_Value;


struct _13064b610_Eval;


struct _1304dc9b0_TypeKind;


struct _1304dc9b0_TypeSymbol;


struct _1304dc9b0_Prim;


struct _1304dc9b0_Ref;


struct _1304dc9b0_Slc;


struct _1304dc9b0_Tuple;


struct _1304dc9b0_Map;


struct _1304dc9b0_Arr;


struct _1304dc9b0_Ptr;


struct _1304dc9b0_Referencer;


struct _1271b5120_PlainImporter;


struct _136f09c40_IR;


struct _1275c5880_ScopeDeadCode;


struct _127fba3d0_IndexRangeSetter;


struct _127fba3d0_MapRangeSetter;


struct _130f8bbe0_OrderedDecls;


struct _1304dc9b0_TypeChecker;


struct _1304dc9b0_TypeAlias;


struct _13064b610_BinopSolver;


struct _13032cf90_RetTypeChecker;


struct _13032cf90_FnCallArgChecker;


struct _13032cf90_AssignTypeChecker;


struct _13032cf90_TypeCompatibilityChecker;


struct _1303533b0_Var;


struct _1300a4650_ImportInfo;


struct _1300a11b0_ScopeLabel;


struct _12791ab70_Impl;


struct _13009ed30_Enum;


struct _13009ed30_EnumItem;


struct _130099320_Trait;


struct _127ff3480_Pass;


struct _127ed52e0_Fn;


struct _127ed52e0_Param;


struct _127b2e960_Field;


struct _127c1fad0_AssignInfo;


struct _1275d7180_Impl;


struct _1275d7180_TraitDecl;


struct _1275d7180_StructDecl;


struct _1275d7180_FieldDecl;


struct _1275d7180_EnumDecl;


struct _1275d7180_EnumItemDecl;


struct _1275d7180_UseDecl;


struct _1275d7180_Case;


struct _1275d7180_TypeAliasDecl;


struct _1275d7180_Else;


struct _1275d7180_If;


struct _1275d7180_ContSt;


struct _1275d7180_BreakSt;


struct _1275d7180_VarDecl;


struct _1275d7180_FnDecl;


struct _1275d7180_ParamDecl;


struct _1275d7180_AssignLeft;


struct _1275d7180_GotoSt;


struct _1275d7180_GenericDecl;


struct _1275d7180_FnCallExpr;


struct _1275d7180_Expr;


struct _1275d7180_IdentTypeDecl;


struct _1275d7180_TypeDecl;


struct _1275d7180_Directive;


struct _1275d7180_Comment;


struct _1275d7180_Node;


struct _127ab7fa0_Vector_0;

struct _127ab7fa0_Vector_1;

struct _127ab7fa0_Vector_2;

struct _127ab7fa0_Vector_3;

struct _127ab7fa0_Vector_4;

struct _127ab7fa0_Vector_5;

struct _127ab7fa0_Vector_6;

struct _127ab7fa0_Vector_7;

struct _127ab7fa0_Vector_8;

struct _127ab7fa0_Vector_9;

struct _127ab7fa0_Vector_10;

struct _127ab7fa0_Vector_11;

struct _127ab7fa0_Vector_12;

struct _127ab7fa0_Vector_13;

struct _127ab7fa0_Vector_14;

struct _127ab7fa0_Vector_15;


struct _126f67810_File;


struct _127774a70_Lex;


struct _1275d0e60_Ast;


struct _127b2e960_Struct;


struct _127ff3480_ReferenceStack;


struct _1300a11b0_Scope;


struct _13032dc50_SymbolTable;

struct _1300a4650_Importer {
	virtual ~_1300a4650_Importer(void) {}

	virtual jule::Ref<_1300a4650_ImportInfo> _method_get_import(jule::Str _1629_path) { return {}; }
	virtual std::tuple<jule::Slice<jule::Ref<_1275d0e60_Ast>>,jule::Slice<_136e99d00_Log>> _method_import_package(jule::Str _2034_path) { return {}; }
	virtual void _method_imported(jule::Ref<_1300a4650_ImportInfo>) {}
};

struct _1304dc9b0_Kind {
	virtual ~_1304dc9b0_Kind(void) {}

	virtual jule::Str _method_to_str(void) { return {}; }
	virtual jule::Bool _method_equals(jule::Ref<_1304dc9b0_TypeKind> _4621_other) { return {}; }
};

struct _1304dc360_Lookup {
	virtual ~_1304dc360_Lookup(void) {}

	virtual jule::Ref<_1300a4650_ImportInfo> _method_find_package(jule::Str _731_ident) { return {}; }
	virtual jule::Ref<_1300a4650_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1300a4650_ImportInfo>)> _833_selector) { return {}; }
	virtual jule::Ref<_1303533b0_Var> _method_find_var(jule::Str _927_ident,jule::Bool _939_cpp_linked) { return {}; }
	virtual jule::Ref<_1304dc9b0_TypeAlias> _method_find_type_alias(jule::Str _1034_ident,jule::Bool _1046_cpp_linked) { return {}; }
	virtual jule::Ref<_127b2e960_Struct> _method_find_struct(jule::Str _1130_ident,jule::Bool _1142_cpp_linked) { return {}; }
	virtual jule::Ref<_127ed52e0_Fn> _method_find_fn(jule::Str _1226_ident,jule::Bool _1238_cpp_linked) { return {}; }
	virtual jule::Ref<_130099320_Trait> _method_find_trait(jule::Str _1329_ident) { return {}; }
	virtual jule::Ref<_13009ed30_Enum> _method_find_enum(jule::Str _1428_ident) { return {}; }
};

struct _127fba3d0_RangeSetter {
	virtual ~_127fba3d0_RangeSetter(void) {}

	virtual jule::Str _method_setup_vars(jule::Ref<_1303533b0_Var> _3729_key_a,jule::Ref<_1303533b0_Var> _3746_key_b) { return {}; }
	virtual jule::Str _method_next_steps(jule::Ref<_1303533b0_Var> _3829_key_a,jule::Ref<_1303533b0_Var> _3846_key_b,jule::Str _3859_begin) { return {}; }
};


struct _136ec98d0_LazyBuff {
	jule::Ref<_136ec98d0_LazyBuff> self{};

	jule::Str _field_path{jule::Str()};
	jule::Slice<jule::U8> _field_buff{jule::Slice<jule::U8>()};
	jule::Int _field_w{jule::Int()};
	jule::Str _field_vol_and_path{jule::Str()};
	jule::Int _field_vol_len{jule::Int()};


	_136ec98d0_LazyBuff(jule::Str __param_path, jule::Slice<jule::U8> __param_buff, jule::Int __param_w, jule::Str __param_vol_and_path, jule::Int __param_vol_len) {
		this->self = jule::Ref<_136ec98d0_LazyBuff>::make(this, nullptr);

		this->_field_path = __param_path;
		this->_field_buff = __param_buff;
		this->_field_w = __param_w;
		this->_field_vol_and_path = __param_vol_and_path;
		this->_field_vol_len = __param_vol_len;
	}

	~_136ec98d0_LazyBuff(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_136ec98d0_LazyBuff(void) { this->self = jule::Ref<_136ec98d0_LazyBuff>::make(this, nullptr); }

	inline jule::U8 _method_index(jule::Int);


	inline void _method_append(jule::U8);


	inline jule::Str _method_string(void);


	inline bool operator==(const _136ec98d0_LazyBuff &_Src) {
		return 
			this->_field_path == _Src._field_path &&
			this->_field_buff == _Src._field_buff &&
			this->_field_w == _Src._field_w &&
			this->_field_vol_and_path == _Src._field_vol_and_path &&
			this->_field_vol_len == _Src._field_vol_len;
	}

	inline bool operator!=(const _136ec98d0_LazyBuff &_Src) { return !this->operator==(_Src); }
};


struct _136f888c0_FloatInfo {
	jule::Ref<_136f888c0_FloatInfo> self{};

	jule::Uint _field_mantbits{jule::Uint()};
	jule::Uint _field_expbits{jule::Uint()};
	jule::Int _field_bias{jule::Int()};


	_136f888c0_FloatInfo(jule::Uint __param_mantbits, jule::Uint __param_expbits, jule::Int __param_bias) {
		this->self = jule::Ref<_136f888c0_FloatInfo>::make(this, nullptr);

		this->_field_mantbits = __param_mantbits;
		this->_field_expbits = __param_expbits;
		this->_field_bias = __param_bias;
	}

	~_136f888c0_FloatInfo(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_136f888c0_FloatInfo(void) { this->self = jule::Ref<_136f888c0_FloatInfo>::make(this, nullptr); }

	inline bool operator==(const _136f888c0_FloatInfo &_Src) {
		return 
			this->_field_mantbits == _Src._field_mantbits &&
			this->_field_expbits == _Src._field_expbits &&
			this->_field_bias == _Src._field_bias;
	}

	inline bool operator!=(const _136f888c0_FloatInfo &_Src) { return !this->operator==(_Src); }
};


struct _136f888c0_DecimalSlice {
	jule::Ref<_136f888c0_DecimalSlice> self{};

	jule::Slice<jule::U8> _field_d{jule::Slice<jule::U8>()};
	jule::Int _field_nd{jule::Int()};
	jule::Int _field_dp{jule::Int()};
	jule::Bool _field_neg{jule::Bool()};


	_136f888c0_DecimalSlice(jule::Slice<jule::U8> __param_d, jule::Int __param_nd, jule::Int __param_dp, jule::Bool __param_neg) {
		this->self = jule::Ref<_136f888c0_DecimalSlice>::make(this, nullptr);

		this->_field_d = __param_d;
		this->_field_nd = __param_nd;
		this->_field_dp = __param_dp;
		this->_field_neg = __param_neg;
	}

	~_136f888c0_DecimalSlice(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_136f888c0_DecimalSlice(void) { this->self = jule::Ref<_136f888c0_DecimalSlice>::make(this, nullptr); }

	inline bool operator==(const _136f888c0_DecimalSlice &_Src) {
		return 
			this->_field_d == _Src._field_d &&
			this->_field_nd == _Src._field_nd &&
			this->_field_dp == _Src._field_dp &&
			this->_field_neg == _Src._field_neg;
	}

	inline bool operator!=(const _136f888c0_DecimalSlice &_Src) { return !this->operator==(_Src); }
};


struct _126f5c9e0_LeftCheat {
	jule::Ref<_126f5c9e0_LeftCheat> self{};

	jule::Int _field_delta{jule::Int()};
	jule::Str _field_cutoff{jule::Str()};


	_126f5c9e0_LeftCheat(jule::Int __param_delta, jule::Str __param_cutoff) {
		this->self = jule::Ref<_126f5c9e0_LeftCheat>::make(this, nullptr);

		this->_field_delta = __param_delta;
		this->_field_cutoff = __param_cutoff;
	}

	~_126f5c9e0_LeftCheat(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_126f5c9e0_LeftCheat(void) { this->self = jule::Ref<_126f5c9e0_LeftCheat>::make(this, nullptr); }

	inline bool operator==(const _126f5c9e0_LeftCheat &_Src) {
		return 
			this->_field_delta == _Src._field_delta &&
			this->_field_cutoff == _Src._field_cutoff;
	}

	inline bool operator!=(const _126f5c9e0_LeftCheat &_Src) { return !this->operator==(_Src); }
};


struct _126f5c9e0_Decimal {
	jule::Ref<_126f5c9e0_Decimal> self{};

	jule::Array<jule::U8,800> _field_d{jule::Array<jule::U8,800>()};
	jule::Int _field_nd{jule::Int()};
	jule::Int _field_dp{jule::Int()};
	jule::Bool _field_neg{jule::Bool()};
	jule::Bool _field_trunc{jule::Bool()};


	_126f5c9e0_Decimal(jule::Array<jule::U8,800> __param_d, jule::Int __param_nd, jule::Int __param_dp, jule::Bool __param_neg, jule::Bool __param_trunc) {
		this->self = jule::Ref<_126f5c9e0_Decimal>::make(this, nullptr);

		this->_field_d = __param_d;
		this->_field_nd = __param_nd;
		this->_field_dp = __param_dp;
		this->_field_neg = __param_neg;
		this->_field_trunc = __param_trunc;
	}

	~_126f5c9e0_Decimal(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_126f5c9e0_Decimal(void) { this->self = jule::Ref<_126f5c9e0_Decimal>::make(this, nullptr); }

	inline jule::Bool _method_set(jule::Str);


	inline std::tuple<jule::U64,jule::Bool> _method_float_bits(_136f888c0_FloatInfo&);


	inline void _method_assign(jule::U64);


	inline void _method_shift(jule::Int);


	inline void _method_round_down(jule::Int);


	inline void _method_round_up(jule::Int);


	inline void _method_round(jule::Int);


	inline jule::U64 _method_rounded_integer(void);


	inline bool operator==(const _126f5c9e0_Decimal &_Src) {
		return 
			this->_field_d == _Src._field_d &&
			this->_field_nd == _Src._field_nd &&
			this->_field_dp == _Src._field_dp &&
			this->_field_neg == _Src._field_neg &&
			this->_field_trunc == _Src._field_trunc;
	}

	inline bool operator!=(const _126f5c9e0_Decimal &_Src) { return !this->operator==(_Src); }
};


struct _136e99d00_Log {
	jule::Ref<_136e99d00_Log> self{};

	jule::Int _field_kind{0LLU};
	jule::Int _field_row{jule::Int()};
	jule::Int _field_column{jule::Int()};
	jule::Str _field_path{jule::Str()};
	jule::Str _field_text{jule::Str()};


	_136e99d00_Log(jule::Int __param_kind, jule::Int __param_row, jule::Int __param_column, jule::Str __param_path, jule::Str __param_text) {
		this->self = jule::Ref<_136e99d00_Log>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_row = __param_row;
		this->_field_column = __param_column;
		this->_field_path = __param_path;
		this->_field_text = __param_text;
	}

	~_136e99d00_Log(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_136e99d00_Log(void) { this->self = jule::Ref<_136e99d00_Log>::make(this, nullptr); }

	inline jule::Str _method_flat(void);


	inline jule::Str _method_error(void);


	inline jule::Str _method_to_str(void);


	inline bool operator==(const _136e99d00_Log &_Src) {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_row == _Src._field_row &&
			this->_field_column == _Src._field_column &&
			this->_field_path == _Src._field_path &&
			this->_field_text == _Src._field_text;
	}

	inline bool operator!=(const _136e99d00_Log &_Src) { return !this->operator==(_Src); }
};


struct _127281550_DirEntry {
	jule::Ref<_127281550_DirEntry> self{};

	jule::Str _field_name{jule::Str()};
	jule::Ref<_1275e3c20_Status> _field_stat{jule::Ref<_1275e3c20_Status>()};


	_127281550_DirEntry(jule::Str __param_name, jule::Ref<_1275e3c20_Status> __param_stat) {
		this->self = jule::Ref<_127281550_DirEntry>::make(this, nullptr);

		this->_field_name = __param_name;
		this->_field_stat = __param_stat;
	}

	~_127281550_DirEntry(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127281550_DirEntry(void) { this->self = jule::Ref<_127281550_DirEntry>::make(this, nullptr); }

	inline bool operator==(const _127281550_DirEntry &_Src) {
		return 
			this->_field_name == _Src._field_name &&
			this->_field_stat == _Src._field_stat;
	}

	inline bool operator!=(const _127281550_DirEntry &_Src) { return !this->operator==(_Src); }
};


struct _1275c8a10_File {
	jule::Ref<_1275c8a10_File> self{};

	jule::Int _field_handle{jule::Int()};


	_1275c8a10_File(jule::Int __param_handle) {
		this->self = jule::Ref<_1275c8a10_File>::make(this, nullptr);

		this->_field_handle = __param_handle;
	}

	~_1275c8a10_File(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275c8a10_File(void) { this->self = jule::Ref<_1275c8a10_File>::make(this, nullptr); }

	inline std::tuple<jule::I64,jule::Int> _method_seek(jule::I64,jule::Int);


	inline std::tuple<jule::Int,jule::Int> _method_read(jule::Slice<jule::U8>);


	inline std::tuple<jule::Int,jule::Int> _method_write(jule::Slice<jule::U8>);


	inline jule::Int _method_close(void);


	inline bool operator==(const _1275c8a10_File &_Src) {
		return 
			this->_field_handle == _Src._field_handle;
	}

	inline bool operator!=(const _1275c8a10_File &_Src) { return !this->operator==(_Src); }
};


struct _1275e3c20_Status {
	jule::Ref<_1275e3c20_Status> self{};

	jule::Uint _field_mode{jule::Uint()};
	jule::Uint _field_size{jule::Uint()};


	_1275e3c20_Status(jule::Uint __param_mode, jule::Uint __param_size) {
		this->self = jule::Ref<_1275e3c20_Status>::make(this, nullptr);

		this->_field_mode = __param_mode;
		this->_field_size = __param_size;
	}

	~_1275e3c20_Status(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275e3c20_Status(void) { this->self = jule::Ref<_1275e3c20_Status>::make(this, nullptr); }

	inline jule::Bool _method_is_dir(void);


	inline jule::Bool _method_is_reg(void);


	inline bool operator==(const _1275e3c20_Status &_Src) {
		return 
			this->_field_mode == _Src._field_mode &&
			this->_field_size == _Src._field_size;
	}

	inline bool operator!=(const _1275e3c20_Status &_Src) { return !this->operator==(_Src); }
};


struct _1275d1920_accept_range {
	jule::Ref<_1275d1920_accept_range> self{};

	jule::U8 _field_lo{jule::U8()};
	jule::U8 _field_hi{jule::U8()};


	_1275d1920_accept_range(jule::U8 __param_lo, jule::U8 __param_hi) {
		this->self = jule::Ref<_1275d1920_accept_range>::make(this, nullptr);

		this->_field_lo = __param_lo;
		this->_field_hi = __param_hi;
	}

	~_1275d1920_accept_range(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d1920_accept_range(void) { this->self = jule::Ref<_1275d1920_accept_range>::make(this, nullptr); }

	inline bool operator==(const _1275d1920_accept_range &_Src) {
		return 
			this->_field_lo == _Src._field_lo &&
			this->_field_hi == _Src._field_hi;
	}

	inline bool operator!=(const _1275d1920_accept_range &_Src) { return !this->operator==(_Src); }
};


struct _127941de0_Token {
	jule::Ref<_127941de0_Token> self{};

	jule::Ref<_126f67810_File> _field_file{jule::Ref<_126f67810_File>()};
	jule::Int _field_row{jule::Int()};
	jule::Int _field_column{jule::Int()};
	jule::Str _field_kind{jule::Str()};
	jule::Uint _field_id{0LLU};


	_127941de0_Token(jule::Ref<_126f67810_File> __param_file, jule::Int __param_row, jule::Int __param_column, jule::Str __param_kind, jule::Uint __param_id) {
		this->self = jule::Ref<_127941de0_Token>::make(this, nullptr);

		this->_field_file = __param_file;
		this->_field_row = __param_row;
		this->_field_column = __param_column;
		this->_field_kind = __param_kind;
		this->_field_id = __param_id;
	}

	~_127941de0_Token(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127941de0_Token(void) { this->self = jule::Ref<_127941de0_Token>::make(this, nullptr); }

	inline jule::Int _method_prec(void);


	inline bool operator==(const _127941de0_Token &_Src) {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_row == _Src._field_row &&
			this->_field_column == _Src._field_column &&
			this->_field_kind == _Src._field_kind &&
			this->_field_id == _Src._field_id;
	}

	inline bool operator!=(const _127941de0_Token &_Src) { return !this->operator==(_Src); }
};


struct _127774a70_KindPair {
	jule::Ref<_127774a70_KindPair> self{};

	jule::Str _field_kind{jule::Str("::", 2)};
	jule::Uint _field_id{0LLU};


	_127774a70_KindPair(jule::Str __param_kind, jule::Uint __param_id) {
		this->self = jule::Ref<_127774a70_KindPair>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_id = __param_id;
	}

	~_127774a70_KindPair(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127774a70_KindPair(void) { this->self = jule::Ref<_127774a70_KindPair>::make(this, nullptr); }

	inline bool operator==(const _127774a70_KindPair &_Src) {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_id == _Src._field_id;
	}

	inline bool operator!=(const _127774a70_KindPair &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_CommentGroup {
	jule::Ref<_1275d7180_CommentGroup> self{};

	jule::Slice<jule::Ref<_1275d7180_Comment>> _field_comments{jule::Slice<jule::Ref<_1275d7180_Comment>>()};


	_1275d7180_CommentGroup(jule::Slice<jule::Ref<_1275d7180_Comment>> __param_comments) {
		this->self = jule::Ref<_1275d7180_CommentGroup>::make(this, nullptr);

		this->_field_comments = __param_comments;
	}

	~_1275d7180_CommentGroup(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_CommentGroup(void) { this->self = jule::Ref<_1275d7180_CommentGroup>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_CommentGroup &_Src) {
		return 
			this->_field_comments == _Src._field_comments;
	}

	inline bool operator!=(const _1275d7180_CommentGroup &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_NamespaceTypeDecl {
	jule::Ref<_1275d7180_NamespaceTypeDecl> self{};

	jule::Slice<_127941de0_Token> _field_idents{jule::Slice<_127941de0_Token>()};
	jule::Ref<_1275d7180_IdentTypeDecl> _field_kind{jule::Ref<_1275d7180_IdentTypeDecl>()};


	_1275d7180_NamespaceTypeDecl(jule::Slice<_127941de0_Token> __param_idents, jule::Ref<_1275d7180_IdentTypeDecl> __param_kind) {
		this->self = jule::Ref<_1275d7180_NamespaceTypeDecl>::make(this, nullptr);

		this->_field_idents = __param_idents;
		this->_field_kind = __param_kind;
	}

	~_1275d7180_NamespaceTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_NamespaceTypeDecl(void) { this->self = jule::Ref<_1275d7180_NamespaceTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_NamespaceTypeDecl &_Src) {
		return 
			this->_field_idents == _Src._field_idents &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1275d7180_NamespaceTypeDecl &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_RefTypeDecl {
	jule::Ref<_1275d7180_RefTypeDecl> self{};

	jule::Ref<_1275d7180_TypeDecl> _field_elem{jule::Ref<_1275d7180_TypeDecl>()};


	_1275d7180_RefTypeDecl(jule::Ref<_1275d7180_TypeDecl> __param_elem) {
		this->self = jule::Ref<_1275d7180_RefTypeDecl>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_1275d7180_RefTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_RefTypeDecl(void) { this->self = jule::Ref<_1275d7180_RefTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_RefTypeDecl &_Src) {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1275d7180_RefTypeDecl &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_SlcTypeDecl {
	jule::Ref<_1275d7180_SlcTypeDecl> self{};

	jule::Ref<_1275d7180_TypeDecl> _field_elem{jule::Ref<_1275d7180_TypeDecl>()};


	_1275d7180_SlcTypeDecl(jule::Ref<_1275d7180_TypeDecl> __param_elem) {
		this->self = jule::Ref<_1275d7180_SlcTypeDecl>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_1275d7180_SlcTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_SlcTypeDecl(void) { this->self = jule::Ref<_1275d7180_SlcTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_SlcTypeDecl &_Src) {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1275d7180_SlcTypeDecl &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_TupleTypeDecl {
	jule::Ref<_1275d7180_TupleTypeDecl> self{};

	jule::Slice<jule::Ref<_1275d7180_TypeDecl>> _field_types{jule::Slice<jule::Ref<_1275d7180_TypeDecl>>()};


	_1275d7180_TupleTypeDecl(jule::Slice<jule::Ref<_1275d7180_TypeDecl>> __param_types) {
		this->self = jule::Ref<_1275d7180_TupleTypeDecl>::make(this, nullptr);

		this->_field_types = __param_types;
	}

	~_1275d7180_TupleTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_TupleTypeDecl(void) { this->self = jule::Ref<_1275d7180_TupleTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_TupleTypeDecl &_Src) {
		return 
			this->_field_types == _Src._field_types;
	}

	inline bool operator!=(const _1275d7180_TupleTypeDecl &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_PtrTypeDecl {
	jule::Ref<_1275d7180_PtrTypeDecl> self{};

	jule::Ref<_1275d7180_TypeDecl> _field_elem{jule::Ref<_1275d7180_TypeDecl>()};


	_1275d7180_PtrTypeDecl(jule::Ref<_1275d7180_TypeDecl> __param_elem) {
		this->self = jule::Ref<_1275d7180_PtrTypeDecl>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_1275d7180_PtrTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_PtrTypeDecl(void) { this->self = jule::Ref<_1275d7180_PtrTypeDecl>::make(this, nullptr); }

	inline jule::Bool _method_is_unsafe(void);


	inline bool operator==(const _1275d7180_PtrTypeDecl &_Src) {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1275d7180_PtrTypeDecl &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_ArrTypeDecl {
	jule::Ref<_1275d7180_ArrTypeDecl> self{};

	jule::Ref<_1275d7180_TypeDecl> _field_elem{jule::Ref<_1275d7180_TypeDecl>()};
	jule::Ref<_1275d7180_Expr> _field_size{jule::Ref<_1275d7180_Expr>()};


	_1275d7180_ArrTypeDecl(jule::Ref<_1275d7180_TypeDecl> __param_elem, jule::Ref<_1275d7180_Expr> __param_size) {
		this->self = jule::Ref<_1275d7180_ArrTypeDecl>::make(this, nullptr);

		this->_field_elem = __param_elem;
		this->_field_size = __param_size;
	}

	~_1275d7180_ArrTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_ArrTypeDecl(void) { this->self = jule::Ref<_1275d7180_ArrTypeDecl>::make(this, nullptr); }

	inline jule::Bool _method_auto_sized(void);


	inline bool operator==(const _1275d7180_ArrTypeDecl &_Src) {
		return 
			this->_field_elem == _Src._field_elem &&
			this->_field_size == _Src._field_size;
	}

	inline bool operator!=(const _1275d7180_ArrTypeDecl &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_MapTypeDecl {
	jule::Ref<_1275d7180_MapTypeDecl> self{};

	jule::Ref<_1275d7180_TypeDecl> _field_key{jule::Ref<_1275d7180_TypeDecl>()};
	jule::Ref<_1275d7180_TypeDecl> _field_val{jule::Ref<_1275d7180_TypeDecl>()};


	_1275d7180_MapTypeDecl(jule::Ref<_1275d7180_TypeDecl> __param_key, jule::Ref<_1275d7180_TypeDecl> __param_val) {
		this->self = jule::Ref<_1275d7180_MapTypeDecl>::make(this, nullptr);

		this->_field_key = __param_key;
		this->_field_val = __param_val;
	}

	~_1275d7180_MapTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_MapTypeDecl(void) { this->self = jule::Ref<_1275d7180_MapTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_MapTypeDecl &_Src) {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _1275d7180_MapTypeDecl &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_RetTypeDecl {
	jule::Ref<_1275d7180_RetTypeDecl> self{};

	jule::Ref<_1275d7180_TypeDecl> _field_kind{jule::Ref<_1275d7180_TypeDecl>()};
	jule::Slice<_127941de0_Token> _field_idents{jule::Slice<_127941de0_Token>()};


	_1275d7180_RetTypeDecl(jule::Ref<_1275d7180_TypeDecl> __param_kind, jule::Slice<_127941de0_Token> __param_idents) {
		this->self = jule::Ref<_1275d7180_RetTypeDecl>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_idents = __param_idents;
	}

	~_1275d7180_RetTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_RetTypeDecl(void) { this->self = jule::Ref<_1275d7180_RetTypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_RetTypeDecl &_Src) {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_idents == _Src._field_idents;
	}

	inline bool operator!=(const _1275d7180_RetTypeDecl &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_TupleExpr {
	jule::Ref<_1275d7180_TupleExpr> self{};

	jule::Slice<jule::Any> _field_expr{jule::Slice<jule::Any>()};


	_1275d7180_TupleExpr(jule::Slice<jule::Any> __param_expr) {
		this->self = jule::Ref<_1275d7180_TupleExpr>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1275d7180_TupleExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_TupleExpr(void) { this->self = jule::Ref<_1275d7180_TupleExpr>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_TupleExpr &_Src) {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1275d7180_TupleExpr &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_LitExpr {
	jule::Ref<_1275d7180_LitExpr> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Str _field_value{jule::Str()};


	_1275d7180_LitExpr(_127941de0_Token __param_token, jule::Str __param_value) {
		this->self = jule::Ref<_1275d7180_LitExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_value = __param_value;
	}

	~_1275d7180_LitExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_LitExpr(void) { this->self = jule::Ref<_1275d7180_LitExpr>::make(this, nullptr); }

	inline jule::Bool _method_is_nil(void);


	inline bool operator==(const _1275d7180_LitExpr &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_value == _Src._field_value;
	}

	inline bool operator!=(const _1275d7180_LitExpr &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_UnsafeExpr {
	jule::Ref<_1275d7180_UnsafeExpr> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Any _field_expr{jule::Any()};


	_1275d7180_UnsafeExpr(_127941de0_Token __param_token, jule::Any __param_expr) {
		this->self = jule::Ref<_1275d7180_UnsafeExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
	}

	~_1275d7180_UnsafeExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_UnsafeExpr(void) { this->self = jule::Ref<_1275d7180_UnsafeExpr>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_UnsafeExpr &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1275d7180_UnsafeExpr &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_IdentExpr {
	jule::Ref<_1275d7180_IdentExpr> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};


	_1275d7180_IdentExpr(_127941de0_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked) {
		this->self = jule::Ref<_1275d7180_IdentExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_cpp_linked = __param_cpp_linked;
	}

	~_1275d7180_IdentExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_IdentExpr(void) { this->self = jule::Ref<_1275d7180_IdentExpr>::make(this, nullptr); }

	inline jule::Bool _method_is_self(void);


	inline bool operator==(const _1275d7180_IdentExpr &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked;
	}

	inline bool operator!=(const _1275d7180_IdentExpr &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_UnaryExpr {
	jule::Ref<_1275d7180_UnaryExpr> self{};

	_127941de0_Token _field_op{_127941de0_Token()};
	jule::Any _field_expr{jule::Any()};


	_1275d7180_UnaryExpr(_127941de0_Token __param_op, jule::Any __param_expr) {
		this->self = jule::Ref<_1275d7180_UnaryExpr>::make(this, nullptr);

		this->_field_op = __param_op;
		this->_field_expr = __param_expr;
	}

	~_1275d7180_UnaryExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_UnaryExpr(void) { this->self = jule::Ref<_1275d7180_UnaryExpr>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_UnaryExpr &_Src) {
		return 
			this->_field_op == _Src._field_op &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1275d7180_UnaryExpr &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_VariadicExpr {
	jule::Ref<_1275d7180_VariadicExpr> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Any _field_expr{jule::Any()};


	_1275d7180_VariadicExpr(_127941de0_Token __param_token, jule::Any __param_expr) {
		this->self = jule::Ref<_1275d7180_VariadicExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
	}

	~_1275d7180_VariadicExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_VariadicExpr(void) { this->self = jule::Ref<_1275d7180_VariadicExpr>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_VariadicExpr &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1275d7180_VariadicExpr &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_CastExpr {
	jule::Ref<_1275d7180_CastExpr> self{};

	jule::Ref<_1275d7180_TypeDecl> _field_kind{jule::Ref<_1275d7180_TypeDecl>()};
	jule::Any _field_expr{jule::Any()};


	_1275d7180_CastExpr(jule::Ref<_1275d7180_TypeDecl> __param_kind, jule::Any __param_expr) {
		this->self = jule::Ref<_1275d7180_CastExpr>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_expr = __param_expr;
	}

	~_1275d7180_CastExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_CastExpr(void) { this->self = jule::Ref<_1275d7180_CastExpr>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_CastExpr &_Src) {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1275d7180_CastExpr &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_NsSelectionExpr {
	jule::Ref<_1275d7180_NsSelectionExpr> self{};

	jule::Slice<_127941de0_Token> _field_ns{jule::Slice<_127941de0_Token>()};
	_127941de0_Token _field_ident{_127941de0_Token()};


	_1275d7180_NsSelectionExpr(jule::Slice<_127941de0_Token> __param_ns, _127941de0_Token __param_ident) {
		this->self = jule::Ref<_1275d7180_NsSelectionExpr>::make(this, nullptr);

		this->_field_ns = __param_ns;
		this->_field_ident = __param_ident;
	}

	~_1275d7180_NsSelectionExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_NsSelectionExpr(void) { this->self = jule::Ref<_1275d7180_NsSelectionExpr>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_NsSelectionExpr &_Src) {
		return 
			this->_field_ns == _Src._field_ns &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1275d7180_NsSelectionExpr &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_SubIdentExpr {
	jule::Ref<_1275d7180_SubIdentExpr> self{};

	jule::Bool _field_is_self{jule::Bool()};
	jule::Any _field_expr{jule::Any()};
	_127941de0_Token _field_ident{_127941de0_Token()};


	_1275d7180_SubIdentExpr(jule::Bool __param_is_self, jule::Any __param_expr, _127941de0_Token __param_ident) {
		this->self = jule::Ref<_1275d7180_SubIdentExpr>::make(this, nullptr);

		this->_field_is_self = __param_is_self;
		this->_field_expr = __param_expr;
		this->_field_ident = __param_ident;
	}

	~_1275d7180_SubIdentExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_SubIdentExpr(void) { this->self = jule::Ref<_1275d7180_SubIdentExpr>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_SubIdentExpr &_Src) {
		return 
			this->_field_is_self == _Src._field_is_self &&
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1275d7180_SubIdentExpr &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_BinopExpr {
	jule::Ref<_1275d7180_BinopExpr> self{};

	jule::Any _field_left{jule::Any()};
	jule::Any _field_right{jule::Any()};
	_127941de0_Token _field_op{_127941de0_Token()};


	_1275d7180_BinopExpr(jule::Any __param_left, jule::Any __param_right, _127941de0_Token __param_op) {
		this->self = jule::Ref<_1275d7180_BinopExpr>::make(this, nullptr);

		this->_field_left = __param_left;
		this->_field_right = __param_right;
		this->_field_op = __param_op;
	}

	~_1275d7180_BinopExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_BinopExpr(void) { this->self = jule::Ref<_1275d7180_BinopExpr>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_BinopExpr &_Src) {
		return 
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1275d7180_BinopExpr &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_FieldExprPair {
	jule::Ref<_1275d7180_FieldExprPair> self{};

	_127941de0_Token _field_field{_127941de0_Token()};
	jule::Any _field_expr{jule::Any()};


	_1275d7180_FieldExprPair(_127941de0_Token __param_field, jule::Any __param_expr) {
		this->self = jule::Ref<_1275d7180_FieldExprPair>::make(this, nullptr);

		this->_field_field = __param_field;
		this->_field_expr = __param_expr;
	}

	~_1275d7180_FieldExprPair(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_FieldExprPair(void) { this->self = jule::Ref<_1275d7180_FieldExprPair>::make(this, nullptr); }

	inline jule::Bool _method_is_targeted(void);


	inline bool operator==(const _1275d7180_FieldExprPair &_Src) {
		return 
			this->_field_field == _Src._field_field &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1275d7180_FieldExprPair &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_StructLit {
	jule::Ref<_1275d7180_StructLit> self{};

	jule::Ref<_1275d7180_TypeDecl> _field_kind{jule::Ref<_1275d7180_TypeDecl>()};
	jule::Slice<jule::Any> _field_exprs{jule::Slice<jule::Any>()};


	_1275d7180_StructLit(jule::Ref<_1275d7180_TypeDecl> __param_kind, jule::Slice<jule::Any> __param_exprs) {
		this->self = jule::Ref<_1275d7180_StructLit>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_exprs = __param_exprs;
	}

	~_1275d7180_StructLit(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_StructLit(void) { this->self = jule::Ref<_1275d7180_StructLit>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_StructLit &_Src) {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _1275d7180_StructLit &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_BraceLit {
	jule::Ref<_1275d7180_BraceLit> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Slice<jule::Any> _field_exprs{jule::Slice<jule::Any>()};


	_1275d7180_BraceLit(_127941de0_Token __param_token, jule::Slice<jule::Any> __param_exprs) {
		this->self = jule::Ref<_1275d7180_BraceLit>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_exprs = __param_exprs;
	}

	~_1275d7180_BraceLit(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_BraceLit(void) { this->self = jule::Ref<_1275d7180_BraceLit>::make(this, nullptr); }

	inline jule::Bool _method_is_empty(void);


	inline bool operator==(const _1275d7180_BraceLit &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _1275d7180_BraceLit &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_KeyValPair {
	jule::Ref<_1275d7180_KeyValPair> self{};

	jule::Any _field_key{jule::Any()};
	jule::Any _field_val{jule::Any()};
	_127941de0_Token _field_colon{_127941de0_Token()};


	_1275d7180_KeyValPair(jule::Any __param_key, jule::Any __param_val, _127941de0_Token __param_colon) {
		this->self = jule::Ref<_1275d7180_KeyValPair>::make(this, nullptr);

		this->_field_key = __param_key;
		this->_field_val = __param_val;
		this->_field_colon = __param_colon;
	}

	~_1275d7180_KeyValPair(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_KeyValPair(void) { this->self = jule::Ref<_1275d7180_KeyValPair>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_KeyValPair &_Src) {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val &&
			this->_field_colon == _Src._field_colon;
	}

	inline bool operator!=(const _1275d7180_KeyValPair &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_SliceExpr {
	jule::Ref<_1275d7180_SliceExpr> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Slice<jule::Any> _field_elems{jule::Slice<jule::Any>()};


	_1275d7180_SliceExpr(_127941de0_Token __param_token, jule::Slice<jule::Any> __param_elems) {
		this->self = jule::Ref<_1275d7180_SliceExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_elems = __param_elems;
	}

	~_1275d7180_SliceExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_SliceExpr(void) { this->self = jule::Ref<_1275d7180_SliceExpr>::make(this, nullptr); }

	inline jule::Bool _method_is_empty(void);


	inline bool operator==(const _1275d7180_SliceExpr &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _1275d7180_SliceExpr &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_IndexingExpr {
	jule::Ref<_1275d7180_IndexingExpr> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Any _field_expr{jule::Any()};
	jule::Any _field_index{jule::Any()};


	_1275d7180_IndexingExpr(_127941de0_Token __param_token, jule::Any __param_expr, jule::Any __param_index) {
		this->self = jule::Ref<_1275d7180_IndexingExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
		this->_field_index = __param_index;
	}

	~_1275d7180_IndexingExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_IndexingExpr(void) { this->self = jule::Ref<_1275d7180_IndexingExpr>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_IndexingExpr &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_index == _Src._field_index;
	}

	inline bool operator!=(const _1275d7180_IndexingExpr &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_SlicingExpr {
	jule::Ref<_1275d7180_SlicingExpr> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Any _field_expr{jule::Any()};
	jule::Any _field_start{jule::Any()};
	jule::Any _field_to{jule::Any()};


	_1275d7180_SlicingExpr(_127941de0_Token __param_token, jule::Any __param_expr, jule::Any __param_start, jule::Any __param_to) {
		this->self = jule::Ref<_1275d7180_SlicingExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
		this->_field_start = __param_start;
		this->_field_to = __param_to;
	}

	~_1275d7180_SlicingExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_SlicingExpr(void) { this->self = jule::Ref<_1275d7180_SlicingExpr>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_SlicingExpr &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_start == _Src._field_start &&
			this->_field_to == _Src._field_to;
	}

	inline bool operator!=(const _1275d7180_SlicingExpr &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_LabelSt {
	jule::Ref<_1275d7180_LabelSt> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Str _field_ident{jule::Str()};


	_1275d7180_LabelSt(_127941de0_Token __param_token, jule::Str __param_ident) {
		this->self = jule::Ref<_1275d7180_LabelSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
	}

	~_1275d7180_LabelSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_LabelSt(void) { this->self = jule::Ref<_1275d7180_LabelSt>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_LabelSt &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1275d7180_LabelSt &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_FallSt {
	jule::Ref<_1275d7180_FallSt> self{};

	_127941de0_Token _field_token{_127941de0_Token()};


	_1275d7180_FallSt(_127941de0_Token __param_token) {
		this->self = jule::Ref<_1275d7180_FallSt>::make(this, nullptr);

		this->_field_token = __param_token;
	}

	~_1275d7180_FallSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_FallSt(void) { this->self = jule::Ref<_1275d7180_FallSt>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_FallSt &_Src) {
		return 
			this->_field_token == _Src._field_token;
	}

	inline bool operator!=(const _1275d7180_FallSt &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_AssignSt {
	jule::Ref<_1275d7180_AssignSt> self{};

	jule::Bool _field_declarative{jule::Bool()};
	_127941de0_Token _field_setter{_127941de0_Token()};
	jule::Slice<jule::Ref<_1275d7180_AssignLeft>> _field_left{jule::Slice<jule::Ref<_1275d7180_AssignLeft>>()};
	jule::Ref<_1275d7180_Expr> _field_right{jule::Ref<_1275d7180_Expr>()};


	_1275d7180_AssignSt(jule::Bool __param_declarative, _127941de0_Token __param_setter, jule::Slice<jule::Ref<_1275d7180_AssignLeft>> __param_left, jule::Ref<_1275d7180_Expr> __param_right) {
		this->self = jule::Ref<_1275d7180_AssignSt>::make(this, nullptr);

		this->_field_declarative = __param_declarative;
		this->_field_setter = __param_setter;
		this->_field_left = __param_left;
		this->_field_right = __param_right;
	}

	~_1275d7180_AssignSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_AssignSt(void) { this->self = jule::Ref<_1275d7180_AssignSt>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_AssignSt &_Src) {
		return 
			this->_field_declarative == _Src._field_declarative &&
			this->_field_setter == _Src._field_setter &&
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right;
	}

	inline bool operator!=(const _1275d7180_AssignSt &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_ScopeTree {
	jule::Ref<_1275d7180_ScopeTree> self{};

	jule::Ref<_1275d7180_ScopeTree> _field_parent{jule::Ref<_1275d7180_ScopeTree>()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_deferred{jule::Bool()};
	jule::Slice<jule::Any> _field_stmts{jule::Slice<jule::Any>()};


	_1275d7180_ScopeTree(jule::Ref<_1275d7180_ScopeTree> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, jule::Slice<jule::Any> __param_stmts) {
		this->self = jule::Ref<_1275d7180_ScopeTree>::make(this, nullptr);

		this->_field_parent = __param_parent;
		this->_field_unsafety = __param_unsafety;
		this->_field_deferred = __param_deferred;
		this->_field_stmts = __param_stmts;
	}

	~_1275d7180_ScopeTree(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_ScopeTree(void) { this->self = jule::Ref<_1275d7180_ScopeTree>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_ScopeTree &_Src) {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_deferred == _Src._field_deferred &&
			this->_field_stmts == _Src._field_stmts;
	}

	inline bool operator!=(const _1275d7180_ScopeTree &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_RetSt {
	jule::Ref<_1275d7180_RetSt> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Ref<_1275d7180_Expr> _field_expr{jule::Ref<_1275d7180_Expr>()};


	_1275d7180_RetSt(_127941de0_Token __param_token, jule::Ref<_1275d7180_Expr> __param_expr) {
		this->self = jule::Ref<_1275d7180_RetSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
	}

	~_1275d7180_RetSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_RetSt(void) { this->self = jule::Ref<_1275d7180_RetSt>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_RetSt &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1275d7180_RetSt &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_Iter {
	jule::Ref<_1275d7180_Iter> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Any _field_kind{jule::Any()};
	jule::Ref<_1275d7180_ScopeTree> _field_scope{jule::Ref<_1275d7180_ScopeTree>()};


	_1275d7180_Iter(_127941de0_Token __param_token, jule::Any __param_kind, jule::Ref<_1275d7180_ScopeTree> __param_scope) {
		this->self = jule::Ref<_1275d7180_Iter>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_kind = __param_kind;
		this->_field_scope = __param_scope;
	}

	~_1275d7180_Iter(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_Iter(void) { this->self = jule::Ref<_1275d7180_Iter>::make(this, nullptr); }

	inline jule::Bool _method_is_inf(void);


	inline bool operator==(const _1275d7180_Iter &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1275d7180_Iter &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_WhileKind {
	jule::Ref<_1275d7180_WhileKind> self{};

	jule::Ref<_1275d7180_Expr> _field_expr{jule::Ref<_1275d7180_Expr>()};
	jule::Any _field_next{jule::Any()};
	_127941de0_Token _field_next_token{_127941de0_Token()};


	_1275d7180_WhileKind(jule::Ref<_1275d7180_Expr> __param_expr, jule::Any __param_next, _127941de0_Token __param_next_token) {
		this->self = jule::Ref<_1275d7180_WhileKind>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_next = __param_next;
		this->_field_next_token = __param_next_token;
	}

	~_1275d7180_WhileKind(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_WhileKind(void) { this->self = jule::Ref<_1275d7180_WhileKind>::make(this, nullptr); }

	inline jule::Bool _method_is_while_next(void);


	inline bool operator==(const _1275d7180_WhileKind &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_next == _Src._field_next &&
			this->_field_next_token == _Src._field_next_token;
	}

	inline bool operator!=(const _1275d7180_WhileKind &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_RangeKind {
	jule::Ref<_1275d7180_RangeKind> self{};

	_127941de0_Token _field_in_token{_127941de0_Token()};
	jule::Ref<_1275d7180_Expr> _field_expr{jule::Ref<_1275d7180_Expr>()};
	jule::Ref<_1275d7180_VarDecl> _field_key_a{jule::Ref<_1275d7180_VarDecl>()};
	jule::Ref<_1275d7180_VarDecl> _field_key_b{jule::Ref<_1275d7180_VarDecl>()};


	_1275d7180_RangeKind(_127941de0_Token __param_in_token, jule::Ref<_1275d7180_Expr> __param_expr, jule::Ref<_1275d7180_VarDecl> __param_key_a, jule::Ref<_1275d7180_VarDecl> __param_key_b) {
		this->self = jule::Ref<_1275d7180_RangeKind>::make(this, nullptr);

		this->_field_in_token = __param_in_token;
		this->_field_expr = __param_expr;
		this->_field_key_a = __param_key_a;
		this->_field_key_b = __param_key_b;
	}

	~_1275d7180_RangeKind(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_RangeKind(void) { this->self = jule::Ref<_1275d7180_RangeKind>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_RangeKind &_Src) {
		return 
			this->_field_in_token == _Src._field_in_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_key_a == _Src._field_key_a &&
			this->_field_key_b == _Src._field_key_b;
	}

	inline bool operator!=(const _1275d7180_RangeKind &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_Conditional {
	jule::Ref<_1275d7180_Conditional> self{};

	jule::Ref<_1275d7180_If> _field_head{jule::Ref<_1275d7180_If>()};
	jule::Slice<jule::Ref<_1275d7180_If>> _field_tail{jule::Slice<jule::Ref<_1275d7180_If>>()};
	jule::Ref<_1275d7180_Else> _field_default{jule::Ref<_1275d7180_Else>()};


	_1275d7180_Conditional(jule::Ref<_1275d7180_If> __param_head, jule::Slice<jule::Ref<_1275d7180_If>> __param_tail, jule::Ref<_1275d7180_Else> __param_default) {
		this->self = jule::Ref<_1275d7180_Conditional>::make(this, nullptr);

		this->_field_head = __param_head;
		this->_field_tail = __param_tail;
		this->_field_default = __param_default;
	}

	~_1275d7180_Conditional(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_Conditional(void) { this->self = jule::Ref<_1275d7180_Conditional>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_Conditional &_Src) {
		return 
			this->_field_head == _Src._field_head &&
			this->_field_tail == _Src._field_tail &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _1275d7180_Conditional &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_MatchCase {
	jule::Ref<_1275d7180_MatchCase> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Bool _field_type_match{jule::Bool()};
	jule::Ref<_1275d7180_Expr> _field_expr{jule::Ref<_1275d7180_Expr>()};
	jule::Slice<jule::Ref<_1275d7180_Case>> _field_cases{jule::Slice<jule::Ref<_1275d7180_Case>>()};
	jule::Ref<_1275d7180_Else> _field_default{jule::Ref<_1275d7180_Else>()};


	_1275d7180_MatchCase(_127941de0_Token __param_token, jule::Bool __param_type_match, jule::Ref<_1275d7180_Expr> __param_expr, jule::Slice<jule::Ref<_1275d7180_Case>> __param_cases, jule::Ref<_1275d7180_Else> __param_default) {
		this->self = jule::Ref<_1275d7180_MatchCase>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_type_match = __param_type_match;
		this->_field_expr = __param_expr;
		this->_field_cases = __param_cases;
		this->_field_default = __param_default;
	}

	~_1275d7180_MatchCase(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_MatchCase(void) { this->self = jule::Ref<_1275d7180_MatchCase>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_MatchCase &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_type_match == _Src._field_type_match &&
			this->_field_expr == _Src._field_expr &&
			this->_field_cases == _Src._field_cases &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _1275d7180_MatchCase &_Src) { return !this->operator==(_Src); }
};


struct _127b065b0_FileInfo {
	jule::Ref<_127b065b0_FileInfo> self{};

	jule::Ref<_1275d0e60_Ast> _field_ast{jule::Ref<_1275d0e60_Ast>()};
	jule::Slice<_136e99d00_Log> _field_errors{jule::Slice<_136e99d00_Log>()};


	_127b065b0_FileInfo(jule::Ref<_1275d0e60_Ast> __param_ast, jule::Slice<_136e99d00_Log> __param_errors) {
		this->self = jule::Ref<_127b065b0_FileInfo>::make(this, nullptr);

		this->_field_ast = __param_ast;
		this->_field_errors = __param_errors;
	}

	~_127b065b0_FileInfo(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127b065b0_FileInfo(void) { this->self = jule::Ref<_127b065b0_FileInfo>::make(this, nullptr); }

	inline bool operator==(const _127b065b0_FileInfo &_Src) {
		return 
			this->_field_ast == _Src._field_ast &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _127b065b0_FileInfo &_Src) { return !this->operator==(_Src); }
};


struct _127b06690_Stmt {
	jule::Ref<_127b06690_Stmt> self{};

	jule::Slice<_127941de0_Token> _field_tokens{jule::Slice<_127941de0_Token>()};
	jule::Bool _field_terminated{jule::Bool()};


	_127b06690_Stmt(jule::Slice<_127941de0_Token> __param_tokens, jule::Bool __param_terminated) {
		this->self = jule::Ref<_127b06690_Stmt>::make(this, nullptr);

		this->_field_tokens = __param_tokens;
		this->_field_terminated = __param_terminated;
	}

	~_127b06690_Stmt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127b06690_Stmt(void) { this->self = jule::Ref<_127b06690_Stmt>::make(this, nullptr); }

	inline bool operator==(const _127b06690_Stmt &_Src) {
		return 
			this->_field_tokens == _Src._field_tokens &&
			this->_field_terminated == _Src._field_terminated;
	}

	inline bool operator!=(const _127b06690_Stmt &_Src) { return !this->operator==(_Src); }
};


struct _127b06690_ScopeParser {
	jule::Ref<_127b06690_ScopeParser> self{};

	jule::Ref<_127b060e0_Parser> _field_p{jule::Ref<_127b060e0_Parser>()};
	jule::Ref<_1275d7180_ScopeTree> _field_s{jule::Ref<_1275d7180_ScopeTree>()};
	jule::Slice<jule::Ref<_127b06690_Stmt>> _field_stms{jule::Slice<jule::Ref<_127b06690_Stmt>>()};
	jule::Int _field_pos{jule::Int()};


	_127b06690_ScopeParser(jule::Ref<_127b060e0_Parser> __param_p, jule::Ref<_1275d7180_ScopeTree> __param_s, jule::Slice<jule::Ref<_127b06690_Stmt>> __param_stms, jule::Int __param_pos) {
		this->self = jule::Ref<_127b06690_ScopeParser>::make(this, nullptr);

		this->_field_p = __param_p;
		this->_field_s = __param_s;
		this->_field_stms = __param_stms;
		this->_field_pos = __param_pos;
	}

	~_127b06690_ScopeParser(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127b06690_ScopeParser(void) { this->self = jule::Ref<_127b06690_ScopeParser>::make(this, nullptr); }

	inline void _method_stop(void);


	inline jule::Bool _method_stopped(void);


	inline jule::Bool _method_finished(void);


	inline jule::Bool _method_is_last_st(void);


	inline void _method_push_err(_127941de0_Token,jule::Str);


	inline void _method_insert_as_next(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_127b06690_Stmt> _method_next(void);


	inline jule::Ref<_1275d7180_ScopeTree> _method_build_scope(jule::Slice<_127941de0_Token>);


	inline jule::Any _method_build_var_st(jule::Slice<_127941de0_Token>);


	inline jule::Any _method_build_ret_st(jule::Slice<_127941de0_Token>);


	inline jule::Any _method_build_while_next_iter(jule::Ref<_127b06690_Stmt>);


	inline jule::Ref<_1275d7180_WhileKind> _method_build_while_iter_kind(jule::Slice<_127941de0_Token>);


	inline jule::Slice<jule::Slice<_127941de0_Token>> _method_get_range_kind_keys_tokens(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_VarDecl> _method_build_range_kind_key(jule::Slice<_127941de0_Token>);


	inline jule::Slice<jule::Ref<_1275d7180_VarDecl>> _method_build_range_kind_keys(jule::Slice<jule::Slice<_127941de0_Token>>);


	inline void _method_setup_range_kind_keys_plain(jule::Ref<_1275d7180_RangeKind>,jule::Slice<_127941de0_Token>);


	inline void _method_setup_range_kind_keys_explicit(jule::Ref<_1275d7180_RangeKind>,jule::Slice<_127941de0_Token>);


	inline void _method_setup_range_kind_keys(jule::Ref<_1275d7180_RangeKind>,jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_RangeKind> _method_build_range_iter_kind(jule::Slice<_127941de0_Token>,jule::Slice<_127941de0_Token>,_127941de0_Token);


	inline jule::Any _method_build_common_iter_kind(jule::Slice<_127941de0_Token>,_127941de0_Token);


	inline jule::Any _method_build_common_iter(jule::Slice<_127941de0_Token>);


	inline jule::Any _method_buid_iter_st(jule::Ref<_127b06690_Stmt>);


	inline jule::Any _method_build_break_st(jule::Slice<_127941de0_Token>);


	inline jule::Any _method_build_cont_st(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_If> _method_build_if(jule::Slice<_127941de0_Token>&);


	inline jule::Ref<_1275d7180_Else> _method_build_else(jule::Slice<_127941de0_Token>);


	inline jule::Any _method_build_if_else_chain(jule::Slice<_127941de0_Token>);


	inline jule::Any _method_build_comment_st(_127941de0_Token);


	inline jule::Any _method_build_call_st(jule::Slice<_127941de0_Token>);


	inline jule::Any _method_build_co_call_st(jule::Slice<_127941de0_Token>);


	inline jule::Any _method_build_goto_st(jule::Slice<_127941de0_Token>);


	inline jule::Any _method_build_fall_st(jule::Slice<_127941de0_Token>);


	inline jule::Any _method_build_type_alias_st(jule::Slice<_127941de0_Token>);


	inline jule::Slice<jule::Ref<_1275d7180_Expr>> _method_build_case_exprs(jule::Slice<_127941de0_Token>&,jule::Bool);


	inline jule::Ref<_1275d7180_ScopeTree> _method_build_case_scope(jule::Slice<_127941de0_Token>&);


	inline std::tuple<jule::Ref<_1275d7180_Case>,jule::Bool> _method_build_case(jule::Slice<_127941de0_Token>&,jule::Bool);


	inline std::tuple<jule::Slice<jule::Ref<_1275d7180_Case>>,jule::Ref<_1275d7180_Else>> _method_build_cases(jule::Slice<_127941de0_Token>,jule::Bool);


	inline jule::Ref<_1275d7180_MatchCase> _method_build_match_case(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_ScopeTree> _method_build_scope_st(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_LabelSt> _method_build_label_st(jule::Slice<_127941de0_Token>);


	inline std::tuple<jule::Any,jule::Bool> _method_build_id_st(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_127c1fad0_AssignInfo> _method_build_assign_info(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_AssignLeft> _method_build_assign_l(jule::Slice<_127941de0_Token>);


	inline jule::Slice<jule::Ref<_1275d7180_AssignLeft>> _method_build_assign_ls(jule::Slice<jule::Slice<_127941de0_Token>>);


	inline std::tuple<jule::Ref<_1275d7180_AssignSt>,jule::Bool> _method_build_plain_assign(jule::Slice<_127941de0_Token>);


	inline std::tuple<jule::Ref<_1275d7180_AssignSt>,jule::Bool> _method_build_decl_assign(jule::Slice<_127941de0_Token>);


	inline std::tuple<jule::Ref<_1275d7180_AssignSt>,jule::Bool> _method_build_assign_st(jule::Slice<_127941de0_Token>);


	inline jule::Any _method_build_st(jule::Ref<_127b06690_Stmt>);


	inline void _method_build(jule::Slice<_127941de0_Token>,jule::Ref<_1275d7180_ScopeTree>);


	inline bool operator==(const _127b06690_ScopeParser &_Src) {
		return 
			this->_field_p == _Src._field_p &&
			this->_field_s == _Src._field_s &&
			this->_field_stms == _Src._field_stms &&
			this->_field_pos == _Src._field_pos;
	}

	inline bool operator!=(const _127b06690_ScopeParser &_Src) { return !this->operator==(_Src); }
};


struct _127b10a80_CallData {
	jule::Ref<_127b10a80_CallData> self{};

	jule::Slice<_127941de0_Token> _field_expr_tokens{jule::Slice<_127941de0_Token>()};
	jule::Slice<_127941de0_Token> _field_args_tokens{jule::Slice<_127941de0_Token>()};
	jule::Slice<_127941de0_Token> _field_generics_tokens{jule::Slice<_127941de0_Token>()};


	_127b10a80_CallData(jule::Slice<_127941de0_Token> __param_expr_tokens, jule::Slice<_127941de0_Token> __param_args_tokens, jule::Slice<_127941de0_Token> __param_generics_tokens) {
		this->self = jule::Ref<_127b10a80_CallData>::make(this, nullptr);

		this->_field_expr_tokens = __param_expr_tokens;
		this->_field_args_tokens = __param_args_tokens;
		this->_field_generics_tokens = __param_generics_tokens;
	}

	~_127b10a80_CallData(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127b10a80_CallData(void) { this->self = jule::Ref<_127b10a80_CallData>::make(this, nullptr); }

	inline bool operator==(const _127b10a80_CallData &_Src) {
		return 
			this->_field_expr_tokens == _Src._field_expr_tokens &&
			this->_field_args_tokens == _Src._field_args_tokens &&
			this->_field_generics_tokens == _Src._field_generics_tokens;
	}

	inline bool operator!=(const _127b10a80_CallData &_Src) { return !this->operator==(_Src); }
};


struct _127b10a80_Precedencer {
	jule::Ref<_127b10a80_Precedencer> self{};

	jule::Slice<jule::Slice<jule::Any>> _field_pairs{jule::Slice<jule::Slice<jule::Any>>()};


	_127b10a80_Precedencer(jule::Slice<jule::Slice<jule::Any>> __param_pairs) {
		this->self = jule::Ref<_127b10a80_Precedencer>::make(this, nullptr);

		this->_field_pairs = __param_pairs;
	}

	~_127b10a80_Precedencer(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127b10a80_Precedencer(void) { this->self = jule::Ref<_127b10a80_Precedencer>::make(this, nullptr); }

	inline void _method_set(jule::Int,jule::Any);


	inline jule::Any _method_get_lower(void);


	inline bool operator==(const _127b10a80_Precedencer &_Src) {
		return 
			this->_field_pairs == _Src._field_pairs;
	}

	inline bool operator!=(const _127b10a80_Precedencer &_Src) { return !this->operator==(_Src); }
};


struct _127b10a80_ExprBuilder {
	jule::Ref<_127b10a80_ExprBuilder> self{};

	jule::Ref<_127b060e0_Parser> _field_p{jule::Ref<_127b060e0_Parser>()};


	_127b10a80_ExprBuilder(jule::Ref<_127b060e0_Parser> __param_p) {
		this->self = jule::Ref<_127b10a80_ExprBuilder>::make(this, nullptr);

		this->_field_p = __param_p;
	}

	~_127b10a80_ExprBuilder(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127b10a80_ExprBuilder(void) { this->self = jule::Ref<_127b10a80_ExprBuilder>::make(this, nullptr); }

	inline void _method_push_err(_127941de0_Token,jule::Str,jule::Slice<jule::Any>);


	inline jule::Ref<_1275d7180_TupleExpr> _method_build_tuple(jule::Slice<jule::Slice<_127941de0_Token>>);


	inline jule::Ref<_1275d7180_LitExpr> _method_build_lit(_127941de0_Token);


	inline jule::Ref<_1275d7180_TypeDecl> _method_build_primitive_type(_127941de0_Token);


	inline jule::Any _method_build_single(_127941de0_Token);


	inline jule::Ref<_1275d7180_IdentExpr> _method_build_cpp_linked_ident(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_UnaryExpr> _method_build_unary(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_SubIdentExpr> _method_build_obj_sub_ident(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_NsSelectionExpr> _method_build_ns_sub_ident(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_TypeDecl> _method_build_type(jule::Slice<_127941de0_Token>);


	inline jule::Any _method_build_sub_ident(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_VariadicExpr> _method_build_variadic(jule::Slice<_127941de0_Token>);


	inline jule::Any _method_build_op_right(jule::Slice<_127941de0_Token>);


	inline jule::Any _method_build_between_parentheses(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_CastExpr> _method_try_build_cast(jule::Slice<_127941de0_Token>);


	inline void _method_push_arg(jule::Slice<jule::Ref<_1275d7180_Expr>>&,jule::Slice<_127941de0_Token>,_127941de0_Token);


	inline jule::Slice<jule::Ref<_1275d7180_Expr>> _method_build_args(jule::Slice<_127941de0_Token>);


	inline jule::Slice<jule::Ref<_1275d7180_TypeDecl>> _method_build_call_generics(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_FnCallExpr> _method_build_fn_call(_127941de0_Token,jule::Ref<_127b10a80_CallData>);


	inline jule::Any _method_build_parentheses_range(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_UnsafeExpr> _method_build_unsafe_expr(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_FnDecl> _method_build_anon_fn(jule::Slice<_127941de0_Token>);


	inline jule::Any _method_build_unsafe(jule::Slice<_127941de0_Token>);


	inline jule::Slice<jule::Slice<_127941de0_Token>> _method_get_brace_range_lit_expr_parts(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_FieldExprPair> _method_build_field_expr_pair(jule::Slice<_127941de0_Token>);


	inline jule::Any _method_build_struct_lit_expr(jule::Slice<_127941de0_Token>);


	inline jule::Slice<jule::Any> _method_build_struct_lit_exprs(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_StructLit> _method_build_typed_struct_literal(jule::Slice<_127941de0_Token>);


	inline jule::Any _method_build_brace_lit_part(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_BraceLit> _method_build_brace_lit(jule::Slice<_127941de0_Token>);


	inline jule::Any _method_build_brace_range(jule::Slice<_127941de0_Token>);


	inline jule::Slice<jule::Slice<_127941de0_Token>> _method_get_enumerable_parts(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_SliceExpr> _method_build_slice(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_IndexingExpr> _method_build_indexing(jule::Slice<_127941de0_Token>,jule::Slice<_127941de0_Token>,_127941de0_Token);


	inline jule::Ref<_1275d7180_SlicingExpr> _method_build_slicing(jule::Slice<_127941de0_Token>,jule::Slice<_127941de0_Token>,jule::Int,_127941de0_Token);


	inline jule::Any _method_build_bracket_range(jule::Slice<_127941de0_Token>);


	inline jule::Any _method_build_data(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_BinopExpr> _method_build_binop(jule::Slice<_127941de0_Token>,jule::Int);


	inline jule::Any _method_build(jule::Slice<_127941de0_Token>);


	inline jule::Any _method_build_kind(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_Expr> _method_build_from_tokens(jule::Slice<_127941de0_Token>);


	inline bool operator==(const _127b10a80_ExprBuilder &_Src) {
		return 
			this->_field_p == _Src._field_p;
	}

	inline bool operator!=(const _127b10a80_ExprBuilder &_Src) { return !this->operator==(_Src); }
};


struct _127b060e0_Parser {
	jule::Ref<_127b060e0_Parser> self{};

	jule::Ref<_1275d0e60_Ast> _field_ast{jule::Ref<_1275d0e60_Ast>()};
	jule::Slice<jule::Ref<_1275d7180_Directive>> _field_directives{jule::Slice<jule::Ref<_1275d7180_Directive>>()};
	jule::Ref<_1275d7180_CommentGroup> _field_comment_group{jule::Ref<_1275d7180_CommentGroup>()};
	jule::Slice<_136e99d00_Log> _field_errors{jule::Slice<_136e99d00_Log>()};


	_127b060e0_Parser(jule::Ref<_1275d0e60_Ast> __param_ast, jule::Slice<jule::Ref<_1275d7180_Directive>> __param_directives, jule::Ref<_1275d7180_CommentGroup> __param_comment_group, jule::Slice<_136e99d00_Log> __param_errors) {
		this->self = jule::Ref<_127b060e0_Parser>::make(this, nullptr);

		this->_field_ast = __param_ast;
		this->_field_directives = __param_directives;
		this->_field_comment_group = __param_comment_group;
		this->_field_errors = __param_errors;
	}

	~_127b060e0_Parser(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127b060e0_Parser(void) { this->self = jule::Ref<_127b060e0_Parser>::make(this, nullptr); }

	inline void _method_stop(void);


	inline jule::Bool _method_stopped(void);


	inline void _method_push_err(_127941de0_Token,jule::Str,jule::Slice<jule::Any>);


	inline jule::Ref<_1275d7180_Expr> _method_build_expr(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_Directive> _method_get_directive(jule::Ref<_1275d7180_Comment>);


	inline void _method_push_directive(jule::Ref<_1275d7180_Comment>);


	inline void _method_process_comment(jule::Ref<_1275d7180_Comment>);


	inline jule::Ref<_1275d7180_ScopeTree> _method_build_scope(jule::Slice<_127941de0_Token>);


	inline std::tuple<jule::Ref<_1275d7180_TypeDecl>,jule::Bool> _method___build_type(jule::Slice<_127941de0_Token>,jule::Int*,jule::Bool);


	inline std::tuple<jule::Ref<_1275d7180_TypeDecl>,jule::Bool> _method_build_type(jule::Slice<_127941de0_Token>,jule::Int*,jule::Bool);


	inline jule::Ref<_1275d7180_TypeAliasDecl> _method_build_type_alias_decl(jule::Slice<_127941de0_Token>);


	inline void _method_build_var_type_and_expr(jule::Ref<_1275d7180_VarDecl>,jule::Slice<_127941de0_Token>);


	inline void _method_build_var_common(jule::Ref<_1275d7180_VarDecl>,jule::Slice<_127941de0_Token>);


	inline void _method_build_var_begin(jule::Ref<_1275d7180_VarDecl>,jule::Ref<jule::Int>,jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_VarDecl> _method_build_var(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_GenericDecl> _method_build_generic(jule::Slice<_127941de0_Token>);


	inline jule::Slice<jule::Ref<_1275d7180_GenericDecl>> _method_build_generics(jule::Slice<_127941de0_Token>,_127941de0_Token);


	inline jule::Ref<_1275d7180_ParamDecl> _method_build_self_param(jule::Slice<_127941de0_Token>);


	inline void _method_param_type_begin(jule::Ref<_1275d7180_ParamDecl>,jule::Int&,jule::Slice<_127941de0_Token>);


	inline void _method_build_param_type(jule::Ref<_1275d7180_ParamDecl>,jule::Slice<_127941de0_Token>,jule::Bool);


	inline void _method_param_body_id(jule::Ref<_1275d7180_ParamDecl>,_127941de0_Token);


	inline void _method_build_param_body(jule::Ref<_1275d7180_ParamDecl>,jule::Ref<jule::Int>,jule::Slice<_127941de0_Token>,jule::Bool);


	inline jule::Ref<_1275d7180_ParamDecl> _method_build_param(jule::Slice<_127941de0_Token>,jule::Bool);


	inline void _method_check_params(jule::Slice<jule::Ref<_1275d7180_ParamDecl>>);


	inline jule::Slice<jule::Ref<_1275d7180_ParamDecl>> _method_build_params(jule::Slice<_127941de0_Token>,jule::Bool,jule::Bool);


	inline std::tuple<jule::Ref<_1275d7180_RetTypeDecl>,jule::Bool> _method_build_multi_ret_type(jule::Slice<_127941de0_Token>,jule::Int&);


	inline std::tuple<jule::Ref<_1275d7180_RetTypeDecl>,jule::Bool> _method_build_ret_type(jule::Slice<_127941de0_Token>,jule::Int&);


	inline jule::Ref<_1275d7180_FnDecl> _method_build_fn_prototype(jule::Slice<_127941de0_Token>,jule::Int&,jule::Bool,jule::Bool);


	inline jule::Ref<_1275d7180_FnDecl> _method_build_fn(jule::Slice<_127941de0_Token>,jule::Bool,jule::Bool,jule::Bool);


	inline jule::Slice<_127941de0_Token> _method_get_use_decl_selectors(jule::Slice<_127941de0_Token>);


	inline void _method_build_cpp_use_decl(jule::Ref<_1275d7180_UseDecl>,jule::Slice<_127941de0_Token>);


	inline void _method_build_std_use_decl(jule::Ref<_1275d7180_UseDecl>,jule::Slice<_127941de0_Token>);


	inline void _method_build_ident_use_decl(jule::Ref<_1275d7180_UseDecl>,jule::Slice<_127941de0_Token>);


	inline void _method_parse_use_decl(jule::Ref<_1275d7180_UseDecl>,jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_UseDecl> _method_build_use_decl(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_Expr> _method_build_enum_item_expr(jule::Ref<jule::Int>,jule::Slice<_127941de0_Token>);


	inline jule::Slice<jule::Ref<_1275d7180_EnumItemDecl>> _method_build_enum_items(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_EnumDecl> _method_build_enum_decl(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_FieldDecl> _method_build_field(jule::Slice<_127941de0_Token>);


	inline jule::Slice<jule::Ref<_1275d7180_FieldDecl>> _method_build_struct_decl_fields(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_StructDecl> _method_build_struct_decl(jule::Slice<_127941de0_Token>);


	inline void _method_check_method_receiver(jule::Ref<_1275d7180_FnDecl>);


	inline jule::Slice<jule::Ref<_1275d7180_FnDecl>> _method_build_trait_methods(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_TraitDecl> _method_build_trait_decl(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_FnDecl> _method_build_cpp_link_fn(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_VarDecl> _method_build_cpp_link_var(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_StructDecl> _method_build_cpp_link_struct(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_TypeAliasDecl> _method_build_cpp_link_type_alias(jule::Slice<_127941de0_Token>);


	inline jule::Any _method_build_cpp_link(jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_FnDecl> _method_get_method(jule::Slice<_127941de0_Token>);


	inline void _method_parse_impl_trait(jule::Ref<_1275d7180_Impl>,jule::Slice<_127941de0_Token>);


	inline void _method_parse_impl_struct(jule::Ref<_1275d7180_Impl>,jule::Slice<_127941de0_Token>);


	inline void _method_parse_impl_body(jule::Ref<_1275d7180_Impl>,jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_Impl> _method_build_impl(jule::Slice<_127941de0_Token>);


	inline jule::Any _method_build_node_data(jule::Slice<_127941de0_Token>);


	inline void _method_check_comment_group(_1275d7180_Node);


	inline void _method_check_directive(_1275d7180_Node);


	inline void _method_apply_meta(_1275d7180_Node,jule::Bool);


	inline void _method_check_use_decl(_1275d7180_Node);


	inline std::tuple<jule::Bool,jule::Any> _method_build_general_scope_node_data(jule::Slice<_127941de0_Token>);


	inline _1275d7180_Node _method_parse_node(jule::Slice<_127941de0_Token>);


	inline void _method_append_node(jule::Slice<_127941de0_Token>);


	inline void _method_check_ranges(jule::Slice<_127941de0_Token>);


	inline void _method_parse(jule::Ref<_126f67810_File>);


	inline bool operator==(const _127b060e0_Parser &_Src) {
		return 
			this->_field_ast == _Src._field_ast &&
			this->_field_directives == _Src._field_directives &&
			this->_field_comment_group == _Src._field_comment_group &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _127b060e0_Parser &_Src) { return !this->operator==(_Src); }
};


struct _127b2c380_TypeBuilder {
	jule::Ref<_127b2c380_TypeBuilder> self{};

	jule::Ref<_127b060e0_Parser> _field_p{jule::Ref<_127b060e0_Parser>()};
	jule::Slice<_127941de0_Token> _field_tokens{jule::Slice<_127941de0_Token>()};
	jule::Int* _field_i{nullptr};
	jule::Bool _field_err{jule::Bool()};


	_127b2c380_TypeBuilder(jule::Ref<_127b060e0_Parser> __param_p, jule::Slice<_127941de0_Token> __param_tokens, jule::Int* __param_i, jule::Bool __param_err) {
		this->self = jule::Ref<_127b2c380_TypeBuilder>::make(this, nullptr);

		this->_field_p = __param_p;
		this->_field_tokens = __param_tokens;
		this->_field_i = __param_i;
		this->_field_err = __param_err;
	}

	~_127b2c380_TypeBuilder(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127b2c380_TypeBuilder(void) { this->self = jule::Ref<_127b2c380_TypeBuilder>::make(this, nullptr); }

	inline void _method_push_err(_127941de0_Token,jule::Str);


	inline jule::Ref<_1275d7180_TypeDecl> _method_build_prim(void);


	inline jule::Ref<_1275d7180_TypeDecl> _method_build_namespace(void);


	inline jule::Slice<jule::Ref<_1275d7180_TypeDecl>> _method_build_generics(void);


	inline jule::Slice<jule::Slice<_127941de0_Token>> _method_ident_generics(void);


	inline jule::Ref<_1275d7180_TypeDecl> _method_build_ident(void);


	inline jule::Ref<_1275d7180_TypeDecl> _method_build_cpp_link(void);


	inline jule::Ref<_1275d7180_TypeDecl> _method_build_fn(void);


	inline jule::Ref<_1275d7180_TypeDecl> _method_build_ptr(void);


	inline jule::Ref<_1275d7180_TypeDecl> _method_build_ref(void);


	inline jule::Ref<_1275d7180_TypeDecl> _method_build_op(void);


	inline jule::Ref<_1275d7180_TypeDecl> _method_build_slc(void);


	inline jule::Ref<_1275d7180_TypeDecl> _method_build_arr(void);


	inline jule::Ref<_1275d7180_TypeDecl> _method_build_map(jule::Int,jule::Slice<_127941de0_Token>);


	inline jule::Ref<_1275d7180_TypeDecl> _method_build_enumerable(void);


	inline jule::Ref<_1275d7180_TypeDecl> _method_step(void);


	inline std::tuple<jule::Ref<_1275d7180_TypeDecl>,jule::Bool> _method_build(void);


	inline bool operator==(const _127b2c380_TypeBuilder &_Src) {
		return 
			this->_field_p == _Src._field_p &&
			this->_field_tokens == _Src._field_tokens &&
			this->_field_i == _Src._field_i &&
			this->_field_err == _Src._field_err;
	}

	inline bool operator!=(const _127b2c380_TypeBuilder &_Src) { return !this->operator==(_Src); }
};


struct _130c83140_Const {
	jule::Ref<_130c83140_Const> self{};

	jule::Any _field_data{jule::Any()};


	_130c83140_Const(jule::Any __param_data) {
		this->self = jule::Ref<_130c83140_Const>::make(this, nullptr);

		this->_field_data = __param_data;
	}

	~_130c83140_Const(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_130c83140_Const(void) { this->self = jule::Ref<_130c83140_Const>::make(this, nullptr); }

	inline jule::I64 _method_read_i64(void);


	inline jule::U64 _method_read_u64(void);


	inline jule::Bool _method_read_bool(void);


	inline jule::Str _method_read_str(void);


	inline jule::F64 _method_read_f64(void);


	inline jule::I64 _method_as_i64(void);


	inline jule::U64 _method_as_u64(void);


	inline jule::F64 _method_as_f64(void);


	inline void _method_set_i64(jule::I64);


	inline void _method_set_u64(jule::U64);


	inline void _method_set_bool(jule::Bool);


	inline void _method_set_str(jule::Str);


	inline void _method_set_f64(jule::F64);


	inline void _method_set_nil(void);


	inline void _method_set_by_type(jule::F64,_130c83140_Const);


	inline jule::Bool _method_is_i64(void);


	inline jule::Bool _method_is_u64(void);


	inline jule::Bool _method_is_bool(void);


	inline jule::Bool _method_is_str(void);


	inline jule::Bool _method_is_f64(void);


	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_are_same_types(_130c83140_Const);


	inline jule::Bool _method_and(_130c83140_Const);


	inline jule::Bool _method_or(_130c83140_Const);


	inline jule::Bool _method_eqs(_130c83140_Const);


	inline jule::Bool _method_lt(_130c83140_Const);


	inline jule::Bool _method_gt(_130c83140_Const);


	inline jule::Bool _method_add(_130c83140_Const);


	inline jule::Bool _method_sub(_130c83140_Const);


	inline jule::Bool _method_mul(_130c83140_Const);


	inline jule::Bool _method_div(_130c83140_Const);


	inline jule::Bool _method_mod(_130c83140_Const);


	inline jule::Bool _method_bitwise_and(_130c83140_Const);


	inline jule::Bool _method_bitwise_or(_130c83140_Const);


	inline jule::Bool _method_xor(_130c83140_Const);


	inline jule::Bool _method_lshift(_130c83140_Const);


	inline jule::Bool _method_rshift(_130c83140_Const);


	inline bool operator==(const _130c83140_Const &_Src) {
		return 
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _130c83140_Const &_Src) { return !this->operator==(_Src); }
};


struct _127b2e960_FieldIns {
	jule::Ref<_127b2e960_FieldIns> self{};

	jule::Ref<_127b2e960_Field> _field_decl{jule::Ref<_127b2e960_Field>()};
	jule::Ref<_1304dc9b0_TypeKind> _field_kind{jule::Ref<_1304dc9b0_TypeKind>()};


	_127b2e960_FieldIns(jule::Ref<_127b2e960_Field> __param_decl, jule::Ref<_1304dc9b0_TypeKind> __param_kind) {
		this->self = jule::Ref<_127b2e960_FieldIns>::make(this, nullptr);

		this->_field_decl = __param_decl;
		this->_field_kind = __param_kind;
	}

	~_127b2e960_FieldIns(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127b2e960_FieldIns(void) { this->self = jule::Ref<_127b2e960_FieldIns>::make(this, nullptr); }

	inline bool operator==(const _127b2e960_FieldIns &_Src) {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _127b2e960_FieldIns &_Src) { return !this->operator==(_Src); }
};


struct _127b2e960_StructIns: public _1304dc9b0_Kind {
	jule::Ref<_127b2e960_StructIns> self{};

	jule::Bool _field_checked{jule::Bool()};
	jule::Ref<_127b2e960_Struct> _field_decl{jule::Ref<_127b2e960_Struct>()};
	jule::Slice<jule::Ref<_1304dc9b0_TypeKind>> _field_generics{jule::Slice<jule::Ref<_1304dc9b0_TypeKind>>()};
	jule::Slice<jule::Ref<_127b2e960_FieldIns>> _field_fields{jule::Slice<jule::Ref<_127b2e960_FieldIns>>()};
	jule::Slice<jule::Ref<_127ed52e0_Fn>> _field_methods{jule::Slice<jule::Ref<_127ed52e0_Fn>>()};
	jule::Bool _field_has_mut{jule::Bool()};


	_127b2e960_StructIns(jule::Bool __param_checked, jule::Ref<_127b2e960_Struct> __param_decl, jule::Slice<jule::Ref<_1304dc9b0_TypeKind>> __param_generics, jule::Slice<jule::Ref<_127b2e960_FieldIns>> __param_fields, jule::Slice<jule::Ref<_127ed52e0_Fn>> __param_methods, jule::Bool __param_has_mut) {
		this->self = jule::Ref<_127b2e960_StructIns>::make(this, nullptr);

		this->_field_checked = __param_checked;
		this->_field_decl = __param_decl;
		this->_field_generics = __param_generics;
		this->_field_fields = __param_fields;
		this->_field_methods = __param_methods;
		this->_field_has_mut = __param_has_mut;
	}

	~_127b2e960_StructIns(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127b2e960_StructIns(void) { this->self = jule::Ref<_127b2e960_StructIns>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1304dc9b0_TypeKind>);


	inline jule::Ref<_127ed52e0_Fn> _method_find_method(jule::Str,jule::Bool);


	inline jule::Ref<_127b2e960_FieldIns> _method_find_field(jule::Str);


	inline bool operator==(const _127b2e960_StructIns &_Src) {
		return 
			this->_field_checked == _Src._field_checked &&
			this->_field_decl == _Src._field_decl &&
			this->_field_generics == _Src._field_generics &&
			this->_field_fields == _Src._field_fields &&
			this->_field_methods == _Src._field_methods &&
			this->_field_has_mut == _Src._field_has_mut;
	}

	inline bool operator!=(const _127b2e960_StructIns &_Src) { return !this->operator==(_Src); }
};


struct _127ed52e0_RetType {
	jule::Ref<_127ed52e0_RetType> self{};

	jule::Ref<_1304dc9b0_TypeSymbol> _field_kind{jule::Ref<_1304dc9b0_TypeSymbol>()};
	jule::Slice<_127941de0_Token> _field_idents{jule::Slice<_127941de0_Token>()};


	_127ed52e0_RetType(jule::Ref<_1304dc9b0_TypeSymbol> __param_kind, jule::Slice<_127941de0_Token> __param_idents) {
		this->self = jule::Ref<_127ed52e0_RetType>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_idents = __param_idents;
	}

	~_127ed52e0_RetType(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127ed52e0_RetType(void) { this->self = jule::Ref<_127ed52e0_RetType>::make(this, nullptr); }

	inline bool operator==(const _127ed52e0_RetType &_Src) {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_idents == _Src._field_idents;
	}

	inline bool operator!=(const _127ed52e0_RetType &_Src) { return !this->operator==(_Src); }
};


struct _127ed52e0_ParamIns {
	jule::Ref<_127ed52e0_ParamIns> self{};

	jule::Ref<_127ed52e0_Param> _field_decl{jule::Ref<_127ed52e0_Param>()};
	jule::Ref<_1304dc9b0_TypeKind> _field_kind{jule::Ref<_1304dc9b0_TypeKind>()};


	_127ed52e0_ParamIns(jule::Ref<_127ed52e0_Param> __param_decl, jule::Ref<_1304dc9b0_TypeKind> __param_kind) {
		this->self = jule::Ref<_127ed52e0_ParamIns>::make(this, nullptr);

		this->_field_decl = __param_decl;
		this->_field_kind = __param_kind;
	}

	~_127ed52e0_ParamIns(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127ed52e0_ParamIns(void) { this->self = jule::Ref<_127ed52e0_ParamIns>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline bool operator==(const _127ed52e0_ParamIns &_Src) {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _127ed52e0_ParamIns &_Src) { return !this->operator==(_Src); }
};


struct _127ed52e0_FnIns: public _1304dc9b0_Kind {
	jule::Ref<_127ed52e0_FnIns> self{};

	jule::Ref<_127b2e960_StructIns> _field_owner{jule::Ref<_127b2e960_StructIns>()};
	jule::Ref<_127ed52e0_Fn> _field_decl{jule::Ref<_127ed52e0_Fn>()};
	jule::Slice<jule::Ref<_1304dc9b0_TypeKind>> _field_generics{jule::Slice<jule::Ref<_1304dc9b0_TypeKind>>()};
	jule::Slice<jule::Ref<_127ed52e0_ParamIns>> _field_params{jule::Slice<jule::Ref<_127ed52e0_ParamIns>>()};
	jule::Ref<_1304dc9b0_TypeKind> _field_result{jule::Ref<_1304dc9b0_TypeKind>()};
	jule::Ref<_1300a11b0_Scope> _field_scope{jule::Ref<_1300a11b0_Scope>()};
	jule::Fn<jule::Ref<_13064b610_Data>(jule::Ref<_13064b610_Eval>,jule::Ref<_1275d7180_FnCallExpr>,jule::Ref<_13064b610_Data>)> _field_caller{jule::Fn<jule::Ref<_13064b610_Data>(jule::Ref<_13064b610_Eval>,jule::Ref<_1275d7180_FnCallExpr>,jule::Ref<_13064b610_Data>)>()};
	jule::Bool _field_reloaded{jule::Bool()};
	jule::Bool _field_anon{jule::Bool()};


	_127ed52e0_FnIns(jule::Ref<_127b2e960_StructIns> __param_owner, jule::Ref<_127ed52e0_Fn> __param_decl, jule::Slice<jule::Ref<_1304dc9b0_TypeKind>> __param_generics, jule::Slice<jule::Ref<_127ed52e0_ParamIns>> __param_params, jule::Ref<_1304dc9b0_TypeKind> __param_result, jule::Ref<_1300a11b0_Scope> __param_scope, jule::Fn<jule::Ref<_13064b610_Data>(jule::Ref<_13064b610_Eval>,jule::Ref<_1275d7180_FnCallExpr>,jule::Ref<_13064b610_Data>)> __param_caller, jule::Bool __param_reloaded, jule::Bool __param_anon) {
		this->self = jule::Ref<_127ed52e0_FnIns>::make(this, nullptr);

		this->_field_owner = __param_owner;
		this->_field_decl = __param_decl;
		this->_field_generics = __param_generics;
		this->_field_params = __param_params;
		this->_field_result = __param_result;
		this->_field_scope = __param_scope;
		this->_field_caller = __param_caller;
		this->_field_reloaded = __param_reloaded;
		this->_field_anon = __param_anon;
	}

	~_127ed52e0_FnIns(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127ed52e0_FnIns(void) { this->self = jule::Ref<_127ed52e0_FnIns>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1304dc9b0_TypeKind>);


	inline jule::Bool _method_is_builtin(void);


	inline jule::Bool _method_is_anon(void);


	inline bool operator==(const _127ed52e0_FnIns &_Src) {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_decl == _Src._field_decl &&
			this->_field_generics == _Src._field_generics &&
			this->_field_params == _Src._field_params &&
			this->_field_result == _Src._field_result &&
			this->_field_scope == _Src._field_scope &&
			this->_field_caller == _Src._field_caller &&
			this->_field_reloaded == _Src._field_reloaded &&
			this->_field_anon == _Src._field_anon;
	}

	inline bool operator!=(const _127ed52e0_FnIns &_Src) { return !this->operator==(_Src); }
};


struct _127ff3480_SymbolBuilder {
	jule::Ref<_127ff3480_SymbolBuilder> self{};

	jule::Ref<_127ff3480_SymbolBuilder> _field_owner{jule::Ref<_127ff3480_SymbolBuilder>()};
	jule::Trait<_1300a4650_Importer> _field_importer{jule::Trait<_1300a4650_Importer>()};
	jule::Slice<_136e99d00_Log> _field_errors{jule::Slice<_136e99d00_Log>()};
	jule::Ref<_1275d0e60_Ast> _field_ast{jule::Ref<_1275d0e60_Ast>()};
	jule::Ref<_13032dc50_SymbolTable> _field_table{jule::Ref<_13032dc50_SymbolTable>()};


	_127ff3480_SymbolBuilder(jule::Ref<_127ff3480_SymbolBuilder> __param_owner, jule::Trait<_1300a4650_Importer> __param_importer, jule::Slice<_136e99d00_Log> __param_errors, jule::Ref<_1275d0e60_Ast> __param_ast, jule::Ref<_13032dc50_SymbolTable> __param_table) {
		this->self = jule::Ref<_127ff3480_SymbolBuilder>::make(this, nullptr);

		this->_field_owner = __param_owner;
		this->_field_importer = __param_importer;
		this->_field_errors = __param_errors;
		this->_field_ast = __param_ast;
		this->_field_table = __param_table;
	}

	~_127ff3480_SymbolBuilder(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127ff3480_SymbolBuilder(void) { this->self = jule::Ref<_127ff3480_SymbolBuilder>::make(this, nullptr); }

	inline jule::Ref<_127ff3480_SymbolBuilder> _method_get_root(void);


	inline void _method_push_err(_127941de0_Token,jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_cpp_use_decl_path(jule::Ref<_1275d7180_UseDecl>);


	inline jule::Ref<_1300a4650_ImportInfo> _method_build_cpp_header_import(jule::Ref<_1275d7180_UseDecl>);


	inline jule::Ref<_1300a4650_ImportInfo> _method_build_std_import(jule::Ref<_1275d7180_UseDecl>);


	inline jule::Ref<_1300a4650_ImportInfo> _method_build_ident_import(jule::Ref<_1275d7180_UseDecl>);


	inline jule::Ref<_1300a4650_ImportInfo> _method_build_import(jule::Ref<_1275d7180_UseDecl>);


	inline jule::Bool _method_check_duplicate_use_decl(jule::Ref<_1300a4650_ImportInfo>);


	inline void _method_impl_import_selections(jule::Ref<_1300a4650_ImportInfo>,jule::Ref<_1275d7180_UseDecl>);


	inline jule::Str _method_get_as_link_path(jule::Str);


	inline void _method_push_cross_cycle_error(jule::Ref<_127ff3480_SymbolBuilder>,jule::Ref<_1300a4650_ImportInfo>,_127941de0_Token);


	inline jule::Bool _method_check_import_cycles(jule::Ref<_1300a4650_ImportInfo>,jule::Ref<_1275d7180_UseDecl>);


	inline jule::Bool _method_import_package(jule::Ref<_1300a4650_ImportInfo>,jule::Ref<_1275d7180_UseDecl>);


	inline jule::Ref<_1300a4650_ImportInfo> _method_import_use_decl(jule::Ref<_1275d7180_UseDecl>);


	inline void _method_import_use_decls(void);


	inline void _method_append_decl(_1275d7180_Node);


	inline void _method_append_decls(void);


	inline void _method_append_impls(void);


	inline void _method_push_directive_pass(jule::Ref<_1275d7180_Directive>);


	inline void _method_append_top_directives(void);


	inline void _method_build(void);


	inline bool operator==(const _127ff3480_SymbolBuilder &_Src) {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_importer == _Src._field_importer &&
			this->_field_errors == _Src._field_errors &&
			this->_field_ast == _Src._field_ast &&
			this->_field_table == _Src._field_table;
	}

	inline bool operator!=(const _127ff3480_SymbolBuilder &_Src) { return !this->operator==(_Src); }
};


struct _1300a11b0_If {
	jule::Ref<_1300a11b0_If> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Ref<_1300a11b0_Scope> _field_scope{jule::Ref<_1300a11b0_Scope>()};


	_1300a11b0_If(jule::Any __param_expr, jule::Ref<_1300a11b0_Scope> __param_scope) {
		this->self = jule::Ref<_1300a11b0_If>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_scope = __param_scope;
	}

	~_1300a11b0_If(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1300a11b0_If(void) { this->self = jule::Ref<_1300a11b0_If>::make(this, nullptr); }

	inline bool operator==(const _1300a11b0_If &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1300a11b0_If &_Src) { return !this->operator==(_Src); }
};


struct _1300a11b0_Else {
	jule::Ref<_1300a11b0_Else> self{};

	jule::Ref<_1300a11b0_Scope> _field_scope{jule::Ref<_1300a11b0_Scope>()};


	_1300a11b0_Else(jule::Ref<_1300a11b0_Scope> __param_scope) {
		this->self = jule::Ref<_1300a11b0_Else>::make(this, nullptr);

		this->_field_scope = __param_scope;
	}

	~_1300a11b0_Else(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1300a11b0_Else(void) { this->self = jule::Ref<_1300a11b0_Else>::make(this, nullptr); }

	inline bool operator==(const _1300a11b0_Else &_Src) {
		return 
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1300a11b0_Else &_Src) { return !this->operator==(_Src); }
};


struct _1300a11b0_Conditional {
	jule::Ref<_1300a11b0_Conditional> self{};

	jule::Slice<jule::Ref<_1300a11b0_If>> _field_elifs{jule::Slice<jule::Ref<_1300a11b0_If>>()};
	jule::Ref<_1300a11b0_Else> _field_default{jule::Ref<_1300a11b0_Else>()};


	_1300a11b0_Conditional(jule::Slice<jule::Ref<_1300a11b0_If>> __param_elifs, jule::Ref<_1300a11b0_Else> __param_default) {
		this->self = jule::Ref<_1300a11b0_Conditional>::make(this, nullptr);

		this->_field_elifs = __param_elifs;
		this->_field_default = __param_default;
	}

	~_1300a11b0_Conditional(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1300a11b0_Conditional(void) { this->self = jule::Ref<_1300a11b0_Conditional>::make(this, nullptr); }

	inline bool operator==(const _1300a11b0_Conditional &_Src) {
		return 
			this->_field_elifs == _Src._field_elifs &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _1300a11b0_Conditional &_Src) { return !this->operator==(_Src); }
};


struct _1300a11b0_InfIter {
	jule::Ref<_1300a11b0_InfIter> self{};

	jule::Ref<_1300a11b0_Scope> _field_scope{jule::Ref<_1300a11b0_Scope>()};


	_1300a11b0_InfIter(jule::Ref<_1300a11b0_Scope> __param_scope) {
		this->self = jule::Ref<_1300a11b0_InfIter>::make(this, nullptr);

		this->_field_scope = __param_scope;
	}

	~_1300a11b0_InfIter(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1300a11b0_InfIter(void) { this->self = jule::Ref<_1300a11b0_InfIter>::make(this, nullptr); }

	inline bool operator==(const _1300a11b0_InfIter &_Src) {
		return 
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1300a11b0_InfIter &_Src) { return !this->operator==(_Src); }
};


struct _1300a11b0_WhileIter {
	jule::Ref<_1300a11b0_WhileIter> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Any _field_next{jule::Any()};
	jule::Ref<_1300a11b0_Scope> _field_scope{jule::Ref<_1300a11b0_Scope>()};


	_1300a11b0_WhileIter(jule::Any __param_expr, jule::Any __param_next, jule::Ref<_1300a11b0_Scope> __param_scope) {
		this->self = jule::Ref<_1300a11b0_WhileIter>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_next = __param_next;
		this->_field_scope = __param_scope;
	}

	~_1300a11b0_WhileIter(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1300a11b0_WhileIter(void) { this->self = jule::Ref<_1300a11b0_WhileIter>::make(this, nullptr); }

	inline jule::Bool _method_is_while_next(void);


	inline bool operator==(const _1300a11b0_WhileIter &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_next == _Src._field_next &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1300a11b0_WhileIter &_Src) { return !this->operator==(_Src); }
};


struct _1300a11b0_RangeIter {
	jule::Ref<_1300a11b0_RangeIter> self{};

	jule::Ref<_13064b610_Data> _field_expr{jule::Ref<_13064b610_Data>()};
	jule::Ref<_1300a11b0_Scope> _field_scope{jule::Ref<_1300a11b0_Scope>()};
	jule::Ref<_1303533b0_Var> _field_key_a{jule::Ref<_1303533b0_Var>()};
	jule::Ref<_1303533b0_Var> _field_key_b{jule::Ref<_1303533b0_Var>()};


	_1300a11b0_RangeIter(jule::Ref<_13064b610_Data> __param_expr, jule::Ref<_1300a11b0_Scope> __param_scope, jule::Ref<_1303533b0_Var> __param_key_a, jule::Ref<_1303533b0_Var> __param_key_b) {
		this->self = jule::Ref<_1300a11b0_RangeIter>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_scope = __param_scope;
		this->_field_key_a = __param_key_a;
		this->_field_key_b = __param_key_b;
	}

	~_1300a11b0_RangeIter(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1300a11b0_RangeIter(void) { this->self = jule::Ref<_1300a11b0_RangeIter>::make(this, nullptr); }

	inline bool operator==(const _1300a11b0_RangeIter &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope &&
			this->_field_key_a == _Src._field_key_a &&
			this->_field_key_b == _Src._field_key_b;
	}

	inline bool operator!=(const _1300a11b0_RangeIter &_Src) { return !this->operator==(_Src); }
};


struct _1300a11b0_ContSt {
	jule::Ref<_1300a11b0_ContSt> self{};

	jule::Uintptr _field_it{jule::Uintptr()};


	_1300a11b0_ContSt(jule::Uintptr __param_it) {
		this->self = jule::Ref<_1300a11b0_ContSt>::make(this, nullptr);

		this->_field_it = __param_it;
	}

	~_1300a11b0_ContSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1300a11b0_ContSt(void) { this->self = jule::Ref<_1300a11b0_ContSt>::make(this, nullptr); }

	inline bool operator==(const _1300a11b0_ContSt &_Src) {
		return 
			this->_field_it == _Src._field_it;
	}

	inline bool operator!=(const _1300a11b0_ContSt &_Src) { return !this->operator==(_Src); }
};


struct _1300a11b0_BreakSt {
	jule::Ref<_1300a11b0_BreakSt> self{};

	jule::Uintptr _field_it{jule::Uintptr()};
	jule::Uintptr _field_mtch{jule::Uintptr()};


	_1300a11b0_BreakSt(jule::Uintptr __param_it, jule::Uintptr __param_mtch) {
		this->self = jule::Ref<_1300a11b0_BreakSt>::make(this, nullptr);

		this->_field_it = __param_it;
		this->_field_mtch = __param_mtch;
	}

	~_1300a11b0_BreakSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1300a11b0_BreakSt(void) { this->self = jule::Ref<_1300a11b0_BreakSt>::make(this, nullptr); }

	inline bool operator==(const _1300a11b0_BreakSt &_Src) {
		return 
			this->_field_it == _Src._field_it &&
			this->_field_mtch == _Src._field_mtch;
	}

	inline bool operator!=(const _1300a11b0_BreakSt &_Src) { return !this->operator==(_Src); }
};


struct _1300a11b0_Label {
	jule::Ref<_1300a11b0_Label> self{};

	jule::Str _field_ident{jule::Str()};


	_1300a11b0_Label(jule::Str __param_ident) {
		this->self = jule::Ref<_1300a11b0_Label>::make(this, nullptr);

		this->_field_ident = __param_ident;
	}

	~_1300a11b0_Label(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1300a11b0_Label(void) { this->self = jule::Ref<_1300a11b0_Label>::make(this, nullptr); }

	inline bool operator==(const _1300a11b0_Label &_Src) {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1300a11b0_Label &_Src) { return !this->operator==(_Src); }
};


struct _1300a11b0_GotoSt {
	jule::Ref<_1300a11b0_GotoSt> self{};

	jule::Str _field_ident{jule::Str()};


	_1300a11b0_GotoSt(jule::Str __param_ident) {
		this->self = jule::Ref<_1300a11b0_GotoSt>::make(this, nullptr);

		this->_field_ident = __param_ident;
	}

	~_1300a11b0_GotoSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1300a11b0_GotoSt(void) { this->self = jule::Ref<_1300a11b0_GotoSt>::make(this, nullptr); }

	inline bool operator==(const _1300a11b0_GotoSt &_Src) {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1300a11b0_GotoSt &_Src) { return !this->operator==(_Src); }
};


struct _1300a11b0_Postfix {
	jule::Ref<_1300a11b0_Postfix> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_1300a11b0_Postfix(jule::Any __param_expr, jule::Str __param_op) {
		this->self = jule::Ref<_1300a11b0_Postfix>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_op = __param_op;
	}

	~_1300a11b0_Postfix(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1300a11b0_Postfix(void) { this->self = jule::Ref<_1300a11b0_Postfix>::make(this, nullptr); }

	inline bool operator==(const _1300a11b0_Postfix &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1300a11b0_Postfix &_Src) { return !this->operator==(_Src); }
};


struct _1300a11b0_Assign {
	jule::Ref<_1300a11b0_Assign> self{};

	jule::Any _field_l{jule::Any()};
	jule::Any _field_r{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_1300a11b0_Assign(jule::Any __param_l, jule::Any __param_r, jule::Str __param_op) {
		this->self = jule::Ref<_1300a11b0_Assign>::make(this, nullptr);

		this->_field_l = __param_l;
		this->_field_r = __param_r;
		this->_field_op = __param_op;
	}

	~_1300a11b0_Assign(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1300a11b0_Assign(void) { this->self = jule::Ref<_1300a11b0_Assign>::make(this, nullptr); }

	inline bool operator==(const _1300a11b0_Assign &_Src) {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1300a11b0_Assign &_Src) { return !this->operator==(_Src); }
};


struct _1300a11b0_MultiAssign {
	jule::Ref<_1300a11b0_MultiAssign> self{};

	jule::Slice<jule::Any> _field_l{jule::Slice<jule::Any>()};
	jule::Any _field_r{jule::Any()};


	_1300a11b0_MultiAssign(jule::Slice<jule::Any> __param_l, jule::Any __param_r) {
		this->self = jule::Ref<_1300a11b0_MultiAssign>::make(this, nullptr);

		this->_field_l = __param_l;
		this->_field_r = __param_r;
	}

	~_1300a11b0_MultiAssign(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1300a11b0_MultiAssign(void) { this->self = jule::Ref<_1300a11b0_MultiAssign>::make(this, nullptr); }

	inline bool operator==(const _1300a11b0_MultiAssign &_Src) {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r;
	}

	inline bool operator!=(const _1300a11b0_MultiAssign &_Src) { return !this->operator==(_Src); }
};


struct _1300a11b0_Match {
	jule::Ref<_1300a11b0_Match> self{};

	jule::Ref<_13064b610_Data> _field_expr{jule::Ref<_13064b610_Data>()};
	jule::Bool _field_type_match{jule::Bool()};
	jule::Slice<jule::Ref<_1300a11b0_Case>> _field_cases{jule::Slice<jule::Ref<_1300a11b0_Case>>()};
	jule::Ref<_1300a11b0_Case> _field_default{jule::Ref<_1300a11b0_Case>()};


	_1300a11b0_Match(jule::Ref<_13064b610_Data> __param_expr, jule::Bool __param_type_match, jule::Slice<jule::Ref<_1300a11b0_Case>> __param_cases, jule::Ref<_1300a11b0_Case> __param_default) {
		this->self = jule::Ref<_1300a11b0_Match>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_type_match = __param_type_match;
		this->_field_cases = __param_cases;
		this->_field_default = __param_default;
	}

	~_1300a11b0_Match(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1300a11b0_Match(void) { this->self = jule::Ref<_1300a11b0_Match>::make(this, nullptr); }

	inline bool operator==(const _1300a11b0_Match &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_type_match == _Src._field_type_match &&
			this->_field_cases == _Src._field_cases &&
			this->_field_default == _Src._field_default;
	}

	inline bool operator!=(const _1300a11b0_Match &_Src) { return !this->operator==(_Src); }
};


struct _1300a11b0_Case {
	jule::Ref<_1300a11b0_Case> self{};

	jule::Ref<_1300a11b0_Match> _field_owner{jule::Ref<_1300a11b0_Match>()};
	jule::Ref<_1300a11b0_Scope> _field_scope{jule::Ref<_1300a11b0_Scope>()};
	jule::Slice<jule::Any> _field_exprs{jule::Slice<jule::Any>()};
	jule::Ref<_1300a11b0_Case> _field_next{jule::Ref<_1300a11b0_Case>()};


	_1300a11b0_Case(jule::Ref<_1300a11b0_Match> __param_owner, jule::Ref<_1300a11b0_Scope> __param_scope, jule::Slice<jule::Any> __param_exprs, jule::Ref<_1300a11b0_Case> __param_next) {
		this->self = jule::Ref<_1300a11b0_Case>::make(this, nullptr);

		this->_field_owner = __param_owner;
		this->_field_scope = __param_scope;
		this->_field_exprs = __param_exprs;
		this->_field_next = __param_next;
	}

	~_1300a11b0_Case(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1300a11b0_Case(void) { this->self = jule::Ref<_1300a11b0_Case>::make(this, nullptr); }

	inline jule::Bool _method_is_default(void);


	inline bool operator==(const _1300a11b0_Case &_Src) {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_scope == _Src._field_scope &&
			this->_field_exprs == _Src._field_exprs &&
			this->_field_next == _Src._field_next;
	}

	inline bool operator!=(const _1300a11b0_Case &_Src) { return !this->operator==(_Src); }
};


struct _1300a11b0_FallSt {
	jule::Ref<_1300a11b0_FallSt> self{};

	jule::Uintptr _field_dest_case{jule::Uintptr()};


	_1300a11b0_FallSt(jule::Uintptr __param_dest_case) {
		this->self = jule::Ref<_1300a11b0_FallSt>::make(this, nullptr);

		this->_field_dest_case = __param_dest_case;
	}

	~_1300a11b0_FallSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1300a11b0_FallSt(void) { this->self = jule::Ref<_1300a11b0_FallSt>::make(this, nullptr); }

	inline bool operator==(const _1300a11b0_FallSt &_Src) {
		return 
			this->_field_dest_case == _Src._field_dest_case;
	}

	inline bool operator!=(const _1300a11b0_FallSt &_Src) { return !this->operator==(_Src); }
};


struct _1300a11b0_RetSt {
	jule::Ref<_1300a11b0_RetSt> self{};

	jule::Slice<jule::Ref<_1303533b0_Var>> _field_vars{jule::Slice<jule::Ref<_1303533b0_Var>>()};
	jule::Any _field_expr{jule::Any()};


	_1300a11b0_RetSt(jule::Slice<jule::Ref<_1303533b0_Var>> __param_vars, jule::Any __param_expr) {
		this->self = jule::Ref<_1300a11b0_RetSt>::make(this, nullptr);

		this->_field_vars = __param_vars;
		this->_field_expr = __param_expr;
	}

	~_1300a11b0_RetSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1300a11b0_RetSt(void) { this->self = jule::Ref<_1300a11b0_RetSt>::make(this, nullptr); }

	inline bool operator==(const _1300a11b0_RetSt &_Src) {
		return 
			this->_field_vars == _Src._field_vars &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1300a11b0_RetSt &_Src) { return !this->operator==(_Src); }
};


struct _1300a11b0_Recover {
	jule::Ref<_1300a11b0_Recover> self{};

	jule::Ref<_127ed52e0_FnIns> _field_handler{jule::Ref<_127ed52e0_FnIns>()};
	jule::Any _field_handler_expr{jule::Any()};
	jule::Ref<_1300a11b0_Scope> _field_scope{jule::Ref<_1300a11b0_Scope>()};


	_1300a11b0_Recover(jule::Ref<_127ed52e0_FnIns> __param_handler, jule::Any __param_handler_expr, jule::Ref<_1300a11b0_Scope> __param_scope) {
		this->self = jule::Ref<_1300a11b0_Recover>::make(this, nullptr);

		this->_field_handler = __param_handler;
		this->_field_handler_expr = __param_handler_expr;
		this->_field_scope = __param_scope;
	}

	~_1300a11b0_Recover(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1300a11b0_Recover(void) { this->self = jule::Ref<_1300a11b0_Recover>::make(this, nullptr); }

	inline bool operator==(const _1300a11b0_Recover &_Src) {
		return 
			this->_field_handler == _Src._field_handler &&
			this->_field_handler_expr == _Src._field_handler_expr &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1300a11b0_Recover &_Src) { return !this->operator==(_Src); }
};


struct _1300a11b0_ScopeGoto {
	jule::Ref<_1300a11b0_ScopeGoto> self{};

	jule::Ref<_1275d7180_GotoSt> _field_gt{jule::Ref<_1275d7180_GotoSt>()};
	jule::Ref<_1300a11b0_ScopeChecker> _field_scope{jule::Ref<_1300a11b0_ScopeChecker>()};
	jule::Int _field_pos{jule::Int()};


	_1300a11b0_ScopeGoto(jule::Ref<_1275d7180_GotoSt> __param_gt, jule::Ref<_1300a11b0_ScopeChecker> __param_scope, jule::Int __param_pos) {
		this->self = jule::Ref<_1300a11b0_ScopeGoto>::make(this, nullptr);

		this->_field_gt = __param_gt;
		this->_field_scope = __param_scope;
		this->_field_pos = __param_pos;
	}

	~_1300a11b0_ScopeGoto(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1300a11b0_ScopeGoto(void) { this->self = jule::Ref<_1300a11b0_ScopeGoto>::make(this, nullptr); }

	inline bool operator==(const _1300a11b0_ScopeGoto &_Src) {
		return 
			this->_field_gt == _Src._field_gt &&
			this->_field_scope == _Src._field_scope &&
			this->_field_pos == _Src._field_pos;
	}

	inline bool operator!=(const _1300a11b0_ScopeGoto &_Src) { return !this->operator==(_Src); }
};


struct _1300a11b0_ScopeChecker: public _1304dc360_Lookup {
	jule::Ref<_1300a11b0_ScopeChecker> self{};

	jule::Ref<_1300a20d0_Sema> _field_s{jule::Ref<_1300a20d0_Sema>()};
	jule::Ref<_127ed52e0_FnIns> _field_owner{jule::Ref<_127ed52e0_FnIns>()};
	jule::Ref<_1300a11b0_ScopeChecker> _field_parent{jule::Ref<_1300a11b0_ScopeChecker>()};
	jule::Int _field_child_index{jule::Int()};
	jule::Ref<_13032dc50_SymbolTable> _field_table{jule::Ref<_13032dc50_SymbolTable>()};
	jule::Ref<_1300a11b0_Scope> _field_scope{jule::Ref<_1300a11b0_Scope>()};
	jule::Ref<_1275d7180_ScopeTree> _field_tree{jule::Ref<_1275d7180_ScopeTree>()};
	jule::Uintptr _field_it{jule::Uintptr()};
	jule::Uintptr _field_cse{jule::Uintptr()};
	jule::Ref<jule::Slice<jule::Ref<_1300a11b0_ScopeLabel>>> _field_labels{jule::Ref<jule::Slice<jule::Ref<_1300a11b0_ScopeLabel>>>()};
	jule::Ref<jule::Slice<jule::Ref<_1300a11b0_ScopeGoto>>> _field_gotos{jule::Ref<jule::Slice<jule::Ref<_1300a11b0_ScopeGoto>>>()};
	jule::Int _field_i{jule::Int()};


	_1300a11b0_ScopeChecker(jule::Ref<_1300a20d0_Sema> __param_s, jule::Ref<_127ed52e0_FnIns> __param_owner, jule::Ref<_1300a11b0_ScopeChecker> __param_parent, jule::Int __param_child_index, jule::Ref<_13032dc50_SymbolTable> __param_table, jule::Ref<_1300a11b0_Scope> __param_scope, jule::Ref<_1275d7180_ScopeTree> __param_tree, jule::Uintptr __param_it, jule::Uintptr __param_cse, jule::Ref<jule::Slice<jule::Ref<_1300a11b0_ScopeLabel>>> __param_labels, jule::Ref<jule::Slice<jule::Ref<_1300a11b0_ScopeGoto>>> __param_gotos, jule::Int __param_i) {
		this->self = jule::Ref<_1300a11b0_ScopeChecker>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_owner = __param_owner;
		this->_field_parent = __param_parent;
		this->_field_child_index = __param_child_index;
		this->_field_table = __param_table;
		this->_field_scope = __param_scope;
		this->_field_tree = __param_tree;
		this->_field_it = __param_it;
		this->_field_cse = __param_cse;
		this->_field_labels = __param_labels;
		this->_field_gotos = __param_gotos;
		this->_field_i = __param_i;
	}

	~_1300a11b0_ScopeChecker(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1300a11b0_ScopeChecker(void) { this->self = jule::Ref<_1300a11b0_ScopeChecker>::make(this, nullptr); }

	inline jule::Ref<_1300a4650_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_1300a4650_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1300a4650_ImportInfo>)>);


	inline jule::Ref<_1303533b0_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_1304dc9b0_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_127b2e960_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_127ed52e0_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_130099320_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_13009ed30_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_unsafe(void);


	inline jule::Bool _method_is_root(void);


	inline jule::Ref<_1300a11b0_ScopeChecker> _method_get_root(void);


	inline jule::Ref<_1300a11b0_Label> _method_find_label(jule::Str);


	inline jule::Ref<_1300a11b0_ScopeLabel> _method_find_label_scope(jule::Str);


	inline jule::Ref<_1300a11b0_ScopeLabel> _method_find_label_all(jule::Str);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str);


	inline void _method_check_var_decl(jule::Ref<_1275d7180_VarDecl>);


	inline void _method_check_type_alias_decl(jule::Ref<_1275d7180_TypeAliasDecl>);


	inline jule::Ref<_1300a11b0_Scope> _method_get_child(void);


	inline void _method_check_child_ssc(jule::Ref<_1275d7180_ScopeTree>,jule::Ref<_1300a11b0_Scope>,jule::Ref<_1300a11b0_ScopeChecker>);


	inline jule::Ref<_1300a11b0_Scope> _method_check_child_sc(jule::Ref<_1275d7180_ScopeTree>,jule::Ref<_1300a11b0_ScopeChecker>);


	inline jule::Ref<_1300a11b0_Scope> _method_check_child(jule::Ref<_1275d7180_ScopeTree>);


	inline void _method_check_anon_scope(jule::Ref<_1275d7180_ScopeTree>);


	inline jule::Bool _method_try_call_recover(jule::Ref<_13064b610_Data>);


	inline void _method_check_expr(jule::Ref<_1275d7180_Expr>);


	inline jule::Ref<_1300a11b0_If> _method_check_if(jule::Ref<_1275d7180_If>);


	inline jule::Ref<_1300a11b0_Else> _method_check_else(jule::Ref<_1275d7180_Else>);


	inline void _method_check_conditional(jule::Ref<_1275d7180_Conditional>);


	inline jule::Ref<_1300a11b0_Scope> _method_check_iter_scope_sc(jule::Uintptr,jule::Ref<_1275d7180_ScopeTree>,jule::Ref<_1300a11b0_ScopeChecker>);


	inline jule::Ref<_1300a11b0_Scope> _method_check_iter_scope(jule::Uintptr,jule::Ref<_1275d7180_ScopeTree>);


	inline void _method_check_inf_iter(jule::Ref<_1275d7180_Iter>);


	inline void _method_check_while_iter(jule::Ref<_1275d7180_Iter>);


	inline void _method_check_range_iter(jule::Ref<_1275d7180_Iter>);


	inline void _method_check_iter(jule::Ref<_1275d7180_Iter>);


	inline jule::Bool _method_check_valid_cont_label(jule::Uintptr);


	inline jule::Bool _method_check_valid_break_label(jule::Uintptr);


	inline jule::Ref<_1300a11b0_ContSt> _method_check_cont_valid_scope(jule::Ref<_1275d7180_ContSt>);


	inline void _method_check_cont(jule::Ref<_1275d7180_ContSt>);


	inline void _method_check_label(jule::Ref<_1275d7180_LabelSt>);


	inline void _method_push_goto(jule::Ref<_1275d7180_GotoSt>);


	inline void _method_check_postfix(jule::Ref<_1275d7180_AssignSt>);


	inline jule::Bool _method_is_new_assign_ident(jule::Str);


	inline void _method_check_single_assign(jule::Ref<_1275d7180_AssignSt>);


	inline void _method___process_end_part_of_multi_assign(jule::Ref<_1300a11b0_MultiAssign>,jule::Ref<_1275d7180_AssignSt>,jule::Ref<_1275d7180_AssignLeft>,jule::Ref<_13064b610_Data>,jule::Ref<_13064b610_Data>);


	inline void _method_check_ret_multi_assign(jule::Ref<_1275d7180_AssignSt>);


	inline void _method_check_multi_assign(jule::Ref<_1275d7180_AssignSt>);


	inline void _method_check_assign_st(jule::Ref<_1275d7180_AssignSt>);


	inline jule::Ref<_1300a11b0_Scope> _method_check_case_scope(jule::Ref<_1300a11b0_Case>,jule::Ref<_1275d7180_ScopeTree>);


	inline jule::Ref<_1300a11b0_Case> _method_check_case(jule::Ref<_1300a11b0_Match>,jule::Int,jule::Ref<_1275d7180_Case>,jule::Ref<_13064b610_Data>);


	inline void _method_check_cases(jule::Ref<_1275d7180_MatchCase>,jule::Ref<_1300a11b0_Match>,jule::Ref<_13064b610_Data>);


	inline jule::Ref<_1300a11b0_Case> _method_check_default(jule::Ref<_1300a11b0_Match>,jule::Ref<_1275d7180_Else>);


	inline void _method_check_type_match(jule::Ref<_1275d7180_MatchCase>);


	inline void _method_check_common_match(jule::Ref<_1275d7180_MatchCase>);


	inline void _method_check_match(jule::Ref<_1275d7180_MatchCase>);


	inline void _method_check_fall(jule::Ref<_1275d7180_FallSt>);


	inline jule::Ref<_1300a11b0_BreakSt> _method_check_break_with_label(jule::Ref<_1275d7180_BreakSt>);


	inline jule::Ref<_1300a11b0_BreakSt> _method_check_plain_break(jule::Ref<_1275d7180_BreakSt>);


	inline void _method_check_break(jule::Ref<_1275d7180_BreakSt>);


	inline void _method_check_ret(jule::Ref<_1275d7180_RetSt>);


	inline void _method_check_node(jule::Any);


	inline void _method_check_tree(void);


	inline void _method_check_same_scope_goto(jule::Ref<_1300a11b0_ScopeGoto>,jule::Ref<_1300a11b0_ScopeLabel>);


	inline jule::Bool _method_check_label_parents(jule::Ref<_1300a11b0_ScopeGoto>,jule::Ref<_1300a11b0_ScopeLabel>);


	inline void _method_check_goto_scope(jule::Ref<_1300a11b0_ScopeGoto>,jule::Ref<_1300a11b0_ScopeLabel>);


	inline void _method_check_diff_scope_goto(jule::Ref<_1300a11b0_ScopeGoto>,jule::Ref<_1300a11b0_ScopeLabel>);


	inline void _method_check_goto(jule::Ref<_1300a11b0_ScopeGoto>,jule::Ref<_1300a11b0_ScopeLabel>);


	inline void _method_check_gotos(void);


	inline void _method_check_labels(void);


	inline void _method_check_vars(void);


	inline void _method_check_aliases(void);


	inline void _method_check(jule::Ref<_1275d7180_ScopeTree>,jule::Ref<_1300a11b0_Scope>);


	inline jule::Ref<_1300a11b0_ScopeChecker> _method_new_child_checker(void);


	inline bool operator==(const _1300a11b0_ScopeChecker &_Src) {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_owner == _Src._field_owner &&
			this->_field_parent == _Src._field_parent &&
			this->_field_child_index == _Src._field_child_index &&
			this->_field_table == _Src._field_table &&
			this->_field_scope == _Src._field_scope &&
			this->_field_tree == _Src._field_tree &&
			this->_field_it == _Src._field_it &&
			this->_field_cse == _Src._field_cse &&
			this->_field_labels == _Src._field_labels &&
			this->_field_gotos == _Src._field_gotos &&
			this->_field_i == _Src._field_i;
	}

	inline bool operator!=(const _1300a11b0_ScopeChecker &_Src) { return !this->operator==(_Src); }
};


struct _1279cf930_BinopExprModel {
	jule::Ref<_1279cf930_BinopExprModel> self{};

	jule::Any _field_left{jule::Any()};
	jule::Any _field_right{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_1279cf930_BinopExprModel(jule::Any __param_left, jule::Any __param_right, jule::Str __param_op) {
		this->self = jule::Ref<_1279cf930_BinopExprModel>::make(this, nullptr);

		this->_field_left = __param_left;
		this->_field_right = __param_right;
		this->_field_op = __param_op;
	}

	~_1279cf930_BinopExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1279cf930_BinopExprModel(void) { this->self = jule::Ref<_1279cf930_BinopExprModel>::make(this, nullptr); }

	inline bool operator==(const _1279cf930_BinopExprModel &_Src) {
		return 
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1279cf930_BinopExprModel &_Src) { return !this->operator==(_Src); }
};


struct _1279cf930_UnaryExprModel {
	jule::Ref<_1279cf930_UnaryExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Str _field_op{jule::Str()};


	_1279cf930_UnaryExprModel(jule::Any __param_expr, jule::Str __param_op) {
		this->self = jule::Ref<_1279cf930_UnaryExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_op = __param_op;
	}

	~_1279cf930_UnaryExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1279cf930_UnaryExprModel(void) { this->self = jule::Ref<_1279cf930_UnaryExprModel>::make(this, nullptr); }

	inline bool operator==(const _1279cf930_UnaryExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _1279cf930_UnaryExprModel &_Src) { return !this->operator==(_Src); }
};


struct _1279cf930_GetRefPtrExprModel {
	jule::Ref<_1279cf930_GetRefPtrExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1279cf930_GetRefPtrExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1279cf930_GetRefPtrExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1279cf930_GetRefPtrExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1279cf930_GetRefPtrExprModel(void) { this->self = jule::Ref<_1279cf930_GetRefPtrExprModel>::make(this, nullptr); }

	inline bool operator==(const _1279cf930_GetRefPtrExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1279cf930_GetRefPtrExprModel &_Src) { return !this->operator==(_Src); }
};


struct _1279cf930_StructArgExprModel {
	jule::Ref<_1279cf930_StructArgExprModel> self{};

	jule::Ref<_127b2e960_FieldIns> _field_field{jule::Ref<_127b2e960_FieldIns>()};
	jule::Any _field_expr{jule::Any()};


	_1279cf930_StructArgExprModel(jule::Ref<_127b2e960_FieldIns> __param_field, jule::Any __param_expr) {
		this->self = jule::Ref<_1279cf930_StructArgExprModel>::make(this, nullptr);

		this->_field_field = __param_field;
		this->_field_expr = __param_expr;
	}

	~_1279cf930_StructArgExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1279cf930_StructArgExprModel(void) { this->self = jule::Ref<_1279cf930_StructArgExprModel>::make(this, nullptr); }

	inline bool operator==(const _1279cf930_StructArgExprModel &_Src) {
		return 
			this->_field_field == _Src._field_field &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1279cf930_StructArgExprModel &_Src) { return !this->operator==(_Src); }
};


struct _1279cf930_StructLitExprModel {
	jule::Ref<_1279cf930_StructLitExprModel> self{};

	jule::Ref<_127b2e960_StructIns> _field_strct{jule::Ref<_127b2e960_StructIns>()};
	jule::Slice<jule::Ref<_1279cf930_StructArgExprModel>> _field_args{jule::Slice<jule::Ref<_1279cf930_StructArgExprModel>>()};


	_1279cf930_StructLitExprModel(jule::Ref<_127b2e960_StructIns> __param_strct, jule::Slice<jule::Ref<_1279cf930_StructArgExprModel>> __param_args) {
		this->self = jule::Ref<_1279cf930_StructLitExprModel>::make(this, nullptr);

		this->_field_strct = __param_strct;
		this->_field_args = __param_args;
	}

	~_1279cf930_StructLitExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1279cf930_StructLitExprModel(void) { this->self = jule::Ref<_1279cf930_StructLitExprModel>::make(this, nullptr); }

	inline bool operator==(const _1279cf930_StructLitExprModel &_Src) {
		return 
			this->_field_strct == _Src._field_strct &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _1279cf930_StructLitExprModel &_Src) { return !this->operator==(_Src); }
};


struct _1279cf930_AllocStructLitExprModel {
	jule::Ref<_1279cf930_AllocStructLitExprModel> self{};

	jule::Ref<_1279cf930_StructLitExprModel> _field_lit{jule::Ref<_1279cf930_StructLitExprModel>()};


	_1279cf930_AllocStructLitExprModel(jule::Ref<_1279cf930_StructLitExprModel> __param_lit) {
		this->self = jule::Ref<_1279cf930_AllocStructLitExprModel>::make(this, nullptr);

		this->_field_lit = __param_lit;
	}

	~_1279cf930_AllocStructLitExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1279cf930_AllocStructLitExprModel(void) { this->self = jule::Ref<_1279cf930_AllocStructLitExprModel>::make(this, nullptr); }

	inline bool operator==(const _1279cf930_AllocStructLitExprModel &_Src) {
		return 
			this->_field_lit == _Src._field_lit;
	}

	inline bool operator!=(const _1279cf930_AllocStructLitExprModel &_Src) { return !this->operator==(_Src); }
};


struct _1279cf930_CastingExprModel {
	jule::Ref<_1279cf930_CastingExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Ref<_1304dc9b0_TypeKind> _field_kind{jule::Ref<_1304dc9b0_TypeKind>()};
	jule::Ref<_1304dc9b0_TypeKind> _field_expr_kind{jule::Ref<_1304dc9b0_TypeKind>()};


	_1279cf930_CastingExprModel(jule::Any __param_expr, jule::Ref<_1304dc9b0_TypeKind> __param_kind, jule::Ref<_1304dc9b0_TypeKind> __param_expr_kind) {
		this->self = jule::Ref<_1279cf930_CastingExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_kind = __param_kind;
		this->_field_expr_kind = __param_expr_kind;
	}

	~_1279cf930_CastingExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1279cf930_CastingExprModel(void) { this->self = jule::Ref<_1279cf930_CastingExprModel>::make(this, nullptr); }

	inline bool operator==(const _1279cf930_CastingExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_kind == _Src._field_kind &&
			this->_field_expr_kind == _Src._field_expr_kind;
	}

	inline bool operator!=(const _1279cf930_CastingExprModel &_Src) { return !this->operator==(_Src); }
};


struct _1279cf930_FnCallExprModel {
	jule::Ref<_1279cf930_FnCallExprModel> self{};

	jule::Ref<_127ed52e0_FnIns> _field_func{jule::Ref<_127ed52e0_FnIns>()};
	jule::Bool _field_is_co{jule::Bool()};
	jule::Any _field_expr{jule::Any()};
	jule::Slice<jule::Any> _field_args{jule::Slice<jule::Any>()};


	_1279cf930_FnCallExprModel(jule::Ref<_127ed52e0_FnIns> __param_func, jule::Bool __param_is_co, jule::Any __param_expr, jule::Slice<jule::Any> __param_args) {
		this->self = jule::Ref<_1279cf930_FnCallExprModel>::make(this, nullptr);

		this->_field_func = __param_func;
		this->_field_is_co = __param_is_co;
		this->_field_expr = __param_expr;
		this->_field_args = __param_args;
	}

	~_1279cf930_FnCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1279cf930_FnCallExprModel(void) { this->self = jule::Ref<_1279cf930_FnCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1279cf930_FnCallExprModel &_Src) {
		return 
			this->_field_func == _Src._field_func &&
			this->_field_is_co == _Src._field_is_co &&
			this->_field_expr == _Src._field_expr &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _1279cf930_FnCallExprModel &_Src) { return !this->operator==(_Src); }
};


struct _1279cf930_SliceExprModel {
	jule::Ref<_1279cf930_SliceExprModel> self{};

	jule::Ref<_1304dc9b0_TypeKind> _field_elem_kind{jule::Ref<_1304dc9b0_TypeKind>()};
	jule::Slice<jule::Any> _field_elems{jule::Slice<jule::Any>()};


	_1279cf930_SliceExprModel(jule::Ref<_1304dc9b0_TypeKind> __param_elem_kind, jule::Slice<jule::Any> __param_elems) {
		this->self = jule::Ref<_1279cf930_SliceExprModel>::make(this, nullptr);

		this->_field_elem_kind = __param_elem_kind;
		this->_field_elems = __param_elems;
	}

	~_1279cf930_SliceExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1279cf930_SliceExprModel(void) { this->self = jule::Ref<_1279cf930_SliceExprModel>::make(this, nullptr); }

	inline bool operator==(const _1279cf930_SliceExprModel &_Src) {
		return 
			this->_field_elem_kind == _Src._field_elem_kind &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _1279cf930_SliceExprModel &_Src) { return !this->operator==(_Src); }
};


struct _1279cf930_IndexigExprModel {
	jule::Ref<_1279cf930_IndexigExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Any _field_index{jule::Any()};


	_1279cf930_IndexigExprModel(jule::Any __param_expr, jule::Any __param_index) {
		this->self = jule::Ref<_1279cf930_IndexigExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_index = __param_index;
	}

	~_1279cf930_IndexigExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1279cf930_IndexigExprModel(void) { this->self = jule::Ref<_1279cf930_IndexigExprModel>::make(this, nullptr); }

	inline bool operator==(const _1279cf930_IndexigExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_index == _Src._field_index;
	}

	inline bool operator!=(const _1279cf930_IndexigExprModel &_Src) { return !this->operator==(_Src); }
};


struct _1279cf930_AnonFnExprModel {
	jule::Ref<_1279cf930_AnonFnExprModel> self{};

	jule::Ref<_127ed52e0_FnIns> _field_func{jule::Ref<_127ed52e0_FnIns>()};
	jule::Bool _field_global{jule::Bool()};


	_1279cf930_AnonFnExprModel(jule::Ref<_127ed52e0_FnIns> __param_func, jule::Bool __param_global) {
		this->self = jule::Ref<_1279cf930_AnonFnExprModel>::make(this, nullptr);

		this->_field_func = __param_func;
		this->_field_global = __param_global;
	}

	~_1279cf930_AnonFnExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1279cf930_AnonFnExprModel(void) { this->self = jule::Ref<_1279cf930_AnonFnExprModel>::make(this, nullptr); }

	inline bool operator==(const _1279cf930_AnonFnExprModel &_Src) {
		return 
			this->_field_func == _Src._field_func &&
			this->_field_global == _Src._field_global;
	}

	inline bool operator!=(const _1279cf930_AnonFnExprModel &_Src) { return !this->operator==(_Src); }
};


struct _1279cf930_KeyValPairExprModel {
	jule::Ref<_1279cf930_KeyValPairExprModel> self{};

	jule::Any _field_key{jule::Any()};
	jule::Any _field_val{jule::Any()};


	_1279cf930_KeyValPairExprModel(jule::Any __param_key, jule::Any __param_val) {
		this->self = jule::Ref<_1279cf930_KeyValPairExprModel>::make(this, nullptr);

		this->_field_key = __param_key;
		this->_field_val = __param_val;
	}

	~_1279cf930_KeyValPairExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1279cf930_KeyValPairExprModel(void) { this->self = jule::Ref<_1279cf930_KeyValPairExprModel>::make(this, nullptr); }

	inline bool operator==(const _1279cf930_KeyValPairExprModel &_Src) {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _1279cf930_KeyValPairExprModel &_Src) { return !this->operator==(_Src); }
};


struct _1279cf930_MapExprModel {
	jule::Ref<_1279cf930_MapExprModel> self{};

	jule::Ref<_1304dc9b0_TypeKind> _field_key_kind{jule::Ref<_1304dc9b0_TypeKind>()};
	jule::Ref<_1304dc9b0_TypeKind> _field_val_kind{jule::Ref<_1304dc9b0_TypeKind>()};
	jule::Slice<jule::Ref<_1279cf930_KeyValPairExprModel>> _field_entries{jule::Slice<jule::Ref<_1279cf930_KeyValPairExprModel>>()};


	_1279cf930_MapExprModel(jule::Ref<_1304dc9b0_TypeKind> __param_key_kind, jule::Ref<_1304dc9b0_TypeKind> __param_val_kind, jule::Slice<jule::Ref<_1279cf930_KeyValPairExprModel>> __param_entries) {
		this->self = jule::Ref<_1279cf930_MapExprModel>::make(this, nullptr);

		this->_field_key_kind = __param_key_kind;
		this->_field_val_kind = __param_val_kind;
		this->_field_entries = __param_entries;
	}

	~_1279cf930_MapExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1279cf930_MapExprModel(void) { this->self = jule::Ref<_1279cf930_MapExprModel>::make(this, nullptr); }

	inline bool operator==(const _1279cf930_MapExprModel &_Src) {
		return 
			this->_field_key_kind == _Src._field_key_kind &&
			this->_field_val_kind == _Src._field_val_kind &&
			this->_field_entries == _Src._field_entries;
	}

	inline bool operator!=(const _1279cf930_MapExprModel &_Src) { return !this->operator==(_Src); }
};


struct _1279cf930_SlicingExprModel {
	jule::Ref<_1279cf930_SlicingExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Any _field_left{jule::Any()};
	jule::Any _field_right{jule::Any()};


	_1279cf930_SlicingExprModel(jule::Any __param_expr, jule::Any __param_left, jule::Any __param_right) {
		this->self = jule::Ref<_1279cf930_SlicingExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_left = __param_left;
		this->_field_right = __param_right;
	}

	~_1279cf930_SlicingExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1279cf930_SlicingExprModel(void) { this->self = jule::Ref<_1279cf930_SlicingExprModel>::make(this, nullptr); }

	inline bool operator==(const _1279cf930_SlicingExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_left == _Src._field_left &&
			this->_field_right == _Src._field_right;
	}

	inline bool operator!=(const _1279cf930_SlicingExprModel &_Src) { return !this->operator==(_Src); }
};


struct _1279cf930_TraitSubIdentExprModel {
	jule::Ref<_1279cf930_TraitSubIdentExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Str _field_ident{jule::Str()};


	_1279cf930_TraitSubIdentExprModel(jule::Any __param_expr, jule::Str __param_ident) {
		this->self = jule::Ref<_1279cf930_TraitSubIdentExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_ident = __param_ident;
	}

	~_1279cf930_TraitSubIdentExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1279cf930_TraitSubIdentExprModel(void) { this->self = jule::Ref<_1279cf930_TraitSubIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _1279cf930_TraitSubIdentExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1279cf930_TraitSubIdentExprModel &_Src) { return !this->operator==(_Src); }
};


struct _1279cf930_StructSubIdentExprModel {
	jule::Ref<_1279cf930_StructSubIdentExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Ref<_1304dc9b0_TypeKind> _field_expr_kind{jule::Ref<_1304dc9b0_TypeKind>()};
	jule::Ref<_127ed52e0_FnIns> _field_method{jule::Ref<_127ed52e0_FnIns>()};
	jule::Ref<_127b2e960_FieldIns> _field_field{jule::Ref<_127b2e960_FieldIns>()};


	_1279cf930_StructSubIdentExprModel(jule::Any __param_expr, jule::Ref<_1304dc9b0_TypeKind> __param_expr_kind, jule::Ref<_127ed52e0_FnIns> __param_method, jule::Ref<_127b2e960_FieldIns> __param_field) {
		this->self = jule::Ref<_1279cf930_StructSubIdentExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_expr_kind = __param_expr_kind;
		this->_field_method = __param_method;
		this->_field_field = __param_field;
	}

	~_1279cf930_StructSubIdentExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1279cf930_StructSubIdentExprModel(void) { this->self = jule::Ref<_1279cf930_StructSubIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _1279cf930_StructSubIdentExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_expr_kind == _Src._field_expr_kind &&
			this->_field_method == _Src._field_method &&
			this->_field_field == _Src._field_field;
	}

	inline bool operator!=(const _1279cf930_StructSubIdentExprModel &_Src) { return !this->operator==(_Src); }
};


struct _1279cf930_StructStaticIdentExprModel {
	jule::Ref<_1279cf930_StructStaticIdentExprModel> self{};

	jule::Ref<_127b2e960_StructIns> _field_structure{jule::Ref<_127b2e960_StructIns>()};
	jule::Any _field_expr{jule::Any()};
	jule::Ref<_127ed52e0_FnIns> _field_method{jule::Ref<_127ed52e0_FnIns>()};


	_1279cf930_StructStaticIdentExprModel(jule::Ref<_127b2e960_StructIns> __param_structure, jule::Any __param_expr, jule::Ref<_127ed52e0_FnIns> __param_method) {
		this->self = jule::Ref<_1279cf930_StructStaticIdentExprModel>::make(this, nullptr);

		this->_field_structure = __param_structure;
		this->_field_expr = __param_expr;
		this->_field_method = __param_method;
	}

	~_1279cf930_StructStaticIdentExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1279cf930_StructStaticIdentExprModel(void) { this->self = jule::Ref<_1279cf930_StructStaticIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _1279cf930_StructStaticIdentExprModel &_Src) {
		return 
			this->_field_structure == _Src._field_structure &&
			this->_field_expr == _Src._field_expr &&
			this->_field_method == _Src._field_method;
	}

	inline bool operator!=(const _1279cf930_StructStaticIdentExprModel &_Src) { return !this->operator==(_Src); }
};


struct _1279cf930_ArrayExprModel {
	jule::Ref<_1279cf930_ArrayExprModel> self{};

	jule::Ref<_1304dc9b0_Arr> _field_kind{jule::Ref<_1304dc9b0_Arr>()};
	jule::Slice<jule::Any> _field_elems{jule::Slice<jule::Any>()};


	_1279cf930_ArrayExprModel(jule::Ref<_1304dc9b0_Arr> __param_kind, jule::Slice<jule::Any> __param_elems) {
		this->self = jule::Ref<_1279cf930_ArrayExprModel>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_elems = __param_elems;
	}

	~_1279cf930_ArrayExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1279cf930_ArrayExprModel(void) { this->self = jule::Ref<_1279cf930_ArrayExprModel>::make(this, nullptr); }

	inline bool operator==(const _1279cf930_ArrayExprModel &_Src) {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_elems == _Src._field_elems;
	}

	inline bool operator!=(const _1279cf930_ArrayExprModel &_Src) { return !this->operator==(_Src); }
};


struct _1279cf930_CommonIdentExprModel {
	jule::Ref<_1279cf930_CommonIdentExprModel> self{};

	jule::Str _field_ident{jule::Str()};


	_1279cf930_CommonIdentExprModel(jule::Str __param_ident) {
		this->self = jule::Ref<_1279cf930_CommonIdentExprModel>::make(this, nullptr);

		this->_field_ident = __param_ident;
	}

	~_1279cf930_CommonIdentExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1279cf930_CommonIdentExprModel(void) { this->self = jule::Ref<_1279cf930_CommonIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _1279cf930_CommonIdentExprModel &_Src) {
		return 
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1279cf930_CommonIdentExprModel &_Src) { return !this->operator==(_Src); }
};


struct _1279cf930_CommonSubIdentExprModel {
	jule::Ref<_1279cf930_CommonSubIdentExprModel> self{};

	jule::Ref<_1304dc9b0_TypeKind> _field_expr_kind{jule::Ref<_1304dc9b0_TypeKind>()};
	jule::Any _field_expr{jule::Any()};
	jule::Str _field_ident{jule::Str()};


	_1279cf930_CommonSubIdentExprModel(jule::Ref<_1304dc9b0_TypeKind> __param_expr_kind, jule::Any __param_expr, jule::Str __param_ident) {
		this->self = jule::Ref<_1279cf930_CommonSubIdentExprModel>::make(this, nullptr);

		this->_field_expr_kind = __param_expr_kind;
		this->_field_expr = __param_expr;
		this->_field_ident = __param_ident;
	}

	~_1279cf930_CommonSubIdentExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1279cf930_CommonSubIdentExprModel(void) { this->self = jule::Ref<_1279cf930_CommonSubIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _1279cf930_CommonSubIdentExprModel &_Src) {
		return 
			this->_field_expr_kind == _Src._field_expr_kind &&
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1279cf930_CommonSubIdentExprModel &_Src) { return !this->operator==(_Src); }
};


struct _1279cf930_TupleExprModel {
	jule::Ref<_1279cf930_TupleExprModel> self{};

	jule::Slice<jule::Ref<_13064b610_Data>> _field_datas{jule::Slice<jule::Ref<_13064b610_Data>>()};


	_1279cf930_TupleExprModel(jule::Slice<jule::Ref<_13064b610_Data>> __param_datas) {
		this->self = jule::Ref<_1279cf930_TupleExprModel>::make(this, nullptr);

		this->_field_datas = __param_datas;
	}

	~_1279cf930_TupleExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1279cf930_TupleExprModel(void) { this->self = jule::Ref<_1279cf930_TupleExprModel>::make(this, nullptr); }

	inline bool operator==(const _1279cf930_TupleExprModel &_Src) {
		return 
			this->_field_datas == _Src._field_datas;
	}

	inline bool operator!=(const _1279cf930_TupleExprModel &_Src) { return !this->operator==(_Src); }
};


struct _1279cf930_BuiltinOutCallExprModel {
	jule::Ref<_1279cf930_BuiltinOutCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1279cf930_BuiltinOutCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1279cf930_BuiltinOutCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1279cf930_BuiltinOutCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1279cf930_BuiltinOutCallExprModel(void) { this->self = jule::Ref<_1279cf930_BuiltinOutCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1279cf930_BuiltinOutCallExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1279cf930_BuiltinOutCallExprModel &_Src) { return !this->operator==(_Src); }
};


struct _1279cf930_BuiltinOutlnCallExprModel {
	jule::Ref<_1279cf930_BuiltinOutlnCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1279cf930_BuiltinOutlnCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1279cf930_BuiltinOutlnCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1279cf930_BuiltinOutlnCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1279cf930_BuiltinOutlnCallExprModel(void) { this->self = jule::Ref<_1279cf930_BuiltinOutlnCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1279cf930_BuiltinOutlnCallExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1279cf930_BuiltinOutlnCallExprModel &_Src) { return !this->operator==(_Src); }
};


struct _1279cf930_BuiltinCloneCallExprModel {
	jule::Ref<_1279cf930_BuiltinCloneCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1279cf930_BuiltinCloneCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1279cf930_BuiltinCloneCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1279cf930_BuiltinCloneCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1279cf930_BuiltinCloneCallExprModel(void) { this->self = jule::Ref<_1279cf930_BuiltinCloneCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1279cf930_BuiltinCloneCallExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1279cf930_BuiltinCloneCallExprModel &_Src) { return !this->operator==(_Src); }
};


struct _1279cf930_BuiltinNewCallExprModel {
	jule::Ref<_1279cf930_BuiltinNewCallExprModel> self{};

	jule::Ref<_1304dc9b0_TypeKind> _field_kind{jule::Ref<_1304dc9b0_TypeKind>()};
	jule::Any _field_init{jule::Any()};


	_1279cf930_BuiltinNewCallExprModel(jule::Ref<_1304dc9b0_TypeKind> __param_kind, jule::Any __param_init) {
		this->self = jule::Ref<_1279cf930_BuiltinNewCallExprModel>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_init = __param_init;
	}

	~_1279cf930_BuiltinNewCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1279cf930_BuiltinNewCallExprModel(void) { this->self = jule::Ref<_1279cf930_BuiltinNewCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1279cf930_BuiltinNewCallExprModel &_Src) {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_init == _Src._field_init;
	}

	inline bool operator!=(const _1279cf930_BuiltinNewCallExprModel &_Src) { return !this->operator==(_Src); }
};


struct _1279cf930_BuiltinRealCallExprModel {
	jule::Ref<_1279cf930_BuiltinRealCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1279cf930_BuiltinRealCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1279cf930_BuiltinRealCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1279cf930_BuiltinRealCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1279cf930_BuiltinRealCallExprModel(void) { this->self = jule::Ref<_1279cf930_BuiltinRealCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1279cf930_BuiltinRealCallExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1279cf930_BuiltinRealCallExprModel &_Src) { return !this->operator==(_Src); }
};


struct _1279cf930_BuiltinDropCallExprModel {
	jule::Ref<_1279cf930_BuiltinDropCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1279cf930_BuiltinDropCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1279cf930_BuiltinDropCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1279cf930_BuiltinDropCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1279cf930_BuiltinDropCallExprModel(void) { this->self = jule::Ref<_1279cf930_BuiltinDropCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1279cf930_BuiltinDropCallExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1279cf930_BuiltinDropCallExprModel &_Src) { return !this->operator==(_Src); }
};


struct _1279cf930_BuiltinPanicCallExprModel {
	jule::Ref<_1279cf930_BuiltinPanicCallExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1279cf930_BuiltinPanicCallExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1279cf930_BuiltinPanicCallExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1279cf930_BuiltinPanicCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1279cf930_BuiltinPanicCallExprModel(void) { this->self = jule::Ref<_1279cf930_BuiltinPanicCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1279cf930_BuiltinPanicCallExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1279cf930_BuiltinPanicCallExprModel &_Src) { return !this->operator==(_Src); }
};


struct _1279cf930_BuiltinMakeCallExprModel {
	jule::Ref<_1279cf930_BuiltinMakeCallExprModel> self{};

	jule::Ref<_1304dc9b0_TypeKind> _field_kind{jule::Ref<_1304dc9b0_TypeKind>()};
	jule::Any _field_len{jule::Any()};
	jule::Any _field_cap{jule::Any()};


	_1279cf930_BuiltinMakeCallExprModel(jule::Ref<_1304dc9b0_TypeKind> __param_kind, jule::Any __param_len, jule::Any __param_cap) {
		this->self = jule::Ref<_1279cf930_BuiltinMakeCallExprModel>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_len = __param_len;
		this->_field_cap = __param_cap;
	}

	~_1279cf930_BuiltinMakeCallExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1279cf930_BuiltinMakeCallExprModel(void) { this->self = jule::Ref<_1279cf930_BuiltinMakeCallExprModel>::make(this, nullptr); }

	inline bool operator==(const _1279cf930_BuiltinMakeCallExprModel &_Src) {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_len == _Src._field_len &&
			this->_field_cap == _Src._field_cap;
	}

	inline bool operator!=(const _1279cf930_BuiltinMakeCallExprModel &_Src) { return !this->operator==(_Src); }
};


struct _1279cf930_BuiltinErrorTraitSubIdentExprModel {
	jule::Ref<_1279cf930_BuiltinErrorTraitSubIdentExprModel> self{};

	jule::Any _field_expr{jule::Any()};
	jule::Str _field_ident{jule::Str()};


	_1279cf930_BuiltinErrorTraitSubIdentExprModel(jule::Any __param_expr, jule::Str __param_ident) {
		this->self = jule::Ref<_1279cf930_BuiltinErrorTraitSubIdentExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_ident = __param_ident;
	}

	~_1279cf930_BuiltinErrorTraitSubIdentExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1279cf930_BuiltinErrorTraitSubIdentExprModel(void) { this->self = jule::Ref<_1279cf930_BuiltinErrorTraitSubIdentExprModel>::make(this, nullptr); }

	inline bool operator==(const _1279cf930_BuiltinErrorTraitSubIdentExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1279cf930_BuiltinErrorTraitSubIdentExprModel &_Src) { return !this->operator==(_Src); }
};


struct _1279cf930_SizeofExprModel {
	jule::Ref<_1279cf930_SizeofExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1279cf930_SizeofExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1279cf930_SizeofExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1279cf930_SizeofExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1279cf930_SizeofExprModel(void) { this->self = jule::Ref<_1279cf930_SizeofExprModel>::make(this, nullptr); }

	inline bool operator==(const _1279cf930_SizeofExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1279cf930_SizeofExprModel &_Src) { return !this->operator==(_Src); }
};


struct _1279cf930_AlignofExprModel {
	jule::Ref<_1279cf930_AlignofExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1279cf930_AlignofExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1279cf930_AlignofExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1279cf930_AlignofExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1279cf930_AlignofExprModel(void) { this->self = jule::Ref<_1279cf930_AlignofExprModel>::make(this, nullptr); }

	inline bool operator==(const _1279cf930_AlignofExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1279cf930_AlignofExprModel &_Src) { return !this->operator==(_Src); }
};


struct _1279cf930_RuneExprModel {
	jule::Ref<_1279cf930_RuneExprModel> self{};

	jule::I32 _field_code{jule::I32()};


	_1279cf930_RuneExprModel(jule::I32 __param_code) {
		this->self = jule::Ref<_1279cf930_RuneExprModel>::make(this, nullptr);

		this->_field_code = __param_code;
	}

	~_1279cf930_RuneExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1279cf930_RuneExprModel(void) { this->self = jule::Ref<_1279cf930_RuneExprModel>::make(this, nullptr); }

	inline bool operator==(const _1279cf930_RuneExprModel &_Src) {
		return 
			this->_field_code == _Src._field_code;
	}

	inline bool operator!=(const _1279cf930_RuneExprModel &_Src) { return !this->operator==(_Src); }
};


struct _1279cf930_ExplicitDerefExprModel {
	jule::Ref<_1279cf930_ExplicitDerefExprModel> self{};

	jule::Any _field_expr{jule::Any()};


	_1279cf930_ExplicitDerefExprModel(jule::Any __param_expr) {
		this->self = jule::Ref<_1279cf930_ExplicitDerefExprModel>::make(this, nullptr);

		this->_field_expr = __param_expr;
	}

	~_1279cf930_ExplicitDerefExprModel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1279cf930_ExplicitDerefExprModel(void) { this->self = jule::Ref<_1279cf930_ExplicitDerefExprModel>::make(this, nullptr); }

	inline bool operator==(const _1279cf930_ExplicitDerefExprModel &_Src) {
		return 
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1279cf930_ExplicitDerefExprModel &_Src) { return !this->operator==(_Src); }
};


struct _1300a4650_Package: public _1304dc360_Lookup {
	jule::Ref<_1300a4650_Package> self{};

	jule::Slice<jule::Ref<_13032dc50_SymbolTable>> _field_files{jule::Slice<jule::Ref<_13032dc50_SymbolTable>>()};


	_1300a4650_Package(jule::Slice<jule::Ref<_13032dc50_SymbolTable>> __param_files) {
		this->self = jule::Ref<_1300a4650_Package>::make(this, nullptr);

		this->_field_files = __param_files;
	}

	~_1300a4650_Package(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1300a4650_Package(void) { this->self = jule::Ref<_1300a4650_Package>::make(this, nullptr); }

	inline jule::Ref<_1300a4650_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_1300a4650_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1300a4650_ImportInfo>)>);


	inline jule::Ref<_1303533b0_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_1304dc9b0_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_127b2e960_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_127ed52e0_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_130099320_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_13009ed30_Enum> _method_find_enum(jule::Str);


	inline bool operator==(const _1300a4650_Package &_Src) {
		return 
			this->_field_files == _Src._field_files;
	}

	inline bool operator!=(const _1300a4650_Package &_Src) { return !this->operator==(_Src); }
};


struct _1300a20d0_Sema: public _1304dc360_Lookup {
	jule::Ref<_1300a20d0_Sema> self{};

	jule::Slice<_136e99d00_Log> _field_errors{jule::Slice<_136e99d00_Log>()};
	jule::Slice<jule::Ref<_13032dc50_SymbolTable>> _field_files{jule::Slice<jule::Ref<_13032dc50_SymbolTable>>()};
	jule::Ref<_13032dc50_SymbolTable> _field_file{jule::Ref<_13032dc50_SymbolTable>()};


	_1300a20d0_Sema(jule::Slice<_136e99d00_Log> __param_errors, jule::Slice<jule::Ref<_13032dc50_SymbolTable>> __param_files, jule::Ref<_13032dc50_SymbolTable> __param_file) {
		this->self = jule::Ref<_1300a20d0_Sema>::make(this, nullptr);

		this->_field_errors = __param_errors;
		this->_field_files = __param_files;
		this->_field_file = __param_file;
	}

	~_1300a20d0_Sema(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1300a20d0_Sema(void) { this->self = jule::Ref<_1300a20d0_Sema>::make(this, nullptr); }

	inline jule::Ref<_1300a4650_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_1300a4650_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1300a4650_ImportInfo>)>);


	inline jule::Ref<_1303533b0_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_1304dc9b0_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_127b2e960_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_127ed52e0_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_130099320_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_13009ed30_Enum> _method_find_enum(jule::Str);


	inline void _method_set_current_file(jule::Ref<_13032dc50_SymbolTable>);


	inline void _method_push_err(_127941de0_Token,jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_is_accessible_define(jule::Bool,_127941de0_Token);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str,jule::Bool);


	inline jule::Bool _method_check_generic_quantity(jule::Int,jule::Int,_127941de0_Token);


	inline jule::Bool _method_is_duplicated_import_selection(jule::Uintptr,jule::Str);


	inline void _method_check_import_selections(jule::Ref<_1300a4650_ImportInfo>);


	inline jule::Bool _method_check_import(jule::Ref<_1300a4650_ImportInfo>);


	inline void _method_check_imports(void);


	inline void _method_impl_file_impls(void);


	inline void _method_impl_impls(void);


	inline void _method_check_enums(void);


	inline jule::Bool _method_check_type_with_refers(jule::Ref<_1304dc9b0_TypeSymbol>,jule::Trait<_1304dc360_Lookup>,jule::Ref<_1304dc9b0_Referencer>);


	inline jule::Bool _method_check_type(jule::Ref<_1304dc9b0_TypeSymbol>,jule::Trait<_1304dc360_Lookup>);


	inline jule::Ref<_1304dc9b0_TypeKind> _method_build_type_with_generics(jule::Ref<_1275d7180_TypeDecl>,jule::Slice<jule::Ref<_1304dc9b0_TypeAlias>>);


	inline jule::Ref<_1304dc9b0_TypeKind> _method_build_type(jule::Ref<_1275d7180_TypeDecl>);


	inline jule::Ref<_13064b610_Data> _method_evalpd(jule::Ref<_1275d7180_Expr>,jule::Trait<_1304dc360_Lookup>,jule::Ref<_1304dc9b0_TypeKind>,jule::Ref<_1303533b0_Var>);


	inline jule::Ref<_13064b610_Data> _method_evalp(jule::Ref<_1275d7180_Expr>,jule::Trait<_1304dc360_Lookup>,jule::Ref<_1304dc9b0_TypeKind>);


	inline jule::Ref<_13064b610_Data> _method_eval(jule::Ref<_1275d7180_Expr>,jule::Trait<_1304dc360_Lookup>);


	inline void _method_check_assign_type(jule::Ref<_1304dc9b0_TypeKind>,jule::Ref<_13064b610_Data>,_127941de0_Token,jule::Bool);


	inline jule::Bool _method_check_type_compatibility(jule::Ref<_1304dc9b0_TypeKind>,jule::Ref<_1304dc9b0_TypeKind>,_127941de0_Token,jule::Bool);


	inline jule::Ref<_1304dc9b0_TypeKind> _method_build_non_generic_type_kind(jule::Ref<_1275d7180_TypeDecl>,jule::Slice<jule::Ref<_1275d7180_GenericDecl>>);


	inline void _method_build_fn_non_generic_type_kinds(jule::Ref<_127ed52e0_FnIns>);


	inline jule::Ref<_127ed52e0_FnIns> _method_get_trait_check_fn_kind(jule::Ref<_127ed52e0_Fn>);


	inline jule::Bool _method_reload_fn_ins_types(jule::Ref<_127ed52e0_FnIns>);


	inline void _method_check_validity_for_init_expr(jule::Bool,jule::Bool,jule::Ref<_1304dc9b0_TypeKind>,jule::Ref<_13064b610_Data>,_127941de0_Token);


	inline jule::Bool _method_check_type_alias_decl_kind(jule::Ref<_1304dc9b0_TypeAlias>,jule::Trait<_1304dc360_Lookup>);


	inline void _method_check_type_alias_decl(jule::Ref<_1304dc9b0_TypeAlias>,jule::Trait<_1304dc360_Lookup>);


	inline void _method_check_type_alias_decl_dup(jule::Ref<_1304dc9b0_TypeAlias>);


	inline jule::Bool _method_check_type_alias_decls(void);


	inline void _method_check_enum_items_dup(jule::Ref<_13009ed30_Enum>);


	inline void _method_check_enum_items_str(jule::Ref<_13009ed30_Enum>);


	inline void _method_check_enum_items_int(jule::Ref<_13009ed30_Enum>);


	inline void _method_check_enum_decl(jule::Ref<_13009ed30_Enum>);


	inline jule::Bool _method_check_enum_decls(void);


	inline jule::Bool _method_check_decl_generics(jule::Slice<jule::Ref<_1275d7180_GenericDecl>>);


	inline jule::Bool _method_check_fn_decl_params_dup(jule::Ref<_127ed52e0_Fn>);


	inline jule::Bool _method_check_fn_decl_result_dup(jule::Ref<_127ed52e0_Fn>);


	inline jule::Bool _method_check_fn_decl_types(jule::Ref<_127ed52e0_Fn>);


	inline jule::Bool _method_check_fn_decl_prototype(jule::Ref<_127ed52e0_Fn>);


	inline void _method_check_trait_decl_method(jule::Ref<_127ed52e0_Fn>);


	inline void _method_check_trait_decl_methods(jule::Ref<_130099320_Trait>);


	inline void _method_check_trait_decl(jule::Ref<_130099320_Trait>);


	inline jule::Bool _method_check_trait_decls(void);


	inline jule::Bool _method_check_trait_impl_methods(jule::Ref<_130099320_Trait>,jule::Ref<_12791ab70_Impl>);


	inline jule::Bool _method_impl_to_struct(jule::Ref<_127b2e960_Struct>,jule::Ref<_12791ab70_Impl>);


	inline void _method_impl_trait(jule::Ref<_12791ab70_Impl>);


	inline void _method_impl_struct(jule::Ref<_12791ab70_Impl>);


	inline void _method_impl_impl(jule::Ref<_12791ab70_Impl>);


	inline void _method_check_var_decl(jule::Ref<_1303533b0_Var>,jule::Trait<_1304dc360_Lookup>);


	inline void _method_check_global_var_decl(jule::Ref<_1303533b0_Var>);


	inline jule::Bool _method_check_global_decls(void);


	inline jule::Bool _method_check_struct_trait_impl(jule::Ref<_127b2e960_Struct>,jule::Ref<_130099320_Trait>);


	inline jule::Bool _method_check_struct_impls(jule::Ref<_127b2e960_Struct>);


	inline jule::Bool _method_check_struct_fields(jule::Ref<_127b2e960_Struct>);


	inline void _method_check_struct_decl(jule::Ref<_127b2e960_Struct>);


	inline jule::Bool _method_check_struct_decls(void);


	inline void _method_check_fn_decl(jule::Ref<_127ed52e0_Fn>);


	inline jule::Bool _method_check_fn_decls(void);


	inline jule::Bool _method_check_directive_pass(_127ff3480_Pass);


	inline jule::Bool _method_check_passes(void);


	inline jule::Bool _method_check_struct_derive_illegal_cycles(jule::Str,jule::Ref<_127b2e960_Struct>,jule::Ref<_1304dc9b0_TypeKind>);


	inline jule::Bool _method_check_struct_ins_derive_clone(jule::Ref<_127b2e960_StructIns>);


	inline jule::Bool _method_check_struct_derive_clone(jule::Ref<_127b2e960_Struct>);


	inline jule::Bool _method_check_file_derives(void);


	inline void _method_check_package_derives(void);


	inline void _method_check_package_decls(void);


	inline void _method_check_data_for_auto_type(jule::Ref<_13064b610_Data>,_127941de0_Token);


	inline void _method_check_var(jule::Ref<_1303533b0_Var>);


	inline void _method_check_type_var(jule::Ref<_1303533b0_Var>,jule::Trait<_1304dc360_Lookup>);


	inline void _method_check_global_types(void);


	inline void _method_check_type_method(jule::Ref<_127b2e960_StructIns>,jule::Ref<_127ed52e0_Fn>);


	inline void _method_check_type_struct(jule::Ref<_127b2e960_Struct>);


	inline void _method_check_struct_types(void);


	inline void _method_check_rets(jule::Ref<_127ed52e0_FnIns>);


	inline void _method_check_fn_ins_sc(jule::Ref<_127ed52e0_FnIns>,jule::Ref<_1300a11b0_ScopeChecker>);


	inline void _method_check_fn_ins(jule::Ref<_127ed52e0_FnIns>);


	inline void _method_check_type_fn(jule::Ref<_127ed52e0_Fn>);


	inline void _method_precheck_type_fn(jule::Ref<_127ed52e0_Fn>);


	inline jule::Bool _method_precheck_fn_types(void);


	inline jule::Bool _method_check_fn_types(void);


	inline void _method_check_package_types(void);


	inline void _method_set_file_sema_fields(void);


	inline void _method_set_sema_fields(void);


	inline void _method_check(jule::Slice<jule::Ref<_13032dc50_SymbolTable>>);


	inline bool operator==(const _1300a20d0_Sema &_Src) {
		return 
			this->_field_errors == _Src._field_errors &&
			this->_field_files == _Src._field_files &&
			this->_field_file == _Src._field_file;
	}

	inline bool operator!=(const _1300a20d0_Sema &_Src) { return !this->operator==(_Src); }
};


struct _13032cf90_DynamicTypeAnnotation {
	jule::Ref<_13032cf90_DynamicTypeAnnotation> self{};

	jule::Ref<_13064b610_Eval> _field_e{jule::Ref<_13064b610_Eval>()};
	jule::Ref<_127ed52e0_FnIns> _field_f{jule::Ref<_127ed52e0_FnIns>()};
	jule::Ref<_127ed52e0_ParamIns> _field_p{jule::Ref<_127ed52e0_ParamIns>()};
	jule::Ref<_13064b610_Data> _field_a{jule::Ref<_13064b610_Data>()};
	_127941de0_Token _field_error_token{_127941de0_Token()};
	_1304dc9b0_TypeKind** _field_k{nullptr};


	_13032cf90_DynamicTypeAnnotation(jule::Ref<_13064b610_Eval> __param_e, jule::Ref<_127ed52e0_FnIns> __param_f, jule::Ref<_127ed52e0_ParamIns> __param_p, jule::Ref<_13064b610_Data> __param_a, _127941de0_Token __param_error_token, _1304dc9b0_TypeKind** __param_k) {
		this->self = jule::Ref<_13032cf90_DynamicTypeAnnotation>::make(this, nullptr);

		this->_field_e = __param_e;
		this->_field_f = __param_f;
		this->_field_p = __param_p;
		this->_field_a = __param_a;
		this->_field_error_token = __param_error_token;
		this->_field_k = __param_k;
	}

	~_13032cf90_DynamicTypeAnnotation(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_13032cf90_DynamicTypeAnnotation(void) { this->self = jule::Ref<_13032cf90_DynamicTypeAnnotation>::make(this, nullptr); }

	inline void _method_push_generic(jule::Ref<_1304dc9b0_TypeKind>,jule::Int);


	inline jule::Bool _method_annotate_prim(jule::Ref<_1304dc9b0_TypeKind>);


	inline jule::Bool _method_annotate_slc(jule::Ref<_1304dc9b0_TypeKind>);


	inline jule::Bool _method_annotate_map(jule::Ref<_1304dc9b0_TypeKind>);


	inline jule::Bool _method_annotate_fn(jule::Ref<_1304dc9b0_TypeKind>);


	inline jule::Bool _method_annotate_ptr(jule::Ref<_1304dc9b0_TypeKind>);


	inline jule::Bool _method_annotate_any(jule::Ref<_1304dc9b0_TypeKind>);


	inline jule::Bool _method_annotate_kind(jule::Ref<_1304dc9b0_TypeKind>);


	inline jule::Bool _method_annotate(void);


	inline bool operator==(const _13032cf90_DynamicTypeAnnotation &_Src) {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_f == _Src._field_f &&
			this->_field_p == _Src._field_p &&
			this->_field_a == _Src._field_a &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_k == _Src._field_k;
	}

	inline bool operator!=(const _13032cf90_DynamicTypeAnnotation &_Src) { return !this->operator==(_Src); }
};


struct _13032cf90_StructLitChecker {
	jule::Ref<_13032cf90_StructLitChecker> self{};

	jule::Ref<_13064b610_Eval> _field_e{jule::Ref<_13064b610_Eval>()};
	_127941de0_Token _field_error_token{_127941de0_Token()};
	jule::Ref<_127b2e960_StructIns> _field_s{jule::Ref<_127b2e960_StructIns>()};
	jule::Slice<jule::Ref<_1279cf930_StructArgExprModel>> _field_args{jule::Slice<jule::Ref<_1279cf930_StructArgExprModel>>()};


	_13032cf90_StructLitChecker(jule::Ref<_13064b610_Eval> __param_e, _127941de0_Token __param_error_token, jule::Ref<_127b2e960_StructIns> __param_s, jule::Slice<jule::Ref<_1279cf930_StructArgExprModel>> __param_args) {
		this->self = jule::Ref<_13032cf90_StructLitChecker>::make(this, nullptr);

		this->_field_e = __param_e;
		this->_field_error_token = __param_error_token;
		this->_field_s = __param_s;
		this->_field_args = __param_args;
	}

	~_13032cf90_StructLitChecker(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_13032cf90_StructLitChecker(void) { this->self = jule::Ref<_13032cf90_StructLitChecker>::make(this, nullptr); }

	inline void _method_push_err(_127941de0_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_match(jule::Ref<_127b2e960_FieldIns>,jule::Ref<_13064b610_Data>,_127941de0_Token);


	inline void _method_check_pair(jule::Ref<_1275d7180_FieldExprPair>,jule::Slice<jule::Any>);


	inline jule::Bool _method_ready_exprs(jule::Slice<jule::Any>);


	inline void _method_check(jule::Slice<jule::Any>);


	inline bool operator==(const _13032cf90_StructLitChecker &_Src) {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_s == _Src._field_s &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _13032cf90_StructLitChecker &_Src) { return !this->operator==(_Src); }
};


struct _13032cf90_RangeChecker {
	jule::Ref<_13032cf90_RangeChecker> self{};

	jule::Ref<_1300a11b0_ScopeChecker> _field_sc{jule::Ref<_1300a11b0_ScopeChecker>()};
	jule::Ref<_1275d7180_RangeKind> _field_rang{jule::Ref<_1275d7180_RangeKind>()};
	jule::Ref<_1300a11b0_RangeIter> _field_kind{jule::Ref<_1300a11b0_RangeIter>()};
	jule::Ref<_13064b610_Data> _field_d{jule::Ref<_13064b610_Data>()};


	_13032cf90_RangeChecker(jule::Ref<_1300a11b0_ScopeChecker> __param_sc, jule::Ref<_1275d7180_RangeKind> __param_rang, jule::Ref<_1300a11b0_RangeIter> __param_kind, jule::Ref<_13064b610_Data> __param_d) {
		this->self = jule::Ref<_13032cf90_RangeChecker>::make(this, nullptr);

		this->_field_sc = __param_sc;
		this->_field_rang = __param_rang;
		this->_field_kind = __param_kind;
		this->_field_d = __param_d;
	}

	~_13032cf90_RangeChecker(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_13032cf90_RangeChecker(void) { this->self = jule::Ref<_13032cf90_RangeChecker>::make(this, nullptr); }

	inline jule::Ref<_1303533b0_Var> _method_build_var(jule::Ref<_1275d7180_VarDecl>);


	inline void _method_set_size_key(void);


	inline void _method_check_slice(void);


	inline void _method_check_array(void);


	inline void _method_check_map_key_a(void);


	inline void _method_check_map_key_b(void);


	inline void _method_check_map(void);


	inline void _method_check_str(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _13032cf90_RangeChecker &_Src) {
		return 
			this->_field_sc == _Src._field_sc &&
			this->_field_rang == _Src._field_rang &&
			this->_field_kind == _Src._field_kind &&
			this->_field_d == _Src._field_d;
	}

	inline bool operator!=(const _13032cf90_RangeChecker &_Src) { return !this->operator==(_Src); }
};


struct _13064b610_Data {
	jule::Ref<_13064b610_Data> self{};

	jule::Ref<_1304dc9b0_TypeKind> _field_kind{jule::Ref<_1304dc9b0_TypeKind>()};
	jule::Ref<_1304dc9b0_TypeKind> _field_cast_kind{jule::Ref<_1304dc9b0_TypeKind>()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Bool _field_lvalue{jule::Bool()};
	jule::Bool _field_variadiced{jule::Bool()};
	jule::Bool _field_is_rune{jule::Bool()};
	jule::Any _field_model{jule::Any()};
	jule::Bool _field_decl{jule::Bool()};
	jule::Ref<_130c83140_Const> _field_constant{jule::Ref<_130c83140_Const>()};


	_13064b610_Data(jule::Ref<_1304dc9b0_TypeKind> __param_kind, jule::Ref<_1304dc9b0_TypeKind> __param_cast_kind, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Bool __param_lvalue, jule::Bool __param_variadiced, jule::Bool __param_is_rune, jule::Any __param_model, jule::Bool __param_decl, jule::Ref<_130c83140_Const> __param_constant) {
		this->self = jule::Ref<_13064b610_Data>::make(this, nullptr);

		this->_field_kind = __param_kind;
		this->_field_cast_kind = __param_cast_kind;
		this->_field_mutable = __param_mutable;
		this->_field_reference = __param_reference;
		this->_field_lvalue = __param_lvalue;
		this->_field_variadiced = __param_variadiced;
		this->_field_is_rune = __param_is_rune;
		this->_field_model = __param_model;
		this->_field_decl = __param_decl;
		this->_field_constant = __param_constant;
	}

	~_13064b610_Data(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_13064b610_Data(void) { this->self = jule::Ref<_13064b610_Data>::make(this, nullptr); }

	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_is_void(void);


	inline jule::Bool _method_is_const(void);


	inline bool operator==(const _13064b610_Data &_Src) {
		return 
			this->_field_kind == _Src._field_kind &&
			this->_field_cast_kind == _Src._field_cast_kind &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_reference == _Src._field_reference &&
			this->_field_lvalue == _Src._field_lvalue &&
			this->_field_variadiced == _Src._field_variadiced &&
			this->_field_is_rune == _Src._field_is_rune &&
			this->_field_model == _Src._field_model &&
			this->_field_decl == _Src._field_decl &&
			this->_field_constant == _Src._field_constant;
	}

	inline bool operator!=(const _13064b610_Data &_Src) { return !this->operator==(_Src); }
};


struct _13064b610_Value {
	jule::Ref<_13064b610_Value> self{};

	jule::Ref<_1275d7180_Expr> _field_expr{jule::Ref<_1275d7180_Expr>()};
	jule::Ref<_13064b610_Data> _field_data{jule::Ref<_13064b610_Data>()};


	_13064b610_Value(jule::Ref<_1275d7180_Expr> __param_expr, jule::Ref<_13064b610_Data> __param_data) {
		this->self = jule::Ref<_13064b610_Value>::make(this, nullptr);

		this->_field_expr = __param_expr;
		this->_field_data = __param_data;
	}

	~_13064b610_Value(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_13064b610_Value(void) { this->self = jule::Ref<_13064b610_Value>::make(this, nullptr); }

	inline bool operator==(const _13064b610_Value &_Src) {
		return 
			this->_field_expr == _Src._field_expr &&
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _13064b610_Value &_Src) { return !this->operator==(_Src); }
};


struct _13064b610_Eval {
	jule::Ref<_13064b610_Eval> self{};

	jule::Ref<_1300a20d0_Sema> _field_s{jule::Ref<_1300a20d0_Sema>()};
	jule::Trait<_1304dc360_Lookup> _field_lookup{jule::Trait<_1304dc360_Lookup>()};
	jule::Ref<_1304dc9b0_TypeKind> _field_prefix{jule::Ref<_1304dc9b0_TypeKind>()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Ref<_1303533b0_Var> _field_owner{jule::Ref<_1303533b0_Var>()};


	_13064b610_Eval(jule::Ref<_1300a20d0_Sema> __param_s, jule::Trait<_1304dc360_Lookup> __param_lookup, jule::Ref<_1304dc9b0_TypeKind> __param_prefix, jule::Bool __param_unsafety, jule::Ref<_1303533b0_Var> __param_owner) {
		this->self = jule::Ref<_13064b610_Eval>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_lookup = __param_lookup;
		this->_field_prefix = __param_prefix;
		this->_field_unsafety = __param_unsafety;
		this->_field_owner = __param_owner;
	}

	~_13064b610_Eval(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_13064b610_Eval(void) { this->self = jule::Ref<_13064b610_Eval>::make(this, nullptr); }

	inline void _method_push_err(_127941de0_Token,jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_is_unsafe(void);


	inline jule::Bool _method_is_global(void);


	inline jule::Ref<_13064b610_Data> _method_lit_nil(void);


	inline jule::Ref<_13064b610_Data> _method_lit_str(jule::Ref<_1275d7180_LitExpr>);


	inline jule::Ref<_13064b610_Data> _method_lit_bool(jule::Ref<_1275d7180_LitExpr>);


	inline jule::Ref<_13064b610_Data> _method_lit_rune(jule::Ref<_1275d7180_LitExpr>);


	inline jule::Ref<_13064b610_Data> _method_lit_float(jule::Ref<_1275d7180_LitExpr>);


	inline jule::Ref<_13064b610_Data> _method_lit_int(jule::Ref<_1275d7180_LitExpr>);


	inline jule::Ref<_13064b610_Data> _method_lit_num(jule::Ref<_1275d7180_LitExpr>);


	inline jule::Ref<_13064b610_Data> _method_eval_lit(jule::Ref<_1275d7180_LitExpr>);


	inline jule::Any _method_find_builtins(jule::Str);


	inline jule::Any _method_get_def(jule::Str,jule::Bool);


	inline void _method_push_reference(jule::Ref<_127ff3480_ReferenceStack>);


	inline void _method_push_reference_to_fn(jule::Ref<_127ed52e0_Fn>);


	inline void _method_push_reference_to_var(jule::Ref<_1303533b0_Var>);


	inline void _method_push_reference_to_struct(jule::Ref<_127b2e960_Struct>);


	inline jule::Ref<_13064b610_Data> _method_eval_enum(jule::Ref<_13009ed30_Enum>,_127941de0_Token);


	inline jule::Ref<_13064b610_Data> _method_eval_struct(jule::Ref<_127b2e960_StructIns>,_127941de0_Token);


	inline jule::Ref<_13064b610_Data> _method_eval_fn_ins(jule::Ref<_127ed52e0_FnIns>);


	inline jule::Ref<_13064b610_Data> _method_eval_fn(jule::Ref<_127ed52e0_Fn>,_127941de0_Token);


	inline jule::Bool _method_check_illegal_cycles(jule::Ref<_1303533b0_Var>,_127941de0_Token);


	inline jule::Ref<_13064b610_Data> _method_eval_var(jule::Ref<_1303533b0_Var>,_127941de0_Token);


	inline jule::Ref<_13064b610_Data> _method_eval_type_alias(jule::Ref<_1304dc9b0_TypeAlias>,_127941de0_Token);


	inline jule::Ref<_13064b610_Data> _method_eval_def(jule::Any,_127941de0_Token);


	inline jule::Ref<_13064b610_Data> _method_eval_ident(jule::Ref<_1275d7180_IdentExpr>);


	inline jule::Ref<_13064b610_Data> _method_eval_unary_minus(jule::Ref<_13064b610_Data>);


	inline jule::Ref<_13064b610_Data> _method_eval_unary_plus(jule::Ref<_13064b610_Data>);


	inline jule::Ref<_13064b610_Data> _method_eval_unary_caret(jule::Ref<_13064b610_Data>);


	inline jule::Ref<_13064b610_Data> _method_eval_unary_excl(jule::Ref<_13064b610_Data>);


	inline jule::Ref<_13064b610_Data> _method_eval_unary_star(jule::Ref<_13064b610_Data>,_127941de0_Token);


	inline jule::Ref<_13064b610_Data> _method_eval_unary_amper(jule::Ref<_13064b610_Data>);


	inline jule::Ref<_13064b610_Data> _method_eval_unary_type_decl(jule::Ref<_13064b610_Data>,jule::Ref<_1275d7180_UnaryExpr>);


	inline jule::Ref<_13064b610_Data> _method_eval_unary(jule::Ref<_1275d7180_UnaryExpr>);


	inline jule::Ref<_13064b610_Data> _method_eval_variadic(jule::Ref<_1275d7180_VariadicExpr>);


	inline jule::Ref<_13064b610_Data> _method_eval_unsafe(jule::Ref<_1275d7180_UnsafeExpr>);


	inline jule::Ref<_13064b610_Data> _method_eval_arr(jule::Ref<_1275d7180_SliceExpr>);


	inline jule::Ref<_13064b610_Data> _method_eval_exp_slc(jule::Ref<_1275d7180_SliceExpr>,jule::Ref<_1304dc9b0_TypeKind>);


	inline jule::Ref<_13064b610_Data> _method_eval_slice_expr(jule::Ref<_1275d7180_SliceExpr>);


	inline void _method_check_integer_indexing_by_data(jule::Ref<_13064b610_Data>,_127941de0_Token);


	inline void _method_indexing_ptr(jule::Ref<_13064b610_Data>,jule::Ref<_13064b610_Data>,jule::Ref<_1275d7180_IndexingExpr>);


	inline void _method_indexing_arr(jule::Ref<_13064b610_Data>,jule::Ref<_13064b610_Data>,jule::Ref<_1275d7180_IndexingExpr>);


	inline void _method_indexing_slc(jule::Ref<_13064b610_Data>,jule::Ref<_13064b610_Data>,jule::Ref<_1275d7180_IndexingExpr>);


	inline void _method_indexing_map(jule::Ref<_13064b610_Data>,jule::Ref<_13064b610_Data>,jule::Ref<_1275d7180_IndexingExpr>);


	inline void _method_indexing_str(jule::Ref<_13064b610_Data>,jule::Ref<_13064b610_Data>,jule::Ref<_1275d7180_IndexingExpr>);


	inline void _method_to_indexing(jule::Ref<_13064b610_Data>,jule::Ref<_13064b610_Data>,jule::Ref<_1275d7180_IndexingExpr>);


	inline jule::Ref<_13064b610_Data> _method_eval_ident_decl_from_indexing(jule::Ref<_1275d7180_IndexingExpr>);


	inline jule::Ref<_13064b610_Data> _method_eval_indexing(jule::Ref<_1275d7180_IndexingExpr>);


	inline std::tuple<jule::Ref<_13064b610_Data>,jule::Ref<_13064b610_Data>> _method_eval_slicing_exprs(jule::Ref<_1275d7180_SlicingExpr>);


	inline void _method_slicing_arr(jule::Ref<_13064b610_Data>);


	inline void _method_slicing_slc(jule::Ref<_13064b610_Data>);


	inline void _method_slicing_str(jule::Ref<_13064b610_Data>,jule::Ref<_13064b610_Data>,jule::Ref<_13064b610_Data>);


	inline void _method_check_slicing(jule::Ref<_13064b610_Data>,jule::Ref<_13064b610_Data>,jule::Ref<_13064b610_Data>,jule::Ref<_1275d7180_SlicingExpr>);


	inline jule::Ref<_13064b610_Data> _method_eval_slicing(jule::Ref<_1275d7180_SlicingExpr>);


	inline void _method_cast_ptr(jule::Ref<_1304dc9b0_TypeKind>,jule::Ref<_13064b610_Data>,_127941de0_Token);


	inline void _method_cast_struct(jule::Ref<_1304dc9b0_TypeKind>,jule::Ref<_13064b610_Data>,_127941de0_Token);


	inline void _method_cast_ref(jule::Ref<_1304dc9b0_TypeKind>,jule::Ref<_13064b610_Data>,_127941de0_Token);


	inline void _method_cast_slc(jule::Ref<_1304dc9b0_TypeKind>,jule::Ref<_13064b610_Data>,_127941de0_Token);


	inline void _method_cast_str(jule::Ref<_13064b610_Data>,_127941de0_Token);


	inline void _method_cast_int(jule::Ref<_1304dc9b0_TypeKind>,jule::Ref<_13064b610_Data>,_127941de0_Token);


	inline void _method_cast_num(jule::Ref<_1304dc9b0_TypeKind>,jule::Ref<_13064b610_Data>,_127941de0_Token);


	inline void _method_cast_prim(jule::Ref<_1304dc9b0_TypeKind>,jule::Ref<_13064b610_Data>,_127941de0_Token);


	inline jule::Ref<_13064b610_Data> _method_eval_cast_by_type_n_data(jule::Ref<_1304dc9b0_TypeKind>,jule::Ref<_13064b610_Data>,_127941de0_Token);


	inline jule::Ref<_13064b610_Data> _method_eval_cast(jule::Ref<_1275d7180_CastExpr>);


	inline jule::Ref<_13064b610_Data> _method_eval_ns_selection(jule::Ref<_1275d7180_NsSelectionExpr>);


	inline jule::Ref<_13064b610_Data> _method_eval_struct_lit_explicit(jule::Ref<_127b2e960_StructIns>,jule::Slice<jule::Any>,_127941de0_Token);


	inline jule::Ref<_13064b610_Data> _method_eval_struct_lit(jule::Ref<_1275d7180_StructLit>);


	inline jule::Ref<_13064b610_Data> _method_eval_type(jule::Ref<_1275d7180_TypeDecl>);


	inline jule::Ref<_13064b610_Data> _method_call_type_fn(jule::Ref<_1275d7180_FnCallExpr>,jule::Ref<_13064b610_Data>);


	inline std::tuple<jule::Bool,jule::Bool> _method_check_fn_call_generics(jule::Ref<_127ed52e0_FnIns>,jule::Ref<_1275d7180_FnCallExpr>);


	inline jule::Ref<_13064b610_Data> _method_call_builtin_fn(jule::Ref<_1275d7180_FnCallExpr>,jule::Ref<_13064b610_Data>);


	inline void _method_check_fn_of_concurrent_call(jule::Ref<_127ed52e0_FnIns>&,_127941de0_Token);


	inline jule::Ref<_13064b610_Data> _method_call_fn(jule::Ref<_1275d7180_FnCallExpr>,jule::Ref<_13064b610_Data>);


	inline jule::Ref<_13064b610_Data> _method_eval_fn_call(jule::Ref<_1275d7180_FnCallExpr>);


	inline jule::Ref<_13064b610_Data> _method_eval_enum_static(jule::Ref<_13009ed30_Enum>,_127941de0_Token);


	inline jule::Ref<_13064b610_Data> _method_eval_struct_static(jule::Ref<_127b2e960_StructIns>,_127941de0_Token);


	inline jule::Ref<_13064b610_Data> _method_eval_trait_sub_ident(jule::Ref<_13064b610_Data>,jule::Ref<_130099320_Trait>,_127941de0_Token);


	inline jule::Ref<_13064b610_Data> _method_eval_struct_sub_ident(jule::Ref<_13064b610_Data>,jule::Ref<_127b2e960_StructIns>,jule::Ref<_1275d7180_SubIdentExpr>,jule::Bool);


	inline jule::Ref<_13064b610_Data> _method_eval_slice_sub_ident(jule::Ref<_13064b610_Data>,_127941de0_Token);


	inline jule::Ref<_13064b610_Data> _method_eval_array_sub_ident(jule::Ref<_13064b610_Data>,_127941de0_Token);


	inline jule::Ref<_13064b610_Data> _method_eval_map_sub_ident(jule::Ref<_13064b610_Data>,_127941de0_Token);


	inline jule::Ref<_13064b610_Data> _method_eval_str_sub_ident(jule::Ref<_13064b610_Data>,_127941de0_Token);


	inline jule::Ref<_13064b610_Data> _method_eval_int_type_static(_127941de0_Token);


	inline jule::Ref<_13064b610_Data> _method_eval_uint_type_static(_127941de0_Token);


	inline jule::Ref<_13064b610_Data> _method_eval_i8_type_static(_127941de0_Token);


	inline jule::Ref<_13064b610_Data> _method_eval_i16_type_static(_127941de0_Token);


	inline jule::Ref<_13064b610_Data> _method_eval_i32_type_static(_127941de0_Token);


	inline jule::Ref<_13064b610_Data> _method_eval_i64_type_static(_127941de0_Token);


	inline jule::Ref<_13064b610_Data> _method_eval_u8_type_static(_127941de0_Token);


	inline jule::Ref<_13064b610_Data> _method_eval_u16_type_static(_127941de0_Token);


	inline jule::Ref<_13064b610_Data> _method_eval_u32_type_static(_127941de0_Token);


	inline jule::Ref<_13064b610_Data> _method_eval_u64_type_static(_127941de0_Token);


	inline jule::Ref<_13064b610_Data> _method_eval_f32_type_tatic(_127941de0_Token);


	inline jule::Ref<_13064b610_Data> _method_eval_f64_type_static(_127941de0_Token);


	inline jule::Ref<_13064b610_Data> _method_eval_prim_static(jule::Str,_127941de0_Token);


	inline jule::Ref<_13064b610_Data> _method_eval_type_static(jule::Ref<_13064b610_Data>,jule::Ref<_1275d7180_SubIdentExpr>);


	inline jule::Ref<_13064b610_Data> _method_eval_obj_sub_ident(jule::Ref<_13064b610_Data>,jule::Ref<_1275d7180_SubIdentExpr>);


	inline jule::Ref<_13064b610_Data> _method_eval_sub_ident(jule::Ref<_1275d7180_SubIdentExpr>);


	inline jule::Ref<_13064b610_Data> _method_eval_tuple(jule::Ref<_1275d7180_TupleExpr>);


	inline jule::Ref<_13064b610_Data> _method_eval_map(jule::Ref<_1304dc9b0_Map>,jule::Ref<_1275d7180_BraceLit>);


	inline jule::Ref<_13064b610_Data> _method_eval_brace_lit(jule::Ref<_1275d7180_BraceLit>);


	inline jule::Ref<_13064b610_Data> _method_eval_anon_fn(jule::Ref<_1275d7180_FnDecl>);


	inline jule::Ref<_13064b610_Data> _method_eval_binop(jule::Ref<_1275d7180_BinopExpr>);


	inline jule::Ref<_13064b610_Data> _method_eval_expr_kind(jule::Any);


	inline jule::Ref<_13064b610_Data> _method_eval(jule::Ref<_1275d7180_Expr>);


	inline jule::Ref<_13064b610_Data> _method_eval_expr(jule::Ref<_1275d7180_Expr>);


	inline bool operator==(const _13064b610_Eval &_Src) {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_lookup == _Src._field_lookup &&
			this->_field_prefix == _Src._field_prefix &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_owner == _Src._field_owner;
	}

	inline bool operator!=(const _13064b610_Eval &_Src) { return !this->operator==(_Src); }
};


struct _1304dc9b0_TypeKind: public _1304dc9b0_Kind {
	jule::Ref<_1304dc9b0_TypeKind> self{};

	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Str _field_cpp_ident{jule::Str()};
	jule::Trait<_1304dc9b0_Kind> _field_kind{jule::Trait<_1304dc9b0_Kind>()};


	_1304dc9b0_TypeKind(jule::Bool __param_cpp_linked, jule::Str __param_cpp_ident, jule::Trait<_1304dc9b0_Kind> __param_kind) {
		this->self = jule::Ref<_1304dc9b0_TypeKind>::make(this, nullptr);

		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_cpp_ident = __param_cpp_ident;
		this->_field_kind = __param_kind;
	}

	~_1304dc9b0_TypeKind(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1304dc9b0_TypeKind(void) { this->self = jule::Ref<_1304dc9b0_TypeKind>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1304dc9b0_TypeKind>);


	inline jule::Ref<_1304dc9b0_TypeKind> _method_clone(void);


	inline jule::Bool _method_is_nil(void);


	inline jule::Bool _method_is_void(void);


	inline jule::Ref<_1304dc9b0_Prim> _method_prim(void);


	inline jule::Ref<_1304dc9b0_Ref> _method_ref(void);


	inline jule::Ref<_1304dc9b0_Ptr> _method_ptr(void);


	inline jule::Ref<_13009ed30_Enum> _method_enm(void);


	inline jule::Ref<_1304dc9b0_Arr> _method_arr(void);


	inline jule::Ref<_1304dc9b0_Slc> _method_slc(void);


	inline jule::Ref<_127ed52e0_FnIns> _method_fnc(void);


	inline jule::Ref<_127b2e960_StructIns> _method_strct(void);


	inline jule::Ref<_130099320_Trait> _method_trt(void);


	inline jule::Ref<_1304dc9b0_Map> _method_map(void);


	inline jule::Ref<_1304dc9b0_Tuple> _method_tup(void);


	inline bool operator==(const _1304dc9b0_TypeKind &_Src) {
		return 
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_cpp_ident == _Src._field_cpp_ident &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1304dc9b0_TypeKind &_Src) { return !this->operator==(_Src); }
};


struct _1304dc9b0_TypeSymbol {
	jule::Ref<_1304dc9b0_TypeSymbol> self{};

	jule::Ref<_1275d7180_TypeDecl> _field_decl{jule::Ref<_1275d7180_TypeDecl>()};
	jule::Ref<_1304dc9b0_TypeKind> _field_kind{jule::Ref<_1304dc9b0_TypeKind>()};


	_1304dc9b0_TypeSymbol(jule::Ref<_1275d7180_TypeDecl> __param_decl, jule::Ref<_1304dc9b0_TypeKind> __param_kind) {
		this->self = jule::Ref<_1304dc9b0_TypeSymbol>::make(this, nullptr);

		this->_field_decl = __param_decl;
		this->_field_kind = __param_kind;
	}

	~_1304dc9b0_TypeSymbol(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1304dc9b0_TypeSymbol(void) { this->self = jule::Ref<_1304dc9b0_TypeSymbol>::make(this, nullptr); }

	inline jule::Bool _method_checked(void);


	inline void _method_remove_kind(void);


	inline bool operator==(const _1304dc9b0_TypeSymbol &_Src) {
		return 
			this->_field_decl == _Src._field_decl &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1304dc9b0_TypeSymbol &_Src) { return !this->operator==(_Src); }
};


struct _1304dc9b0_Prim: public _1304dc9b0_Kind {
	jule::Ref<_1304dc9b0_Prim> self{};

	jule::Str _field_kind{jule::Str()};


	_1304dc9b0_Prim(jule::Str __param_kind) {
		this->self = jule::Ref<_1304dc9b0_Prim>::make(this, nullptr);

		this->_field_kind = __param_kind;
	}

	~_1304dc9b0_Prim(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1304dc9b0_Prim(void) { this->self = jule::Ref<_1304dc9b0_Prim>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1304dc9b0_TypeKind>);


	inline jule::Bool _method_is_i8(void);


	inline jule::Bool _method_is_i16(void);


	inline jule::Bool _method_is_i32(void);


	inline jule::Bool _method_is_i64(void);


	inline jule::Bool _method_is_u8(void);


	inline jule::Bool _method_is_u16(void);


	inline jule::Bool _method_is_u32(void);


	inline jule::Bool _method_is_u64(void);


	inline jule::Bool _method_is_f32(void);


	inline jule::Bool _method_is_f64(void);


	inline jule::Bool _method_is_int(void);


	inline jule::Bool _method_is_uint(void);


	inline jule::Bool _method_is_uintptr(void);


	inline jule::Bool _method_is_bool(void);


	inline jule::Bool _method_is_str(void);


	inline jule::Bool _method_is_any(void);


	inline bool operator==(const _1304dc9b0_Prim &_Src) {
		return 
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1304dc9b0_Prim &_Src) { return !this->operator==(_Src); }
};


struct _1304dc9b0_Ref: public _1304dc9b0_Kind {
	jule::Ref<_1304dc9b0_Ref> self{};

	jule::Ref<_1304dc9b0_TypeKind> _field_elem{jule::Ref<_1304dc9b0_TypeKind>()};


	_1304dc9b0_Ref(jule::Ref<_1304dc9b0_TypeKind> __param_elem) {
		this->self = jule::Ref<_1304dc9b0_Ref>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_1304dc9b0_Ref(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1304dc9b0_Ref(void) { this->self = jule::Ref<_1304dc9b0_Ref>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1304dc9b0_TypeKind>);


	inline bool operator==(const _1304dc9b0_Ref &_Src) {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1304dc9b0_Ref &_Src) { return !this->operator==(_Src); }
};


struct _1304dc9b0_Slc: public _1304dc9b0_Kind {
	jule::Ref<_1304dc9b0_Slc> self{};

	jule::Ref<_1304dc9b0_TypeKind> _field_elem{jule::Ref<_1304dc9b0_TypeKind>()};


	_1304dc9b0_Slc(jule::Ref<_1304dc9b0_TypeKind> __param_elem) {
		this->self = jule::Ref<_1304dc9b0_Slc>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_1304dc9b0_Slc(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1304dc9b0_Slc(void) { this->self = jule::Ref<_1304dc9b0_Slc>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1304dc9b0_TypeKind>);


	inline bool operator==(const _1304dc9b0_Slc &_Src) {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1304dc9b0_Slc &_Src) { return !this->operator==(_Src); }
};


struct _1304dc9b0_Tuple: public _1304dc9b0_Kind {
	jule::Ref<_1304dc9b0_Tuple> self{};

	jule::Slice<jule::Ref<_1304dc9b0_TypeKind>> _field_types{jule::Slice<jule::Ref<_1304dc9b0_TypeKind>>()};


	_1304dc9b0_Tuple(jule::Slice<jule::Ref<_1304dc9b0_TypeKind>> __param_types) {
		this->self = jule::Ref<_1304dc9b0_Tuple>::make(this, nullptr);

		this->_field_types = __param_types;
	}

	~_1304dc9b0_Tuple(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1304dc9b0_Tuple(void) { this->self = jule::Ref<_1304dc9b0_Tuple>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1304dc9b0_TypeKind>);


	inline bool operator==(const _1304dc9b0_Tuple &_Src) {
		return 
			this->_field_types == _Src._field_types;
	}

	inline bool operator!=(const _1304dc9b0_Tuple &_Src) { return !this->operator==(_Src); }
};


struct _1304dc9b0_Map: public _1304dc9b0_Kind {
	jule::Ref<_1304dc9b0_Map> self{};

	jule::Ref<_1304dc9b0_TypeKind> _field_key{jule::Ref<_1304dc9b0_TypeKind>()};
	jule::Ref<_1304dc9b0_TypeKind> _field_val{jule::Ref<_1304dc9b0_TypeKind>()};


	_1304dc9b0_Map(jule::Ref<_1304dc9b0_TypeKind> __param_key, jule::Ref<_1304dc9b0_TypeKind> __param_val) {
		this->self = jule::Ref<_1304dc9b0_Map>::make(this, nullptr);

		this->_field_key = __param_key;
		this->_field_val = __param_val;
	}

	~_1304dc9b0_Map(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1304dc9b0_Map(void) { this->self = jule::Ref<_1304dc9b0_Map>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1304dc9b0_TypeKind>);


	inline bool operator==(const _1304dc9b0_Map &_Src) {
		return 
			this->_field_key == _Src._field_key &&
			this->_field_val == _Src._field_val;
	}

	inline bool operator!=(const _1304dc9b0_Map &_Src) { return !this->operator==(_Src); }
};


struct _1304dc9b0_Arr: public _1304dc9b0_Kind {
	jule::Ref<_1304dc9b0_Arr> self{};

	jule::Bool _field_auto{jule::Bool()};
	jule::Int _field_n{jule::Int()};
	jule::Ref<_1304dc9b0_TypeKind> _field_elem{jule::Ref<_1304dc9b0_TypeKind>()};


	_1304dc9b0_Arr(jule::Bool __param_auto, jule::Int __param_n, jule::Ref<_1304dc9b0_TypeKind> __param_elem) {
		this->self = jule::Ref<_1304dc9b0_Arr>::make(this, nullptr);

		this->_field_auto = __param_auto;
		this->_field_n = __param_n;
		this->_field_elem = __param_elem;
	}

	~_1304dc9b0_Arr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1304dc9b0_Arr(void) { this->self = jule::Ref<_1304dc9b0_Arr>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1304dc9b0_TypeKind>);


	inline bool operator==(const _1304dc9b0_Arr &_Src) {
		return 
			this->_field_auto == _Src._field_auto &&
			this->_field_n == _Src._field_n &&
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1304dc9b0_Arr &_Src) { return !this->operator==(_Src); }
};


struct _1304dc9b0_Ptr: public _1304dc9b0_Kind {
	jule::Ref<_1304dc9b0_Ptr> self{};

	jule::Ref<_1304dc9b0_TypeKind> _field_elem{jule::Ref<_1304dc9b0_TypeKind>()};


	_1304dc9b0_Ptr(jule::Ref<_1304dc9b0_TypeKind> __param_elem) {
		this->self = jule::Ref<_1304dc9b0_Ptr>::make(this, nullptr);

		this->_field_elem = __param_elem;
	}

	~_1304dc9b0_Ptr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1304dc9b0_Ptr(void) { this->self = jule::Ref<_1304dc9b0_Ptr>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1304dc9b0_TypeKind>);


	inline jule::Bool _method_is_unsafe(void);


	inline bool operator==(const _1304dc9b0_Ptr &_Src) {
		return 
			this->_field_elem == _Src._field_elem;
	}

	inline bool operator!=(const _1304dc9b0_Ptr &_Src) { return !this->operator==(_Src); }
};


struct _1304dc9b0_Referencer {
	jule::Ref<_1304dc9b0_Referencer> self{};

	jule::Str _field_ident{jule::Str()};
	jule::Any _field_owner{jule::Any()};
	jule::Slice<jule::Any>* _field_refs{nullptr};


	_1304dc9b0_Referencer(jule::Str __param_ident, jule::Any __param_owner, jule::Slice<jule::Any>* __param_refs) {
		this->self = jule::Ref<_1304dc9b0_Referencer>::make(this, nullptr);

		this->_field_ident = __param_ident;
		this->_field_owner = __param_owner;
		this->_field_refs = __param_refs;
	}

	~_1304dc9b0_Referencer(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1304dc9b0_Referencer(void) { this->self = jule::Ref<_1304dc9b0_Referencer>::make(this, nullptr); }

	inline bool operator==(const _1304dc9b0_Referencer &_Src) {
		return 
			this->_field_ident == _Src._field_ident &&
			this->_field_owner == _Src._field_owner &&
			this->_field_refs == _Src._field_refs;
	}

	inline bool operator!=(const _1304dc9b0_Referencer &_Src) { return !this->operator==(_Src); }
};


struct _1271b5120_PlainImporter: public _1300a4650_Importer {
	jule::Ref<_1271b5120_PlainImporter> self{};

	jule::Slice<jule::Ref<_1300a4650_ImportInfo>> _field_all_packages{jule::Slice<jule::Ref<_1300a4650_ImportInfo>>()};


	_1271b5120_PlainImporter(jule::Slice<jule::Ref<_1300a4650_ImportInfo>> __param_all_packages) {
		this->self = jule::Ref<_1271b5120_PlainImporter>::make(this, nullptr);

		this->_field_all_packages = __param_all_packages;
	}

	~_1271b5120_PlainImporter(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1271b5120_PlainImporter(void) { this->self = jule::Ref<_1271b5120_PlainImporter>::make(this, nullptr); }

	inline jule::Ref<_1300a4650_ImportInfo> _method_get_import(jule::Str);


	inline std::tuple<jule::Slice<jule::Ref<_1275d0e60_Ast>>,jule::Slice<_136e99d00_Log>> _method_import_package(jule::Str);


	inline void _method_imported(jule::Ref<_1300a4650_ImportInfo>);


	inline bool operator==(const _1271b5120_PlainImporter &_Src) {
		return 
			this->_field_all_packages == _Src._field_all_packages;
	}

	inline bool operator!=(const _1271b5120_PlainImporter &_Src) { return !this->operator==(_Src); }
};


struct _136f09c40_IR {
	jule::Ref<_136f09c40_IR> self{};

	jule::Slice<jule::Str> _field_passes{jule::Slice<jule::Str>()};
	jule::Ref<_1300a4650_Package> _field_main{jule::Ref<_1300a4650_Package>()};
	jule::Slice<jule::Ref<_1300a4650_ImportInfo>> _field_used{jule::Slice<jule::Ref<_1300a4650_ImportInfo>>()};


	_136f09c40_IR(jule::Slice<jule::Str> __param_passes, jule::Ref<_1300a4650_Package> __param_main, jule::Slice<jule::Ref<_1300a4650_ImportInfo>> __param_used) {
		this->self = jule::Ref<_136f09c40_IR>::make(this, nullptr);

		this->_field_passes = __param_passes;
		this->_field_main = __param_main;
		this->_field_used = __param_used;
	}

	~_136f09c40_IR(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_136f09c40_IR(void) { this->self = jule::Ref<_136f09c40_IR>::make(this, nullptr); }

	inline jule::Slice<jule::Ref<_127b2e960_Struct>> _method_get_all_structures(void);


	inline jule::Slice<jule::Ref<_1303533b0_Var>> _method_get_all_variables(void);


	inline bool operator==(const _136f09c40_IR &_Src) {
		return 
			this->_field_passes == _Src._field_passes &&
			this->_field_main == _Src._field_main &&
			this->_field_used == _Src._field_used;
	}

	inline bool operator!=(const _136f09c40_IR &_Src) { return !this->operator==(_Src); }
};


struct _1275c5880_ScopeDeadCode {
	jule::Ref<_1275c5880_ScopeDeadCode> self{};

	jule::Ref<_1275c5880_ScopeDeadCode> _field_parent{jule::Ref<_1275c5880_ScopeDeadCode>()};
	jule::Ref<_1300a11b0_Scope> _field_s{jule::Ref<_1300a11b0_Scope>()};
	_127ab7fa0_Vector_8* _field_stmts{nullptr};
	jule::Int _field_i{jule::Int()};


	_1275c5880_ScopeDeadCode(jule::Ref<_1275c5880_ScopeDeadCode> __param_parent, jule::Ref<_1300a11b0_Scope> __param_s, _127ab7fa0_Vector_8* __param_stmts, jule::Int __param_i) {
		this->self = jule::Ref<_1275c5880_ScopeDeadCode>::make(this, nullptr);

		this->_field_parent = __param_parent;
		this->_field_s = __param_s;
		this->_field_stmts = __param_stmts;
		this->_field_i = __param_i;
	}

	~_1275c5880_ScopeDeadCode(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275c5880_ScopeDeadCode(void) { this->self = jule::Ref<_1275c5880_ScopeDeadCode>::make(this, nullptr); }

	inline void _method_optimize_child(jule::Ref<_1300a11b0_Scope>);


	inline void _method_eliminate_followed(void);


	inline void _method_optimize_stmt(jule::Any);


	inline void _method_optimize_stmts(void);


	inline bool operator==(const _1275c5880_ScopeDeadCode &_Src) {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_s == _Src._field_s &&
			this->_field_stmts == _Src._field_stmts &&
			this->_field_i == _Src._field_i;
	}

	inline bool operator!=(const _1275c5880_ScopeDeadCode &_Src) { return !this->operator==(_Src); }
};


struct _127fba3d0_IndexRangeSetter: public _127fba3d0_RangeSetter {
	jule::Ref<_127fba3d0_IndexRangeSetter> self{};

	~_127fba3d0_IndexRangeSetter(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127fba3d0_IndexRangeSetter(void) { this->self = jule::Ref<_127fba3d0_IndexRangeSetter>::make(this, nullptr); }

	inline jule::Str _method_setup_vars(jule::Ref<_1303533b0_Var>,jule::Ref<_1303533b0_Var>);


	inline jule::Str _method_next_steps(jule::Ref<_1303533b0_Var>,jule::Ref<_1303533b0_Var>,jule::Str);


	inline bool operator==(const _127fba3d0_IndexRangeSetter &_Src) { return true; }

	inline bool operator!=(const _127fba3d0_IndexRangeSetter &_Src) { return !this->operator==(_Src); }
};


struct _127fba3d0_MapRangeSetter: public _127fba3d0_RangeSetter {
	jule::Ref<_127fba3d0_MapRangeSetter> self{};

	~_127fba3d0_MapRangeSetter(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127fba3d0_MapRangeSetter(void) { this->self = jule::Ref<_127fba3d0_MapRangeSetter>::make(this, nullptr); }

	inline jule::Str _method_setup_vars(jule::Ref<_1303533b0_Var>,jule::Ref<_1303533b0_Var>);


	inline jule::Str _method_next_steps(jule::Ref<_1303533b0_Var>,jule::Ref<_1303533b0_Var>,jule::Str);


	inline bool operator==(const _127fba3d0_MapRangeSetter &_Src) { return true; }

	inline bool operator!=(const _127fba3d0_MapRangeSetter &_Src) { return !this->operator==(_Src); }
};


struct _130f8bbe0_OrderedDecls {
	jule::Ref<_130f8bbe0_OrderedDecls> self{};

	jule::Slice<jule::Ref<_127b2e960_Struct>> _field_structs{jule::Slice<jule::Ref<_127b2e960_Struct>>()};
	jule::Slice<jule::Ref<_1303533b0_Var>> _field_globals{jule::Slice<jule::Ref<_1303533b0_Var>>()};


	_130f8bbe0_OrderedDecls(jule::Slice<jule::Ref<_127b2e960_Struct>> __param_structs, jule::Slice<jule::Ref<_1303533b0_Var>> __param_globals) {
		this->self = jule::Ref<_130f8bbe0_OrderedDecls>::make(this, nullptr);

		this->_field_structs = __param_structs;
		this->_field_globals = __param_globals;
	}

	~_130f8bbe0_OrderedDecls(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_130f8bbe0_OrderedDecls(void) { this->self = jule::Ref<_130f8bbe0_OrderedDecls>::make(this, nullptr); }

	inline bool operator==(const _130f8bbe0_OrderedDecls &_Src) {
		return 
			this->_field_structs == _Src._field_structs &&
			this->_field_globals == _Src._field_globals;
	}

	inline bool operator!=(const _130f8bbe0_OrderedDecls &_Src) { return !this->operator==(_Src); }
};


struct _1304dc9b0_TypeChecker {
	jule::Ref<_1304dc9b0_TypeChecker> self{};

	jule::Ref<_1300a20d0_Sema> _field_s{jule::Ref<_1300a20d0_Sema>()};
	jule::Trait<_1304dc360_Lookup> _field_lookup{jule::Trait<_1304dc360_Lookup>()};
	jule::Ref<_1304dc9b0_Referencer> _field_referencer{jule::Ref<_1304dc9b0_Referencer>()};
	_127941de0_Token _field_error_token{_127941de0_Token()};
	jule::Slice<jule::Ref<_1275d7180_GenericDecl>> _field_ignore_generics{jule::Slice<jule::Ref<_1275d7180_GenericDecl>>()};
	jule::Slice<jule::Ref<_1304dc9b0_TypeAlias>> _field_use_generics{jule::Slice<jule::Ref<_1304dc9b0_TypeAlias>>()};
	jule::Bool _field_not_plain{jule::Bool()};


	_1304dc9b0_TypeChecker(jule::Ref<_1300a20d0_Sema> __param_s, jule::Trait<_1304dc360_Lookup> __param_lookup, jule::Ref<_1304dc9b0_Referencer> __param_referencer, _127941de0_Token __param_error_token, jule::Slice<jule::Ref<_1275d7180_GenericDecl>> __param_ignore_generics, jule::Slice<jule::Ref<_1304dc9b0_TypeAlias>> __param_use_generics, jule::Bool __param_not_plain) {
		this->self = jule::Ref<_1304dc9b0_TypeChecker>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_lookup = __param_lookup;
		this->_field_referencer = __param_referencer;
		this->_field_error_token = __param_error_token;
		this->_field_ignore_generics = __param_ignore_generics;
		this->_field_use_generics = __param_use_generics;
		this->_field_not_plain = __param_not_plain;
	}

	~_1304dc9b0_TypeChecker(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1304dc9b0_TypeChecker(void) { this->self = jule::Ref<_1304dc9b0_TypeChecker>::make(this, nullptr); }

	inline void _method_push_err(_127941de0_Token,jule::Str,jule::Slice<jule::Any>);


	inline jule::Ref<_1304dc9b0_Prim> _method_build_prim(jule::Ref<_1275d7180_IdentTypeDecl>);


	inline jule::Bool _method_check_illegal_cycles(jule::Ref<_1275d7180_IdentTypeDecl>,jule::Any);


	inline jule::Trait<_1304dc9b0_Kind> _method_from_type_alias(jule::Ref<_1275d7180_IdentTypeDecl>,jule::Ref<_1304dc9b0_TypeAlias>);


	inline jule::Ref<_13009ed30_Enum> _method_from_enum(jule::Ref<_1275d7180_IdentTypeDecl>,jule::Ref<_13009ed30_Enum>);


	inline jule::Bool _method_check_struct_ins(jule::Ref<_127b2e960_StructIns>,_127941de0_Token);


	inline void _method_append_used_struct_reference(jule::Ref<_127b2e960_Struct>);


	inline jule::Ref<_127b2e960_StructIns> _method_from_struct(jule::Ref<_1275d7180_IdentTypeDecl>,jule::Ref<_127b2e960_Struct>);


	inline jule::Trait<_1304dc9b0_Kind> _method_get_def(jule::Ref<_1275d7180_IdentTypeDecl>);


	inline jule::Trait<_1304dc9b0_Kind> _method_build_ident(jule::Ref<_1275d7180_IdentTypeDecl>);


	inline jule::Ref<_1304dc9b0_Ref> _method_build_ref_from_type(jule::Ref<_1304dc9b0_TypeKind>);


	inline jule::Ref<_1304dc9b0_Ref> _method_build_ref(jule::Ref<_1275d7180_RefTypeDecl>);


	inline jule::Ref<_1304dc9b0_Ptr> _method_build_ptr_from_type(jule::Ref<_1304dc9b0_TypeKind>);


	inline jule::Ref<_1304dc9b0_Ptr> _method_build_ptr(jule::Ref<_1275d7180_PtrTypeDecl>);


	inline jule::Ref<_1304dc9b0_Slc> _method_build_slc(jule::Ref<_1275d7180_SlcTypeDecl>);


	inline jule::Ref<_1304dc9b0_Arr> _method_build_arr(jule::Ref<_1275d7180_ArrTypeDecl>);


	inline jule::Ref<_1304dc9b0_Map> _method_build_map(jule::Ref<_1275d7180_MapTypeDecl>);


	inline jule::Ref<_1304dc9b0_Tuple> _method_build_tuple(jule::Ref<_1275d7180_TupleTypeDecl>);


	inline jule::Bool _method_check_fn_types(jule::Ref<_127ed52e0_FnIns>);


	inline jule::Ref<_127ed52e0_FnIns> _method_build_fn(jule::Ref<_1275d7180_FnDecl>);


	inline jule::Trait<_1304dc9b0_Kind> _method_build_by_std_namespace(jule::Ref<_1275d7180_NamespaceTypeDecl>);


	inline jule::Trait<_1304dc9b0_Kind> _method_build_by_namespace(jule::Ref<_1275d7180_NamespaceTypeDecl>);


	inline jule::Ref<_1304dc9b0_TypeKind> _method_build(jule::Any);


	inline jule::Ref<_1304dc9b0_TypeKind> _method_check_decl(jule::Ref<_1275d7180_TypeDecl>);


	inline void _method_check(jule::Ref<_1304dc9b0_TypeSymbol>);


	inline bool operator==(const _1304dc9b0_TypeChecker &_Src) {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_lookup == _Src._field_lookup &&
			this->_field_referencer == _Src._field_referencer &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_ignore_generics == _Src._field_ignore_generics &&
			this->_field_use_generics == _Src._field_use_generics &&
			this->_field_not_plain == _Src._field_not_plain;
	}

	inline bool operator!=(const _1304dc9b0_TypeChecker &_Src) { return !this->operator==(_Src); }
};


struct _1304dc9b0_TypeAlias {
	jule::Ref<_1304dc9b0_TypeAlias> self{};

	jule::Ref<_1275d7180_ScopeTree> _field_scope{jule::Ref<_1275d7180_ScopeTree>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_used{jule::Bool()};
	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1304dc9b0_TypeSymbol> _field_kind{jule::Ref<_1304dc9b0_TypeSymbol>()};
	jule::Str _field_doc{jule::Str()};
	jule::Slice<jule::Any> _field_refers{jule::Slice<jule::Any>()};


	_1304dc9b0_TypeAlias(jule::Ref<_1275d7180_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_used, _127941de0_Token __param_token, jule::Str __param_ident, jule::Ref<_1304dc9b0_TypeSymbol> __param_kind, jule::Str __param_doc, jule::Slice<jule::Any> __param_refers) {
		this->self = jule::Ref<_1304dc9b0_TypeAlias>::make(this, nullptr);

		this->_field_scope = __param_scope;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_used = __param_used;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
		this->_field_doc = __param_doc;
		this->_field_refers = __param_refers;
	}

	~_1304dc9b0_TypeAlias(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1304dc9b0_TypeAlias(void) { this->self = jule::Ref<_1304dc9b0_TypeAlias>::make(this, nullptr); }

	inline bool operator==(const _1304dc9b0_TypeAlias &_Src) {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_used == _Src._field_used &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_doc == _Src._field_doc &&
			this->_field_refers == _Src._field_refers;
	}

	inline bool operator!=(const _1304dc9b0_TypeAlias &_Src) { return !this->operator==(_Src); }
};


struct _13064b610_BinopSolver {
	jule::Ref<_13064b610_BinopSolver> self{};

	jule::Ref<_13064b610_Eval> _field_e{jule::Ref<_13064b610_Eval>()};
	jule::Ref<_13064b610_Data> _field_l{jule::Ref<_13064b610_Data>()};
	jule::Ref<_13064b610_Data> _field_r{jule::Ref<_13064b610_Data>()};
	_127941de0_Token _field_op{_127941de0_Token()};


	_13064b610_BinopSolver(jule::Ref<_13064b610_Eval> __param_e, jule::Ref<_13064b610_Data> __param_l, jule::Ref<_13064b610_Data> __param_r, _127941de0_Token __param_op) {
		this->self = jule::Ref<_13064b610_BinopSolver>::make(this, nullptr);

		this->_field_e = __param_e;
		this->_field_l = __param_l;
		this->_field_r = __param_r;
		this->_field_op = __param_op;
	}

	~_13064b610_BinopSolver(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_13064b610_BinopSolver(void) { this->self = jule::Ref<_13064b610_BinopSolver>::make(this, nullptr); }

	inline jule::Bool _method_check_type_compatibility(void);


	inline jule::Ref<_13064b610_Data> _method_eval_nil(void);


	inline jule::Ref<_13064b610_Data> _method_eval_enum(void);


	inline jule::Ref<_13064b610_Data> _method_eval_ptr(void);


	inline jule::Ref<_13064b610_Data> _method_eval_arr(void);


	inline jule::Ref<_13064b610_Data> _method_eval_slc(void);


	inline jule::Ref<_13064b610_Data> _method_eval_fn(void);


	inline jule::Ref<_13064b610_Data> _method_eval_struct(void);


	inline jule::Ref<_13064b610_Data> _method_eval_trait(void);


	inline jule::Ref<_13064b610_Data> _method_eval_any(void);


	inline jule::Ref<_13064b610_Data> _method_eval_bool(void);


	inline jule::Ref<_13064b610_Data> _method_eval_str(void);


	inline void _method_set_type_to_greater(void);


	inline void _method_mod(void);


	inline jule::Ref<_13064b610_Data> _method_eval_float(void);


	inline jule::Ref<_13064b610_Data> _method_eval_unsig_int(void);


	inline jule::Ref<_13064b610_Data> _method_eval_sig_int(void);


	inline jule::Ref<_13064b610_Data> _method_eval_prim(void);


	inline jule::Ref<_13064b610_Data> _method_eval(void);


	inline void _method_assign_shift(jule::Ref<_13064b610_Data>,jule::F64);


	inline void _method_solve_const(jule::Ref<_13064b610_Data>);


	inline void _method_post_const(jule::Ref<_13064b610_Data>);


	inline void _method_prepare_data(jule::Ref<_13064b610_Data>);


	inline void _method_prepare_eval(void);


	inline void _method_check_data(jule::Ref<_13064b610_Data>);


	inline void _method_check_datas(void);


	inline jule::Ref<_13064b610_Data> _method_solve_explicit(jule::Ref<_13064b610_Data>,jule::Ref<_13064b610_Data>);


	inline jule::Ref<_13064b610_Data> _method_solve(jule::Ref<_1275d7180_BinopExpr>);


	inline bool operator==(const _13064b610_BinopSolver &_Src) {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_op == _Src._field_op;
	}

	inline bool operator!=(const _13064b610_BinopSolver &_Src) { return !this->operator==(_Src); }
};


struct _13032cf90_RetTypeChecker {
	jule::Ref<_13032cf90_RetTypeChecker> self{};

	jule::Ref<_1300a11b0_ScopeChecker> _field_sc{jule::Ref<_1300a11b0_ScopeChecker>()};
	jule::Ref<_127ed52e0_FnIns> _field_f{jule::Ref<_127ed52e0_FnIns>()};
	jule::Slice<jule::Ref<_1304dc9b0_TypeKind>> _field_types{jule::Slice<jule::Ref<_1304dc9b0_TypeKind>>()};
	jule::Slice<jule::Ref<_13064b610_Data>> _field_exprs{jule::Slice<jule::Ref<_13064b610_Data>>()};
	jule::Slice<jule::Ref<_1303533b0_Var>> _field_vars{jule::Slice<jule::Ref<_1303533b0_Var>>()};
	_127941de0_Token _field_error_token{_127941de0_Token()};


	_13032cf90_RetTypeChecker(jule::Ref<_1300a11b0_ScopeChecker> __param_sc, jule::Ref<_127ed52e0_FnIns> __param_f, jule::Slice<jule::Ref<_1304dc9b0_TypeKind>> __param_types, jule::Slice<jule::Ref<_13064b610_Data>> __param_exprs, jule::Slice<jule::Ref<_1303533b0_Var>> __param_vars, _127941de0_Token __param_error_token) {
		this->self = jule::Ref<_13032cf90_RetTypeChecker>::make(this, nullptr);

		this->_field_sc = __param_sc;
		this->_field_f = __param_f;
		this->_field_types = __param_types;
		this->_field_exprs = __param_exprs;
		this->_field_vars = __param_vars;
		this->_field_error_token = __param_error_token;
	}

	~_13032cf90_RetTypeChecker(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_13032cf90_RetTypeChecker(void) { this->self = jule::Ref<_13032cf90_RetTypeChecker>::make(this, nullptr); }

	inline void _method_prepare_types(void);


	inline void _method_prepare_exprs(jule::Ref<_13064b610_Data>);


	inline void _method_ret_vars(void);


	inline void _method_check_exprs(void);


	inline jule::Bool _method_check(jule::Ref<_13064b610_Data>);


	inline bool operator==(const _13032cf90_RetTypeChecker &_Src) {
		return 
			this->_field_sc == _Src._field_sc &&
			this->_field_f == _Src._field_f &&
			this->_field_types == _Src._field_types &&
			this->_field_exprs == _Src._field_exprs &&
			this->_field_vars == _Src._field_vars &&
			this->_field_error_token == _Src._field_error_token;
	}

	inline bool operator!=(const _13032cf90_RetTypeChecker &_Src) { return !this->operator==(_Src); }
};


struct _13032cf90_FnCallArgChecker {
	jule::Ref<_13032cf90_FnCallArgChecker> self{};

	jule::Ref<_13064b610_Eval> _field_e{jule::Ref<_13064b610_Eval>()};
	jule::Slice<jule::Ref<_1275d7180_Expr>> _field_args{jule::Slice<jule::Ref<_1275d7180_Expr>>()};
	_127941de0_Token _field_error_token{_127941de0_Token()};
	jule::Ref<_127ed52e0_FnIns> _field_f{jule::Ref<_127ed52e0_FnIns>()};
	jule::Bool _field_dynamic_annotation{jule::Bool()};
	jule::Slice<jule::Any> _field_arg_models{jule::Slice<jule::Any>()};


	_13032cf90_FnCallArgChecker(jule::Ref<_13064b610_Eval> __param_e, jule::Slice<jule::Ref<_1275d7180_Expr>> __param_args, _127941de0_Token __param_error_token, jule::Ref<_127ed52e0_FnIns> __param_f, jule::Bool __param_dynamic_annotation, jule::Slice<jule::Any> __param_arg_models) {
		this->self = jule::Ref<_13032cf90_FnCallArgChecker>::make(this, nullptr);

		this->_field_e = __param_e;
		this->_field_args = __param_args;
		this->_field_error_token = __param_error_token;
		this->_field_f = __param_f;
		this->_field_dynamic_annotation = __param_dynamic_annotation;
		this->_field_arg_models = __param_arg_models;
	}

	~_13032cf90_FnCallArgChecker(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_13032cf90_FnCallArgChecker(void) { this->self = jule::Ref<_13032cf90_FnCallArgChecker>::make(this, nullptr); }

	inline void _method_push_err_token(_127941de0_Token,jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Slice<jule::Ref<_127ed52e0_ParamIns>> _method_get_params(void);


	inline jule::Bool _method_check_counts(jule::Slice<jule::Ref<_127ed52e0_ParamIns>>);


	inline jule::Bool _method_check_arg(jule::Ref<_127ed52e0_ParamIns>,jule::Ref<_13064b610_Data>,_127941de0_Token);


	inline jule::Bool _method_push(jule::Ref<_127ed52e0_ParamIns>,jule::Ref<_1275d7180_Expr>);


	inline jule::Bool _method_push_variadic(jule::Ref<_127ed52e0_ParamIns>,jule::Int);


	inline jule::Bool _method_check_args(jule::Slice<jule::Ref<_127ed52e0_ParamIns>>);


	inline jule::Bool _method_check_dynamic_type_annotation(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _13032cf90_FnCallArgChecker &_Src) {
		return 
			this->_field_e == _Src._field_e &&
			this->_field_args == _Src._field_args &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_f == _Src._field_f &&
			this->_field_dynamic_annotation == _Src._field_dynamic_annotation &&
			this->_field_arg_models == _Src._field_arg_models;
	}

	inline bool operator!=(const _13032cf90_FnCallArgChecker &_Src) { return !this->operator==(_Src); }
};


struct _13032cf90_AssignTypeChecker {
	jule::Ref<_13032cf90_AssignTypeChecker> self{};

	jule::Ref<_1300a20d0_Sema> _field_s{jule::Ref<_1300a20d0_Sema>()};
	jule::Ref<_1304dc9b0_TypeKind> _field_dest{jule::Ref<_1304dc9b0_TypeKind>()};
	jule::Ref<_13064b610_Data> _field_d{jule::Ref<_13064b610_Data>()};
	_127941de0_Token _field_error_token{_127941de0_Token()};
	jule::Bool _field_deref{jule::Bool()};


	_13032cf90_AssignTypeChecker(jule::Ref<_1300a20d0_Sema> __param_s, jule::Ref<_1304dc9b0_TypeKind> __param_dest, jule::Ref<_13064b610_Data> __param_d, _127941de0_Token __param_error_token, jule::Bool __param_deref) {
		this->self = jule::Ref<_13032cf90_AssignTypeChecker>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_dest = __param_dest;
		this->_field_d = __param_d;
		this->_field_error_token = __param_error_token;
		this->_field_deref = __param_deref;
	}

	~_13032cf90_AssignTypeChecker(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_13032cf90_AssignTypeChecker(void) { this->self = jule::Ref<_13032cf90_AssignTypeChecker>::make(this, nullptr); }

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_validity(void);


	inline jule::Bool _method_check_const(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _13032cf90_AssignTypeChecker &_Src) {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_dest == _Src._field_dest &&
			this->_field_d == _Src._field_d &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_deref == _Src._field_deref;
	}

	inline bool operator!=(const _13032cf90_AssignTypeChecker &_Src) { return !this->operator==(_Src); }
};


struct _13032cf90_TypeCompatibilityChecker {
	jule::Ref<_13032cf90_TypeCompatibilityChecker> self{};

	jule::Ref<_1300a20d0_Sema> _field_s{jule::Ref<_1300a20d0_Sema>()};
	jule::Ref<_1304dc9b0_TypeKind> _field_dest{jule::Ref<_1304dc9b0_TypeKind>()};
	jule::Ref<_1304dc9b0_TypeKind> _field_src{jule::Ref<_1304dc9b0_TypeKind>()};
	_127941de0_Token _field_error_token{_127941de0_Token()};
	jule::Bool _field_deref{jule::Bool()};
	jule::Bool _field_ignore_any{jule::Bool()};


	_13032cf90_TypeCompatibilityChecker(jule::Ref<_1300a20d0_Sema> __param_s, jule::Ref<_1304dc9b0_TypeKind> __param_dest, jule::Ref<_1304dc9b0_TypeKind> __param_src, _127941de0_Token __param_error_token, jule::Bool __param_deref, jule::Bool __param_ignore_any) {
		this->self = jule::Ref<_13032cf90_TypeCompatibilityChecker>::make(this, nullptr);

		this->_field_s = __param_s;
		this->_field_dest = __param_dest;
		this->_field_src = __param_src;
		this->_field_error_token = __param_error_token;
		this->_field_deref = __param_deref;
		this->_field_ignore_any = __param_ignore_any;
	}

	~_13032cf90_TypeCompatibilityChecker(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_13032cf90_TypeCompatibilityChecker(void) { this->self = jule::Ref<_13032cf90_TypeCompatibilityChecker>::make(this, nullptr); }

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline jule::Bool _method_check_trait(void);


	inline jule::Bool _method_check_ref(void);


	inline jule::Bool _method_check_ptr(void);


	inline jule::Bool _method_check_slc(void);


	inline jule::Bool _method_check_arr(void);


	inline jule::Bool _method_check_map(void);


	inline jule::Bool _method_check_struct(void);


	inline jule::Bool _method_check_fn(void);


	inline jule::Bool _method_check_enum(void);


	inline jule::Bool _method_check(void);


	inline bool operator==(const _13032cf90_TypeCompatibilityChecker &_Src) {
		return 
			this->_field_s == _Src._field_s &&
			this->_field_dest == _Src._field_dest &&
			this->_field_src == _Src._field_src &&
			this->_field_error_token == _Src._field_error_token &&
			this->_field_deref == _Src._field_deref &&
			this->_field_ignore_any == _Src._field_ignore_any;
	}

	inline bool operator!=(const _13032cf90_TypeCompatibilityChecker &_Src) { return !this->operator==(_Src); }
};


struct _1303533b0_Var {
	jule::Ref<_1303533b0_Var> self{};

	jule::Ref<_1275d7180_ScopeTree> _field_scope{jule::Ref<_1275d7180_ScopeTree>()};
	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_constant{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_used{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Str _field_doc{jule::Str()};
	jule::Ref<_1304dc9b0_TypeSymbol> _field_kind{jule::Ref<_1304dc9b0_TypeSymbol>()};
	jule::Ref<_13064b610_Value> _field_value{jule::Ref<_13064b610_Value>()};
	jule::Ref<_127ff3480_ReferenceStack> _field_references{jule::Ref<_127ff3480_ReferenceStack>()};
	jule::Slice<jule::Ref<_1303533b0_Var>> _field_depends{jule::Slice<jule::Ref<_1303533b0_Var>>()};


	_1303533b0_Var(jule::Ref<_1275d7180_ScopeTree> __param_scope, _127941de0_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_constant, jule::Bool __param_mutable, jule::Bool __param_public, jule::Bool __param_used, jule::Bool __param_statically, jule::Bool __param_reference, jule::Str __param_doc, jule::Ref<_1304dc9b0_TypeSymbol> __param_kind, jule::Ref<_13064b610_Value> __param_value, jule::Ref<_127ff3480_ReferenceStack> __param_references, jule::Slice<jule::Ref<_1303533b0_Var>> __param_depends) {
		this->self = jule::Ref<_1303533b0_Var>::make(this, nullptr);

		this->_field_scope = __param_scope;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_constant = __param_constant;
		this->_field_mutable = __param_mutable;
		this->_field_public = __param_public;
		this->_field_used = __param_used;
		this->_field_statically = __param_statically;
		this->_field_reference = __param_reference;
		this->_field_doc = __param_doc;
		this->_field_kind = __param_kind;
		this->_field_value = __param_value;
		this->_field_references = __param_references;
		this->_field_depends = __param_depends;
	}

	~_1303533b0_Var(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1303533b0_Var(void) { this->self = jule::Ref<_1303533b0_Var>::make(this, nullptr); }

	inline jule::Bool _method_is_initialized(void);


	inline jule::Bool _method_is_auto_typed(void);


	inline bool operator==(const _1303533b0_Var &_Src) {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_constant == _Src._field_constant &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_public == _Src._field_public &&
			this->_field_used == _Src._field_used &&
			this->_field_statically == _Src._field_statically &&
			this->_field_reference == _Src._field_reference &&
			this->_field_doc == _Src._field_doc &&
			this->_field_kind == _Src._field_kind &&
			this->_field_value == _Src._field_value &&
			this->_field_references == _Src._field_references &&
			this->_field_depends == _Src._field_depends;
	}

	inline bool operator!=(const _1303533b0_Var &_Src) { return !this->operator==(_Src); }
};


struct _1300a4650_ImportInfo: public _1304dc360_Lookup {
	jule::Ref<_1300a4650_ImportInfo> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Str _field_path{jule::Str()};
	jule::Str _field_link_path{jule::Str()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_duplicate{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_std{jule::Bool()};
	jule::Bool _field_import_all{jule::Bool()};
	jule::Slice<_127941de0_Token> _field_selected{jule::Slice<_127941de0_Token>()};
	jule::Ref<_1300a4650_Package> _field_package{jule::Ref<_1300a4650_Package>()};


	_1300a4650_ImportInfo(_127941de0_Token __param_token, jule::Str __param_path, jule::Str __param_link_path, jule::Str __param_ident, jule::Bool __param_duplicate, jule::Bool __param_cpp_linked, jule::Bool __param_std, jule::Bool __param_import_all, jule::Slice<_127941de0_Token> __param_selected, jule::Ref<_1300a4650_Package> __param_package) {
		this->self = jule::Ref<_1300a4650_ImportInfo>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_path = __param_path;
		this->_field_link_path = __param_link_path;
		this->_field_ident = __param_ident;
		this->_field_duplicate = __param_duplicate;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_std = __param_std;
		this->_field_import_all = __param_import_all;
		this->_field_selected = __param_selected;
		this->_field_package = __param_package;
	}

	~_1300a4650_ImportInfo(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1300a4650_ImportInfo(void) { this->self = jule::Ref<_1300a4650_ImportInfo>::make(this, nullptr); }

	inline jule::Ref<_1300a4650_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_1300a4650_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1300a4650_ImportInfo>)>);


	inline jule::Ref<_1303533b0_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_1304dc9b0_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_127b2e960_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_127ed52e0_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_130099320_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_13009ed30_Enum> _method_find_enum(jule::Str);


	inline jule::Bool _method_is_lookupable(jule::Str);


	inline jule::Bool _method_exist_ident(jule::Str);


	inline bool operator==(const _1300a4650_ImportInfo &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_path == _Src._field_path &&
			this->_field_link_path == _Src._field_link_path &&
			this->_field_ident == _Src._field_ident &&
			this->_field_duplicate == _Src._field_duplicate &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_std == _Src._field_std &&
			this->_field_import_all == _Src._field_import_all &&
			this->_field_selected == _Src._field_selected &&
			this->_field_package == _Src._field_package;
	}

	inline bool operator!=(const _1300a4650_ImportInfo &_Src) { return !this->operator==(_Src); }
};


struct _1300a11b0_ScopeLabel {
	jule::Ref<_1300a11b0_ScopeLabel> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Ref<_1300a11b0_Label> _field_label{jule::Ref<_1300a11b0_Label>()};
	jule::Int _field_pos{jule::Int()};
	jule::Ref<_1300a11b0_ScopeChecker> _field_scope{jule::Ref<_1300a11b0_ScopeChecker>()};
	jule::Bool _field_used{jule::Bool()};


	_1300a11b0_ScopeLabel(_127941de0_Token __param_token, jule::Ref<_1300a11b0_Label> __param_label, jule::Int __param_pos, jule::Ref<_1300a11b0_ScopeChecker> __param_scope, jule::Bool __param_used) {
		this->self = jule::Ref<_1300a11b0_ScopeLabel>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_label = __param_label;
		this->_field_pos = __param_pos;
		this->_field_scope = __param_scope;
		this->_field_used = __param_used;
	}

	~_1300a11b0_ScopeLabel(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1300a11b0_ScopeLabel(void) { this->self = jule::Ref<_1300a11b0_ScopeLabel>::make(this, nullptr); }

	inline bool operator==(const _1300a11b0_ScopeLabel &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label &&
			this->_field_pos == _Src._field_pos &&
			this->_field_scope == _Src._field_scope &&
			this->_field_used == _Src._field_used;
	}

	inline bool operator!=(const _1300a11b0_ScopeLabel &_Src) { return !this->operator==(_Src); }
};


struct _12791ab70_Impl {
	jule::Ref<_12791ab70_Impl> self{};

	_127941de0_Token _field_base{_127941de0_Token()};
	_127941de0_Token _field_dest{_127941de0_Token()};
	jule::Slice<jule::Ref<_127ed52e0_Fn>> _field_methods{jule::Slice<jule::Ref<_127ed52e0_Fn>>()};


	_12791ab70_Impl(_127941de0_Token __param_base, _127941de0_Token __param_dest, jule::Slice<jule::Ref<_127ed52e0_Fn>> __param_methods) {
		this->self = jule::Ref<_12791ab70_Impl>::make(this, nullptr);

		this->_field_base = __param_base;
		this->_field_dest = __param_dest;
		this->_field_methods = __param_methods;
	}

	~_12791ab70_Impl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_12791ab70_Impl(void) { this->self = jule::Ref<_12791ab70_Impl>::make(this, nullptr); }

	inline jule::Bool _method_is_trait_impl(void);


	inline jule::Bool _method_is_struct_impl(void);


	inline bool operator==(const _12791ab70_Impl &_Src) {
		return 
			this->_field_base == _Src._field_base &&
			this->_field_dest == _Src._field_dest &&
			this->_field_methods == _Src._field_methods;
	}

	inline bool operator!=(const _12791ab70_Impl &_Src) { return !this->operator==(_Src); }
};


struct _13009ed30_Enum: public _1304dc9b0_Kind {
	jule::Ref<_13009ed30_Enum> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1304dc9b0_TypeSymbol> _field_kind{jule::Ref<_1304dc9b0_TypeSymbol>()};
	jule::Slice<jule::Ref<_13009ed30_EnumItem>> _field_items{jule::Slice<jule::Ref<_13009ed30_EnumItem>>()};
	jule::Str _field_doc{jule::Str()};


	_13009ed30_Enum(_127941de0_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ref<_1304dc9b0_TypeSymbol> __param_kind, jule::Slice<jule::Ref<_13009ed30_EnumItem>> __param_items, jule::Str __param_doc) {
		this->self = jule::Ref<_13009ed30_Enum>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_public = __param_public;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
		this->_field_items = __param_items;
		this->_field_doc = __param_doc;
	}

	~_13009ed30_Enum(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_13009ed30_Enum(void) { this->self = jule::Ref<_13009ed30_Enum>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1304dc9b0_TypeKind>);


	inline jule::Ref<_13009ed30_EnumItem> _method_find_item(jule::Str);


	inline bool operator==(const _13009ed30_Enum &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_items == _Src._field_items &&
			this->_field_doc == _Src._field_doc;
	}

	inline bool operator!=(const _13009ed30_Enum &_Src) { return !this->operator==(_Src); }
};


struct _13009ed30_EnumItem {
	jule::Ref<_13009ed30_EnumItem> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_13064b610_Value> _field_value{jule::Ref<_13064b610_Value>()};


	_13009ed30_EnumItem(_127941de0_Token __param_token, jule::Str __param_ident, jule::Ref<_13064b610_Value> __param_value) {
		this->self = jule::Ref<_13009ed30_EnumItem>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_value = __param_value;
	}

	~_13009ed30_EnumItem(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_13009ed30_EnumItem(void) { this->self = jule::Ref<_13009ed30_EnumItem>::make(this, nullptr); }

	inline jule::Bool _method_auto_expr(void);


	inline bool operator==(const _13009ed30_EnumItem &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_value == _Src._field_value;
	}

	inline bool operator!=(const _13009ed30_EnumItem &_Src) { return !this->operator==(_Src); }
};


struct _130099320_Trait: public _1304dc9b0_Kind {
	jule::Ref<_130099320_Trait> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_public{jule::Bool()};
	jule::Str _field_doc{jule::Str()};
	jule::Slice<jule::Ref<_127ed52e0_Fn>> _field_methods{jule::Slice<jule::Ref<_127ed52e0_Fn>>()};
	jule::Slice<jule::Ref<_127b2e960_Struct>> _field_implemented{jule::Slice<jule::Ref<_127b2e960_Struct>>()};


	_130099320_Trait(_127941de0_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Str __param_doc, jule::Slice<jule::Ref<_127ed52e0_Fn>> __param_methods, jule::Slice<jule::Ref<_127b2e960_Struct>> __param_implemented) {
		this->self = jule::Ref<_130099320_Trait>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_public = __param_public;
		this->_field_doc = __param_doc;
		this->_field_methods = __param_methods;
		this->_field_implemented = __param_implemented;
	}

	~_130099320_Trait(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_130099320_Trait(void) { this->self = jule::Ref<_130099320_Trait>::make(this, nullptr); }

	inline jule::Str _method_to_str(void);


	inline jule::Bool _method_equals(jule::Ref<_1304dc9b0_TypeKind>);


	inline jule::Bool _method_is_builtin(void);


	inline jule::Ref<_127ed52e0_Fn> _method_find_method(jule::Str);


	inline bool operator==(const _130099320_Trait &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_public == _Src._field_public &&
			this->_field_doc == _Src._field_doc &&
			this->_field_methods == _Src._field_methods &&
			this->_field_implemented == _Src._field_implemented;
	}

	inline bool operator!=(const _130099320_Trait &_Src) { return !this->operator==(_Src); }
};


struct _127ff3480_Pass {
	jule::Ref<_127ff3480_Pass> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Str _field_text{jule::Str()};


	_127ff3480_Pass(_127941de0_Token __param_token, jule::Str __param_text) {
		this->self = jule::Ref<_127ff3480_Pass>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_text = __param_text;
	}

	~_127ff3480_Pass(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127ff3480_Pass(void) { this->self = jule::Ref<_127ff3480_Pass>::make(this, nullptr); }

	inline bool operator==(const _127ff3480_Pass &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_text == _Src._field_text;
	}

	inline bool operator!=(const _127ff3480_Pass &_Src) { return !this->operator==(_Src); }
};


struct _127ed52e0_Fn {
	jule::Ref<_127ed52e0_Fn> self{};

	jule::Ref<_1300a20d0_Sema> _field_sema{jule::Ref<_1300a20d0_Sema>()};
	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Bool _field_global{jule::Bool()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_1275d7180_Directive>> _field_directives{jule::Slice<jule::Ref<_1275d7180_Directive>>()};
	jule::Str _field_doc{jule::Str()};
	jule::Ref<_1275d7180_ScopeTree> _field_scope{jule::Ref<_1275d7180_ScopeTree>()};
	jule::Slice<jule::Ref<_1275d7180_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_1275d7180_GenericDecl>>()};
	jule::Ref<_127ed52e0_RetType> _field_result{jule::Ref<_127ed52e0_RetType>()};
	jule::Slice<jule::Ref<_127ed52e0_Param>> _field_params{jule::Slice<jule::Ref<_127ed52e0_Param>>()};
	jule::Ref<_127b2e960_Struct> _field_owner{jule::Ref<_127b2e960_Struct>()};
	jule::Ref<_127ff3480_ReferenceStack> _field_references{jule::Ref<_127ff3480_ReferenceStack>()};
	jule::Slice<jule::Ref<_127ed52e0_FnIns>> _field_instances{jule::Slice<jule::Ref<_127ed52e0_FnIns>>()};


	_127ed52e0_Fn(jule::Ref<_1300a20d0_Sema> __param_sema, _127941de0_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Str __param_ident, jule::Slice<jule::Ref<_1275d7180_Directive>> __param_directives, jule::Str __param_doc, jule::Ref<_1275d7180_ScopeTree> __param_scope, jule::Slice<jule::Ref<_1275d7180_GenericDecl>> __param_generics, jule::Ref<_127ed52e0_RetType> __param_result, jule::Slice<jule::Ref<_127ed52e0_Param>> __param_params, jule::Ref<_127b2e960_Struct> __param_owner, jule::Ref<_127ff3480_ReferenceStack> __param_references, jule::Slice<jule::Ref<_127ed52e0_FnIns>> __param_instances) {
		this->self = jule::Ref<_127ed52e0_Fn>::make(this, nullptr);

		this->_field_sema = __param_sema;
		this->_field_token = __param_token;
		this->_field_global = __param_global;
		this->_field_unsafety = __param_unsafety;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_statically = __param_statically;
		this->_field_ident = __param_ident;
		this->_field_directives = __param_directives;
		this->_field_doc = __param_doc;
		this->_field_scope = __param_scope;
		this->_field_generics = __param_generics;
		this->_field_result = __param_result;
		this->_field_params = __param_params;
		this->_field_owner = __param_owner;
		this->_field_references = __param_references;
		this->_field_instances = __param_instances;
	}

	~_127ed52e0_Fn(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127ed52e0_Fn(void) { this->self = jule::Ref<_127ed52e0_Fn>::make(this, nullptr); }

	inline jule::Bool _method_is_void(void);


	inline jule::Bool _method_is_method(void);


	inline jule::Bool _method_is_entry_point(void);


	inline jule::Bool _method_is_init(void);


	inline jule::Bool _method_is_anon(void);


	inline jule::Bool _method_any_var(void);


	inline jule::Bool _method_parameters_uses_generics(void);


	inline jule::Bool _method_result_uses_generics(void);


	inline jule::Ref<_127ed52e0_FnIns> _method_instance_force(void);


	inline jule::Ref<_127ed52e0_FnIns> _method_instance(void);


	inline std::tuple<jule::Bool,jule::Int> _method_append_instance(jule::Ref<_127ed52e0_FnIns>);


	inline bool operator==(const _127ed52e0_Fn &_Src) {
		return 
			this->_field_sema == _Src._field_sema &&
			this->_field_token == _Src._field_token &&
			this->_field_global == _Src._field_global &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_statically == _Src._field_statically &&
			this->_field_ident == _Src._field_ident &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc == _Src._field_doc &&
			this->_field_scope == _Src._field_scope &&
			this->_field_generics == _Src._field_generics &&
			this->_field_result == _Src._field_result &&
			this->_field_params == _Src._field_params &&
			this->_field_owner == _Src._field_owner &&
			this->_field_references == _Src._field_references &&
			this->_field_instances == _Src._field_instances;
	}

	inline bool operator!=(const _127ed52e0_Fn &_Src) { return !this->operator==(_Src); }
};


struct _127ed52e0_Param {
	jule::Ref<_127ed52e0_Param> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_variadic{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Ref<_1304dc9b0_TypeSymbol> _field_kind{jule::Ref<_1304dc9b0_TypeSymbol>()};
	jule::Str _field_ident{jule::Str()};


	_127ed52e0_Param(_127941de0_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ref<_1304dc9b0_TypeSymbol> __param_kind, jule::Str __param_ident) {
		this->self = jule::Ref<_127ed52e0_Param>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_mutable = __param_mutable;
		this->_field_variadic = __param_variadic;
		this->_field_reference = __param_reference;
		this->_field_kind = __param_kind;
		this->_field_ident = __param_ident;
	}

	~_127ed52e0_Param(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127ed52e0_Param(void) { this->self = jule::Ref<_127ed52e0_Param>::make(this, nullptr); }

	inline jule::Ref<_127ed52e0_ParamIns> _method_instance(void);


	inline jule::Bool _method_is_self(void);


	inline jule::Bool _method_is_ref(void);


	inline bool operator==(const _127ed52e0_Param &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_reference == _Src._field_reference &&
			this->_field_kind == _Src._field_kind &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _127ed52e0_Param &_Src) { return !this->operator==(_Src); }
};


struct _127b2e960_Field {
	jule::Ref<_127b2e960_Field> self{};

	jule::Ref<_127b2e960_Struct> _field_owner{jule::Ref<_127b2e960_Struct>()};
	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1304dc9b0_TypeSymbol> _field_kind{jule::Ref<_1304dc9b0_TypeSymbol>()};


	_127b2e960_Field(jule::Ref<_127b2e960_Struct> __param_owner, _127941de0_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ref<_1304dc9b0_TypeSymbol> __param_kind) {
		this->self = jule::Ref<_127b2e960_Field>::make(this, nullptr);

		this->_field_owner = __param_owner;
		this->_field_token = __param_token;
		this->_field_public = __param_public;
		this->_field_mutable = __param_mutable;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
	}

	~_127b2e960_Field(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127b2e960_Field(void) { this->self = jule::Ref<_127b2e960_Field>::make(this, nullptr); }

	inline jule::Ref<_127b2e960_FieldIns> _method_instance(void);


	inline bool operator==(const _127b2e960_Field &_Src) {
		return 
			this->_field_owner == _Src._field_owner &&
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _127b2e960_Field &_Src) { return !this->operator==(_Src); }
};


struct _127c1fad0_AssignInfo {
	jule::Ref<_127c1fad0_AssignInfo> self{};

	jule::Slice<_127941de0_Token> _field_l{jule::Slice<_127941de0_Token>()};
	jule::Slice<_127941de0_Token> _field_r{jule::Slice<_127941de0_Token>()};
	_127941de0_Token _field_setter{_127941de0_Token()};
	jule::Bool _field_ok{jule::Bool()};


	_127c1fad0_AssignInfo(jule::Slice<_127941de0_Token> __param_l, jule::Slice<_127941de0_Token> __param_r, _127941de0_Token __param_setter, jule::Bool __param_ok) {
		this->self = jule::Ref<_127c1fad0_AssignInfo>::make(this, nullptr);

		this->_field_l = __param_l;
		this->_field_r = __param_r;
		this->_field_setter = __param_setter;
		this->_field_ok = __param_ok;
	}

	~_127c1fad0_AssignInfo(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127c1fad0_AssignInfo(void) { this->self = jule::Ref<_127c1fad0_AssignInfo>::make(this, nullptr); }

	inline bool operator==(const _127c1fad0_AssignInfo &_Src) {
		return 
			this->_field_l == _Src._field_l &&
			this->_field_r == _Src._field_r &&
			this->_field_setter == _Src._field_setter &&
			this->_field_ok == _Src._field_ok;
	}

	inline bool operator!=(const _127c1fad0_AssignInfo &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_Impl {
	jule::Ref<_1275d7180_Impl> self{};

	_127941de0_Token _field_base{_127941de0_Token()};
	_127941de0_Token _field_dest{_127941de0_Token()};
	jule::Slice<jule::Ref<_1275d7180_FnDecl>> _field_methods{jule::Slice<jule::Ref<_1275d7180_FnDecl>>()};


	_1275d7180_Impl(_127941de0_Token __param_base, _127941de0_Token __param_dest, jule::Slice<jule::Ref<_1275d7180_FnDecl>> __param_methods) {
		this->self = jule::Ref<_1275d7180_Impl>::make(this, nullptr);

		this->_field_base = __param_base;
		this->_field_dest = __param_dest;
		this->_field_methods = __param_methods;
	}

	~_1275d7180_Impl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_Impl(void) { this->self = jule::Ref<_1275d7180_Impl>::make(this, nullptr); }

	inline jule::Bool _method_is_trait_impl(void);


	inline jule::Bool _method_is_struct_impl(void);


	inline bool operator==(const _1275d7180_Impl &_Src) {
		return 
			this->_field_base == _Src._field_base &&
			this->_field_dest == _Src._field_dest &&
			this->_field_methods == _Src._field_methods;
	}

	inline bool operator!=(const _1275d7180_Impl &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_TraitDecl {
	jule::Ref<_1275d7180_TraitDecl> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_public{jule::Bool()};
	jule::Ref<_1275d7180_CommentGroup> _field_doc_comments{jule::Ref<_1275d7180_CommentGroup>()};
	jule::Slice<jule::Ref<_1275d7180_FnDecl>> _field_methods{jule::Slice<jule::Ref<_1275d7180_FnDecl>>()};


	_1275d7180_TraitDecl(_127941de0_Token __param_token, jule::Str __param_ident, jule::Bool __param_public, jule::Ref<_1275d7180_CommentGroup> __param_doc_comments, jule::Slice<jule::Ref<_1275d7180_FnDecl>> __param_methods) {
		this->self = jule::Ref<_1275d7180_TraitDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_public = __param_public;
		this->_field_doc_comments = __param_doc_comments;
		this->_field_methods = __param_methods;
	}

	~_1275d7180_TraitDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_TraitDecl(void) { this->self = jule::Ref<_1275d7180_TraitDecl>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_TraitDecl &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_public == _Src._field_public &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_methods == _Src._field_methods;
	}

	inline bool operator!=(const _1275d7180_TraitDecl &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_StructDecl {
	jule::Ref<_1275d7180_StructDecl> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_1275d7180_FieldDecl>> _field_fields{jule::Slice<jule::Ref<_1275d7180_FieldDecl>>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Slice<jule::Ref<_1275d7180_Directive>> _field_directives{jule::Slice<jule::Ref<_1275d7180_Directive>>()};
	jule::Ref<_1275d7180_CommentGroup> _field_doc_comments{jule::Ref<_1275d7180_CommentGroup>()};
	jule::Slice<jule::Ref<_1275d7180_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_1275d7180_GenericDecl>>()};


	_1275d7180_StructDecl(_127941de0_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ref<_1275d7180_FieldDecl>> __param_fields, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ref<_1275d7180_Directive>> __param_directives, jule::Ref<_1275d7180_CommentGroup> __param_doc_comments, jule::Slice<jule::Ref<_1275d7180_GenericDecl>> __param_generics) {
		this->self = jule::Ref<_1275d7180_StructDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_fields = __param_fields;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_directives = __param_directives;
		this->_field_doc_comments = __param_doc_comments;
		this->_field_generics = __param_generics;
	}

	~_1275d7180_StructDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_StructDecl(void) { this->self = jule::Ref<_1275d7180_StructDecl>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_StructDecl &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_fields == _Src._field_fields &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_generics == _Src._field_generics;
	}

	inline bool operator!=(const _1275d7180_StructDecl &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_FieldDecl {
	jule::Ref<_1275d7180_FieldDecl> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1275d7180_TypeDecl> _field_kind{jule::Ref<_1275d7180_TypeDecl>()};


	_1275d7180_FieldDecl(_127941de0_Token __param_token, jule::Bool __param_public, jule::Bool __param_mutable, jule::Str __param_ident, jule::Ref<_1275d7180_TypeDecl> __param_kind) {
		this->self = jule::Ref<_1275d7180_FieldDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_public = __param_public;
		this->_field_mutable = __param_mutable;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
	}

	~_1275d7180_FieldDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_FieldDecl(void) { this->self = jule::Ref<_1275d7180_FieldDecl>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_FieldDecl &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1275d7180_FieldDecl &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_EnumDecl {
	jule::Ref<_1275d7180_EnumDecl> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Bool _field_public{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1275d7180_TypeDecl> _field_kind{jule::Ref<_1275d7180_TypeDecl>()};
	jule::Slice<jule::Ref<_1275d7180_EnumItemDecl>> _field_items{jule::Slice<jule::Ref<_1275d7180_EnumItemDecl>>()};
	jule::Ref<_1275d7180_CommentGroup> _field_doc_comments{jule::Ref<_1275d7180_CommentGroup>()};


	_1275d7180_EnumDecl(_127941de0_Token __param_token, jule::Bool __param_public, jule::Str __param_ident, jule::Ref<_1275d7180_TypeDecl> __param_kind, jule::Slice<jule::Ref<_1275d7180_EnumItemDecl>> __param_items, jule::Ref<_1275d7180_CommentGroup> __param_doc_comments) {
		this->self = jule::Ref<_1275d7180_EnumDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_public = __param_public;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
		this->_field_items = __param_items;
		this->_field_doc_comments = __param_doc_comments;
	}

	~_1275d7180_EnumDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_EnumDecl(void) { this->self = jule::Ref<_1275d7180_EnumDecl>::make(this, nullptr); }

	inline jule::Bool _method_default_typed(void);


	inline bool operator==(const _1275d7180_EnumDecl &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_public == _Src._field_public &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_items == _Src._field_items &&
			this->_field_doc_comments == _Src._field_doc_comments;
	}

	inline bool operator!=(const _1275d7180_EnumDecl &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_EnumItemDecl {
	jule::Ref<_1275d7180_EnumItemDecl> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1275d7180_Expr> _field_expr{jule::Ref<_1275d7180_Expr>()};


	_1275d7180_EnumItemDecl(_127941de0_Token __param_token, jule::Str __param_ident, jule::Ref<_1275d7180_Expr> __param_expr) {
		this->self = jule::Ref<_1275d7180_EnumItemDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_expr = __param_expr;
	}

	~_1275d7180_EnumItemDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_EnumItemDecl(void) { this->self = jule::Ref<_1275d7180_EnumItemDecl>::make(this, nullptr); }

	inline jule::Bool _method_auto_expr(void);


	inline bool operator==(const _1275d7180_EnumItemDecl &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1275d7180_EnumItemDecl &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_UseDecl {
	jule::Ref<_1275d7180_UseDecl> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Str _field_link_path{jule::Str()};
	jule::Bool _field_full{jule::Bool()};
	jule::Slice<_127941de0_Token> _field_selected{jule::Slice<_127941de0_Token>()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_std{jule::Bool()};


	_1275d7180_UseDecl(_127941de0_Token __param_token, jule::Str __param_link_path, jule::Bool __param_full, jule::Slice<_127941de0_Token> __param_selected, jule::Bool __param_cpp_linked, jule::Bool __param_std) {
		this->self = jule::Ref<_1275d7180_UseDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_link_path = __param_link_path;
		this->_field_full = __param_full;
		this->_field_selected = __param_selected;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_std = __param_std;
	}

	~_1275d7180_UseDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_UseDecl(void) { this->self = jule::Ref<_1275d7180_UseDecl>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_UseDecl &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_link_path == _Src._field_link_path &&
			this->_field_full == _Src._field_full &&
			this->_field_selected == _Src._field_selected &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_std == _Src._field_std;
	}

	inline bool operator!=(const _1275d7180_UseDecl &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_Case {
	jule::Ref<_1275d7180_Case> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Ref<_1275d7180_ScopeTree> _field_scope{jule::Ref<_1275d7180_ScopeTree>()};
	jule::Slice<jule::Ref<_1275d7180_Expr>> _field_exprs{jule::Slice<jule::Ref<_1275d7180_Expr>>()};


	_1275d7180_Case(_127941de0_Token __param_token, jule::Ref<_1275d7180_ScopeTree> __param_scope, jule::Slice<jule::Ref<_1275d7180_Expr>> __param_exprs) {
		this->self = jule::Ref<_1275d7180_Case>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_scope = __param_scope;
		this->_field_exprs = __param_exprs;
	}

	~_1275d7180_Case(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_Case(void) { this->self = jule::Ref<_1275d7180_Case>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_Case &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_scope == _Src._field_scope &&
			this->_field_exprs == _Src._field_exprs;
	}

	inline bool operator!=(const _1275d7180_Case &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_TypeAliasDecl {
	jule::Ref<_1275d7180_TypeAliasDecl> self{};

	jule::Ref<_1275d7180_ScopeTree> _field_scope{jule::Ref<_1275d7180_ScopeTree>()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1275d7180_TypeDecl> _field_kind{jule::Ref<_1275d7180_TypeDecl>()};
	jule::Ref<_1275d7180_CommentGroup> _field_doc_comments{jule::Ref<_1275d7180_CommentGroup>()};


	_1275d7180_TypeAliasDecl(jule::Ref<_1275d7180_ScopeTree> __param_scope, jule::Bool __param_public, jule::Bool __param_cpp_linked, _127941de0_Token __param_token, jule::Str __param_ident, jule::Ref<_1275d7180_TypeDecl> __param_kind, jule::Ref<_1275d7180_CommentGroup> __param_doc_comments) {
		this->self = jule::Ref<_1275d7180_TypeAliasDecl>::make(this, nullptr);

		this->_field_scope = __param_scope;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_kind = __param_kind;
		this->_field_doc_comments = __param_doc_comments;
	}

	~_1275d7180_TypeAliasDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_TypeAliasDecl(void) { this->self = jule::Ref<_1275d7180_TypeAliasDecl>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_TypeAliasDecl &_Src) {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_kind == _Src._field_kind &&
			this->_field_doc_comments == _Src._field_doc_comments;
	}

	inline bool operator!=(const _1275d7180_TypeAliasDecl &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_Else {
	jule::Ref<_1275d7180_Else> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Ref<_1275d7180_ScopeTree> _field_scope{jule::Ref<_1275d7180_ScopeTree>()};


	_1275d7180_Else(_127941de0_Token __param_token, jule::Ref<_1275d7180_ScopeTree> __param_scope) {
		this->self = jule::Ref<_1275d7180_Else>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_scope = __param_scope;
	}

	~_1275d7180_Else(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_Else(void) { this->self = jule::Ref<_1275d7180_Else>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_Else &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1275d7180_Else &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_If {
	jule::Ref<_1275d7180_If> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Ref<_1275d7180_Expr> _field_expr{jule::Ref<_1275d7180_Expr>()};
	jule::Ref<_1275d7180_ScopeTree> _field_scope{jule::Ref<_1275d7180_ScopeTree>()};


	_1275d7180_If(_127941de0_Token __param_token, jule::Ref<_1275d7180_Expr> __param_expr, jule::Ref<_1275d7180_ScopeTree> __param_scope) {
		this->self = jule::Ref<_1275d7180_If>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
		this->_field_scope = __param_scope;
	}

	~_1275d7180_If(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_If(void) { this->self = jule::Ref<_1275d7180_If>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_If &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_scope == _Src._field_scope;
	}

	inline bool operator!=(const _1275d7180_If &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_ContSt {
	jule::Ref<_1275d7180_ContSt> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	_127941de0_Token _field_label{_127941de0_Token()};


	_1275d7180_ContSt(_127941de0_Token __param_token, _127941de0_Token __param_label) {
		this->self = jule::Ref<_1275d7180_ContSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_label = __param_label;
	}

	~_1275d7180_ContSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_ContSt(void) { this->self = jule::Ref<_1275d7180_ContSt>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_ContSt &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _1275d7180_ContSt &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_BreakSt {
	jule::Ref<_1275d7180_BreakSt> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	_127941de0_Token _field_label{_127941de0_Token()};


	_1275d7180_BreakSt(_127941de0_Token __param_token, _127941de0_Token __param_label) {
		this->self = jule::Ref<_1275d7180_BreakSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_label = __param_label;
	}

	~_1275d7180_BreakSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_BreakSt(void) { this->self = jule::Ref<_1275d7180_BreakSt>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_BreakSt &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _1275d7180_BreakSt &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_VarDecl {
	jule::Ref<_1275d7180_VarDecl> self{};

	jule::Ref<_1275d7180_ScopeTree> _field_scope{jule::Ref<_1275d7180_ScopeTree>()};
	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_constant{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Ref<_1275d7180_CommentGroup> _field_doc_comments{jule::Ref<_1275d7180_CommentGroup>()};
	jule::Ref<_1275d7180_TypeDecl> _field_kind{jule::Ref<_1275d7180_TypeDecl>()};
	jule::Ref<_1275d7180_Expr> _field_expr{jule::Ref<_1275d7180_Expr>()};


	_1275d7180_VarDecl(jule::Ref<_1275d7180_ScopeTree> __param_scope, _127941de0_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Bool __param_public, jule::Bool __param_mutable, jule::Bool __param_constant, jule::Bool __param_statically, jule::Bool __param_reference, jule::Ref<_1275d7180_CommentGroup> __param_doc_comments, jule::Ref<_1275d7180_TypeDecl> __param_kind, jule::Ref<_1275d7180_Expr> __param_expr) {
		this->self = jule::Ref<_1275d7180_VarDecl>::make(this, nullptr);

		this->_field_scope = __param_scope;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_public = __param_public;
		this->_field_mutable = __param_mutable;
		this->_field_constant = __param_constant;
		this->_field_statically = __param_statically;
		this->_field_reference = __param_reference;
		this->_field_doc_comments = __param_doc_comments;
		this->_field_kind = __param_kind;
		this->_field_expr = __param_expr;
	}

	~_1275d7180_VarDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_VarDecl(void) { this->self = jule::Ref<_1275d7180_VarDecl>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_VarDecl &_Src) {
		return 
			this->_field_scope == _Src._field_scope &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_public == _Src._field_public &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_constant == _Src._field_constant &&
			this->_field_statically == _Src._field_statically &&
			this->_field_reference == _Src._field_reference &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_kind == _Src._field_kind &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1275d7180_VarDecl &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_FnDecl {
	jule::Ref<_1275d7180_FnDecl> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Bool _field_global{jule::Bool()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Bool _field_statically{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_1275d7180_Directive>> _field_directives{jule::Slice<jule::Ref<_1275d7180_Directive>>()};
	jule::Ref<_1275d7180_CommentGroup> _field_doc_comments{jule::Ref<_1275d7180_CommentGroup>()};
	jule::Ref<_1275d7180_ScopeTree> _field_scope{jule::Ref<_1275d7180_ScopeTree>()};
	jule::Slice<jule::Ref<_1275d7180_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_1275d7180_GenericDecl>>()};
	jule::Ref<_1275d7180_RetTypeDecl> _field_result{jule::Ref<_1275d7180_RetTypeDecl>()};
	jule::Slice<jule::Ref<_1275d7180_ParamDecl>> _field_params{jule::Slice<jule::Ref<_1275d7180_ParamDecl>>()};


	_1275d7180_FnDecl(_127941de0_Token __param_token, jule::Bool __param_global, jule::Bool __param_unsafety, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Bool __param_statically, jule::Str __param_ident, jule::Slice<jule::Ref<_1275d7180_Directive>> __param_directives, jule::Ref<_1275d7180_CommentGroup> __param_doc_comments, jule::Ref<_1275d7180_ScopeTree> __param_scope, jule::Slice<jule::Ref<_1275d7180_GenericDecl>> __param_generics, jule::Ref<_1275d7180_RetTypeDecl> __param_result, jule::Slice<jule::Ref<_1275d7180_ParamDecl>> __param_params) {
		this->self = jule::Ref<_1275d7180_FnDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_global = __param_global;
		this->_field_unsafety = __param_unsafety;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_statically = __param_statically;
		this->_field_ident = __param_ident;
		this->_field_directives = __param_directives;
		this->_field_doc_comments = __param_doc_comments;
		this->_field_scope = __param_scope;
		this->_field_generics = __param_generics;
		this->_field_result = __param_result;
		this->_field_params = __param_params;
	}

	~_1275d7180_FnDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_FnDecl(void) { this->self = jule::Ref<_1275d7180_FnDecl>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_FnDecl &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_global == _Src._field_global &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_statically == _Src._field_statically &&
			this->_field_ident == _Src._field_ident &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc_comments == _Src._field_doc_comments &&
			this->_field_scope == _Src._field_scope &&
			this->_field_generics == _Src._field_generics &&
			this->_field_result == _Src._field_result &&
			this->_field_params == _Src._field_params;
	}

	inline bool operator!=(const _1275d7180_FnDecl &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_ParamDecl {
	jule::Ref<_1275d7180_ParamDecl> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_variadic{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Ref<_1275d7180_TypeDecl> _field_kind{jule::Ref<_1275d7180_TypeDecl>()};
	jule::Str _field_ident{jule::Str()};


	_1275d7180_ParamDecl(_127941de0_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_variadic, jule::Bool __param_reference, jule::Ref<_1275d7180_TypeDecl> __param_kind, jule::Str __param_ident) {
		this->self = jule::Ref<_1275d7180_ParamDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_mutable = __param_mutable;
		this->_field_variadic = __param_variadic;
		this->_field_reference = __param_reference;
		this->_field_kind = __param_kind;
		this->_field_ident = __param_ident;
	}

	~_1275d7180_ParamDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_ParamDecl(void) { this->self = jule::Ref<_1275d7180_ParamDecl>::make(this, nullptr); }

	inline jule::Bool _method_is_self(void);


	inline jule::Bool _method_is_ref(void);


	inline bool operator==(const _1275d7180_ParamDecl &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_variadic == _Src._field_variadic &&
			this->_field_reference == _Src._field_reference &&
			this->_field_kind == _Src._field_kind &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1275d7180_ParamDecl &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_AssignLeft {
	jule::Ref<_1275d7180_AssignLeft> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Bool _field_mutable{jule::Bool()};
	jule::Bool _field_reference{jule::Bool()};
	jule::Str _field_ident{jule::Str()};
	jule::Ref<_1275d7180_Expr> _field_expr{jule::Ref<_1275d7180_Expr>()};


	_1275d7180_AssignLeft(_127941de0_Token __param_token, jule::Bool __param_mutable, jule::Bool __param_reference, jule::Str __param_ident, jule::Ref<_1275d7180_Expr> __param_expr) {
		this->self = jule::Ref<_1275d7180_AssignLeft>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_mutable = __param_mutable;
		this->_field_reference = __param_reference;
		this->_field_ident = __param_ident;
		this->_field_expr = __param_expr;
	}

	~_1275d7180_AssignLeft(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_AssignLeft(void) { this->self = jule::Ref<_1275d7180_AssignLeft>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_AssignLeft &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_mutable == _Src._field_mutable &&
			this->_field_reference == _Src._field_reference &&
			this->_field_ident == _Src._field_ident &&
			this->_field_expr == _Src._field_expr;
	}

	inline bool operator!=(const _1275d7180_AssignLeft &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_GotoSt {
	jule::Ref<_1275d7180_GotoSt> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	_127941de0_Token _field_label{_127941de0_Token()};


	_1275d7180_GotoSt(_127941de0_Token __param_token, _127941de0_Token __param_label) {
		this->self = jule::Ref<_1275d7180_GotoSt>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_label = __param_label;
	}

	~_1275d7180_GotoSt(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_GotoSt(void) { this->self = jule::Ref<_1275d7180_GotoSt>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_GotoSt &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_label == _Src._field_label;
	}

	inline bool operator!=(const _1275d7180_GotoSt &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_GenericDecl {
	jule::Ref<_1275d7180_GenericDecl> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Str _field_ident{jule::Str()};


	_1275d7180_GenericDecl(_127941de0_Token __param_token, jule::Str __param_ident) {
		this->self = jule::Ref<_1275d7180_GenericDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
	}

	~_1275d7180_GenericDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_GenericDecl(void) { this->self = jule::Ref<_1275d7180_GenericDecl>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_GenericDecl &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident;
	}

	inline bool operator!=(const _1275d7180_GenericDecl &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_FnCallExpr {
	jule::Ref<_1275d7180_FnCallExpr> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Ref<_1275d7180_Expr> _field_expr{jule::Ref<_1275d7180_Expr>()};
	jule::Slice<jule::Ref<_1275d7180_TypeDecl>> _field_generics{jule::Slice<jule::Ref<_1275d7180_TypeDecl>>()};
	jule::Slice<jule::Ref<_1275d7180_Expr>> _field_args{jule::Slice<jule::Ref<_1275d7180_Expr>>()};
	jule::Bool _field_concurrent{jule::Bool()};


	_1275d7180_FnCallExpr(_127941de0_Token __param_token, jule::Ref<_1275d7180_Expr> __param_expr, jule::Slice<jule::Ref<_1275d7180_TypeDecl>> __param_generics, jule::Slice<jule::Ref<_1275d7180_Expr>> __param_args, jule::Bool __param_concurrent) {
		this->self = jule::Ref<_1275d7180_FnCallExpr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_expr = __param_expr;
		this->_field_generics = __param_generics;
		this->_field_args = __param_args;
		this->_field_concurrent = __param_concurrent;
	}

	~_1275d7180_FnCallExpr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_FnCallExpr(void) { this->self = jule::Ref<_1275d7180_FnCallExpr>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_FnCallExpr &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_expr == _Src._field_expr &&
			this->_field_generics == _Src._field_generics &&
			this->_field_args == _Src._field_args &&
			this->_field_concurrent == _Src._field_concurrent;
	}

	inline bool operator!=(const _1275d7180_FnCallExpr &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_Expr {
	jule::Ref<_1275d7180_Expr> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Any _field_kind{jule::Any()};


	_1275d7180_Expr(_127941de0_Token __param_token, jule::Any __param_kind) {
		this->self = jule::Ref<_1275d7180_Expr>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_kind = __param_kind;
	}

	~_1275d7180_Expr(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_Expr(void) { this->self = jule::Ref<_1275d7180_Expr>::make(this, nullptr); }

	inline jule::Bool _method_is_fn_call(void);


	inline bool operator==(const _1275d7180_Expr &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1275d7180_Expr &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_IdentTypeDecl {
	jule::Ref<_1275d7180_IdentTypeDecl> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Slice<jule::Ref<_1275d7180_TypeDecl>> _field_generics{jule::Slice<jule::Ref<_1275d7180_TypeDecl>>()};


	_1275d7180_IdentTypeDecl(_127941de0_Token __param_token, jule::Str __param_ident, jule::Bool __param_cpp_linked, jule::Slice<jule::Ref<_1275d7180_TypeDecl>> __param_generics) {
		this->self = jule::Ref<_1275d7180_IdentTypeDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_generics = __param_generics;
	}

	~_1275d7180_IdentTypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_IdentTypeDecl(void) { this->self = jule::Ref<_1275d7180_IdentTypeDecl>::make(this, nullptr); }

	inline jule::Bool _method_is_prim(void);


	inline bool operator==(const _1275d7180_IdentTypeDecl &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_generics == _Src._field_generics;
	}

	inline bool operator!=(const _1275d7180_IdentTypeDecl &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_TypeDecl {
	jule::Ref<_1275d7180_TypeDecl> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Any _field_kind{jule::Any()};


	_1275d7180_TypeDecl(_127941de0_Token __param_token, jule::Any __param_kind) {
		this->self = jule::Ref<_1275d7180_TypeDecl>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_kind = __param_kind;
	}

	~_1275d7180_TypeDecl(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_TypeDecl(void) { this->self = jule::Ref<_1275d7180_TypeDecl>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_TypeDecl &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_kind == _Src._field_kind;
	}

	inline bool operator!=(const _1275d7180_TypeDecl &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_Directive {
	jule::Ref<_1275d7180_Directive> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Str _field_tag{jule::Str()};
	jule::Slice<jule::Str> _field_args{jule::Slice<jule::Str>()};


	_1275d7180_Directive(_127941de0_Token __param_token, jule::Str __param_tag, jule::Slice<jule::Str> __param_args) {
		this->self = jule::Ref<_1275d7180_Directive>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_tag = __param_tag;
		this->_field_args = __param_args;
	}

	~_1275d7180_Directive(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_Directive(void) { this->self = jule::Ref<_1275d7180_Directive>::make(this, nullptr); }

	inline bool operator==(const _1275d7180_Directive &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_tag == _Src._field_tag &&
			this->_field_args == _Src._field_args;
	}

	inline bool operator!=(const _1275d7180_Directive &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_Comment {
	jule::Ref<_1275d7180_Comment> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Str _field_text{jule::Str()};


	_1275d7180_Comment(_127941de0_Token __param_token, jule::Str __param_text) {
		this->self = jule::Ref<_1275d7180_Comment>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_text = __param_text;
	}

	~_1275d7180_Comment(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_Comment(void) { this->self = jule::Ref<_1275d7180_Comment>::make(this, nullptr); }

	inline jule::Bool _method_is_directive(void);


	inline bool operator==(const _1275d7180_Comment &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_text == _Src._field_text;
	}

	inline bool operator!=(const _1275d7180_Comment &_Src) { return !this->operator==(_Src); }
};


struct _1275d7180_Node {
	jule::Ref<_1275d7180_Node> self{};

	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Any _field_data{jule::Any()};


	_1275d7180_Node(_127941de0_Token __param_token, jule::Any __param_data) {
		this->self = jule::Ref<_1275d7180_Node>::make(this, nullptr);

		this->_field_token = __param_token;
		this->_field_data = __param_data;
	}

	~_1275d7180_Node(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d7180_Node(void) { this->self = jule::Ref<_1275d7180_Node>::make(this, nullptr); }

	inline jule::Bool _method_is_decl(void);


	inline jule::Bool _method_is_comment(void);


	inline jule::Bool _method_is_impl(void);


	inline jule::Bool _method_is_use_decl(void);


	inline bool operator==(const _1275d7180_Node &_Src) {
		return 
			this->_field_token == _Src._field_token &&
			this->_field_data == _Src._field_data;
	}

	inline bool operator!=(const _1275d7180_Node &_Src) { return !this->operator==(_Src); }
};


struct _127ab7fa0_Vector_0 {
	jule::Ref<_127ab7fa0_Vector_0> self{};

	StdJuleVectorBuffer<_127941de0_Token> _field__buffer{StdJuleVectorBuffer<_127941de0_Token>()};


	_127ab7fa0_Vector_0(StdJuleVectorBuffer<_127941de0_Token> __param__buffer) {
		this->self = jule::Ref<_127ab7fa0_Vector_0>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_127ab7fa0_Vector_0(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127ab7fa0_Vector_0(void) { this->self = jule::Ref<_127ab7fa0_Vector_0>::make(this, nullptr); }

	static inline _127ab7fa0_Vector_0 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline _127941de0_Token _method_at(jule::Int);


	inline void _method_set(jule::Int,_127941de0_Token);


	inline void _method_push(_127941de0_Token);


	inline void _method_push_front(_127941de0_Token);


	inline void _method_append(jule::Slice<_127941de0_Token>);


	inline void _method_merge(_127ab7fa0_Vector_0);


	inline void _method_merge_front(_127ab7fa0_Vector_0);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,_127941de0_Token);


	inline _127ab7fa0_Vector_0 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _127ab7fa0_Vector_0 &_Src) {
		return true;
	}

	inline bool operator!=(const _127ab7fa0_Vector_0 &_Src) { return !this->operator==(_Src); }
};

struct _127ab7fa0_Vector_1 {
	jule::Ref<_127ab7fa0_Vector_1> self{};

	StdJuleVectorBuffer<jule::Ref<_1275d7180_Directive>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_1275d7180_Directive>>()};


	_127ab7fa0_Vector_1(StdJuleVectorBuffer<jule::Ref<_1275d7180_Directive>> __param__buffer) {
		this->self = jule::Ref<_127ab7fa0_Vector_1>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_127ab7fa0_Vector_1(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127ab7fa0_Vector_1(void) { this->self = jule::Ref<_127ab7fa0_Vector_1>::make(this, nullptr); }

	static inline _127ab7fa0_Vector_1 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_1275d7180_Directive> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_1275d7180_Directive>);


	inline void _method_push(jule::Ref<_1275d7180_Directive>);


	inline void _method_push_front(jule::Ref<_1275d7180_Directive>);


	inline void _method_append(jule::Slice<jule::Ref<_1275d7180_Directive>>);


	inline void _method_merge(_127ab7fa0_Vector_1);


	inline void _method_merge_front(_127ab7fa0_Vector_1);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_1275d7180_Directive>);


	inline _127ab7fa0_Vector_1 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _127ab7fa0_Vector_1 &_Src) {
		return true;
	}

	inline bool operator!=(const _127ab7fa0_Vector_1 &_Src) { return !this->operator==(_Src); }
};

struct _127ab7fa0_Vector_2 {
	jule::Ref<_127ab7fa0_Vector_2> self{};

	StdJuleVectorBuffer<jule::Ref<_1275d7180_UseDecl>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_1275d7180_UseDecl>>()};


	_127ab7fa0_Vector_2(StdJuleVectorBuffer<jule::Ref<_1275d7180_UseDecl>> __param__buffer) {
		this->self = jule::Ref<_127ab7fa0_Vector_2>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_127ab7fa0_Vector_2(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127ab7fa0_Vector_2(void) { this->self = jule::Ref<_127ab7fa0_Vector_2>::make(this, nullptr); }

	static inline _127ab7fa0_Vector_2 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_1275d7180_UseDecl> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_1275d7180_UseDecl>);


	inline void _method_push(jule::Ref<_1275d7180_UseDecl>);


	inline void _method_push_front(jule::Ref<_1275d7180_UseDecl>);


	inline void _method_append(jule::Slice<jule::Ref<_1275d7180_UseDecl>>);


	inline void _method_merge(_127ab7fa0_Vector_2);


	inline void _method_merge_front(_127ab7fa0_Vector_2);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_1275d7180_UseDecl>);


	inline _127ab7fa0_Vector_2 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _127ab7fa0_Vector_2 &_Src) {
		return true;
	}

	inline bool operator!=(const _127ab7fa0_Vector_2 &_Src) { return !this->operator==(_Src); }
};

struct _127ab7fa0_Vector_3 {
	jule::Ref<_127ab7fa0_Vector_3> self{};

	StdJuleVectorBuffer<jule::Ref<_1275d7180_Impl>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_1275d7180_Impl>>()};


	_127ab7fa0_Vector_3(StdJuleVectorBuffer<jule::Ref<_1275d7180_Impl>> __param__buffer) {
		this->self = jule::Ref<_127ab7fa0_Vector_3>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_127ab7fa0_Vector_3(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127ab7fa0_Vector_3(void) { this->self = jule::Ref<_127ab7fa0_Vector_3>::make(this, nullptr); }

	static inline _127ab7fa0_Vector_3 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_1275d7180_Impl> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_1275d7180_Impl>);


	inline void _method_push(jule::Ref<_1275d7180_Impl>);


	inline void _method_push_front(jule::Ref<_1275d7180_Impl>);


	inline void _method_append(jule::Slice<jule::Ref<_1275d7180_Impl>>);


	inline void _method_merge(_127ab7fa0_Vector_3);


	inline void _method_merge_front(_127ab7fa0_Vector_3);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_1275d7180_Impl>);


	inline _127ab7fa0_Vector_3 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _127ab7fa0_Vector_3 &_Src) {
		return true;
	}

	inline bool operator!=(const _127ab7fa0_Vector_3 &_Src) { return !this->operator==(_Src); }
};

struct _127ab7fa0_Vector_4 {
	jule::Ref<_127ab7fa0_Vector_4> self{};

	StdJuleVectorBuffer<jule::Ref<_1275d7180_Comment>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_1275d7180_Comment>>()};


	_127ab7fa0_Vector_4(StdJuleVectorBuffer<jule::Ref<_1275d7180_Comment>> __param__buffer) {
		this->self = jule::Ref<_127ab7fa0_Vector_4>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_127ab7fa0_Vector_4(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127ab7fa0_Vector_4(void) { this->self = jule::Ref<_127ab7fa0_Vector_4>::make(this, nullptr); }

	static inline _127ab7fa0_Vector_4 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_1275d7180_Comment> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_1275d7180_Comment>);


	inline void _method_push(jule::Ref<_1275d7180_Comment>);


	inline void _method_push_front(jule::Ref<_1275d7180_Comment>);


	inline void _method_append(jule::Slice<jule::Ref<_1275d7180_Comment>>);


	inline void _method_merge(_127ab7fa0_Vector_4);


	inline void _method_merge_front(_127ab7fa0_Vector_4);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_1275d7180_Comment>);


	inline _127ab7fa0_Vector_4 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _127ab7fa0_Vector_4 &_Src) {
		return true;
	}

	inline bool operator!=(const _127ab7fa0_Vector_4 &_Src) { return !this->operator==(_Src); }
};

struct _127ab7fa0_Vector_5 {
	jule::Ref<_127ab7fa0_Vector_5> self{};

	StdJuleVectorBuffer<_1275d7180_Node> _field__buffer{StdJuleVectorBuffer<_1275d7180_Node>()};


	_127ab7fa0_Vector_5(StdJuleVectorBuffer<_1275d7180_Node> __param__buffer) {
		this->self = jule::Ref<_127ab7fa0_Vector_5>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_127ab7fa0_Vector_5(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127ab7fa0_Vector_5(void) { this->self = jule::Ref<_127ab7fa0_Vector_5>::make(this, nullptr); }

	static inline _127ab7fa0_Vector_5 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline _1275d7180_Node _method_at(jule::Int);


	inline void _method_set(jule::Int,_1275d7180_Node);


	inline void _method_push(_1275d7180_Node);


	inline void _method_push_front(_1275d7180_Node);


	inline void _method_append(jule::Slice<_1275d7180_Node>);


	inline void _method_merge(_127ab7fa0_Vector_5);


	inline void _method_merge_front(_127ab7fa0_Vector_5);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,_1275d7180_Node);


	inline _127ab7fa0_Vector_5 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _127ab7fa0_Vector_5 &_Src) {
		return true;
	}

	inline bool operator!=(const _127ab7fa0_Vector_5 &_Src) { return !this->operator==(_Src); }
};

struct _127ab7fa0_Vector_6 {
	jule::Ref<_127ab7fa0_Vector_6> self{};

	StdJuleVectorBuffer<_127ff3480_Pass> _field__buffer{StdJuleVectorBuffer<_127ff3480_Pass>()};


	_127ab7fa0_Vector_6(StdJuleVectorBuffer<_127ff3480_Pass> __param__buffer) {
		this->self = jule::Ref<_127ab7fa0_Vector_6>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_127ab7fa0_Vector_6(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127ab7fa0_Vector_6(void) { this->self = jule::Ref<_127ab7fa0_Vector_6>::make(this, nullptr); }

	static inline _127ab7fa0_Vector_6 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline _127ff3480_Pass _method_at(jule::Int);


	inline void _method_set(jule::Int,_127ff3480_Pass);


	inline void _method_push(_127ff3480_Pass);


	inline void _method_push_front(_127ff3480_Pass);


	inline void _method_append(jule::Slice<_127ff3480_Pass>);


	inline void _method_merge(_127ab7fa0_Vector_6);


	inline void _method_merge_front(_127ab7fa0_Vector_6);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,_127ff3480_Pass);


	inline _127ab7fa0_Vector_6 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _127ab7fa0_Vector_6 &_Src) {
		return true;
	}

	inline bool operator!=(const _127ab7fa0_Vector_6 &_Src) { return !this->operator==(_Src); }
};

struct _127ab7fa0_Vector_7 {
	jule::Ref<_127ab7fa0_Vector_7> self{};

	StdJuleVectorBuffer<jule::Ref<_1300a4650_ImportInfo>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_1300a4650_ImportInfo>>()};


	_127ab7fa0_Vector_7(StdJuleVectorBuffer<jule::Ref<_1300a4650_ImportInfo>> __param__buffer) {
		this->self = jule::Ref<_127ab7fa0_Vector_7>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_127ab7fa0_Vector_7(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127ab7fa0_Vector_7(void) { this->self = jule::Ref<_127ab7fa0_Vector_7>::make(this, nullptr); }

	static inline _127ab7fa0_Vector_7 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_1300a4650_ImportInfo> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_1300a4650_ImportInfo>);


	inline void _method_push(jule::Ref<_1300a4650_ImportInfo>);


	inline void _method_push_front(jule::Ref<_1300a4650_ImportInfo>);


	inline void _method_append(jule::Slice<jule::Ref<_1300a4650_ImportInfo>>);


	inline void _method_merge(_127ab7fa0_Vector_7);


	inline void _method_merge_front(_127ab7fa0_Vector_7);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_1300a4650_ImportInfo>);


	inline _127ab7fa0_Vector_7 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _127ab7fa0_Vector_7 &_Src) {
		return true;
	}

	inline bool operator!=(const _127ab7fa0_Vector_7 &_Src) { return !this->operator==(_Src); }
};

struct _127ab7fa0_Vector_8 {
	jule::Ref<_127ab7fa0_Vector_8> self{};

	StdJuleVectorBuffer<jule::Any> _field__buffer{StdJuleVectorBuffer<jule::Any>()};


	_127ab7fa0_Vector_8(StdJuleVectorBuffer<jule::Any> __param__buffer) {
		this->self = jule::Ref<_127ab7fa0_Vector_8>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_127ab7fa0_Vector_8(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127ab7fa0_Vector_8(void) { this->self = jule::Ref<_127ab7fa0_Vector_8>::make(this, nullptr); }

	static inline _127ab7fa0_Vector_8 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Any _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Any);


	inline void _method_push(jule::Any);


	inline void _method_push_front(jule::Any);


	inline void _method_append(jule::Slice<jule::Any>);


	inline void _method_merge(_127ab7fa0_Vector_8);


	inline void _method_merge_front(_127ab7fa0_Vector_8);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Any);


	inline _127ab7fa0_Vector_8 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _127ab7fa0_Vector_8 &_Src) {
		return true;
	}

	inline bool operator!=(const _127ab7fa0_Vector_8 &_Src) { return !this->operator==(_Src); }
};

struct _127ab7fa0_Vector_9 {
	jule::Ref<_127ab7fa0_Vector_9> self{};

	StdJuleVectorBuffer<jule::Ref<_1303533b0_Var>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_1303533b0_Var>>()};


	_127ab7fa0_Vector_9(StdJuleVectorBuffer<jule::Ref<_1303533b0_Var>> __param__buffer) {
		this->self = jule::Ref<_127ab7fa0_Vector_9>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_127ab7fa0_Vector_9(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127ab7fa0_Vector_9(void) { this->self = jule::Ref<_127ab7fa0_Vector_9>::make(this, nullptr); }

	static inline _127ab7fa0_Vector_9 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_1303533b0_Var> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_1303533b0_Var>);


	inline void _method_push(jule::Ref<_1303533b0_Var>);


	inline void _method_push_front(jule::Ref<_1303533b0_Var>);


	inline void _method_append(jule::Slice<jule::Ref<_1303533b0_Var>>);


	inline void _method_merge(_127ab7fa0_Vector_9);


	inline void _method_merge_front(_127ab7fa0_Vector_9);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_1303533b0_Var>);


	inline _127ab7fa0_Vector_9 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _127ab7fa0_Vector_9 &_Src) {
		return true;
	}

	inline bool operator!=(const _127ab7fa0_Vector_9 &_Src) { return !this->operator==(_Src); }
};

struct _127ab7fa0_Vector_10 {
	jule::Ref<_127ab7fa0_Vector_10> self{};

	StdJuleVectorBuffer<jule::Ref<_1304dc9b0_TypeAlias>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_1304dc9b0_TypeAlias>>()};


	_127ab7fa0_Vector_10(StdJuleVectorBuffer<jule::Ref<_1304dc9b0_TypeAlias>> __param__buffer) {
		this->self = jule::Ref<_127ab7fa0_Vector_10>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_127ab7fa0_Vector_10(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127ab7fa0_Vector_10(void) { this->self = jule::Ref<_127ab7fa0_Vector_10>::make(this, nullptr); }

	static inline _127ab7fa0_Vector_10 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_1304dc9b0_TypeAlias> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_1304dc9b0_TypeAlias>);


	inline void _method_push(jule::Ref<_1304dc9b0_TypeAlias>);


	inline void _method_push_front(jule::Ref<_1304dc9b0_TypeAlias>);


	inline void _method_append(jule::Slice<jule::Ref<_1304dc9b0_TypeAlias>>);


	inline void _method_merge(_127ab7fa0_Vector_10);


	inline void _method_merge_front(_127ab7fa0_Vector_10);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_1304dc9b0_TypeAlias>);


	inline _127ab7fa0_Vector_10 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _127ab7fa0_Vector_10 &_Src) {
		return true;
	}

	inline bool operator!=(const _127ab7fa0_Vector_10 &_Src) { return !this->operator==(_Src); }
};

struct _127ab7fa0_Vector_11 {
	jule::Ref<_127ab7fa0_Vector_11> self{};

	StdJuleVectorBuffer<jule::Ref<_127ed52e0_Fn>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_127ed52e0_Fn>>()};


	_127ab7fa0_Vector_11(StdJuleVectorBuffer<jule::Ref<_127ed52e0_Fn>> __param__buffer) {
		this->self = jule::Ref<_127ab7fa0_Vector_11>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_127ab7fa0_Vector_11(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127ab7fa0_Vector_11(void) { this->self = jule::Ref<_127ab7fa0_Vector_11>::make(this, nullptr); }

	static inline _127ab7fa0_Vector_11 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_127ed52e0_Fn> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_127ed52e0_Fn>);


	inline void _method_push(jule::Ref<_127ed52e0_Fn>);


	inline void _method_push_front(jule::Ref<_127ed52e0_Fn>);


	inline void _method_append(jule::Slice<jule::Ref<_127ed52e0_Fn>>);


	inline void _method_merge(_127ab7fa0_Vector_11);


	inline void _method_merge_front(_127ab7fa0_Vector_11);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_127ed52e0_Fn>);


	inline _127ab7fa0_Vector_11 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _127ab7fa0_Vector_11 &_Src) {
		return true;
	}

	inline bool operator!=(const _127ab7fa0_Vector_11 &_Src) { return !this->operator==(_Src); }
};

struct _127ab7fa0_Vector_12 {
	jule::Ref<_127ab7fa0_Vector_12> self{};

	StdJuleVectorBuffer<jule::Ref<_127b2e960_Struct>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_127b2e960_Struct>>()};


	_127ab7fa0_Vector_12(StdJuleVectorBuffer<jule::Ref<_127b2e960_Struct>> __param__buffer) {
		this->self = jule::Ref<_127ab7fa0_Vector_12>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_127ab7fa0_Vector_12(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127ab7fa0_Vector_12(void) { this->self = jule::Ref<_127ab7fa0_Vector_12>::make(this, nullptr); }

	static inline _127ab7fa0_Vector_12 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_127b2e960_Struct> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_127b2e960_Struct>);


	inline void _method_push(jule::Ref<_127b2e960_Struct>);


	inline void _method_push_front(jule::Ref<_127b2e960_Struct>);


	inline void _method_append(jule::Slice<jule::Ref<_127b2e960_Struct>>);


	inline void _method_merge(_127ab7fa0_Vector_12);


	inline void _method_merge_front(_127ab7fa0_Vector_12);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_127b2e960_Struct>);


	inline _127ab7fa0_Vector_12 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _127ab7fa0_Vector_12 &_Src) {
		return true;
	}

	inline bool operator!=(const _127ab7fa0_Vector_12 &_Src) { return !this->operator==(_Src); }
};

struct _127ab7fa0_Vector_13 {
	jule::Ref<_127ab7fa0_Vector_13> self{};

	StdJuleVectorBuffer<jule::Ref<_130099320_Trait>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_130099320_Trait>>()};


	_127ab7fa0_Vector_13(StdJuleVectorBuffer<jule::Ref<_130099320_Trait>> __param__buffer) {
		this->self = jule::Ref<_127ab7fa0_Vector_13>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_127ab7fa0_Vector_13(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127ab7fa0_Vector_13(void) { this->self = jule::Ref<_127ab7fa0_Vector_13>::make(this, nullptr); }

	static inline _127ab7fa0_Vector_13 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_130099320_Trait> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_130099320_Trait>);


	inline void _method_push(jule::Ref<_130099320_Trait>);


	inline void _method_push_front(jule::Ref<_130099320_Trait>);


	inline void _method_append(jule::Slice<jule::Ref<_130099320_Trait>>);


	inline void _method_merge(_127ab7fa0_Vector_13);


	inline void _method_merge_front(_127ab7fa0_Vector_13);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_130099320_Trait>);


	inline _127ab7fa0_Vector_13 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _127ab7fa0_Vector_13 &_Src) {
		return true;
	}

	inline bool operator!=(const _127ab7fa0_Vector_13 &_Src) { return !this->operator==(_Src); }
};

struct _127ab7fa0_Vector_14 {
	jule::Ref<_127ab7fa0_Vector_14> self{};

	StdJuleVectorBuffer<jule::Ref<_13009ed30_Enum>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_13009ed30_Enum>>()};


	_127ab7fa0_Vector_14(StdJuleVectorBuffer<jule::Ref<_13009ed30_Enum>> __param__buffer) {
		this->self = jule::Ref<_127ab7fa0_Vector_14>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_127ab7fa0_Vector_14(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127ab7fa0_Vector_14(void) { this->self = jule::Ref<_127ab7fa0_Vector_14>::make(this, nullptr); }

	static inline _127ab7fa0_Vector_14 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_13009ed30_Enum> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_13009ed30_Enum>);


	inline void _method_push(jule::Ref<_13009ed30_Enum>);


	inline void _method_push_front(jule::Ref<_13009ed30_Enum>);


	inline void _method_append(jule::Slice<jule::Ref<_13009ed30_Enum>>);


	inline void _method_merge(_127ab7fa0_Vector_14);


	inline void _method_merge_front(_127ab7fa0_Vector_14);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_13009ed30_Enum>);


	inline _127ab7fa0_Vector_14 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _127ab7fa0_Vector_14 &_Src) {
		return true;
	}

	inline bool operator!=(const _127ab7fa0_Vector_14 &_Src) { return !this->operator==(_Src); }
};

struct _127ab7fa0_Vector_15 {
	jule::Ref<_127ab7fa0_Vector_15> self{};

	StdJuleVectorBuffer<jule::Ref<_12791ab70_Impl>> _field__buffer{StdJuleVectorBuffer<jule::Ref<_12791ab70_Impl>>()};


	_127ab7fa0_Vector_15(StdJuleVectorBuffer<jule::Ref<_12791ab70_Impl>> __param__buffer) {
		this->self = jule::Ref<_127ab7fa0_Vector_15>::make(this, nullptr);

		this->_field__buffer = __param__buffer;
	}

	~_127ab7fa0_Vector_15(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127ab7fa0_Vector_15(void) { this->self = jule::Ref<_127ab7fa0_Vector_15>::make(this, nullptr); }

	static inline _127ab7fa0_Vector_15 _static_method_new(jule::Int);


	inline jule::Int _method_calc_grow(jule::Int);


	inline void _method_resize_alloc(jule::Int);


	inline void _method_review_allocation(jule::Int);


	inline jule::Int _method_len(void);


	inline jule::Int _method_cap(void);


	inline void _method_dealloc(void);


	inline void _method_set_len(jule::Int);


	inline jule::Ref<_12791ab70_Impl> _method_at(jule::Int);


	inline void _method_set(jule::Int,jule::Ref<_12791ab70_Impl>);


	inline void _method_push(jule::Ref<_12791ab70_Impl>);


	inline void _method_push_front(jule::Ref<_12791ab70_Impl>);


	inline void _method_append(jule::Slice<jule::Ref<_12791ab70_Impl>>);


	inline void _method_merge(_127ab7fa0_Vector_15);


	inline void _method_merge_front(_127ab7fa0_Vector_15);


	inline void _method_remove_range(jule::Int,jule::Int);


	inline void _method_insert(jule::Int,jule::Ref<_12791ab70_Impl>);


	inline _127ab7fa0_Vector_15 _method_slice(jule::Int,jule::Int);


	inline bool operator==(const _127ab7fa0_Vector_15 &_Src) {
		return true;
	}

	inline bool operator!=(const _127ab7fa0_Vector_15 &_Src) { return !this->operator==(_Src); }
};


struct _126f67810_File {
	jule::Ref<_126f67810_File> self{};

	jule::Str _field__path{jule::Str()};
	_127ab7fa0_Vector_0 _field__tokens{_127ab7fa0_Vector_0()};


	_126f67810_File(jule::Str __param__path, _127ab7fa0_Vector_0 __param__tokens) {
		this->self = jule::Ref<_126f67810_File>::make(this, nullptr);

		this->_field__path = __param__path;
		this->_field__tokens = __param__tokens;
	}

	~_126f67810_File(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_126f67810_File(void) { this->self = jule::Ref<_126f67810_File>::make(this, nullptr); }

	inline jule::Bool _method_is_ok(void);


	inline jule::Str _method_path(void);


	inline jule::Str _method_dir(void);


	inline jule::Str _method_name(void);


	inline jule::Uintptr _method_addr(void);


	inline _127ab7fa0_Vector_0 _method_tokens(void);


	inline bool operator==(const _126f67810_File &_Src) {
		return 
			this->_field__path == _Src._field__path &&
			this->_field__tokens == _Src._field__tokens;
	}

	inline bool operator!=(const _126f67810_File &_Src) { return !this->operator==(_Src); }
};


struct _127774a70_Lex {
	jule::Ref<_127774a70_Lex> self{};

	jule::Bool _field_first_token_of_line{jule::Bool()};
	_127ab7fa0_Vector_0 _field_tokens{_127ab7fa0_Vector_0()};
	jule::Slice<jule::U8> _field_data{jule::Slice<jule::U8>()};
	jule::Ref<_126f67810_File> _field_file{jule::Ref<_126f67810_File>()};
	jule::Int _field_pos{jule::Int()};
	jule::Int _field_column{jule::Int()};
	jule::Int _field_row{jule::Int()};
	jule::Slice<_136e99d00_Log> _field_errors{jule::Slice<_136e99d00_Log>()};


	_127774a70_Lex(jule::Bool __param_first_token_of_line, _127ab7fa0_Vector_0 __param_tokens, jule::Slice<jule::U8> __param_data, jule::Ref<_126f67810_File> __param_file, jule::Int __param_pos, jule::Int __param_column, jule::Int __param_row, jule::Slice<_136e99d00_Log> __param_errors) {
		this->self = jule::Ref<_127774a70_Lex>::make(this, nullptr);

		this->_field_first_token_of_line = __param_first_token_of_line;
		this->_field_tokens = __param_tokens;
		this->_field_data = __param_data;
		this->_field_file = __param_file;
		this->_field_pos = __param_pos;
		this->_field_column = __param_column;
		this->_field_row = __param_row;
		this->_field_errors = __param_errors;
	}

	~_127774a70_Lex(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127774a70_Lex(void) { this->self = jule::Ref<_127774a70_Lex>::make(this, nullptr); }

	inline void _method_push_err(jule::Str,jule::Slice<jule::Any>);


	inline void _method_push_err_tok(_127941de0_Token,jule::Str);


	inline void _method_lex(void);


	inline jule::Str _method_id(jule::Slice<jule::U8>);


	inline jule::Slice<jule::U8> _method_resume(void);


	inline void _method_lex_line_comment(_127941de0_Token&);


	inline void _method_lex_range_comment(void);


	inline jule::Str _method_num(jule::Slice<jule::U8>);


	inline jule::Str _method_escape_seq(jule::Slice<jule::U8>);


	inline jule::Str _method_get_rune(jule::Slice<jule::U8>,jule::Bool);


	inline jule::Str _method_lex_rune(jule::Slice<jule::U8>);


	inline jule::Str _method_lex_str(void);


	inline void _method_new_line(void);


	inline jule::Bool _method_is_op(jule::Slice<jule::U8>,jule::Str,jule::Uint,_127941de0_Token&);


	inline jule::Bool _method_lex_basic_ops(jule::Slice<jule::U8>,_127941de0_Token&);


	inline jule::Bool _method_lex_id(jule::Slice<jule::U8>,_127941de0_Token&);


	inline jule::Bool _method_lex_num(jule::Slice<jule::U8>,_127941de0_Token&);


	inline _127941de0_Token _method_token(void);


	inline bool operator==(const _127774a70_Lex &_Src) {
		return 
			this->_field_first_token_of_line == _Src._field_first_token_of_line &&
			this->_field_tokens == _Src._field_tokens &&
			this->_field_data == _Src._field_data &&
			this->_field_file == _Src._field_file &&
			this->_field_pos == _Src._field_pos &&
			this->_field_column == _Src._field_column &&
			this->_field_row == _Src._field_row &&
			this->_field_errors == _Src._field_errors;
	}

	inline bool operator!=(const _127774a70_Lex &_Src) { return !this->operator==(_Src); }
};


struct _1275d0e60_Ast {
	jule::Ref<_1275d0e60_Ast> self{};

	jule::Ref<_126f67810_File> _field_file{jule::Ref<_126f67810_File>()};
	_127ab7fa0_Vector_1 _field_top_directives{_127ab7fa0_Vector_1()};
	_127ab7fa0_Vector_2 _field_use_decls{_127ab7fa0_Vector_2()};
	_127ab7fa0_Vector_3 _field_impls{_127ab7fa0_Vector_3()};
	_127ab7fa0_Vector_4 _field_comments{_127ab7fa0_Vector_4()};
	_127ab7fa0_Vector_5 _field_decls{_127ab7fa0_Vector_5()};


	_1275d0e60_Ast(jule::Ref<_126f67810_File> __param_file, _127ab7fa0_Vector_1 __param_top_directives, _127ab7fa0_Vector_2 __param_use_decls, _127ab7fa0_Vector_3 __param_impls, _127ab7fa0_Vector_4 __param_comments, _127ab7fa0_Vector_5 __param_decls) {
		this->self = jule::Ref<_1275d0e60_Ast>::make(this, nullptr);

		this->_field_file = __param_file;
		this->_field_top_directives = __param_top_directives;
		this->_field_use_decls = __param_use_decls;
		this->_field_impls = __param_impls;
		this->_field_comments = __param_comments;
		this->_field_decls = __param_decls;
	}

	~_1275d0e60_Ast(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1275d0e60_Ast(void) { this->self = jule::Ref<_1275d0e60_Ast>::make(this, nullptr); }

	inline bool operator==(const _1275d0e60_Ast &_Src) {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_top_directives == _Src._field_top_directives &&
			this->_field_use_decls == _Src._field_use_decls &&
			this->_field_impls == _Src._field_impls &&
			this->_field_comments == _Src._field_comments &&
			this->_field_decls == _Src._field_decls;
	}

	inline bool operator!=(const _1275d0e60_Ast &_Src) { return !this->operator==(_Src); }
};


struct _127b2e960_Struct {
	jule::Ref<_127b2e960_Struct> self{};

	jule::Ref<_1300a20d0_Sema> _field_sema{jule::Ref<_1300a20d0_Sema>()};
	jule::Slice<jule::Ref<_127b2e960_Struct>> _field_depends{jule::Slice<jule::Ref<_127b2e960_Struct>>()};
	jule::Slice<jule::Ref<_127b2e960_Struct>> _field_uses{jule::Slice<jule::Ref<_127b2e960_Struct>>()};
	_127941de0_Token _field_token{_127941de0_Token()};
	jule::Str _field_ident{jule::Str()};
	jule::Slice<jule::Ref<_127b2e960_Field>> _field_fields{jule::Slice<jule::Ref<_127b2e960_Field>>()};
	_127ab7fa0_Vector_11 _field_methods{_127ab7fa0_Vector_11()};
	jule::Bool _field_public{jule::Bool()};
	jule::Bool _field_cpp_linked{jule::Bool()};
	jule::Slice<jule::Ref<_1275d7180_Directive>> _field_directives{jule::Slice<jule::Ref<_1275d7180_Directive>>()};
	jule::Str _field_doc{jule::Str()};
	jule::Slice<jule::Ref<_1275d7180_GenericDecl>> _field_generics{jule::Slice<jule::Ref<_1275d7180_GenericDecl>>()};
	jule::Slice<jule::Ref<_130099320_Trait>> _field_implements{jule::Slice<jule::Ref<_130099320_Trait>>()};
	jule::Ref<_127ff3480_ReferenceStack> _field_references{jule::Ref<_127ff3480_ReferenceStack>()};
	jule::Slice<jule::Ref<_127b2e960_StructIns>> _field_instances{jule::Slice<jule::Ref<_127b2e960_StructIns>>()};


	_127b2e960_Struct(jule::Ref<_1300a20d0_Sema> __param_sema, jule::Slice<jule::Ref<_127b2e960_Struct>> __param_depends, jule::Slice<jule::Ref<_127b2e960_Struct>> __param_uses, _127941de0_Token __param_token, jule::Str __param_ident, jule::Slice<jule::Ref<_127b2e960_Field>> __param_fields, _127ab7fa0_Vector_11 __param_methods, jule::Bool __param_public, jule::Bool __param_cpp_linked, jule::Slice<jule::Ref<_1275d7180_Directive>> __param_directives, jule::Str __param_doc, jule::Slice<jule::Ref<_1275d7180_GenericDecl>> __param_generics, jule::Slice<jule::Ref<_130099320_Trait>> __param_implements, jule::Ref<_127ff3480_ReferenceStack> __param_references, jule::Slice<jule::Ref<_127b2e960_StructIns>> __param_instances) {
		this->self = jule::Ref<_127b2e960_Struct>::make(this, nullptr);

		this->_field_sema = __param_sema;
		this->_field_depends = __param_depends;
		this->_field_uses = __param_uses;
		this->_field_token = __param_token;
		this->_field_ident = __param_ident;
		this->_field_fields = __param_fields;
		this->_field_methods = __param_methods;
		this->_field_public = __param_public;
		this->_field_cpp_linked = __param_cpp_linked;
		this->_field_directives = __param_directives;
		this->_field_doc = __param_doc;
		this->_field_generics = __param_generics;
		this->_field_implements = __param_implements;
		this->_field_references = __param_references;
		this->_field_instances = __param_instances;
	}

	~_127b2e960_Struct(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127b2e960_Struct(void) { this->self = jule::Ref<_127b2e960_Struct>::make(this, nullptr); }

	inline jule::Ref<_127b2e960_StructIns> _method_instance(void);


	inline jule::Ref<_127b2e960_StructIns> _method_append_instance(jule::Ref<_127b2e960_StructIns>);


	inline jule::Ref<_127ed52e0_Fn> _method_find_method(jule::Str,jule::Bool);


	inline jule::Ref<_127b2e960_Field> _method_find_field(jule::Str);


	inline jule::Bool _method_is_implements(jule::Ref<_130099320_Trait>);


	inline jule::Bool _method_is_derives(jule::Str);


	inline jule::Bool _method_is_uses(jule::Ref<_127b2e960_Struct>);


	inline bool operator==(const _127b2e960_Struct &_Src) {
		return 
			this->_field_sema == _Src._field_sema &&
			this->_field_depends == _Src._field_depends &&
			this->_field_uses == _Src._field_uses &&
			this->_field_token == _Src._field_token &&
			this->_field_ident == _Src._field_ident &&
			this->_field_fields == _Src._field_fields &&
			this->_field_methods == _Src._field_methods &&
			this->_field_public == _Src._field_public &&
			this->_field_cpp_linked == _Src._field_cpp_linked &&
			this->_field_directives == _Src._field_directives &&
			this->_field_doc == _Src._field_doc &&
			this->_field_generics == _Src._field_generics &&
			this->_field_implements == _Src._field_implements &&
			this->_field_references == _Src._field_references &&
			this->_field_instances == _Src._field_instances;
	}

	inline bool operator!=(const _127b2e960_Struct &_Src) { return !this->operator==(_Src); }
};


struct _127ff3480_ReferenceStack {
	jule::Ref<_127ff3480_ReferenceStack> self{};

	_127ab7fa0_Vector_8 _field_buffer{_127ab7fa0_Vector_8()};


	_127ff3480_ReferenceStack(_127ab7fa0_Vector_8 __param_buffer) {
		this->self = jule::Ref<_127ff3480_ReferenceStack>::make(this, nullptr);

		this->_field_buffer = __param_buffer;
	}

	~_127ff3480_ReferenceStack(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_127ff3480_ReferenceStack(void) { this->self = jule::Ref<_127ff3480_ReferenceStack>::make(this, nullptr); }

	inline jule::Int _method_len(void);


	inline jule::Any _method_at(jule::Int);


	inline void _method_push(jule::Any);


	inline void _method_remove(jule::Int);


	inline jule::Bool _method_exist_0(jule::Ref<_1303533b0_Var>);
	inline jule::Bool _method_exist_1(jule::Ref<_127ed52e0_Fn>);


	inline bool operator==(const _127ff3480_ReferenceStack &_Src) {
		return 
			this->_field_buffer == _Src._field_buffer;
	}

	inline bool operator!=(const _127ff3480_ReferenceStack &_Src) { return !this->operator==(_Src); }
};


struct _1300a11b0_Scope {
	jule::Ref<_1300a11b0_Scope> self{};

	jule::Ref<_1300a11b0_Scope> _field_parent{jule::Ref<_1300a11b0_Scope>()};
	jule::Bool _field_unsafety{jule::Bool()};
	jule::Bool _field_deferred{jule::Bool()};
	_127ab7fa0_Vector_8 _field_stmts{_127ab7fa0_Vector_8()};


	_1300a11b0_Scope(jule::Ref<_1300a11b0_Scope> __param_parent, jule::Bool __param_unsafety, jule::Bool __param_deferred, _127ab7fa0_Vector_8 __param_stmts) {
		this->self = jule::Ref<_1300a11b0_Scope>::make(this, nullptr);

		this->_field_parent = __param_parent;
		this->_field_unsafety = __param_unsafety;
		this->_field_deferred = __param_deferred;
		this->_field_stmts = __param_stmts;
	}

	~_1300a11b0_Scope(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_1300a11b0_Scope(void) { this->self = jule::Ref<_1300a11b0_Scope>::make(this, nullptr); }

	inline bool operator==(const _1300a11b0_Scope &_Src) {
		return 
			this->_field_parent == _Src._field_parent &&
			this->_field_unsafety == _Src._field_unsafety &&
			this->_field_deferred == _Src._field_deferred &&
			this->_field_stmts == _Src._field_stmts;
	}

	inline bool operator!=(const _1300a11b0_Scope &_Src) { return !this->operator==(_Src); }
};


struct _13032dc50_SymbolTable: public _1304dc360_Lookup {
	jule::Ref<_13032dc50_SymbolTable> self{};

	jule::Ref<_126f67810_File> _field_file{jule::Ref<_126f67810_File>()};
	_127ab7fa0_Vector_6 _field_passes{_127ab7fa0_Vector_6()};
	_127ab7fa0_Vector_7 _field_imports{_127ab7fa0_Vector_7()};
	_127ab7fa0_Vector_9 _field_vars{_127ab7fa0_Vector_9()};
	_127ab7fa0_Vector_10 _field_type_aliases{_127ab7fa0_Vector_10()};
	_127ab7fa0_Vector_12 _field_structs{_127ab7fa0_Vector_12()};
	_127ab7fa0_Vector_11 _field_funcs{_127ab7fa0_Vector_11()};
	_127ab7fa0_Vector_13 _field_traits{_127ab7fa0_Vector_13()};
	_127ab7fa0_Vector_14 _field_enums{_127ab7fa0_Vector_14()};
	_127ab7fa0_Vector_15 _field_impls{_127ab7fa0_Vector_15()};


	_13032dc50_SymbolTable(jule::Ref<_126f67810_File> __param_file, _127ab7fa0_Vector_6 __param_passes, _127ab7fa0_Vector_7 __param_imports, _127ab7fa0_Vector_9 __param_vars, _127ab7fa0_Vector_10 __param_type_aliases, _127ab7fa0_Vector_12 __param_structs, _127ab7fa0_Vector_11 __param_funcs, _127ab7fa0_Vector_13 __param_traits, _127ab7fa0_Vector_14 __param_enums, _127ab7fa0_Vector_15 __param_impls) {
		this->self = jule::Ref<_13032dc50_SymbolTable>::make(this, nullptr);

		this->_field_file = __param_file;
		this->_field_passes = __param_passes;
		this->_field_imports = __param_imports;
		this->_field_vars = __param_vars;
		this->_field_type_aliases = __param_type_aliases;
		this->_field_structs = __param_structs;
		this->_field_funcs = __param_funcs;
		this->_field_traits = __param_traits;
		this->_field_enums = __param_enums;
		this->_field_impls = __param_impls;
	}

	~_13032dc50_SymbolTable(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }

	_13032dc50_SymbolTable(void) { this->self = jule::Ref<_13032dc50_SymbolTable>::make(this, nullptr); }

	inline jule::Ref<_1300a4650_ImportInfo> _method_find_package(jule::Str);


	inline jule::Ref<_1300a4650_ImportInfo> _method_select_package(jule::Fn<jule::Bool(jule::Ref<_1300a4650_ImportInfo>)>);


	inline jule::Ref<_1303533b0_Var> _method_find_var(jule::Str,jule::Bool);


	inline jule::Ref<_1304dc9b0_TypeAlias> _method_find_type_alias(jule::Str,jule::Bool);


	inline jule::Ref<_127b2e960_Struct> _method_find_struct(jule::Str,jule::Bool);


	inline jule::Ref<_127ed52e0_Fn> _method_find_fn(jule::Str,jule::Bool);


	inline jule::Ref<_130099320_Trait> _method_find_trait(jule::Str);


	inline jule::Ref<_13009ed30_Enum> _method_find_enum(jule::Str);


	inline jule::Ref<_1303533b0_Var> _method___find_var(jule::Str,jule::Bool,jule::Bool);


	inline jule::Ref<_1304dc9b0_TypeAlias> _method___find_type_alias(jule::Str,jule::Bool,jule::Bool);


	inline jule::Any _method_def_by_ident(jule::Str,jule::Bool);


	inline jule::Bool _method_is_duplicated_ident(jule::Uintptr,jule::Str,jule::Bool);


	inline bool operator==(const _13032dc50_SymbolTable &_Src) {
		return 
			this->_field_file == _Src._field_file &&
			this->_field_passes == _Src._field_passes &&
			this->_field_imports == _Src._field_imports &&
			this->_field_vars == _Src._field_vars &&
			this->_field_type_aliases == _Src._field_type_aliases &&
			this->_field_structs == _Src._field_structs &&
			this->_field_funcs == _Src._field_funcs &&
			this->_field_traits == _Src._field_traits &&
			this->_field_enums == _Src._field_enums &&
			this->_field_impls == _Src._field_impls;
	}

	inline bool operator!=(const _13032dc50_SymbolTable &_Src) { return !this->operator==(_Src); }
};


inline jule::Int _136f077b0_get_last_errno(void);
inline jule::Str _136f04ed0_byte_ptr_to_str(jule::U8*);
inline jule::Int _136f04ed0_stat(jule::U8*,struct stat*);
inline jule::Int _136f04ed0_open(jule::U8*,jule::Int,jule::Int);
inline jule::U8* _136f04ed0_getcwd(jule::U8*,jule::Uint);
inline DIR* _136f04ed0_opendir(jule::U8*);
inline struct dirent* _136f04ed0_readdir(DIR*);
inline jule::Int _136f04ed0_closedir(DIR*);
inline jule::I64 _126e418f0_seek(jule::Int,jule::I64,jule::Int);
inline jule::Int _126e418f0_read(jule::Int,void*,jule::Uint);
inline jule::Int _126e418f0_close(jule::Int);
inline jule::Int _126e418f0_write(jule::Int,void*,jule::Uint);
inline void _126e418f0_exit(jule::Int);
inline void _136f32ab0_free(void*);
inline jule::Int _126e1ee50_get_last_os_error(void);
inline std::tuple<jule::Str,jule::Int> _126e23f30_working_dir(void);
inline void _126e23f30_init(void);
inline std::tuple<jule::Str,jule::Int> _126e25940___getwd(void);
inline jule::Str _136ec98d0_clean(jule::Str);
inline jule::Str _136ec98d0_from_slash(jule::Str);
inline jule::Str _136ec98d0_join(jule::Slice<jule::Str>);
inline jule::Str _136ec98d0_ext(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _136ec98d0_abs(jule::Str);
inline jule::Str _136ec98d0_base(jule::Str);
inline jule::Str _136ec98d0_dir(jule::Str);
inline jule::Str _136ec98d0_volume_name(jule::Str);
inline jule::Bool _136ec9750_is_path_sep(jule::U8);
inline jule::Bool _136ec9750_is_abs(jule::Str);
inline jule::Int _136ec9750_volume_name_len(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _136ec9750___abs(jule::Str);
inline jule::Str _136ec9750_str_join(jule::Slice<jule::Str>,jule::Str);
inline jule::Str _136ec9750___join(jule::Slice<jule::Str>);
inline jule::Int _1278411a0_leading_zeros64(jule::U64);
inline jule::Int _1278411a0_trailing_zeros(jule::Uint);
inline jule::Int _1278411a0_trailing_zeros32(jule::U32);
inline jule::Int _1278411a0_trailing_zeros64(jule::U64);
inline jule::Int _1278411a0_len32(jule::U32);
inline jule::Int _1278411a0_len64(jule::U64);
inline std::tuple<jule::U64,jule::U64> _1278411a0_add64(jule::U64,jule::U64,jule::U64);
inline std::tuple<jule::U64,jule::U64> _1278411a0_mul64(jule::U64,jule::U64);
inline jule::U32 _136ef8580_f32_bits(jule::F32);
inline jule::F32 _136ef8580_f32_from_bits(jule::U32);
inline jule::U64 _136ef8580_f64_bits(jule::F64);
inline jule::F64 _136ef8580_f64_from_bits(jule::U64);
inline jule::F64 _12723d9f0_nan(void);
inline jule::Bool _12723d9f0_is_nan(jule::F64);
inline jule::F64 _12723d9f0_inf(jule::Int);
inline jule::Bool _12723d9f0_is_inf(jule::F64,jule::Int);
inline jule::F64 _1272f1720_abs(jule::F64);
inline std::tuple<jule::F64,jule::F64> _136ef5550_modf(jule::F64);
inline jule::Str _136f888c0_fmt_float(jule::F64,jule::U8,jule::Int,jule::Int);
inline jule::Slice<jule::U8> _136f888c0_generic_ftoa(jule::Slice<jule::U8>,jule::F64,jule::U8,jule::Int,jule::Int);
inline jule::Slice<jule::U8> _136f888c0_big_ftoa(jule::Slice<jule::U8>,jule::Int,jule::U8,jule::Bool,jule::U64,jule::Int,_136f888c0_FloatInfo&);
inline jule::Slice<jule::U8> _136f888c0_fmt_digits(jule::Slice<jule::U8>,jule::Bool,jule::Bool,_136f888c0_DecimalSlice,jule::Int,jule::U8);
inline void _136f888c0_round_shortest(_126f5c9e0_Decimal&,jule::U64,jule::Int,_136f888c0_FloatInfo&);
inline jule::Slice<jule::U8> _136f888c0_fmt_e(jule::Slice<jule::U8>,jule::Bool,_136f888c0_DecimalSlice,jule::Int,jule::U8);
inline jule::Slice<jule::U8> _136f888c0_fmt_f(jule::Slice<jule::U8>,jule::Bool,_136f888c0_DecimalSlice,jule::Int);
inline jule::Slice<jule::U8> _136f888c0_fmt_b(jule::Slice<jule::U8>,jule::Bool,jule::U64,jule::Int,_136f888c0_FloatInfo&);
inline jule::Slice<jule::U8> _136f888c0_fmt_x(jule::Slice<jule::U8>,jule::Int,jule::U8,jule::Bool,jule::U64,jule::Int,_136f888c0_FloatInfo&);
inline jule::Int _136f888c0_min(jule::Int,jule::Int);
inline jule::Int _136f888c0_max(jule::Int,jule::Int);
inline jule::U8 _126edcdf0_lower(jule::U8);
inline std::tuple<jule::U64,jule::Int> _126edcdf0_parse_uint(jule::Str,jule::Int,jule::Int);
inline std::tuple<jule::I64,jule::Int> _126edcdf0_parse_int(jule::Str,jule::Int,jule::Int);
inline std::tuple<jule::F64,jule::Bool> _136f32260_eisel_lemire64(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _136f32260_eisel_lemire32(jule::U64,jule::Int,jule::Bool);
inline jule::Int _136fb03b0_common_prefix_len_ignore_case(jule::Str,jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Bool> _136fb03b0_special(jule::Str);
inline std::tuple<jule::U64,jule::Int,jule::Bool,jule::Bool,jule::Bool,jule::Int,jule::Bool> _136fb03b0_read_float(jule::Str);
inline std::tuple<jule::F64,jule::Bool> _136fb03b0_atof64exact(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F32,jule::Bool> _136fb03b0_atof32exact(jule::U64,jule::Int,jule::Bool);
inline std::tuple<jule::F64,jule::Int> _136fb03b0_atof_hex(jule::Str,_136f888c0_FloatInfo&,jule::U64,jule::Int,jule::Bool,jule::Bool);
inline std::tuple<jule::F32,jule::Int,jule::Int> _136fb03b0_atof32(jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Int> _136fb03b0_atof64(jule::Str);
inline std::tuple<jule::F64,jule::Int,jule::Int> _136fb03b0_parse_float_prefix(jule::Str,jule::Int);
inline std::tuple<jule::F64,jule::Int> _136fb03b0_parse_float(jule::Str,jule::Int);
inline void _126e27830_ryu_ftoa_fixed32(_136f888c0_DecimalSlice&,jule::U32,jule::Int,jule::Int);
inline void _126e27830_ryu_ftoa_fixed64(_136f888c0_DecimalSlice&,jule::U64,jule::Int,jule::Int);
inline void _126e27830_format_decimal(_136f888c0_DecimalSlice&,jule::U64,jule::Bool,jule::Bool,jule::Int);
inline void _126e27830_ryu_ftoa_shortest(_136f888c0_DecimalSlice&,jule::U64,jule::Int,_136f888c0_FloatInfo&);
inline jule::Int _126e27830_mul_by_log2_log10(jule::Int);
inline jule::Int _126e27830_mul_by_log10_log2(jule::Int);
inline std::tuple<jule::U64,jule::U64,jule::U64,jule::Int> _126e27830_compute_bounds(jule::U64,jule::Int,_136f888c0_FloatInfo&);
inline void _126e27830_ryu_digits(_136f888c0_DecimalSlice&,jule::U64,jule::U64,jule::U64,jule::Bool,jule::Bool);
inline void _126e27830_ryu_digits32(_136f888c0_DecimalSlice&,jule::U32,jule::U32,jule::U32,jule::Bool,jule::Bool,jule::Int);
inline std::tuple<jule::U32,jule::Int,jule::Bool> _126e27830_mult64bit_pow10(jule::U32,jule::Int,jule::Int);
inline std::tuple<jule::U64,jule::Int,jule::Bool> _126e27830_mult128bit_pow10(jule::U64,jule::Int,jule::Int);
inline jule::Bool _126e27830_divisible_by_pow5(jule::U64,jule::Int);
inline std::tuple<jule::U32,jule::U32> _126e27830_divmod1e9(jule::U64);
inline void _126f5c9e0_trim(_126f5c9e0_Decimal&);
inline void _126f5c9e0_right_shift(_126f5c9e0_Decimal&,jule::Uint);
inline jule::Bool _126f5c9e0_prefix_is_less_than(jule::Slice<jule::U8>,jule::Str);
inline void _126f5c9e0_left_shift(_126f5c9e0_Decimal&,jule::Uint);
inline jule::Bool _126f5c9e0_should_round_up(_126f5c9e0_Decimal&,jule::Int);
inline jule::Str _127164920_fmt_uint(jule::U64,jule::Int);
inline jule::Str _127164920_fmt_int(jule::I64,jule::Int);
inline jule::Str _127164920_itoa(jule::Int);
inline jule::Str _127164920_small(jule::Int);
inline jule::Bool _127164920_is_power_of_two(jule::Int);
inline std::tuple<jule::Slice<jule::U8>,jule::Str> _127164920_fmt_bits(jule::Slice<jule::U8>,jule::U64,jule::Int,jule::Bool,jule::Bool);
inline void _126ef0cf0_exit(jule::Int);
inline jule::Str _126ef0cf0_executable(void);
inline jule::Bool _136f04bd0_is_std_header_path(jule::Str);
inline jule::Bool _136f04bd0_is_valid_header_ext(jule::Str);
inline jule::Bool _136f04bd0_is_valid_cpp_ext(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _136e67690_check_os(jule::Str);
inline std::tuple<jule::Bool,jule::Bool> _136e67690_check_arch(jule::Str);
inline jule::Bool _136e67690_is_pass_file_annotation(jule::Str);
inline jule::Str _136e8b750_errorf(jule::Str,jule::Slice<jule::Any>);
inline jule::Str _136e8b750_arg_to_str(jule::Any);
inline jule::Int _136e8b750_find_next_fmt(jule::Str);
inline jule::Str _136e8b750_apply_fmt(jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _136e9f3c0_is_top_directive(jule::Str);
inline jule::Bool _136ea8e10_is_windows(jule::Str);
inline jule::Bool _136ea8e10_is_darwin(jule::Str);
inline jule::Bool _136ea8e10_is_linux(jule::Str);
inline jule::Bool _136ea8e10_is_i386(jule::Str);
inline jule::Bool _136ea8e10_is_amd64(jule::Str);
inline jule::Bool _136ea8e10_is_arm(jule::Str);
inline jule::Bool _136ea8e10_is_arm64(jule::Str);
inline jule::Bool _136ea8e10_is_unix(jule::Str);
inline jule::Bool _136ea8e10_is_32bit(jule::Str);
inline jule::Bool _136ea8e10_is_64bit(jule::Str);
inline void _136e9f470_exit_err(jule::Str);
inline void _136e9f470_init(void);
inline jule::Int _127627350_get_last_fs_error(void);
inline std::tuple<jule::Ref<_1275c8a10_File>,jule::Int> _12786c730_open(jule::Str,jule::Int,jule::Int);
inline std::tuple<jule::Ref<_1275e3c20_Status>,jule::Int> _136e09ef0_stat(jule::Str);
inline std::tuple<jule::Slice<jule::U8>,jule::Int> _1275c8a10_read_file(jule::Str);
inline std::tuple<jule::Slice<jule::Ref<_127281550_DirEntry>>,jule::Int> _12721daf0_read_dir(jule::Str);
inline std::tuple<jule::I32,jule::Int> _1275d1920_decode_rune(jule::Slice<jule::U8>);
inline std::tuple<jule::I32,jule::Int> _1275d1920_decode_rune_str(jule::Str);
inline jule::Bool _127941de0_is_unary_op(jule::Str);
inline jule::Bool _127941de0_is_str(jule::Str);
inline jule::Bool _127941de0_is_raw_str(jule::Str);
inline jule::Bool _127941de0_is_rune(jule::Str);
inline jule::Bool _127941de0_is_bool(jule::Str);
inline jule::Bool _127941de0_contains_any(jule::Str,jule::Str);
inline jule::Bool _127941de0_is_float(jule::Str);
inline jule::Bool _127941de0_is_num(jule::Str);
inline jule::Bool _127941de0_is_ignore_ident(jule::Str);
inline jule::Bool _127941de0_is_anon_ident(jule::Str);
inline jule::Bool _127941de0_is_space(jule::I32);
inline jule::Bool _127941de0_is_letter(jule::I32);
inline jule::Bool _127941de0_is_ident_rune(jule::Str);
inline jule::Bool _127941de0_is_decimal(jule::U8);
inline jule::Bool _127941de0_is_binary(jule::U8);
inline jule::Bool _127941de0_is_octal(jule::U8);
inline jule::Bool _127941de0_is_hex(jule::U8);
inline jule::Bool _127941de0_is_assign(jule::Uint);
inline jule::Bool _127941de0_is_postfix_op(jule::Str);
inline jule::Bool _127941de0_is_assign_op(jule::Str);
inline jule::Ref<_126f67810_File> _126f67810_new_file_set(jule::Str);
inline _136e99d00_Log _127774a70_make_err(jule::Int,jule::Int,jule::Ref<_126f67810_File>,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _127774a70_bytes_has_prefix(jule::Slice<jule::U8>,jule::Str);
inline jule::Str _127774a70_float_fmt_e(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _127774a70_float_fmt_p(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _127774a70_float_fmt_dotnp(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _127774a70_float_fmt_dotfp(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _127774a70_float_fmt_dotp(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _127774a70_float_num(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _127774a70_common_num(jule::Slice<jule::U8>);
inline jule::Str _127774a70_binary_num(jule::Slice<jule::U8>);
inline jule::Bool _127774a70_is_float_fmt_e(jule::U8,jule::Int);
inline jule::Bool _127774a70_is_float_fmt_p(jule::U8,jule::Int);
inline jule::Bool _127774a70_is_float_fmt_dotnp(jule::Slice<jule::U8>,jule::Int);
inline jule::Bool _127774a70_is_float_fmt_dotp(jule::Slice<jule::U8>,jule::Int);
inline jule::Bool _127774a70_is_float_fmt_dotfp(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _127774a70_octal_num(jule::Slice<jule::U8>);
inline jule::Str _127774a70_hex_num(jule::Slice<jule::U8>);
inline jule::Str _127774a70_hex_escape(jule::Slice<jule::U8>,jule::Int);
inline jule::Str _127774a70_big_unicode_point_escape(jule::Slice<jule::U8>);
inline jule::Str _127774a70_little_unicode_point_escape(jule::Slice<jule::U8>);
inline jule::Str _127774a70_hex_byte_escape(jule::Slice<jule::U8>);
inline jule::Str _127774a70_byte_escape(jule::Slice<jule::U8>);
inline jule::Slice<_136e99d00_Log> _127774a70_lex(jule::Ref<_126f67810_File>,jule::Slice<jule::U8>);
inline jule::Ref<_127b065b0_FileInfo> _127b065b0_parse_file(jule::Ref<_126f67810_File>);
inline std::tuple<jule::Ref<_1275d0e60_Ast>,jule::Slice<_136e99d00_Log>> _127b065b0_parse_fileset(jule::Ref<_126f67810_File>);
inline jule::Ref<_1275d7180_ScopeTree> _127b06690_new_scope(void);
inline std::tuple<jule::Bool,jule::Bool> _127b06690_is_st(_127941de0_Token,_127941de0_Token);
inline std::tuple<jule::Int,jule::Bool> _127b06690_next_st_pos(jule::Slice<_127941de0_Token>,jule::Int);
inline std::tuple<jule::Slice<_127941de0_Token>,jule::Bool> _127b06690_skip_st(jule::Int&,jule::Slice<_127941de0_Token>);
inline jule::Slice<jule::Ref<_127b06690_Stmt>> _127b06690_split_stms(jule::Slice<_127941de0_Token>);
inline jule::Slice<_127941de0_Token> _127b10a80_is_fn_call(jule::Slice<_127941de0_Token>);
inline jule::Ref<_127b10a80_CallData> _127b10a80_get_call_data(jule::Slice<_127941de0_Token>);
inline jule::Slice<_127941de0_Token> _127b10a80_get_block_expr(jule::Slice<_127941de0_Token>);
inline std::tuple<jule::Slice<_127941de0_Token>,jule::Slice<_127941de0_Token>> _127b10a80_split_colon(jule::Slice<_127941de0_Token>);
inline jule::Slice<_127941de0_Token> _127b10a80_eliminate_comments(jule::Slice<_127941de0_Token>);
inline jule::Int _127b10a80_find_lowest_prec_op(jule::Slice<_127941de0_Token>);
inline jule::Ref<_1275d7180_IdentExpr> _127b10a80_build_ident_expr(_127941de0_Token);
inline std::tuple<jule::Slice<_127941de0_Token>,jule::Int> _127b10a80_get_range_expr_tokens(jule::Slice<_127941de0_Token>);
inline jule::Bool _127c1fad0_check_assign_tokens(jule::Slice<_127941de0_Token>);
inline _136e99d00_Log _127b060e0_make_err(jule::Int,jule::Int,jule::Ref<_126f67810_File>,jule::Str,jule::Slice<jule::Any>);
inline jule::Slice<_127941de0_Token> _127b060e0_range(jule::Int&,jule::Str,jule::Str,jule::Slice<_127941de0_Token>);
inline std::tuple<jule::Slice<_127941de0_Token>,jule::Slice<_127941de0_Token>> _127b060e0_range_last(jule::Slice<_127941de0_Token>);
inline std::tuple<jule::Slice<jule::Slice<_127941de0_Token>>,jule::Slice<_136e99d00_Log>> _127b060e0_parts(jule::Slice<_127941de0_Token>,jule::Uint,jule::Bool);
inline _136e99d00_Log _127b060e0_compiler_err(_127941de0_Token,jule::Str,jule::Slice<jule::Any>);
inline jule::Ref<_1275d7180_Comment> _127b060e0_build_comment(_127941de0_Token);
inline jule::Str _127b060e0_tokstoa(jule::Slice<_127941de0_Token>);
inline jule::Ref<_1275d7180_TypeDecl> _127b2c380_build_void_type(void);
inline jule::Ref<_1275d7180_TypeDecl> _127b2c380_build_prim_type(_127941de0_Token);
inline std::tuple<jule::Slice<_127941de0_Token>,jule::Int> _127b2c380_split_map_range(jule::Slice<_127941de0_Token>,jule::Int&);
inline jule::Ref<_130c83140_Const> _130c83140_new_i64(jule::I64);
inline jule::Ref<_130c83140_Const> _130c83140_new_u64(jule::U64);
inline jule::Ref<_130c83140_Const> _130c83140_new_bool(jule::Bool);
inline jule::Ref<_130c83140_Const> _130c83140_new_str(jule::Str);
inline jule::Ref<_130c83140_Const> _130c83140_new_f64(jule::F64);
inline jule::Ref<_130c83140_Const> _130c83140_new_nil(void);
inline void _130c83140_lshift_unsig(_130c83140_Const&,_130c83140_Const&);
inline void _130c83140_rshift_unsig(_130c83140_Const&,_130c83140_Const&);
inline jule::Str _130cb2be0_real_kind_of(jule::Str);
inline jule::Int _130cb2be0_bitsize_of(jule::Str);
inline jule::Str _130cb2be0_int_from_bits(jule::U64);
inline jule::Str _130cb2be0_uint_from_bits(jule::U64);
inline jule::Str _130cb2be0_float_from_bits(jule::U64);
inline jule::Bool _130cb2be0_check_bit_float(jule::Str,jule::Int);
inline jule::U64 _130cb2be0_bitsize_of_float(jule::F64);
inline jule::U64 _130cb2be0_bitsize_of_int(jule::I64);
inline jule::U64 _130cb2be0_bitsize_of_uint(jule::U64);
inline void _130cb2be0_init(void);
inline jule::F64 _130cde370_min_of(jule::Str);
inline jule::F64 _130cde370_max_of(jule::Str);
inline jule::Bool _130d2a0a0_is_i8_compatible(jule::Str);
inline jule::Bool _130d2a0a0_is_i16_compatible(jule::Str);
inline jule::Bool _130d2a0a0_is_i32_compatible(jule::Str);
inline jule::Bool _130d2a0a0_is_i64_compatible(jule::Str);
inline jule::Bool _130d2a0a0_is_u8_compatible(jule::Str);
inline jule::Bool _130d2a0a0_is_u16_compatible(jule::Str);
inline jule::Bool _130d2a0a0_is_u32_compatible(jule::Str);
inline jule::Bool _130d2a0a0_is_u64_compatible(jule::Str);
inline jule::Bool _130d2a0a0_is_f32_compatible(jule::Str);
inline jule::Bool _130d2a0a0_is_f64_compatible(jule::Str);
inline jule::Bool _130d2a0a0_types_are_compatible(jule::Str,jule::Str);
inline jule::Bool _130d2a0a0_is_i16_greater(jule::Str);
inline jule::Bool _130d2a0a0_is_i32_greater(jule::Str);
inline jule::Bool _130d2a0a0_is_i64_greater(jule::Str);
inline jule::Bool _130d2a0a0_is_u8_greater(jule::Str);
inline jule::Bool _130d2a0a0_is_u16_greater(jule::Str);
inline jule::Bool _130d2a0a0_is_u32_greater(jule::Str);
inline jule::Bool _130d2a0a0_is_u64_greater(jule::Str);
inline jule::Bool _130d2a0a0_is_f32_greater(jule::Str);
inline jule::Bool _130d2a0a0_is_f64_greater(jule::Str);
inline jule::Bool _130d2a0a0_is_greater(jule::Str,jule::Str);
inline jule::Bool _130d7f700_is_sig_int(jule::Str);
inline jule::Bool _130d7f700_is_unsig_int(jule::Str);
inline jule::Bool _130d7f700_is_int(jule::Str);
inline jule::Bool _130d7f700_is_float(jule::Str);
inline jule::Bool _130d7f700_is_num(jule::Str);
inline std::tuple<jule::Str,jule::Bool> _130df9c40_is_byte_lit(jule::Str);
inline jule::I32 _130df9c40_to_rune(jule::Slice<jule::U8>);
inline jule::Str _130df9c40_to_raw_str(jule::Slice<jule::U8>);
inline jule::Str _130df9c40_to_str(jule::Slice<jule::U8>);
inline std::tuple<jule::U8,jule::Bool> _130df9c40_try_btoa_common_esq(jule::Slice<jule::U8>);
inline jule::I32 _130df9c40_rune_from_esq_seq(jule::Slice<jule::U8>,jule::Int&);
inline jule::Str _130df9c40_str_esq_seq(jule::Slice<jule::U8>,jule::Int&);
inline jule::Ref<_127ff3480_ReferenceStack> _127ff3480_new_reference_stack(void);
inline jule::Str _127ff3480_str_repeat(jule::Str,jule::Int);
inline jule::Str _127ff3480_build_doc(jule::Ref<_1275d7180_CommentGroup>);
inline jule::Ref<_1304dc9b0_TypeSymbol> _127ff3480_build_type(jule::Ref<_1275d7180_TypeDecl>);
inline jule::Ref<_13064b610_Value> _127ff3480_build_expr(jule::Ref<_1275d7180_Expr>);
inline jule::Ref<_1304dc9b0_TypeAlias> _127ff3480_build_type_alias(jule::Ref<_1275d7180_TypeAliasDecl>);
inline jule::Ref<_127b2e960_Field> _127ff3480_build_field(jule::Ref<_1275d7180_FieldDecl>);
inline jule::Slice<jule::Ref<_127b2e960_Field>> _127ff3480_build_fields(jule::Slice<jule::Ref<_1275d7180_FieldDecl>>);
inline jule::Ref<_127b2e960_Struct> _127ff3480_build_struct(jule::Ref<_1275d7180_StructDecl>);
inline jule::Ref<_127ed52e0_Param> _127ff3480_build_param(jule::Ref<_1275d7180_ParamDecl>);
inline jule::Slice<jule::Ref<_127ed52e0_Param>> _127ff3480_build_params(jule::Slice<jule::Ref<_1275d7180_ParamDecl>>);
inline jule::Ref<_127ed52e0_RetType> _127ff3480_build_ret_type(jule::Ref<_1275d7180_RetTypeDecl>);
inline jule::Ref<_127ed52e0_Fn> _127ff3480_build_fn(jule::Ref<_1275d7180_FnDecl>);
inline jule::Slice<jule::Ref<_127ed52e0_Fn>> _127ff3480_build_methods(jule::Slice<jule::Ref<_1275d7180_FnDecl>>);
inline jule::Ref<_130099320_Trait> _127ff3480_build_trait(jule::Ref<_1275d7180_TraitDecl>);
inline jule::Ref<_13009ed30_EnumItem> _127ff3480_build_enum_item(jule::Ref<_1275d7180_EnumItemDecl>);
inline jule::Slice<jule::Ref<_13009ed30_EnumItem>> _127ff3480_build_enum_items(jule::Slice<jule::Ref<_1275d7180_EnumItemDecl>>);
inline jule::Ref<_13009ed30_Enum> _127ff3480_build_enum(jule::Ref<_1275d7180_EnumDecl>);
inline jule::Ref<_1303533b0_Var> _127ff3480_build_var(jule::Ref<_1275d7180_VarDecl>);
inline jule::Ref<_12791ab70_Impl> _127ff3480_build_impl(jule::Ref<_1275d7180_Impl>);
inline jule::Ref<_1300a11b0_ScopeChecker> _1300a11b0_new_scope_checker_base(jule::Ref<_1300a20d0_Sema>,jule::Ref<_127ed52e0_FnIns>);
inline jule::Ref<_1300a11b0_ScopeChecker> _1300a11b0_new_scope_checker(jule::Ref<_1300a20d0_Sema>,jule::Ref<_127ed52e0_FnIns>);
inline jule::Ref<_1300a11b0_ScopeLabel> _1300a11b0_find_label_parent(jule::Str,jule::Ref<_1300a11b0_ScopeChecker>);
inline jule::Int _1300a11b0_count_match_type(jule::Ref<_1300a11b0_Match>,jule::Ref<_1304dc9b0_TypeKind>);
inline jule::Slice<jule::Ref<_13064b610_Data>> _1300a11b0_get_datas_from_tuple_data(jule::Ref<_13064b610_Data>);
inline jule::Slice<jule::Any> _1300a11b0_get_expr_models(jule::Any);
inline jule::Bool _1300a11b0_check_mut(jule::Ref<_1300a20d0_Sema>,jule::Ref<_13064b610_Data>,jule::Ref<_13064b610_Data>,_127941de0_Token);
inline jule::Bool _1300a11b0_check_assign(jule::Ref<_1300a20d0_Sema>,jule::Ref<_13064b610_Data>,jule::Ref<_13064b610_Data>,_127941de0_Token);
inline jule::Bool _1300a11b0_is_valid_ast_st_for_next_st(jule::Any);
inline jule::Bool _1300a11b0_is_valid_st_for_next_st(jule::Any);
inline jule::Bool _1300a11b0_st_is_def(jule::Any);
inline jule::Ref<_1303533b0_Var> _1300a4650_find_var_in_package(jule::Slice<jule::Ref<_13032dc50_SymbolTable>>,jule::Str,jule::Bool);
inline jule::Ref<_1304dc9b0_TypeAlias> _1300a4650_find_type_alias_in_package(jule::Slice<jule::Ref<_13032dc50_SymbolTable>>,jule::Str,jule::Bool);
inline jule::Ref<_127b2e960_Struct> _1300a4650_find_struct_in_package(jule::Slice<jule::Ref<_13032dc50_SymbolTable>>,jule::Str,jule::Bool);
inline jule::Ref<_127ed52e0_Fn> _1300a4650_find_fn_in_package(jule::Slice<jule::Ref<_13032dc50_SymbolTable>>,jule::Str,jule::Bool);
inline jule::Ref<_130099320_Trait> _1300a4650_find_trait_in_package(jule::Slice<jule::Ref<_13032dc50_SymbolTable>>,jule::Str);
inline jule::Ref<_13009ed30_Enum> _1300a4650_find_enum_in_package(jule::Slice<jule::Ref<_13032dc50_SymbolTable>>,jule::Str);
inline _136e99d00_Log _1300a20d0_compiler_err(_127941de0_Token,jule::Str,jule::Slice<jule::Any>);
inline jule::Bool _1300a20d0_imp_is_lookupable(jule::Ref<_1300a4650_ImportInfo>,jule::Str);
inline jule::Slice<jule::Ref<_1303533b0_Var>> _1300a20d0_build_ret_vars(jule::Ref<_127ed52e0_FnIns>);
inline jule::Slice<jule::Ref<_1303533b0_Var>> _1300a20d0_build_param_vars(jule::Ref<_127ed52e0_FnIns>);
inline jule::Slice<jule::Ref<_1304dc9b0_TypeAlias>> _1300a20d0_build_generic_type_aliases(jule::Ref<_127ed52e0_FnIns>);
inline jule::Ref<_13032dc50_SymbolTable> _1300a20d0_find_file(jule::Slice<jule::Ref<_13032dc50_SymbolTable>>,jule::Ref<_126f67810_File>);
inline std::tuple<jule::Bool,jule::Bool> _1300a20d0_conditional_has_ret(jule::Ref<_1300a11b0_Conditional>);
inline jule::Bool _1300a20d0_match_has_ret(jule::Ref<_1300a11b0_Match>);
inline std::tuple<jule::Bool,jule::Bool,jule::Bool> _1300a20d0___has_ret(jule::Ref<_1300a11b0_Scope>);
inline jule::Bool _1300a20d0_has_ret(jule::Ref<_1300a11b0_Scope>);
inline jule::Slice<jule::Ref<_1304dc9b0_TypeKind>> _13032cf90_get_fn_result_types(jule::Ref<_127ed52e0_FnIns>);
inline jule::Bool _13032cf90_trait_has_reference_receiver(jule::Ref<_130099320_Trait>);
inline jule::Bool _13032cf90_float_assignable(jule::Str,jule::Ref<_13064b610_Data>);
inline jule::Bool _13032cf90_sig_assignable(jule::Str,jule::Ref<_13064b610_Data>);
inline jule::Bool _13032cf90_unsig_assignable(jule::Str,jule::Ref<_13064b610_Data>);
inline jule::Bool _13032cf90_int_assignable(jule::Str,jule::Ref<_13064b610_Data>);
inline jule::Any _13064b610_find_builtins_import(jule::Str,jule::Ref<_1300a4650_ImportInfo>);
inline jule::Any _13064b610_find_builtins_sema(jule::Str,jule::Ref<_1300a20d0_Sema>);
inline jule::Bool _13064b610_is_ok_for_shifting(jule::Ref<_13064b610_Data>);
inline jule::Bool _13064b610_is_instanced_struct(jule::Ref<_127b2e960_StructIns>);
inline void _13064b610_normalize_bitsize(jule::Ref<_13064b610_Data>);
inline void _13064b610_normalize_type(jule::Ref<_13064b610_Data>);
inline void _13064b610_apply_cast_kind_model(jule::Ref<_13064b610_Data>);
inline void _13064b610_apply_cast_kind(jule::Ref<_13064b610_Data>);
inline jule::Ref<_13064b610_Data> _13064b610_build_void_data(void);
inline jule::Str _13064b610_kind_by_bitsize(jule::Any);
inline jule::Str _13064b610_check_data_for_integer_indexing(jule::Ref<_13064b610_Data>);
inline jule::Bool _1304dc9b0_can_get_ptr(jule::Ref<_13064b610_Data>);
inline jule::Bool _1304dc9b0_is_lvalue(jule::Ref<_1304dc9b0_TypeKind>);
inline jule::Bool _1304dc9b0_is_mut(jule::Ref<_1304dc9b0_TypeKind>);
inline jule::Bool _1304dc9b0_supports_cloning(jule::Ref<_1304dc9b0_TypeKind>);
inline jule::Bool _1304dc9b0_is_nil_compatible(jule::Ref<_1304dc9b0_TypeKind>);
inline jule::Bool _1304dc9b0_is_valid_for_ref(jule::Ref<_1304dc9b0_TypeKind>);
inline jule::Bool _1304dc9b0_is_variadicable(jule::Ref<_1304dc9b0_TypeKind>);
inline jule::Str _1304dc9b0_build_link_path_by_tokens(jule::Slice<_127941de0_Token>);
inline jule::Ref<_1304dc9b0_Prim> _1304dc9b0_build_prim_type(jule::Str);
inline jule::Bool _1304dc9b0_is_prim(jule::Str);
inline std::tuple<jule::Ref<_13032dc50_SymbolTable>,jule::Slice<_136e99d00_Log>> _13064d450_build_symbols(jule::Ref<_1275d0e60_Ast>,jule::Trait<_1300a4650_Importer>,jule::Ref<_127ff3480_SymbolBuilder>);
inline std::tuple<jule::Ref<_1300a4650_Package>,jule::Slice<_136e99d00_Log>> _13064d450___analyze_package(jule::Slice<jule::Ref<_1275d0e60_Ast>>,jule::Trait<_1300a4650_Importer>);
inline std::tuple<jule::Ref<_1300a4650_Package>,jule::Slice<_136e99d00_Log>> _13064d450_analyze_package(jule::Slice<jule::Ref<_1275d0e60_Ast>>,jule::Trait<_1300a4650_Importer>);
inline void _130b8f5f0_init(void);
inline jule::Ref<_127ed52e0_FnIns> _130b8f5f0_find_builtin_fn(jule::Str);
inline jule::Ref<_1304dc9b0_TypeAlias> _130b8f5f0_find_builtin_type_alias(jule::Str);
inline jule::Ref<_130099320_Trait> _130b8f5f0_find_builtin_trait(jule::Str);
inline jule::Any _130b8f5f0_find_builtin_def(jule::Str);
inline jule::Any _130b8f5f0_find_builtin_def_std_mem(jule::Str);
inline jule::Any _130b8f5f0_find_package_builtin_def(jule::Str,jule::Str);
inline jule::Ref<_13064b610_Data> _130b8f5f0_builtin_caller_common_plain(jule::Ref<_13064b610_Eval>,jule::Ref<_1275d7180_FnCallExpr>,jule::Ref<_13064b610_Data>);
inline jule::Ref<_13064b610_Data> _130b8f5f0_builtin_caller_common(jule::Ref<_13064b610_Eval>,jule::Ref<_1275d7180_FnCallExpr>,jule::Ref<_13064b610_Data>);
inline jule::Ref<_13064b610_Data> _130b8f5f0_builtin_caller_common_mut(jule::Ref<_13064b610_Eval>,jule::Ref<_1275d7180_FnCallExpr>,jule::Ref<_13064b610_Data>);
inline jule::Ref<_13064b610_Data> _130b8f5f0_builtin_caller_out(jule::Ref<_13064b610_Eval>,jule::Ref<_1275d7180_FnCallExpr>,jule::Ref<_13064b610_Data>);
inline jule::Ref<_13064b610_Data> _130b8f5f0_builtin_caller_outln(jule::Ref<_13064b610_Eval>,jule::Ref<_1275d7180_FnCallExpr>,jule::Ref<_13064b610_Data>);
inline jule::Ref<_13064b610_Data> _130b8f5f0_builtin_caller_new(jule::Ref<_13064b610_Eval>,jule::Ref<_1275d7180_FnCallExpr>,jule::Ref<_13064b610_Data>);
inline jule::Ref<_13064b610_Data> _130b8f5f0_builtin_caller_real(jule::Ref<_13064b610_Eval>,jule::Ref<_1275d7180_FnCallExpr>,jule::Ref<_13064b610_Data>);
inline jule::Ref<_13064b610_Data> _130b8f5f0_builtin_caller_drop(jule::Ref<_13064b610_Eval>,jule::Ref<_1275d7180_FnCallExpr>,jule::Ref<_13064b610_Data>);
inline jule::Ref<_13064b610_Data> _130b8f5f0_builtin_caller_panic(jule::Ref<_13064b610_Eval>,jule::Ref<_1275d7180_FnCallExpr>,jule::Ref<_13064b610_Data>);
inline jule::Ref<_13064b610_Data> _130b8f5f0_builtin_caller_make(jule::Ref<_13064b610_Eval>,jule::Ref<_1275d7180_FnCallExpr>,jule::Ref<_13064b610_Data>);
inline jule::Ref<_13064b610_Data> _130b8f5f0_builtin_caller_append(jule::Ref<_13064b610_Eval>,jule::Ref<_1275d7180_FnCallExpr>,jule::Ref<_13064b610_Data>);
inline jule::Ref<_13064b610_Data> _130b8f5f0_builtin_caller_copy(jule::Ref<_13064b610_Eval>,jule::Ref<_1275d7180_FnCallExpr>,jule::Ref<_13064b610_Data>);
inline jule::Ref<_13064b610_Data> _130b8f5f0_builtin_caller_recover(jule::Ref<_13064b610_Eval>,jule::Ref<_1275d7180_FnCallExpr>,jule::Ref<_13064b610_Data>);
inline jule::Ref<_13064b610_Data> _130b8f5f0_builtin_caller_clone(jule::Ref<_13064b610_Eval>,jule::Ref<_1275d7180_FnCallExpr>,jule::Ref<_13064b610_Data>);
inline jule::Ref<_13064b610_Data> _130b8f5f0_builtin_caller_std_mem_size_of(jule::Ref<_13064b610_Eval>,jule::Ref<_1275d7180_FnCallExpr>,jule::Ref<_13064b610_Data>);
inline jule::Ref<_13064b610_Data> _130b8f5f0_builtin_caller_std_mem_align_of(jule::Ref<_13064b610_Eval>,jule::Ref<_1275d7180_FnCallExpr>,jule::Ref<_13064b610_Data>);
inline void _1271b5120_exit_err(jule::Str);
inline jule::Slice<jule::U8> _1271b5120_read_buff(jule::Str);
inline _136e99d00_Log _1271b5120_flat_compiler_err(jule::Str);
inline std::tuple<jule::Slice<jule::Ref<_127281550_DirEntry>>,jule::Str> _1271b5120_read_package_dirents(jule::Str);
inline jule::Slice<jule::Str> _136f09c40_get_all_unique_passes(jule::Ref<_1300a4650_Package>,jule::Slice<jule::Ref<_1300a4650_ImportInfo>>);
inline std::tuple<jule::Ref<_136f09c40_IR>,jule::Slice<_136e99d00_Log>> _136f09c40_build_ir(jule::Str);
inline jule::Bool _136f12120_is_exist_0(jule::Slice<jule::Any>,jule::Ref<_127ed52e0_Fn>);
inline jule::Bool _136f12120_is_exist_1(jule::Slice<jule::Any>,jule::Ref<_1303533b0_Var>);
inline jule::Bool _136f12120_is_exist_2(jule::Slice<jule::Any>,jule::Ref<_127b2e960_Struct>);
inline jule::Bool _136f12120_is_exist_3(jule::Slice<jule::Any>,jule::Ref<_130099320_Trait>);
inline jule::Bool _136f12120_is_exist_ref(jule::Slice<jule::Any>,jule::Any);
inline jule::Bool _136f12120_is_dead(jule::Any);
inline void _136f12120_drop_ref(jule::Slice<jule::Any>&,jule::Int);
inline jule::Bool _136f12120_is_all_references_are_dead_0(jule::Ref<_127ff3480_ReferenceStack>);
inline jule::Bool _136f12120_is_all_references_are_dead_1(jule::Ref<_127ff3480_ReferenceStack>);
inline jule::Bool _136f12120_is_all_references_are_dead_2(jule::Ref<_127ff3480_ReferenceStack>);
inline jule::Bool _136f12120_is_fn_dead(jule::Ref<_127ed52e0_Fn>);
inline jule::Bool _136f12120_is_var_dead(jule::Ref<_1303533b0_Var>);
inline jule::Bool _136f12120_is_struct_dead(jule::Ref<_127b2e960_Struct>);
inline jule::Bool _136f12120_is_trait_dead(jule::Ref<_130099320_Trait>);
inline void _136f12120_eliminate_dead_functions(_127ab7fa0_Vector_11&);
inline void _136f12120_eliminate_dead_globals(jule::Ref<_1300a4650_Package>);
inline void _136f12120_eliminate_dead_functions_package(jule::Ref<_1300a4650_Package>);
inline void _136f12120_eliminate_dead_structs(jule::Ref<_1300a4650_Package>);
inline void _136f12120_eliminate_dead_traits(jule::Ref<_1300a4650_Package>);
inline void _136f12120_eliminate_dead_code_package(jule::Ref<_1300a4650_Package>);
inline void _136f12120_eliminate_dead_code(jule::Ref<_136f09c40_IR>);
inline void _1275c5880_eliminate_dead_code_of_scope(jule::Ref<_1300a11b0_Scope>);
inline void _127cdea20_push_opt_level(jule::Int);
inline jule::Bool _127cdea20_is_opt_enabled(jule::Str);
inline jule::Str _127fba3d0_gen_if(jule::Ref<_1300a11b0_If>);
inline jule::Str _127fba3d0_gen_conditional(jule::Ref<_1300a11b0_Conditional>);
inline jule::Str _127fba3d0_gen_inf_iter(jule::Ref<_1300a11b0_InfIter>);
inline jule::Str _127fba3d0_gen_while_iter(jule::Ref<_1300a11b0_WhileIter>);
inline jule::Trait<_127fba3d0_RangeSetter> _127fba3d0_get_range_setter(jule::Ref<_1300a11b0_RangeIter>);
inline jule::Str _127fba3d0_gen_range_iter(jule::Ref<_1300a11b0_RangeIter>);
inline jule::Str _127fba3d0_gen_cont(jule::Ref<_1300a11b0_ContSt>);
inline jule::Str _127fba3d0_gen_label(jule::Ref<_1300a11b0_Label>);
inline jule::Str _127fba3d0_gen_goto(jule::Ref<_1300a11b0_GotoSt>);
inline jule::Str _127fba3d0_gen_postfix(jule::Ref<_1300a11b0_Postfix>);
inline jule::Str _127fba3d0_gen_assign(jule::Ref<_1300a11b0_Assign>);
inline jule::Str _127fba3d0_gen_multi_assign(jule::Ref<_1300a11b0_MultiAssign>);
inline jule::Str _127fba3d0_gen_case(jule::Ref<_1300a11b0_Match>,jule::Ref<_1300a11b0_Case>);
inline jule::Str _127fba3d0_gen_match(jule::Ref<_1300a11b0_Match>);
inline jule::Str _127fba3d0_gen_fall_st(jule::Ref<_1300a11b0_FallSt>);
inline jule::Str _127fba3d0_gen_break_st(jule::Ref<_1300a11b0_BreakSt>);
inline jule::Str _127fba3d0_gen_ret_vars(jule::Ref<_1300a11b0_RetSt>);
inline jule::Str _127fba3d0_gen_ret_expr_tuple(jule::Ref<_1300a11b0_RetSt>);
inline jule::Str _127fba3d0_gen_ret_expr(jule::Ref<_1300a11b0_RetSt>);
inline jule::Str _127fba3d0_gen_ret_st(jule::Ref<_1300a11b0_RetSt>);
inline jule::Str _127fba3d0_gen_recover(jule::Ref<_1300a11b0_Recover>);
inline jule::Str _127fba3d0_gen_data_expr(jule::Ref<_13064b610_Data>);
inline jule::Str _127fba3d0_gen_st(jule::Any);
inline jule::Str _127fba3d0_gen_scope(jule::Ref<_1300a11b0_Scope>);
inline jule::Str _127fba3d0_gen_fn_scope(jule::Ref<_127ed52e0_FnIns>);
inline jule::Str _127fba3d0_gen_method_scope(jule::Ref<_127ed52e0_FnIns>);
inline jule::Str _130e870c0_get_accessor(jule::Ref<_1304dc9b0_TypeKind>);
inline jule::Str _130e870c0_decompose_common_esq(jule::U8);
inline jule::Str _130e870c0_sbtoa(jule::U8);
inline jule::Str _130e870c0_get_str_model(jule::Ref<_130c83140_Const>);
inline jule::Str _130e870c0_get_bool_model(jule::Ref<_130c83140_Const>);
inline jule::Str _130e870c0_get_nil_model(void);
inline jule::Str _130e870c0_gen_float_special_cases(jule::F64);
inline jule::Str _130e870c0_get_f32_model(jule::Ref<_130c83140_Const>);
inline jule::Str _130e870c0_get_f64_model(jule::Ref<_130c83140_Const>);
inline jule::Str _130e870c0_get_float_model(jule::Ref<_13064b610_Data>);
inline jule::Str _130e870c0_i64toa(jule::I64);
inline jule::Str _130e870c0_get_i64_model(jule::Ref<_130c83140_Const>);
inline jule::Str _130e870c0_get_u64_model(jule::Ref<_130c83140_Const>);
inline jule::Str _130e870c0_gen_const_expr(jule::Ref<_13064b610_Data>);
inline jule::Str _130e870c0_gen_const_expr_model(jule::Ref<_130c83140_Const>);
inline jule::Str _130e870c0_gen_binop_expr_model(jule::Ref<_1279cf930_BinopExprModel>);
inline jule::Str _130e870c0_gen_var_expr_model(jule::Ref<_1303533b0_Var>);
inline jule::Str _130e870c0_gen_struct_expr_model(jule::Ref<_127b2e960_Struct>);
inline jule::Str _130e870c0_gen_struct_ins_expr_model(jule::Ref<_127b2e960_StructIns>);
inline jule::Str _130e870c0_gen_unary_expr_model(jule::Ref<_1279cf930_UnaryExprModel>);
inline jule::Str _130e870c0_gen_get_ref_ptr_expr_model(jule::Ref<_1279cf930_GetRefPtrExprModel>);
inline jule::Str _130e870c0_gen_cpp_struct_lit_expr_model(jule::Ref<_1279cf930_StructLitExprModel>);
inline jule::Str _130e870c0_gen_struct_lit_expr_model(jule::Ref<_1279cf930_StructLitExprModel>);
inline jule::Str _130e870c0_gen_alloc_struct_lit_expr_model(jule::Ref<_1279cf930_AllocStructLitExprModel>);
inline jule::Str _130e870c0_gen_casting_expr_model(jule::Ref<_1279cf930_CastingExprModel>);
inline jule::Str _130e870c0_gen_arg_expr_models(jule::Slice<jule::Any>);
inline jule::Str _130e870c0_gen_fn_call_expr_model(jule::Ref<_1279cf930_FnCallExprModel>);
inline jule::Str _130e870c0_gen_slice_expr_model(jule::Ref<_1279cf930_SliceExprModel>);
inline jule::Str _130e870c0_gen_indexing_expr_model(jule::Ref<_1279cf930_IndexigExprModel>);
inline jule::Str _130e870c0_gen_anon_fn_expr_model(jule::Ref<_1279cf930_AnonFnExprModel>);
inline jule::Str _130e870c0_gen_map_expr_model(jule::Ref<_1279cf930_MapExprModel>);
inline jule::Str _130e870c0_gen_slicing_expr_model(jule::Ref<_1279cf930_SlicingExprModel>);
inline jule::Str _130e870c0_gen_trait_sub_ident_expr_model(jule::Ref<_1279cf930_TraitSubIdentExprModel>);
inline jule::Str _130e870c0_gen_struct_sub_ident_expr_model(jule::Ref<_1279cf930_StructSubIdentExprModel>);
inline jule::Str _130e870c0_gen_common_ident_expr_model(jule::Ref<_1279cf930_CommonIdentExprModel>);
inline jule::Str _130e870c0_gen_common_sub_ident_expr_model(jule::Ref<_1279cf930_CommonSubIdentExprModel>);
inline jule::Str _130e870c0_gen_array_expr_model(jule::Ref<_1279cf930_ArrayExprModel>);
inline jule::Str _130e870c0_gen_fn_ins_expr_model(jule::Ref<_127ed52e0_FnIns>);
inline jule::Str _130e870c0_gen_tuple_expr_model(jule::Ref<_1279cf930_TupleExprModel>);
inline jule::Str _130e870c0_gen_builtin_new_call_expr_model(jule::Ref<_1279cf930_BuiltinNewCallExprModel>);
inline jule::Str _130e870c0_gen_builtin_out_call_expr_model(jule::Ref<_1279cf930_BuiltinOutCallExprModel>);
inline jule::Str _130e870c0_gen_builtin_outln_call_expr_model(jule::Ref<_1279cf930_BuiltinOutlnCallExprModel>);
inline jule::Str _130e870c0_gen_builtin_real_call_expr_model(jule::Ref<_1279cf930_BuiltinRealCallExprModel>);
inline jule::Str _130e870c0_gen_builtin_drop_call_expr_model(jule::Ref<_1279cf930_BuiltinDropCallExprModel>);
inline jule::Str _130e870c0_gen_builtin_panic_call_expr_model(jule::Ref<_1279cf930_BuiltinPanicCallExprModel>);
inline jule::Str _130e870c0_gen_builtin_make_call_expr_model(jule::Ref<_1279cf930_BuiltinMakeCallExprModel>);
inline jule::Str _130e870c0_gen_builtin_clone_call_expr_model(jule::Ref<_1279cf930_BuiltinCloneCallExprModel>);
inline jule::Str _130e870c0_gen_sizeof_expr_model(jule::Ref<_1279cf930_SizeofExprModel>);
inline jule::Str _130e870c0_gen_alignof_expr_model(jule::Ref<_1279cf930_AlignofExprModel>);
inline jule::Str _130e870c0_gen_rune_expr_model(jule::Ref<_1279cf930_RuneExprModel>);
inline jule::Str _130e870c0_gen_builtin_error_trait_sub_ident_expr_model(jule::Ref<_1279cf930_BuiltinErrorTraitSubIdentExprModel>);
inline jule::Str _130e870c0_gen_explicit_deref_expr_model(jule::Ref<_1279cf930_ExplicitDerefExprModel>);
inline jule::Str _130e870c0_gen_struct_static_ident_expr_model(jule::Ref<_1279cf930_StructStaticIdentExprModel>);
inline jule::Str _130e870c0_gen_expr_model(jule::Any);
inline jule::Str _130e870c0_gen_expr(jule::Any);
inline jule::Str _130e870c0_gen_val(jule::Ref<_13064b610_Value>);
inline jule::Str _130e870c0_get_init_expr(jule::Ref<_1304dc9b0_TypeKind>);
inline jule::Str _130f583a0_get_derive_fn_decl_clone(jule::Ref<_127b2e960_Struct>);
inline jule::Str _130f583a0_get_derive_fn_def_clone(jule::Ref<_127b2e960_Struct>);
inline jule::Str _130f5aa90_as_ident(jule::Str);
inline jule::Str _130f5aa90_as_jt(jule::Str);
inline jule::Str _130f5aa90_get_ptr_as_ident(jule::Uintptr);
inline jule::Str _130f5aa90_as_out_ident(jule::Str,jule::Uintptr);
inline jule::Str _130f5aa90_as_local_ident(jule::Int,jule::Int,jule::Str);
inline jule::Str _130f5aa90_fn_out_ident(jule::Ref<_127ed52e0_Fn>);
inline jule::Str _130f5aa90_fn_ins_out_ident(jule::Ref<_127ed52e0_FnIns>);
inline jule::Str _130f5aa90_trait_out_ident(jule::Ref<_130099320_Trait>);
inline jule::Str _130f5aa90_param_out_ident(jule::Ref<_127ed52e0_Param>);
inline jule::Str _130f5aa90_struct_out_ident(jule::Ref<_127b2e960_Struct>);
inline jule::Str _130f5aa90_struct_ins_out_ident(jule::Ref<_127b2e960_StructIns>);
inline jule::Str _130f5aa90_field_out_ident(jule::Ref<_127b2e960_Field>);
inline jule::Str _130f5aa90_var_out_ident(jule::Ref<_1303533b0_Var>);
inline jule::Str _130f5aa90_iter_begin_label_ident(jule::Uintptr);
inline jule::Str _130f5aa90_iter_end_label_ident(jule::Uintptr);
inline jule::Str _130f5aa90_iter_next_label_ident(jule::Uintptr);
inline jule::Str _130f5aa90_label_ident(jule::Str);
inline jule::Str _130f5aa90_match_end_label_ident(jule::Uintptr);
inline jule::Str _130f5aa90_case_begin_label_ident(jule::Uintptr);
inline jule::Str _130f5aa90_case_end_label_ident(jule::Uintptr);
inline jule::Bool _13023c2e0_has_directive(jule::Slice<jule::Ref<_1275d7180_Directive>>,jule::Str);
inline jule::Str _13023c2e0_gen_prim_kind(jule::Ref<_1304dc9b0_Prim>);
inline jule::Str _13023c2e0_gen_tuple_kind(jule::Ref<_1304dc9b0_Tuple>);
inline jule::Str _13023c2e0_as_ref_kind(jule::Str);
inline jule::Str _13023c2e0_gen_ref_kind(jule::Ref<_1304dc9b0_Ref>);
inline jule::Str _13023c2e0_gen_ptr_kind(jule::Ref<_1304dc9b0_Ptr>);
inline jule::Str _13023c2e0_gen_enum_kind(jule::Ref<_13009ed30_Enum>);
inline jule::Str _13023c2e0_as_slice_kind(jule::Ref<_1304dc9b0_TypeKind>);
inline jule::Str _13023c2e0_gen_slice_kind(jule::Ref<_1304dc9b0_Slc>);
inline jule::Str _13023c2e0_gen_map_kind(jule::Ref<_1304dc9b0_Map>);
inline jule::Str _13023c2e0_gen_trait_kind_from_ident(jule::Str);
inline jule::Str _13023c2e0_gen_trait_kind(jule::Ref<_130099320_Trait>);
inline jule::Str _13023c2e0_gen_struct_kind(jule::Ref<_127b2e960_Struct>);
inline jule::Str _13023c2e0_gen_struct_kind_ins(jule::Ref<_127b2e960_StructIns>);
inline jule::Str _13023c2e0_gen_array_kind(jule::Ref<_1304dc9b0_Arr>);
inline jule::Str _13023c2e0_gen_fn_anon_decl(jule::Ref<_127ed52e0_FnIns>);
inline jule::Str _13023c2e0_gen_fn_kind(jule::Ref<_127ed52e0_FnIns>);
inline jule::Str _13023c2e0_gen_type_kind(jule::Ref<_1304dc9b0_TypeKind>);
inline void _130f8bbe0_add_indent(void);
inline void _130f8bbe0_done_indent(void);
inline jule::Str _130f8bbe0_indent(void);
inline jule::Bool _130f8bbe0_is_cpp_header_file(jule::Str);
inline jule::Str _130f8bbe0_gen_links(jule::Ref<_136f09c40_IR>);
inline jule::Str _130f8bbe0_gen_fn_result(jule::Ref<_127ed52e0_Fn>);
inline jule::Str _130f8bbe0_gen_fn_ins_result(jule::Ref<_127ed52e0_FnIns>);
inline jule::Str _130f8bbe0_gen_param_prototype(jule::Ref<_127ed52e0_Param>);
inline jule::Str _130f8bbe0_gen_param_ins(jule::Ref<_127ed52e0_ParamIns>);
inline jule::Str _130f8bbe0_gen_param_ins_prototype(jule::Ref<_127ed52e0_ParamIns>);
inline jule::Str _130f8bbe0_gen_param(jule::Ref<_127ed52e0_Param>);
inline jule::Str _130f8bbe0_gen_params(jule::Slice<jule::Ref<_127ed52e0_Param>>);
inline jule::Str _130f8bbe0_gen_params_ins(jule::Slice<jule::Ref<_127ed52e0_ParamIns>>);
inline jule::Str _130f8bbe0_gen_params_prototypes(jule::Slice<jule::Ref<_127ed52e0_ParamIns>>);
inline jule::Str _130f8bbe0_gen_trait(jule::Ref<_130099320_Trait>);
inline jule::Str _130f8bbe0_gen_traits_tbl(jule::Ref<_13032dc50_SymbolTable>);
inline jule::Str _130f8bbe0_gen_traits_pkg(jule::Ref<_1300a4650_Package>);
inline jule::Str _130f8bbe0_gen_traits(jule::Ref<_136f09c40_IR>);
inline jule::Str _130f8bbe0_gen_trait_prototype(jule::Ref<_130099320_Trait>);
inline jule::Str _130f8bbe0_gen_trait_prototypes(jule::Ref<_1300a4650_Package>);
inline jule::Str _130f8bbe0_gen_struct_plain_prototype(jule::Ref<_127b2e960_Struct>);
inline jule::Str _130f8bbe0_gen_struct_plain_prototypes(jule::Slice<jule::Ref<_127b2e960_Struct>>);
inline jule::Str _130f8bbe0_gen_struct_traits(jule::Ref<_127b2e960_Struct>);
inline jule::Str _130f8bbe0_gen_field_decl(jule::Ref<_127b2e960_FieldIns>);
inline jule::Str _130f8bbe0_gen_struct_self_field_type_kind(jule::Ref<_127b2e960_StructIns>);
inline jule::Str _130f8bbe0_gen_struct_self_field(jule::Ref<_127b2e960_StructIns>);
inline jule::Str _130f8bbe0_gen_struct_self_field_init_st(jule::Ref<_127b2e960_StructIns>);
inline jule::Str _130f8bbe0_gen_struct_constructor(jule::Ref<_127b2e960_StructIns>);
inline jule::Str _130f8bbe0_gen_struct_destructor(jule::Ref<_127b2e960_StructIns>);
inline jule::Str _130f8bbe0_gen_struct_operators(jule::Ref<_127b2e960_StructIns>);
inline jule::Str _130f8bbe0_gen_struct_derive_defs_prototypes(jule::Ref<_127b2e960_StructIns>);
inline jule::Str _130f8bbe0_gen_struct_ins_prototype(jule::Ref<_127b2e960_StructIns>);
inline jule::Str _130f8bbe0_gen_struct_prototype(jule::Ref<_127b2e960_Struct>);
inline jule::Str _130f8bbe0_gen_struct_prototypes(jule::Slice<jule::Ref<_127b2e960_Struct>>);
inline jule::Str _130f8bbe0_gen_fn_decl_head(jule::Ref<_127ed52e0_FnIns>,jule::Bool);
inline jule::Str _130f8bbe0_gen_fn_prototype(jule::Ref<_127ed52e0_Fn>,jule::Bool);
inline jule::Str _130f8bbe0_gen_fn_prototypes(jule::Ref<_1300a4650_Package>);
inline jule::Str _130f8bbe0_gen_prototypes(jule::Ref<_136f09c40_IR>,jule::Slice<jule::Ref<_127b2e960_Struct>>);
inline jule::Str _130f8bbe0_gen_var_init_expr(jule::Ref<_1303533b0_Var>,jule::Str);
inline jule::Str _130f8bbe0_gen_var(jule::Ref<_1303533b0_Var>);
inline jule::Str _130f8bbe0_gen_globals(jule::Slice<jule::Ref<_1303533b0_Var>>);
inline jule::Str _130f8bbe0_gen_fn(jule::Ref<_127ed52e0_Fn>);
inline jule::Str _130f8bbe0_gen_pkg_fns(jule::Ref<_1300a4650_Package>);
inline jule::Str _130f8bbe0_gen_struct_method_defs(jule::Ref<_127b2e960_StructIns>);
inline jule::Str _130f8bbe0_gen_struct_ostream(jule::Ref<_127b2e960_StructIns>);
inline jule::Str _130f8bbe0_gen_struct_derive_defs(jule::Ref<_127b2e960_StructIns>);
inline jule::Str _130f8bbe0_gen_struct_ins(jule::Ref<_127b2e960_StructIns>);
inline jule::Str _130f8bbe0_gen_struct(jule::Ref<_127b2e960_Struct>);
inline jule::Str _130f8bbe0_gen_structs(jule::Slice<jule::Ref<_127b2e960_Struct>>);
inline jule::Str _130f8bbe0_gen_fns(jule::Ref<_136f09c40_IR>);
inline jule::Str _130f8bbe0_gen_init_caller(jule::Ref<_136f09c40_IR>);
inline void _130f8bbe0_append_standard(jule::Str&,jule::Str,jule::Str);
inline jule::Str _130f8bbe0_gen(jule::Ref<_136f09c40_IR>);
inline jule::Bool _130f5b350_is_struct_ordered(jule::Slice<jule::Ref<_127b2e960_Struct>>,jule::Ref<_127b2e960_Struct>);
inline void _130f5b350_order_structures(jule::Slice<jule::Ref<_127b2e960_Struct>>);
inline jule::Bool _130f5b350_is_var_ordered(jule::Slice<jule::Ref<_1303533b0_Var>>,jule::Ref<_1303533b0_Var>);
inline void _130f5b350_order_variables(jule::Slice<jule::Ref<_1303533b0_Var>>);
inline jule::Str _136e09180_str_repeat(jule::Str,jule::Int);
inline void _136e09180_print_error_message(jule::Str);
inline void _136e09180_help(void);
inline void _136e09180_version(void);
inline void _136e09180_tool_distos(void);
inline void _136e09180_tool_distarch(void);
inline void _136e09180_tool(void);
inline jule::Bool _136e09180_process_command(void);
inline void _136e09180_init(void);
inline void _136e09180_exit_err(jule::Str);
void entry_point(void);
inline std::tuple<jule::Str,jule::Str> _14011c2a0_get_option(jule::Slice<jule::Str>,jule::Int&);
inline jule::Str _14011c2a0_get_option_value(jule::Slice<jule::Str>,jule::Int&);
inline void _14011c2a0_parse_out_option(jule::Slice<jule::Str>,jule::Int&);
inline void _14011c2a0_parse_opt_option(jule::Slice<jule::Str>,jule::Int&);
inline void _14011c2a0_check_target_arch(jule::Str);
inline void _14011c2a0_check_target_os(jule::Str);
inline void _14011c2a0_parse_target_option(jule::Slice<jule::Str>,jule::Int&);
inline void _14011c2a0_parse_compiler_option(jule::Slice<jule::Str>,jule::Int&);
inline jule::Str _14011c2a0_parse_options(jule::Slice<jule::Str>);
inline void _14011c2a0_write_output(jule::Str,jule::Str);
inline void _14011c2a0_clear_objects(void);
inline void _14011c2a0_compile_ir(jule::Str,jule::Str);
inline void _14011c2a0_do_spell(jule::Str,jule::Str,jule::Str);
inline void _14011c2a0_check_mode(void);
inline void _14011c2a0_check_compiler(void);
inline void _14011c2a0_set(void);
inline void _14011c2a0_print_logs(jule::Slice<_136e99d00_Log>);
inline jule::Bool _14011c2a0_is_cpp_source_file(jule::Str);
inline std::tuple<jule::Str,jule::Str> _14011c2a0_gen_compile_cmd(jule::Str,jule::Ref<_136f09c40_IR>);
inline jule::Str _14011c2a0_get_compile_path(void);
inline void _14011c2a0_apply_target_independent_optimizations(jule::Ref<_136f09c40_IR>);
inline void _14011c2a0_compile_command(void);


static jule::Str _136e09180_COMPILER = jule::Str("", 0);
static jule::Str _136e09180_COMPILER_PATH = jule::Str("", 0);
static jule::Str _136e09180_OUT_DIR = jule::Str("dist", 4);
static jule::Int _136e09180_MODE = 0LLU;
static jule::Str _136e09180_OUT_NAME = jule::Str("ir.cpp", 6);
static jule::Str _136e09180_OUT = jule::Str("", 0);
static jule::Slice<jule::Str> _126e23f30_ARGS = nullptr;
static jule::Slice<jule::Str> _126e23f30_ENV = nullptr;
static jule::Array<jule::U8,32> _1278411a0_DE_BRUIJN32_TAB = jule::Array<jule::U8,32>({0LLU,1LLU,28LLU,2LLU,29LLU,14LLU,24LLU,3LLU,30LLU,22LLU,20LLU,15LLU,25LLU,17LLU,4LLU,8LLU,31LLU,27LLU,13LLU,23LLU,21LLU,19LLU,16LLU,7LLU,26LLU,12LLU,18LLU,6LLU,11LLU,5LLU,10LLU,9LLU});
static jule::Array<jule::U8,64> _1278411a0_DE_BRUIJN64_TAB = jule::Array<jule::U8,64>({0LLU,1LLU,56LLU,2LLU,57LLU,49LLU,28LLU,3LLU,61LLU,58LLU,42LLU,50LLU,38LLU,29LLU,17LLU,4LLU,62LLU,47LLU,59LLU,36LLU,45LLU,43LLU,51LLU,22LLU,53LLU,39LLU,33LLU,30LLU,24LLU,18LLU,12LLU,5LLU,63LLU,55LLU,48LLU,27LLU,60LLU,41LLU,37LLU,16LLU,46LLU,35LLU,44LLU,21LLU,52LLU,32LLU,23LLU,11LLU,54LLU,26LLU,40LLU,15LLU,34LLU,20LLU,31LLU,10LLU,25LLU,14LLU,19LLU,9LLU,13LLU,8LLU,7LLU,6LLU});
static _136f888c0_FloatInfo _136f888c0_F32_INFO = _136f888c0_FloatInfo(23LLU,8LLU,-127LL);
static _136f888c0_FloatInfo _136f888c0_F64_INFO = _136f888c0_FloatInfo(52LLU,11LLU,-1023LL);
static jule::Array<jule::Array<jule::U64,2>,696> _136f32260_DETAILED_POWS_OF_TEN = jule::Array<jule::Array<jule::U64,2>,696>({jule::Array<jule::U64,2>({1671618768450675795LLU,18054884314459144840LLU}),jule::Array<jule::U64,2>({1044761730281672372LLU,11284302696536965525LLU}),jule::Array<jule::U64,2>({5917638181279478369LLU,14105378370671206906LLU}),jule::Array<jule::U64,2>({16620419763454123769LLU,17631722963339008632LLU}),jule::Array<jule::U64,2>({10387762352158827356LLU,11019826852086880395LLU}),jule::Array<jule::U64,2>({8373016921771146291LLU,13774783565108600494LLU}),jule::Array<jule::U64,2>({1242899115359157055LLU,17218479456385750618LLU}),jule::Array<jule::U64,2>({5388497965526861063LLU,10761549660241094136LLU}),jule::Array<jule::U64,2>({6735622456908576329LLU,13451937075301367670LLU}),jule::Array<jule::U64,2>({17642900107990496220LLU,16814921344126709587LLU}),jule::Array<jule::U64,2>({8720969558280366185LLU,10509325840079193492LLU}),jule::Array<jule::U64,2>({10901211947850457732LLU,13136657300098991865LLU}),jule::Array<jule::U64,2>({18238200953240460069LLU,16420821625123739831LLU}),jule::Array<jule::U64,2>({18316404623416369399LLU,10263013515702337394LLU}),jule::Array<jule::U64,2>({13672133742415685941LLU,12828766894627921743LLU}),jule::Array<jule::U64,2>({12478481159592219522LLU,16035958618284902179LLU}),jule::Array<jule::U64,2>({5493207715531443249LLU,10022474136428063862LLU}),jule::Array<jule::U64,2>({16089881681269079869LLU,12528092670535079827LLU}),jule::Array<jule::U64,2>({15500666083158961933LLU,15660115838168849784LLU}),jule::Array<jule::U64,2>({9687916301974351208LLU,9787572398855531115LLU}),jule::Array<jule::U64,2>({7498209359040551106LLU,12234465498569413894LLU}),jule::Array<jule::U64,2>({149389661945913074LLU,15293081873211767368LLU}),jule::Array<jule::U64,2>({93368538716195671LLU,9558176170757354605LLU}),jule::Array<jule::U64,2>({4728396691822632493LLU,11947720213446693256LLU}),jule::Array<jule::U64,2>({5910495864778290617LLU,14934650266808366570LLU}),jule::Array<jule::U64,2>({8305745933913819539LLU,9334156416755229106LLU}),jule::Array<jule::U64,2>({1158810380537498616LLU,11667695520944036383LLU}),jule::Array<jule::U64,2>({15283571030954036982LLU,14584619401180045478LLU}),jule::Array<jule::U64,2>({9881091751837770420LLU,18230774251475056848LLU}),jule::Array<jule::U64,2>({6175682344898606512LLU,11394233907171910530LLU}),jule::Array<jule::U64,2>({16942974967978033949LLU,14242792383964888162LLU}),jule::Array<jule::U64,2>({11955346673117766628LLU,17803490479956110203LLU}),jule::Array<jule::U64,2>({5166248661484910190LLU,11127181549972568877LLU}),jule::Array<jule::U64,2>({11069496845283525642LLU,13908976937465711096LLU}),jule::Array<jule::U64,2>({13836871056604407053LLU,17386221171832138870LLU}),jule::Array<jule::U64,2>({4036358391950366504LLU,10866388232395086794LLU}),jule::Array<jule::U64,2>({14268820026792733938LLU,13582985290493858492LLU}),jule::Array<jule::U64,2>({17836025033490917422LLU,16978731613117323115LLU}),jule::Array<jule::U64,2>({8841672636718129437LLU,10611707258198326947LLU}),jule::Array<jule::U64,2>({6440404777470273892LLU,13264634072747908684LLU}),jule::Array<jule::U64,2>({8050505971837842365LLU,16580792590934885855LLU}),jule::Array<jule::U64,2>({11949095260039733334LLU,10362995369334303659LLU}),jule::Array<jule::U64,2>({10324683056622278764LLU,12953744211667879574LLU}),jule::Array<jule::U64,2>({3682481783923072647LLU,16192180264584849468LLU}),jule::Array<jule::U64,2>({11524923151806696212LLU,10120112665365530917LLU}),jule::Array<jule::U64,2>({571095884476206553LLU,12650140831706913647LLU}),jule::Array<jule::U64,2>({14548927910877421904LLU,15812676039633642058LLU}),jule::Array<jule::U64,2>({13704765962725776594LLU,9882922524771026286LLU}),jule::Array<jule::U64,2>({7907585416552444934LLU,12353653155963782858LLU}),jule::Array<jule::U64,2>({661109733835780360LLU,15442066444954728573LLU}),jule::Array<jule::U64,2>({2719036592861056677LLU,9651291528096705358LLU}),jule::Array<jule::U64,2>({12622167777931096654LLU,12064114410120881697LLU}),jule::Array<jule::U64,2>({1942651667131707105LLU,15080143012651102122LLU}),jule::Array<jule::U64,2>({5825843310384704845LLU,9425089382906938826LLU}),jule::Array<jule::U64,2>({16505676174835656864LLU,11781361728633673532LLU}),jule::Array<jule::U64,2>({2185351144835019464LLU,14726702160792091916LLU}),jule::Array<jule::U64,2>({2731688931043774330LLU,18408377700990114895LLU}),jule::Array<jule::U64,2>({8624834609543440812LLU,11505236063118821809LLU}),jule::Array<jule::U64,2>({15392729280356688919LLU,14381545078898527261LLU}),jule::Array<jule::U64,2>({5405853545163697437LLU,17976931348623159077LLU}),jule::Array<jule::U64,2>({5684501474941004850LLU,11235582092889474423LLU}),jule::Array<jule::U64,2>({2493940825248868159LLU,14044477616111843029LLU}),jule::Array<jule::U64,2>({7729112049988473103LLU,17555597020139803786LLU}),jule::Array<jule::U64,2>({9442381049670183593LLU,10972248137587377366LLU}),jule::Array<jule::U64,2>({2579604275232953683LLU,13715310171984221708LLU}),jule::Array<jule::U64,2>({3224505344041192104LLU,17144137714980277135LLU}),jule::Array<jule::U64,2>({8932844867666826921LLU,10715086071862673209LLU}),jule::Array<jule::U64,2>({15777742103010921555LLU,13393857589828341511LLU}),jule::Array<jule::U64,2>({15110491610336264040LLU,16742321987285426889LLU}),jule::Array<jule::U64,2>({2526528228819083169LLU,10463951242053391806LLU}),jule::Array<jule::U64,2>({12381532322878629770LLU,13079939052566739757LLU}),jule::Array<jule::U64,2>({1641857348316123500LLU,16349923815708424697LLU}),jule::Array<jule::U64,2>({12555375888766046947LLU,10218702384817765435LLU}),jule::Array<jule::U64,2>({11082533842530170780LLU,12773377981022206794LLU}),jule::Array<jule::U64,2>({4629795266307937667LLU,15966722476277758493LLU}),jule::Array<jule::U64,2>({5199465050656154994LLU,9979201547673599058LLU}),jule::Array<jule::U64,2>({15722703350174969551LLU,12474001934591998822LLU}),jule::Array<jule::U64,2>({10430007150863936130LLU,15592502418239998528LLU}),jule::Array<jule::U64,2>({6518754469289960081LLU,9745314011399999080LLU}),jule::Array<jule::U64,2>({8148443086612450102LLU,12181642514249998850LLU}),jule::Array<jule::U64,2>({962181821410786819LLU,15227053142812498563LLU}),jule::Array<jule::U64,2>({16742264702877599426LLU,9516908214257811601LLU}),jule::Array<jule::U64,2>({7092772823314835570LLU,11896135267822264502LLU}),jule::Array<jule::U64,2>({18089338065998320271LLU,14870169084777830627LLU}),jule::Array<jule::U64,2>({8999993282035256217LLU,9293855677986144142LLU}),jule::Array<jule::U64,2>({2026619565689294464LLU,11617319597482680178LLU}),jule::Array<jule::U64,2>({11756646493966393888LLU,14521649496853350222LLU}),jule::Array<jule::U64,2>({5472436080603216552LLU,18152061871066687778LLU}),jule::Array<jule::U64,2>({8031958568804398249LLU,11345038669416679861LLU}),jule::Array<jule::U64,2>({14651634229432885715LLU,14181298336770849826LLU}),jule::Array<jule::U64,2>({9091170749936331336LLU,17726622920963562283LLU}),jule::Array<jule::U64,2>({3376138709496513133LLU,11079139325602226427LLU}),jule::Array<jule::U64,2>({18055231442152805128LLU,13848924157002783033LLU}),jule::Array<jule::U64,2>({8733981247408842698LLU,17311155196253478792LLU}),jule::Array<jule::U64,2>({5458738279630526686LLU,10819471997658424245LLU}),jule::Array<jule::U64,2>({11435108867965546262LLU,13524339997073030306LLU}),jule::Array<jule::U64,2>({5070514048102157020LLU,16905424996341287883LLU}),jule::Array<jule::U64,2>({863228270850154185LLU,10565890622713304927LLU}),jule::Array<jule::U64,2>({14914093393844856443LLU,13207363278391631158LLU}),jule::Array<jule::U64,2>({9419244705451294746LLU,16509204097989538948LLU}),jule::Array<jule::U64,2>({15110399977761835024LLU,10318252561243461842LLU}),jule::Array<jule::U64,2>({9664627935347517973LLU,12897815701554327303LLU}),jule::Array<jule::U64,2>({7469098900757009562LLU,16122269626942909129LLU}),jule::Array<jule::U64,2>({16197401859041600736LLU,10076418516839318205LLU}),jule::Array<jule::U64,2>({6411694268519837208LLU,12595523146049147757LLU}),jule::Array<jule::U64,2>({12626303854077184414LLU,15744403932561434696LLU}),jule::Array<jule::U64,2>({7891439908798240259LLU,9840252457850896685LLU}),jule::Array<jule::U64,2>({14475985904425188227LLU,12300315572313620856LLU}),jule::Array<jule::U64,2>({18094982380531485284LLU,15375394465392026070LLU}),jule::Array<jule::U64,2>({6697677969404790399LLU,9609621540870016294LLU}),jule::Array<jule::U64,2>({17595469498610763806LLU,12012026926087520367LLU}),jule::Array<jule::U64,2>({17382650854836066854LLU,15015033657609400459LLU}),jule::Array<jule::U64,2>({8558313775058847832LLU,9384396036005875287LLU}),jule::Array<jule::U64,2>({6086206200396171886LLU,11730495045007344109LLU}),jule::Array<jule::U64,2>({12219443768922602761LLU,14663118806259180136LLU}),jule::Array<jule::U64,2>({15274304711153253452LLU,18328898507823975170LLU}),jule::Array<jule::U64,2>({14158126462898171311LLU,11455561567389984481LLU}),jule::Array<jule::U64,2>({3862600023340550427LLU,14319451959237480602LLU}),jule::Array<jule::U64,2>({14051622066030463842LLU,17899314949046850752LLU}),jule::Array<jule::U64,2>({8782263791269039901LLU,11187071843154281720LLU}),jule::Array<jule::U64,2>({10977829739086299876LLU,13983839803942852150LLU}),jule::Array<jule::U64,2>({4498915137003099037LLU,17479799754928565188LLU}),jule::Array<jule::U64,2>({12035193997481712706LLU,10924874846830353242LLU}),jule::Array<jule::U64,2>({5820620459997365075LLU,13656093558537941553LLU}),jule::Array<jule::U64,2>({11887461593424094248LLU,17070116948172426941LLU}),jule::Array<jule::U64,2>({9735506505103752857LLU,10668823092607766838LLU}),jule::Array<jule::U64,2>({2946011094524915263LLU,13336028865759708548LLU}),jule::Array<jule::U64,2>({3682513868156144079LLU,16670036082199635685LLU}),jule::Array<jule::U64,2>({4607414176811284001LLU,10418772551374772303LLU}),jule::Array<jule::U64,2>({1147581702586717097LLU,13023465689218465379LLU}),jule::Array<jule::U64,2>({15269535183515560084LLU,16279332111523081723LLU}),jule::Array<jule::U64,2>({7237616480483531100LLU,10174582569701926077LLU}),jule::Array<jule::U64,2>({13658706619031801779LLU,12718228212127407596LLU}),jule::Array<jule::U64,2>({17073383273789752224LLU,15897785265159259495LLU}),jule::Array<jule::U64,2>({17588393573759676996LLU,9936115790724537184LLU}),jule::Array<jule::U64,2>({3538747893490044629LLU,12420144738405671481LLU}),jule::Array<jule::U64,2>({9035120885289943691LLU,15525180923007089351LLU}),jule::Array<jule::U64,2>({12564479580947296663LLU,9703238076879430844LLU}),jule::Array<jule::U64,2>({15705599476184120828LLU,12129047596099288555LLU}),jule::Array<jule::U64,2>({15020313326802763131LLU,15161309495124110694LLU}),jule::Array<jule::U64,2>({4776009810824339053LLU,9475818434452569184LLU}),jule::Array<jule::U64,2>({5970012263530423816LLU,11844773043065711480LLU}),jule::Array<jule::U64,2>({7462515329413029771LLU,14805966303832139350LLU}),jule::Array<jule::U64,2>({52386062455755702LLU,9253728939895087094LLU}),jule::Array<jule::U64,2>({9288854614924470436LLU,11567161174868858867LLU}),jule::Array<jule::U64,2>({6999382250228200141LLU,14458951468586073584LLU}),jule::Array<jule::U64,2>({8749227812785250177LLU,18073689335732591980LLU}),jule::Array<jule::U64,2>({14691639419845557168LLU,11296055834832869987LLU}),jule::Array<jule::U64,2>({13752863256379558556LLU,14120069793541087484LLU}),jule::Array<jule::U64,2>({17191079070474448196LLU,17650087241926359355LLU}),jule::Array<jule::U64,2>({8438581409832836170LLU,11031304526203974597LLU}),jule::Array<jule::U64,2>({15159912780718433117LLU,13789130657754968246LLU}),jule::Array<jule::U64,2>({9726518939043265588LLU,17236413322193710308LLU}),jule::Array<jule::U64,2>({15302446373756816800LLU,10772758326371068942LLU}),jule::Array<jule::U64,2>({9904685930341245193LLU,13465947907963836178LLU}),jule::Array<jule::U64,2>({3157485376071780683LLU,16832434884954795223LLU}),jule::Array<jule::U64,2>({8890957387685944783LLU,10520271803096747014LLU}),jule::Array<jule::U64,2>({1890324697752655170LLU,13150339753870933768LLU}),jule::Array<jule::U64,2>({2362905872190818963LLU,16437924692338667210LLU}),jule::Array<jule::U64,2>({6088502188546649756LLU,10273702932711667006LLU}),jule::Array<jule::U64,2>({16833999772538088003LLU,12842128665889583757LLU}),jule::Array<jule::U64,2>({7207441660390446292LLU,16052660832361979697LLU}),jule::Array<jule::U64,2>({16033866083812498692LLU,10032913020226237310LLU}),jule::Array<jule::U64,2>({10818960567910847557LLU,12541141275282796638LLU}),jule::Array<jule::U64,2>({4300328673033783639LLU,15676426594103495798LLU}),jule::Array<jule::U64,2>({16522763475928278486LLU,9797766621314684873LLU}),jule::Array<jule::U64,2>({6818396289628184396LLU,12247208276643356092LLU}),jule::Array<jule::U64,2>({8522995362035230495LLU,15309010345804195115LLU}),jule::Array<jule::U64,2>({3021029092058325107LLU,9568131466127621947LLU}),jule::Array<jule::U64,2>({17611344420355070096LLU,11960164332659527433LLU}),jule::Array<jule::U64,2>({8179122470161673908LLU,14950205415824409292LLU}),jule::Array<jule::U64,2>({14335323580705822000LLU,9343878384890255807LLU}),jule::Array<jule::U64,2>({13307468457454889596LLU,11679847981112819759LLU}),jule::Array<jule::U64,2>({12022649553391224092LLU,14599809976391024699LLU}),jule::Array<jule::U64,2>({10416625923311642211LLU,18249762470488780874LLU}),jule::Array<jule::U64,2>({11122077220497164286LLU,11406101544055488046LLU}),jule::Array<jule::U64,2>({4679224488766679549LLU,14257626930069360058LLU}),jule::Array<jule::U64,2>({15072402647813125244LLU,17822033662586700072LLU}),jule::Array<jule::U64,2>({9420251654883203278LLU,11138771039116687545LLU}),jule::Array<jule::U64,2>({16387000587031392001LLU,13923463798895859431LLU}),jule::Array<jule::U64,2>({15872064715361852097LLU,17404329748619824289LLU}),jule::Array<jule::U64,2>({3002511419460075705LLU,10877706092887390181LLU}),jule::Array<jule::U64,2>({8364825292752482535LLU,13597132616109237726LLU}),jule::Array<jule::U64,2>({1232659579085827361LLU,16996415770136547158LLU}),jule::Array<jule::U64,2>({14605470292210805812LLU,10622759856335341973LLU}),jule::Array<jule::U64,2>({4421779809981343554LLU,13278449820419177467LLU}),jule::Array<jule::U64,2>({915538744049291538LLU,16598062275523971834LLU}),jule::Array<jule::U64,2>({5183897733458195115LLU,10373788922202482396LLU}),jule::Array<jule::U64,2>({6479872166822743894LLU,12967236152753102995LLU}),jule::Array<jule::U64,2>({3488154190101041964LLU,16209045190941378744LLU}),jule::Array<jule::U64,2>({2180096368813151227LLU,10130653244338361715LLU}),jule::Array<jule::U64,2>({16560178516298602746LLU,12663316555422952143LLU}),jule::Array<jule::U64,2>({16088537126945865529LLU,15829145694278690179LLU}),jule::Array<jule::U64,2>({7749492695127472003LLU,9893216058924181362LLU}),jule::Array<jule::U64,2>({463493832054564196LLU,12366520073655226703LLU}),jule::Array<jule::U64,2>({14414425345350368957LLU,15458150092069033378LLU}),jule::Array<jule::U64,2>({13620701859271368502LLU,9661343807543145861LLU}),jule::Array<jule::U64,2>({3190819268807046916LLU,12076679759428932327LLU}),jule::Array<jule::U64,2>({17823582141290972357LLU,15095849699286165408LLU}),jule::Array<jule::U64,2>({11139738838306857723LLU,9434906062053853380LLU}),jule::Array<jule::U64,2>({13924673547883572154LLU,11793632577567316725LLU}),jule::Array<jule::U64,2>({3570783879572301480LLU,14742040721959145907LLU}),jule::Array<jule::U64,2>({18298537904747540562LLU,18427550902448932383LLU}),jule::Array<jule::U64,2>({18354115218108294707LLU,11517219314030582739LLU}),jule::Array<jule::U64,2>({18330958004207980480LLU,14396524142538228424LLU}),jule::Array<jule::U64,2>({4466953431550423984LLU,17995655178172785531LLU}),jule::Array<jule::U64,2>({486002885505321038LLU,11247284486357990957LLU}),jule::Array<jule::U64,2>({5219189625309039202LLU,14059105607947488696LLU}),jule::Array<jule::U64,2>({6523987031636299002LLU,17573882009934360870LLU}),jule::Array<jule::U64,2>({17912549950054850588LLU,10983676256208975543LLU}),jule::Array<jule::U64,2>({17779001419141175331LLU,13729595320261219429LLU}),jule::Array<jule::U64,2>({8388693718644305452LLU,17161994150326524287LLU}),jule::Array<jule::U64,2>({12160462601793772764LLU,10726246343954077679LLU}),jule::Array<jule::U64,2>({10588892233814828051LLU,13407807929942597099LLU}),jule::Array<jule::U64,2>({8624429273841147159LLU,16759759912428246374LLU}),jule::Array<jule::U64,2>({778582277723329070LLU,10474849945267653984LLU}),jule::Array<jule::U64,2>({973227847154161338LLU,13093562431584567480LLU}),jule::Array<jule::U64,2>({1216534808942701673LLU,16366953039480709350LLU}),jule::Array<jule::U64,2>({14595392310871352257LLU,10229345649675443343LLU}),jule::Array<jule::U64,2>({13632554370161802418LLU,12786682062094304179LLU}),jule::Array<jule::U64,2>({12429006944274865118LLU,15983352577617880224LLU}),jule::Array<jule::U64,2>({7768129340171790699LLU,9989595361011175140LLU}),jule::Array<jule::U64,2>({9710161675214738374LLU,12486994201263968925LLU}),jule::Array<jule::U64,2>({16749388112445810871LLU,15608742751579961156LLU}),jule::Array<jule::U64,2>({1244995533423855986LLU,9755464219737475723LLU}),jule::Array<jule::U64,2>({15391302472061983695LLU,12194330274671844653LLU}),jule::Array<jule::U64,2>({5404070034795315907LLU,15242912843339805817LLU}),jule::Array<jule::U64,2>({14906758817815542202LLU,9526820527087378635LLU}),jule::Array<jule::U64,2>({14021762503842039848LLU,11908525658859223294LLU}),jule::Array<jule::U64,2>({8303831092947774002LLU,14885657073574029118LLU}),jule::Array<jule::U64,2>({578208414664970847LLU,9303535670983768199LLU}),jule::Array<jule::U64,2>({14557818573613377271LLU,11629419588729710248LLU}),jule::Array<jule::U64,2>({18197273217016721589LLU,14536774485912137810LLU}),jule::Array<jule::U64,2>({13523219484416126178LLU,18170968107390172263LLU}),jule::Array<jule::U64,2>({15369541205401160717LLU,11356855067118857664LLU}),jule::Array<jule::U64,2>({765182433041899281LLU,14196068833898572081LLU}),jule::Array<jule::U64,2>({5568164059729762005LLU,17745086042373215101LLU}),jule::Array<jule::U64,2>({5785945546544795205LLU,11090678776483259438LLU}),jule::Array<jule::U64,2>({16455803970035769814LLU,13863348470604074297LLU}),jule::Array<jule::U64,2>({6734696907262548556LLU,17329185588255092872LLU}),jule::Array<jule::U64,2>({4209185567039092847LLU,10830740992659433045LLU}),jule::Array<jule::U64,2>({9873167977226253963LLU,13538426240824291306LLU}),jule::Array<jule::U64,2>({3118087934678041646LLU,16923032801030364133LLU}),jule::Array<jule::U64,2>({4254647968387469981LLU,10576895500643977583LLU}),jule::Array<jule::U64,2>({706623942056949572LLU,13221119375804971979LLU}),jule::Array<jule::U64,2>({14718337982853350677LLU,16526399219756214973LLU}),jule::Array<jule::U64,2>({11504804248497038125LLU,10328999512347634358LLU}),jule::Array<jule::U64,2>({5157633273766521849LLU,12911249390434542948LLU}),jule::Array<jule::U64,2>({6447041592208152311LLU,16139061738043178685LLU}),jule::Array<jule::U64,2>({6335244004343789146LLU,10086913586276986678LLU}),jule::Array<jule::U64,2>({17142427042284512241LLU,12608641982846233347LLU}),jule::Array<jule::U64,2>({16816347784428252397LLU,15760802478557791684LLU}),jule::Array<jule::U64,2>({1286845328412881940LLU,9850501549098619803LLU}),jule::Array<jule::U64,2>({15443614715798266137LLU,12313126936373274753LLU}),jule::Array<jule::U64,2>({5469460339465668959LLU,15391408670466593442LLU}),jule::Array<jule::U64,2>({8030098730593431003LLU,9619630419041620901LLU}),jule::Array<jule::U64,2>({14649309431669176658LLU,12024538023802026126LLU}),jule::Array<jule::U64,2>({9088264752731695015LLU,15030672529752532658LLU}),jule::Array<jule::U64,2>({10291851488884697288LLU,9394170331095332911LLU}),jule::Array<jule::U64,2>({8253128342678483706LLU,11742712913869166139LLU}),jule::Array<jule::U64,2>({5704724409920716729LLU,14678391142336457674LLU}),jule::Array<jule::U64,2>({16354277549255671720LLU,18347988927920572092LLU}),jule::Array<jule::U64,2>({998051431430019017LLU,11467493079950357558LLU}),jule::Array<jule::U64,2>({10470936326142299579LLU,14334366349937946947LLU}),jule::Array<jule::U64,2>({8476984389250486570LLU,17917957937422433684LLU}),jule::Array<jule::U64,2>({14521487280136329914LLU,11198723710889021052LLU}),jule::Array<jule::U64,2>({18151859100170412392LLU,13998404638611276315LLU}),jule::Array<jule::U64,2>({18078137856785627587LLU,17498005798264095394LLU}),jule::Array<jule::U64,2>({15910522178918405146LLU,10936253623915059621LLU}),jule::Array<jule::U64,2>({6053094668365842720LLU,13670317029893824527LLU}),jule::Array<jule::U64,2>({2954682317029915496LLU,17087896287367280659LLU}),jule::Array<jule::U64,2>({17987577512639554849LLU,10679935179604550411LLU}),jule::Array<jule::U64,2>({17872785872372055657LLU,13349918974505688014LLU}),jule::Array<jule::U64,2>({13117610303610293764LLU,16687398718132110018LLU}),jule::Array<jule::U64,2>({12810192458183821506LLU,10429624198832568761LLU}),jule::Array<jule::U64,2>({2177682517447613171LLU,13037030248540710952LLU}),jule::Array<jule::U64,2>({2722103146809516464LLU,16296287810675888690LLU}),jule::Array<jule::U64,2>({6313000485183335694LLU,10185179881672430431LLU}),jule::Array<jule::U64,2>({3279564588051781713LLU,12731474852090538039LLU}),jule::Array<jule::U64,2>({17934513790346890853LLU,15914343565113172548LLU}),jule::Array<jule::U64,2>({1985699082112030975LLU,9946464728195732843LLU}),jule::Array<jule::U64,2>({16317181907922202431LLU,12433080910244666053LLU}),jule::Array<jule::U64,2>({6561419329620589327LLU,15541351137805832567LLU}),jule::Array<jule::U64,2>({11018416108653950185LLU,9713344461128645354LLU}),jule::Array<jule::U64,2>({4549648098962661924LLU,12141680576410806693LLU}),jule::Array<jule::U64,2>({10298746142130715309LLU,15177100720513508366LLU}),jule::Array<jule::U64,2>({1825030320404309164LLU,9485687950320942729LLU}),jule::Array<jule::U64,2>({6892973918932774359LLU,11857109937901178411LLU}),jule::Array<jule::U64,2>({4004531380238580045LLU,14821387422376473014LLU}),jule::Array<jule::U64,2>({16337890167931276240LLU,9263367138985295633LLU}),jule::Array<jule::U64,2>({6587304654631931588LLU,11579208923731619542LLU}),jule::Array<jule::U64,2>({17457502855144690293LLU,14474011154664524427LLU}),jule::Array<jule::U64,2>({17210192550503474962LLU,18092513943330655534LLU}),jule::Array<jule::U64,2>({6144684325637283947LLU,11307821214581659709LLU}),jule::Array<jule::U64,2>({12292541425473992838LLU,14134776518227074636LLU}),jule::Array<jule::U64,2>({15365676781842491048LLU,17668470647783843295LLU}),jule::Array<jule::U64,2>({16521077016292638761LLU,11042794154864902059LLU}),jule::Array<jule::U64,2>({16039660251938410547LLU,13803492693581127574LLU}),jule::Array<jule::U64,2>({10826203278068237376LLU,17254365866976409468LLU}),jule::Array<jule::U64,2>({15989749085647424168LLU,10783978666860255917LLU}),jule::Array<jule::U64,2>({6152128301777116498LLU,13479973333575319897LLU}),jule::Array<jule::U64,2>({12301846395648783526LLU,16849966666969149871LLU}),jule::Array<jule::U64,2>({14606183024921571560LLU,10531229166855718669LLU}),jule::Array<jule::U64,2>({4422670725869800738LLU,13164036458569648337LLU}),jule::Array<jule::U64,2>({10140024425764638826LLU,16455045573212060421LLU}),jule::Array<jule::U64,2>({8643358275316593218LLU,10284403483257537763LLU}),jule::Array<jule::U64,2>({6192511825718353619LLU,12855504354071922204LLU}),jule::Array<jule::U64,2>({7740639782147942024LLU,16069380442589902755LLU}),jule::Array<jule::U64,2>({2532056854628769813LLU,10043362776618689222LLU}),jule::Array<jule::U64,2>({12388443105140738074LLU,12554203470773361527LLU}),jule::Array<jule::U64,2>({10873867862998534689LLU,15692754338466701909LLU}),jule::Array<jule::U64,2>({9102010423587778132LLU,9807971461541688693LLU}),jule::Array<jule::U64,2>({15989199047912110569LLU,12259964326927110866LLU}),jule::Array<jule::U64,2>({10763126773035362404LLU,15324955408658888583LLU}),jule::Array<jule::U64,2>({13644483260788183358LLU,9578097130411805364LLU}),jule::Array<jule::U64,2>({17055604075985229198LLU,11972621413014756705LLU}),jule::Array<jule::U64,2>({7484447039699372786LLU,14965776766268445882LLU}),jule::Array<jule::U64,2>({9289465418239495895LLU,9353610478917778676LLU}),jule::Array<jule::U64,2>({11611831772799369869LLU,11692013098647223345LLU}),jule::Array<jule::U64,2>({679731660717048624LLU,14615016373309029182LLU}),jule::Array<jule::U64,2>({10073036612751086588LLU,18268770466636286477LLU}),jule::Array<jule::U64,2>({8601490892183123069LLU,11417981541647679048LLU}),jule::Array<jule::U64,2>({10751863615228903837LLU,14272476927059598810LLU}),jule::Array<jule::U64,2>({4216457482181353988LLU,17840596158824498513LLU}),jule::Array<jule::U64,2>({14164500972431816002LLU,11150372599265311570LLU}),jule::Array<jule::U64,2>({8482254178684994195LLU,13937965749081639463LLU}),jule::Array<jule::U64,2>({5991131704928854840LLU,17422457186352049329LLU}),jule::Array<jule::U64,2>({15273672361649004035LLU,10889035741470030830LLU}),jule::Array<jule::U64,2>({9868718415206479236LLU,13611294676837538538LLU}),jule::Array<jule::U64,2>({3112525982153323237LLU,17014118346046923173LLU}),jule::Array<jule::U64,2>({4251171748059520975LLU,10633823966279326983LLU}),jule::Array<jule::U64,2>({702278666647013314LLU,13292279957849158729LLU}),jule::Array<jule::U64,2>({5489534351736154547LLU,16615349947311448411LLU}),jule::Array<jule::U64,2>({1125115960621402640LLU,10384593717069655257LLU}),jule::Array<jule::U64,2>({6018080969204141204LLU,12980742146337069071LLU}),jule::Array<jule::U64,2>({2910915193077788601LLU,16225927682921336339LLU}),jule::Array<jule::U64,2>({17960223060169475539LLU,10141204801825835211LLU}),jule::Array<jule::U64,2>({17838592806784456520LLU,12676506002282294014LLU}),jule::Array<jule::U64,2>({13074868971625794843LLU,15845632502852867518LLU}),jule::Array<jule::U64,2>({3560107088838733872LLU,9903520314283042199LLU}),jule::Array<jule::U64,2>({18285191916330581053LLU,12379400392853802748LLU}),jule::Array<jule::U64,2>({4409745821703674700LLU,15474250491067253436LLU}),jule::Array<jule::U64,2>({11979463175419572495LLU,9671406556917033397LLU}),jule::Array<jule::U64,2>({1139270913992301907LLU,12089258196146291747LLU}),jule::Array<jule::U64,2>({15259146697772541096LLU,15111572745182864683LLU}),jule::Array<jule::U64,2>({7231123676894144233LLU,9444732965739290427LLU}),jule::Array<jule::U64,2>({4427218577690292387LLU,11805916207174113034LLU}),jule::Array<jule::U64,2>({14757395258967641292LLU,14757395258967641292LLU}),jule::Array<jule::U64,2>({0LLU,9223372036854775808LLU}),jule::Array<jule::U64,2>({0LLU,11529215046068469760LLU}),jule::Array<jule::U64,2>({0LLU,14411518807585587200LLU}),jule::Array<jule::U64,2>({0LLU,18014398509481984000LLU}),jule::Array<jule::U64,2>({0LLU,11258999068426240000LLU}),jule::Array<jule::U64,2>({0LLU,14073748835532800000LLU}),jule::Array<jule::U64,2>({0LLU,17592186044416000000LLU}),jule::Array<jule::U64,2>({0LLU,10995116277760000000LLU}),jule::Array<jule::U64,2>({0LLU,13743895347200000000LLU}),jule::Array<jule::U64,2>({0LLU,17179869184000000000LLU}),jule::Array<jule::U64,2>({0LLU,10737418240000000000LLU}),jule::Array<jule::U64,2>({0LLU,13421772800000000000LLU}),jule::Array<jule::U64,2>({0LLU,16777216000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10485760000000000000LLU}),jule::Array<jule::U64,2>({0LLU,13107200000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16384000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10240000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12800000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,16000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,10000000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12500000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,15625000000000000000LLU}),jule::Array<jule::U64,2>({0LLU,9765625000000000000LLU}),jule::Array<jule::U64,2>({0LLU,12207031250000000000LLU}),jule::Array<jule::U64,2>({0LLU,15258789062500000000LLU}),jule::Array<jule::U64,2>({0LLU,9536743164062500000LLU}),jule::Array<jule::U64,2>({0LLU,11920928955078125000LLU}),jule::Array<jule::U64,2>({0LLU,14901161193847656250LLU}),jule::Array<jule::U64,2>({4611686018427387904LLU,9313225746154785156LLU}),jule::Array<jule::U64,2>({5764607523034234880LLU,11641532182693481445LLU}),jule::Array<jule::U64,2>({11817445422220181504LLU,14551915228366851806LLU}),jule::Array<jule::U64,2>({5548434740920451072LLU,18189894035458564758LLU}),jule::Array<jule::U64,2>({17302829768357445632LLU,11368683772161602973LLU}),jule::Array<jule::U64,2>({7793479155164643328LLU,14210854715202003717LLU}),jule::Array<jule::U64,2>({14353534962383192064LLU,17763568394002504646LLU}),jule::Array<jule::U64,2>({4359273333062107136LLU,11102230246251565404LLU}),jule::Array<jule::U64,2>({5449091666327633920LLU,13877787807814456755LLU}),jule::Array<jule::U64,2>({2199678564482154496LLU,17347234759768070944LLU}),jule::Array<jule::U64,2>({1374799102801346560LLU,10842021724855044340LLU}),jule::Array<jule::U64,2>({1718498878501683200LLU,13552527156068805425LLU}),jule::Array<jule::U64,2>({6759809616554491904LLU,16940658945086006781LLU}),jule::Array<jule::U64,2>({6530724019560251392LLU,10587911840678754238LLU}),jule::Array<jule::U64,2>({17386777061305090048LLU,13234889800848442797LLU}),jule::Array<jule::U64,2>({7898413271349198848LLU,16543612251060553497LLU}),jule::Array<jule::U64,2>({16465723340661719040LLU,10339757656912845935LLU}),jule::Array<jule::U64,2>({15970468157399760896LLU,12924697071141057419LLU}),jule::Array<jule::U64,2>({15351399178322313216LLU,16155871338926321774LLU}),jule::Array<jule::U64,2>({4982938468024057856LLU,10097419586828951109LLU}),jule::Array<jule::U64,2>({10840359103457460224LLU,12621774483536188886LLU}),jule::Array<jule::U64,2>({4327076842467049472LLU,15777218104420236108LLU}),jule::Array<jule::U64,2>({11927795063396681728LLU,9860761315262647567LLU}),jule::Array<jule::U64,2>({10298057810818464256LLU,12325951644078309459LLU}),jule::Array<jule::U64,2>({8260886245095692416LLU,15407439555097886824LLU}),jule::Array<jule::U64,2>({5163053903184807760LLU,9629649721936179265LLU}),jule::Array<jule::U64,2>({11065503397408397604LLU,12037062152420224081LLU}),jule::Array<jule::U64,2>({18443565265187884909LLU,15046327690525280101LLU}),jule::Array<jule::U64,2>({13833071299956122020LLU,9403954806578300063LLU}),jule::Array<jule::U64,2>({12679653106517764621LLU,11754943508222875079LLU}),jule::Array<jule::U64,2>({11237880364719817872LLU,14693679385278593849LLU}),jule::Array<jule::U64,2>({212292400617608628LLU,18367099231598242312LLU}),jule::Array<jule::U64,2>({132682750386005392LLU,11479437019748901445LLU}),jule::Array<jule::U64,2>({4777539456409894645LLU,14349296274686126806LLU}),jule::Array<jule::U64,2>({15195296357367144114LLU,17936620343357658507LLU}),jule::Array<jule::U64,2>({7191217214140771119LLU,11210387714598536567LLU}),jule::Array<jule::U64,2>({4377335499248575995LLU,14012984643248170709LLU}),jule::Array<jule::U64,2>({10083355392488107898LLU,17516230804060213386LLU}),jule::Array<jule::U64,2>({10913783138732455340LLU,10947644252537633366LLU}),jule::Array<jule::U64,2>({4418856886560793367LLU,13684555315672041708LLU}),jule::Array<jule::U64,2>({5523571108200991709LLU,17105694144590052135LLU}),jule::Array<jule::U64,2>({10369760970266701674LLU,10691058840368782584LLU}),jule::Array<jule::U64,2>({12962201212833377092LLU,13363823550460978230LLU}),jule::Array<jule::U64,2>({6979379479186945558LLU,16704779438076222788LLU}),jule::Array<jule::U64,2>({13585484211346616781LLU,10440487148797639242LLU}),jule::Array<jule::U64,2>({7758483227328495169LLU,13050608935997049053LLU}),jule::Array<jule::U64,2>({14309790052588006865LLU,16313261169996311316LLU}),jule::Array<jule::U64,2>({18166990819722280098LLU,10195788231247694572LLU}),jule::Array<jule::U64,2>({4261994450943298507LLU,12744735289059618216LLU}),jule::Array<jule::U64,2>({5327493063679123134LLU,15930919111324522770LLU}),jule::Array<jule::U64,2>({7941369183226839863LLU,9956824444577826731LLU}),jule::Array<jule::U64,2>({5315025460606161924LLU,12446030555722283414LLU}),jule::Array<jule::U64,2>({15867153862612478214LLU,15557538194652854267LLU}),jule::Array<jule::U64,2>({7611128154919104931LLU,9723461371658033917LLU}),jule::Array<jule::U64,2>({14125596212076269068LLU,12154326714572542396LLU}),jule::Array<jule::U64,2>({17656995265095336336LLU,15192908393215677995LLU}),jule::Array<jule::U64,2>({8729779031470891258LLU,9495567745759798747LLU}),jule::Array<jule::U64,2>({6300537770911226168LLU,11869459682199748434LLU}),jule::Array<jule::U64,2>({17099044250493808518LLU,14836824602749685542LLU}),jule::Array<jule::U64,2>({6075216638131242420LLU,9273015376718553464LLU}),jule::Array<jule::U64,2>({7594020797664053025LLU,11591269220898191830LLU}),jule::Array<jule::U64,2>({269153960225290473LLU,14489086526122739788LLU}),jule::Array<jule::U64,2>({336442450281613091LLU,18111358157653424735LLU}),jule::Array<jule::U64,2>({7127805559067090038LLU,11319598848533390459LLU}),jule::Array<jule::U64,2>({4298070930406474644LLU,14149498560666738074LLU}),jule::Array<jule::U64,2>({14595960699862869113LLU,17686873200833422592LLU}),jule::Array<jule::U64,2>({9122475437414293195LLU,11054295750520889120LLU}),jule::Array<jule::U64,2>({11403094296767866494LLU,13817869688151111400LLU}),jule::Array<jule::U64,2>({14253867870959833118LLU,17272337110188889250LLU}),jule::Array<jule::U64,2>({13520353437777283602LLU,10795210693868055781LLU}),jule::Array<jule::U64,2>({3065383741939440791LLU,13494013367335069727LLU}),jule::Array<jule::U64,2>({17666787732706464701LLU,16867516709168837158LLU}),jule::Array<jule::U64,2>({6430056314514152534LLU,10542197943230523224LLU}),jule::Array<jule::U64,2>({8037570393142690668LLU,13177747429038154030LLU}),jule::Array<jule::U64,2>({823590954573587527LLU,16472184286297692538LLU}),jule::Array<jule::U64,2>({5126430365035880108LLU,10295115178936057836LLU}),jule::Array<jule::U64,2>({6408037956294850135LLU,12868893973670072295LLU}),jule::Array<jule::U64,2>({3398361426941174765LLU,16086117467087590369LLU}),jule::Array<jule::U64,2>({13653190937906703988LLU,10053823416929743980LLU}),jule::Array<jule::U64,2>({17066488672383379985LLU,12567279271162179975LLU}),jule::Array<jule::U64,2>({16721424822051837077LLU,15709099088952724969LLU}),jule::Array<jule::U64,2>({3533361486141316317LLU,9818186930595453106LLU}),jule::Array<jule::U64,2>({13640073894531421205LLU,12272733663244316382LLU}),jule::Array<jule::U64,2>({7826720331309500698LLU,15340917079055395478LLU}),jule::Array<jule::U64,2>({280014188641050032LLU,9588073174409622174LLU}),jule::Array<jule::U64,2>({9573389772656088348LLU,11985091468012027717LLU}),jule::Array<jule::U64,2>({16578423234247498339LLU,14981364335015034646LLU}),jule::Array<jule::U64,2>({5749828502977298558LLU,9363352709384396654LLU}),jule::Array<jule::U64,2>({16410657665576399005LLU,11704190886730495817LLU}),jule::Array<jule::U64,2>({6678264026688335045LLU,14630238608413119772LLU}),jule::Array<jule::U64,2>({8347830033360418806LLU,18287798260516399715LLU}),jule::Array<jule::U64,2>({2911550761636567802LLU,11429873912822749822LLU}),jule::Array<jule::U64,2>({12862810488900485560LLU,14287342391028437277LLU}),jule::Array<jule::U64,2>({2243455055843443238LLU,17859177988785546597LLU}),jule::Array<jule::U64,2>({3708002419115845976LLU,11161986242990966623LLU}),jule::Array<jule::U64,2>({23317005467419566LLU,13952482803738708279LLU}),jule::Array<jule::U64,2>({13864204312116438170LLU,17440603504673385348LLU}),jule::Array<jule::U64,2>({17888499731927549664LLU,10900377190420865842LLU}),jule::Array<jule::U64,2>({13137252628054661272LLU,13625471488026082303LLU}),jule::Array<jule::U64,2>({11809879766640938686LLU,17031839360032602879LLU}),jule::Array<jule::U64,2>({14298703881791668535LLU,10644899600020376799LLU}),jule::Array<jule::U64,2>({13261693833812197764LLU,13306124500025470999LLU}),jule::Array<jule::U64,2>({11965431273837859301LLU,16632655625031838749LLU}),jule::Array<jule::U64,2>({9784237555362356015LLU,10395409765644899218LLU}),jule::Array<jule::U64,2>({3006924907348169211LLU,12994262207056124023LLU}),jule::Array<jule::U64,2>({17593714189467375226LLU,16242827758820155028LLU}),jule::Array<jule::U64,2>({1772699331562333708LLU,10151767349262596893LLU}),jule::Array<jule::U64,2>({6827560182880305039LLU,12689709186578246116LLU}),jule::Array<jule::U64,2>({8534450228600381299LLU,15862136483222807645LLU}),jule::Array<jule::U64,2>({7639874402088932264LLU,9913835302014254778LLU}),jule::Array<jule::U64,2>({326470965756389522LLU,12392294127517818473LLU}),jule::Array<jule::U64,2>({5019774725622874806LLU,15490367659397273091LLU}),jule::Array<jule::U64,2>({831516194300602802LLU,9681479787123295682LLU}),jule::Array<jule::U64,2>({10262767279730529310LLU,12101849733904119602LLU}),jule::Array<jule::U64,2>({3605087062808385830LLU,15127312167380149503LLU}),jule::Array<jule::U64,2>({9170708441896323000LLU,9454570104612593439LLU}),jule::Array<jule::U64,2>({6851699533943015846LLU,11818212630765741799LLU}),jule::Array<jule::U64,2>({3952938399001381903LLU,14772765788457177249LLU}),jule::Array<jule::U64,2>({13999801545444333449LLU,9232978617785735780LLU}),jule::Array<jule::U64,2>({17499751931805416812LLU,11541223272232169725LLU}),jule::Array<jule::U64,2>({8039631859474607303LLU,14426529090290212157LLU}),jule::Array<jule::U64,2>({14661225842770647033LLU,18033161362862765196LLU}),jule::Array<jule::U64,2>({18386638188586430203LLU,11270725851789228247LLU}),jule::Array<jule::U64,2>({18371611717305649850LLU,14088407314736535309LLU}),jule::Array<jule::U64,2>({9129456591349898601LLU,17610509143420669137LLU}),jule::Array<jule::U64,2>({17235125415662156385LLU,11006568214637918210LLU}),jule::Array<jule::U64,2>({12320534732722919674LLU,13758210268297397763LLU}),jule::Array<jule::U64,2>({10788982397476261688LLU,17197762835371747204LLU}),jule::Array<jule::U64,2>({15966486035277439363LLU,10748601772107342002LLU}),jule::Array<jule::U64,2>({10734735507242023396LLU,13435752215134177503LLU}),jule::Array<jule::U64,2>({8806733365625141341LLU,16794690268917721879LLU}),jule::Array<jule::U64,2>({12421737381156795194LLU,10496681418073576174LLU}),jule::Array<jule::U64,2>({6303799689591218185LLU,13120851772591970218LLU}),jule::Array<jule::U64,2>({17103121648843798539LLU,16401064715739962772LLU}),jule::Array<jule::U64,2>({1466078993672598279LLU,10250665447337476733LLU}),jule::Array<jule::U64,2>({6444284760518135752LLU,12813331809171845916LLU}),jule::Array<jule::U64,2>({8055355950647669691LLU,16016664761464807395LLU}),jule::Array<jule::U64,2>({2728754459941099604LLU,10010415475915504622LLU}),jule::Array<jule::U64,2>({12634315111781150314LLU,12513019344894380777LLU}),jule::Array<jule::U64,2>({1957835834444274180LLU,15641274181117975972LLU}),jule::Array<jule::U64,2>({10447019433382447170LLU,9775796363198734982LLU}),jule::Array<jule::U64,2>({3835402254873283155LLU,12219745453998418728LLU}),jule::Array<jule::U64,2>({4794252818591603944LLU,15274681817498023410LLU}),jule::Array<jule::U64,2>({7608094030047140369LLU,9546676135936264631LLU}),jule::Array<jule::U64,2>({4898431519131537557LLU,11933345169920330789LLU}),jule::Array<jule::U64,2>({10734725417341809851LLU,14916681462400413486LLU}),jule::Array<jule::U64,2>({2097517367411243253LLU,9322925914000258429LLU}),jule::Array<jule::U64,2>({7233582727691441970LLU,11653657392500323036LLU}),jule::Array<jule::U64,2>({9041978409614302462LLU,14567071740625403795LLU}),jule::Array<jule::U64,2>({6690786993590490174LLU,18208839675781754744LLU}),jule::Array<jule::U64,2>({4181741870994056359LLU,11380524797363596715LLU}),jule::Array<jule::U64,2>({615491320315182544LLU,14225655996704495894LLU}),jule::Array<jule::U64,2>({9992736187248753989LLU,17782069995880619867LLU}),jule::Array<jule::U64,2>({3939617107816777291LLU,11113793747425387417LLU}),jule::Array<jule::U64,2>({9536207403198359517LLU,13892242184281734271LLU}),jule::Array<jule::U64,2>({7308573235570561493LLU,17365302730352167839LLU}),jule::Array<jule::U64,2>({11485387299872682789LLU,10853314206470104899LLU}),jule::Array<jule::U64,2>({9745048106413465582LLU,13566642758087631124LLU}),jule::Array<jule::U64,2>({12181310133016831978LLU,16958303447609538905LLU}),jule::Array<jule::U64,2>({695789805494438130LLU,10598939654755961816LLU}),jule::Array<jule::U64,2>({869737256868047663LLU,13248674568444952270LLU}),jule::Array<jule::U64,2>({10310543607939835386LLU,16560843210556190337LLU}),jule::Array<jule::U64,2>({17973304801030866876LLU,10350527006597618960LLU}),jule::Array<jule::U64,2>({4019886927579031980LLU,12938158758247023701LLU}),jule::Array<jule::U64,2>({9636544677901177879LLU,16172698447808779626LLU}),jule::Array<jule::U64,2>({10634526442115624078LLU,10107936529880487266LLU}),jule::Array<jule::U64,2>({4069786015789754290LLU,12634920662350609083LLU}),jule::Array<jule::U64,2>({475546501309804958LLU,15793650827938261354LLU}),jule::Array<jule::U64,2>({4908902581746016003LLU,9871031767461413346LLU}),jule::Array<jule::U64,2>({15359500264037295811LLU,12338789709326766682LLU}),jule::Array<jule::U64,2>({9976003293191843956LLU,15423487136658458353LLU}),jule::Array<jule::U64,2>({17764217104313372233LLU,9639679460411536470LLU}),jule::Array<jule::U64,2>({12981899343536939483LLU,12049599325514420588LLU}),jule::Array<jule::U64,2>({16227374179421174354LLU,15061999156893025735LLU}),jule::Array<jule::U64,2>({17059637889779315827LLU,9413749473058141084LLU}),jule::Array<jule::U64,2>({2877803288514593168LLU,11767186841322676356LLU}),jule::Array<jule::U64,2>({3597254110643241460LLU,14708983551653345445LLU}),jule::Array<jule::U64,2>({9108253656731439729LLU,18386229439566681806LLU}),jule::Array<jule::U64,2>({1080972517029761926LLU,11491393399729176129LLU}),jule::Array<jule::U64,2>({5962901664714590312LLU,14364241749661470161LLU}),jule::Array<jule::U64,2>({12065313099320625794LLU,17955302187076837701LLU}),jule::Array<jule::U64,2>({9846663696289085073LLU,11222063866923023563LLU}),jule::Array<jule::U64,2>({7696643601933968437LLU,14027579833653779454LLU}),jule::Array<jule::U64,2>({397432465562684739LLU,17534474792067224318LLU}),jule::Array<jule::U64,2>({14083453346258841674LLU,10959046745042015198LLU}),jule::Array<jule::U64,2>({8380944645968776284LLU,13698808431302518998LLU}),jule::Array<jule::U64,2>({1252808770606194547LLU,17123510539128148748LLU}),jule::Array<jule::U64,2>({10006377518483647400LLU,10702194086955092967LLU}),jule::Array<jule::U64,2>({7896285879677171346LLU,13377742608693866209LLU}),jule::Array<jule::U64,2>({14482043368023852087LLU,16722178260867332761LLU}),jule::Array<jule::U64,2>({2133748077373825698LLU,10451361413042082976LLU}),jule::Array<jule::U64,2>({2667185096717282123LLU,13064201766302603720LLU}),jule::Array<jule::U64,2>({3333981370896602653LLU,16330252207878254650LLU}),jule::Array<jule::U64,2>({6695424375237764562LLU,10206407629923909156LLU}),jule::Array<jule::U64,2>({8369280469047205703LLU,12758009537404886445LLU}),jule::Array<jule::U64,2>({15073286604736395033LLU,15947511921756108056LLU}),jule::Array<jule::U64,2>({9420804127960246895LLU,9967194951097567535LLU}),jule::Array<jule::U64,2>({7164319141522920715LLU,12458993688871959419LLU}),jule::Array<jule::U64,2>({4343712908476262990LLU,15573742111089949274LLU}),jule::Array<jule::U64,2>({7326506586225052273LLU,9733588819431218296LLU}),jule::Array<jule::U64,2>({9158133232781315341LLU,12166986024289022870LLU}),jule::Array<jule::U64,2>({2224294504121868368LLU,15208732530361278588LLU}),jule::Array<jule::U64,2>({10613556101930943538LLU,9505457831475799117LLU}),jule::Array<jule::U64,2>({17878631145841067327LLU,11881822289344748896LLU}),jule::Array<jule::U64,2>({3901544858591782542LLU,14852277861680936121LLU}),jule::Array<jule::U64,2>({13967680582688333849LLU,9282673663550585075LLU}),jule::Array<jule::U64,2>({12847914709933029407LLU,11603342079438231344LLU}),jule::Array<jule::U64,2>({16059893387416286759LLU,14504177599297789180LLU}),jule::Array<jule::U64,2>({1628122660560806833LLU,18130221999122236476LLU}),jule::Array<jule::U64,2>({10240948699705280078LLU,11331388749451397797LLU}),jule::Array<jule::U64,2>({17412871893058988002LLU,14164235936814247246LLU}),jule::Array<jule::U64,2>({12542717829468959195LLU,17705294921017809058LLU}),jule::Array<jule::U64,2>({12450884661845487401LLU,11065809325636130661LLU}),jule::Array<jule::U64,2>({1728547772024695539LLU,13832261657045163327LLU}),jule::Array<jule::U64,2>({15995742770313033136LLU,17290327071306454158LLU}),jule::Array<jule::U64,2>({5385653213018257806LLU,10806454419566533849LLU}),jule::Array<jule::U64,2>({11343752534700210161LLU,13508068024458167311LLU}),jule::Array<jule::U64,2>({9568004649947874797LLU,16885085030572709139LLU}),jule::Array<jule::U64,2>({3674159897003727796LLU,10553178144107943212LLU}),jule::Array<jule::U64,2>({4592699871254659745LLU,13191472680134929015LLU}),jule::Array<jule::U64,2>({1129188820640936778LLU,16489340850168661269LLU}),jule::Array<jule::U64,2>({3011586022114279438LLU,10305838031355413293LLU}),jule::Array<jule::U64,2>({8376168546070237202LLU,12882297539194266616LLU}),jule::Array<jule::U64,2>({10470210682587796502LLU,16102871923992833270LLU}),jule::Array<jule::U64,2>({1932195658189984910LLU,10064294952495520794LLU}),jule::Array<jule::U64,2>({11638616609592256945LLU,12580368690619400992LLU}),jule::Array<jule::U64,2>({14548270761990321182LLU,15725460863274251240LLU}),jule::Array<jule::U64,2>({9092669226243950738LLU,9828413039546407025LLU}),jule::Array<jule::U64,2>({15977522551232326327LLU,12285516299433008781LLU}),jule::Array<jule::U64,2>({6136845133758244197LLU,15356895374291260977LLU}),jule::Array<jule::U64,2>({15364743254667372383LLU,9598059608932038110LLU}),jule::Array<jule::U64,2>({9982557031479439671LLU,11997574511165047638LLU}),jule::Array<jule::U64,2>({3254824252494523781LLU,14996968138956309548LLU}),jule::Array<jule::U64,2>({11257637194663853171LLU,9373105086847693467LLU}),jule::Array<jule::U64,2>({9460360474902428559LLU,11716381358559616834LLU}),jule::Array<jule::U64,2>({2602078556773259891LLU,14645476698199521043LLU}),jule::Array<jule::U64,2>({17087656251248738576LLU,18306845872749401303LLU}),jule::Array<jule::U64,2>({17597314184671543466LLU,11441778670468375814LLU}),jule::Array<jule::U64,2>({12773270693984653525LLU,14302223338085469768LLU}),jule::Array<jule::U64,2>({15966588367480816906LLU,17877779172606837210LLU}),jule::Array<jule::U64,2>({14590803748102898470LLU,11173611982879273256LLU}),jule::Array<jule::U64,2>({18238504685128623088LLU,13967014978599091570LLU}),jule::Array<jule::U64,2>({13574758819556003052LLU,17458768723248864463LLU}),jule::Array<jule::U64,2>({15401753289863583763LLU,10911730452030540289LLU}),jule::Array<jule::U64,2>({5417133557047315992LLU,13639663065038175362LLU}),jule::Array<jule::U64,2>({15994788983163920798LLU,17049578831297719202LLU}),jule::Array<jule::U64,2>({14608429132904838403LLU,10655986769561074501LLU}),jule::Array<jule::U64,2>({4425478360848884291LLU,13319983461951343127LLU}),jule::Array<jule::U64,2>({920161932633717460LLU,16649979327439178909LLU}),jule::Array<jule::U64,2>({2880944217109767365LLU,10406237079649486818LLU}),jule::Array<jule::U64,2>({12824552308241985014LLU,13007796349561858522LLU}),jule::Array<jule::U64,2>({6807318348447705459LLU,16259745436952323153LLU}),jule::Array<jule::U64,2>({15783789013848285672LLU,10162340898095201970LLU}),jule::Array<jule::U64,2>({10506364230455581282LLU,12702926122619002463LLU}),jule::Array<jule::U64,2>({8521269269642088699LLU,15878657653273753079LLU}),jule::Array<jule::U64,2>({12243322321167387293LLU,9924161033296095674LLU}),jule::Array<jule::U64,2>({6080780864604458308LLU,12405201291620119593LLU}),jule::Array<jule::U64,2>({12212662099182960789LLU,15506501614525149491LLU}),jule::Array<jule::U64,2>({5327070802775656541LLU,9691563509078218432LLU}),jule::Array<jule::U64,2>({6658838503469570676LLU,12114454386347773040LLU}),jule::Array<jule::U64,2>({8323548129336963345LLU,15143067982934716300LLU}),jule::Array<jule::U64,2>({14425589617690377899LLU,9464417489334197687LLU}),jule::Array<jule::U64,2>({13420301003685584469LLU,11830521861667747109LLU}),jule::Array<jule::U64,2>({2940318199324816875LLU,14788152327084683887LLU}),jule::Array<jule::U64,2>({8755227902219092403LLU,9242595204427927429LLU}),jule::Array<jule::U64,2>({15555720896201253407LLU,11553244005534909286LLU}),jule::Array<jule::U64,2>({10221279083396790951LLU,14441555006918636608LLU}),jule::Array<jule::U64,2>({12776598854245988689LLU,18051943758648295760LLU}),jule::Array<jule::U64,2>({7985374283903742931LLU,11282464849155184850LLU}),jule::Array<jule::U64,2>({758345818024902856LLU,14103081061443981063LLU}),jule::Array<jule::U64,2>({14782990327813292282LLU,17628851326804976328LLU}),jule::Array<jule::U64,2>({9239368954883307676LLU,11018032079253110205LLU}),jule::Array<jule::U64,2>({16160897212031522499LLU,13772540099066387756LLU}),jule::Array<jule::U64,2>({1754377441329851508LLU,17215675123832984696LLU}),jule::Array<jule::U64,2>({1096485900831157192LLU,10759796952395615435LLU}),jule::Array<jule::U64,2>({15205665431321110202LLU,13449746190494519293LLU}),jule::Array<jule::U64,2>({5172023733869224041LLU,16812182738118149117LLU}),jule::Array<jule::U64,2>({5538357842881958977LLU,10507614211323843198LLU}),jule::Array<jule::U64,2>({16146319340457224530LLU,13134517764154803997LLU}),jule::Array<jule::U64,2>({6347841120289366950LLU,16418147205193504997LLU}),jule::Array<jule::U64,2>({6273243709394548296LLU,10261342003245940623LLU}),jule::Array<jule::U64,2>({3229868618315797466LLU,12826677504057425779LLU}),jule::Array<jule::U64,2>({17872393828176910545LLU,16033346880071782223LLU}),jule::Array<jule::U64,2>({18087775170251650946LLU,10020841800044863889LLU}),jule::Array<jule::U64,2>({8774660907532399971LLU,12526052250056079862LLU}),jule::Array<jule::U64,2>({1744954097560724156LLU,15657565312570099828LLU}),jule::Array<jule::U64,2>({10313968347830228405LLU,9785978320356312392LLU}),jule::Array<jule::U64,2>({12892460434787785506LLU,12232472900445390490LLU}),jule::Array<jule::U64,2>({6892203506629956075LLU,15290591125556738113LLU}),jule::Array<jule::U64,2>({15836842237712192307LLU,9556619453472961320LLU}),jule::Array<jule::U64,2>({1349308723430688768LLU,11945774316841201651LLU}),jule::Array<jule::U64,2>({15521693959570524672LLU,14932217896051502063LLU}),jule::Array<jule::U64,2>({16618587752372659776LLU,9332636185032188789LLU}),jule::Array<jule::U64,2>({6938176635183661008LLU,11665795231290235987LLU}),jule::Array<jule::U64,2>({4061034775552188356LLU,14582244039112794984LLU}),jule::Array<jule::U64,2>({5076293469440235445LLU,18227805048890993730LLU}),jule::Array<jule::U64,2>({7784369436827535057LLU,11392378155556871081LLU}),jule::Array<jule::U64,2>({14342147814461806725LLU,14240472694446088851LLU}),jule::Array<jule::U64,2>({13315998749649870503LLU,17800590868057611064LLU}),jule::Array<jule::U64,2>({8322499218531169064LLU,11125369292536006915LLU}),jule::Array<jule::U64,2>({5791438004736573426LLU,13906711615670008644LLU}),jule::Array<jule::U64,2>({7239297505920716783LLU,17383389519587510805LLU}),jule::Array<jule::U64,2>({6830403950414141941LLU,10864618449742194253LLU}),jule::Array<jule::U64,2>({13149690956445065330LLU,13580773062177742816LLU}),jule::Array<jule::U64,2>({16437113695556331663LLU,16975966327722178520LLU}),jule::Array<jule::U64,2>({10273196059722707289LLU,10609978954826361575LLU}),jule::Array<jule::U64,2>({8229809056225996208LLU,13262473693532951969LLU}),jule::Array<jule::U64,2>({14898947338709883164LLU,16578092116916189961LLU}),jule::Array<jule::U64,2>({2394313059052595121LLU,10361307573072618726LLU}),jule::Array<jule::U64,2>({12216263360670519709LLU,12951634466340773407LLU}),jule::Array<jule::U64,2>({10658643182410761733LLU,16189543082925966759LLU}),jule::Array<jule::U64,2>({13579181016647807939LLU,10118464426828729224LLU}),jule::Array<jule::U64,2>({16973976270809759924LLU,12648080533535911530LLU}),jule::Array<jule::U64,2>({11994098301657424097LLU,15810100666919889413LLU}),jule::Array<jule::U64,2>({9802154447749584012LLU,9881312916824930883LLU}),jule::Array<jule::U64,2>({7641007041259592112LLU,12351641146031163604LLU}),jule::Array<jule::U64,2>({9551258801574490140LLU,15439551432538954505LLU}),jule::Array<jule::U64,2>({17498751797052526097LLU,9649719645336846565LLU}),jule::Array<jule::U64,2>({8038381691033493909LLU,12062149556671058207LLU}),jule::Array<jule::U64,2>({5436291095364479483LLU,15077686945838822759LLU})});
static jule::Slice<jule::Int> _136fb03b0_POWTAB = jule::Slice<jule::Int>({1LL,3LL,6LL,9LL,13LL,16LL,19LL,23LL,26LL});
static jule::Slice<jule::F64> _136fb03b0_F64_POW10 = jule::Slice<jule::F64>({1e+00,1e+01,1e+02,1e+03,1e+04,1e+05,1e+06,1e+07,1e+08,1e+09,1e+10,1e+11,1e+12,1e+13,1e+14,1e+15,1e+16,1e+17,1e+18,1e+19,1e+20,1e+21,1e+22});
static jule::Slice<jule::F32> _136fb03b0_F32_POW10 = jule::Slice<jule::F32>({1e+00,1e+01,1e+02,1e+03,1e+04,1e+05,1e+06,1e+07,1e+08,1e+09,1e+10});
static jule::Array<jule::U64,20> _126e27830_U64_POW10 = jule::Array<jule::U64,20>({1LLU,10LLU,100LLU,1000LLU,10000LLU,100000LLU,1000000LLU,10000000LLU,100000000LLU,1000000000LLU,10000000000LLU,100000000000LLU,1000000000000LLU,10000000000000LLU,100000000000000LLU,1000000000000000LLU,10000000000000000LLU,100000000000000000LLU,1000000000000000000LLU,10000000000000000000LLU});
static jule::Slice<_126f5c9e0_LeftCheat> _126f5c9e0_LEFTCHEATS = jule::Slice<_126f5c9e0_LeftCheat>({_126f5c9e0_LeftCheat(0LL,jule::Str("", 0)),_126f5c9e0_LeftCheat(1LL,jule::Str("5", 1)),_126f5c9e0_LeftCheat(1LL,jule::Str("25", 2)),_126f5c9e0_LeftCheat(1LL,jule::Str("125", 3)),_126f5c9e0_LeftCheat(2LL,jule::Str("625", 3)),_126f5c9e0_LeftCheat(2LL,jule::Str("3125", 4)),_126f5c9e0_LeftCheat(2LL,jule::Str("15625", 5)),_126f5c9e0_LeftCheat(3LL,jule::Str("78125", 5)),_126f5c9e0_LeftCheat(3LL,jule::Str("390625", 6)),_126f5c9e0_LeftCheat(3LL,jule::Str("1953125", 7)),_126f5c9e0_LeftCheat(4LL,jule::Str("9765625", 7)),_126f5c9e0_LeftCheat(4LL,jule::Str("48828125", 8)),_126f5c9e0_LeftCheat(4LL,jule::Str("244140625", 9)),_126f5c9e0_LeftCheat(4LL,jule::Str("1220703125", 10)),_126f5c9e0_LeftCheat(5LL,jule::Str("6103515625", 10)),_126f5c9e0_LeftCheat(5LL,jule::Str("30517578125", 11)),_126f5c9e0_LeftCheat(5LL,jule::Str("152587890625", 12)),_126f5c9e0_LeftCheat(6LL,jule::Str("762939453125", 12)),_126f5c9e0_LeftCheat(6LL,jule::Str("3814697265625", 13)),_126f5c9e0_LeftCheat(6LL,jule::Str("19073486328125", 14)),_126f5c9e0_LeftCheat(7LL,jule::Str("95367431640625", 14)),_126f5c9e0_LeftCheat(7LL,jule::Str("476837158203125", 15)),_126f5c9e0_LeftCheat(7LL,jule::Str("2384185791015625", 16)),_126f5c9e0_LeftCheat(7LL,jule::Str("11920928955078125", 17)),_126f5c9e0_LeftCheat(8LL,jule::Str("59604644775390625", 17)),_126f5c9e0_LeftCheat(8LL,jule::Str("298023223876953125", 18)),_126f5c9e0_LeftCheat(8LL,jule::Str("1490116119384765625", 19)),_126f5c9e0_LeftCheat(9LL,jule::Str("7450580596923828125", 19)),_126f5c9e0_LeftCheat(9LL,jule::Str("37252902984619140625", 20)),_126f5c9e0_LeftCheat(9LL,jule::Str("186264514923095703125", 21)),_126f5c9e0_LeftCheat(10LL,jule::Str("931322574615478515625", 21)),_126f5c9e0_LeftCheat(10LL,jule::Str("4656612873077392578125", 22)),_126f5c9e0_LeftCheat(10LL,jule::Str("23283064365386962890625", 23)),_126f5c9e0_LeftCheat(10LL,jule::Str("116415321826934814453125", 24)),_126f5c9e0_LeftCheat(11LL,jule::Str("582076609134674072265625", 24)),_126f5c9e0_LeftCheat(11LL,jule::Str("2910383045673370361328125", 25)),_126f5c9e0_LeftCheat(11LL,jule::Str("14551915228366851806640625", 26)),_126f5c9e0_LeftCheat(12LL,jule::Str("72759576141834259033203125", 26)),_126f5c9e0_LeftCheat(12LL,jule::Str("363797880709171295166015625", 27)),_126f5c9e0_LeftCheat(12LL,jule::Str("1818989403545856475830078125", 28)),_126f5c9e0_LeftCheat(13LL,jule::Str("9094947017729282379150390625", 28)),_126f5c9e0_LeftCheat(13LL,jule::Str("45474735088646411895751953125", 29)),_126f5c9e0_LeftCheat(13LL,jule::Str("227373675443232059478759765625", 30)),_126f5c9e0_LeftCheat(13LL,jule::Str("1136868377216160297393798828125", 31)),_126f5c9e0_LeftCheat(14LL,jule::Str("5684341886080801486968994140625", 31)),_126f5c9e0_LeftCheat(14LL,jule::Str("28421709430404007434844970703125", 32)),_126f5c9e0_LeftCheat(14LL,jule::Str("142108547152020037174224853515625", 33)),_126f5c9e0_LeftCheat(15LL,jule::Str("710542735760100185871124267578125", 33)),_126f5c9e0_LeftCheat(15LL,jule::Str("3552713678800500929355621337890625", 34)),_126f5c9e0_LeftCheat(15LL,jule::Str("17763568394002504646778106689453125", 35)),_126f5c9e0_LeftCheat(16LL,jule::Str("88817841970012523233890533447265625", 35)),_126f5c9e0_LeftCheat(16LL,jule::Str("444089209850062616169452667236328125", 36)),_126f5c9e0_LeftCheat(16LL,jule::Str("2220446049250313080847263336181640625", 37)),_126f5c9e0_LeftCheat(16LL,jule::Str("11102230246251565404236316680908203125", 38)),_126f5c9e0_LeftCheat(17LL,jule::Str("55511151231257827021181583404541015625", 38)),_126f5c9e0_LeftCheat(17LL,jule::Str("277555756156289135105907917022705078125", 39)),_126f5c9e0_LeftCheat(17LL,jule::Str("1387778780781445675529539585113525390625", 40)),_126f5c9e0_LeftCheat(18LL,jule::Str("6938893903907228377647697925567626953125", 40)),_126f5c9e0_LeftCheat(18LL,jule::Str("34694469519536141888238489627838134765625", 41)),_126f5c9e0_LeftCheat(18LL,jule::Str("173472347597680709441192448139190673828125", 42)),_126f5c9e0_LeftCheat(19LL,jule::Str("867361737988403547205962240695953369140625", 42))});
static jule::Array<jule::Str,4> _136f04bd0_CPP_HEADER_EXTS = jule::Array<jule::Str,4>({jule::Str(".h", 2),jule::Str(".hpp", 4),jule::Str(".hxx", 4),jule::Str(".hh", 3)});
static jule::Array<jule::Str,3> _136f04bd0_CPP_EXTS = jule::Array<jule::Str,3>({jule::Str(".cpp", 4),jule::Str(".cc", 3),jule::Str(".cxx", 4)});
static jule::Array<jule::Str,1> _136f04bd0_OBJECTIVE_CPP_EXTS = jule::Array<jule::Str,1>({jule::Str(".mm", 3)});
static jule::Map<jule::Str,jule::Str> _136e8b750_ERRORS = jule::Map<jule::Str,jule::Str>({{jule::Str("stdlib_not_exist", 16),jule::Str("standard library directory not found", 36)},{jule::Str("file_not_useable", 16),jule::Str("file is not useable for this operating system or architecture", 61)},{jule::Str("file_not_jule", 13),jule::Str("this is not jule source file: @", 31)},{jule::Str("no_entry_point", 14),jule::Str("entry point (main) function is not defined", 42)},{jule::Str("duplicated_ident", 16),jule::Str("duplicated identifier for declarations in scope: @", 50)},{jule::Str("extra_closed_parentheses", 24),jule::Str("extra closed parentheses", 24)},{jule::Str("extra_closed_braces", 19),jule::Str("extra closed braces", 19)},{jule::Str("extra_closed_brackets", 21),jule::Str("extra closed brackets", 21)},{jule::Str("wait_close_parentheses", 22),jule::Str("parentheses waiting to close", 28)},{jule::Str("wait_close_brace", 16),jule::Str("brace waiting to close", 22)},{jule::Str("wait_close_bracket", 18),jule::Str("bracket are waiting to close", 28)},{jule::Str("expected_parentheses_close", 26),jule::Str("was expected parentheses close", 30)},{jule::Str("expected_brace_close", 20),jule::Str("was expected brace close", 24)},{jule::Str("expected_bracket_close", 22),jule::Str("was expected bracket close", 26)},{jule::Str("body_not_exist", 14),jule::Str("body is not exist", 17)},{jule::Str("operator_overflow", 17),jule::Str("operator overflow", 17)},{jule::Str("incompatible_types", 18),jule::Str("@ and @ data-types are not compatible", 37)},{jule::Str("operator_not_for_juletype", 25),jule::Str("@ operator is not defined for @ type", 36)},{jule::Str("operator_not_for_float", 22),jule::Str("@ operator is not defined for float type(s)", 43)},{jule::Str("operator_not_for_int", 20),jule::Str("@ operator is not defined for integer type(s)", 45)},{jule::Str("operator_not_for_uint", 21),jule::Str("@ operator is not defined for unsigned integer type(s)", 54)},{jule::Str("ident_not_exist", 15),jule::Str("identifier is not exist: @", 26)},{jule::Str("not_function_call", 17),jule::Str("value is not function", 21)},{jule::Str("argument_overflow", 17),jule::Str("argument overflow", 17)},{jule::Str("fn_have_ret", 11),jule::Str("@ function cannot have return type", 34)},{jule::Str("fn_have_parameters", 18),jule::Str("@ function cannot have parameter(s)", 35)},{jule::Str("fn_is_unsafe", 12),jule::Str("@ function cannot unsafe", 24)},{jule::Str("require_ret_expr", 16),jule::Str("return statements of non-void functions should have return expression", 69)},{jule::Str("void_function_ret_expr", 22),jule::Str("void functions is cannot returns any value", 42)},{jule::Str("bitshift_must_unsigned", 22),jule::Str("bit shifting value is must be unsigned", 38)},{jule::Str("logical_not_bool", 16),jule::Str("logical expression is have only boolean type values", 51)},{jule::Str("assign_const", 12),jule::Str("constants is can't assign", 25)},{jule::Str("assign_require_lvalue", 21),jule::Str("assignment required lvalue", 26)},{jule::Str("assign_type_not_support_value", 29),jule::Str("type is not support assignment", 30)},{jule::Str("invalid_token", 13),jule::Str("undefined code content: @", 25)},{jule::Str("invalid_syntax", 14),jule::Str("invalid syntax", 14)},{jule::Str("invalid_type", 12),jule::Str("invalid data-type", 17)},{jule::Str("invalid_numeric_range", 21),jule::Str("arithmetic value overflow", 25)},{jule::Str("invalid_operator", 16),jule::Str("invalid operator", 16)},{jule::Str("invalid_expr_unary_operator", 27),jule::Str("invalid expression for unary @ operator", 39)},{jule::Str("invalid_escape_sequence", 23),jule::Str("invalid escape sequence", 23)},{jule::Str("invalid_type_source", 19),jule::Str("invalid data-type source", 24)},{jule::Str("invalid_preprocessor", 20),jule::Str("invalid preprocessor directive", 30)},{jule::Str("invalid_pragma_directive", 24),jule::Str("invalid pragma directive", 24)},{jule::Str("invalid_type_for_const", 22),jule::Str("@ is invalid data-type for constant", 35)},{jule::Str("invalid_value_for_key", 21),jule::Str("\"@\" is invalid value for the \"@\" key", 36)},{jule::Str("invalid_expr", 12),jule::Str("invalid expression", 18)},{jule::Str("invalid_cpp_ext", 15),jule::Str("invalid C++ extension: @", 24)},{jule::Str("invalid_label", 13),jule::Str("invalid label", 13)},{jule::Str("missing_autotype_value", 22),jule::Str("auto type declarations should have a initializer", 48)},{jule::Str("missing_type", 12),jule::Str("data-type missing", 17)},{jule::Str("missing_expr", 12),jule::Str("expression missing", 18)},{jule::Str("missing_block_comment", 21),jule::Str("missing block comment close", 27)},{jule::Str("missing_rune_end", 16),jule::Str("rune is not finished", 20)},{jule::Str("missing_ret", 11),jule::Str("missing return at end of function", 33)},{jule::Str("missing_string_end", 18),jule::Str("string is not finished", 22)},{jule::Str("missing_multi_ret", 17),jule::Str("missing return expressions for multi return", 43)},{jule::Str("missing_multi_assign_idents", 27),jule::Str("missing identifier(s) for multiple assignment", 45)},{jule::Str("missing_use_path", 16),jule::Str("missing path of use statement", 29)},{jule::Str("missing_pragma_directive", 24),jule::Str("missing pragma directive", 24)},{jule::Str("missing_goto_label", 18),jule::Str("missing label identifier for goto statement", 43)},{jule::Str("missing_expr_for", 16),jule::Str("missing expression for @", 24)},{jule::Str("missing_generics", 16),jule::Str("missing generics", 16)},{jule::Str("missing_receiver", 16),jule::Str("missing receiver parameter", 26)},{jule::Str("missing_function_parentheses", 28),jule::Str("missing function parentheses", 28)},{jule::Str("expr_not_const", 14),jule::Str("expressions is not constant expression", 38)},{jule::Str("nil_for_autotype", 16),jule::Str("nil is cannot use with auto type definitions", 44)},{jule::Str("void_for_autotype", 17),jule::Str("void data is cannot use for auto type definitions", 49)},{jule::Str("rune_empty", 10),jule::Str("rune is cannot empty", 20)},{jule::Str("rune_overflow", 13),jule::Str("rune is should be single", 24)},{jule::Str("not_supports_indexing", 21),jule::Str("@ data type is not support indexing", 35)},{jule::Str("not_supports_slicing", 20),jule::Str("@ data type is not support slicing", 34)},{jule::Str("already_const", 13),jule::Str("define is already constant", 26)},{jule::Str("already_variadic", 16),jule::Str("define is already variadic", 26)},{jule::Str("already_reference", 17),jule::Str("define is already reference", 27)},{jule::Str("duplicate_use_decl", 18),jule::Str("duplicate use declaration: @", 28)},{jule::Str("ignore_ident", 12),jule::Str("ignore operator cannot use as identifier for this declaration", 61)},{jule::Str("overflow_multi_assign_idents", 28),jule::Str("overflow multi assignment identifers", 36)},{jule::Str("overflow_ret", 12),jule::Str("overflow return expressions", 27)},{jule::Str("break_at_out_of_valid_scope", 27),jule::Str("break keyword is cannot used at out of iteration and match cases", 64)},{jule::Str("continue_at_out_of_valid_scope", 30),jule::Str("continue keyword is cannot used at out of iteration", 51)},{jule::Str("iter_while_require_bool_expr", 28),jule::Str("while iterations must be have boolean expression", 48)},{jule::Str("iter_range_require_enumerable_expr", 34),jule::Str("range iterations must be have enumerable expression", 51)},{jule::Str("much_range_vars", 15),jule::Str("range variables can be maximum two", 34)},{jule::Str("if_require_bool_expr", 20),jule::Str("if conditions must be have boolean expression", 45)},{jule::Str("else_have_expr", 14),jule::Str("else's cannot have any expression", 33)},{jule::Str("variadic_parameter_not_last", 27),jule::Str("variadic parameter can only be last parameter", 45)},{jule::Str("variadic_with_non_variadicable", 30),jule::Str("@ data-type is not variadicable", 31)},{jule::Str("more_args_with_variadiced", 25),jule::Str("variadic argument can't use with more argument", 46)},{jule::Str("type_not_supports_casting", 25),jule::Str("@ data-type not supports casting", 32)},{jule::Str("type_not_supports_casting_to", 28),jule::Str("@ data-type not supports casting to @ data-type", 47)},{jule::Str("use_at_content", 14),jule::Str("use declaration must be start of source code", 44)},{jule::Str("use_not_found", 13),jule::Str("used directory path not found/access: @", 39)},{jule::Str("used_package_has_errors", 23),jule::Str("used package has errors: @", 26)},{jule::Str("def_not_support_pub", 19),jule::Str("define is not supports pub modifier", 35)},{jule::Str("obj_not_support_sub_fields", 26),jule::Str("object @ is not supports sub fields", 35)},{jule::Str("obj_have_not_ident", 18),jule::Str("object is not have sub field in this identifier: @", 50)},{jule::Str("type_not_support_sub_fields", 27),jule::Str("type @ is not supports sub fields", 33)},{jule::Str("type_have_not_ident", 19),jule::Str("type @ is not have sub field in this identifier: @", 50)},{jule::Str("doc_couldnt_generated", 21),jule::Str("@: documentation could not generated because Jule source code has an errors", 75)},{jule::Str("declared_but_not_used", 21),jule::Str("@ declared but not used", 23)},{jule::Str("expr_not_func_call", 18),jule::Str("statement must have function call expression", 44)},{jule::Str("label_exist", 11),jule::Str("label is already exist in this identifier: @", 44)},{jule::Str("label_not_exist", 15),jule::Str("not exist any label in this identifier: @", 41)},{jule::Str("goto_jumps_declarations", 23),jule::Str("goto @ jumps over declaration(s)", 32)},{jule::Str("fn_not_has_parameter", 20),jule::Str("function is not has parameter in this identifier: @", 51)},{jule::Str("already_has_expr", 16),jule::Str("@ already has expression", 24)},{jule::Str("argument_must_target_to_field", 29),jule::Str("argument must target to field", 29)},{jule::Str("overflow_limits", 15),jule::Str("overflow the limit of data-type", 31)},{jule::Str("generics_overflow", 17),jule::Str("overflow generics", 17)},{jule::Str("has_generics", 12),jule::Str("define has generics", 19)},{jule::Str("not_has_generics", 16),jule::Str("define not has generics", 23)},{jule::Str("type_not_supports_generics", 26),jule::Str("type @ not supports generics", 28)},{jule::Str("divide_by_zero", 14),jule::Str("divide by zero", 14)},{jule::Str("trait_have_not_ident", 20),jule::Str("trait @ have not any define in this identifier: @", 49)},{jule::Str("not_impl_trait_def", 18),jule::Str("trait @ derived but not implemented trait's @ define", 52)},{jule::Str("dynamic_type_annotation_failed", 30),jule::Str("dynamic type annotation failed", 30)},{jule::Str("fallthrough_wrong_use", 21),jule::Str("fallthrough keyword can only useable at end of the case scopes", 62)},{jule::Str("fallthrough_into_final_case", 27),jule::Str("fallthrough cannot useable at final case", 40)},{jule::Str("unsafe_behavior_at_out_of_unsafe_scope", 38),jule::Str("unsafe behaviors cannot available out of unsafe scopes", 54)},{jule::Str("ref_method_used_with_not_ref_instance", 37),jule::Str("reference method cannot use with non-reference instance", 55)},{jule::Str("method_as_anonymous_fn", 22),jule::Str("methods cannot use as anonymous function", 40)},{jule::Str("genericed_fn_as_anonymous_fn", 28),jule::Str("genericed functions cannot use as anonymous function", 52)},{jule::Str("illegal_cycle_refers_itself", 27),jule::Str("illegal cycle in declaration, @ refers to itself", 48)},{jule::Str("illegal_cross_cycle", 19),jule::Str("illegal cross cycle in declarations;\n@", 38)},{jule::Str("assignment_to_non_mut", 21),jule::Str("cannot assign to immutable define", 33)},{jule::Str("assignment_non_mut_to_mut", 25),jule::Str("cannot assign mutable type used immutable define to mutable define", 66)},{jule::Str("ret_with_mut_typed_non_mut", 26),jule::Str("mutable typed return expressions should be mutable", 50)},{jule::Str("mutable_operation_on_immutable", 30),jule::Str("mutable operation cannot used with immutable define", 51)},{jule::Str("trait_has_reference_parametered_function", 40),jule::Str("trait has reference receiver parameter used method, cannot assign non-reference instance", 88)},{jule::Str("enum_have_not_field", 19),jule::Str("enum have not any field: @", 26)},{jule::Str("duplicate_match_type", 20),jule::Str("type is already checked: @", 26)},{jule::Str("cpp_linked_variable_has_expr", 28),jule::Str("cpp linked variables cannot have expression", 43)},{jule::Str("cpp_linked_variable_is_const", 28),jule::Str("cpp linked variables cannot constant", 36)},{jule::Str("const_var_not_have_expr", 23),jule::Str("constant variable must have initialize expression", 49)},{jule::Str("ref_refs_ref", 12),jule::Str("references cannot reference to another reference", 48)},{jule::Str("ref_refs_ptr", 12),jule::Str("references cannot reference to pointer", 38)},{jule::Str("ref_refs_array", 14),jule::Str("references cannot reference to array", 36)},{jule::Str("ref_refs_enum", 13),jule::Str("references cannot reference to enum", 35)},{jule::Str("ptr_points_ref", 14),jule::Str("pointers cannot point to reference", 34)},{jule::Str("ptr_points_enum", 15),jule::Str("pointers cannot point to enum", 29)},{jule::Str("missing_expr_for_unary", 22),jule::Str("missing expression for unary operator", 37)},{jule::Str("invalid_op_for_unary", 20),jule::Str("invalid_operator_for_unary: @", 29)},{jule::Str("use_decl_at_body", 16),jule::Str("use declarations must declared before other declarations", 56)},{jule::Str("pwd_cannot_set", 14),jule::Str("current working directory cannot set", 36)},{jule::Str("array_auto_sized", 16),jule::Str("array must have explicit size", 29)},{jule::Str("namespace_not_exist", 19),jule::Str("namespace not exist: @", 22)},{jule::Str("impl_base_not_exist", 19),jule::Str("any valid base definition is not exist in this identifier: @", 60)},{jule::Str("impl_dest_not_exist", 19),jule::Str("any valid destination definition is not exist in this identifier: @", 67)},{jule::Str("struct_already_have_ident", 25),jule::Str("struct @ already have a define in this identifier: @", 52)},{jule::Str("unsafe_ptr_indexing", 19),jule::Str("unsafe pointers not supports indexing", 37)},{jule::Str("method_has_generic_with_same_ident", 34),jule::Str("methods cannot have same generic identifier with owner same time", 64)},{jule::Str("tuple_assign_to_single", 22),jule::Str("tuples cannot assign to single define in same time", 50)},{jule::Str("missing_compile_path", 20),jule::Str("missing compile path", 20)},{jule::Str("array_size_is_not_int", 21),jule::Str("array size must be integer", 26)},{jule::Str("array_size_is_negative", 22),jule::Str("array size must be positive integer", 35)},{jule::Str("builtin_as_anonymous_fn", 23),jule::Str("built-in define cannot use as anonymous function", 48)},{jule::Str("type_case_has_not_valid_expr", 28),jule::Str("type-case must be have <any> or trait typed expression", 54)},{jule::Str("illegal_impl_out_of_package", 27),jule::Str("illegal implementation via definition from out of package", 57)},{jule::Str("method_not_invoked", 18),jule::Str("methods should be invoked", 25)},{jule::Str("duplicated_import_selection", 27),jule::Str("duplicated identifier selection: @", 34)},{jule::Str("ident_is_not_accessible", 23),jule::Str("identifier is not accessible: @", 31)},{jule::Str("invalid_stmt_for_next", 21),jule::Str("invalid statement for while-next", 32)},{jule::Str("modulo_with_not_int", 19),jule::Str("module operator must be used with integer type", 46)},{jule::Str("pkg_illegal_cycle_refers_itself", 31),jule::Str("illegal cycle in use declaration, package @ refers to itself", 60)},{jule::Str("pkg_illegal_cross_cycle", 23),jule::Str("illegal cross cycle in use declarations;\n@", 42)},{jule::Str("refers_to", 9),jule::Str("@ refers to @", 13)},{jule::Str("no_file_in_entry_package", 24),jule::Str("there is no Jule source code in this package: @", 47)},{jule::Str("no_member_in_enum", 17),jule::Str("there is no member for enum: @", 30)},{jule::Str("type_is_not_derives", 19),jule::Str("type \"@\" is not derives: @", 26)},{jule::Str("clone_non_lvalue", 16),jule::Str("non-lvalue expressions cannot be clone", 38)},{jule::Str("clone_immut_struct", 18),jule::Str("struct \"@\" is not breaks immutability, do not needs cloning", 59)},{jule::Str("internal_type_not_supports_clone", 32),jule::Str("internal types of \"@\" is not supports cloning", 45)},{jule::Str("type_not_compatible_for_derive", 30),jule::Str("type \"@\" is not compatible to derive \"@\"", 40)},{jule::Str("pass_directive_not_starts_with_dash", 35),jule::Str("the pass directive must be start with dash", 42)},{jule::Str("derive_illegal_cycle_refers_itself", 34),jule::Str("illegal cycle for \"@\" derive, struct \"@\" refers to itself", 57)},{jule::Str("derive_illegal_cross_cycle", 26),jule::Str("illegal cross cycle for \"@\" derive;\n@", 37)},{jule::Str("invalid_expr_for_binop", 22),jule::Str("invalid expression used for binary operation", 44)},{jule::Str("cpp_linked_struct_for_ref", 25),jule::Str("cpp-linked structures cannot supports reference counting", 56)},{jule::Str("trait_method_has_generics", 25),jule::Str("trait methods cannot have generics", 34)},{jule::Str("enum_as_map_val", 15),jule::Str("maps do not support enums as map key type", 41)},{jule::Str("global_not_static", 17),jule::Str("global variables must be static", 31)},{jule::Str("static_is_auto_typed", 20),jule::Str("static variables must be have type annotation", 45)},{jule::Str("static_not_have_expr", 20),jule::Str("static variables must be have initialize expression", 51)},{jule::Str("static_function_has_receiver", 28),jule::Str("static functions cannot have receiver parameter", 47)},{jule::Str("reference_assign_non_var", 24),jule::Str("references requires variable for assignment", 43)},{jule::Str("mut_reference_points_to_immut", 29),jule::Str("mutable reference cannot point to immutable data", 48)},{jule::Str("reference_not_initialized", 25),jule::Str("reference variables must be have lvalue initialize expression", 61)},{jule::Str("constant_reference", 18),jule::Str("references cannot be constant", 29)},{jule::Str("reference_is_dangling", 21),jule::Str("you cannot use \"@\" reference variable, because reference is dangling", 68)},{jule::Str("concurrent_call_with_reference_parameter", 40),jule::Str("concurrent calls does not support functions which is has reference parameter(s)", 79)}});
static jule::Array<jule::Str,4> _136e9f3c0_DIRECTIVES = jule::Array<jule::Str,4>({jule::Str("cdef", 4),jule::Str("typedef", 7),jule::Str("derive", 6),jule::Str("pass", 4)});
static jule::Array<jule::Str,3> _136ea8e10_DISTOS = jule::Array<jule::Str,3>({jule::Str("windows", 7),jule::Str("linux", 5),jule::Str("darwin", 6)});
static jule::Array<jule::Str,4> _136ea8e10_DISTARCH = jule::Array<jule::Str,4>({jule::Str("arm", 3),jule::Str("arm64", 5),jule::Str("amd64", 5),jule::Str("i386", 4)});
static jule::Str _136e9f470_PATH_STDLIB = jule::Str("", 0);
static jule::Str _136e9f470_PATH_EXEC = jule::Str("", 0);
static jule::Str _136e9f470_PATH_WD = jule::Str("", 0);
static jule::Str _136e9f470_PATH_API = jule::Str("", 0);
static jule::Array<jule::I32,5> _127941de0_SPACES = jule::Array<jule::I32,5>({' ','\t','\v','\r','\n'});
static jule::Array<jule::Str,6> _127941de0_UNARY_OPS = jule::Array<jule::Str,6>({jule::Str("-", 1),jule::Str("+", 1),jule::Str("^", 1),jule::Str("!", 1),jule::Str("*", 1),jule::Str("&", 1)});
static jule::Array<jule::Str,2> _127941de0_POSTFIX_OPS = jule::Array<jule::Str,2>({jule::Str("++", 2),jule::Str("--", 2)});
static jule::Array<jule::Str,11> _127941de0_ASSING_OPS = jule::Array<jule::Str,11>({jule::Str("=", 1),jule::Str("+=", 2),jule::Str("-=", 2),jule::Str("/=", 2),jule::Str("*=", 2),jule::Str("%=", 2),jule::Str(">>=", 3),jule::Str("<<=", 3),jule::Str("|=", 2),jule::Str("&=", 2),jule::Str("^=", 2)});
static jule::Array<_127774a70_KindPair,46> _127774a70_KEYWORDS = jule::Array<_127774a70_KindPair,46>({_127774a70_KindPair(jule::Str("i8", 2),1LLU),_127774a70_KindPair(jule::Str("i16", 3),1LLU),_127774a70_KindPair(jule::Str("i32", 3),1LLU),_127774a70_KindPair(jule::Str("i64", 3),1LLU),_127774a70_KindPair(jule::Str("u8", 2),1LLU),_127774a70_KindPair(jule::Str("u16", 3),1LLU),_127774a70_KindPair(jule::Str("u32", 3),1LLU),_127774a70_KindPair(jule::Str("u64", 3),1LLU),_127774a70_KindPair(jule::Str("f32", 3),1LLU),_127774a70_KindPair(jule::Str("f64", 3),1LLU),_127774a70_KindPair(jule::Str("uint", 4),1LLU),_127774a70_KindPair(jule::Str("int", 3),1LLU),_127774a70_KindPair(jule::Str("uintptr", 7),1LLU),_127774a70_KindPair(jule::Str("bool", 4),1LLU),_127774a70_KindPair(jule::Str("str", 3),1LLU),_127774a70_KindPair(jule::Str("any", 3),1LLU),_127774a70_KindPair(jule::Str("true", 4),6LLU),_127774a70_KindPair(jule::Str("false", 5),6LLU),_127774a70_KindPair(jule::Str("nil", 3),6LLU),_127774a70_KindPair(jule::Str("const", 5),9LLU),_127774a70_KindPair(jule::Str("ret", 3),4LLU),_127774a70_KindPair(jule::Str("type", 4),10LLU),_127774a70_KindPair(jule::Str("for", 3),12LLU),_127774a70_KindPair(jule::Str("break", 5),13LLU),_127774a70_KindPair(jule::Str("continue", 8),14LLU),_127774a70_KindPair(jule::Str("in", 2),15LLU),_127774a70_KindPair(jule::Str("if", 2),16LLU),_127774a70_KindPair(jule::Str("else", 4),17LLU),_127774a70_KindPair(jule::Str("use", 3),19LLU),_127774a70_KindPair(jule::Str("pub", 3),21LLU),_127774a70_KindPair(jule::Str("goto", 4),22LLU),_127774a70_KindPair(jule::Str("enum", 4),24LLU),_127774a70_KindPair(jule::Str("struct", 6),25LLU),_127774a70_KindPair(jule::Str("co", 2),26LLU),_127774a70_KindPair(jule::Str("match", 5),27LLU),_127774a70_KindPair(jule::Str("self", 4),28LLU),_127774a70_KindPair(jule::Str("trait", 5),29LLU),_127774a70_KindPair(jule::Str("impl", 4),30LLU),_127774a70_KindPair(jule::Str("cpp", 3),31LLU),_127774a70_KindPair(jule::Str("fall", 4),32LLU),_127774a70_KindPair(jule::Str("fn", 2),33LLU),_127774a70_KindPair(jule::Str("let", 3),34LLU),_127774a70_KindPair(jule::Str("unsafe", 6),35LLU),_127774a70_KindPair(jule::Str("mut", 3),36LLU),_127774a70_KindPair(jule::Str("defer", 5),37LLU),_127774a70_KindPair(jule::Str("static", 6),38LLU)});
static jule::Array<_127774a70_KindPair,38> _127774a70_BASIC_OPS = jule::Array<_127774a70_KindPair,38>({_127774a70_KindPair(jule::Str("::", 2),23LLU),_127774a70_KindPair(jule::Str(":", 1),11LLU),_127774a70_KindPair(jule::Str(";", 1),5LLU),_127774a70_KindPair(jule::Str(",", 1),8LLU),_127774a70_KindPair(jule::Str("...", 3),7LLU),_127774a70_KindPair(jule::Str(".", 1),20LLU),_127774a70_KindPair(jule::Str("+=", 2),7LLU),_127774a70_KindPair(jule::Str("-=", 2),7LLU),_127774a70_KindPair(jule::Str("*=", 2),7LLU),_127774a70_KindPair(jule::Str("/=", 2),7LLU),_127774a70_KindPair(jule::Str("%=", 2),7LLU),_127774a70_KindPair(jule::Str("<<=", 3),7LLU),_127774a70_KindPair(jule::Str(">>=", 3),7LLU),_127774a70_KindPair(jule::Str("^=", 2),7LLU),_127774a70_KindPair(jule::Str("&=", 2),7LLU),_127774a70_KindPair(jule::Str("|=", 2),7LLU),_127774a70_KindPair(jule::Str("==", 2),7LLU),_127774a70_KindPair(jule::Str("!=", 2),7LLU),_127774a70_KindPair(jule::Str(">=", 2),7LLU),_127774a70_KindPair(jule::Str("<=", 2),7LLU),_127774a70_KindPair(jule::Str("&&", 2),7LLU),_127774a70_KindPair(jule::Str("||", 2),7LLU),_127774a70_KindPair(jule::Str("<<", 2),7LLU),_127774a70_KindPair(jule::Str(">>", 2),7LLU),_127774a70_KindPair(jule::Str("++", 2),7LLU),_127774a70_KindPair(jule::Str("--", 2),7LLU),_127774a70_KindPair(jule::Str("+", 1),7LLU),_127774a70_KindPair(jule::Str("-", 1),7LLU),_127774a70_KindPair(jule::Str("*", 1),7LLU),_127774a70_KindPair(jule::Str("/", 1),7LLU),_127774a70_KindPair(jule::Str("%", 1),7LLU),_127774a70_KindPair(jule::Str("&", 1),7LLU),_127774a70_KindPair(jule::Str("|", 1),7LLU),_127774a70_KindPair(jule::Str("^", 1),7LLU),_127774a70_KindPair(jule::Str("!", 1),7LLU),_127774a70_KindPair(jule::Str("<", 1),7LLU),_127774a70_KindPair(jule::Str(">", 1),7LLU),_127774a70_KindPair(jule::Str("=", 1),7LLU)});
static jule::Str _130cb2be0_SYS_INT = jule::Str("", 0);
static jule::Str _130cb2be0_SYS_UINT = jule::Str("", 0);
static jule::Ref<_127ed52e0_FnIns> _130b8f5f0_BUILTIN_FN_OUT = jule::new_struct<_127ed52e0_FnIns>(new( std::nothrow ) _127ed52e0_FnIns());
static jule::Ref<_127ed52e0_FnIns> _130b8f5f0_BUILTIN_FN_OUTLN = jule::new_struct<_127ed52e0_FnIns>(new( std::nothrow ) _127ed52e0_FnIns());
static jule::Ref<_127ed52e0_FnIns> _130b8f5f0_BUILTIN_FN_NEW = jule::new_struct<_127ed52e0_FnIns>(new( std::nothrow ) _127ed52e0_FnIns());
static jule::Ref<_127ed52e0_FnIns> _130b8f5f0_BUILTIN_FN_DROP = jule::new_struct<_127ed52e0_FnIns>(new( std::nothrow ) _127ed52e0_FnIns());
static jule::Ref<_127ed52e0_FnIns> _130b8f5f0_BUILTIN_FN_PANIC = jule::new_struct<_127ed52e0_FnIns>(new( std::nothrow ) _127ed52e0_FnIns());
static jule::Ref<_127ed52e0_FnIns> _130b8f5f0_BUILTIN_FN_MAKE = jule::new_struct<_127ed52e0_FnIns>(new( std::nothrow ) _127ed52e0_FnIns());
static jule::Ref<_127ed52e0_FnIns> _130b8f5f0_BUILTIN_FN_APPEND = jule::new_struct<_127ed52e0_FnIns>(new( std::nothrow ) _127ed52e0_FnIns());
static jule::Ref<_127ed52e0_FnIns> _130b8f5f0_BUILTIN_FN_RECOVER = jule::new_struct<_127ed52e0_FnIns>(new( std::nothrow ) _127ed52e0_FnIns());
static jule::Ref<_127ed52e0_FnIns> _130b8f5f0_BUILTIN_FN_CLONE = jule::new_struct<_127ed52e0_FnIns>(new( std::nothrow ) _127ed52e0_FnIns());
static jule::Ref<_127ed52e0_FnIns> _130b8f5f0_BUILTIN_FN_STD_MEM_SIZE_OF = jule::new_struct<_127ed52e0_FnIns>(new( std::nothrow ) _127ed52e0_FnIns());
static jule::Ref<_127ed52e0_FnIns> _130b8f5f0_BUILTIN_FN_STD_MEM_ALIGN_OF = jule::new_struct<_127ed52e0_FnIns>(new( std::nothrow ) _127ed52e0_FnIns());
static jule::Ref<_127ed52e0_FnIns> _130b8f5f0_BUILTIN_FN_REAL = jule::new_struct<_127ed52e0_FnIns>(new( std::nothrow ) _127ed52e0_FnIns(jule::Ref<_127b2e960_StructIns>(),jule::Ref<_127ed52e0_Fn>(),jule::Slice<jule::Ref<_1304dc9b0_TypeKind>>(),jule::Slice<jule::Ref<_127ed52e0_ParamIns>>(),jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1300a11b0_Scope>(),jule::Fn<jule::Ref<_13064b610_Data>(jule::Ref<_13064b610_Eval>,jule::Ref<_1275d7180_FnCallExpr>,jule::Ref<_13064b610_Data>)>(),jule::Bool(),jule::Bool()));
static jule::Ref<_127ed52e0_FnIns> _130b8f5f0_BUILTIN_FN_COPY = jule::new_struct<_127ed52e0_FnIns>(new( std::nothrow ) _127ed52e0_FnIns(jule::Ref<_127b2e960_StructIns>(),jule::Ref<_127ed52e0_Fn>(),jule::Slice<jule::Ref<_1304dc9b0_TypeKind>>(),jule::Slice<jule::Ref<_127ed52e0_ParamIns>>(),jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("int", 3)))),jule::Ref<_1300a11b0_Scope>(),jule::Fn<jule::Ref<_13064b610_Data>(jule::Ref<_13064b610_Eval>,jule::Ref<_1275d7180_FnCallExpr>,jule::Ref<_13064b610_Data>)>(),jule::Bool(),jule::Bool()));
static jule::Ref<_1304dc9b0_TypeAlias> _130b8f5f0_BUILTIN_TYPE_ALIAS_BYTE = jule::new_struct<_1304dc9b0_TypeAlias>(new( std::nothrow ) _1304dc9b0_TypeAlias(jule::Ref<_1275d7180_ScopeTree>(),true,jule::Bool(),jule::Bool(),_127941de0_Token(),jule::Str(),jule::new_struct<_1304dc9b0_TypeSymbol>(new( std::nothrow ) _1304dc9b0_TypeSymbol(jule::Ref<_1275d7180_TypeDecl>(),jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("u8", 2)))))),jule::Str(),jule::Slice<jule::Any>()));
static jule::Ref<_1304dc9b0_TypeAlias> _130b8f5f0_BUILTIN_TYPE_ALIAS_RUNE = jule::new_struct<_1304dc9b0_TypeAlias>(new( std::nothrow ) _1304dc9b0_TypeAlias(jule::Ref<_1275d7180_ScopeTree>(),true,jule::Bool(),jule::Bool(),_127941de0_Token(),jule::Str(),jule::new_struct<_1304dc9b0_TypeSymbol>(new( std::nothrow ) _1304dc9b0_TypeSymbol(jule::Ref<_1275d7180_TypeDecl>(),jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("i32", 3)))))),jule::Str(),jule::Slice<jule::Any>()));
static jule::Ref<_130099320_Trait> _130b8f5f0_BUILTIN_TRAIT_ERROR = jule::new_struct<_130099320_Trait>(new( std::nothrow ) _130099320_Trait(_127941de0_Token(),jule::Str("Error", 5),true,jule::Str(),jule::Slice<jule::Ref<_127ed52e0_Fn>>({jule::new_struct<_127ed52e0_Fn>(new( std::nothrow ) _127ed52e0_Fn(jule::Ref<_1300a20d0_Sema>(),_127941de0_Token(),jule::Bool(),jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str("error", 5),jule::Slice<jule::Ref<_1275d7180_Directive>>(),jule::Str(),jule::Ref<_1275d7180_ScopeTree>(),jule::Slice<jule::Ref<_1275d7180_GenericDecl>>(),jule::new_struct<_127ed52e0_RetType>(new( std::nothrow ) _127ed52e0_RetType(jule::new_struct<_1304dc9b0_TypeSymbol>(new( std::nothrow ) _1304dc9b0_TypeSymbol(jule::new_struct<_1275d7180_TypeDecl>(new( std::nothrow ) _1275d7180_TypeDecl(_127941de0_Token(),jule::new_struct<_1275d7180_IdentTypeDecl>(new( std::nothrow ) _1275d7180_IdentTypeDecl(_127941de0_Token(),jule::Str("str", 3),jule::Bool(),jule::Slice<jule::Ref<_1275d7180_TypeDecl>>())))),jule::Ref<_1304dc9b0_TypeKind>())),jule::Slice<_127941de0_Token>())),jule::Slice<jule::Ref<_127ed52e0_Param>>({jule::new_struct<_127ed52e0_Param>(new( std::nothrow ) _127ed52e0_Param(_127941de0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1304dc9b0_TypeSymbol>(),jule::Str("self", 4)))}),jule::Ref<_127b2e960_Struct>(),jule::Ref<_127ff3480_ReferenceStack>(),jule::Slice<jule::Ref<_127ed52e0_FnIns>>()))}),jule::Slice<jule::Ref<_127b2e960_Struct>>()));
static jule::Slice<jule::Any> _136f12120_deads = nullptr;
static jule::Slice<jule::Any> _136f12120_checking = nullptr;
static jule::Any _136f12120_current = jule::Any(nullptr);
static jule::Slice<jule::Str> _127cdea20_OPTIMIZATIONS = nullptr;
static jule::U64 _130f8bbe0_INDENT = 0LLU;
static jule::Array<_1275d1920_accept_range,16> _1275d1920_ACCEPT_RANGES = jule::Array<_1275d1920_accept_range,16>({_1275d1920_accept_range(128LLU,191LLU),_1275d1920_accept_range(160LLU,191LLU),_1275d1920_accept_range(128LLU,159LLU),_1275d1920_accept_range(144LLU,191LLU),_1275d1920_accept_range(128LLU,143LLU)});
static jule::Array<jule::U8,256> _1275d1920_FIRST = jule::Array<jule::U8,256>({});
static jule::Str _136e9f470_ARCH = jule::Str("arm64", 5);
static jule::Str _136e9f470_OS = jule::Str("linux", 5);
static jule::Array<jule::Array<jule::Str,2>,3> _136e09180_HELP_MAP = jule::Array<jule::Array<jule::Str,2>,3>({jule::Array<jule::Str,2>({jule::Str("help", 4),jule::Str("Show help", 9)}),jule::Array<jule::Str,2>({jule::Str("version", 7),jule::Str("Show version", 12)}),jule::Array<jule::Str,2>({jule::Str("tool", 4),jule::Str("Tools for effective Jule", 24)})});

inline jule::U8 _136ec98d0_LazyBuff::_method_index(jule::Int _5324_i) {
	if ((*this)._field_buff != nullptr) {
		return (*this)._field_buff[static_cast<jule::Int>(_5324_i)];
	}
	return (*this)._field_path[static_cast<jule::Int>(_5324_i)];
}



inline void _136ec98d0_LazyBuff::_method_append(jule::U8 _6025_c) {
	if ((*this)._field_buff == nullptr) {
		if (((*this)._field_w < (*this)._field_path.len()) && ((*this)._field_path[static_cast<jule::Int>((*this)._field_w)] == _6025_c)) {
			((*this)._field_w)++;
			return;
		}
		(*this)._field_buff=jule::Slice<jule::U8>::alloc(static_cast<jule::Int>(static_cast<jule::I64>((*this)._field_path.len())));
		copy((*this)._field_buff,static_cast<jule::Slice<jule::U8>>((*this)._field_path.slice(0LL,static_cast<jule::Int>((*this)._field_w))));
	}
	(*this)._field_buff[static_cast<jule::Int>((*this)._field_w)]=_6025_c;
	((*this)._field_w)++;
}



inline jule::Str _136ec98d0_LazyBuff::_method_string(void) {
	if ((*this)._field_buff == nullptr) {
		return (*this)._field_vol_and_path.slice(0LL,static_cast<jule::Int>((*this)._field_vol_len + (*this)._field_w));
	}
	return (*this)._field_vol_and_path.slice(0LL,static_cast<jule::Int>((*this)._field_vol_len)) + static_cast<jule::Str>((*this)._field_buff.slice(0LL,static_cast<jule::Int>((*this)._field_w)));
}







std::ostream &operator<<(std::ostream &_Stream, const _136ec98d0_LazyBuff &_Src) {
	_Stream << "LazyBuff{";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "buff:" << _Src._field_buff << ", ";
	_Stream << "w:" << _Src._field_w << ", ";
	_Stream << "vol_and_path:" << _Src._field_vol_and_path << ", ";
	_Stream << "vol_len:" << _Src._field_vol_len;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _136f888c0_FloatInfo &_Src) {
	_Stream << "FloatInfo{";
	_Stream << "mantbits:" << _Src._field_mantbits << ", ";
	_Stream << "expbits:" << _Src._field_expbits << ", ";
	_Stream << "bias:" << _Src._field_bias;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _136f888c0_DecimalSlice &_Src) {
	_Stream << "DecimalSlice{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _126f5c9e0_LeftCheat &_Src) {
	_Stream << "LeftCheat{";
	_Stream << "delta:" << _Src._field_delta << ", ";
	_Stream << "cutoff:" << _Src._field_cutoff;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _126f5c9e0_Decimal::_method_set(jule::Str _22922_s) {
	jule::Bool _22932_ok = jule::Bool();
	jule::Int _23017_i = 0LL;
	(*this)._field_neg=false;
	(*this)._field_trunc=false;
	if (_23017_i >= _22922_s.len()) {
		return _22932_ok;
	}
	{
		if (!((_22922_s[static_cast<jule::Int>(_23017_i)] == '+'))) { goto _case_end_5123069200; }
		_case_begin_5123069200:;
		{
			(_23017_i)++;
		}
		goto _match_end_5123070256;
		_case_end_5123069200:;
		if (!((_22922_s[static_cast<jule::Int>(_23017_i)] == '-'))) { goto _case_end_5123069312; }
		_case_begin_5123069312:;
		{
			(*this)._field_neg=true;
			(_23017_i)++;
		}
		goto _match_end_5123070256;
		_case_end_5123069312:;
		_match_end_5123070256:;
	}
	jule::Bool _24717_sawdot = false;
	jule::Bool _24817_sawdigits = false;
	_iter_begin_5123076000:;
	if (!(_23017_i < _22922_s.len())) { goto _iter_end_5123076000; }
	{
		{
			if (!((_22922_s[static_cast<jule::Int>(_23017_i)] == '.'))) { goto _case_end_5123077792; }
			_case_begin_5123077792:;
			{
				if (_24717_sawdot) {
					return _22932_ok;
				}
				_24717_sawdot=true;
				(*this)._field_dp=(*this)._field_nd;
				goto _iter_next_5123076000;
			}
			goto _match_end_5123077552;
			_case_end_5123077792:;
			if (!((('0' <= _22922_s[static_cast<jule::Int>(_23017_i)]) && (_22922_s[static_cast<jule::Int>(_23017_i)] <= '9')))) { goto _case_end_5123077904; }
			_case_begin_5123077904:;
			{
				_24817_sawdigits=true;
				if ((_22922_s[static_cast<jule::Int>(_23017_i)] == '0') && ((*this)._field_nd == 0LL)) {
					((*this)._field_dp)--;
					goto _iter_next_5123076000;
				}
				if ((*this)._field_nd < 800LL) {
					(*this)._field_d[static_cast<jule::Int>((*this)._field_nd)]=_22922_s[static_cast<jule::Int>(_23017_i)];
					((*this)._field_nd)++;
				} else if (_22922_s[static_cast<jule::Int>(_23017_i)] != '0') {
					(*this)._field_trunc=true;
				}
				goto _iter_next_5123076000;
			}
			goto _match_end_5123077552;
			_case_end_5123077904:;
			_match_end_5123077552:;
		}
		goto _iter_end_5123076000;
	}
	_iter_next_5123076000:;
	(_23017_i)++;
	goto _iter_begin_5123076000;
	_iter_end_5123076000:;
	if ((!(_24817_sawdigits))) {
		return _22932_ok;
	}
	if ((!(_24717_sawdot))) {
		(*this)._field_dp=(*this)._field_nd;
	}
	if ((_23017_i < _22922_s.len()) && (_126edcdf0_lower(_22922_s[static_cast<jule::Int>(_23017_i)]) == 'e')) {
		(_23017_i)++;
		if (_23017_i >= _22922_s.len()) {
			return _22932_ok;
		}
		jule::Int _29121_esign = 1LL;
		if (_22922_s[static_cast<jule::Int>(_23017_i)] == '+') {
			(_23017_i)++;
		} else if (_22922_s[static_cast<jule::Int>(_23017_i)] == '-') {
			(_23017_i)++;
			_29121_esign=-1LL;
		}
		if (((_23017_i >= _22922_s.len()) || (_22922_s[static_cast<jule::Int>(_23017_i)] < '0')) || (_22922_s[static_cast<jule::Int>(_23017_i)] > '9')) {
			return _22932_ok;
		}
		jule::Int _30121_e = 0LL;
		_iter_begin_5123104432:;
		if (!((_23017_i < _22922_s.len()) && (('0' <= _22922_s[static_cast<jule::Int>(_23017_i)]) && (_22922_s[static_cast<jule::Int>(_23017_i)] <= '9')))) { goto _iter_end_5123104432; }
		{
			if (_30121_e < 10000LL) {
				_30121_e=((_30121_e * 10LL) + static_cast<jule::Int>(_22922_s[static_cast<jule::Int>(_23017_i)])) - '0';
			}
		}
		_iter_next_5123104432:;
		(_23017_i)++;
		goto _iter_begin_5123104432;
		_iter_end_5123104432:;
		(*this)._field_dp+=_30121_e * _29121_esign;
	}
	if (_23017_i != _22922_s.len()) {
		return _22932_ok;
	}
	_22932_ok=true;
	return _22932_ok;
}



inline std::tuple<jule::U64,jule::Bool> _126f5c9e0_Decimal::_method_float_bits(_136f888c0_FloatInfo& _31830_flt) {
	jule::Bool _31856_overflow = jule::Bool();
	jule::U64 _31848_b = jule::U64();
	jule::Int _31917_exp = 0LL;
	jule::U64 _32017_mant = 0LLU;
	if ((*this)._field_nd == 0LL) {
		_32017_mant=0LL;
		_31917_exp=_31830_flt._field_bias;
		goto _julec_label_out;
	}
	if ((*this)._field_dp > 310LL) {
		goto _julec_label_overflow;
	}
	if ((*this)._field_dp < -330LL) {
		_32017_mant=0LL;
		_31917_exp=_31830_flt._field_bias;
		goto _julec_label_out;
	}
	_31917_exp=0LL;
	_iter_begin_5123126784:;
	if (!((*this)._field_dp > 0LL)) { goto _iter_end_5123126784; }
	{
		jule::Int _34521_n = 0LL;
		if ((*this)._field_dp >= _136fb03b0_POWTAB.len()) {
			_34521_n=27LL;
		} else {
			_34521_n=_136fb03b0_POWTAB[static_cast<jule::Int>((*this)._field_dp)];
		}
		(*this)._method_shift(static_cast<jule::Int>((-(_34521_n))));
		_31917_exp+=_34521_n;
	}
	_iter_next_5123126784:;
	goto _iter_begin_5123126784;
	_iter_end_5123126784:;
	_iter_begin_5123139648:;
	if (!(((*this)._field_dp < 0LL) || (((*this)._field_dp == 0LL) && ((*this)._field_d[static_cast<jule::Int>(0LL)] < '5')))) { goto _iter_end_5123139648; }
	{
		jule::Int _35521_n = 0LL;
		if ((-((*this)._field_dp)) >= _136fb03b0_POWTAB.len()) {
			_35521_n=27LL;
		} else {
			_35521_n=_136fb03b0_POWTAB[static_cast<jule::Int>((-((*this)._field_dp)))];
		}
		(*this)._method_shift(_35521_n);
		_31917_exp-=_35521_n;
	}
	_iter_next_5123139648:;
	goto _iter_begin_5123139648;
	_iter_end_5123139648:;
	(_31917_exp)--;
	if (_31917_exp < (_31830_flt._field_bias + 1LL)) {
		jule::Int _37217_n = (_31830_flt._field_bias + 1LL) - _31917_exp;
		(*this)._method_shift(static_cast<jule::Int>((-(_37217_n))));
		_31917_exp+=_37217_n;
	}
	if ((_31917_exp - _31830_flt._field_bias) >= ((1LL << _31830_flt._field_expbits) - 1LL)) {
		goto _julec_label_overflow;
	}
	(*this)._method_shift(static_cast<jule::Int>(1LL + _31830_flt._field_mantbits));
	_32017_mant=static_cast<jule::U64>((*this)._method_rounded_integer());
	if (_32017_mant == (2LL << _31830_flt._field_mantbits)) {
		_32017_mant>>=1LL;
		(_31917_exp)++;
		if ((_31917_exp - _31830_flt._field_bias) >= ((1LL << _31830_flt._field_expbits) - 1LL)) {
			goto _julec_label_overflow;
		}
	}
	if ((_32017_mant & (1LL << _31830_flt._field_mantbits)) == 0LL) {
		_31917_exp=_31830_flt._field_bias;
	}
	goto _julec_label_out;
	_julec_label_overflow:;
	_32017_mant=0LL;
	_31917_exp=static_cast<jule::Int>(((1LL << _31830_flt._field_expbits) - 1LL) + _31830_flt._field_bias);
	_31856_overflow=true;
	_julec_label_out:;
	jule::U64 _40817_bits = _32017_mant & ((static_cast<jule::U64>(1LLU) << _31830_flt._field_mantbits) - 1LL);
	_40817_bits|=static_cast<jule::U64>(static_cast<jule::U64>((_31917_exp - _31830_flt._field_bias) & ((1LL << _31830_flt._field_expbits) - 1LL)) << _31830_flt._field_mantbits);
	if ((*this)._field_neg) {
		_40817_bits|=static_cast<jule::Int>((1LL << _31830_flt._field_mantbits) << _31830_flt._field_expbits);
	}
	_31848_b = _40817_bits;
	_31856_overflow = _31856_overflow;
	return std::make_tuple(_31848_b,_31856_overflow);
}



inline void _126f5c9e0_Decimal::_method_assign(jule::U64 _15229_v) {
	jule::Array<jule::U8,24> _15317_buf = jule::Array<jule::U8,24>({});
	jule::Int _15617_n = 0LL;
	_iter_begin_5123184544:;
	if (!(_15229_v > 0LL)) { goto _iter_end_5123184544; }
	{
		jule::U64 _15817_v1 = jule::div(_15229_v,10LL);
		_15229_v-=static_cast<jule::U64>(10LL * _15817_v1);
		_15317_buf[static_cast<jule::Int>(_15617_n)]=static_cast<jule::U8>(_15229_v + '0');
		(_15617_n)++;
		_15229_v=_15817_v1;
	}
	_iter_next_5123184544:;
	goto _iter_begin_5123184544;
	_iter_end_5123184544:;
	(*this)._field_nd=0LL;
	(_15617_n)--;
	_iter_begin_5123188688:;
	if (!(_15617_n >= 0LL)) { goto _iter_end_5123188688; }
	{
		(*this)._field_d[static_cast<jule::Int>((*this)._field_nd)]=_15317_buf[static_cast<jule::Int>(_15617_n)];
		((*this)._field_nd)++;
	}
	_iter_next_5123188688:;
	(_15617_n)--;
	goto _iter_begin_5123188688;
	_iter_end_5123188688:;
	(*this)._field_dp=(*this)._field_nd;
	_126f5c9e0_trim((*this));
}



inline void _126f5c9e0_Decimal::_method_shift(jule::Int _17728_k) {
	{
		if (!(((*this)._field_nd == 0LL))) { goto _case_end_5123197664; }
		goto _match_end_5123197392;
		_case_end_5123197664:;
		if (!((_17728_k > 0LL))) { goto _case_end_5123197776; }
		_case_begin_5123197776:;
		{
			_iter_begin_5123200448:;
			if (!(_17728_k > 60LL)) { goto _iter_end_5123200448; }
			{
				_126f5c9e0_left_shift((*this),60LLU);
				_17728_k-=60LL;
			}
			_iter_next_5123200448:;
			goto _iter_begin_5123200448;
			_iter_end_5123200448:;
			_126f5c9e0_left_shift((*this),static_cast<jule::Uint>(_17728_k));
		}
		goto _match_end_5123197392;
		_case_end_5123197776:;
		if (!((_17728_k < 0LL))) { goto _case_end_5123197888; }
		_case_begin_5123197888:;
		{
			_iter_begin_5123199920:;
			if (!(_17728_k < -60LL)) { goto _iter_end_5123199920; }
			{
				_126f5c9e0_right_shift((*this),60LLU);
				_17728_k+=60LL;
			}
			_iter_next_5123199920:;
			goto _iter_begin_5123199920;
			_iter_end_5123199920:;
			_126f5c9e0_right_shift((*this),static_cast<jule::Uint>((-(_17728_k))));
		}
		goto _match_end_5123197392;
		_case_end_5123197888:;
		_match_end_5123197392:;
	}
}



inline void _126f5c9e0_Decimal::_method_round_down(jule::Int _19729_nd) {
	if ((_19729_nd < 0LL) || (_19729_nd >= (*this)._field_nd)) {
		return;
	}
	(*this)._field_nd=_19729_nd;
	_126f5c9e0_trim((*this));
}



inline void _126f5c9e0_Decimal::_method_round_up(jule::Int _20627_nd) {
	if ((_20627_nd < 0LL) || (_20627_nd >= (*this)._field_nd)) {
		return;
	}
	jule::Int _21217_i = _20627_nd - 1LL;
	_iter_begin_5123215776:;
	if (!(_21217_i >= 0LL)) { goto _iter_end_5123215776; }
	{
		jule::U8 _21417_c = (*this)._field_d[static_cast<jule::Int>(_21217_i)];
		if (_21417_c < '9') {
			((*this)._field_d[static_cast<jule::Int>(_21217_i)])++;
			(*this)._field_nd=_21217_i + 1LL;
			return;
		}
	}
	_iter_next_5123215776:;
	(_21217_i)--;
	goto _iter_begin_5123215776;
	_iter_end_5123215776:;
	(*this)._field_d[static_cast<jule::Int>(0LL)]='1';
	(*this)._field_nd=1LL;
	((*this)._field_dp)++;
}



inline void _126f5c9e0_Decimal::_method_round(jule::Int _23324_nd) {
	if ((_23324_nd < 0LL) || (_23324_nd >= (*this)._field_nd)) {
		return;
	}
	if (_126f5c9e0_should_round_up((*this),_23324_nd)) {
		(*this)._method_round_up(_23324_nd);
	} else {
		(*this)._method_round_down(_23324_nd);
	}
}



inline jule::U64 _126f5c9e0_Decimal::_method_rounded_integer(void) {
	if ((*this)._field_dp > 20LL) {
		return jule::MAX_U64;
	}
	jule::Int _25017_i = 0LL;
	jule::U64 _25117_n = 0LLU;
	_iter_begin_5123235056:;
	if (!((_25017_i < (*this)._field_dp) && (_25017_i < (*this)._field_nd))) { goto _iter_end_5123235056; }
	{
		_25117_n=(_25117_n * 10LL) + static_cast<jule::U64>((*this)._field_d[static_cast<jule::Int>(_25017_i)] - '0');
	}
	_iter_next_5123235056:;
	(_25017_i)++;
	goto _iter_begin_5123235056;
	_iter_end_5123235056:;
	_iter_begin_5123240320:;
	if (!(_25017_i < (*this)._field_dp)) { goto _iter_end_5123240320; }
	{
		_25117_n*=10LL;
	}
	_iter_next_5123240320:;
	(_25017_i)++;
	goto _iter_begin_5123240320;
	_iter_end_5123240320:;
	if (_126f5c9e0_should_round_up((*this),(*this)._field_dp)) {
		(_25117_n)++;
	}
	return _25117_n;
}







std::ostream &operator<<(std::ostream &_Stream, const _126f5c9e0_Decimal &_Src) {
	_Stream << "Decimal{";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "nd:" << _Src._field_nd << ", ";
	_Stream << "dp:" << _Src._field_dp << ", ";
	_Stream << "neg:" << _Src._field_neg << ", ";
	_Stream << "trunc:" << _Src._field_trunc;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _136e99d00_Log::_method_flat(void) {
	return (*this)._field_text;
}



inline jule::Str _136e99d00_Log::_method_error(void) {
	jule::Str _2817_log = jule::Str("", 0);
	_2817_log+=(*this)._field_path;
	_2817_log+=jule::Str(":", 1);
	_2817_log+=_127164920_itoa((*this)._field_row);
	_2817_log+=jule::Str(":", 1);
	_2817_log+=_127164920_itoa((*this)._field_column);
	_2817_log+=jule::Str(" ", 1);
	_2817_log+=(*this)._field_text;
	return _2817_log;
}



inline jule::Str _136e99d00_Log::_method_to_str(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!((0LLU) == _match_expr)) { goto _case_end_5123563824; }
		_case_begin_5123563824:;
		{
			return (*this)._method_flat();
		}
		goto _match_end_5123554048;
		_case_end_5123563824:;
		if (!((1LLU) == _match_expr)) { goto _case_end_5123563072; }
		_case_begin_5123563072:;
		{
			return (*this)._method_error();
		}
		goto _match_end_5123554048;
		_case_end_5123563072:;
		_case_begin_5123562768:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_5123554048;
		_case_end_5123562768:;
		_match_end_5123554048:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _136e99d00_Log &_Src) {
	_Stream << "Log{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _127281550_DirEntry &_Src) {
	_Stream << "DirEntry{";
	_Stream << "name:" << _Src._field_name << ", ";
	_Stream << "stat:" << _Src._field_stat;
	_Stream << "}";
	return _Stream;
}



inline std::tuple<jule::I64,jule::Int> _1275c8a10_File::_method_seek(jule::I64 _5527_offset,jule::Int _5540_origin) {
	jule::I64 _5613_pos = _126e418f0_seek((*this)._field_handle,_5527_offset,static_cast<jule::Int>(_5540_origin));
	return std::make_tuple(_5613_pos,0LLU);
}



inline std::tuple<jule::Int,jule::Int> _1275c8a10_File::_method_read(jule::Slice<jule::U8> _7031_buff) {
	jule::Int _7047_n = jule::Int();
	if (_7031_buff.len() == 0LL) {
		_7047_n = 0LL;
		return std::make_tuple(_7047_n,0LLU);
	}
	_7047_n=static_cast<jule::Int>(static_cast<jule::Int>(_126e418f0_read((*this)._field_handle,(&(_7031_buff[static_cast<jule::Int>(0LL)])),static_cast<jule::Uint>(_7031_buff.len()))));
	if (_7047_n == -1LL) {
		_7047_n=0LL;
		_7047_n = _7047_n;
		return std::make_tuple(_7047_n,_127627350_get_last_fs_error());
	}
	_7047_n = _7047_n;
	return std::make_tuple(_7047_n,0LLU);
}



inline std::tuple<jule::Int,jule::Int> _1275c8a10_File::_method_write(jule::Slice<jule::U8> _8928_buff) {
	jule::Int _8944_n = jule::Int();
	if (_8928_buff.len() == 0LL) {
		_8944_n = 0LL;
		return std::make_tuple(_8944_n,0LLU);
	}
	_8944_n=static_cast<jule::Int>(static_cast<jule::Int>(_126e418f0_write((*this)._field_handle,(&(_8928_buff[static_cast<jule::Int>(0LL)])),static_cast<jule::Uint>(_8928_buff.len()))));
	if (_8944_n == -1LL) {
		_8944_n=0LL;
		_8944_n = _8944_n;
		return std::make_tuple(_8944_n,_127627350_get_last_fs_error());
	}
	_8944_n = _8944_n;
	return std::make_tuple(_8944_n,0LLU);
}



inline jule::Int _1275c8a10_File::_method_close(void) {
	if (_126e418f0_close((*this)._field_handle) == -1LL) {
		return _127627350_get_last_fs_error();
	}
	return 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275c8a10_File &_Src) {
	_Stream << "File{";
	_Stream << "handle:" << _Src._field_handle;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1275e3c20_Status::_method_is_dir(void) {
	return ((*this)._field_mode & 16384LL) == 16384LL;
}



inline jule::Bool _1275e3c20_Status::_method_is_reg(void) {
	return ((*this)._field_mode & 32768LL) == 32768LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275e3c20_Status &_Src) {
	_Stream << "Status{";
	_Stream << "mode:" << _Src._field_mode << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d1920_accept_range &_Src) {
	_Stream << "accept_range{";
	_Stream << "lo:" << _Src._field_lo << ", ";
	_Stream << "hi:" << _Src._field_hi;
	_Stream << "}";
	return _Stream;
}



inline jule::Int _127941de0_Token::_method_prec(void) {
	if ((*this)._field_id != 7LLU) {
		return -1LL;
	}
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!((jule::Str("*", 1)) == _match_expr || (jule::Str("%", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr || (jule::Str(">>", 2)) == _match_expr || (jule::Str("<<", 2)) == _match_expr || (jule::Str("&", 1)) == _match_expr)) { goto _case_end_5369201728; }
		_case_begin_5369201728:;
		{
			return 5LL;
		}
		goto _match_end_5369200848;
		_case_end_5369201728:;
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr || (jule::Str("^", 1)) == _match_expr)) { goto _case_end_5369201136; }
		_case_begin_5369201136:;
		{
			return 4LL;
		}
		goto _match_end_5369200848;
		_case_end_5369201136:;
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("=", 1)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str("<=", 2)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr)) { goto _case_end_5369201248; }
		_case_begin_5369201248:;
		{
			return 3LL;
		}
		goto _match_end_5369200848;
		_case_end_5369201248:;
		if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_5369201360; }
		_case_begin_5369201360:;
		{
			return 2LL;
		}
		goto _match_end_5369200848;
		_case_end_5369201360:;
		if (!((jule::Str("||", 2)) == _match_expr)) { goto _case_end_5369202224; }
		_case_begin_5369202224:;
		{
			return 1LL;
		}
		goto _match_end_5369200848;
		_case_end_5369202224:;
		_case_begin_5369200368:;
		{
			return -1LL;
		}
		goto _match_end_5369200848;
		_case_end_5369200368:;
		_match_end_5369200848:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _127941de0_Token &_Src) {
	_Stream << "Token{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _127774a70_KindPair &_Src) {
	_Stream << "KindPair{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "id:" << _Src._field_id;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_CommentGroup &_Src) {
	_Stream << "CommentGroup{";
	_Stream << "comments:" << _Src._field_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_NamespaceTypeDecl &_Src) {
	_Stream << "NamespaceTypeDecl{";
	_Stream << "idents:" << _Src._field_idents << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_RefTypeDecl &_Src) {
	_Stream << "RefTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_SlcTypeDecl &_Src) {
	_Stream << "SlcTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_TupleTypeDecl &_Src) {
	_Stream << "TupleTypeDecl{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1275d7180_PtrTypeDecl::_method_is_unsafe(void) {
	return (!(jule::real((*this)._field_elem)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_PtrTypeDecl &_Src) {
	_Stream << "PtrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1275d7180_ArrTypeDecl::_method_auto_sized(void) {
	return (!(jule::real((*this)._field_size)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_ArrTypeDecl &_Src) {
	_Stream << "ArrTypeDecl{";
	_Stream << "elem:" << _Src._field_elem << ", ";
	_Stream << "size:" << _Src._field_size;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_MapTypeDecl &_Src) {
	_Stream << "MapTypeDecl{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_RetTypeDecl &_Src) {
	_Stream << "RetTypeDecl{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_TupleExpr &_Src) {
	_Stream << "TupleExpr{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1275d7180_LitExpr::_method_is_nil(void) {
	return (*this)._field_value == jule::Str("nil", 3);
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_LitExpr &_Src) {
	_Stream << "LitExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_UnsafeExpr &_Src) {
	_Stream << "UnsafeExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1275d7180_IdentExpr::_method_is_self(void) {
	return (*this)._field_ident == jule::Str("self", 4);
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_IdentExpr &_Src) {
	_Stream << "IdentExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_UnaryExpr &_Src) {
	_Stream << "UnaryExpr{";
	_Stream << "op:" << _Src._field_op << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_VariadicExpr &_Src) {
	_Stream << "VariadicExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_CastExpr &_Src) {
	_Stream << "CastExpr{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_NsSelectionExpr &_Src) {
	_Stream << "NsSelectionExpr{";
	_Stream << "ns:" << _Src._field_ns << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_SubIdentExpr &_Src) {
	_Stream << "SubIdentExpr{";
	_Stream << "is_self:" << _Src._field_is_self << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_BinopExpr &_Src) {
	_Stream << "BinopExpr{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1275d7180_FieldExprPair::_method_is_targeted(void) {
	return (*this)._field_field._field_id != 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_FieldExprPair &_Src) {
	_Stream << "FieldExprPair{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_StructLit &_Src) {
	_Stream << "StructLit{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1275d7180_BraceLit::_method_is_empty(void) {
	return (*this)._field_exprs.len() == 0LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_BraceLit &_Src) {
	_Stream << "BraceLit{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_KeyValPair &_Src) {
	_Stream << "KeyValPair{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val << ", ";
	_Stream << "colon:" << _Src._field_colon;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1275d7180_SliceExpr::_method_is_empty(void) {
	return (*this)._field_elems.len() == 0LL;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_SliceExpr &_Src) {
	_Stream << "SliceExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_IndexingExpr &_Src) {
	_Stream << "IndexingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_SlicingExpr &_Src) {
	_Stream << "SlicingExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "start:" << _Src._field_start << ", ";
	_Stream << "to:" << _Src._field_to;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_LabelSt &_Src) {
	_Stream << "LabelSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_FallSt &_Src) {
	_Stream << "FallSt{";
	_Stream << "token:" << _Src._field_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_AssignSt &_Src) {
	_Stream << "AssignSt{";
	_Stream << "declarative:" << _Src._field_declarative << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_ScopeTree &_Src) {
	_Stream << "ScopeTree{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_RetSt &_Src) {
	_Stream << "RetSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1275d7180_Iter::_method_is_inf(void) {
	return (*this)._field_kind == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_Iter &_Src) {
	_Stream << "Iter{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1275d7180_WhileKind::_method_is_while_next(void) {
	return (*this)._field_next != nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_WhileKind &_Src) {
	_Stream << "WhileKind{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "next_token:" << _Src._field_next_token;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_RangeKind &_Src) {
	_Stream << "RangeKind{";
	_Stream << "in_token:" << _Src._field_in_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_Conditional &_Src) {
	_Stream << "Conditional{";
	_Stream << "head:" << _Src._field_head << ", ";
	_Stream << "tail:" << _Src._field_tail << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_MatchCase &_Src) {
	_Stream << "MatchCase{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _127b065b0_FileInfo &_Src) {
	_Stream << "FileInfo{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _127b06690_Stmt &_Src) {
	_Stream << "Stmt{";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "terminated:" << _Src._field_terminated;
	_Stream << "}";
	return _Stream;
}



inline void _127b06690_ScopeParser::_method_stop(void) {
	(*this)._field_pos=-1LL;
}



inline jule::Bool _127b06690_ScopeParser::_method_stopped(void) {
	return (*this)._field_pos == -1LL;
}



inline jule::Bool _127b06690_ScopeParser::_method_finished(void) {
	return (*this)._field_pos >= (*this)._field_stms.len();
}



inline jule::Bool _127b06690_ScopeParser::_method_is_last_st(void) {
	return ((*this)._field_pos + 1LL) >= (*this)._field_stms.len();
}



inline void _127b06690_ScopeParser::_method_push_err(_127941de0_Token _15127_token,jule::Str _15141_key) {
	(*this)._field_p->_method_push_err(_15127_token,_15141_key,jule::Slice<jule::Any>({}));
}



inline void _127b06690_ScopeParser::_method_insert_as_next(jule::Slice<_127941de0_Token> _15337_tokens) {
	(*this)._field_stms=append((*this)._field_stms.slice(0LL,static_cast<jule::Int>((*this)._field_pos + 1LL)),(*this)._field_stms.slice(static_cast<jule::Int>((*this)._field_pos)));
	(*this)._field_stms[static_cast<jule::Int>((*this)._field_pos + 1LL)]=jule::new_struct<_127b06690_Stmt>(new( std::nothrow ) _127b06690_Stmt(_15337_tokens,jule::Bool()));
}



inline jule::Ref<_127b06690_Stmt> _127b06690_ScopeParser::_method_next(void) {
	((*this)._field_pos)++;
	return (*this)._field_stms[static_cast<jule::Int>((*this)._field_pos)];
}



inline jule::Ref<_1275d7180_ScopeTree> _127b06690_ScopeParser::_method_build_scope(jule::Slice<_127941de0_Token> _16334_tokens) {
	jule::Ref<_1275d7180_ScopeTree> _16417_s = _127b06690_new_scope();
	_16417_s->_field_parent=(*this)._field_s;
	_127b06690_ScopeParser _16617_ssp = _127b06690_ScopeParser((*this)._field_p,jule::Ref<_1275d7180_ScopeTree>(),jule::Slice<jule::Ref<_127b06690_Stmt>>(),jule::Int());
	_16617_ssp._method_build(_16334_tokens,_16417_s);
	return _16417_s;
}



inline jule::Any _127b06690_ScopeParser::_method_build_var_st(jule::Slice<_127941de0_Token> _17335_tokens) {
	jule::Ref<_1275d7180_VarDecl> _17417_v = (*this)._field_p->_method_build_var(_17335_tokens);
	_17417_v->_field_scope=(*this)._field_s;
	return _17417_v;
}



inline jule::Any _127b06690_ScopeParser::_method_build_ret_st(jule::Slice<_127941de0_Token> _17935_tokens) {
	jule::Ref<_1275d7180_RetSt> _18017_st = jule::new_struct<_1275d7180_RetSt>(new( std::nothrow ) _1275d7180_RetSt(_17935_tokens[static_cast<jule::Int>(0LL)],jule::Ref<_1275d7180_Expr>()));
	if (_17935_tokens.len() > 1LL) {
		_17935_tokens=_17935_tokens.slice(static_cast<jule::Int>(1LL));
		_18017_st->_field_expr=(*this)._field_p->_method_build_expr(_17935_tokens);
	}
	return _18017_st;
}



inline jule::Any _127b06690_ScopeParser::_method_build_while_next_iter(jule::Ref<_127b06690_Stmt> _19044_s) {
	jule::Ref<_1275d7180_Iter> _19117_it = jule::new_struct<_1275d7180_Iter>(new( std::nothrow ) _1275d7180_Iter(_19044_s->_field_tokens[static_cast<jule::Int>(0LL)],jule::Any(),jule::Ref<_1275d7180_ScopeTree>()));
	jule::Slice<_127941de0_Token> _19417_tokens = _19044_s->_field_tokens.slice(static_cast<jule::Int>(1LL));
	jule::Ref<_1275d7180_WhileKind> _19517_kind = jule::new_struct<_1275d7180_WhileKind>(new( std::nothrow ) _1275d7180_WhileKind());
	if (_19417_tokens.len() > 0LL) {
		_19517_kind->_field_expr=(*this)._field_p->_method_build_expr(_19417_tokens);
	}
	if ((*this)._method_is_last_st()) {
		(*this)._method_push_err(_19117_it->_field_token,jule::Str("invalid_syntax", 14));
		return nullptr;
	}
	_19417_tokens=(*this)._method_next()->_field_tokens;
	jule::Slice<_127941de0_Token> _20717_st_tokens = _127b10a80_get_block_expr(_19417_tokens);
	if (_20717_st_tokens.len() > 0LL) {
		jule::Ref<_127b06690_Stmt> _20921_s = jule::new_struct<_127b06690_Stmt>(new( std::nothrow ) _127b06690_Stmt(_20717_st_tokens,_19044_s->_field_terminated));
		_19517_kind->_field_next_token=_20717_st_tokens[static_cast<jule::Int>(0LL)];
		_19517_kind->_field_next=(*this)._method_build_st(_20921_s);
	}
	jule::I64 _21717_i = _20717_st_tokens.len();
	jule::Slice<_127941de0_Token> _21817_block_tokens = _127b060e0_range(_21717_i,jule::Str("{", 1),jule::Str("}", 1),_19417_tokens);
	if (_21817_block_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_19117_it->_field_token,jule::Str("body_not_exist", 14));
		return nullptr;
	}
	if (_21717_i < _19417_tokens.len()) {
		(*this)._method_push_err(_19417_tokens[static_cast<jule::Int>(_21717_i)],jule::Str("invalid_syntax", 14));
	}
	_19117_it->_field_scope=(*this)._method_build_scope(_21817_block_tokens);
	_19117_it->_field_kind=jule::Any(_19517_kind);
	return _19117_it;
}



inline jule::Ref<_1275d7180_WhileKind> _127b06690_ScopeParser::_method_build_while_iter_kind(jule::Slice<_127941de0_Token> _23444_tokens) {
	return jule::new_struct<_1275d7180_WhileKind>(new( std::nothrow ) _1275d7180_WhileKind((*this)._field_p->_method_build_expr(_23444_tokens),jule::Any(),_127941de0_Token()));
}



inline jule::Slice<jule::Slice<_127941de0_Token>> _127b06690_ScopeParser::_method_get_range_kind_keys_tokens(jule::Slice<_127941de0_Token> _24049_toks) {
	jule::Slice<jule::Slice<_127941de0_Token>> _24118_vars;
	jule::Slice<_136e99d00_Log> _24124_errs;
	std::tie(_24118_vars,_24124_errs) = _127b060e0_parts(_24049_toks,8LLU,true);
	(*this)._field_p->_field_errors=append((*this)._field_p->_field_errors,_24124_errs);
	return _24118_vars;
}



inline jule::Ref<_1275d7180_VarDecl> _127b06690_ScopeParser::_method_build_range_kind_key(jule::Slice<_127941de0_Token> _24643_tokens) {
	if (_24643_tokens.len() == 0LL) {
		return jule::new_ref<_1275d7180_VarDecl>();
	}
	jule::Ref<_1275d7180_VarDecl> _25017_key = jule::new_struct<_1275d7180_VarDecl>(new( std::nothrow ) _1275d7180_VarDecl(jule::Ref<_1275d7180_ScopeTree>(),_24643_tokens[static_cast<jule::Int>(0LL)],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1275d7180_CommentGroup>(),jule::Ref<_1275d7180_TypeDecl>(),jule::Ref<_1275d7180_Expr>()));
	if (_25017_key->_field_token._field_id == 36LLU) {
		_25017_key->_field_mutable=true;
		if (_24643_tokens.len() == 1LL) {
			(*this)._method_push_err(_25017_key->_field_token,jule::Str("invalid_syntax", 14));
		}
		_25017_key->_field_token=_24643_tokens[static_cast<jule::Int>(1LL)];
	} else if (_24643_tokens.len() > 1LL) {
		(*this)._method_push_err(_24643_tokens[static_cast<jule::Int>(1LL)],jule::Str("invalid_syntax", 14));
	}
	if (_25017_key->_field_token._field_id != 2LLU) {
		(*this)._method_push_err(_25017_key->_field_token,jule::Str("invalid_syntax", 14));
		return jule::new_ref<_1275d7180_VarDecl>();
	}
	_25017_key->_field_ident=_25017_key->_field_token._field_kind;
	return _25017_key;
}



inline jule::Slice<jule::Ref<_1275d7180_VarDecl>> _127b06690_ScopeParser::_method_build_range_kind_keys(jule::Slice<jule::Slice<_127941de0_Token>> _27044_parts) {
	jule::Slice<jule::Ref<_1275d7180_VarDecl>> _27117_keys = nullptr;
	{
		auto &__julec_range_expr = _27044_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Slice<_127941de0_Token> _127b06690_tokens = *__julec_range_begin;
			_iter_begin_5126041552:;
			{
				_27117_keys=append(_27117_keys,jule::Slice<jule::Ref<_1275d7180_VarDecl>>({(*this)._method_build_range_kind_key(_127b06690_tokens)}));
			}
			_iter_next_5126041552:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127b06690_tokens = *__julec_range_begin; goto _iter_begin_5126041552; }
			_iter_end_5126041552:;
		}
	}
	return _27117_keys;
}



inline void _127b06690_ScopeParser::_method_setup_range_kind_keys_plain(jule::Ref<_1275d7180_RangeKind> _27850_rng,jule::Slice<_127941de0_Token> _27871_tokens) {
	jule::Slice<jule::Slice<_127941de0_Token>> _27917_key_tokens = (*this)._method_get_range_kind_keys_tokens(_27871_tokens);
	if (_27917_key_tokens.len() == 0LL) {
		return;
	}
	if (_27917_key_tokens.len() > 2LL) {
		(*this)._method_push_err(_27850_rng->_field_in_token,jule::Str("much_range_vars", 15));
	}
	jule::Slice<jule::Ref<_1275d7180_VarDecl>> _28617_keys = (*this)._method_build_range_kind_keys(_27917_key_tokens);
	_27850_rng->_field_key_a=_28617_keys[static_cast<jule::Int>(0LL)];
	if (_28617_keys.len() > 1LL) {
		_27850_rng->_field_key_b=_28617_keys[static_cast<jule::Int>(1LL)];
	}
}



inline void _127b06690_ScopeParser::_method_setup_range_kind_keys_explicit(jule::Ref<_1275d7180_RangeKind> _29353_rng,jule::Slice<_127941de0_Token> _29374_tokens) {
	jule::Int _29417_i = 0LL;
	jule::Slice<_127941de0_Token> _29517_rang = _127b060e0_range(_29417_i,jule::Str("(", 1),jule::Str(")", 1),_29374_tokens);
	if (_29417_i < _29374_tokens.len()) {
		(*this)._method_push_err(_29353_rng->_field_in_token,jule::Str("invalid_syntax", 14));
	}
	(*this)._method_setup_range_kind_keys_plain(_29353_rng,_29517_rang);
}



inline void _127b06690_ScopeParser::_method_setup_range_kind_keys(jule::Ref<_1275d7180_RangeKind> _30244_rng,jule::Slice<_127941de0_Token> _30265_tokens) {
	if (_30265_tokens[static_cast<jule::Int>(0LL)]._field_id == 3LLU) {
		if (_30265_tokens[static_cast<jule::Int>(0LL)]._field_kind != jule::Str("(", 1)) {
			(*this)._method_push_err(_30265_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14));
			return;
		}
		(*this)._method_setup_range_kind_keys_explicit(_30244_rng,_30265_tokens);
		return;
	}
	(*this)._method_setup_range_kind_keys_plain(_30244_rng,_30265_tokens);
}



inline jule::Ref<_1275d7180_RangeKind> _127b06690_ScopeParser::_method_build_range_iter_kind(jule::Slice<_127941de0_Token> _31444_var_tokens,jule::Slice<_127941de0_Token> _31469_expr_tokens,_127941de0_Token _31491_in_token) {
	jule::Ref<_1275d7180_RangeKind> _31517_rng = jule::new_struct<_1275d7180_RangeKind>(new( std::nothrow ) _1275d7180_RangeKind(_31491_in_token,jule::Ref<_1275d7180_Expr>(),jule::Ref<_1275d7180_VarDecl>(),jule::Ref<_1275d7180_VarDecl>()));
	if (_31469_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_31517_rng->_field_in_token,jule::Str("missing_expr", 12));
		return _31517_rng;
	}
	_31517_rng->_field_expr=(*this)._field_p->_method_build_expr(_31469_expr_tokens);
	if (_31444_var_tokens.len() > 0LL) {
		(*this)._method_setup_range_kind_keys(_31517_rng,_31444_var_tokens);
	}
	return _31517_rng;
}



inline jule::Any _127b06690_ScopeParser::_method_build_common_iter_kind(jule::Slice<_127941de0_Token> _32945_tokens,_127941de0_Token _32962_err_tok) {
	jule::Int _33017_brace_n = 0LL;
	{
		auto &__julec_range_expr = _32945_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _127b06690_i = 0;
			_127941de0_Token _127b06690_tok = *__julec_range_begin;
			_iter_begin_5126098720:;
			{
				if (_127b06690_tok._field_id == 3LLU) {
					{
						auto &_match_expr{ _127b06690_tok._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_5126104016; }
						_case_begin_5126104016:;
						{
							(_33017_brace_n)++;
							goto _iter_next_5126098720;
						}
						goto _match_end_5126101984;
						_case_end_5126104016:;
						_case_begin_5126102896:;
						{
							(_33017_brace_n)--;
						}
						goto _match_end_5126101984;
						_case_end_5126102896:;
						_match_end_5126101984:;
					}
				}
				if (_33017_brace_n != 0LL) {
					goto _iter_next_5126098720;
				}
				{
					auto &_match_expr{ _127b06690_tok._field_id };
					if (!((15LLU) == _match_expr)) { goto _case_end_5126106240; }
					_case_begin_5126106240:;
					{
						jule::Slice<_127941de0_Token> _34925_decl_tokens = _32945_tokens.slice(0LL,static_cast<jule::Int>(_127b06690_i));
						jule::Slice<_127941de0_Token> _35025_expr_tokens = _32945_tokens.slice(static_cast<jule::Int>(_127b06690_i + 1LL));
						return (*this)._method_build_range_iter_kind(_34925_decl_tokens,_35025_expr_tokens,_127b06690_tok);
					}
					goto _match_end_5126106768;
					_case_end_5126106240:;
					_match_end_5126106768:;
				}
			}
			_iter_next_5126098720:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_127b06690_i; _127b06690_tok = *__julec_range_begin; goto _iter_begin_5126098720; }
			_iter_end_5126098720:;
		}
	}
	return (*this)._method_build_while_iter_kind(_32945_tokens);
}



inline jule::Any _127b06690_ScopeParser::_method_build_common_iter(jule::Slice<_127941de0_Token> _35740_tokens) {
	jule::Ref<_1275d7180_Iter> _35817_it = jule::new_struct<_1275d7180_Iter>(new( std::nothrow ) _1275d7180_Iter(_35740_tokens[static_cast<jule::Int>(0LL)],jule::Any(),jule::Ref<_1275d7180_ScopeTree>()));
	_35740_tokens=_35740_tokens.slice(static_cast<jule::Int>(1LL));
	if (_35740_tokens.len() == 0LL) {
		(*this)._method_stop();
		(*this)._method_push_err(_35817_it->_field_token,jule::Str("body_not_exist", 14));
		return nullptr;
	}
	jule::Slice<_127941de0_Token> _36717_expr_tokens = _127b10a80_get_block_expr(_35740_tokens);
	if (_36717_expr_tokens.len() > 0LL) {
		_35817_it->_field_kind=(*this)._method_build_common_iter_kind(_36717_expr_tokens,_35817_it->_field_token);
	}
	jule::I64 _37117_i = _36717_expr_tokens.len();
	jule::Slice<_127941de0_Token> _37217_scope_tokens = _127b060e0_range(_37117_i,jule::Str("{", 1),jule::Str("}", 1),_35740_tokens);
	if (_37217_scope_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_35817_it->_field_token,jule::Str("body_not_exist", 14));
		return nullptr;
	}
	if (_37117_i < _35740_tokens.len()) {
		(*this)._method_push_err(_35740_tokens[static_cast<jule::Int>(_37117_i)],jule::Str("invalid_syntax", 14));
	}
	_35817_it->_field_scope=(*this)._method_build_scope(_37217_scope_tokens);
	return _35817_it;
}



inline jule::Any _127b06690_ScopeParser::_method_buid_iter_st(jule::Ref<_127b06690_Stmt> _38535_st) {
	if (_38535_st->_field_terminated) {
		return (*this)._method_build_while_next_iter(_38535_st);
	}
	return (*this)._method_build_common_iter(_38535_st->_field_tokens);
}



inline jule::Any _127b06690_ScopeParser::_method_build_break_st(jule::Slice<_127941de0_Token> _39237_tokens) {
	jule::Ref<_1275d7180_BreakSt> _39317_brk = jule::new_struct<_1275d7180_BreakSt>(new( std::nothrow ) _1275d7180_BreakSt(_39237_tokens[static_cast<jule::Int>(0LL)],_127941de0_Token()));
	if (_39237_tokens.len() > 1LL) {
		if (_39237_tokens[static_cast<jule::Int>(1LL)]._field_id != 2LLU) {
			(*this)._method_push_err(_39237_tokens[static_cast<jule::Int>(1LL)],jule::Str("invalid_syntax", 14));
		} else {
			_39317_brk->_field_label=_39237_tokens[static_cast<jule::Int>(1LL)];
			if (_39237_tokens.len() > 2LL) {
				(*this)._method_push_err(_39237_tokens[static_cast<jule::Int>(1LL)],jule::Str("invalid_syntax", 14));
			}
		}
	}
	return _39317_brk;
}



inline jule::Any _127b06690_ScopeParser::_method_build_cont_st(jule::Slice<_127941de0_Token> _40936_tokens) {
	jule::Ref<_1275d7180_ContSt> _41017_cont = jule::new_struct<_1275d7180_ContSt>(new( std::nothrow ) _1275d7180_ContSt(_40936_tokens[static_cast<jule::Int>(0LL)],_127941de0_Token()));
	if (_40936_tokens.len() > 1LL) {
		if (_40936_tokens[static_cast<jule::Int>(1LL)]._field_id != 2LLU) {
			(*this)._method_push_err(_40936_tokens[static_cast<jule::Int>(1LL)],jule::Str("invalid_syntax", 14));
		} else {
			_41017_cont->_field_label=_40936_tokens[static_cast<jule::Int>(1LL)];
			if (_40936_tokens.len() > 2LL) {
				(*this)._method_push_err(_40936_tokens[static_cast<jule::Int>(1LL)],jule::Str("invalid_syntax", 14));
			}
		}
	}
	return _41017_cont;
}



inline jule::Ref<_1275d7180_If> _127b06690_ScopeParser::_method_build_if(jule::Slice<_127941de0_Token>& _42632_tokens) {
	jule::Ref<_1275d7180_If> _42717_model = jule::new_struct<_1275d7180_If>(new( std::nothrow ) _1275d7180_If(_42632_tokens[static_cast<jule::Int>(0LL)],jule::Ref<_1275d7180_Expr>(),jule::Ref<_1275d7180_ScopeTree>()));
	_42632_tokens=_42632_tokens.slice(static_cast<jule::Int>(1LL));
	jule::Slice<_127941de0_Token> _43117_expr_tokens = _127b10a80_get_block_expr(_42632_tokens);
	jule::Int _43217_i = 0LL;
	if (_43117_expr_tokens.len() == 0LL) {
		(*this)._method_push_err(_42717_model->_field_token,jule::Str("missing_expr", 12));
	} else {
		_43217_i=static_cast<jule::I64>(_43117_expr_tokens.len());
	}
	jule::Slice<_127941de0_Token> _43817_scope_tokens = _127b060e0_range(_43217_i,jule::Str("{", 1),jule::Str("}", 1),_42632_tokens);
	if (_43817_scope_tokens == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_42717_model->_field_token,jule::Str("body_not_exist", 14));
		return jule::new_ref<_1275d7180_If>();
	}
	if (_43217_i < _42632_tokens.len()) {
		if (_42632_tokens[static_cast<jule::Int>(_43217_i)]._field_id == 17LLU) {
			_42632_tokens=_42632_tokens.slice(static_cast<jule::Int>(_43217_i));
		} else {
			(*this)._method_push_err(_42632_tokens[static_cast<jule::Int>(_43217_i)],jule::Str("invalid_syntax", 14));
			_42632_tokens=nullptr;
		}
	}
	_42717_model->_field_expr=(*this)._field_p->_method_build_expr(_43117_expr_tokens);
	_42717_model->_field_scope=(*this)._method_build_scope(_43817_scope_tokens);
	return _42717_model;
}



inline jule::Ref<_1275d7180_Else> _127b06690_ScopeParser::_method_build_else(jule::Slice<_127941de0_Token> _45733_tokens) {
	jule::Ref<_1275d7180_Else> _45817_els = jule::new_struct<_1275d7180_Else>(new( std::nothrow ) _1275d7180_Else(_45733_tokens[static_cast<jule::Int>(0LL)],jule::Ref<_1275d7180_ScopeTree>()));
	_45733_tokens=_45733_tokens.slice(static_cast<jule::Int>(1LL));
	jule::Int _46217_i = 0LL;
	jule::Slice<_127941de0_Token> _46317_scope_tokens = _127b060e0_range(_46217_i,jule::Str("{", 1),jule::Str("}", 1),_45733_tokens);
	if (_46317_scope_tokens == nullptr) {
		if (_46217_i < _45733_tokens.len()) {
			(*this)._method_push_err(_45817_els->_field_token,jule::Str("else_have_expr", 14));
		} else {
			(*this)._method_stop();
			(*this)._method_push_err(_45817_els->_field_token,jule::Str("body_not_exist", 14));
		}
		return jule::new_ref<_1275d7180_Else>();
	}
	if (_46217_i < _45733_tokens.len()) {
		(*this)._method_push_err(_45733_tokens[static_cast<jule::Int>(_46217_i)],jule::Str("invalid_syntax", 14));
	}
	_45817_els->_field_scope=(*this)._method_build_scope(_46317_scope_tokens);
	return _45817_els;
}



inline jule::Any _127b06690_ScopeParser::_method_build_if_else_chain(jule::Slice<_127941de0_Token> _48042_tokens) {
	jule::Ref<_1275d7180_Conditional> _48117_chain = jule::new_struct<_1275d7180_Conditional>(new( std::nothrow ) _1275d7180_Conditional((*this)._method_build_if(_48042_tokens),jule::Slice<jule::Ref<_1275d7180_If>>(),jule::Ref<_1275d7180_Else>()));
	if ((!(jule::real(_48117_chain->_field_head)))) {
		return nullptr;
	}
	_iter_begin_5126223776:;
	if (!(_48042_tokens != nullptr)) { goto _iter_end_5126223776; }
	{
		if (_48042_tokens[static_cast<jule::Int>(0LL)]._field_id != 17LLU) {
			goto _iter_end_5126223776;
		}
		if ((_48042_tokens.len() > 1LL) && (_48042_tokens[static_cast<jule::Int>(1LL)]._field_id == 16LLU)) {
			_48042_tokens=_48042_tokens.slice(static_cast<jule::Int>(1LL));
			jule::Ref<_1275d7180_If> _49325_elif = (*this)._method_build_if(_48042_tokens);
			_48117_chain->_field_tail=append(_48117_chain->_field_tail,jule::Slice<jule::Ref<_1275d7180_If>>({_49325_elif}));
			goto _iter_next_5126223776;
		}
		_48117_chain->_field_default=(*this)._method_build_else(_48042_tokens);
		goto _iter_end_5126223776;
	}
	_iter_next_5126223776:;
	goto _iter_begin_5126223776;
	_iter_end_5126223776:;
	return _48117_chain;
}



inline jule::Any _127b06690_ScopeParser::_method_build_comment_st(_127941de0_Token _50335_token) {
	return _127b060e0_build_comment(_50335_token);
}



inline jule::Any _127b06690_ScopeParser::_method_build_call_st(jule::Slice<_127941de0_Token> _50736_tokens) {
	_127941de0_Token _50813_token = _50736_tokens[static_cast<jule::Int>(0LL)];
	if (_127b10a80_is_fn_call(_50736_tokens) == nullptr) {
		(*this)._method_push_err(_50813_token,jule::Str("expr_not_func_call", 18));
	}
	jule::Ref<_1275d7180_Expr> _51217_expr = (*this)._field_p->_method_build_expr(_50736_tokens);
	if (jule::real(_51217_expr) && (!(_51217_expr->_method_is_fn_call()))) {
		(*this)._method_push_err(_50813_token,jule::Str("invalid_syntax", 14));
	}
	return _51217_expr;
}



inline jule::Any _127b06690_ScopeParser::_method_build_co_call_st(jule::Slice<_127941de0_Token> _51939_tokens) {
	_51939_tokens=_51939_tokens.slice(static_cast<jule::Int>(1LL));
	jule::Any _52117_cc = (*this)._method_build_call_st(_51939_tokens);
	_52117_cc.operator jule::Ref<_1275d7180_Expr>()->_field_kind.operator jule::Ref<_1275d7180_FnCallExpr>()->_field_concurrent=true;
	return _52117_cc;
}



inline jule::Any _127b06690_ScopeParser::_method_build_goto_st(jule::Slice<_127941de0_Token> _52636_tokens) {
	jule::Ref<_1275d7180_GotoSt> _52717_gt = jule::new_struct<_1275d7180_GotoSt>(new( std::nothrow ) _1275d7180_GotoSt(_52636_tokens[static_cast<jule::Int>(0LL)],_127941de0_Token()));
	if (_52636_tokens.len() == 1LL) {
		(*this)._method_push_err(_52717_gt->_field_token,jule::Str("missing_goto_label", 18));
		return nullptr;
	} else if (_52636_tokens.len() > 2LL) {
		(*this)._method_push_err(_52636_tokens[static_cast<jule::Int>(2LL)],jule::Str("invalid_syntax", 14));
	}
	_127941de0_Token _53617_ident_token = _52636_tokens[static_cast<jule::Int>(1LL)];
	if (_53617_ident_token._field_id != 2LLU) {
		(*this)._method_push_err(_53617_ident_token,jule::Str("invalid_syntax", 14));
		return _52717_gt;
	}
	_52717_gt->_field_label=_53617_ident_token;
	return _52717_gt;
}



inline jule::Any _127b06690_ScopeParser::_method_build_fall_st(jule::Slice<_127941de0_Token> _54536_tokens) {
	jule::Ref<_1275d7180_FallSt> _54617_fll = jule::new_struct<_1275d7180_FallSt>(new( std::nothrow ) _1275d7180_FallSt(_54536_tokens[static_cast<jule::Int>(0LL)]));
	if (_54536_tokens.len() > 1LL) {
		(*this)._method_push_err(_54536_tokens[static_cast<jule::Int>(1LL)],jule::Str("invalid_syntax", 14));
	}
	return _54617_fll;
}



inline jule::Any _127b06690_ScopeParser::_method_build_type_alias_st(jule::Slice<_127941de0_Token> _55542_tokens) {
	jule::Ref<_1275d7180_TypeAliasDecl> _55617_tad = (*this)._field_p->_method_build_type_alias_decl(_55542_tokens);
	_55617_tad->_field_scope=(*this)._field_s;
	return _55617_tad;
}



inline jule::Slice<jule::Ref<_1275d7180_Expr>> _127b06690_ScopeParser::_method_build_case_exprs(jule::Slice<_127941de0_Token>& _56140_tokens,jule::Bool _56157_type_match) {
	jule::Slice<jule::Ref<_1275d7180_Expr>> _56217_exprs = nullptr;
	jule::Fn<void(jule::Slice<_127941de0_Token>,_127941de0_Token)> _56313_push_expr = jule::Fn<void(jule::Slice<_127941de0_Token>,_127941de0_Token)>([=](jule::Slice<_127941de0_Token> _56332_tokens,_127941de0_Token _56353_token) mutable -> void {
		if (_56332_tokens.len() > 0LL) {
			if (_56157_type_match) {
				jule::Int _56629_i = 0LL;
				jule::Ref<_1275d7180_TypeDecl> _56730_t;
				jule::Bool _56733_ok;
				std::tie(_56730_t,_56733_ok) = (*this)._field_p->_method_build_type(_56332_tokens,(&(_56629_i)),true);
				if (_56733_ok) {
					_56217_exprs=append(_56217_exprs,jule::Slice<jule::Ref<_1275d7180_Expr>>({jule::new_struct<_1275d7180_Expr>(new( std::nothrow ) _1275d7180_Expr(_56353_token,_56730_t))}));
				}
				if (_56629_i < _56332_tokens.len()) {
					(*this)._method_push_err(_56332_tokens[static_cast<jule::Int>(_56629_i)],jule::Str("invalid_syntax", 14));
				}
				return;
			}
			_56217_exprs=append(_56217_exprs,jule::Slice<jule::Ref<_1275d7180_Expr>>({(*this)._field_p->_method_build_expr(_56332_tokens)}));
		}
	});
	jule::Int _58317_brace_n = 0LL;
	jule::Int _58417_j = 0LL;
	{
		auto &__julec_range_expr = _56140_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _127b06690_i = 0;
			_127941de0_Token _127b06690_tok = *__julec_range_begin;
			_iter_begin_5126318432:;
			{
				if (_127b06690_tok._field_id == 3LLU) {
					{
						auto &_match_expr{ _127b06690_tok._field_kind };
						if (!((jule::Str("(", 1)) == _match_expr || (jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr)) { goto _case_end_5126323200; }
						_case_begin_5126323200:;
						{
							(_58317_brace_n)++;
						}
						goto _match_end_5126321168;
						_case_end_5126323200:;
						_case_begin_5126322080:;
						{
							(_58317_brace_n)--;
						}
						goto _match_end_5126321168;
						_case_end_5126322080:;
						_match_end_5126321168:;
					}
					goto _iter_next_5126318432;
				} else if (_58317_brace_n != 0LL) {
					goto _iter_next_5126318432;
				}
				{
					if (!(((_127b06690_tok._field_id == 7LLU) && (_127b06690_tok._field_kind == jule::Str("|", 1))))) { goto _case_end_5126324992; }
					_case_begin_5126324992:;
					{
						_56313_push_expr(_56140_tokens.slice(static_cast<jule::Int>(_58417_j),static_cast<jule::Int>(_127b06690_i)),_127b06690_tok);
						_58417_j=_127b06690_i + 1LL;
					}
					goto _match_end_5126324464;
					_case_end_5126324992:;
					if (!((_127b06690_tok._field_id == 11LLU))) { goto _case_end_5126325104; }
					_case_begin_5126325104:;
					{
						_56313_push_expr(_56140_tokens.slice(static_cast<jule::Int>(_58417_j),static_cast<jule::Int>(_127b06690_i)),_127b06690_tok);
						_56140_tokens=_56140_tokens.slice(static_cast<jule::Int>(_127b06690_i + 1LL));
						return _56217_exprs;
					}
					goto _match_end_5126324464;
					_case_end_5126325104:;
					_match_end_5126324464:;
				}
			}
			_iter_next_5126318432:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_127b06690_i; _127b06690_tok = *__julec_range_begin; goto _iter_begin_5126318432; }
			_iter_end_5126318432:;
		}
	}
	(*this)._method_push_err(_56140_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14));
	_56140_tokens=nullptr;
	return nullptr;
}



inline jule::Ref<_1275d7180_ScopeTree> _127b06690_ScopeParser::_method_build_case_scope(jule::Slice<_127941de0_Token>& _61640_tokens) {
	jule::Int _61717_n = 0LL;
	_iter_begin_5126341472:;
	{
		jule::Int _61921_i = 0LL;
		jule::Slice<_127941de0_Token> _62022_next;
		std::tie(_62022_next,std::ignore) = _127b06690_skip_st(_61921_i,_61640_tokens.slice(static_cast<jule::Int>(_61717_n)));
		if (_62022_next.len() == 0LL) {
			goto _iter_end_5126341472;
		}
		_127941de0_Token _62417_tok = _62022_next[static_cast<jule::Int>(0LL)];
		if ((_62417_tok._field_id != 7LLU) || (_62417_tok._field_kind != jule::Str("|", 1))) {
			_61717_n+=static_cast<jule::I64>(_62022_next.len());
			goto _iter_next_5126341472;
		}
		jule::Ref<_1275d7180_ScopeTree> _62921_scope = (*this)._method_build_scope(_61640_tokens.slice(0LL,static_cast<jule::Int>(_61717_n)));
		_61640_tokens=_61640_tokens.slice(static_cast<jule::Int>(_61717_n));
		return _62921_scope;
	}
	_iter_next_5126341472:;
	goto _iter_begin_5126341472;
	_iter_end_5126341472:;
	jule::Ref<_1275d7180_ScopeTree> _63317_scope = (*this)._method_build_scope(_61640_tokens);
	_61640_tokens=nullptr;
	return _63317_scope;
}



inline std::tuple<jule::Ref<_1275d7180_Case>,jule::Bool> _127b06690_ScopeParser::_method_build_case(jule::Slice<_127941de0_Token>& _63834_tokens,jule::Bool _63851_type_match) {
	jule::Ref<_1275d7180_Case> _63917_c = jule::new_struct<_1275d7180_Case>(new( std::nothrow ) _1275d7180_Case(_63834_tokens[static_cast<jule::Int>(0LL)],jule::Ref<_1275d7180_ScopeTree>(),jule::Slice<jule::Ref<_1275d7180_Expr>>()));
	_63834_tokens=_63834_tokens.slice(static_cast<jule::Int>(1LL));
	_63917_c->_field_exprs=(*this)._method_build_case_exprs(_63834_tokens,_63851_type_match);
	_63917_c->_field_scope=(*this)._method_build_case_scope(_63834_tokens);
	jule::Bool _64513_is_default = _63917_c->_field_exprs.len() == 0LL;
	return std::make_tuple(_63917_c,_64513_is_default);
}



inline std::tuple<jule::Slice<jule::Ref<_1275d7180_Case>>,jule::Ref<_1275d7180_Else>> _127b06690_ScopeParser::_method_build_cases(jule::Slice<_127941de0_Token> _64934_tokens,jule::Bool _64951_type_match) {
	jule::Slice<jule::Ref<_1275d7180_Case>> _65017_cases = nullptr;
	jule::Ref<_1275d7180_Else> _65117_def = jule::new_ref<_1275d7180_Else>();
	_iter_begin_5102798128:;
	if (!(_64934_tokens.len() > 0LL)) { goto _iter_end_5102798128; }
	{
		_127941de0_Token _65321_tok = _64934_tokens[static_cast<jule::Int>(0LL)];
		if (_65321_tok._field_id == 18LLU) {
			_64934_tokens=_64934_tokens.slice(static_cast<jule::Int>(1LL));
			goto _iter_next_5102798128;
		}
		if ((_65321_tok._field_id != 7LLU) || (_65321_tok._field_kind != jule::Str("|", 1))) {
			(*this)._method_push_err(_65321_tok,jule::Str("invalid_syntax", 14));
			goto _iter_end_5102798128;
		}
		jule::Ref<_1275d7180_Case> _66422_c;
		jule::Bool _66425_is_default;
		std::tie(_66422_c,_66425_is_default) = (*this)._method_build_case(_64934_tokens,_64951_type_match);
		if (_66425_is_default) {
			_66422_c->_field_token=_65321_tok;
			if ((!(jule::real(_65117_def)))) {
				_65117_def=jule::new_struct<_1275d7180_Else>(new( std::nothrow ) _1275d7180_Else(_66422_c->_field_token,_66422_c->_field_scope));
			} else {
				(*this)._method_push_err(_65321_tok,jule::Str("invalid_syntax", 14));
			}
		} else {
			_65017_cases=append(_65017_cases,jule::Slice<jule::Ref<_1275d7180_Case>>({_66422_c}));
		}
	}
	_iter_next_5102798128:;
	goto _iter_begin_5102798128;
	_iter_end_5102798128:;
	return std::make_tuple(_65017_cases,_65117_def);
}



inline jule::Ref<_1275d7180_MatchCase> _127b06690_ScopeParser::_method_build_match_case(jule::Slice<_127941de0_Token> _68239_tokens) {
	jule::Ref<_1275d7180_MatchCase> _68317_m = jule::new_struct<_1275d7180_MatchCase>(new( std::nothrow ) _1275d7180_MatchCase(_68239_tokens[static_cast<jule::Int>(0LL)],jule::Bool(),jule::Ref<_1275d7180_Expr>(),jule::Slice<jule::Ref<_1275d7180_Case>>(),jule::Ref<_1275d7180_Else>()));
	_68239_tokens=_68239_tokens.slice(static_cast<jule::Int>(1LL));
	if ((_68239_tokens.len() > 0LL) && (_68239_tokens[static_cast<jule::Int>(0LL)]._field_id == 10LLU)) {
		_68317_m->_field_type_match=true;
		_68239_tokens=_68239_tokens.slice(static_cast<jule::Int>(1LL));
	}
	jule::Slice<_127941de0_Token> _69317_expr_tokens = _127b10a80_get_block_expr(_68239_tokens);
	if (_69317_expr_tokens.len() > 0LL) {
		_68317_m->_field_expr=(*this)._field_p->_method_build_expr(_69317_expr_tokens);
	} else if (_68317_m->_field_type_match) {
		(*this)._method_push_err(_68317_m->_field_token,jule::Str("missing_expr", 12));
	}
	jule::I64 _70017_i = _69317_expr_tokens.len();
	jule::Slice<_127941de0_Token> _70117_block_toks = _127b060e0_range(_70017_i,jule::Str("{", 1),jule::Str("}", 1),_68239_tokens);
	if (_70117_block_toks == nullptr) {
		(*this)._method_stop();
		(*this)._method_push_err(_68317_m->_field_token,jule::Str("body_not_exist", 14));
		return jule::new_ref<_1275d7180_MatchCase>();
	}
	std::tie(_68317_m->_field_cases,_68317_m->_field_default) = (*this)._method_build_cases(_70117_block_toks,_68317_m->_field_type_match);
	return _68317_m;
}



inline jule::Ref<_1275d7180_ScopeTree> _127b06690_ScopeParser::_method_build_scope_st(jule::Slice<_127941de0_Token> _71237_tokens) {
	jule::Bool _71317_is_unsafe = false;
	jule::Bool _71417_is_deferred = false;
	_127941de0_Token _71517_token = _71237_tokens[static_cast<jule::Int>(0LL)];
	if (_71517_token._field_id == 35LLU) {
		_71317_is_unsafe=true;
		_71237_tokens=_71237_tokens.slice(static_cast<jule::Int>(1LL));
		if (_71237_tokens.len() == 0LL) {
			(*this)._method_push_err(_71517_token,jule::Str("invalid_syntax", 14));
			return jule::new_ref<_1275d7180_ScopeTree>();
		}
		_71517_token=_71237_tokens[static_cast<jule::Int>(0LL)];
		if (_71517_token._field_id == 37LLU) {
			_71417_is_deferred=true;
			_71237_tokens=_71237_tokens.slice(static_cast<jule::Int>(1LL));
			if (_71237_tokens.len() == 0LL) {
				(*this)._method_push_err(_71517_token,jule::Str("invalid_syntax", 14));
				return jule::new_ref<_1275d7180_ScopeTree>();
			}
		}
	} else if (_71517_token._field_id == 37LLU) {
		_71417_is_deferred=true;
		_71237_tokens=_71237_tokens.slice(static_cast<jule::Int>(1LL));
		if (_71237_tokens.len() == 0LL) {
			(*this)._method_push_err(_71517_token,jule::Str("invalid_syntax", 14));
			return jule::new_ref<_1275d7180_ScopeTree>();
		}
	}
	jule::Int _74117_i = 0LL;
	jule::Slice<_127941de0_Token> _74217_scope_tokens = _127b060e0_range(_74117_i,jule::Str("{", 1),jule::Str("}", 1),_71237_tokens);
	if (_74217_scope_tokens == nullptr) {
		(*this)._method_push_err(_71517_token,jule::Str("invalid_syntax", 14));
		return jule::new_ref<_1275d7180_ScopeTree>();
	} else if (_74117_i < _71237_tokens.len()) {
		(*this)._method_push_err(_71237_tokens[static_cast<jule::Int>(_74117_i)],jule::Str("invalid_syntax", 14));
	}
	jule::Ref<_1275d7180_ScopeTree> _74917_scope = (*this)._method_build_scope(_74217_scope_tokens);
	_74917_scope->_field_unsafety=_71317_is_unsafe;
	_74917_scope->_field_deferred=_71417_is_deferred;
	return _74917_scope;
}



inline jule::Ref<_1275d7180_LabelSt> _127b06690_ScopeParser::_method_build_label_st(jule::Slice<_127941de0_Token> _75537_tokens) {
	jule::Ref<_1275d7180_LabelSt> _75617_lbl = jule::new_struct<_1275d7180_LabelSt>(new( std::nothrow ) _1275d7180_LabelSt(_75537_tokens[static_cast<jule::Int>(0LL)],_75537_tokens[static_cast<jule::Int>(0LL)]._field_kind));
	if (_75537_tokens.len() > 2LL) {
		_75537_tokens=_75537_tokens.slice(static_cast<jule::Int>(2LL));
		(*this)._method_insert_as_next(_75537_tokens);
	}
	return _75617_lbl;
}



inline std::tuple<jule::Any,jule::Bool> _127b06690_ScopeParser::_method_build_id_st(jule::Slice<_127941de0_Token> _77034_tokens) {
	jule::Bool _77063_ok = jule::Bool();
	if (_77034_tokens.len() == 1LL) {
		return std::make_tuple(jule::Any(),_77063_ok);
	}
	_127941de0_Token _77517_token = _77034_tokens[static_cast<jule::Int>(1LL)];
	{
		auto &_match_expr{ _77517_token._field_id };
		if (!((11LLU) == _match_expr)) { goto _case_end_5102887536; }
		_case_begin_5102887536:;
		{
			_77063_ok = true;
			return std::make_tuple((*this)._method_build_label_st(_77034_tokens),_77063_ok);
		}
		goto _match_end_5102883584;
		_case_end_5102887536:;
		_match_end_5102883584:;
	}
	return std::make_tuple(jule::Any(),_77063_ok);
}



inline jule::Ref<_127c1fad0_AssignInfo> _127b06690_ScopeParser::_method_build_assign_info(jule::Slice<_127941de0_Token> _78440_tokens) {
	jule::Ref<_127c1fad0_AssignInfo> _78517_info = jule::new_struct<_127c1fad0_AssignInfo>(new( std::nothrow ) _127c1fad0_AssignInfo(jule::Slice<_127941de0_Token>(),jule::Slice<_127941de0_Token>(),_127941de0_Token(),true));
	jule::Int _78817_brace_n = 0LL;
	{
		auto &__julec_range_expr = _78440_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _127b06690_i = 0;
			_127941de0_Token _127b06690_token = *__julec_range_begin;
			_iter_begin_5102898128:;
			{
				if (_127b06690_token._field_id == 3LLU) {
					{
						auto &_match_expr{ _127b06690_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_5102902880; }
						_case_begin_5102902880:;
						{
							(_78817_brace_n)++;
						}
						goto _match_end_5102900848;
						_case_end_5102902880:;
						_case_begin_5102901760:;
						{
							(_78817_brace_n)--;
						}
						goto _match_end_5102900848;
						_case_end_5102901760:;
						_match_end_5102900848:;
					}
				}
				{
					if (!((_78817_brace_n > 0LL))) { goto _case_end_5102900272; }
					_case_begin_5102900272:;
					{
						goto _iter_next_5102898128;
					}
					goto _match_end_5102904480;
					_case_end_5102900272:;
					if (!((_127b06690_token._field_id != 7LLU))) { goto _case_end_5102900384; }
					_case_begin_5102900384:;
					{
						goto _iter_next_5102898128;
					}
					goto _match_end_5102904480;
					_case_end_5102900384:;
					if (!(((!(_127941de0_is_assign_op(_127b06690_token._field_kind)))))) { goto _case_end_5102900496; }
					_case_begin_5102900496:;
					{
						goto _iter_next_5102898128;
					}
					goto _match_end_5102904480;
					_case_end_5102900496:;
					_match_end_5102904480:;
				}
				_78517_info->_field_l=_78440_tokens.slice(0LL,static_cast<jule::Int>(_127b06690_i));
				if (_78517_info->_field_l.len() == 0LL) {
					_78517_info->_field_ok=false;
				}
				_78517_info->_field_setter=_127b06690_token;
				if ((_127b06690_i + 1LL) >= _78440_tokens.len()) {
					_78517_info->_field_r=nullptr;
					_78517_info->_field_ok=_127941de0_is_postfix_op(_78517_info->_field_setter._field_kind);
					goto _iter_end_5102898128;
				}
				_78517_info->_field_r=_78440_tokens.slice(static_cast<jule::Int>(_127b06690_i + 1LL));
				if (_127941de0_is_postfix_op(_78517_info->_field_setter._field_kind)) {
					if (_78517_info->_field_r.len() > 0LL) {
						(*this)._method_push_err(_78517_info->_field_r[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14));
						_78517_info->_field_r=nullptr;
					}
				}
				goto _iter_end_5102898128;
			}
			_iter_next_5102898128:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_127b06690_i; _127b06690_token = *__julec_range_begin; goto _iter_begin_5102898128; }
			_iter_end_5102898128:;
		}
	}
	return _78517_info;
}



inline jule::Ref<_1275d7180_AssignLeft> _127b06690_ScopeParser::_method_build_assign_l(jule::Slice<_127941de0_Token> _83137_tokens) {
	jule::Ref<_1275d7180_AssignLeft> _83217_l = jule::new_struct<_1275d7180_AssignLeft>(new( std::nothrow ) _1275d7180_AssignLeft(_83137_tokens[static_cast<jule::Int>(0LL)],jule::Bool(),jule::Bool(),jule::Str(),jule::Ref<_1275d7180_Expr>()));
	if (_83137_tokens[static_cast<jule::Int>(0LL)]._field_id == 2LLU) {
		_83217_l->_field_ident=_83217_l->_field_token._field_kind;
	}
	_83217_l->_field_expr=(*this)._field_p->_method_build_expr(_83137_tokens);
	return _83217_l;
}



inline jule::Slice<jule::Ref<_1275d7180_AssignLeft>> _127b06690_ScopeParser::_method_build_assign_ls(jule::Slice<jule::Slice<_127941de0_Token>> _84438_parts) {
	jule::Slice<jule::Ref<_1275d7180_AssignLeft>> _84517_lefts = nullptr;
	{
		auto &__julec_range_expr = _84438_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Slice<_127941de0_Token> _127b06690_part = *__julec_range_begin;
			_iter_begin_5102937920:;
			{
				jule::Ref<_1275d7180_AssignLeft> _84721_l = (*this)._method_build_assign_l(_127b06690_part);
				_84517_lefts=append(_84517_lefts,jule::Slice<jule::Ref<_1275d7180_AssignLeft>>({_84721_l}));
			}
			_iter_next_5102937920:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127b06690_part = *__julec_range_begin; goto _iter_begin_5102937920; }
			_iter_end_5102937920:;
		}
	}
	return _84517_lefts;
}



inline std::tuple<jule::Ref<_1275d7180_AssignSt>,jule::Bool> _127b06690_ScopeParser::_method_build_plain_assign(jule::Slice<_127941de0_Token> _85441_tokens) {
	jule::Ref<_127c1fad0_AssignInfo> _85517_info = (*this)._method_build_assign_info(_85441_tokens);
	if ((!(_85517_info->_field_ok))) {
		return std::make_tuple(jule::new_ref<_1275d7180_AssignSt>(),false);
	}
	jule::Ref<_1275d7180_AssignSt> _86017_assign = jule::new_struct<_1275d7180_AssignSt>(new( std::nothrow ) _1275d7180_AssignSt(jule::Bool(),_85517_info->_field_setter,jule::Slice<jule::Ref<_1275d7180_AssignLeft>>(),jule::Ref<_1275d7180_Expr>()));
	jule::Slice<jule::Slice<_127941de0_Token>> _86418_parts;
	jule::Slice<_136e99d00_Log> _86425_errs;
	std::tie(_86418_parts,_86425_errs) = _127b060e0_parts(_85517_info->_field_l,8LLU,true);
	if (_86425_errs.len() > 0LL) {
		(*this)._field_p->_field_errors=append((*this)._field_p->_field_errors,_86425_errs);
		return std::make_tuple(jule::new_ref<_1275d7180_AssignSt>(),false);
	}
	_86017_assign->_field_left=(*this)._method_build_assign_ls(_86418_parts);
	if (_85517_info->_field_r != nullptr) {
		_86017_assign->_field_right=(*this)._field_p->_method_build_expr(_85517_info->_field_r);
	}
	return std::make_tuple(_86017_assign,true);
}



inline std::tuple<jule::Ref<_1275d7180_AssignSt>,jule::Bool> _127b06690_ScopeParser::_method_build_decl_assign(jule::Slice<_127941de0_Token> _87840_tokens) {
	if (_87840_tokens.len() < 1LL) {
		return std::make_tuple(jule::new_ref<_1275d7180_AssignSt>(),false);
	}
	_87840_tokens=_87840_tokens.slice(static_cast<jule::Int>(1LL));
	_127941de0_Token _88413_token = _87840_tokens[static_cast<jule::Int>(0LL)];
	if ((_88413_token._field_id != 3LLU) || (_88413_token._field_kind != jule::Str("(", 1))) {
		return std::make_tuple(jule::new_ref<_1275d7180_AssignSt>(),false);
	}
	jule::Ref<_1275d7180_AssignSt> _88917_assign = jule::new_struct<_1275d7180_AssignSt>(new( std::nothrow ) _1275d7180_AssignSt(true,_127941de0_Token(),jule::Slice<jule::Ref<_1275d7180_AssignLeft>>(),jule::Ref<_1275d7180_Expr>()));
	jule::Int _89317_i = 0LL;
	jule::Slice<_127941de0_Token> _89417_rang = _127b060e0_range(_89317_i,jule::Str("(", 1),jule::Str(")", 1),_87840_tokens);
	if (_89417_rang == nullptr) {
		(*this)._method_push_err(_88413_token,jule::Str("invalid_syntax", 14));
		return std::make_tuple(jule::new_ref<_1275d7180_AssignSt>(),false);
	} else if ((_89317_i + 1LL) < _87840_tokens.len()) {
		_88917_assign->_field_setter=_87840_tokens[static_cast<jule::Int>(_89317_i)];
		(_89317_i)++;
		_88917_assign->_field_right=(*this)._field_p->_method_build_expr(_87840_tokens.slice(static_cast<jule::Int>(_89317_i)));
	}
	jule::Slice<jule::Slice<_127941de0_Token>> _90518_parts;
	jule::Slice<_136e99d00_Log> _90525_errs;
	std::tie(_90518_parts,_90525_errs) = _127b060e0_parts(_89417_rang,8LLU,true);
	if (_90525_errs.len() > 0LL) {
		(*this)._field_p->_field_errors=append((*this)._field_p->_field_errors,_90525_errs);
		return std::make_tuple(jule::new_ref<_1275d7180_AssignSt>(),false);
	}
	{
		auto &__julec_range_expr = _90518_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Slice<_127941de0_Token> _127b06690_part = *__julec_range_begin;
			_iter_begin_5124614512:;
			{
				jule::Bool _91221_is_mut = false;
				jule::Bool _91321_is_ref = false;
				_127941de0_Token _91517_token = _127b06690_part[static_cast<jule::Int>(0LL)];
				if (_91517_token._field_id == 36LLU) {
					_91221_is_mut=true;
					_127b06690_part=_127b06690_part.slice(static_cast<jule::Int>(1LL));
					if (_127b06690_part.len() == 0LL) {
						(*this)._method_push_err(_91517_token,jule::Str("invalid_syntax", 14));
						goto _iter_next_5124614512;
					}
				}
				if ((_127b06690_part[static_cast<jule::Int>(0LL)]._field_id == 7LLU) && (_127b06690_part[static_cast<jule::Int>(0LL)]._field_kind == jule::Str("&", 1))) {
					_91321_is_ref=true;
					_127b06690_part=_127b06690_part.slice(static_cast<jule::Int>(1LL));
					if (_127b06690_part.len() == 0LL) {
						(*this)._method_push_err(_91517_token,jule::Str("invalid_syntax", 14));
						goto _iter_next_5124614512;
					}
				}
				if (((_127b06690_part[static_cast<jule::Int>(0LL)]._field_id != 2LLU) && (_127b06690_part[static_cast<jule::Int>(0LL)]._field_id != 3LLU)) && (_127b06690_part[static_cast<jule::Int>(0LL)]._field_kind != jule::Str("(", 1))) {
					(*this)._method_push_err(_91517_token,jule::Str("invalid_syntax", 14));
					goto _iter_next_5124614512;
				}
				jule::Ref<_1275d7180_AssignLeft> _94121_l = (*this)._method_build_assign_l(_127b06690_part);
				_94121_l->_field_mutable=_91221_is_mut;
				_94121_l->_field_reference=_91321_is_ref;
				_88917_assign->_field_left=append(_88917_assign->_field_left,jule::Slice<jule::Ref<_1275d7180_AssignLeft>>({_94121_l}));
			}
			_iter_next_5124614512:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127b06690_part = *__julec_range_begin; goto _iter_begin_5124614512; }
			_iter_end_5124614512:;
		}
	}
	return std::make_tuple(_88917_assign,true);
}



inline std::tuple<jule::Ref<_1275d7180_AssignSt>,jule::Bool> _127b06690_ScopeParser::_method_build_assign_st(jule::Slice<_127941de0_Token> _95038_tokens) {
	if ((!(_127c1fad0_check_assign_tokens(_95038_tokens)))) {
		return std::make_tuple(jule::new_ref<_1275d7180_AssignSt>(),false);
	}
	{
		auto &_match_expr{ _95038_tokens[static_cast<jule::Int>(0LL)]._field_id };
		if (!((34LLU) == _match_expr)) { goto _case_end_5124656208; }
		_case_begin_5124656208:;
		{
			return (*this)._method_build_decl_assign(_95038_tokens);
		}
		goto _match_end_5124651744;
		_case_end_5124656208:;
		_case_begin_5124654928:;
		{
			return (*this)._method_build_plain_assign(_95038_tokens);
		}
		goto _match_end_5124651744;
		_case_end_5124654928:;
		_match_end_5124651744:;
	}
}



inline jule::Any _127b06690_ScopeParser::_method_build_st(jule::Ref<_127b06690_Stmt> _96131_st) {
	_127941de0_Token _96217_token = _96131_st->_field_tokens[static_cast<jule::Int>(0LL)];
	if (_96217_token._field_id == 2LLU) {
		jule::Any _96422_s;
		jule::Bool _96425_ok;
		std::tie(_96422_s,_96425_ok) = (*this)._method_build_id_st(_96131_st->_field_tokens);
		if (_96425_ok) {
			return _96422_s;
		}
	}
	jule::Ref<_1275d7180_AssignSt> _97018_s;
	jule::Bool _97021_ok;
	std::tie(_97018_s,_97021_ok) = (*this)._method_build_assign_st(_96131_st->_field_tokens);
	if (_97021_ok) {
		return _97018_s;
	}
	{
		auto &_match_expr{ _96217_token._field_id };
		if (!((38LLU) == _match_expr || (9LLU) == _match_expr || (34LLU) == _match_expr || (36LLU) == _match_expr)) { goto _case_end_5124672304; }
		_case_begin_5124672304:;
		{
			return (*this)._method_build_var_st(_96131_st->_field_tokens);
		}
		goto _match_end_5124669072;
		_case_end_5124672304:;
		if (!((4LLU) == _match_expr)) { goto _case_end_5124669872; }
		_case_begin_5124669872:;
		{
			return (*this)._method_build_ret_st(_96131_st->_field_tokens);
		}
		goto _match_end_5124669072;
		_case_end_5124669872:;
		if (!((12LLU) == _match_expr)) { goto _case_end_5124670768; }
		_case_begin_5124670768:;
		{
			return (*this)._method_buid_iter_st(_96131_st);
		}
		goto _match_end_5124669072;
		_case_end_5124670768:;
		if (!((13LLU) == _match_expr)) { goto _case_end_5124673568; }
		_case_begin_5124673568:;
		{
			return (*this)._method_build_break_st(_96131_st->_field_tokens);
		}
		goto _match_end_5124669072;
		_case_end_5124673568:;
		if (!((14LLU) == _match_expr)) { goto _case_end_5124674000; }
		_case_begin_5124674000:;
		{
			return (*this)._method_build_cont_st(_96131_st->_field_tokens);
		}
		goto _match_end_5124669072;
		_case_end_5124674000:;
		if (!((16LLU) == _match_expr)) { goto _case_end_5124674112; }
		_case_begin_5124674112:;
		{
			return (*this)._method_build_if_else_chain(_96131_st->_field_tokens);
		}
		goto _match_end_5124669072;
		_case_end_5124674112:;
		if (!((18LLU) == _match_expr)) { goto _case_end_5124674224; }
		_case_begin_5124674224:;
		{
			return (*this)._method_build_comment_st(_96217_token);
		}
		goto _match_end_5124669072;
		_case_end_5124674224:;
		if (!((26LLU) == _match_expr)) { goto _case_end_5124674336; }
		_case_begin_5124674336:;
		{
			return (*this)._method_build_co_call_st(_96131_st->_field_tokens);
		}
		goto _match_end_5124669072;
		_case_end_5124674336:;
		if (!((22LLU) == _match_expr)) { goto _case_end_5124674448; }
		_case_begin_5124674448:;
		{
			return (*this)._method_build_goto_st(_96131_st->_field_tokens);
		}
		goto _match_end_5124669072;
		_case_end_5124674448:;
		if (!((32LLU) == _match_expr)) { goto _case_end_5124674560; }
		_case_begin_5124674560:;
		{
			return (*this)._method_build_fall_st(_96131_st->_field_tokens);
		}
		goto _match_end_5124669072;
		_case_end_5124674560:;
		if (!((10LLU) == _match_expr)) { goto _case_end_5124674672; }
		_case_begin_5124674672:;
		{
			return (*this)._method_build_type_alias_st(_96131_st->_field_tokens);
		}
		goto _match_end_5124669072;
		_case_end_5124674672:;
		if (!((27LLU) == _match_expr)) { goto _case_end_5124674784; }
		_case_begin_5124674784:;
		{
			return (*this)._method_build_match_case(_96131_st->_field_tokens);
		}
		goto _match_end_5124669072;
		_case_end_5124674784:;
		if (!((35LLU) == _match_expr || (37LLU) == _match_expr)) { goto _case_end_5124674896; }
		_case_begin_5124674896:;
		{
			return (*this)._method_build_scope_st(_96131_st->_field_tokens);
		}
		goto _match_end_5124669072;
		_case_end_5124674896:;
		if (!((3LLU) == _match_expr)) { goto _case_end_5124675008; }
		_case_begin_5124675008:;
		{
			if (_96217_token._field_kind == jule::Str("{", 1)) {
				return (*this)._method_build_scope_st(_96131_st->_field_tokens);
			}
		}
		goto _match_end_5124669072;
		_case_end_5124675008:;
		_case_begin_5124669328:;
		{
			if (_127b10a80_is_fn_call(_96131_st->_field_tokens) != nullptr) {
				return (*this)._method_build_call_st(_96131_st->_field_tokens);
			}
		}
		goto _match_end_5124669072;
		_case_end_5124669328:;
		_match_end_5124669072:;
	}
	(*this)._method_push_err(_96217_token,jule::Str("invalid_syntax", 14));
	return nullptr;
}



inline void _127b06690_ScopeParser::_method_build(jule::Slice<_127941de0_Token> _103728_tokens,jule::Ref<_1275d7180_ScopeTree> _103749_s) {
	if ((!(jule::real(_103749_s)))) {
		return;
	}
	(*this)._field_stms=_127b06690_split_stms(_103728_tokens);
	(*this)._field_pos=-1LL;
	(*this)._field_s=_103749_s;
	_iter_begin_5124703408:;
	if (!((!((*this)._method_is_last_st())) && (!((*this)._method_finished())))) { goto _iter_end_5124703408; }
	{
		jule::Ref<_127b06690_Stmt> _104621_st = (*this)._method_next();
		jule::Any _104721_data = (*this)._method_build_st(_104621_st);
		if (_104721_data != nullptr) {
			(*this)._field_s->_field_stmts=append((*this)._field_s->_field_stmts,jule::Slice<jule::Any>({_104721_data}));
		}
		if ((*this)._method_stopped()) {
			goto _iter_end_5124703408;
		}
	}
	_iter_next_5124703408:;
	goto _iter_begin_5124703408;
	_iter_end_5124703408:;
}







std::ostream &operator<<(std::ostream &_Stream, const _127b06690_ScopeParser &_Src) {
	_Stream << "ScopeParser{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stms:" << _Src._field_stms << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _127b10a80_CallData &_Src) {
	_Stream << "CallData{";
	_Stream << "expr_tokens:" << _Src._field_expr_tokens << ", ";
	_Stream << "args_tokens:" << _Src._field_args_tokens << ", ";
	_Stream << "generics_tokens:" << _Src._field_generics_tokens;
	_Stream << "}";
	return _Stream;
}



inline void _127b10a80_Precedencer::_method_set(jule::Int _15422_level,jule::Any _15434_expr) {
	{
		auto &__julec_range_expr = (*this)._field_pairs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _127b10a80_i = 0;
			jule::Slice<jule::Any> _127b10a80_pair = *__julec_range_begin;
			_iter_begin_5124716976:;
			{
				jule::Int _15617_pair_level = _127b10a80_pair[static_cast<jule::Int>(0LL)].operator jule::Int();
				if (_15422_level > _15617_pair_level) {
					jule::Slice<jule::Slice<jule::Any>> _15825_first = (*this)._field_pairs.slice(0LL,static_cast<jule::Int>(_127b10a80_i));
					jule::Slice<jule::Slice<jule::Any>> _15925_buffer = jule::Slice<jule::Slice<jule::Any>>({jule::Slice<jule::Any>({jule::Any(_15422_level),_15434_expr})});
					jule::Slice<jule::Slice<jule::Any>> _16025_appended = append(_15925_buffer,(*this)._field_pairs.slice(static_cast<jule::Int>(_127b10a80_i)));
					(*this)._field_pairs=append(_15825_first,_16025_appended);
					return;
				}
			}
			_iter_next_5124716976:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_127b10a80_i; _127b10a80_pair = *__julec_range_begin; goto _iter_begin_5124716976; }
			_iter_end_5124716976:;
		}
	}
	(*this)._field_pairs=append((*this)._field_pairs,jule::Slice<jule::Slice<jule::Any>>({jule::Slice<jule::Any>({jule::Any(_15422_level),_15434_expr})}));
}



inline jule::Any _127b10a80_Precedencer::_method_get_lower(void) {
	jule::I64 _16917_i = (*this)._field_pairs.len() - 1LL;
	_iter_begin_5124735184:;
	if (!(_16917_i >= 0LL)) { goto _iter_end_5124735184; }
	{
		jule::Any _17121_data = (*this)._field_pairs[static_cast<jule::Int>(_16917_i)][static_cast<jule::Int>(1LL)];
		if (_17121_data != nullptr) {
			return _17121_data;
		}
	}
	_iter_next_5124735184:;
	(_16917_i)--;
	goto _iter_begin_5124735184;
	_iter_end_5124735184:;
	return nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _127b10a80_Precedencer &_Src) {
	_Stream << "Precedencer{";
	_Stream << "pairs:" << _Src._field_pairs;
	_Stream << "}";
	return _Stream;
}



inline void _127b10a80_ExprBuilder::_method_push_err(_127941de0_Token _28627_token,jule::Str _28641_key,jule::Slice<jule::Any> _28651_args) {
	(*this)._field_p->_method_push_err(_28627_token,_28641_key,_28651_args);
}



inline jule::Ref<_1275d7180_TupleExpr> _127b10a80_ExprBuilder::_method_build_tuple(jule::Slice<jule::Slice<_127941de0_Token>> _29034_parts) {
	jule::Ref<_1275d7180_TupleExpr> _29117_tuple = jule::new_struct<_1275d7180_TupleExpr>(new( std::nothrow ) _1275d7180_TupleExpr(jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_29034_parts.len())))));
	{
		auto &__julec_range_expr = _29034_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _127b10a80_i = 0;
			jule::Slice<_127941de0_Token> _127b10a80_part = *__julec_range_begin;
			_iter_begin_5124770944:;
			{
				_29117_tuple->_field_expr[static_cast<jule::Int>(_127b10a80_i)]=(*this)._method_build(_127b10a80_part);
			}
			_iter_next_5124770944:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_127b10a80_i; _127b10a80_part = *__julec_range_begin; goto _iter_begin_5124770944; }
			_iter_end_5124770944:;
		}
	}
	return _29117_tuple;
}



inline jule::Ref<_1275d7180_LitExpr> _127b10a80_ExprBuilder::_method_build_lit(_127941de0_Token _30028_token) {
	return jule::new_struct<_1275d7180_LitExpr>(new( std::nothrow ) _1275d7180_LitExpr(_30028_token,_30028_token._field_kind));
}



inline jule::Ref<_1275d7180_TypeDecl> _127b10a80_ExprBuilder::_method_build_primitive_type(_127941de0_Token _30739_token) {
	return _127b2c380_build_prim_type(_30739_token);
}



inline jule::Any _127b10a80_ExprBuilder::_method_build_single(_127941de0_Token _31135_token) {
	{
		auto &_match_expr{ _31135_token._field_id };
		if (!((6LLU) == _match_expr)) { goto _case_end_5124786064; }
		_case_begin_5124786064:;
		{
			return (*this)._method_build_lit(_31135_token);
		}
		goto _match_end_5124784432;
		_case_end_5124786064:;
		if (!((2LLU) == _match_expr || (28LLU) == _match_expr)) { goto _case_end_5124785520; }
		_case_begin_5124785520:;
		{
			return _127b10a80_build_ident_expr(_31135_token);
		}
		goto _match_end_5124784432;
		_case_end_5124785520:;
		if (!((1LLU) == _match_expr)) { goto _case_end_5124785632; }
		_case_begin_5124785632:;
		{
			return (*this)._method_build_primitive_type(_31135_token);
		}
		goto _match_end_5124784432;
		_case_end_5124785632:;
		_case_begin_5124785216:;
		{
			(*this)._method_push_err(_31135_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return nullptr;
		}
		goto _match_end_5124784432;
		_case_end_5124785216:;
		_match_end_5124784432:;
	}
}



inline jule::Ref<_1275d7180_IdentExpr> _127b10a80_ExprBuilder::_method_build_cpp_linked_ident(jule::Slice<_127941de0_Token> _32945_tokens) {
	if (_32945_tokens[static_cast<jule::Int>(0LL)]._field_id != 31LLU) {
		return jule::new_ref<_1275d7180_IdentExpr>();
	} else if (_32945_tokens[static_cast<jule::Int>(1LL)]._field_id != 20LLU) {
		(*this)._method_push_err(_32945_tokens[static_cast<jule::Int>(1LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1275d7180_IdentExpr>();
	}
	_127941de0_Token _33617_token = _32945_tokens[static_cast<jule::Int>(2LL)];
	if (_33617_token._field_id != 2LLU) {
		(*this)._method_push_err(_32945_tokens[static_cast<jule::Int>(2LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1275d7180_IdentExpr>();
	}
	jule::Ref<_1275d7180_IdentExpr> _34117_expr = _127b10a80_build_ident_expr(_33617_token);
	_34117_expr->_field_cpp_linked=true;
	return _34117_expr;
}



inline jule::Ref<_1275d7180_UnaryExpr> _127b10a80_ExprBuilder::_method_build_unary(jule::Slice<_127941de0_Token> _34634_tokens) {
	_127941de0_Token _34717_op = _34634_tokens[static_cast<jule::Int>(0LL)];
	if (_34634_tokens.len() == 1LL) {
		(*this)._method_push_err(_34717_op,jule::Str("missing_expr_for_unary", 22),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1275d7180_UnaryExpr>();
	} else if ((!(_127941de0_is_unary_op(_34717_op._field_kind)))) {
		(*this)._method_push_err(_34717_op,jule::Str("invalid_op_for_unary", 20),jule::Slice<jule::Any>({jule::Any(_34717_op._field_kind)}));
		return jule::new_ref<_1275d7180_UnaryExpr>();
	}
	_34634_tokens=_34634_tokens.slice(static_cast<jule::Int>(1LL));
	return jule::new_struct<_1275d7180_UnaryExpr>(new( std::nothrow ) _1275d7180_UnaryExpr(_34717_op,(*this)._method_build(_34634_tokens)));
}



inline jule::Ref<_1275d7180_SubIdentExpr> _127b10a80_ExprBuilder::_method_build_obj_sub_ident(jule::Slice<_127941de0_Token> _36742_tokens) {
	jule::I64 _36817_i = _36742_tokens.len() - 1LL;
	_127941de0_Token _36917_ident_token = _36742_tokens[static_cast<jule::Int>(_36817_i)];
	(_36817_i)--;
	_36742_tokens=_36742_tokens.slice(0LL,static_cast<jule::Int>(_36817_i));
	if (_36742_tokens.len() == 0LL) {
		(*this)._method_push_err(_36917_ident_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1275d7180_SubIdentExpr>();
	}
	return jule::new_struct<_1275d7180_SubIdentExpr>(new( std::nothrow ) _1275d7180_SubIdentExpr(jule::Bool(),(*this)._method_build(_36742_tokens),_36917_ident_token));
}



inline jule::Ref<_1275d7180_NsSelectionExpr> _127b10a80_ExprBuilder::_method_build_ns_sub_ident(jule::Slice<_127941de0_Token> _38241_tokens) {
	jule::Ref<_1275d7180_NsSelectionExpr> _38317_ns = jule::new_struct<_1275d7180_NsSelectionExpr>(new( std::nothrow ) _1275d7180_NsSelectionExpr());
	{
		auto &__julec_range_expr = _38241_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _127b10a80_i = 0;
			_127941de0_Token _127b10a80_token = *__julec_range_begin;
			_iter_begin_5124837568:;
			{
				if ((_127b10a80_i % 2LL) == 0LL) {
					if (_127b10a80_token._field_id != 2LLU) {
						(*this)._method_push_err(_127b10a80_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
					}
					_38317_ns->_field_ns=append(_38317_ns->_field_ns,jule::Slice<_127941de0_Token>({_127b10a80_token}));
				} else if (_127b10a80_token._field_id != 23LLU) {
					(*this)._method_push_err(_127b10a80_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				}
			}
			_iter_next_5124837568:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_127b10a80_i; _127b10a80_token = *__julec_range_begin; goto _iter_begin_5124837568; }
			_iter_end_5124837568:;
		}
	}
	_38317_ns->_field_ident=_38317_ns->_field_ns[static_cast<jule::Int>(_38317_ns->_field_ns.len() - 1LL)];
	_38317_ns->_field_ns=_38317_ns->_field_ns.slice(0LL,static_cast<jule::Int>(_38317_ns->_field_ns.len() - 1LL));
	return _38317_ns;
}



inline jule::Ref<_1275d7180_TypeDecl> _127b10a80_ExprBuilder::_method_build_type(jule::Slice<_127941de0_Token> _39933_tokens) {
	jule::Int _40017_i = 0LL;
	jule::Ref<_1275d7180_TypeDecl> _40118_t;
	jule::Bool _40121_ok;
	std::tie(_40118_t,_40121_ok) = (*this)._field_p->_method_build_type(_39933_tokens,(&(_40017_i)),false);
	if ((!(_40121_ok))) {
		(*this)._method_push_err(_39933_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1275d7180_TypeDecl>();
	}
	if (_40017_i < _39933_tokens.len()) {
		(*this)._method_push_err(_39933_tokens[static_cast<jule::Int>(_40017_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	return _40118_t;
}



inline jule::Any _127b10a80_ExprBuilder::_method_build_sub_ident(jule::Slice<_127941de0_Token> _41338_tokens) {
	jule::I64 _41413_i = _41338_tokens.len() - 2LL;
	_127941de0_Token _41513_token = _41338_tokens[static_cast<jule::Int>(_41413_i)];
	{
		auto &_match_expr{ _41513_token._field_id };
		if (!((20LLU) == _match_expr)) { goto _case_end_5124873104; }
		_case_begin_5124873104:;
		{
			return (*this)._method_build_obj_sub_ident(_41338_tokens);
		}
		goto _match_end_5124871824;
		_case_end_5124873104:;
		if (!((23LLU) == _match_expr)) { goto _case_end_5124873216; }
		_case_begin_5124873216:;
		{
			return (*this)._method_build_ns_sub_ident(_41338_tokens);
		}
		goto _match_end_5124871824;
		_case_end_5124873216:;
		if (!((3LLU) == _match_expr)) { goto _case_end_5124873328; }
		_case_begin_5124873328:;
		{
			if (_41513_token._field_kind == jule::Str("]", 1)) {
				return (*this)._method_build_type(_41338_tokens);
			}
		}
		goto _match_end_5124871824;
		_case_end_5124873328:;
		_match_end_5124871824:;
	}
	(*this)._method_push_err(_41513_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	return nullptr;
}



inline jule::Ref<_1275d7180_VariadicExpr> _127b10a80_ExprBuilder::_method_build_variadic(jule::Slice<_127941de0_Token> _43437_tokens) {
	_127941de0_Token _43517_token = _43437_tokens[static_cast<jule::Int>(_43437_tokens.len() - 1LL)];
	_43437_tokens=_43437_tokens.slice(0LL,static_cast<jule::Int>(_43437_tokens.len() - 1LL));
	return jule::new_struct<_1275d7180_VariadicExpr>(new( std::nothrow ) _1275d7180_VariadicExpr(_43517_token,(*this)._method_build(_43437_tokens)));
}



inline jule::Any _127b10a80_ExprBuilder::_method_build_op_right(jule::Slice<_127941de0_Token> _44337_tokens) {
	_127941de0_Token _44417_token = _44337_tokens[static_cast<jule::Int>(_44337_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _44417_token._field_kind };
		if (!((jule::Str("...", 3)) == _match_expr)) { goto _case_end_5124896640; }
		_case_begin_5124896640:;
		{
			return (*this)._method_build_variadic(_44337_tokens);
		}
		goto _match_end_5124893040;
		_case_end_5124896640:;
		_case_begin_5124893712:;
		{
			(*this)._method_push_err(_44417_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return nullptr;
		}
		goto _match_end_5124893040;
		_case_end_5124893712:;
		_match_end_5124893040:;
	}
}



inline jule::Any _127b10a80_ExprBuilder::_method_build_between_parentheses(jule::Slice<_127941de0_Token> _45548_tokens) {
	_127941de0_Token _45613_token = _45548_tokens[static_cast<jule::Int>(0LL)];
	_45548_tokens=_45548_tokens.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(_45548_tokens.len() - 1LL));
	if (_45548_tokens.len() == 0LL) {
		(*this)._method_push_err(_45613_token,jule::Str("missing_expr", 12),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	return (*this)._method_build(_45548_tokens);
}



inline jule::Ref<_1275d7180_CastExpr> _127b10a80_ExprBuilder::_method_try_build_cast(jule::Slice<_127941de0_Token> _46537_tokens) {
	jule::Int _46617_range_n = 0LL;
	_127941de0_Token _46713_error_token = _46537_tokens[static_cast<jule::Int>(0LL)];
	{
		auto &__julec_range_expr = _46537_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _127b10a80_i = 0;
			_127941de0_Token _127b10a80_token = *__julec_range_begin;
			_iter_begin_5124913408:;
			{
				if (_127b10a80_token._field_id == 3LLU) {
					{
						auto &_match_expr{ _127b10a80_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_5124918160; }
						_case_begin_5124918160:;
						{
							(_46617_range_n)++;
							goto _iter_next_5124913408;
						}
						goto _match_end_5124916128;
						_case_end_5124918160:;
						_case_begin_5124917040:;
						{
							(_46617_range_n)--;
						}
						goto _match_end_5124916128;
						_case_end_5124917040:;
						_match_end_5124916128:;
					}
				}
				if (_46617_range_n > 0LL) {
					goto _iter_next_5124913408;
				} else if ((_127b10a80_i + 1LL) == _46537_tokens.len()) {
					return jule::new_ref<_1275d7180_CastExpr>();
				}
				jule::Slice<_127941de0_Token> _48821_type_tokens = _46537_tokens.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(_127b10a80_i));
				jule::Slice<_127941de0_Token> _48921_expr_tokens = _46537_tokens.slice(static_cast<jule::Int>(_127b10a80_i + 1LL));
				if (_48921_expr_tokens.len() == 0LL) {
					return jule::new_ref<_1275d7180_CastExpr>();
				}
				_127941de0_Token _49617_token = _48921_expr_tokens[static_cast<jule::Int>(0LL)];
				if ((_49617_token._field_id != 3LLU) || (_49617_token._field_kind != jule::Str("(", 1))) {
					return jule::new_ref<_1275d7180_CastExpr>();
				}
				jule::Ref<_1275d7180_CastExpr> _50121_cast = jule::new_struct<_1275d7180_CastExpr>(new( std::nothrow ) _1275d7180_CastExpr());
				if (_48921_expr_tokens.len() == 2LL) {
					(*this)._method_push_err(_46713_error_token,jule::Str("missing_expr", 12),jule::Slice<jule::Any>({}));
				}
				jule::Int _50821_type_index = 0LL;
				jule::Ref<_1275d7180_TypeDecl> _50922_t;
				jule::Bool _50925_ok;
				std::tie(_50922_t,_50925_ok) = (*this)._field_p->_method_build_type(_48821_type_tokens,(&(_50821_type_index)),true);
				if (_50925_ok && (_50821_type_index < _48821_type_tokens.len())) {
					(*this)._method_push_err(_48821_type_tokens[static_cast<jule::Int>(_50821_type_index)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				} else if ((!(_50925_ok))) {
					return _50121_cast;
				}
				_50121_cast->_field_kind=_50922_t;
				jule::Int _51721_i = 0LL;
				_127b060e0_range(_51721_i,jule::Str("(", 1),jule::Str(")", 1),_48921_expr_tokens);
				if (_51721_i < _48921_expr_tokens.len()) {
					return jule::new_ref<_1275d7180_CastExpr>();
				}
				_50121_cast->_field_expr=(*this)._method_build(_48921_expr_tokens.slice(0LL,static_cast<jule::Int>(_51721_i)));
				return _50121_cast;
			}
			_iter_next_5124913408:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_127b10a80_i; _127b10a80_token = *__julec_range_begin; goto _iter_begin_5124913408; }
			_iter_end_5124913408:;
		}
	}
	return jule::new_ref<_1275d7180_CastExpr>();
}



inline void _127b10a80_ExprBuilder::_method_push_arg(jule::Slice<jule::Ref<_1275d7180_Expr>>& _53032_args,jule::Slice<_127941de0_Token> _53051_tokens,_127941de0_Token _53068_err_token) {
	if (_53051_tokens.len() == 0LL) {
		(*this)._method_push_err(_53068_err_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return;
	}
	_53032_args=append(_53032_args,jule::Slice<jule::Ref<_1275d7180_Expr>>({(*this)._method_build_from_tokens(_53051_tokens)}));
}



inline jule::Slice<jule::Ref<_1275d7180_Expr>> _127b10a80_ExprBuilder::_method_build_args(jule::Slice<_127941de0_Token> _53833_tokens) {
	if (_53833_tokens.len() < 2LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1275d7180_Expr>> _54417_args = nullptr;
	jule::Int _54517_last = 0LL;
	jule::Int _54617_range_n = 0LL;
	_53833_tokens=_53833_tokens.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(_53833_tokens.len() - 1LL));
	{
		auto &__julec_range_expr = _53833_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _127b10a80_i = 0;
			_127941de0_Token _127b10a80_token = *__julec_range_begin;
			_iter_begin_5124973168:;
			{
				if (_127b10a80_token._field_id == 3LLU) {
					{
						auto &_match_expr{ _127b10a80_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_5124977696; }
						_case_begin_5124977696:;
						{
							(_54617_range_n)++;
						}
						goto _match_end_5124975664;
						_case_end_5124977696:;
						_case_begin_5124976576:;
						{
							(_54617_range_n)--;
						}
						goto _match_end_5124975664;
						_case_end_5124976576:;
						_match_end_5124975664:;
					}
				}
				if ((_54617_range_n > 0LL) || (_127b10a80_token._field_id != 8LLU)) {
					goto _iter_next_5124973168;
				}
				(*this)._method_push_arg(_54417_args,_53833_tokens.slice(static_cast<jule::Int>(_54517_last),static_cast<jule::Int>(_127b10a80_i)),_127b10a80_token);
				_54517_last=_127b10a80_i + 1LL;
			}
			_iter_next_5124973168:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_127b10a80_i; _127b10a80_token = *__julec_range_begin; goto _iter_begin_5124973168; }
			_iter_end_5124973168:;
		}
	}
	if (_54517_last < _53833_tokens.len()) {
		if (_54517_last == 0LL) {
			if (_53833_tokens.len() > 0LL) {
				(*this)._method_push_arg(_54417_args,_53833_tokens.slice(static_cast<jule::Int>(_54517_last)),_53833_tokens[static_cast<jule::Int>(_54517_last)]);
			}
		} else {
			(*this)._method_push_arg(_54417_args,_53833_tokens.slice(static_cast<jule::Int>(_54517_last)),_53833_tokens[static_cast<jule::Int>(_54517_last - 1LL)]);
		}
	}
	return _54417_args;
}



inline jule::Slice<jule::Ref<_1275d7180_TypeDecl>> _127b10a80_ExprBuilder::_method_build_call_generics(jule::Slice<_127941de0_Token> _58142_tokens) {
	if (_58142_tokens.len() == 0LL) {
		return nullptr;
	}
	_58142_tokens=_58142_tokens.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(_58142_tokens.len() - 1LL));
	jule::Slice<jule::Slice<_127941de0_Token>> _58718_parts;
	jule::Slice<_136e99d00_Log> _58725_errs;
	std::tie(_58718_parts,_58725_errs) = _127b060e0_parts(_58142_tokens,8LLU,true);
	jule::Slice<jule::Ref<_1275d7180_TypeDecl>> _58817_generics = jule::Slice<jule::Ref<_1275d7180_TypeDecl>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_58718_parts.len())));
	(*this)._field_p->_field_errors=append((*this)._field_p->_field_errors,_58725_errs);
	{
		auto &__julec_range_expr = _58718_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _127b10a80_i = 0;
			jule::Slice<_127941de0_Token> _127b10a80_part = *__julec_range_begin;
			_iter_begin_5125005040:;
			{
				if (_127b10a80_part.len() == 0LL) {
					goto _iter_next_5125005040;
				}
				jule::Int _59421_j = 0LL;
				jule::Ref<_1275d7180_TypeDecl> _59522_generic;
				std::tie(_59522_generic,std::ignore) = (*this)._field_p->_method_build_type(_127b10a80_part,(&(_59421_j)),true);
				if (_59421_j < _127b10a80_part.len()) {
					(*this)._method_push_err(_127b10a80_part[static_cast<jule::Int>(_59421_j)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				}
				_58817_generics[static_cast<jule::Int>(_127b10a80_i)]=_59522_generic;
			}
			_iter_next_5125005040:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_127b10a80_i; _127b10a80_part = *__julec_range_begin; goto _iter_begin_5125005040; }
			_iter_end_5125005040:;
		}
	}
	return _58817_generics;
}



inline jule::Ref<_1275d7180_FnCallExpr> _127b10a80_ExprBuilder::_method_build_fn_call(_127941de0_Token _60536_token,jule::Ref<_127b10a80_CallData> _60554_data) {
	return jule::new_struct<_1275d7180_FnCallExpr>(new( std::nothrow ) _1275d7180_FnCallExpr(_60536_token,(*this)._method_build_from_tokens(_60554_data->_field_expr_tokens),(*this)._method_build_call_generics(_60554_data->_field_generics_tokens),(*this)._method_build_args(_60554_data->_field_args_tokens),jule::Bool()));
}



inline jule::Any _127b10a80_ExprBuilder::_method_build_parentheses_range(jule::Slice<_127941de0_Token> _61446_tokens) {
	_127941de0_Token _61517_token = _61446_tokens[static_cast<jule::Int>(0LL)];
	{
		auto &_match_expr{ _61517_token._field_id };
		if (!((3LLU) == _match_expr)) { goto _case_end_5125032336; }
		_case_begin_5125032336:;
		{
			{
				auto &_match_expr{ _61517_token._field_kind };
				if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_5125034288; }
				_case_begin_5125034288:;
				{
					jule::Ref<_1275d7180_CastExpr> _62025_expr = (*this)._method_try_build_cast(_61446_tokens);
					if (jule::real(_62025_expr)) {
						return _62025_expr;
					}
				}
				goto _match_end_5125032864;
				_case_end_5125034288:;
				_match_end_5125032864:;
			}
		}
		goto _match_end_5125030432;
		_case_end_5125032336:;
		_match_end_5125030432:;
	}
	jule::Ref<_127b10a80_CallData> _62717_data = _127b10a80_get_call_data(_61446_tokens);
	if (_62717_data->_field_expr_tokens.len() == 0LL) {
		return (*this)._method_build_between_parentheses(_62717_data->_field_args_tokens);
	}
	return (*this)._method_build_fn_call(_61517_token,_62717_data);
}



inline jule::Ref<_1275d7180_UnsafeExpr> _127b10a80_ExprBuilder::_method_build_unsafe_expr(jule::Slice<_127941de0_Token> _63840_tokens) {
	_127941de0_Token _63917_token = _63840_tokens[static_cast<jule::Int>(0LL)];
	_63840_tokens=_63840_tokens.slice(static_cast<jule::Int>(1LL));
	jule::Int _64117_i = 0LL;
	jule::Slice<_127941de0_Token> _64217_range_tokens = _127b060e0_range(_64117_i,jule::Str("{", 1),jule::Str("}", 1),_63840_tokens);
	if (_64217_range_tokens.len() == 0LL) {
		(*this)._method_push_err(_63840_tokens[static_cast<jule::Int>(0LL)],jule::Str("missing_expr", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1275d7180_UnsafeExpr>();
	}
	return jule::new_struct<_1275d7180_UnsafeExpr>(new( std::nothrow ) _1275d7180_UnsafeExpr(_63917_token,(*this)._method_build_from_tokens(_64217_range_tokens)->_field_kind));
}



inline jule::Ref<_1275d7180_FnDecl> _127b10a80_ExprBuilder::_method_build_anon_fn(jule::Slice<_127941de0_Token> _65336_tokens) {
	return (*this)._field_p->_method_build_fn(_65336_tokens,false,true,false);
}



inline jule::Any _127b10a80_ExprBuilder::_method_build_unsafe(jule::Slice<_127941de0_Token> _65735_tokens) {
	if (_65735_tokens.len() == 0LL) {
		(*this)._method_push_err(_65735_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	{
		auto &_match_expr{ _65735_tokens[static_cast<jule::Int>(1LL)]._field_id };
		if (!((33LLU) == _match_expr)) { goto _case_end_5125070416; }
		_case_begin_5125070416:;
		{
			return (*this)._method_build_anon_fn(_65735_tokens);
		}
		goto _match_end_5125068448;
		_case_end_5125070416:;
		_case_begin_5125069040:;
		{
			return (*this)._method_build_unsafe_expr(_65735_tokens);
		}
		goto _match_end_5125068448;
		_case_end_5125069040:;
		_match_end_5125068448:;
	}
}



inline jule::Slice<jule::Slice<_127941de0_Token>> _127b10a80_ExprBuilder::_method_get_brace_range_lit_expr_parts(jule::Slice<_127941de0_Token> _67453_tokens) {
	if (_67453_tokens.len() < 2LL) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_127941de0_Token>> _68017_parts = nullptr;
	jule::Fn<void(jule::Slice<_127941de0_Token>,_127941de0_Token)> _68213_push = jule::Fn<void(jule::Slice<_127941de0_Token>,_127941de0_Token)>([=](jule::Slice<_127941de0_Token> _68227_part,_127941de0_Token _68242_error_token) mutable -> void {
		if (_68227_part.len() == 0LL) {
			(*this)._method_push_err(_68242_error_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		_68017_parts=append(_68017_parts,jule::Slice<jule::Slice<_127941de0_Token>>({_68227_part}));
	});
	jule::Int _69017_last = 0LL;
	jule::Int _69117_range_n = 0LL;
	_67453_tokens=_67453_tokens.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(_67453_tokens.len() - 1LL));
	{
		auto &__julec_range_expr = _67453_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _127b10a80_i = 0;
			_127941de0_Token _127b10a80_token = *__julec_range_begin;
			_iter_begin_5125088720:;
			{
				if (_127b10a80_token._field_id == 3LLU) {
					{
						auto &_match_expr{ _127b10a80_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_5125096016; }
						_case_begin_5125096016:;
						{
							(_69117_range_n)++;
						}
						goto _match_end_5125093984;
						_case_end_5125096016:;
						_case_begin_5125094896:;
						{
							(_69117_range_n)--;
						}
						goto _match_end_5125093984;
						_case_end_5125094896:;
						_match_end_5125093984:;
					}
				}
				if ((_69117_range_n > 0LL) || (_127b10a80_token._field_id != 8LLU)) {
					goto _iter_next_5125088720;
				}
				_68213_push(_67453_tokens.slice(static_cast<jule::Int>(_69017_last),static_cast<jule::Int>(_127b10a80_i)),_127b10a80_token);
				_69017_last=_127b10a80_i + 1LL;
			}
			_iter_next_5125088720:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_127b10a80_i; _127b10a80_token = *__julec_range_begin; goto _iter_begin_5125088720; }
			_iter_end_5125088720:;
		}
	}
	if (_69017_last < _67453_tokens.len()) {
		if (_69017_last == 0LL) {
			if (_67453_tokens.len() > 0LL) {
				_68213_push(_67453_tokens.slice(static_cast<jule::Int>(_69017_last)),_67453_tokens[static_cast<jule::Int>(_69017_last)]);
			}
		} else {
			_68213_push(_67453_tokens.slice(static_cast<jule::Int>(_69017_last)),_67453_tokens[static_cast<jule::Int>(_69017_last - 1LL)]);
		}
	}
	return _68017_parts;
}



inline jule::Ref<_1275d7180_FieldExprPair> _127b10a80_ExprBuilder::_method_build_field_expr_pair(jule::Slice<_127941de0_Token> _72544_tokens) {
	jule::Ref<_1275d7180_FieldExprPair> _72617_pair = jule::new_struct<_1275d7180_FieldExprPair>(new( std::nothrow ) _1275d7180_FieldExprPair(_72544_tokens[static_cast<jule::Int>(0LL)],jule::Any()));
	_72544_tokens=_72544_tokens.slice(static_cast<jule::Int>(2LL));
	_72617_pair->_field_expr=(*this)._method_build_from_tokens(_72544_tokens)->_field_kind;
	return _72617_pair;
}



inline jule::Any _127b10a80_ExprBuilder::_method_build_struct_lit_expr(jule::Slice<_127941de0_Token> _73444_tokens) {
	_127941de0_Token _73513_token = _73444_tokens[static_cast<jule::Int>(0LL)];
	if (_73513_token._field_id == 2LLU) {
		if (_73444_tokens.len() > 1LL) {
			_127941de0_Token _73821_token = _73444_tokens[static_cast<jule::Int>(1LL)];
			if (_73821_token._field_id == 11LLU) {
				return (*this)._method_build_field_expr_pair(_73444_tokens);
			}
		}
	}
	return (*this)._method_build_from_tokens(_73444_tokens);
}



inline jule::Slice<jule::Any> _127b10a80_ExprBuilder::_method_build_struct_lit_exprs(jule::Slice<_127941de0_Token> _74745_tokens) {
	jule::Slice<jule::Slice<_127941de0_Token>> _74817_parts = (*this)._method_get_brace_range_lit_expr_parts(_74745_tokens);
	if (_74817_parts.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Any> _75317_pairs = jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_74817_parts.len())));
	{
		auto &__julec_range_expr = _74817_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _127b10a80_i = 0;
			jule::Slice<_127941de0_Token> _127b10a80_part = *__julec_range_begin;
			_iter_begin_5125136800:;
			{
				_75317_pairs[static_cast<jule::Int>(_127b10a80_i)]=(*this)._method_build_struct_lit_expr(_127b10a80_part);
			}
			_iter_next_5125136800:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_127b10a80_i; _127b10a80_part = *__julec_range_begin; goto _iter_begin_5125136800; }
			_iter_end_5125136800:;
		}
	}
	return _75317_pairs;
}



inline jule::Ref<_1275d7180_StructLit> _127b10a80_ExprBuilder::_method_build_typed_struct_literal(jule::Slice<_127941de0_Token> _76049_tokens) {
	jule::Int _76117_i = 0LL;
	jule::Ref<_1275d7180_TypeDecl> _76218_t;
	jule::Bool _76221_ok;
	std::tie(_76218_t,_76221_ok) = (*this)._field_p->_method_build_type(_76049_tokens,(&(_76117_i)),true);
	if ((!(_76221_ok))) {
		return jule::new_ref<_1275d7180_StructLit>();
	} else if (_76117_i >= _76049_tokens.len()) {
		(*this)._method_push_err(_76049_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1275d7180_StructLit>();
	}
	_76049_tokens=_76049_tokens.slice(static_cast<jule::Int>(_76117_i));
	_127941de0_Token _77113_token = _76049_tokens[static_cast<jule::Int>(0LL)];
	if ((_77113_token._field_id != 3LLU) || (_77113_token._field_kind != jule::Str("{", 1))) {
		(*this)._method_push_err(_77113_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1275d7180_StructLit>();
	}
	return jule::new_struct<_1275d7180_StructLit>(new( std::nothrow ) _1275d7180_StructLit(_76218_t,(*this)._method_build_struct_lit_exprs(_76049_tokens)));
}



inline jule::Any _127b10a80_ExprBuilder::_method_build_brace_lit_part(jule::Slice<_127941de0_Token> _78343_tokens) {
	jule::Slice<_127941de0_Token> _78418_l;
	jule::Slice<_127941de0_Token> _78425_r;
	std::tie(_78418_l,_78425_r) = _127b10a80_split_colon(_78343_tokens);
	if (_78418_l != nullptr) {
		return jule::new_struct<_1275d7180_KeyValPair>(new( std::nothrow ) _1275d7180_KeyValPair((*this)._method_build_from_tokens(_78418_l)->_field_kind,(*this)._method_build_from_tokens(_78425_r)->_field_kind,_78343_tokens[static_cast<jule::Int>(_78418_l.len())]));
	}
	return (*this)._method_build_from_tokens(_78343_tokens);
}



inline jule::Ref<_1275d7180_BraceLit> _127b10a80_ExprBuilder::_method_build_brace_lit(jule::Slice<_127941de0_Token> _79638_tokens) {
	jule::Ref<_1275d7180_BraceLit> _79717_lit = jule::new_struct<_1275d7180_BraceLit>(new( std::nothrow ) _1275d7180_BraceLit(_79638_tokens[static_cast<jule::Int>(0LL)],jule::Slice<jule::Any>()));
	jule::Slice<jule::Slice<_127941de0_Token>> _80117_parts = (*this)._method_get_brace_range_lit_expr_parts(_79638_tokens);
	if (_80117_parts == nullptr) {
		return _79717_lit;
	}
	_79717_lit->_field_exprs=jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_80117_parts.len())));
	{
		auto &__julec_range_expr = _80117_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _127b10a80_i = 0;
			jule::Slice<_127941de0_Token> _127b10a80_part = *__julec_range_begin;
			_iter_begin_5125177024:;
			{
				_79717_lit->_field_exprs[static_cast<jule::Int>(_127b10a80_i)]=(*this)._method_build_brace_lit_part(_127b10a80_part);
			}
			_iter_next_5125177024:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_127b10a80_i; _127b10a80_part = *__julec_range_begin; goto _iter_begin_5125177024; }
			_iter_end_5125177024:;
		}
	}
	return _79717_lit;
}



inline jule::Any _127b10a80_ExprBuilder::_method_build_brace_range(jule::Slice<_127941de0_Token> _81440_tokens) {
	jule::Slice<_127941de0_Token> _81514_expr_tokens;
	jule::Int _81527_range_n;
	std::tie(_81514_expr_tokens,_81527_range_n) = _127b10a80_get_range_expr_tokens(_81440_tokens);
	{
		if (!((_81514_expr_tokens.len() == 0LL))) { goto _case_end_5125188000; }
		_case_begin_5125188000:;
		{
			return (*this)._method_build_brace_lit(_81440_tokens);
		}
		goto _match_end_5125187552;
		_case_end_5125188000:;
		if (!((_81527_range_n > 0LL))) { goto _case_end_5125188112; }
		_case_begin_5125188112:;
		{
			(*this)._method_push_err(_81440_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return nullptr;
		}
		goto _match_end_5125187552;
		_case_end_5125188112:;
		_match_end_5125187552:;
	}
	{
		auto &_match_expr{ _81514_expr_tokens[static_cast<jule::Int>(0LL)]._field_id };
		if (!((35LLU) == _match_expr)) { goto _case_end_5125195056; }
		_case_begin_5125195056:;
		{
			return (*this)._method_build_unsafe(_81440_tokens);
		}
		goto _match_end_5125190144;
		_case_end_5125195056:;
		if (!((33LLU) == _match_expr)) { goto _case_end_5125195168; }
		_case_begin_5125195168:;
		{
			return (*this)._method_build_anon_fn(_81440_tokens);
		}
		goto _match_end_5125190144;
		_case_end_5125195168:;
		if (!((2LLU) == _match_expr || (31LLU) == _match_expr)) { goto _case_end_5125195280; }
		_case_begin_5125195280:;
		{
			return (*this)._method_build_typed_struct_literal(_81440_tokens);
		}
		goto _match_end_5125190144;
		_case_end_5125195280:;
		_case_begin_5125194752:;
		{
			(*this)._method_push_err(_81514_expr_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return nullptr;
		}
		goto _match_end_5125190144;
		_case_end_5125194752:;
		_match_end_5125190144:;
	}
}



inline jule::Slice<jule::Slice<_127941de0_Token>> _127b10a80_ExprBuilder::_method_get_enumerable_parts(jule::Slice<_127941de0_Token> _84443_tokens) {
	_84443_tokens=_84443_tokens.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(_84443_tokens.len() - 1LL));
	jule::Slice<jule::Slice<_127941de0_Token>> _84618_parts;
	jule::Slice<_136e99d00_Log> _84625_errors;
	std::tie(_84618_parts,_84625_errors) = _127b060e0_parts(_84443_tokens,8LLU,true);
	(*this)._field_p->_field_errors=append((*this)._field_p->_field_errors,_84625_errors);
	return _84618_parts;
}



inline jule::Ref<_1275d7180_SliceExpr> _127b10a80_ExprBuilder::_method_build_slice(jule::Slice<_127941de0_Token> _85134_tokens) {
	jule::Ref<_1275d7180_SliceExpr> _85217_slc = jule::new_struct<_1275d7180_SliceExpr>(new( std::nothrow ) _1275d7180_SliceExpr(_85134_tokens[static_cast<jule::Int>(0LL)],jule::Slice<jule::Any>()));
	jule::Slice<jule::Slice<_127941de0_Token>> _85617_parts = (*this)._method_get_enumerable_parts(_85134_tokens);
	if (_85617_parts.len() == 0LL) {
		return _85217_slc;
	}
	_85217_slc->_field_elems=jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_85617_parts.len())));
	{
		auto &__julec_range_expr = _85617_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _127b10a80_i = 0;
			jule::Slice<_127941de0_Token> _127b10a80_p = *__julec_range_begin;
			_iter_begin_5125220736:;
			{
				_85217_slc->_field_elems[static_cast<jule::Int>(_127b10a80_i)]=(*this)._method_build_from_tokens(_127b10a80_p)->_field_kind;
			}
			_iter_next_5125220736:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_127b10a80_i; _127b10a80_p = *__julec_range_begin; goto _iter_begin_5125220736; }
			_iter_end_5125220736:;
		}
	}
	return _85217_slc;
}



inline jule::Ref<_1275d7180_IndexingExpr> _127b10a80_ExprBuilder::_method_build_indexing(jule::Slice<_127941de0_Token> _86937_expr_tokens,jule::Slice<_127941de0_Token> _87013_tokens,_127941de0_Token _87034_error_token) {
	_87013_tokens=_87013_tokens.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(_87013_tokens.len() - 1LL));
	return jule::new_struct<_1275d7180_IndexingExpr>(new( std::nothrow ) _1275d7180_IndexingExpr(_87034_error_token,(*this)._method_build_from_tokens(_86937_expr_tokens)->_field_kind,(*this)._method_build_from_tokens(_87013_tokens)->_field_kind));
}



inline jule::Ref<_1275d7180_SlicingExpr> _127b10a80_ExprBuilder::_method_build_slicing(jule::Slice<_127941de0_Token> _87936_expr_tokens,jule::Slice<_127941de0_Token> _87962_slicing_tokens,jule::Int _8809_colon,_127941de0_Token _88021_error_token) {
	jule::Ref<_1275d7180_SlicingExpr> _88117_slc = jule::new_struct<_1275d7180_SlicingExpr>(new( std::nothrow ) _1275d7180_SlicingExpr(_88021_error_token,(*this)._method_build_from_tokens(_87936_expr_tokens)->_field_kind,jule::Any(),jule::Any()));
	jule::Slice<_127941de0_Token> _88617_start_expr_tokens = _87962_slicing_tokens.slice(0LL,static_cast<jule::Int>(_8809_colon));
	if (_88617_start_expr_tokens.len() > 0LL) {
		_88117_slc->_field_start=(*this)._method_build_from_tokens(_88617_start_expr_tokens)->_field_kind;
	}
	jule::Slice<_127941de0_Token> _89117_to_expr_tokens = _87962_slicing_tokens.slice(static_cast<jule::Int>(_8809_colon + 1LL));
	if (_89117_to_expr_tokens.len() > 0LL) {
		_88117_slc->_field_to=(*this)._method_build_from_tokens(_89117_to_expr_tokens)->_field_kind;
	}
	return _88117_slc;
}



inline jule::Any _127b10a80_ExprBuilder::_method_build_bracket_range(jule::Slice<_127941de0_Token> _89942_tokens) {
	_127941de0_Token _90017_error_token = _89942_tokens[static_cast<jule::Int>(0LL)];
	jule::Slice<_127941de0_Token> _90118_expr_tokens;
	jule::Int _90131_range_n;
	std::tie(_90118_expr_tokens,_90131_range_n) = _127b10a80_get_range_expr_tokens(_89942_tokens);
	{
		if (!((_90118_expr_tokens.len() == 0LL))) { goto _case_end_5125259088; }
		_case_begin_5125259088:;
		{
			return (*this)._method_build_slice(_89942_tokens);
		}
		goto _match_end_5125258880;
		_case_end_5125259088:;
		if (!(((_90118_expr_tokens.len() == 0LL) || (_90131_range_n > 0LL)))) { goto _case_end_5125259200; }
		_case_begin_5125259200:;
		{
			(*this)._method_push_err(_90017_error_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return nullptr;
		}
		goto _match_end_5125258880;
		_case_end_5125259200:;
		_match_end_5125258880:;
	}
	_89942_tokens=_89942_tokens.slice(static_cast<jule::Int>(_90118_expr_tokens.len()));
	jule::Int _92017_i = 0LL;
	jule::Slice<_127941de0_Token> _92118_slicing_tokens;
	jule::Int _92134_colon;
	std::tie(_92118_slicing_tokens,_92134_colon) = _127b2c380_split_map_range(_89942_tokens,_92017_i);
	if (_92134_colon != -1LL) {
		return (*this)._method_build_slicing(_90118_expr_tokens,_92118_slicing_tokens,_92134_colon,_90017_error_token);
	}
	return (*this)._method_build_indexing(_90118_expr_tokens,_89942_tokens,_90017_error_token);
}



inline jule::Any _127b10a80_ExprBuilder::_method_build_data(jule::Slice<_127941de0_Token> _92833_tokens) {
	{
		auto _match_expr{ _92833_tokens.len() };
		if (!((0LL) == _match_expr)) { goto _case_end_5125274688; }
		_case_begin_5125274688:;
		{
			return nullptr;
		}
		goto _match_end_5125274256;
		_case_end_5125274688:;
		if (!((1LL) == _match_expr)) { goto _case_end_5125275280; }
		_case_begin_5125275280:;
		{
			return (*this)._method_build_single(_92833_tokens[static_cast<jule::Int>(0LL)]);
		}
		goto _match_end_5125274256;
		_case_end_5125275280:;
		if (!((3LL) == _match_expr)) { goto _case_end_5125275392; }
		_case_begin_5125275392:;
		{
			if (_92833_tokens[static_cast<jule::Int>(0LL)]._field_id == 31LLU) {
				return (*this)._method_build_cpp_linked_ident(_92833_tokens);
			}
		}
		goto _match_end_5125274256;
		_case_end_5125275392:;
		_match_end_5125274256:;
	}
	_127941de0_Token _94217_token = _92833_tokens[static_cast<jule::Int>(0LL)];
	{
		auto &_match_expr{ _94217_token._field_id };
		if (!((7LLU) == _match_expr)) { goto _case_end_5125284016; }
		_case_begin_5125284016:;
		{
			if ((_92833_tokens.len() > 1LL) && (_94217_token._field_kind == jule::Str("*", 1))) {
				_94217_token=_92833_tokens[static_cast<jule::Int>(1LL)];
				if ((_94217_token._field_id == 1LLU) || (_94217_token._field_id == 35LLU)) {
					return (*this)._method_build_type(_92833_tokens);
				}
			}
			return (*this)._method_build_unary(_92833_tokens);
		}
		goto _match_end_5125279664;
		_case_end_5125284016:;
		if (!((3LLU) == _match_expr)) { goto _case_end_5125284128; }
		_case_begin_5125284128:;
		{
			if ((_94217_token._field_kind != jule::Str("[", 1)) || (_92833_tokens.len() < 3LL)) {
				goto _match_end_5125279664;
			}
			_127941de0_Token _96017_next = _92833_tokens[static_cast<jule::Int>(1LL)];
			if ((_96017_next._field_id != 3LLU) || (_96017_next._field_kind != jule::Str("]", 1))) {
				goto _match_end_5125279664;
			}
			return (*this)._method_build_type(_92833_tokens);
		}
		goto _match_end_5125279664;
		_case_end_5125284128:;
		_match_end_5125279664:;
	}
	_94217_token=_92833_tokens[static_cast<jule::Int>(_92833_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _94217_token._field_id };
		if (!((2LLU) == _match_expr)) { goto _case_end_5125300976; }
		_case_begin_5125300976:;
		{
			return (*this)._method_build_sub_ident(_92833_tokens);
		}
		goto _match_end_5125297792;
		_case_end_5125300976:;
		if (!((1LLU) == _match_expr)) { goto _case_end_5125301088; }
		_case_begin_5125301088:;
		{
			return (*this)._method_build_type(_92833_tokens);
		}
		goto _match_end_5125297792;
		_case_end_5125301088:;
		if (!((7LLU) == _match_expr)) { goto _case_end_5125301200; }
		_case_begin_5125301200:;
		{
			return (*this)._method_build_op_right(_92833_tokens);
		}
		goto _match_end_5125297792;
		_case_end_5125301200:;
		if (!((3LLU) == _match_expr)) { goto _case_end_5125301312; }
		_case_begin_5125301312:;
		{
			{
				auto &_match_expr{ _94217_token._field_kind };
				if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_5125306720; }
				_case_begin_5125306720:;
				{
					return (*this)._method_build_parentheses_range(_92833_tokens);
				}
				goto _match_end_5125304976;
				_case_end_5125306720:;
				if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_5125306832; }
				_case_begin_5125306832:;
				{
					return (*this)._method_build_brace_range(_92833_tokens);
				}
				goto _match_end_5125304976;
				_case_end_5125306832:;
				if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_5125306944; }
				_case_begin_5125306944:;
				{
					return (*this)._method_build_bracket_range(_92833_tokens);
				}
				goto _match_end_5125304976;
				_case_end_5125306944:;
				_match_end_5125304976:;
			}
		}
		goto _match_end_5125297792;
		_case_end_5125301312:;
		_match_end_5125297792:;
	}
	(*this)._method_push_err(_92833_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	return nullptr;
}



inline jule::Ref<_1275d7180_BinopExpr> _127b10a80_ExprBuilder::_method_build_binop(jule::Slice<_127941de0_Token> _99734_tokens,jule::Int _99751_i) {
	jule::Slice<_127941de0_Token> _99817_left_tokens = _99734_tokens.slice(0LL,static_cast<jule::Int>(_99751_i));
	jule::Slice<_127941de0_Token> _99917_right_tokens = _99734_tokens.slice(static_cast<jule::Int>(_99751_i + 1LL));
	if (_99817_left_tokens.len() == 0LL) {
		(*this)._method_push_err(_99734_tokens[static_cast<jule::Int>(_99751_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1275d7180_BinopExpr>();
	}
	if (_99917_right_tokens.len() == 0LL) {
		(*this)._method_push_err(_99734_tokens[static_cast<jule::Int>(_99751_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1275d7180_BinopExpr>();
	}
	return jule::new_struct<_1275d7180_BinopExpr>(new( std::nothrow ) _1275d7180_BinopExpr((*this)._method_build(_99817_left_tokens),(*this)._method_build(_99917_right_tokens),_99734_tokens[static_cast<jule::Int>(_99751_i)]));
}



inline jule::Any _127b10a80_ExprBuilder::_method_build(jule::Slice<_127941de0_Token> _101828_tokens) {
	jule::Int _101913_i = _127b10a80_find_lowest_prec_op(_101828_tokens);
	if (_101913_i == -1LL) {
		return (*this)._method_build_data(_101828_tokens);
	}
	return (*this)._method_build_binop(_101828_tokens,_101913_i);
}



inline jule::Any _127b10a80_ExprBuilder::_method_build_kind(jule::Slice<_127941de0_Token> _102633_tokens) {
	jule::Slice<jule::Slice<_127941de0_Token>> _102718_parts;
	jule::Slice<_136e99d00_Log> _102725_errors;
	std::tie(_102718_parts,_102725_errors) = _127b060e0_parts(_102633_tokens,8LLU,true);
	if (_102725_errors != nullptr) {
		(*this)._field_p->_field_errors=append((*this)._field_p->_field_errors,_102725_errors);
		return nullptr;
	} else if (_102718_parts.len() > 1LL) {
		return (*this)._method_build_tuple(_102718_parts);
	}
	return (*this)._method_build(_102633_tokens);
}



inline jule::Ref<_1275d7180_Expr> _127b10a80_ExprBuilder::_method_build_from_tokens(jule::Slice<_127941de0_Token> _103740_tokens) {
	_103740_tokens=_127b10a80_eliminate_comments(_103740_tokens);
	if (_103740_tokens.len() == 0LL) {
		return jule::new_ref<_1275d7180_Expr>();
	}
	return jule::new_struct<_1275d7180_Expr>(new( std::nothrow ) _1275d7180_Expr(_103740_tokens[static_cast<jule::Int>(0LL)],(*this)._method_build_kind(_103740_tokens)));
}







std::ostream &operator<<(std::ostream &_Stream, const _127b10a80_ExprBuilder &_Src) {
	_Stream << "ExprBuilder{";
	_Stream << "p:" << _Src._field_p;
	_Stream << "}";
	return _Stream;
}



inline void _127b060e0_Parser::_method_stop(void) {
	jule::drop((*this)._field_ast);
}



inline jule::Bool _127b060e0_Parser::_method_stopped(void) {
	return (!(jule::real((*this)._field_ast)));
}



inline void _127b060e0_Parser::_method_push_err(_127941de0_Token _23027_token,jule::Str _23041_key,jule::Slice<jule::Any> _23051_args) {
	(*this)._field_errors=append((*this)._field_errors,jule::Slice<_136e99d00_Log>({_127b060e0_compiler_err(_23027_token,_23041_key,_23051_args)}));
}



inline jule::Ref<_1275d7180_Expr> _127b060e0_Parser::_method_build_expr(jule::Slice<_127941de0_Token> _23434_tokens) {
	jule::Ref<_127b10a80_ExprBuilder> _23517_ep = jule::new_struct<_127b10a80_ExprBuilder>(new( std::nothrow ) _127b10a80_ExprBuilder(this->self));
	jule::Ref<_1275d7180_Expr> _23617_expr = _23517_ep->_method_build_from_tokens(_23434_tokens);
	return _23617_expr;
}



inline jule::Ref<_1275d7180_Directive> _127b060e0_Parser::_method_get_directive(jule::Ref<_1275d7180_Comment> _24028_c) {
	if (_24028_c->_field_text.len() <= jule::Str("jule:", 5).len()) {
		return jule::new_ref<_1275d7180_Directive>();
	}
	jule::Ref<_1275d7180_Directive> _24517_d = jule::new_struct<_1275d7180_Directive>(new( std::nothrow ) _1275d7180_Directive(_24028_c->_field_token,jule::Str(),jule::Slice<jule::Str>()));
	jule::Str _24913_pragma = _24028_c->_field_token._field_kind.slice(static_cast<jule::Int>(jule::Str("jule:", 5).len()));
	jule::Slice<jule::Str> _25017_parts = _24913_pragma.split(jule::Str(" ", 1),-1LL);
	_24517_d->_field_tag=_25017_parts[static_cast<jule::Int>(0LL)];
	_24517_d->_field_args=_25017_parts.slice(static_cast<jule::Int>(1LL));
	jule::Bool _25617_ok = false;
	{
		auto &__julec_range_expr = _136e9f3c0_DIRECTIVES;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _127b060e0_kind = *__julec_range_begin;
			_iter_begin_5125384160:;
			{
				if (_24517_d->_field_tag == _127b060e0_kind) {
					_25617_ok=true;
					goto _iter_end_5125384160;
				}
			}
			_iter_next_5125384160:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127b060e0_kind = *__julec_range_begin; goto _iter_begin_5125384160; }
			_iter_end_5125384160:;
		}
	}
	if ((!(_25617_ok))) {
		return jule::new_ref<_1275d7180_Directive>();
	}
	return _24517_d;
}



inline void _127b060e0_Parser::_method_push_directive(jule::Ref<_1275d7180_Comment> _27033_c) {
	jule::Ref<_1275d7180_Directive> _27117_d = (*this)._method_get_directive(_27033_c);
	if ((!(jule::real(_27117_d)))) {
		return;
	}
	{
		auto &__julec_range_expr = (*this)._field_directives;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1275d7180_Directive> _127b060e0_pd = *__julec_range_begin;
			_iter_begin_5125393024:;
			{
				if (_27117_d->_field_tag == _127b060e0_pd->_field_tag) {
					return;
				}
			}
			_iter_next_5125393024:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127b060e0_pd = *__julec_range_begin; goto _iter_begin_5125393024; }
			_iter_end_5125393024:;
		}
	}
	(*this)._field_directives=append((*this)._field_directives,jule::Slice<jule::Ref<_1275d7180_Directive>>({_27117_d}));
}



inline void _127b060e0_Parser::_method_process_comment(jule::Ref<_1275d7180_Comment> _28638_c) {
	if (_28638_c->_method_is_directive()) {
		(*this)._method_push_directive(_28638_c);
		return;
	}
	if ((!(jule::real((*this)._field_comment_group)))) {
		(*this)._field_comment_group=jule::new_struct<_1275d7180_CommentGroup>(new( std::nothrow ) _1275d7180_CommentGroup());
	}
	(*this)._field_comment_group->_field_comments=append((*this)._field_comment_group->_field_comments,jule::Slice<jule::Ref<_1275d7180_Comment>>({_28638_c}));
}



inline jule::Ref<_1275d7180_ScopeTree> _127b060e0_Parser::_method_build_scope(jule::Slice<_127941de0_Token> _29735_tokens) {
	jule::Ref<_1275d7180_ScopeTree> _29817_s = _127b06690_new_scope();
	_127b06690_ScopeParser _29917_sp = _127b06690_ScopeParser(this->self,jule::Ref<_1275d7180_ScopeTree>(),jule::Slice<jule::Ref<_127b06690_Stmt>>(),jule::Int());
	_29917_sp._method_build(_29735_tokens,_29817_s);
	return _29817_s;
}



inline std::tuple<jule::Ref<_1275d7180_TypeDecl>,jule::Bool> _127b060e0_Parser::_method___build_type(jule::Slice<_127941de0_Token> _30643_tokens,jule::Int* _30713_i,jule::Bool _30722_err) {
	_127b2c380_TypeBuilder _30817_tb = _127b2c380_TypeBuilder(this->self,_30643_tokens,_30713_i,_30722_err);
	return _30817_tb._method_build();
}



inline std::tuple<jule::Ref<_1275d7180_TypeDecl>,jule::Bool> _127b060e0_Parser::_method_build_type(jule::Slice<_127941de0_Token> _31841_tokens,jule::Int* _31913_i,jule::Bool _31922_err) {
	_127941de0_Token _32013_token = _31841_tokens[static_cast<jule::Int>((*(_31913_i)))];
	jule::Ref<_1275d7180_TypeDecl> _32118_t;
	jule::Bool _32121_ok;
	std::tie(_32118_t,_32121_ok) = this->self->_method___build_type(_31841_tokens,_31913_i,_31922_err);
	if (_31922_err && (!(_32121_ok))) {
		this->self->_method_push_err(_32013_token,jule::Str("invalid_type", 12),jule::Slice<jule::Any>({}));
	}
	return std::make_tuple(_32118_t,_32121_ok);
}



inline jule::Ref<_1275d7180_TypeAliasDecl> _127b060e0_Parser::_method_build_type_alias_decl(jule::Slice<_127941de0_Token> _32845_tokens) {
	jule::Int _32917_i = 1LL;
	if (_32917_i >= _32845_tokens.len()) {
		this->self->_method_push_err(_32845_tokens[static_cast<jule::Int>(_32917_i - 1LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1275d7180_TypeAliasDecl>();
	}
	jule::Ref<_1275d7180_TypeAliasDecl> _33417_tad = jule::new_struct<_1275d7180_TypeAliasDecl>(new( std::nothrow ) _1275d7180_TypeAliasDecl(jule::Ref<_1275d7180_ScopeTree>(),jule::Bool(),jule::Bool(),_32845_tokens[static_cast<jule::Int>(1LL)],_32845_tokens[static_cast<jule::Int>(1LL)]._field_kind,jule::Ref<_1275d7180_TypeDecl>(),jule::Ref<_1275d7180_CommentGroup>()));
	_127941de0_Token _33817_token = _32845_tokens[static_cast<jule::Int>(_32917_i)];
	if (_33817_token._field_id != 2LLU) {
		this->self->_method_push_err(_33817_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	(_32917_i)++;
	if (_32917_i >= _32845_tokens.len()) {
		this->self->_method_push_err(_32845_tokens[static_cast<jule::Int>(_32917_i - 1LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return _33417_tad;
	}
	_33817_token=_32845_tokens[static_cast<jule::Int>(_32917_i)];
	if (_33817_token._field_id != 11LLU) {
		this->self->_method_push_err(_32845_tokens[static_cast<jule::Int>(_32917_i - 1LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return _33417_tad;
	}
	(_32917_i)++;
	if (_32917_i >= _32845_tokens.len()) {
		this->self->_method_push_err(_32845_tokens[static_cast<jule::Int>(_32917_i - 1LL)],jule::Str("missing_type", 12),jule::Slice<jule::Any>({}));
		return _33417_tad;
	}
	jule::Ref<_1275d7180_TypeDecl> _35718_t;
	jule::Bool _35721_ok;
	std::tie(_35718_t,_35721_ok) = this->self->_method_build_type(_32845_tokens,(&(_32917_i)),true);
	_33417_tad->_field_kind=_35718_t;
	if (_35721_ok && (_32917_i < _32845_tokens.len())) {
		this->self->_method_push_err(_32845_tokens[static_cast<jule::Int>(_32917_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	return _33417_tad;
}



inline void _127b060e0_Parser::_method_build_var_type_and_expr(jule::Ref<_1275d7180_VarDecl> _36547_v,jule::Slice<_127941de0_Token> _36564_tokens) {
	jule::Int _36617_i = 0LL;
	_127941de0_Token _36717_tok = _36564_tokens[static_cast<jule::Int>(_36617_i)];
	if (_36717_tok._field_id == 11LLU) {
		(_36617_i)++;
		if ((_36617_i >= _36564_tokens.len()) || ((_36564_tokens[static_cast<jule::Int>(_36617_i)]._field_id == 7LLU) && (_36564_tokens[static_cast<jule::Int>(_36617_i)]._field_kind == jule::Str("=", 1)))) {
			this->self->_method_push_err(_36717_tok,jule::Str("missing_type", 12),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Ref<_1275d7180_TypeDecl> _37522_t;
		jule::Bool _37525_ok;
		std::tie(_37522_t,_37525_ok) = this->self->_method_build_type(_36564_tokens,(&(_36617_i)),true);
		if (_37525_ok) {
			_36547_v->_field_kind=_37522_t;
			if (_36617_i >= _36564_tokens.len()) {
				return;
			}
			_36717_tok=_36564_tokens[static_cast<jule::Int>(_36617_i)];
		}
	}
	if (_36717_tok._field_id == 7LLU) {
		if (_36717_tok._field_kind != jule::Str("=", 1)) {
			this->self->_method_push_err(_36717_tok,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Slice<_127941de0_Token> _39021_expr_tokens = _36564_tokens.slice(static_cast<jule::Int>(_36617_i + 1LL));
		if (_39021_expr_tokens.len() == 0LL) {
			this->self->_method_push_err(_36717_tok,jule::Str("missing_expr", 12),jule::Slice<jule::Any>({}));
			return;
		}
		_36547_v->_field_expr=this->self->_method_build_expr(_39021_expr_tokens);
	} else {
		this->self->_method_push_err(_36717_tok,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
}



inline void _127b060e0_Parser::_method_build_var_common(jule::Ref<_1275d7180_VarDecl> _40140_v,jule::Slice<_127941de0_Token> _40157_tokens) {
	_40140_v->_field_token=_40157_tokens[static_cast<jule::Int>(0LL)];
	if (_40140_v->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_40140_v->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return;
	}
	_40140_v->_field_ident=_40140_v->_field_token._field_kind;
	jule::drop(_40140_v->_field_kind);
	if (_40157_tokens.len() > 1LL) {
		_40157_tokens=_40157_tokens.slice(static_cast<jule::Int>(1LL));
		this->self->_method_build_var_type_and_expr(_40140_v,_40157_tokens);
	}
}



inline void _127b060e0_Parser::_method_build_var_begin(jule::Ref<_1275d7180_VarDecl> _41538_v,jule::Ref<jule::Int> _41555_i,jule::Slice<_127941de0_Token> _41564_tokens) {
	_127941de0_Token _41613_tok = _41564_tokens[static_cast<jule::Int>(_41555_i)];
	{
		auto &_match_expr{ _41613_tok._field_id };
		if (!((38LLU) == _match_expr)) { goto _case_end_5126594928; }
		_case_begin_5126594928:;
		{
			_41538_v->_field_statically=true;
			goto _case_begin_5126595040;
		}
		goto _match_end_5126590864;
		_case_end_5126594928:;
		if (!((34LLU) == _match_expr)) { goto _case_end_5126595040; }
		_case_begin_5126595040:;
		{
			(_41555_i)++;
			if (_41564_tokens[static_cast<jule::Int>(_41555_i)]._field_id == 36LLU) {
				_41538_v->_field_mutable=true;
				(_41555_i)++;
			}
		}
		goto _match_end_5126590864;
		_case_end_5126595040:;
		if (!((9LLU) == _match_expr)) { goto _case_end_5126592464; }
		_case_begin_5126592464:;
		{
			(_41555_i)++;
			if (_41538_v->_field_constant) {
				(*this)._method_push_err(_41613_tok,jule::Str("already_const", 13),jule::Slice<jule::Any>({}));
				goto _match_end_5126590864;
			}
			_41538_v->_field_constant=true;
			if ((!(_41538_v->_field_mutable))) {
				goto _match_end_5126590864;
			}
			goto _case_begin_5126592160;
		}
		goto _match_end_5126590864;
		_case_end_5126592464:;
		_case_begin_5126592160:;
		{
			(*this)._method_push_err(_41613_tok,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_5126590864;
		_case_end_5126592160:;
		_match_end_5126590864:;
	}
	if (_41555_i >= _41564_tokens.len()) {
		(*this)._method_push_err(_41613_tok,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
}



inline jule::Ref<_1275d7180_VarDecl> _127b060e0_Parser::_method_build_var(jule::Slice<_127941de0_Token> _45333_tokens) {
	jule::Ref<jule::Int> _45417_i = jule::new_ref<jule::Int>(0LL);
	jule::Ref<_1275d7180_VarDecl> _45517_v = jule::new_struct<_1275d7180_VarDecl>(new( std::nothrow ) _1275d7180_VarDecl(jule::Ref<_1275d7180_ScopeTree>(),_45333_tokens[static_cast<jule::Int>(_45417_i)],jule::Str(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1275d7180_CommentGroup>(),jule::Ref<_1275d7180_TypeDecl>(),jule::Ref<_1275d7180_Expr>()));
	this->self->_method_build_var_begin(_45517_v,_45417_i,_45333_tokens);
	if (_45417_i >= _45333_tokens.len()) {
		return jule::new_ref<_1275d7180_VarDecl>();
	}
	_45333_tokens=_45333_tokens.slice(static_cast<jule::Int>(_45417_i));
	if ((_45333_tokens[static_cast<jule::Int>(0LL)]._field_id == 7LLU) && (_45333_tokens[static_cast<jule::Int>(0LL)]._field_kind == jule::Str("&", 1))) {
		_45517_v->_field_reference=true;
		if (_45333_tokens.len() == 1LL) {
			return jule::new_ref<_1275d7180_VarDecl>();
		}
		_45333_tokens=_45333_tokens.slice(static_cast<jule::Int>(1LL));
	}
	this->self->_method_build_var_common(_45517_v,_45333_tokens);
	return _45517_v;
}



inline jule::Ref<_1275d7180_GenericDecl> _127b060e0_Parser::_method_build_generic(jule::Slice<_127941de0_Token> _47536_tokens) {
	if (_47536_tokens.len() > 1LL) {
		(*this)._method_push_err(_47536_tokens[static_cast<jule::Int>(1LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1275d7180_GenericDecl> _47917_g = jule::new_struct<_1275d7180_GenericDecl>(new( std::nothrow ) _1275d7180_GenericDecl(_47536_tokens[static_cast<jule::Int>(0LL)],jule::Str()));
	if (_47917_g->_field_token._field_id != 2LLU) {
		(*this)._method_push_err(_47917_g->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	_47917_g->_field_ident=_47917_g->_field_token._field_kind;
	return _47917_g;
}



inline jule::Slice<jule::Ref<_1275d7180_GenericDecl>> _127b060e0_Parser::_method_build_generics(jule::Slice<_127941de0_Token> _48937_tokens,_127941de0_Token _48954_error_token) {
	if (_48937_tokens.len() == 0LL) {
		(*this)._method_push_err(_48954_error_token,jule::Str("missing_expr", 12),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	jule::Slice<jule::Slice<_127941de0_Token>> _49518_parts;
	jule::Slice<_136e99d00_Log> _49525_errors;
	std::tie(_49518_parts,_49525_errors) = _127b060e0_parts(_48937_tokens,8LLU,true);
	(*this)._field_errors=append((*this)._field_errors,_49525_errors);
	jule::Slice<jule::Ref<_1275d7180_GenericDecl>> _49817_generics = jule::Slice<jule::Ref<_1275d7180_GenericDecl>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_49518_parts.len())));
	{
		auto &__julec_range_expr = _49518_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _127b060e0_i = 0;
			jule::Slice<_127941de0_Token> _127b060e0_part = *__julec_range_begin;
			_iter_begin_5126650208:;
			{
				if (_49518_parts.len() > 0LL) {
					_49817_generics[static_cast<jule::Int>(_127b060e0_i)]=(*this)._method_build_generic(_127b060e0_part);
				}
			}
			_iter_next_5126650208:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_127b060e0_i; _127b060e0_part = *__julec_range_begin; goto _iter_begin_5126650208; }
			_iter_end_5126650208:;
		}
	}
	return _49817_generics;
}



inline jule::Ref<_1275d7180_ParamDecl> _127b060e0_Parser::_method_build_self_param(jule::Slice<_127941de0_Token> _50839_tokens) {
	if (_50839_tokens.len() == 0LL) {
		return jule::new_ref<_1275d7180_ParamDecl>();
	}
	jule::Ref<_1275d7180_ParamDecl> _51317_param = jule::new_struct<_1275d7180_ParamDecl>(new( std::nothrow ) _1275d7180_ParamDecl());
	jule::Int _51617_i = 0LL;
	if (_50839_tokens[static_cast<jule::Int>(_51617_i)]._field_id == 36LLU) {
		_51317_param->_field_mutable=true;
		(_51617_i)++;
		if (_51617_i >= _50839_tokens.len()) {
			(*this)._method_push_err(_50839_tokens[static_cast<jule::Int>(_51617_i - 1LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1275d7180_ParamDecl>();
		}
	}
	if (_50839_tokens[static_cast<jule::Int>(_51617_i)]._field_kind == jule::Str("&", 1)) {
		_51317_param->_field_ident=jule::Str("&", 1);
		(_51617_i)++;
		if (_51617_i >= _50839_tokens.len()) {
			(*this)._method_push_err(_50839_tokens[static_cast<jule::Int>(_51617_i - 1LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1275d7180_ParamDecl>();
		}
	}
	if (_50839_tokens[static_cast<jule::Int>(_51617_i)]._field_id == 28LLU) {
		_51317_param->_field_ident+=jule::Str("self", 4);
		_51317_param->_field_token=_50839_tokens[static_cast<jule::Int>(_51617_i)];
		(_51617_i)++;
		if (_51617_i < _50839_tokens.len()) {
			(*this)._method_push_err(_50839_tokens[static_cast<jule::Int>(_51617_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		}
	}
	return _51317_param;
}



inline void _127b060e0_Parser::_method_param_type_begin(jule::Ref<_1275d7180_ParamDecl> _54739_param,jule::Int& _54763_i,jule::Slice<_127941de0_Token> _54771_tokens) {
	_iter_begin_5126682304:;
	if (!(_54763_i < _54771_tokens.len())) { goto _iter_end_5126682304; }
	{
		_127941de0_Token _54917_token = _54771_tokens[static_cast<jule::Int>(_54763_i)];
		if (_54917_token._field_id != 7LLU) {
			return;
		} else if (_54917_token._field_kind != jule::Str("...", 3)) {
			return;
		}
		if (_54739_param->_field_variadic) {
			(*this)._method_push_err(_54917_token,jule::Str("already_variadic", 16),jule::Slice<jule::Any>({}));
			goto _iter_next_5126682304;
		}
		_54739_param->_field_variadic=true;
	}
	_iter_next_5126682304:;
	(_54763_i)++;
	goto _iter_begin_5126682304;
	_iter_end_5126682304:;
}



inline void _127b060e0_Parser::_method_build_param_type(jule::Ref<_1275d7180_ParamDecl> _56440_param,jule::Slice<_127941de0_Token> _56463_tokens,jule::Bool _56480_must_pure) {
	jule::Int _56517_i = 0LL;
	if ((!(_56480_must_pure))) {
		this->self->_method_param_type_begin(_56440_param,_56517_i,_56463_tokens);
		if (_56517_i >= _56463_tokens.len()) {
			return;
		}
	}
	std::tie(_56440_param->_field_kind,std::ignore) = this->self->_method_build_type(_56463_tokens,(&(_56517_i)),true);
	if (_56517_i < _56463_tokens.len()) {
		this->self->_method_push_err(_56463_tokens[static_cast<jule::Int>(_56517_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
}



inline void _127b060e0_Parser::_method_param_body_id(jule::Ref<_1275d7180_ParamDecl> _57832_param,_127941de0_Token _57851_token) {
	if (_127941de0_is_ignore_ident(_57851_token._field_kind)) {
		_57832_param->_field_ident=jule::Str("<anonymous>", 11);
		return;
	}
	_57832_param->_field_ident=_57851_token._field_kind;
}



inline void _127b060e0_Parser::_method_build_param_body(jule::Ref<_1275d7180_ParamDecl> _58640_param,jule::Ref<jule::Int> _58663_i,jule::Slice<_127941de0_Token> _58676_tokens,jule::Bool _58693_must_pure) {
	this->self->_method_param_body_id(_58640_param,_58676_tokens[static_cast<jule::Int>(_58663_i)]);
	_127941de0_Token _58817_tok = _58676_tokens[static_cast<jule::Int>(_58663_i)];
	if ((_58663_i + 1LL) >= _58676_tokens.len()) {
		return;
	} else if (((_58676_tokens.len() - _58663_i) - 1LL) < 2LL) {
		this->self->_method_push_err(_58817_tok,jule::Str("missing_type", 12),jule::Slice<jule::Any>({}));
		return;
	}
	_58817_tok=_58676_tokens[static_cast<jule::Int>(_58663_i + 1LL)];
	if (_58817_tok._field_id != 11LLU) {
		this->self->_method_build_param_type(_58640_param,_58676_tokens,_58693_must_pure);
		return;
	}
	_58676_tokens=_58676_tokens.slice(static_cast<jule::Int>(_58663_i + 2LL));
	this->self->_method_build_param_type(_58640_param,_58676_tokens,_58693_must_pure);
}



inline jule::Ref<_1275d7180_ParamDecl> _127b060e0_Parser::_method_build_param(jule::Slice<_127941de0_Token> _60735_tokens,jule::Bool _60752_must_pure) {
	jule::Ref<_1275d7180_ParamDecl> _60817_param = jule::new_struct<_1275d7180_ParamDecl>(new( std::nothrow ) _1275d7180_ParamDecl(_60735_tokens[static_cast<jule::Int>(0LL)],jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1275d7180_TypeDecl>(),jule::Str()));
	if (_60817_param->_field_token._field_id == 36LLU) {
		_60817_param->_field_mutable=true;
		if (_60735_tokens.len() == 1LL) {
			this->self->_method_push_err(_60735_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1275d7180_ParamDecl>();
		}
		_60735_tokens=_60735_tokens.slice(static_cast<jule::Int>(1LL));
		_60817_param->_field_token=_60735_tokens[static_cast<jule::Int>(0LL)];
	}
	if (_60735_tokens.len() >= 3LL) {
		if ((_60817_param->_field_token._field_id == 7LLU) && (_60817_param->_field_token._field_kind == jule::Str("&", 1))) {
			if (_60735_tokens.len() == 1LL) {
				this->self->_method_push_err(_60735_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return jule::new_ref<_1275d7180_ParamDecl>();
			}
			if ((_60735_tokens[static_cast<jule::Int>(1LL)]._field_id == 2LLU) && (_60735_tokens[static_cast<jule::Int>(2LL)]._field_id == 11LLU)) {
				_60817_param->_field_reference=true;
				_60735_tokens=_60735_tokens.slice(static_cast<jule::Int>(1LL));
				_60817_param->_field_token=_60735_tokens[static_cast<jule::Int>(0LL)];
			}
		}
	}
	if (_60817_param->_field_token._field_id != 2LLU) {
		_60817_param->_field_ident=jule::Str("<anonymous>", 11);
		this->self->_method_build_param_type(_60817_param,_60735_tokens,_60752_must_pure);
	} else {
		jule::Ref<jule::Int> _64421_i = jule::new_ref<jule::Int>(0LL);
		this->self->_method_build_param_body(_60817_param,_64421_i,_60735_tokens,_60752_must_pure);
	}
	return _60817_param;
}



inline void _127b060e0_Parser::_method_check_params(jule::Slice<jule::Ref<_1275d7180_ParamDecl>> _65135_params) {
	{
		auto &__julec_range_expr = _65135_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1275d7180_ParamDecl> _127b060e0_param = *__julec_range_begin;
			_iter_begin_5126771184:;
			{
				if (_127b060e0_param->_method_is_self() || jule::real(_127b060e0_param->_field_kind)) {
					goto _iter_next_5126771184;
				}
				if (_127b060e0_param->_field_token._field_id == 0LLU) {
					(*this)._method_push_err(_127b060e0_param->_field_token,jule::Str("missing_type", 12),jule::Slice<jule::Any>({}));
				} else {
					_127b060e0_param->_field_kind=jule::new_struct<_1275d7180_TypeDecl>(new( std::nothrow ) _1275d7180_TypeDecl(_127b060e0_param->_field_token,jule::new_struct<_1275d7180_IdentTypeDecl>(new( std::nothrow ) _1275d7180_IdentTypeDecl(_127b060e0_param->_field_token,_127b060e0_param->_field_token._field_kind,jule::Bool(),jule::Slice<jule::Ref<_1275d7180_TypeDecl>>()))));
					_127b060e0_param->_field_ident=jule::Str("<anonymous>", 11);
					_127b060e0_param->_field_token=_127941de0_Token();
				}
			}
			_iter_next_5126771184:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127b060e0_param = *__julec_range_begin; goto _iter_begin_5126771184; }
			_iter_end_5126771184:;
		}
	}
}



inline jule::Slice<jule::Ref<_1275d7180_ParamDecl>> _127b060e0_Parser::_method_build_params(jule::Slice<_127941de0_Token> _67236_tokens,jule::Bool _67253_method,jule::Bool _67267_must_pure) {
	jule::Slice<jule::Slice<_127941de0_Token>> _67318_parts;
	jule::Slice<_136e99d00_Log> _67325_errs;
	std::tie(_67318_parts,_67325_errs) = _127b060e0_parts(_67236_tokens,8LLU,true);
	this->self->_field_errors=append(this->self->_field_errors,_67325_errs);
	if (_67318_parts.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1275d7180_ParamDecl>> _67917_params = nullptr;
	if (_67253_method && (_67318_parts.len() > 0LL)) {
		jule::Ref<_1275d7180_ParamDecl> _68121_param = this->self->_method_build_self_param(_67318_parts[static_cast<jule::Int>(0LL)]);
		if (jule::real(_68121_param) && _68121_param->_method_is_self()) {
			_67917_params=append(_67917_params,jule::Slice<jule::Ref<_1275d7180_ParamDecl>>({_68121_param}));
			_67318_parts=_67318_parts.slice(static_cast<jule::Int>(1LL));
		}
	}
	{
		auto &__julec_range_expr = _67318_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Slice<_127941de0_Token> _127b060e0_part = *__julec_range_begin;
			_iter_begin_5126795600:;
			{
				jule::Ref<_1275d7180_ParamDecl> _68921_param = this->self->_method_build_param(_127b060e0_part,_67267_must_pure);
				if (jule::real(_68921_param)) {
					_67917_params=append(_67917_params,jule::Slice<jule::Ref<_1275d7180_ParamDecl>>({_68921_param}));
				}
			}
			_iter_next_5126795600:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127b060e0_part = *__julec_range_begin; goto _iter_begin_5126795600; }
			_iter_end_5126795600:;
		}
	}
	this->self->_method_check_params(_67917_params);
	return _67917_params;
}



inline std::tuple<jule::Ref<_1275d7180_RetTypeDecl>,jule::Bool> _127b060e0_Parser::_method_build_multi_ret_type(jule::Slice<_127941de0_Token> _69944_tokens,jule::Int& _69966_i) {
	jule::Bool _69993_ok = jule::Bool();
	jule::Ref<_1275d7180_RetTypeDecl> _69976_t = jule::Ref<_1275d7180_RetTypeDecl>();
	_69976_t=jule::new_struct<_1275d7180_RetTypeDecl>(new( std::nothrow ) _1275d7180_RetTypeDecl());
	(_69966_i)++;
	if (_69966_i >= _69944_tokens.len()) {
		(_69966_i)--;
		std::tie(_69976_t->_field_kind,_69993_ok) = this->self->_method_build_type(_69944_tokens,(&(_69966_i)),false);
		return std::make_tuple(_69976_t,_69993_ok);
	}
	(_69966_i)--;
	jule::Slice<_127941de0_Token> _70917_range_tokens = _127b060e0_range(_69966_i,jule::Str("(", 1),jule::Str(")", 1),_69944_tokens);
	jule::Slice<jule::Ref<_1275d7180_ParamDecl>> _71017_params = this->self->_method_build_params(_70917_range_tokens,false,true);
	jule::Slice<jule::Ref<_1275d7180_TypeDecl>> _71217_types = jule::Slice<jule::Ref<_1275d7180_TypeDecl>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_71017_params.len())));
	{
		auto &__julec_range_expr = _71017_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _127b060e0_i = 0;
			jule::Ref<_1275d7180_ParamDecl> _127b060e0_param = *__julec_range_begin;
			_iter_begin_5126824704:;
			{
				_71217_types[static_cast<jule::Int>(_127b060e0_i)]=_127b060e0_param->_field_kind;
				if (_127b060e0_param->_field_ident != jule::Str("<anonymous>", 11)) {
					_127b060e0_param->_field_token._field_kind=_127b060e0_param->_field_ident;
				} else {
					_127b060e0_param->_field_token._field_kind=jule::Str("_", 1);
				}
				_69976_t->_field_idents=append(_69976_t->_field_idents,jule::Slice<_127941de0_Token>({_127b060e0_param->_field_token}));
			}
			_iter_next_5126824704:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_127b060e0_i; _127b060e0_param = *__julec_range_begin; goto _iter_begin_5126824704; }
			_iter_end_5126824704:;
		}
	}
	if (_71217_types.len() > 1LL) {
		_69976_t->_field_kind=jule::new_struct<_1275d7180_TypeDecl>(new( std::nothrow ) _1275d7180_TypeDecl(_69944_tokens[static_cast<jule::Int>(0LL)],jule::new_struct<_1275d7180_TupleTypeDecl>(new( std::nothrow ) _1275d7180_TupleTypeDecl(_71217_types))));
	} else {
		_69976_t->_field_kind=_71217_types[static_cast<jule::Int>(0LL)];
	}
	_69993_ok=true;
	return std::make_tuple(_69976_t,_69993_ok);
}



inline std::tuple<jule::Ref<_1275d7180_RetTypeDecl>,jule::Bool> _127b060e0_Parser::_method_build_ret_type(jule::Slice<_127941de0_Token> _73838_tokens,jule::Int& _73860_i) {
	jule::Bool _73887_ok = jule::Bool();
	jule::Ref<_1275d7180_RetTypeDecl> _73870_t = jule::Ref<_1275d7180_RetTypeDecl>();
	_73870_t=jule::new_struct<_1275d7180_RetTypeDecl>(new( std::nothrow ) _1275d7180_RetTypeDecl());
	if (_73860_i >= _73838_tokens.len()) {
		return std::make_tuple(_73870_t,_73887_ok);
	}
	_127941de0_Token _74417_token = _73838_tokens[static_cast<jule::Int>(_73860_i)];
	{
		auto &_match_expr{ _74417_token._field_id };
		if (!((3LLU) == _match_expr)) { goto _case_end_5126850208; }
		_case_begin_5126850208:;
		{
			if (_74417_token._field_kind == jule::Str("{", 1)) {
				return std::make_tuple(_73870_t,_73887_ok);
			}
		}
		goto _match_end_5126849072;
		_case_end_5126850208:;
		if (!((7LLU) == _match_expr)) { goto _case_end_5126850320; }
		_case_begin_5126850320:;
		{
			if (_74417_token._field_kind == jule::Str("=", 1)) {
				return std::make_tuple(_73870_t,_73887_ok);
			}
		}
		goto _match_end_5126849072;
		_case_end_5126850320:;
		if (!((11LLU) == _match_expr)) { goto _case_end_5126850432; }
		_case_begin_5126850432:;
		{
			if ((_73860_i + 1LL) >= _73838_tokens.len()) {
				this->self->_method_push_err(_74417_token,jule::Str("missing_type", 12),jule::Slice<jule::Any>({}));
				return std::make_tuple(_73870_t,_73887_ok);
			}
			(_73860_i)++;
			_74417_token=_73838_tokens[static_cast<jule::Int>(_73860_i)];
			if (_74417_token._field_id == 3LLU) {
				{
					auto &_match_expr{ _74417_token._field_kind };
					if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_5126861168; }
					_case_begin_5126861168:;
					{
						return this->self->_method_build_multi_ret_type(_73838_tokens,_73860_i);
					}
					goto _match_end_5126858928;
					_case_end_5126861168:;
					if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_5126861280; }
					_case_begin_5126861280:;
					{
						this->self->_method_push_err(_74417_token,jule::Str("missing_type", 12),jule::Slice<jule::Any>({}));
						return std::make_tuple(_73870_t,_73887_ok);
					}
					goto _match_end_5126858928;
					_case_end_5126861280:;
					_match_end_5126858928:;
				}
			}
			std::tie(_73870_t->_field_kind,_73887_ok) = this->self->_method_build_type(_73838_tokens,(&(_73860_i)),true);
			return std::make_tuple(_73870_t,_73887_ok);
		}
		goto _match_end_5126849072;
		_case_end_5126850432:;
		_match_end_5126849072:;
	}
	(_73860_i)++;
	this->self->_method_push_err(_74417_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	return std::make_tuple(_73870_t,_73887_ok);
}



inline jule::Ref<_1275d7180_FnDecl> _127b060e0_Parser::_method_build_fn_prototype(jule::Slice<_127941de0_Token> _78242_tokens,jule::Int& _78264_i,jule::Bool _78272_method,jule::Bool _78286_anon) {
	jule::Ref<_1275d7180_FnDecl> _78317_f = jule::new_struct<_1275d7180_FnDecl>(new( std::nothrow ) _1275d7180_FnDecl(_78242_tokens[static_cast<jule::Int>(_78264_i)],jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::Slice<jule::Ref<_1275d7180_Directive>>(),jule::Ref<_1275d7180_CommentGroup>(),jule::Ref<_1275d7180_ScopeTree>(),jule::Slice<jule::Ref<_1275d7180_GenericDecl>>(),jule::Ref<_1275d7180_RetTypeDecl>(),jule::Slice<jule::Ref<_1275d7180_ParamDecl>>()));
	if (_78317_f->_field_token._field_id == 38LLU) {
		_78317_f->_field_statically=true;
		(_78264_i)++;
		if (_78264_i >= _78242_tokens.len()) {
			this->self->_method_push_err(_78317_f->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1275d7180_FnDecl>();
		}
		_78317_f->_field_token=_78242_tokens[static_cast<jule::Int>(_78264_i)];
	}
	if (_78317_f->_field_token._field_id == 35LLU) {
		_78317_f->_field_unsafety=true;
		(_78264_i)++;
		if (_78264_i >= _78242_tokens.len()) {
			this->self->_method_push_err(_78317_f->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1275d7180_FnDecl>();
		}
		_78317_f->_field_token=_78242_tokens[static_cast<jule::Int>(_78264_i)];
	}
	(_78264_i)++;
	if (_78264_i >= _78242_tokens.len()) {
		this->self->_method_push_err(_78317_f->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1275d7180_FnDecl>();
	}
	if (_78286_anon) {
		_78317_f->_field_ident=jule::Str("<anonymous>", 11);
	} else {
		_127941de0_Token _81917_tok = _78242_tokens[static_cast<jule::Int>(_78264_i)];
		if (_81917_tok._field_id != 2LLU) {
			this->self->_method_push_err(_81917_tok,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1275d7180_FnDecl>();
		}
		_78317_f->_field_ident=_81917_tok._field_kind;
		(_78264_i)++;
	}
	if (_78264_i >= _78242_tokens.len()) {
		this->self->_method_push_err(_78317_f->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1275d7180_FnDecl>();
	}
	_127941de0_Token _83313_error_token = _78242_tokens[static_cast<jule::Int>(_78264_i)];
	jule::Slice<_127941de0_Token> _83417_generics_tokens = _127b060e0_range(_78264_i,jule::Str("[", 1),jule::Str("]", 1),_78242_tokens);
	if (_83417_generics_tokens != nullptr) {
		_78317_f->_field_generics=this->self->_method_build_generics(_83417_generics_tokens,_83313_error_token);
	}
	if (_78242_tokens[static_cast<jule::Int>(_78264_i)]._field_kind != jule::Str("(", 1)) {
		this->self->_method_push_err(_78242_tokens[static_cast<jule::Int>(_78264_i)],jule::Str("missing_function_parentheses", 28),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1275d7180_FnDecl>();
	}
	jule::Slice<_127941de0_Token> _84417_params_toks = _127b060e0_range(_78264_i,jule::Str("(", 1),jule::Str(")", 1),_78242_tokens);
	if (_84417_params_toks.len() > 0LL) {
		_78317_f->_field_params=this->self->_method_build_params(_84417_params_toks,_78272_method,false);
	}
	std::tie(_78317_f->_field_result,std::ignore) = this->self->_method_build_ret_type(_78242_tokens,_78264_i);
	return _78317_f;
}



inline jule::Ref<_1275d7180_FnDecl> _127b060e0_Parser::_method_build_fn(jule::Slice<_127941de0_Token> _85332_tokens,jule::Bool _85349_method,jule::Bool _85363_anon,jule::Bool _85375_prototype) {
	jule::Int _85417_i = 0LL;
	jule::Ref<_1275d7180_FnDecl> _85517_f = this->self->_method_build_fn_prototype(_85332_tokens,_85417_i,_85349_method,_85363_anon);
	if (_85375_prototype) {
		if (_85417_i < _85332_tokens.len()) {
			this->self->_method_push_err(_85332_tokens[static_cast<jule::Int>(_85417_i + 1LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		}
		return _85517_f;
	} else if ((!(jule::real(_85517_f)))) {
		return _85517_f;
	}
	if (_85417_i >= _85332_tokens.len()) {
		this->self->_method_stop();
		this->self->_method_push_err(_85517_f->_field_token,jule::Str("body_not_exist", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1275d7180_FnDecl>();
	}
	jule::Slice<_127941de0_Token> _87017_block_tokens = _127b060e0_range(_85417_i,jule::Str("{", 1),jule::Str("}", 1),_85332_tokens);
	if (_87017_block_tokens != nullptr) {
		_85517_f->_field_scope=this->self->_method_build_scope(_87017_block_tokens);
		_85517_f->_field_scope->_field_unsafety=_85517_f->_field_unsafety;
		if (_85417_i < _85332_tokens.len()) {
			this->self->_method_push_err(_85332_tokens[static_cast<jule::Int>(_85417_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		}
	} else {
		this->self->_method_stop();
		this->self->_method_push_err(_85517_f->_field_token,jule::Str("body_not_exist", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1275d7180_FnDecl>();
	}
	return _85517_f;
}



inline jule::Slice<_127941de0_Token> _127b060e0_Parser::_method_get_use_decl_selectors(jule::Slice<_127941de0_Token> _88545_tokens) {
	jule::Int _88617_i = 0LL;
	_88545_tokens=_127b060e0_range(_88617_i,jule::Str("{", 1),jule::Str("}", 1),_88545_tokens);
	jule::Slice<jule::Slice<_127941de0_Token>> _88818_parts;
	jule::Slice<_136e99d00_Log> _88825_errs;
	std::tie(_88818_parts,_88825_errs) = _127b060e0_parts(_88545_tokens,8LLU,true);
	if (_88825_errs.len() > 0LL) {
		(*this)._field_errors=append((*this)._field_errors,_88825_errs);
		return nullptr;
	}
	jule::Slice<_127941de0_Token> _89417_selectors = jule::Slice<_127941de0_Token>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_88818_parts.len())));
	{
		auto &__julec_range_expr = _88818_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _127b060e0_i = 0;
			jule::Slice<_127941de0_Token> _127b060e0_part = *__julec_range_begin;
			_iter_begin_5126957856:;
			{
				if (_127b060e0_part.len() > 1LL) {
					(*this)._method_push_err(_127b060e0_part[static_cast<jule::Int>(1LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				}
				_127941de0_Token _89921_tok = _127b060e0_part[static_cast<jule::Int>(0LL)];
				if ((_89921_tok._field_id != 2LLU) && (_89921_tok._field_id != 28LLU)) {
					(*this)._method_push_err(_89921_tok,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
					goto _iter_next_5126957856;
				}
				_89417_selectors[static_cast<jule::Int>(_127b060e0_i)]=_89921_tok;
			}
			_iter_next_5126957856:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_127b060e0_i; _127b060e0_part = *__julec_range_begin; goto _iter_begin_5126957856; }
			_iter_end_5126957856:;
		}
	}
	return _89417_selectors;
}



inline void _127b060e0_Parser::_method_build_cpp_use_decl(jule::Ref<_1275d7180_UseDecl> _90941_decl,jule::Slice<_127941de0_Token> _90957_tokens) {
	if (_90957_tokens.len() > 2LL) {
		(*this)._method_push_err(_90957_tokens[static_cast<jule::Int>(2LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	_127941de0_Token _91313_token = _90957_tokens[static_cast<jule::Int>(1LL)];
	if ((_91313_token._field_id != 6LLU) || ((_91313_token._field_kind[static_cast<jule::Int>(0LL)] != '`') && (_91313_token._field_kind[static_cast<jule::Int>(0LL)] != '\"'))) {
		(*this)._method_push_err(_91313_token,jule::Str("invalid_expr", 12),jule::Slice<jule::Any>({}));
		return;
	}
	_90941_decl->_field_cpp_linked=true;
	_90941_decl->_field_link_path=_91313_token._field_kind.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(_91313_token._field_kind.len() - 1LL));
	if ((!(_136f04bd0_is_std_header_path(_90941_decl->_field_link_path)))) {
		_90941_decl->_field_link_path=_136ec98d0_join(jule::Slice<jule::Str>({_91313_token._field_file->_method_dir(),_90941_decl->_field_link_path}));
	}
}



inline void _127b060e0_Parser::_method_build_std_use_decl(jule::Ref<_1275d7180_UseDecl> _92541_decl,jule::Slice<_127941de0_Token> _92561_tokens) {
	_92541_decl->_field_std=true;
	_127941de0_Token _92817_token = _92561_tokens[static_cast<jule::Int>(0LL)];
	if (_92561_tokens.len() < 3LL) {
		(*this)._method_push_err(_92817_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return;
	}
	_92561_tokens=_92561_tokens.slice(static_cast<jule::Int>(2LL));
	_92817_token=_92561_tokens[static_cast<jule::Int>(_92561_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _92817_token._field_id };
		if (!((23LLU) == _match_expr)) { goto _case_end_5127004672; }
		_case_begin_5127004672:;
		{
			(*this)._method_push_err(_92817_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_5127001440;
		_case_end_5127004672:;
		if (!((3LLU) == _match_expr)) { goto _case_end_5127004784; }
		_case_begin_5127004784:;
		{
			if (_92817_token._field_kind != jule::Str("}", 1)) {
				(*this)._method_push_err(_92817_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			jule::Slice<_127941de0_Token> _94621_selectors = nullptr;
			std::tie(_92561_tokens,_94621_selectors) = _127b060e0_range_last(_92561_tokens);
			_92541_decl->_field_selected=(*this)._method_get_use_decl_selectors(_94621_selectors);
			if (_92561_tokens.len() == 0LL) {
				(*this)._method_push_err(_92817_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_92817_token=_92561_tokens[static_cast<jule::Int>(_92561_tokens.len() - 1LL)];
			if (_92817_token._field_id != 23LLU) {
				(*this)._method_push_err(_92817_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_92561_tokens=_92561_tokens.slice(0LL,static_cast<jule::Int>(_92561_tokens.len() - 1LL));
			if (_92561_tokens.len() == 0LL) {
				(*this)._method_push_err(_92817_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
		}
		goto _match_end_5127001440;
		_case_end_5127004784:;
		if (!((7LLU) == _match_expr)) { goto _case_end_5127004896; }
		_case_begin_5127004896:;
		{
			if (_92817_token._field_kind != jule::Str("*", 1)) {
				(*this)._method_push_err(_92817_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_92561_tokens=_92561_tokens.slice(0LL,static_cast<jule::Int>(_92561_tokens.len() - 1LL));
			if (_92561_tokens.len() == 0LL) {
				(*this)._method_push_err(_92817_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_92817_token=_92561_tokens[static_cast<jule::Int>(_92561_tokens.len() - 1LL)];
			if (_92817_token._field_id != 23LLU) {
				(*this)._method_push_err(_92817_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_92561_tokens=_92561_tokens.slice(0LL,static_cast<jule::Int>(_92561_tokens.len() - 1LL));
			if (_92561_tokens.len() == 0LL) {
				(*this)._method_push_err(_92817_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_92541_decl->_field_full=true;
		}
		goto _match_end_5127001440;
		_case_end_5127004896:;
		_match_end_5127001440:;
	}
	_92541_decl->_field_link_path=jule::Str("std::", 5) + _127b060e0_tokstoa(_92561_tokens);
}



inline void _127b060e0_Parser::_method_build_ident_use_decl(jule::Ref<_1275d7180_UseDecl> _98943_decl,jule::Slice<_127941de0_Token> _98963_tokens) {
	_98943_decl->_field_std=false;
	_127941de0_Token _99217_token = _98963_tokens[static_cast<jule::Int>(_98963_tokens.len() - 1LL)];
	{
		auto &_match_expr{ _99217_token._field_id };
		if (!((23LLU) == _match_expr)) { goto _case_end_5127050288; }
		_case_begin_5127050288:;
		{
			(*this)._method_push_err(_99217_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_5127048352;
		_case_end_5127050288:;
		if (!((3LLU) == _match_expr)) { goto _case_end_5127050400; }
		_case_begin_5127050400:;
		{
			if (_99217_token._field_kind != jule::Str("}", 1)) {
				(*this)._method_push_err(_99217_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			jule::Slice<_127941de0_Token> _100421_selectors = nullptr;
			std::tie(_98963_tokens,_100421_selectors) = _127b060e0_range_last(_98963_tokens);
			_98943_decl->_field_selected=(*this)._method_get_use_decl_selectors(_100421_selectors);
			if (_98963_tokens.len() == 0LL) {
				(*this)._method_push_err(_99217_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_99217_token=_98963_tokens[static_cast<jule::Int>(_98963_tokens.len() - 1LL)];
			if (_99217_token._field_id != 23LLU) {
				(*this)._method_push_err(_99217_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_98963_tokens=_98963_tokens.slice(0LL,static_cast<jule::Int>(_98963_tokens.len() - 1LL));
			if (_98963_tokens.len() == 0LL) {
				(*this)._method_push_err(_99217_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
		}
		goto _match_end_5127048352;
		_case_end_5127050400:;
		if (!((7LLU) == _match_expr)) { goto _case_end_5127050512; }
		_case_begin_5127050512:;
		{
			if (_99217_token._field_kind != jule::Str("*", 1)) {
				(*this)._method_push_err(_99217_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_98963_tokens=_98963_tokens.slice(0LL,static_cast<jule::Int>(_98963_tokens.len() - 1LL));
			if (_98963_tokens.len() == 0LL) {
				(*this)._method_push_err(_99217_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_99217_token=_98963_tokens[static_cast<jule::Int>(_98963_tokens.len() - 1LL)];
			if (_99217_token._field_id != 23LLU) {
				(*this)._method_push_err(_99217_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_98963_tokens=_98963_tokens.slice(0LL,static_cast<jule::Int>(_98963_tokens.len() - 1LL));
			if (_98963_tokens.len() == 0LL) {
				(*this)._method_push_err(_99217_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return;
			}
			_98943_decl->_field_full=true;
		}
		goto _match_end_5127048352;
		_case_end_5127050512:;
		_match_end_5127048352:;
	}
	_98943_decl->_field_link_path=_127b060e0_tokstoa(_98963_tokens);
}



inline void _127b060e0_Parser::_method_parse_use_decl(jule::Ref<_1275d7180_UseDecl> _105437_decl,jule::Slice<_127941de0_Token> _105457_tokens) {
	_127941de0_Token _105513_token = _105457_tokens[static_cast<jule::Int>(0LL)];
	if (_105513_token._field_id == 31LLU) {
		(*this)._method_build_cpp_use_decl(_105437_decl,_105457_tokens);
		return;
	}
	if (_105513_token._field_id != 2LLU) {
		(*this)._method_push_err(_105513_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return;
	}
	
	{
		if (!((_105513_token._field_kind == jule::Str("std", 3)))) { goto _case_end_5127101968; }
		_case_begin_5127101968:;
		{
			(*this)._method_build_std_use_decl(_105437_decl,_105457_tokens);
		}
		goto _match_end_5127100464;
		_case_end_5127101968:;
		_case_begin_5127100624:;
		{
			(*this)._method_build_ident_use_decl(_105437_decl,_105457_tokens);
		}
		goto _match_end_5127100464;
		_case_end_5127100624:;
		_match_end_5127100464:;
	}
}



inline jule::Ref<_1275d7180_UseDecl> _127b060e0_Parser::_method_build_use_decl(jule::Slice<_127941de0_Token> _107737_tokens) {
	jule::Ref<_1275d7180_UseDecl> _107817_decl = jule::new_struct<_1275d7180_UseDecl>(new( std::nothrow ) _1275d7180_UseDecl(_107737_tokens[static_cast<jule::Int>(0LL)],jule::Str(),jule::Bool(),jule::Slice<_127941de0_Token>(),jule::Bool(),jule::Bool()));
	if (_107737_tokens.len() < 2LL) {
		(*this)._method_push_err(_107817_decl->_field_token,jule::Str("missing_use_path", 16),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1275d7180_UseDecl>();
	}
	_107737_tokens=_107737_tokens.slice(static_cast<jule::Int>(1LL));
	(*this)._method_parse_use_decl(_107817_decl,_107737_tokens);
	return _107817_decl;
}



inline jule::Ref<_1275d7180_Expr> _127b060e0_Parser::_method_build_enum_item_expr(jule::Ref<jule::Int> _109044_i,jule::Slice<_127941de0_Token> _109057_tokens) {
	jule::Int _109117_brace_n = 0LL;
	jule::Int _109213_expr_start = _109044_i;
	_iter_begin_5127120736:;
	if (!(_109044_i < _109057_tokens.len())) { goto _iter_end_5127120736; }
	{
		_127941de0_Token _109417_t = _109057_tokens[static_cast<jule::Int>(_109044_i)];
		if (_109417_t._field_id == 3LLU) {
			{
				auto &_match_expr{ _109417_t._field_kind };
				if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_5127126576; }
				_case_begin_5127126576:;
				{
					(_109117_brace_n)++;
					goto _iter_next_5127120736;
				}
				goto _match_end_5127124544;
				_case_end_5127126576:;
				_case_begin_5127125456:;
				{
					(_109117_brace_n)--;
				}
				goto _match_end_5127124544;
				_case_end_5127125456:;
				_match_end_5127124544:;
			}
		}
		if (_109117_brace_n > 0LL) {
			goto _iter_next_5127120736;
		}
		if ((_109417_t._field_id == 8LLU) || ((_109044_i + 1LL) >= _109057_tokens.len())) {
			jule::Slice<_127941de0_Token> _111325_expr_tokens = nullptr;
			if (_109417_t._field_id == 8LLU) {
				_111325_expr_tokens=_109057_tokens.slice(static_cast<jule::Int>(_109213_expr_start),static_cast<jule::Int>(_109044_i));
			} else {
				_111325_expr_tokens=_109057_tokens.slice(static_cast<jule::Int>(_109213_expr_start));
			}
			return this->self->_method_build_expr(_111325_expr_tokens);
		}
	}
	_iter_next_5127120736:;
	(_109044_i)++;
	goto _iter_begin_5127120736;
	_iter_end_5127120736:;
	return jule::new_ref<_1275d7180_Expr>();
}



inline jule::Slice<jule::Ref<_1275d7180_EnumItemDecl>> _127b060e0_Parser::_method_build_enum_items(jule::Slice<_127941de0_Token> _112540_tokens) {
	jule::Slice<jule::Ref<_1275d7180_EnumItemDecl>> _112617_items = jule::Slice<jule::Ref<_1275d7180_EnumItemDecl>>::alloc(static_cast<jule::Int>(0LL));
	jule::Ref<jule::Int> _112717_i = jule::new_ref<jule::Int>(0LL);
	_iter_begin_5127143936:;
	if (!(_112717_i < _112540_tokens.len())) { goto _iter_end_5127143936; }
	{
		_127941de0_Token _112921_t = _112540_tokens[static_cast<jule::Int>(_112717_i)];
		if (_112921_t._field_id == 18LLU) {
			goto _iter_next_5127143936;
		}
		jule::Ref<_1275d7180_EnumItemDecl> _113421_item = jule::new_struct<_1275d7180_EnumItemDecl>(new( std::nothrow ) _1275d7180_EnumItemDecl());
		_113421_item->_field_token=_112921_t;
		if (_113421_item->_field_token._field_id != 2LLU) {
			this->self->_method_push_err(_113421_item->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		}
		_113421_item->_field_ident=_113421_item->_field_token._field_kind;
		if (((_112717_i + 1LL) >= _112540_tokens.len()) || (_112540_tokens[static_cast<jule::Int>(_112717_i + 1LL)]._field_id == 8LLU)) {
			if ((_112717_i + 1LL) < _112540_tokens.len()) {
				(_112717_i)++;
			}
			_112617_items=append(_112617_items,jule::Slice<jule::Ref<_1275d7180_EnumItemDecl>>({_113421_item}));
			goto _iter_next_5127143936;
		}
		(_112717_i)++;
		_112921_t=_112540_tokens[static_cast<jule::Int>(_112717_i)];
		if ((_112921_t._field_id != 7LLU) && (_112921_t._field_kind != jule::Str("=", 1))) {
			this->self->_method_push_err(_112540_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		}
		(_112717_i)++;
		if ((_112717_i >= _112540_tokens.len()) || (_112540_tokens[static_cast<jule::Int>(_112717_i)]._field_id == 8LLU)) {
			this->self->_method_push_err(_112540_tokens[static_cast<jule::Int>(0LL)],jule::Str("missing_expr", 12),jule::Slice<jule::Any>({}));
			goto _iter_next_5127143936;
		}
		_113421_item->_field_expr=this->self->_method_build_enum_item_expr(_112717_i,_112540_tokens);
		_112617_items=append(_112617_items,jule::Slice<jule::Ref<_1275d7180_EnumItemDecl>>({_113421_item}));
	}
	_iter_next_5127143936:;
	(_112717_i)++;
	goto _iter_begin_5127143936;
	_iter_end_5127143936:;
	return _112617_items;
}



inline jule::Ref<_1275d7180_EnumDecl> _127b060e0_Parser::_method_build_enum_decl(jule::Slice<_127941de0_Token> _116339_tokens) {
	if ((_116339_tokens.len() < 2LL) || (_116339_tokens.len() < 3LL)) {
		this->self->_method_push_err(_116339_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1275d7180_EnumDecl>();
	}
	jule::Ref<_1275d7180_EnumDecl> _116817_e = jule::new_struct<_1275d7180_EnumDecl>(new( std::nothrow ) _1275d7180_EnumDecl(_116339_tokens[static_cast<jule::Int>(1LL)],jule::Bool(),jule::Str(),jule::Ref<_1275d7180_TypeDecl>(),jule::Slice<jule::Ref<_1275d7180_EnumItemDecl>>(),jule::Ref<_1275d7180_CommentGroup>()));
	if (_116817_e->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_116817_e->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	_116817_e->_field_ident=_116817_e->_field_token._field_kind;
	jule::Int _117517_i = 2LL;
	if (_116339_tokens[static_cast<jule::Int>(_117517_i)]._field_id == 11LLU) {
		(_117517_i)++;
		if (_117517_i >= _116339_tokens.len()) {
			this->self->_method_push_err(_116339_tokens[static_cast<jule::Int>(_117517_i - 1LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return _116817_e;
		}
		std::tie(_116817_e->_field_kind,std::ignore) = this->self->_method_build_type(_116339_tokens,(&(_117517_i)),true);
		if (_117517_i >= _116339_tokens.len()) {
			this->self->_method_stop();
			this->self->_method_push_err(_116817_e->_field_token,jule::Str("body_not_exist", 14),jule::Slice<jule::Any>({}));
			return _116817_e;
		}
	} else {
		jule::drop(_116817_e->_field_kind);
	}
	jule::Slice<_127941de0_Token> _119117_item_tokens = _127b060e0_range(_117517_i,jule::Str("{", 1),jule::Str("}", 1),_116339_tokens);
	if (_119117_item_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_116817_e->_field_token,jule::Str("body_not_exist", 14),jule::Slice<jule::Any>({}));
		return _116817_e;
	} else if (_117517_i < _116339_tokens.len()) {
		this->self->_method_push_err(_116339_tokens[static_cast<jule::Int>(_117517_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	_116817_e->_field_items=this->self->_method_build_enum_items(_119117_item_tokens);
	return _116817_e;
}



inline jule::Ref<_1275d7180_FieldDecl> _127b060e0_Parser::_method_build_field(jule::Slice<_127941de0_Token> _120335_tokens) {
	jule::Ref<_1275d7180_FieldDecl> _120417_f = jule::new_struct<_1275d7180_FieldDecl>(new( std::nothrow ) _1275d7180_FieldDecl());
	_120417_f->_field_public=_120335_tokens[static_cast<jule::Int>(0LL)]._field_id == 21LLU;
	if (_120417_f->_field_public) {
		if (_120335_tokens.len() == 1LL) {
			this->self->_method_push_err(_120335_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1275d7180_FieldDecl>();
		}
		_120335_tokens=_120335_tokens.slice(static_cast<jule::Int>(1LL));
	}
	_120417_f->_field_mutable=_120335_tokens[static_cast<jule::Int>(0LL)]._field_id == 36LLU;
	if (_120417_f->_field_mutable) {
		if (_120335_tokens.len() == 1LL) {
			this->self->_method_push_err(_120335_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1275d7180_FieldDecl>();
		}
		_120335_tokens=_120335_tokens.slice(static_cast<jule::Int>(1LL));
	}
	_120417_f->_field_token=_120335_tokens[static_cast<jule::Int>(0LL)];
	if (_120417_f->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_120417_f->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1275d7180_FieldDecl>();
	}
	_120417_f->_field_ident=_120417_f->_field_token._field_kind;
	if (_120335_tokens.len() == 1LL) {
		this->self->_method_push_err(_120335_tokens[static_cast<jule::Int>(0LL)],jule::Str("missing_type", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1275d7180_FieldDecl>();
	} else if (_120335_tokens[static_cast<jule::Int>(1LL)]._field_id != 11LLU) {
		this->self->_method_push_err(_120335_tokens[static_cast<jule::Int>(1LL)],jule::Str("missing_type", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1275d7180_FieldDecl>();
	}
	_120335_tokens=_120335_tokens.slice(static_cast<jule::Int>(2LL));
	jule::Int _124017_i = 0LL;
	std::tie(_120417_f->_field_kind,std::ignore) = this->self->_method_build_type(_120335_tokens,(&(_124017_i)),true);
	if (_124017_i < _120335_tokens.len()) {
		this->self->_method_push_err(_120335_tokens[static_cast<jule::Int>(_124017_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1275d7180_FieldDecl>();
	}
	return _120417_f;
}



inline jule::Slice<jule::Ref<_1275d7180_FieldDecl>> _127b060e0_Parser::_method_build_struct_decl_fields(jule::Slice<_127941de0_Token> _125048_tokens) {
	jule::Slice<jule::Ref<_1275d7180_FieldDecl>> _125117_fields = nullptr;
	jule::Slice<jule::Ref<_127b06690_Stmt>> _125217_stms = _127b06690_split_stms(_125048_tokens);
	{
		auto &__julec_range_expr = _125217_stms;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127b06690_Stmt> _127b060e0_st = *__julec_range_begin;
			_iter_begin_5127260464:;
			{
				jule::Slice<_127941de0_Token> _125421_tokens = _127b060e0_st->_field_tokens;
				if (_125421_tokens[static_cast<jule::Int>(0LL)]._field_id == 18LLU) {
					goto _iter_next_5127260464;
				}
				jule::Ref<_1275d7180_FieldDecl> _125821_f = this->self->_method_build_field(_125421_tokens);
				_125117_fields=append(_125117_fields,jule::Slice<jule::Ref<_1275d7180_FieldDecl>>({_125821_f}));
			}
			_iter_next_5127260464:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127b060e0_st = *__julec_range_begin; goto _iter_begin_5127260464; }
			_iter_end_5127260464:;
		}
	}
	return _125117_fields;
}



inline jule::Ref<_1275d7180_StructDecl> _127b060e0_Parser::_method_build_struct_decl(jule::Slice<_127941de0_Token> _126441_tokens) {
	if (_126441_tokens.len() < 3LL) {
		this->self->_method_push_err(_126441_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1275d7180_StructDecl>();
	}
	jule::Int _127017_i = 1LL;
	jule::Ref<_1275d7180_StructDecl> _127117_s = jule::new_struct<_1275d7180_StructDecl>(new( std::nothrow ) _1275d7180_StructDecl(_126441_tokens[static_cast<jule::Int>(_127017_i)],jule::Str(),jule::Slice<jule::Ref<_1275d7180_FieldDecl>>(),jule::Bool(),jule::Bool(),jule::Slice<jule::Ref<_1275d7180_Directive>>(),jule::Ref<_1275d7180_CommentGroup>(),jule::Slice<jule::Ref<_1275d7180_GenericDecl>>()));
	if (_127117_s->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_127117_s->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	(_127017_i)++;
	if (_127017_i >= _126441_tokens.len()) {
		this->self->_method_push_err(_126441_tokens[static_cast<jule::Int>(_127017_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return _127117_s;
	}
	_127117_s->_field_ident=_127117_s->_field_token._field_kind;
	_127941de0_Token _128413_error_token = _126441_tokens[static_cast<jule::Int>(_127017_i)];
	jule::Slice<_127941de0_Token> _128517_generics_tokens = _127b060e0_range(_127017_i,jule::Str("[", 1),jule::Str("]", 1),_126441_tokens);
	if (_128517_generics_tokens != nullptr) {
		_127117_s->_field_generics=this->self->_method_build_generics(_128517_generics_tokens,_128413_error_token);
	}
	if (_127017_i >= _126441_tokens.len()) {
		this->self->_method_push_err(_126441_tokens[static_cast<jule::Int>(_127017_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return _127117_s;
	}
	jule::Slice<_127941de0_Token> _129417_body_tokens = _127b060e0_range(_127017_i,jule::Str("{", 1),jule::Str("}", 1),_126441_tokens);
	if (_129417_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_127117_s->_field_token,jule::Str("body_not_exist", 14),jule::Slice<jule::Any>({}));
		return _127117_s;
	}
	if (_127017_i < _126441_tokens.len()) {
		this->self->_method_push_err(_126441_tokens[static_cast<jule::Int>(_127017_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	_127117_s->_field_fields=this->self->_method_build_struct_decl_fields(_129417_body_tokens);
	return _127117_s;
}



inline void _127b060e0_Parser::_method_check_method_receiver(jule::Ref<_1275d7180_FnDecl> _130740_f) {
	if (_130740_f->_field_statically) {
		if ((_130740_f->_field_params.len() > 0LL) && _130740_f->_field_params[static_cast<jule::Int>(0LL)]->_method_is_self()) {
			(*this)._method_push_err(_130740_f->_field_token,jule::Str("static_function_has_receiver", 28),jule::Slice<jule::Any>({}));
		}
		return;
	}
	if (_130740_f->_field_params.len() == 0LL) {
		(*this)._method_push_err(_130740_f->_field_token,jule::Str("missing_receiver", 16),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_1275d7180_ParamDecl> _132013_param = _130740_f->_field_params[static_cast<jule::Int>(0LL)];
	if ((!(_132013_param->_method_is_self()))) {
		(*this)._method_push_err(_130740_f->_field_token,jule::Str("missing_receiver", 16),jule::Slice<jule::Any>({}));
		return;
	}
}



inline jule::Slice<jule::Ref<_1275d7180_FnDecl>> _127b060e0_Parser::_method_build_trait_methods(jule::Slice<_127941de0_Token> _132743_tokens) {
	jule::Slice<jule::Ref<_1275d7180_FnDecl>> _132817_methods = nullptr;
	jule::Slice<jule::Ref<_127b06690_Stmt>> _132917_stms = _127b06690_split_stms(_132743_tokens);
	{
		auto &__julec_range_expr = _132917_stms;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127b06690_Stmt> _127b060e0_st = *__julec_range_begin;
			_iter_begin_5127329536:;
			{
				jule::Slice<_127941de0_Token> _133121_tokens = _127b10a80_eliminate_comments(_127b060e0_st->_field_tokens);
				if (_133121_tokens.len() == 0LL) {
					goto _iter_next_5127329536;
				}
				jule::Ref<_1275d7180_FnDecl> _133621_f = this->self->_method_build_fn(_133121_tokens,true,false,true);
				if (jule::real(_133621_f)) {
					this->self->_method_check_method_receiver(_133621_f);
					if (_133621_f->_field_generics.len() > 0LL) {
						this->self->_method_push_err(_133621_f->_field_token,jule::Str("trait_method_has_generics", 25),jule::Slice<jule::Any>({}));
					}
					_133621_f->_field_public=true;
					_132817_methods=append(_132817_methods,jule::Slice<jule::Ref<_1275d7180_FnDecl>>({_133621_f}));
				}
			}
			_iter_next_5127329536:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127b060e0_st = *__julec_range_begin; goto _iter_begin_5127329536; }
			_iter_end_5127329536:;
		}
	}
	return _132817_methods;
}



inline jule::Ref<_1275d7180_TraitDecl> _127b060e0_Parser::_method_build_trait_decl(jule::Slice<_127941de0_Token> _134940_tokens) {
	if (_134940_tokens.len() < 3LL) {
		this->self->_method_push_err(_134940_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1275d7180_TraitDecl>();
	}
	jule::Ref<_1275d7180_TraitDecl> _135417_t = jule::new_struct<_1275d7180_TraitDecl>(new( std::nothrow ) _1275d7180_TraitDecl(_134940_tokens[static_cast<jule::Int>(1LL)],jule::Str(),jule::Bool(),jule::Ref<_1275d7180_CommentGroup>(),jule::Slice<jule::Ref<_1275d7180_FnDecl>>()));
	if (_135417_t->_field_token._field_id != 2LLU) {
		this->self->_method_push_err(_135417_t->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	_135417_t->_field_ident=_135417_t->_field_token._field_kind;
	jule::Int _136117_i = 2LL;
	jule::Slice<_127941de0_Token> _136217_body_tokens = _127b060e0_range(_136117_i,jule::Str("{", 1),jule::Str("}", 1),_134940_tokens);
	if (_136217_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_135417_t->_field_token,jule::Str("body_not_exist", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1275d7180_TraitDecl>();
	}
	if (_136117_i < _134940_tokens.len()) {
		this->self->_method_push_err(_134940_tokens[static_cast<jule::Int>(_136117_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	_135417_t->_field_methods=this->self->_method_build_trait_methods(_136217_body_tokens);
	return _135417_t;
}



inline jule::Ref<_1275d7180_FnDecl> _127b060e0_Parser::_method_build_cpp_link_fn(jule::Slice<_127941de0_Token> _137541_tokens) {
	_137541_tokens=_137541_tokens.slice(static_cast<jule::Int>(1LL));
	jule::Ref<_1275d7180_FnDecl> _137717_f = this->self->_method_build_fn(_137541_tokens,false,false,true);
	if (jule::real(_137717_f)) {
		_137717_f->_field_cpp_linked=true;
	}
	return _137717_f;
}



inline jule::Ref<_1275d7180_VarDecl> _127b060e0_Parser::_method_build_cpp_link_var(jule::Slice<_127941de0_Token> _138442_tokens) {
	_138442_tokens=_138442_tokens.slice(static_cast<jule::Int>(1LL));
	jule::Ref<_1275d7180_VarDecl> _138617_v = this->self->_method_build_var(_138442_tokens);
	if (jule::real(_138617_v)) {
		_138617_v->_field_cpp_linked=true;
		if (jule::real(_138617_v->_field_expr)) {
			this->self->_method_push_err(_138617_v->_field_token,jule::Str("cpp_linked_variable_has_expr", 28),jule::Slice<jule::Any>({}));
		}
	}
	return _138617_v;
}



inline jule::Ref<_1275d7180_StructDecl> _127b060e0_Parser::_method_build_cpp_link_struct(jule::Slice<_127941de0_Token> _139645_tokens) {
	_139645_tokens=_139645_tokens.slice(static_cast<jule::Int>(1LL));
	jule::Ref<_1275d7180_StructDecl> _139817_s = this->self->_method_build_struct_decl(_139645_tokens);
	if (jule::real(_139817_s)) {
		_139817_s->_field_cpp_linked=true;
	}
	return _139817_s;
}



inline jule::Ref<_1275d7180_TypeAliasDecl> _127b060e0_Parser::_method_build_cpp_link_type_alias(jule::Slice<_127941de0_Token> _140549_tokens) {
	_140549_tokens=_140549_tokens.slice(static_cast<jule::Int>(1LL));
	jule::Ref<_1275d7180_TypeAliasDecl> _140717_t = this->self->_method_build_type_alias_decl(_140549_tokens);
	if (jule::real(_140717_t)) {
		_140717_t->_field_cpp_linked=true;
	}
	return _140717_t;
}



inline jule::Any _127b060e0_Parser::_method_build_cpp_link(jule::Slice<_127941de0_Token> _141438_tokens) {
	_127941de0_Token _141517_token = _141438_tokens[static_cast<jule::Int>(0LL)];
	if (_141438_tokens.len() == 1LL) {
		this->self->_method_push_err(_141517_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return nullptr;
	}
	_141517_token=_141438_tokens[static_cast<jule::Int>(1LL)];
	{
		auto &_match_expr{ _141517_token._field_id };
		if (!((33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_5127409568; }
		_case_begin_5127409568:;
		{
			return this->self->_method_build_cpp_link_fn(_141438_tokens);
		}
		goto _match_end_5127406448;
		_case_end_5127409568:;
		if (!((9LLU) == _match_expr || (34LLU) == _match_expr)) { goto _case_end_5127408816; }
		_case_begin_5127408816:;
		{
			return this->self->_method_build_cpp_link_var(_141438_tokens);
		}
		goto _match_end_5127406448;
		_case_end_5127408816:;
		if (!((25LLU) == _match_expr)) { goto _case_end_5127408928; }
		_case_begin_5127408928:;
		{
			return this->self->_method_build_cpp_link_struct(_141438_tokens);
		}
		goto _match_end_5127406448;
		_case_end_5127408928:;
		if (!((10LLU) == _match_expr)) { goto _case_end_5127409040; }
		_case_begin_5127409040:;
		{
			return this->self->_method_build_cpp_link_type_alias(_141438_tokens);
		}
		goto _match_end_5127406448;
		_case_end_5127409040:;
		_case_begin_5127408288:;
		{
			this->self->_method_push_err(_141517_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		}
		goto _match_end_5127406448;
		_case_end_5127408288:;
		_match_end_5127406448:;
	}
	return nullptr;
}



inline jule::Ref<_1275d7180_FnDecl> _127b060e0_Parser::_method_get_method(jule::Slice<_127941de0_Token> _144234_tokens) {
	jule::Int _144317_i = 0LL;
	_127941de0_Token _144417_token = _144234_tokens[static_cast<jule::Int>(_144317_i)];
	if (_144417_token._field_id == 38LLU) {
		if ((_144317_i + 1LL) >= _144234_tokens.len()) {
			this->self->_method_push_err(_144417_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1275d7180_FnDecl>();
		}
		(_144317_i)++;
		_144417_token=_144234_tokens[static_cast<jule::Int>(_144317_i)];
	}
	if (_144417_token._field_id == 35LLU) {
		if ((_144317_i + 1LL) >= _144234_tokens.len()) {
			this->self->_method_push_err(_144417_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1275d7180_FnDecl>();
		}
		(_144317_i)++;
		_144417_token=_144234_tokens[static_cast<jule::Int>(_144317_i)];
	}
	if (_144417_token._field_id != 33LLU) {
		this->self->_method_push_err(_144417_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1275d7180_FnDecl>();
	}
	return this->self->_method_build_fn(_144234_tokens,true,false,false);
}



inline void _127b060e0_Parser::_method_parse_impl_trait(jule::Ref<_1275d7180_Impl> _147140_ipl,jule::Slice<_127941de0_Token> _147156_tokens) {
	jule::Slice<jule::Ref<_127b06690_Stmt>> _147217_stms = _127b06690_split_stms(_147156_tokens);
	{
		auto &__julec_range_expr = _147217_stms;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127b06690_Stmt> _127b060e0_st = *__julec_range_begin;
			_iter_begin_5127442128:;
			{
				jule::Slice<_127941de0_Token> _147421_tokens = _127b060e0_st->_field_tokens;
				_127941de0_Token _147517_token = _147421_tokens[static_cast<jule::Int>(0LL)];
				{
					auto &_match_expr{ _147517_token._field_id };
					if (!((18LLU) == _match_expr)) { goto _case_end_5127448784; }
					_case_begin_5127448784:;
					{
						goto _iter_next_5127442128;
					}
					goto _match_end_5127445152;
					_case_end_5127448784:;
					if (!((38LLU) == _match_expr || (33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_5127447680; }
					_case_begin_5127447680:;
					{
						jule::Ref<_1275d7180_FnDecl> _148425_f = this->self->_method_get_method(_147421_tokens);
						if (jule::real(_148425_f)) {
							_148425_f->_field_public=true;
							this->self->_method_check_method_receiver(_148425_f);
							_147140_ipl->_field_methods=append(_147140_ipl->_field_methods,jule::Slice<jule::Ref<_1275d7180_FnDecl>>({_148425_f}));
						}
					}
					goto _match_end_5127445152;
					_case_end_5127447680:;
					_case_begin_5127447376:;
					{
						this->self->_method_push_err(_147517_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
						goto _iter_next_5127442128;
					}
					goto _match_end_5127445152;
					_case_end_5127447376:;
					_match_end_5127445152:;
				}
			}
			_iter_next_5127442128:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127b060e0_st = *__julec_range_begin; goto _iter_begin_5127442128; }
			_iter_end_5127442128:;
		}
	}
}



inline void _127b060e0_Parser::_method_parse_impl_struct(jule::Ref<_1275d7180_Impl> _149841_ipl,jule::Slice<_127941de0_Token> _149857_tokens) {
	jule::Slice<jule::Ref<_127b06690_Stmt>> _149917_stms = _127b06690_split_stms(_149857_tokens);
	{
		auto &__julec_range_expr = _149917_stms;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127b06690_Stmt> _127b060e0_st = *__julec_range_begin;
			_iter_begin_5127463152:;
			{
				jule::Slice<_127941de0_Token> _150121_tokens = _127b060e0_st->_field_tokens;
				_127941de0_Token _150221_token = _150121_tokens[static_cast<jule::Int>(0LL)];
				jule::Bool _150321_is_pub = false;
				{
					auto &_match_expr{ _150221_token._field_id };
					if (!((18LLU) == _match_expr)) { goto _case_end_5127469648; }
					_case_begin_5127469648:;
					{
						goto _iter_next_5127463152;
					}
					goto _match_end_5127468528;
					_case_end_5127469648:;
					if (!((21LLU) == _match_expr)) { goto _case_end_5127469760; }
					_case_begin_5127469760:;
					{
						_150321_is_pub=true;
						if (_150121_tokens.len() == 1LL) {
							this->self->_method_push_err(_150121_tokens[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
							goto _iter_next_5127463152;
						}
						_150121_tokens=_150121_tokens.slice(static_cast<jule::Int>(1LL));
						if (_150121_tokens.len() > 0LL) {
							_150221_token=_150121_tokens[static_cast<jule::Int>(0LL)];
						}
					}
					goto _match_end_5127468528;
					_case_end_5127469760:;
					_match_end_5127468528:;
				}
				{
					auto &_match_expr{ _150221_token._field_id };
					if (!((38LLU) == _match_expr || (33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_5127479984; }
					_case_begin_5127479984:;
					{
						jule::Ref<_1275d7180_FnDecl> _152525_f = this->self->_method_get_method(_150121_tokens);
						if (jule::real(_152525_f)) {
							_152525_f->_field_public=_150321_is_pub;
							this->self->_method_check_method_receiver(_152525_f);
							_149841_ipl->_field_methods=append(_149841_ipl->_field_methods,jule::Slice<jule::Ref<_1275d7180_FnDecl>>({_152525_f}));
						}
					}
					goto _match_end_5127479728;
					_case_end_5127479984:;
					_case_begin_5127479360:;
					{
						this->self->_method_push_err(_150221_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
						goto _iter_next_5127463152;
					}
					goto _match_end_5127479728;
					_case_end_5127479360:;
					_match_end_5127479728:;
				}
			}
			_iter_next_5127463152:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127b060e0_st = *__julec_range_begin; goto _iter_begin_5127463152; }
			_iter_end_5127463152:;
		}
	}
}



inline void _127b060e0_Parser::_method_parse_impl_body(jule::Ref<_1275d7180_Impl> _153939_ipl,jule::Slice<_127941de0_Token> _153955_tokens) {
	if (_153939_ipl->_method_is_trait_impl()) {
		this->self->_method_parse_impl_trait(_153939_ipl,_153955_tokens);
		return;
	}
	this->self->_method_parse_impl_struct(_153939_ipl,_153955_tokens);
}



inline jule::Ref<_1275d7180_Impl> _127b060e0_Parser::_method_build_impl(jule::Slice<_127941de0_Token> _154734_tokens) {
	_127941de0_Token _154817_token = _154734_tokens[static_cast<jule::Int>(0LL)];
	if (_154734_tokens.len() < 2LL) {
		this->self->_method_push_err(_154817_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1275d7180_Impl>();
	}
	_154817_token=_154734_tokens[static_cast<jule::Int>(1LL)];
	if (_154817_token._field_id != 2LLU) {
		this->self->_method_push_err(_154817_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1275d7180_Impl>();
	}
	if (_154734_tokens.len() < 3LL) {
		this->self->_method_push_err(_154817_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1275d7180_Impl>();
	}
	jule::Ref<_1275d7180_Impl> _156217_ipl = jule::new_struct<_1275d7180_Impl>(new( std::nothrow ) _1275d7180_Impl(_154817_token,_127941de0_Token(),jule::Slice<jule::Ref<_1275d7180_FnDecl>>()));
	_154817_token=_154734_tokens[static_cast<jule::Int>(2LL)];
	if (_154817_token._field_id != 12LLU) {
		if ((_154817_token._field_id == 3LLU) && (_154817_token._field_kind == jule::Str("{", 1))) {
			std::tie(_156217_ipl->_field_base,_156217_ipl->_field_dest) = std::make_tuple(_156217_ipl->_field_dest,_156217_ipl->_field_base);
			_154734_tokens=_154734_tokens.slice(static_cast<jule::Int>(2LL));
			goto _julec_label_body;
		}
		this->self->_method_push_err(_154817_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1275d7180_Impl>();
	}
	if (_154734_tokens.len() < 4LL) {
		this->self->_method_push_err(_154817_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1275d7180_Impl>();
	}
	_154817_token=_154734_tokens[static_cast<jule::Int>(3LL)];
	if (_154817_token._field_id != 2LLU) {
		this->self->_method_push_err(_154817_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1275d7180_Impl>();
	}
	_156217_ipl->_field_dest=_154817_token;
	_154734_tokens=_154734_tokens.slice(static_cast<jule::Int>(4LL));
	_julec_label_body:;
	jule::Int _159117_i = 0LL;
	jule::Slice<_127941de0_Token> _159217_body_tokens = _127b060e0_range(_159117_i,jule::Str("{", 1),jule::Str("}", 1),_154734_tokens);
	if (_159217_body_tokens == nullptr) {
		this->self->_method_stop();
		this->self->_method_push_err(_156217_ipl->_field_base,jule::Str("body_not_exist", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1275d7180_Impl>();
	}
	if (_159117_i < _154734_tokens.len()) {
		this->self->_method_push_err(_154734_tokens[static_cast<jule::Int>(_159117_i)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
	}
	this->self->_method_parse_impl_body(_156217_ipl,_159217_body_tokens);
	return _156217_ipl;
}



inline jule::Any _127b060e0_Parser::_method_build_node_data(jule::Slice<_127941de0_Token> _160539_tokens) {
	_127941de0_Token _160617_token = _160539_tokens[static_cast<jule::Int>(0LL)];
	{
		auto &_match_expr{ _160617_token._field_id };
		if (!((19LLU) == _match_expr)) { goto _case_end_5127565616; }
		_case_begin_5127565616:;
		{
			return this->self->_method_build_use_decl(_160539_tokens);
		}
		goto _match_end_5127563232;
		_case_end_5127565616:;
		if (!((33LLU) == _match_expr || (35LLU) == _match_expr)) { goto _case_end_5127565728; }
		_case_begin_5127565728:;
		{
			jule::Ref<_1275d7180_FnDecl> _161321_f = this->self->_method_build_fn(_160539_tokens,false,false,false);
			if (jule::real(_161321_f)) {
				_161321_f->_field_global=true;
			}
			return _161321_f;
		}
		goto _match_end_5127563232;
		_case_end_5127565728:;
		if (!((34LLU) == _match_expr || (9LLU) == _match_expr || (36LLU) == _match_expr || (38LLU) == _match_expr)) { goto _case_end_5127568000; }
		_case_begin_5127568000:;
		{
			return this->self->_method_build_var(_160539_tokens);
		}
		goto _match_end_5127563232;
		_case_end_5127568000:;
		if (!((10LLU) == _match_expr)) { goto _case_end_5127568112; }
		_case_begin_5127568112:;
		{
			return this->self->_method_build_type_alias_decl(_160539_tokens);
		}
		goto _match_end_5127563232;
		_case_end_5127568112:;
		if (!((24LLU) == _match_expr)) { goto _case_end_5127568224; }
		_case_begin_5127568224:;
		{
			return this->self->_method_build_enum_decl(_160539_tokens);
		}
		goto _match_end_5127563232;
		_case_end_5127568224:;
		if (!((25LLU) == _match_expr)) { goto _case_end_5127568336; }
		_case_begin_5127568336:;
		{
			return this->self->_method_build_struct_decl(_160539_tokens);
		}
		goto _match_end_5127563232;
		_case_end_5127568336:;
		if (!((29LLU) == _match_expr)) { goto _case_end_5127568528; }
		_case_begin_5127568528:;
		{
			return this->self->_method_build_trait_decl(_160539_tokens);
		}
		goto _match_end_5127563232;
		_case_end_5127568528:;
		if (!((30LLU) == _match_expr)) { goto _case_end_5127568640; }
		_case_begin_5127568640:;
		{
			return this->self->_method_build_impl(_160539_tokens);
		}
		goto _match_end_5127563232;
		_case_end_5127568640:;
		if (!((31LLU) == _match_expr)) { goto _case_end_5127568752; }
		_case_begin_5127568752:;
		{
			return this->self->_method_build_cpp_link(_160539_tokens);
		}
		goto _match_end_5127563232;
		_case_end_5127568752:;
		if (!((18LLU) == _match_expr)) { goto _case_end_5127568864; }
		_case_begin_5127568864:;
		{
			jule::Ref<_1275d7180_Comment> _164721_c = _127b060e0_build_comment(_160617_token);
			this->self->_method_process_comment(_164721_c);
			return _164721_c;
		}
		goto _match_end_5127563232;
		_case_end_5127568864:;
		_case_begin_5127565136:;
		{
			this->self->_method_push_err(_160617_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return nullptr;
		}
		goto _match_end_5127563232;
		_case_end_5127565136:;
		_match_end_5127563232:;
	}
}



inline void _127b060e0_Parser::_method_check_comment_group(_1275d7180_Node _165738_node) {
	if ((!(jule::real((*this)._field_comment_group)))) {
		return;
	}
	{
		auto &_match_expr{ _165738_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_Comment>>() || _match_expr.type_is<jule::Ref<_1275d7180_Directive>>())) { goto _case_end_5127591104; }
		goto _match_end_5127589456;
		_case_end_5127591104:;
		_case_begin_5127590320:;
		{
			jule::drop((*this)._field_comment_group);
		}
		goto _match_end_5127589456;
		_case_end_5127590320:;
		_match_end_5127589456:;
	}
}



inline void _127b060e0_Parser::_method_check_directive(_1275d7180_Node _167134_node) {
	if ((*this)._field_directives == nullptr) {
		return;
	}
	{
		auto &_match_expr{ _167134_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_Directive>>() || _match_expr.type_is<jule::Ref<_1275d7180_Comment>>())) { goto _case_end_5127597632; }
		goto _match_end_5127596544;
		_case_end_5127597632:;
		_case_begin_5127596096:;
		{
			(*this)._field_directives=nullptr;
		}
		goto _match_end_5127596544;
		_case_end_5127596096:;
		_match_end_5127596544:;
	}
}



inline void _127b060e0_Parser::_method_apply_meta(_1275d7180_Node _168633_node,jule::Bool _168649_is_pub) {
	{
		auto &_match_expr{ _168633_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_VarDecl>>())) { goto _case_end_5127602144; }
		_case_begin_5127602144:;
		{
			jule::Ref<_1275d7180_VarDecl> _168921_v = _168633_node._field_data.operator jule::Ref<_1275d7180_VarDecl>();
			if ((!(jule::real(_168921_v)))) {
				return;
			}
			_168921_v->_field_public=_168649_is_pub;
			_168921_v->_field_doc_comments=(*this)._field_comment_group;
			_168649_is_pub=false;
			jule::drop((*this)._field_comment_group);
		}
		goto _match_end_5127601280;
		_case_end_5127602144:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_FnDecl>>())) { goto _case_end_5127602256; }
		_case_begin_5127602256:;
		{
			jule::Ref<_1275d7180_FnDecl> _169921_f = _168633_node._field_data.operator jule::Ref<_1275d7180_FnDecl>();
			if ((!(jule::real(_169921_f)))) {
				return;
			}
			_169921_f->_field_public=_168649_is_pub;
			_168649_is_pub=false;
			_169921_f->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
			_169921_f->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
		}
		goto _match_end_5127601280;
		_case_end_5127602256:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_TypeAliasDecl>>())) { goto _case_end_5127602368; }
		_case_begin_5127602368:;
		{
			jule::Ref<_1275d7180_TypeAliasDecl> _171221_tad = _168633_node._field_data.operator jule::Ref<_1275d7180_TypeAliasDecl>();
			if ((!(jule::real(_171221_tad)))) {
				return;
			}
			_171221_tad->_field_public=_168649_is_pub;
			_168649_is_pub=false;
			_171221_tad->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
		}
		goto _match_end_5127601280;
		_case_end_5127602368:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_EnumDecl>>())) { goto _case_end_5127602496; }
		_case_begin_5127602496:;
		{
			jule::Ref<_1275d7180_EnumDecl> _172221_ed = _168633_node._field_data.operator jule::Ref<_1275d7180_EnumDecl>();
			if ((!(jule::real(_172221_ed)))) {
				return;
			}
			_172221_ed->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_172221_ed->_field_public=_168649_is_pub;
			_168649_is_pub=false;
		}
		goto _match_end_5127601280;
		_case_end_5127602496:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_StructDecl>>())) { goto _case_end_5127602624; }
		_case_begin_5127602624:;
		{
			jule::Ref<_1275d7180_StructDecl> _173221_sd = _168633_node._field_data.operator jule::Ref<_1275d7180_StructDecl>();
			if ((!(jule::real(_173221_sd)))) {
				return;
			}
			_173221_sd->_field_directives=(*this)._field_directives;
			(*this)._field_directives=nullptr;
			_173221_sd->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_173221_sd->_field_public=_168649_is_pub;
			_168649_is_pub=false;
		}
		goto _match_end_5127601280;
		_case_end_5127602624:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_TraitDecl>>())) { goto _case_end_5127602752; }
		_case_begin_5127602752:;
		{
			jule::Ref<_1275d7180_TraitDecl> _174421_td = _168633_node._field_data.operator jule::Ref<_1275d7180_TraitDecl>();
			if ((!(jule::real(_174421_td)))) {
				return;
			}
			_174421_td->_field_doc_comments=(*this)._field_comment_group;
			jule::drop((*this)._field_comment_group);
			_174421_td->_field_public=_168649_is_pub;
			_168649_is_pub=false;
		}
		goto _match_end_5127601280;
		_case_end_5127602752:;
		_match_end_5127601280:;
	}
	if (_168649_is_pub) {
		(*this)._method_push_err(_168633_node._field_token,jule::Str("def_not_support_pub", 19),jule::Slice<jule::Any>({}));
	}
}



inline void _127b060e0_Parser::_method_check_use_decl(_1275d7180_Node _175833_node) {
	{
		auto &_match_expr{ _175833_node._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_UseDecl>>())) { goto _case_end_5127646384; }
		goto _match_end_5127644528;
		_case_end_5127646384:;
		_case_begin_5127645344:;
		{
			return;
		}
		goto _match_end_5127644528;
		_case_end_5127645344:;
		_match_end_5127644528:;
	}
	if ((*this)._field_ast->_field_decls._method_len() > 0LL) {
		(*this)._method_push_err(_175833_node._field_token,jule::Str("use_decl_at_body", 16),jule::Slice<jule::Any>({}));
	}
}



inline std::tuple<jule::Bool,jule::Any> _127b060e0_Parser::_method_build_general_scope_node_data(jule::Slice<_127941de0_Token> _177253_st) {
	jule::Any _177282_data = jule::Any();
	jule::Bool _177268_is_pub = jule::Bool();
	if (_177253_st[static_cast<jule::Int>(0LL)]._field_id == 21LLU) {
		_177268_is_pub=true;
		_177253_st=_177253_st.slice(static_cast<jule::Int>(1LL));
		if (_177253_st.len() == 0LL) {
			this->self->_method_push_err(_177253_st[static_cast<jule::Int>(0LL)],jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return std::make_tuple(_177268_is_pub,_177282_data);
		}
	}
	_177282_data=this->self->_method_build_node_data(_177253_st);
	_177268_is_pub = _177268_is_pub;
	_177282_data = _177282_data;
	return std::make_tuple(_177268_is_pub,_177282_data);
}



inline _1275d7180_Node _127b060e0_Parser::_method_parse_node(jule::Slice<_127941de0_Token> _178734_st) {
	_1275d7180_Node _178817_node = _1275d7180_Node(_178734_st[static_cast<jule::Int>(0LL)],jule::Any());
	jule::Bool _179214_is_pub;
	jule::Any _179226_data;
	std::tie(_179214_is_pub,_179226_data) = this->self->_method_build_general_scope_node_data(_178734_st);
	if (_179226_data == nullptr) {
		return _178817_node;
	}
	_178817_node._field_data=_179226_data;
	this->self->_method_apply_meta(_178817_node,_179214_is_pub);
	this->self->_method_check_comment_group(_178817_node);
	this->self->_method_check_directive(_178817_node);
	this->self->_method_check_use_decl(_178817_node);
	return _178817_node;
}



inline void _127b060e0_Parser::_method_append_node(jule::Slice<_127941de0_Token> _180635_st) {
	if (_180635_st.len() == 0LL) {
		return;
	}
	_1275d7180_Node _181117_node = this->self->_method_parse_node(_180635_st);
	if ((_181117_node._field_data == nullptr) || this->self->_method_stopped()) {
		return;
	}
	{
		if (!((_181117_node._method_is_use_decl()))) { goto _case_end_5127686320; }
		_case_begin_5127686320:;
		{
			this->self->_field_ast->_field_use_decls._method_push(_181117_node._field_data.operator jule::Ref<_1275d7180_UseDecl>());
		}
		goto _match_end_5127683904;
		_case_end_5127686320:;
		if (!((_181117_node._method_is_decl()))) { goto _case_end_5127685264; }
		_case_begin_5127685264:;
		{
			this->self->_field_ast->_field_decls._method_push(_181117_node);
		}
		goto _match_end_5127683904;
		_case_end_5127685264:;
		if (!((_181117_node._method_is_comment()))) { goto _case_end_5127685376; }
		_case_begin_5127685376:;
		{
			jule::Ref<_1275d7180_Comment> _182621_c = _181117_node._field_data.operator jule::Ref<_1275d7180_Comment>();
			this->self->_field_ast->_field_comments._method_push(_182621_c);
		}
		goto _match_end_5127683904;
		_case_end_5127685376:;
		if (!((_181117_node._method_is_impl()))) { goto _case_end_5127685488; }
		_case_begin_5127685488:;
		{
			this->self->_field_ast->_field_impls._method_push(_181117_node._field_data.operator jule::Ref<_1275d7180_Impl>());
		}
		goto _match_end_5127683904;
		_case_end_5127685488:;
		_case_begin_5127684960:;
		{
			this->self->_method_push_err(_181117_node._field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		}
		goto _match_end_5127683904;
		_case_end_5127684960:;
		_match_end_5127683904:;
	}
}



inline void _127b060e0_Parser::_method_check_ranges(jule::Slice<_127941de0_Token> _183731_tokens) {
	jule::Slice<jule::Int> _183817_ranges = nullptr;
	jule::Fn<jule::Str(jule::Str)> _184013_get_close_kind_of_brace = jule::Fn<jule::Str(jule::Str)>([=](jule::Str _184042_left) mutable -> jule::Str {
		{
			auto &_match_expr{ _184042_left };
			if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_5127709008; }
			_case_begin_5127709008:;
			{
				return jule::Str("(", 1);
			}
			goto _match_end_5127708048;
			_case_end_5127709008:;
			if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_5127709120; }
			_case_begin_5127709120:;
			{
				return jule::Str("{", 1);
			}
			goto _match_end_5127708048;
			_case_end_5127709120:;
			if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_5127709232; }
			_case_begin_5127709232:;
			{
				return jule::Str("[", 1);
			}
			goto _match_end_5127708048;
			_case_end_5127709232:;
			_case_begin_5127708144:;
			{
				return jule::Str("", 0);
			}
			goto _match_end_5127708048;
			_case_end_5127708144:;
			_match_end_5127708048:;
		}
	});
	jule::Fn<void(jule::Int,jule::Str)> _184913_remove_range = jule::Fn<void(jule::Int,jule::Str)>([=](jule::Int _184935_i,jule::Str _184943_kind) mutable -> void {
		jule::Str _185017_close = _184013_get_close_kind_of_brace(_184943_kind);
		_iter_begin_5127717136:;
		if (!(_184935_i >= 0LL)) { goto _iter_end_5127717136; }
		{
			_127941de0_Token _185221_tok = _183731_tokens[static_cast<jule::Int>(_183817_ranges[static_cast<jule::Int>(_184935_i)])];
			if (_185221_tok._field_kind != _185017_close) {
				goto _iter_next_5127717136;
			}
			_183817_ranges=append(_183817_ranges.slice(0LL,static_cast<jule::Int>(_184935_i)),_183817_ranges.slice(static_cast<jule::Int>(_184935_i + 1LL)));
			goto _iter_end_5127717136;
		}
		_iter_next_5127717136:;
		(_184935_i)--;
		goto _iter_begin_5127717136;
		_iter_end_5127717136:;
	});
	jule::Fn<void(_127941de0_Token)> _186213_push_wrong_order_close_err = jule::Fn<void(_127941de0_Token)>([=](_127941de0_Token _186245_t) mutable -> void {
		jule::Str _186321_msg = jule::Str("", 0);
		{
			auto &_match_expr{ _183731_tokens[static_cast<jule::Int>(_183817_ranges[static_cast<jule::Int>(_183817_ranges.len() - 1LL)])]._field_kind };
			if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_5127734256; }
			_case_begin_5127734256:;
			{
				_186321_msg=jule::Str("expected_parentheses_close", 26);
			}
			goto _match_end_5127731232;
			_case_end_5127734256:;
			if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_5127734368; }
			_case_begin_5127734368:;
			{
				_186321_msg=jule::Str("expected_brace_close", 20);
			}
			goto _match_end_5127731232;
			_case_end_5127734368:;
			if (!((jule::Str("[", 1)) == _match_expr)) { goto _case_end_5127734480; }
			_case_begin_5127734480:;
			{
				_186321_msg=jule::Str("expected_bracket_close", 22);
			}
			goto _match_end_5127731232;
			_case_end_5127734480:;
			_match_end_5127731232:;
		}
		(*this)._method_push_err(_186245_t,_186321_msg,jule::Slice<jule::Any>({}));
	});
	jule::Fn<void(_127941de0_Token,jule::Str)> _187313_push_range_close = jule::Fn<void(_127941de0_Token,jule::Str)>([=](_127941de0_Token _187335_t,jule::Str _187345_left) mutable -> void {
		jule::I64 _187417_n = _183817_ranges.len();
		if (_187417_n == 0LL) {
			{
				auto &_match_expr{ _187335_t._field_kind };
				if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_5127745696; }
				_case_begin_5127745696:;
				{
					(*this)._method_push_err(_187335_t,jule::Str("extra_closed_brackets", 21),jule::Slice<jule::Any>({}));
				}
				goto _match_end_5127744816;
				_case_end_5127745696:;
				if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_5127745808; }
				_case_begin_5127745808:;
				{
					(*this)._method_push_err(_187335_t,jule::Str("extra_closed_braces", 19),jule::Slice<jule::Any>({}));
				}
				goto _match_end_5127744816;
				_case_end_5127745808:;
				if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_5127745920; }
				_case_begin_5127745920:;
				{
					(*this)._method_push_err(_187335_t,jule::Str("extra_closed_parentheses", 24),jule::Slice<jule::Any>({}));
				}
				goto _match_end_5127744816;
				_case_end_5127745920:;
				_match_end_5127744816:;
			}
			return;
		} else if (_183731_tokens[static_cast<jule::Int>(_183817_ranges[static_cast<jule::Int>(_187417_n - 1LL)])]._field_kind != _187345_left) {
			_186213_push_wrong_order_close_err(_187335_t);
		}
		_184913_remove_range(_187417_n - 1LL,_187335_t._field_kind);
	});
	{
		auto &__julec_range_expr = _183731_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _127b060e0_i = 0;
			_127941de0_Token _127b060e0_token = *__julec_range_begin;
			_iter_begin_5127755280:;
			{
				if (_127b060e0_token._field_id != 3LLU) {
					goto _iter_next_5127755280;
				}
				{
					auto &_match_expr{ _127b060e0_token._field_kind };
					if (!((jule::Str("(", 1)) == _match_expr || (jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr)) { goto _case_end_5127759904; }
					_case_begin_5127759904:;
					{
						_183817_ranges=append(_183817_ranges,jule::Slice<jule::Int>({_127b060e0_i}));
					}
					goto _match_end_5127760496;
					_case_end_5127759904:;
					if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_5127760592; }
					_case_begin_5127760592:;
					{
						_187313_push_range_close(_127b060e0_token,jule::Str("(", 1));
					}
					goto _match_end_5127760496;
					_case_end_5127760592:;
					if (!((jule::Str("}", 1)) == _match_expr)) { goto _case_end_5127760704; }
					_case_begin_5127760704:;
					{
						_187313_push_range_close(_127b060e0_token,jule::Str("{", 1));
					}
					goto _match_end_5127760496;
					_case_end_5127760704:;
					if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_5127760816; }
					_case_begin_5127760816:;
					{
						_187313_push_range_close(_127b060e0_token,jule::Str("[", 1));
					}
					goto _match_end_5127760496;
					_case_end_5127760816:;
					_match_end_5127760496:;
				}
			}
			_iter_next_5127755280:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_127b060e0_i; _127b060e0_token = *__julec_range_begin; goto _iter_begin_5127755280; }
			_iter_end_5127755280:;
		}
	}
	{
		auto &__julec_range_expr = _183817_ranges;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _127b060e0_i = *__julec_range_begin;
			_iter_begin_5127768880:;
			{
				_127941de0_Token _191117_token = _183731_tokens[static_cast<jule::Int>(_127b060e0_i)];
				{
					auto &_match_expr{ _191117_token._field_kind };
					if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_5127772224; }
					_case_begin_5127772224:;
					{
						(*this)._method_push_err(_191117_token,jule::Str("wait_close_parentheses", 22),jule::Slice<jule::Any>({}));
					}
					goto _match_end_5127770960;
					_case_end_5127772224:;
					if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_5127772336; }
					_case_begin_5127772336:;
					{
						(*this)._method_push_err(_191117_token,jule::Str("wait_close_brace", 16),jule::Slice<jule::Any>({}));
					}
					goto _match_end_5127770960;
					_case_end_5127772336:;
					if (!((jule::Str("[", 1)) == _match_expr)) { goto _case_end_5127772448; }
					_case_begin_5127772448:;
					{
						(*this)._method_push_err(_191117_token,jule::Str("wait_close_bracket", 18),jule::Slice<jule::Any>({}));
					}
					goto _match_end_5127770960;
					_case_end_5127772448:;
					_match_end_5127770960:;
				}
			}
			_iter_next_5127768880:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127b060e0_i = *__julec_range_begin; goto _iter_begin_5127768880; }
			_iter_end_5127768880:;
		}
	}
}



inline void _127b060e0_Parser::_method_parse(jule::Ref<_126f67810_File> _192029_f) {
	this->self->_field_ast=jule::new_struct<_1275d0e60_Ast>(new( std::nothrow ) _1275d0e60_Ast(_192029_f,_127ab7fa0_Vector_1(),_127ab7fa0_Vector_2(),_127ab7fa0_Vector_3(),_127ab7fa0_Vector_4(),_127ab7fa0_Vector_5()));
	jule::Slice<_127941de0_Token> _192517_tokens = __jule_parser_vector_as_slice<_127ab7fa0_Vector_0,_127941de0_Token>(_192029_f->_method_tokens());
	this->self->_method_check_ranges(_192517_tokens);
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	jule::Slice<jule::Ref<_127b06690_Stmt>> _193217_stms = _127b06690_split_stms(_192517_tokens);
	jule::Int _193517_i = 0LL;
	_iter_begin_5127779632:;
	if (!(_193517_i < _193217_stms.len())) { goto _iter_end_5127779632; }
	{
		jule::Ref<_127b06690_Stmt> _193721_st = _193217_stms[static_cast<jule::Int>(_193517_i)];
		if (_193721_st->_field_tokens.len() == 0LL) {
			return;
		}
		jule::Any _194225_data;
		std::tie(std::ignore,_194225_data) = this->self->_method_build_general_scope_node_data(_193721_st->_field_tokens);
		if (_194225_data == nullptr) {
			goto _iter_next_5127779632;
		}
		if (this->self->_method_stopped()) {
			return;
		}
		_1275d7180_Node _195121_node = _1275d7180_Node(_127941de0_Token(),_194225_data);
		if (_195121_node._method_is_comment()) {
			jule::Ref<_1275d7180_Directive> _195325_d = this->self->_method_get_directive(_195121_node._field_data.operator jule::Ref<_1275d7180_Comment>());
			if (jule::real(_195325_d) && _136e9f3c0_is_top_directive(_195325_d->_field_tag)) {
				this->self->_field_ast->_field_top_directives._method_push(_195325_d);
			}
		} else {
			goto _iter_end_5127779632;
		}
	}
	_iter_next_5127779632:;
	(_193517_i)++;
	goto _iter_begin_5127779632;
	_iter_end_5127779632:;
	this->self->_field_errors=nullptr;
	_iter_begin_5127805776:;
	if (!(_193517_i < _193217_stms.len())) { goto _iter_end_5127805776; }
	{
		jule::Ref<_127b06690_Stmt> _196621_st = _193217_stms[static_cast<jule::Int>(_193517_i)];
		this->self->_method_append_node(_196621_st->_field_tokens);
		if (this->self->_method_stopped()) {
			goto _iter_end_5127805776;
		}
	}
	_iter_next_5127805776:;
	(_193517_i)++;
	goto _iter_begin_5127805776;
	_iter_end_5127805776:;
}







std::ostream &operator<<(std::ostream &_Stream, const _127b060e0_Parser &_Src) {
	_Stream << "Parser{";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "comment_group:" << _Src._field_comment_group << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}



inline void _127b2c380_TypeBuilder::_method_push_err(_127941de0_Token _7727_token,jule::Str _7741_key) {
	if ((*this)._field_err) {
		(*this)._field_p->_method_push_err(_7727_token,_7741_key,jule::Slice<jule::Any>({}));
	}
}



inline jule::Ref<_1275d7180_TypeDecl> _127b2c380_TypeBuilder::_method_build_prim(void) {
	jule::Ref<_1275d7180_TypeDecl> _8417_t = _127b2c380_build_prim_type((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))]);
	((*((*this)._field_i)))++;
	return _8417_t;
}



inline jule::Ref<_1275d7180_TypeDecl> _127b2c380_TypeBuilder::_method_build_namespace(void) {
	jule::Ref<_1275d7180_TypeDecl> _9017_t = jule::new_struct<_1275d7180_TypeDecl>(new( std::nothrow ) _1275d7180_TypeDecl((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))],jule::Any()));
	jule::Ref<_1275d7180_NamespaceTypeDecl> _9417_nst = jule::new_struct<_1275d7180_NamespaceTypeDecl>(new( std::nothrow ) _1275d7180_NamespaceTypeDecl());
	jule::Int _9517_n = 0LL;
	_iter_begin_5127828672:;
	if (!((*((*this)._field_i)) < (*this)._field_tokens.len())) { goto _iter_end_5127828672; }
	{
		_127941de0_Token _9721_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
		if ((_9517_n % 2LL) == 0LL) {
			if (_9721_token._field_id != 2LLU) {
				(*this)._method_push_err(_9721_token,jule::Str("invalid_syntax", 14));
			}
			_9417_nst->_field_idents=append(_9417_nst->_field_idents,jule::Slice<_127941de0_Token>({_9721_token}));
		} else if (_9721_token._field_id != 23LLU) {
			goto _iter_end_5127828672;
		}
		(_9517_n)++;
	}
	_iter_next_5127828672:;
	((*((*this)._field_i)))++;
	goto _iter_begin_5127828672;
	_iter_end_5127828672:;
	_9417_nst->_field_idents=_9417_nst->_field_idents.slice(0LL,static_cast<jule::Int>(_9417_nst->_field_idents.len() - 1LL));
	((*((*this)._field_i)))--;
	_9417_nst->_field_kind=(*this)._method_build_ident()->_field_kind.operator jule::Ref<_1275d7180_IdentTypeDecl>();
	_9017_t->_field_kind=jule::Any(_9417_nst);
	return _9017_t;
}



inline jule::Slice<jule::Ref<_1275d7180_TypeDecl>> _127b2c380_TypeBuilder::_method_build_generics(void) {
	if ((*((*this)._field_i)) >= (*this)._field_tokens.len()) {
		return nullptr;
	}
	_127941de0_Token _12213_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if ((_12213_token._field_id != 3LLU) || (_12213_token._field_kind != jule::Str("[", 1))) {
		return nullptr;
	}
	jule::Slice<jule::Slice<_127941de0_Token>> _12717_parts = (*this)._method_ident_generics();
	if (_12717_parts.len() == 0LL) {
		(*this)._method_push_err(_12213_token,jule::Str("invalid_syntax", 14));
		return nullptr;
	}
	jule::Slice<jule::Ref<_1275d7180_TypeDecl>> _13317_types = jule::Slice<jule::Ref<_1275d7180_TypeDecl>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_12717_parts.len())));
	{
		auto &__julec_range_expr = _12717_parts;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _127b2c380_i = 0;
			jule::Slice<_127941de0_Token> _127b2c380_part = *__julec_range_begin;
			_iter_begin_5127864032:;
			{
				jule::Int _13521_j = 0LL;
				jule::Ref<_1275d7180_TypeDecl> _13622_t;
				std::tie(_13622_t,std::ignore) = (*this)._field_p->_method_build_type(_127b2c380_part,(&(_13521_j)),true);
				if (_13521_j < _127b2c380_part.len()) {
					(*this)._method_push_err(_127b2c380_part[static_cast<jule::Int>(_13521_j)],jule::Str("invalid_syntax", 14));
				}
				_13317_types[static_cast<jule::Int>(_127b2c380_i)]=_13622_t;
			}
			_iter_next_5127864032:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_127b2c380_i; _127b2c380_part = *__julec_range_begin; goto _iter_begin_5127864032; }
			_iter_end_5127864032:;
		}
	}
	return _13317_types;
}



inline jule::Slice<jule::Slice<_127941de0_Token>> _127b2c380_TypeBuilder::_method_ident_generics(void) {
	jule::Int _14613_first = (*((*this)._field_i));
	jule::Int _14717_range_n = 0LL;
	_iter_begin_5127876176:;
	if (!((*((*this)._field_i)) < (*this)._field_tokens.len())) { goto _iter_end_5127876176; }
	{
		_127941de0_Token _14917_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
		if (_14917_token._field_id == 3LLU) {
			{
				auto &_match_expr{ _14917_token._field_kind };
				if (!((jule::Str("[", 1)) == _match_expr)) { goto _case_end_5127880928; }
				_case_begin_5127880928:;
				{
					(_14717_range_n)++;
				}
				goto _match_end_5127879968;
				_case_end_5127880928:;
				if (!((jule::Str("]", 1)) == _match_expr)) { goto _case_end_5127881040; }
				_case_begin_5127881040:;
				{
					(_14717_range_n)--;
				}
				goto _match_end_5127879968;
				_case_end_5127881040:;
				_match_end_5127879968:;
			}
		}
		if (_14717_range_n == 0LL) {
			((*((*this)._field_i)))++;
			goto _iter_end_5127876176;
		}
	}
	_iter_next_5127876176:;
	((*((*this)._field_i)))++;
	goto _iter_begin_5127876176;
	_iter_end_5127876176:;
	jule::Slice<_127941de0_Token> _16117_tokens = (*this)._field_tokens.slice(static_cast<jule::Int>(_14613_first + 1LL),static_cast<jule::Int>((*((*this)._field_i)) - 1LL));
	jule::Slice<jule::Slice<_127941de0_Token>> _16218_parts;
	jule::Slice<_136e99d00_Log> _16225_errors;
	std::tie(_16218_parts,_16225_errors) = _127b060e0_parts(_16117_tokens,8LLU,true);
	if ((*this)._field_err) {
		(*this)._field_p->_field_errors=append((*this)._field_p->_field_errors,_16225_errors);
	}
	return _16218_parts;
}



inline jule::Ref<_1275d7180_TypeDecl> _127b2c380_TypeBuilder::_method_build_ident(void) {
	if ((((*((*this)._field_i)) + 1LL) < (*this)._field_tokens.len()) && ((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)) + 1LL)]._field_id == 23LLU)) {
		return (*this)._method_build_namespace();
	}
	_127941de0_Token _17317_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	jule::Ref<_1275d7180_IdentTypeDecl> _17417_it = jule::new_struct<_1275d7180_IdentTypeDecl>(new( std::nothrow ) _1275d7180_IdentTypeDecl(_17317_token,_17317_token._field_kind,false,jule::Slice<jule::Ref<_1275d7180_TypeDecl>>()));
	((*((*this)._field_i)))++;
	_17417_it->_field_generics=(*this)._method_build_generics();
	return jule::new_struct<_1275d7180_TypeDecl>(new( std::nothrow ) _1275d7180_TypeDecl(_17317_token,_17417_it));
}



inline jule::Ref<_1275d7180_TypeDecl> _127b2c380_TypeBuilder::_method_build_cpp_link(void) {
	if ((((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) || ((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)) + 1LL)]._field_id != 20LLU)) {
		(*this)._method_push_err((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))],jule::Str("invalid_syntax", 14));
		return jule::new_ref<_1275d7180_TypeDecl>();
	}
	(*((*this)._field_i))+=2LL;
	jule::Ref<_1275d7180_TypeDecl> _19317_t = (*this)._method_build_ident();
	_19317_t->_field_kind.operator jule::Ref<_1275d7180_IdentTypeDecl>()->_field_cpp_linked=true;
	return _19317_t;
}



inline jule::Ref<_1275d7180_TypeDecl> _127b2c380_TypeBuilder::_method_build_fn(void) {
	_127941de0_Token _19917_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	jule::Ref<_1275d7180_FnDecl> _20017_f = (*this)._field_p->_method_build_fn_prototype((*this)._field_tokens,(*((*this)._field_i)),false,true);
	if ((!(jule::real(_20017_f)))) {
		return jule::new_ref<_1275d7180_TypeDecl>();
	}
	return jule::new_struct<_1275d7180_TypeDecl>(new( std::nothrow ) _1275d7180_TypeDecl(_19917_token,_20017_f));
}



inline jule::Ref<_1275d7180_TypeDecl> _127b2c380_TypeBuilder::_method_build_ptr(void) {
	_127941de0_Token _21117_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if (((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err(_21117_token,jule::Str("invalid_syntax", 14));
		return jule::new_ref<_1275d7180_TypeDecl>();
	}
	((*((*this)._field_i)))++;
	if ((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))]._field_id == 35LLU) {
		((*((*this)._field_i)))++;
		return jule::new_struct<_1275d7180_TypeDecl>(new( std::nothrow ) _1275d7180_TypeDecl(_21117_token,jule::new_struct<_1275d7180_PtrTypeDecl>(new( std::nothrow ) _1275d7180_PtrTypeDecl(jule::new_ref<_1275d7180_TypeDecl>()))));
	}
	jule::Ref<_1275d7180_TypeDecl> _22817_elem = (*this)._method_step();
	if ((!(jule::real(_22817_elem)))) {
		return jule::new_ref<_1275d7180_TypeDecl>();
	}
	return jule::new_struct<_1275d7180_TypeDecl>(new( std::nothrow ) _1275d7180_TypeDecl(_21117_token,jule::new_struct<_1275d7180_PtrTypeDecl>(new( std::nothrow ) _1275d7180_PtrTypeDecl(_22817_elem))));
}



inline jule::Ref<_1275d7180_TypeDecl> _127b2c380_TypeBuilder::_method_build_ref(void) {
	_127941de0_Token _24217_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if (((*((*this)._field_i)) + 1LL) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err(_24217_token,jule::Str("invalid_syntax", 14));
		return jule::new_ref<_1275d7180_TypeDecl>();
	}
	((*((*this)._field_i)))++;
	jule::Ref<_1275d7180_TypeDecl> _24917_elem = (*this)._method_step();
	if ((!(jule::real(_24917_elem)))) {
		return jule::new_ref<_1275d7180_TypeDecl>();
	}
	return jule::new_struct<_1275d7180_TypeDecl>(new( std::nothrow ) _1275d7180_TypeDecl(_24217_token,jule::new_struct<_1275d7180_RefTypeDecl>(new( std::nothrow ) _1275d7180_RefTypeDecl(_24917_elem))));
}



inline jule::Ref<_1275d7180_TypeDecl> _127b2c380_TypeBuilder::_method_build_op(void) {
	_127941de0_Token _26317_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	{
		auto &_match_expr{ _26317_token._field_kind };
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_5127964496; }
		_case_begin_5127964496:;
		{
			return (*this)._method_build_ptr();
		}
		goto _match_end_5127959104;
		_case_end_5127964496:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_5127964240; }
		_case_begin_5127964240:;
		{
			return (*this)._method_build_ref();
		}
		goto _match_end_5127959104;
		_case_end_5127964240:;
		if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_5127964784; }
		_case_begin_5127964784:;
		{
			(*this)._method_push_err(_26317_token,jule::Str("ref_refs_ref", 12));
			return (*this)._method_build_ref();
		}
		goto _match_end_5127959104;
		_case_end_5127964784:;
		_case_begin_5127961744:;
		{
			(*this)._method_push_err(_26317_token,jule::Str("invalid_syntax", 14));
			return jule::new_ref<_1275d7180_TypeDecl>();
		}
		goto _match_end_5127959104;
		_case_end_5127961744:;
		_match_end_5127959104:;
	}
}



inline jule::Ref<_1275d7180_TypeDecl> _127b2c380_TypeBuilder::_method_build_slc(void) {
	_127941de0_Token _28217_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	((*((*this)._field_i)))++;
	jule::Ref<_1275d7180_TypeDecl> _28417_elem = (*this)._method_step();
	if ((!(jule::real(_28417_elem)))) {
		return jule::new_ref<_1275d7180_TypeDecl>();
	}
	return jule::new_struct<_1275d7180_TypeDecl>(new( std::nothrow ) _1275d7180_TypeDecl(_28217_token,jule::new_struct<_1275d7180_SlcTypeDecl>(new( std::nothrow ) _1275d7180_SlcTypeDecl(_28417_elem))));
}



inline jule::Ref<_1275d7180_TypeDecl> _127b2c380_TypeBuilder::_method_build_arr(void) {
	if ((*((*this)._field_i)) >= (*this)._field_tokens.len()) {
		(*this)._method_push_err((*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)) - 1LL)],jule::Str("missing_type", 12));
		return jule::new_ref<_1275d7180_TypeDecl>();
	}
	jule::Int _30513_expr_delta = (*((*this)._field_i));
	jule::Ref<_1275d7180_TypeDecl> _30717_elem = (*this)._method_step();
	if ((!(jule::real(_30717_elem)))) {
		return jule::new_ref<_1275d7180_TypeDecl>();
	}
	jule::Ref<_1275d7180_ArrTypeDecl> _31217_arrt = jule::new_struct<_1275d7180_ArrTypeDecl>(new( std::nothrow ) _1275d7180_ArrTypeDecl(_30717_elem,jule::Ref<_1275d7180_Expr>()));
	jule::Slice<_127941de0_Token> _31621_expr_tokens;
	std::tie(std::ignore,_31621_expr_tokens) = _127b060e0_range_last((*this)._field_tokens.slice(0LL,static_cast<jule::Int>(_30513_expr_delta)));
	_31621_expr_tokens=_31621_expr_tokens.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(_31621_expr_tokens.len() - 1LL));
	_127941de0_Token _31817_token = _31621_expr_tokens[static_cast<jule::Int>(0LL)];
	if (((_31621_expr_tokens.len() == 1LL) && (_31817_token._field_id == 7LLU)) && (_31817_token._field_kind == jule::Str("...", 3))) {
	} else {
		_31217_arrt->_field_size=(*this)._field_p->_method_build_expr(_31621_expr_tokens);
	}
	return jule::new_struct<_1275d7180_TypeDecl>(new( std::nothrow ) _1275d7180_TypeDecl(_31817_token,_31217_arrt));
}



inline jule::Ref<_1275d7180_TypeDecl> _127b2c380_TypeBuilder::_method_build_map(jule::Int _33128_colon,jule::Slice<_127941de0_Token> _33144_tokens) {
	_127941de0_Token _33217_colon_token = (*this)._field_tokens[static_cast<jule::Int>(_33128_colon)];
	if ((_33128_colon == 0LL) || ((_33128_colon + 1LL) >= _33144_tokens.len())) {
		(*this)._method_push_err(_33217_colon_token,jule::Str("missing_type", 12));
		return jule::new_ref<_1275d7180_TypeDecl>();
	}
	jule::Slice<_127941de0_Token> _33717_key_tokens = _33144_tokens.slice(0LL,static_cast<jule::Int>(_33128_colon));
	jule::Slice<_127941de0_Token> _33817_val_tokens = _33144_tokens.slice(static_cast<jule::Int>(_33128_colon + 1LL));
	jule::Ref<_1275d7180_MapTypeDecl> _33917_mapt = jule::new_struct<_1275d7180_MapTypeDecl>(new( std::nothrow ) _1275d7180_MapTypeDecl());
	jule::Int _34117_j = 0LL;
	jule::Ref<_1275d7180_TypeDecl> _34218_keyt;
	jule::Bool _34228_ok;
	std::tie(_34218_keyt,_34228_ok) = (*this)._field_p->_method_build_type(_33717_key_tokens,(&(_34117_j)),(*this)._field_err);
	if ((!(_34228_ok))) {
		return jule::new_ref<_1275d7180_TypeDecl>();
	} else if (_34117_j < _33717_key_tokens.len()) {
		(*this)._method_push_err(_33717_key_tokens[static_cast<jule::Int>(_34117_j)],jule::Str("invalid_syntax", 14));
	}
	_33917_mapt->_field_key=_34218_keyt;
	_34117_j=0LL;
	jule::Ref<_1275d7180_TypeDecl> _35118_valt;
	std::tie(_35118_valt,_34228_ok) = (*this)._field_p->_method_build_type(_33817_val_tokens,(&(_34117_j)),(*this)._field_err);
	if ((!(_34228_ok))) {
		return jule::new_ref<_1275d7180_TypeDecl>();
	} else if (_34117_j < _33817_val_tokens.len()) {
		(*this)._method_push_err(_33817_val_tokens[static_cast<jule::Int>(_34117_j)],jule::Str("invalid_syntax", 14));
	}
	_33917_mapt->_field_val=_35118_valt;
	return jule::new_struct<_1275d7180_TypeDecl>(new( std::nothrow ) _1275d7180_TypeDecl(_33217_colon_token,_33917_mapt));
}



inline jule::Ref<_1275d7180_TypeDecl> _127b2c380_TypeBuilder::_method_build_enumerable(void) {
	_127941de0_Token _36617_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if (((((*((*this)._field_i)) + 2LL) >= (*this)._field_tokens.len()) || (_36617_token._field_id != 3LLU)) || (_36617_token._field_kind != jule::Str("[", 1))) {
		(*this)._method_push_err(_36617_token,jule::Str("invalid_syntax", 14));
		return jule::new_ref<_1275d7180_TypeDecl>();
	}
	((*((*this)._field_i)))++;
	_36617_token=(*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	if ((_36617_token._field_id == 3LLU) && (_36617_token._field_kind == jule::Str("]", 1))) {
		return (*this)._method_build_slc();
	}
	((*((*this)._field_i)))--;
	jule::Slice<_127941de0_Token> _38018_map_tokens;
	jule::Int _38030_colon;
	std::tie(_38018_map_tokens,_38030_colon) = _127b2c380_split_map_range((*this)._field_tokens,(*((*this)._field_i)));
	((*((*this)._field_i)))++;
	if (_38030_colon == -1LL) {
		return (*this)._method_build_arr();
	}
	return (*this)._method_build_map(_38030_colon,_38018_map_tokens);
}



inline jule::Ref<_1275d7180_TypeDecl> _127b2c380_TypeBuilder::_method_step(void) {
	_127941de0_Token _38913_token = (*this)._field_tokens[static_cast<jule::Int>((*((*this)._field_i)))];
	{
		auto &_match_expr{ _38913_token._field_id };
		if (!((1LLU) == _match_expr)) { goto _case_end_5128058448; }
		_case_begin_5128058448:;
		{
			return (*this)._method_build_prim();
		}
		goto _match_end_5128053440;
		_case_end_5128058448:;
		if (!((2LLU) == _match_expr)) { goto _case_end_5128058560; }
		_case_begin_5128058560:;
		{
			return (*this)._method_build_ident();
		}
		goto _match_end_5128053440;
		_case_end_5128058560:;
		if (!((31LLU) == _match_expr)) { goto _case_end_5128055104; }
		_case_begin_5128055104:;
		{
			return (*this)._method_build_cpp_link();
		}
		goto _match_end_5128053440;
		_case_end_5128055104:;
		if (!((33LLU) == _match_expr)) { goto _case_end_5128055216; }
		_case_begin_5128055216:;
		{
			return (*this)._method_build_fn();
		}
		goto _match_end_5128053440;
		_case_end_5128055216:;
		if (!((7LLU) == _match_expr)) { goto _case_end_5128055328; }
		_case_begin_5128055328:;
		{
			return (*this)._method_build_op();
		}
		goto _match_end_5128053440;
		_case_end_5128055328:;
		if (!((3LLU) == _match_expr)) { goto _case_end_5128057936; }
		_case_begin_5128057936:;
		{
			return (*this)._method_build_enumerable();
		}
		goto _match_end_5128053440;
		_case_end_5128057936:;
		_case_begin_5128054800:;
		{
			((*((*this)._field_i)))++;
			(*this)._method_push_err(_38913_token,jule::Str("invalid_syntax", 14));
			return jule::new_ref<_1275d7180_TypeDecl>();
		}
		goto _match_end_5128053440;
		_case_end_5128054800:;
		_match_end_5128053440:;
	}
}



inline std::tuple<jule::Ref<_1275d7180_TypeDecl>,jule::Bool> _127b2c380_TypeBuilder::_method_build(void) {
	jule::Bool _41844_ok = jule::Bool();
	jule::Ref<_1275d7180_TypeDecl> _41917_root = (*this)._method_step();
	if ((!(jule::real(_41917_root)))) {
		_41844_ok = false;
		return std::make_tuple(_127b2c380_build_void_type(),_41844_ok);
	}
	_41844_ok = true;
	return std::make_tuple(_41917_root,_41844_ok);
}







std::ostream &operator<<(std::ostream &_Stream, const _127b2c380_TypeBuilder &_Src) {
	_Stream << "TypeBuilder{";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "i:" << _Src._field_i << ", ";
	_Stream << "err:" << _Src._field_err;
	_Stream << "}";
	return _Stream;
}



inline jule::I64 _130c83140_Const::_method_read_i64(void) {
	if ((!((*this)._method_is_i64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::I64();
}



inline jule::U64 _130c83140_Const::_method_read_u64(void) {
	if ((!((*this)._method_is_u64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::U64();
}



inline jule::Bool _130c83140_Const::_method_read_bool(void) {
	if ((!((*this)._method_is_bool()))) {
		return false;
	}
	return (*this)._field_data.operator jule::Bool();
}



inline jule::Str _130c83140_Const::_method_read_str(void) {
	if ((!((*this)._method_is_str()))) {
		return jule::Str("", 0);
	}
	return (*this)._field_data.operator jule::Str();
}



inline jule::F64 _130c83140_Const::_method_read_f64(void) {
	if ((!((*this)._method_is_f64()))) {
		return 0LL;
	}
	return (*this)._field_data.operator jule::F64();
}



inline jule::I64 _130c83140_Const::_method_as_i64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_5128146000; }
		_case_begin_5128146000:;
		{
			return (*this)._field_data.operator jule::I64();
		}
		goto _match_end_5128143680;
		_case_end_5128146000:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_5128145696; }
		_case_begin_5128145696:;
		{
			return static_cast<jule::I64>((*this)._field_data.operator jule::U64());
		}
		goto _match_end_5128143680;
		_case_end_5128145696:;
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_5128146208; }
		_case_begin_5128146208:;
		{
			return static_cast<jule::I64>((*this)._field_data.operator jule::F64());
		}
		goto _match_end_5128143680;
		_case_end_5128146208:;
		_case_begin_5128144464:;
		{
			return 0LL;
		}
		goto _match_end_5128143680;
		_case_end_5128144464:;
		_match_end_5128143680:;
	}
}



inline jule::U64 _130c83140_Const::_method_as_u64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_5128153232; }
		_case_begin_5128153232:;
		{
			return (*this)._field_data.operator jule::U64();
		}
		goto _match_end_5128150704;
		_case_end_5128153232:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_5128152928; }
		_case_begin_5128152928:;
		{
			return static_cast<jule::U64>((*this)._field_data.operator jule::I64());
		}
		goto _match_end_5128150704;
		_case_end_5128152928:;
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_5128153440; }
		_case_begin_5128153440:;
		{
			return static_cast<jule::U64>((*this)._field_data.operator jule::F64());
		}
		goto _match_end_5128150704;
		_case_end_5128153440:;
		_case_begin_5128151840:;
		{
			return 0LL;
		}
		goto _match_end_5128150704;
		_case_end_5128151840:;
		_match_end_5128150704:;
	}
}



inline jule::F64 _130c83140_Const::_method_as_f64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_5128161168; }
		_case_begin_5128161168:;
		{
			return (*this)._field_data.operator jule::F64();
		}
		goto _match_end_5128151984;
		_case_end_5128161168:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_5128160864; }
		_case_begin_5128160864:;
		{
			return static_cast<jule::F64>((*this)._field_data.operator jule::I64());
		}
		goto _match_end_5128151984;
		_case_end_5128160864:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_5128161344; }
		_case_begin_5128161344:;
		{
			return static_cast<jule::F64>((*this)._field_data.operator jule::U64());
		}
		goto _match_end_5128151984;
		_case_end_5128161344:;
		_case_begin_5128159632:;
		{
			return 0LL;
		}
		goto _match_end_5128151984;
		_case_end_5128159632:;
		_match_end_5128151984:;
	}
}



inline void _130c83140_Const::_method_set_i64(jule::I64 _13830_x) {
	(*this)._field_data=jule::Any(_13830_x);
}



inline void _130c83140_Const::_method_set_u64(jule::U64 _14030_x) {
	(*this)._field_data=jule::Any(_14030_x);
}



inline void _130c83140_Const::_method_set_bool(jule::Bool _14231_x) {
	(*this)._field_data=jule::Any(_14231_x);
}



inline void _130c83140_Const::_method_set_str(jule::Str _14430_x) {
	(*this)._field_data=jule::Any(_14430_x);
}



inline void _130c83140_Const::_method_set_f64(jule::F64 _14630_x) {
	(*this)._field_data=jule::Any(_14630_x);
}



inline void _130c83140_Const::_method_set_nil(void) {
	(*this)._field_data=jule::Any(nullptr);
}



inline void _130c83140_Const::_method_set_by_type(jule::F64 _15030_v,_130c83140_Const _15038_x) {
	{
		if (!((_15038_x._method_is_f64()))) { goto _case_end_5128186016; }
		_case_begin_5128186016:;
		{
			(*this)._method_set_f64(_15030_v);
		}
		goto _match_end_5128185728;
		_case_end_5128186016:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_5128186128; }
		_case_begin_5128186128:;
		{
			(*this)._method_set_f64(_15030_v);
		}
		goto _match_end_5128185728;
		_case_end_5128186128:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_5128186240; }
		_case_begin_5128186240:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>(_15030_v));
		}
		goto _match_end_5128185728;
		_case_end_5128186240:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_5128186368; }
		_case_begin_5128186368:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>(_15030_v));
		}
		goto _match_end_5128185728;
		_case_end_5128186368:;
		_match_end_5128185728:;
	}
}



inline jule::Bool _130c83140_Const::_method_is_i64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_5128197280; }
		_case_begin_5128197280:;
		{
			return true;
		}
		goto _match_end_5128195952;
		_case_end_5128197280:;
		_case_begin_5128196288:;
		{
			return false;
		}
		goto _match_end_5128195952;
		_case_end_5128196288:;
		_match_end_5128195952:;
	}
}



inline jule::Bool _130c83140_Const::_method_is_u64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_5128200224; }
		_case_begin_5128200224:;
		{
			return true;
		}
		goto _match_end_5128196880;
		_case_end_5128200224:;
		_case_begin_5128199136:;
		{
			return false;
		}
		goto _match_end_5128196880;
		_case_end_5128199136:;
		_match_end_5128196880:;
	}
}



inline jule::Bool _130c83140_Const::_method_is_bool(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Bool>())) { goto _case_end_5128203168; }
		_case_begin_5128203168:;
		{
			return true;
		}
		goto _match_end_5128201088;
		_case_end_5128203168:;
		_case_begin_5128202080:;
		{
			return false;
		}
		goto _match_end_5128201088;
		_case_end_5128202080:;
		_match_end_5128201088:;
	}
}



inline jule::Bool _130c83140_Const::_method_is_str(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Str>())) { goto _case_end_5128206112; }
		_case_begin_5128206112:;
		{
			return true;
		}
		goto _match_end_5128204032;
		_case_end_5128206112:;
		_case_begin_5128205024:;
		{
			return false;
		}
		goto _match_end_5128204032;
		_case_end_5128205024:;
		_match_end_5128204032:;
	}
}



inline jule::Bool _130c83140_Const::_method_is_f64(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_5128209056; }
		_case_begin_5128209056:;
		{
			return true;
		}
		goto _match_end_5128206976;
		_case_end_5128209056:;
		_case_begin_5128207968:;
		{
			return false;
		}
		goto _match_end_5128206976;
		_case_end_5128207968:;
		_match_end_5128206976:;
	}
}



inline jule::Bool _130c83140_Const::_method_is_nil(void) {
	return (*this)._field_data == nullptr;
}



inline jule::Bool _130c83140_Const::_method_are_same_types(_130c83140_Const _20733_x) {
	{
		if (!(((*this)._method_is_i64() == _20733_x._method_is_i64()))) { goto _case_end_5128214896; }
		_case_begin_5128214896:;
		{
			return true;
		}
		goto _match_end_5128214384;
		_case_end_5128214896:;
		if (!(((*this)._method_is_u64() == _20733_x._method_is_u64()))) { goto _case_end_5128215008; }
		_case_begin_5128215008:;
		{
			return true;
		}
		goto _match_end_5128214384;
		_case_end_5128215008:;
		if (!(((*this)._method_is_f64() == _20733_x._method_is_f64()))) { goto _case_end_5128215120; }
		_case_begin_5128215120:;
		{
			return true;
		}
		goto _match_end_5128214384;
		_case_end_5128215120:;
		if (!(((*this)._method_is_bool() == _20733_x._method_is_bool()))) { goto _case_end_5128215952; }
		_case_begin_5128215952:;
		{
			return true;
		}
		goto _match_end_5128214384;
		_case_end_5128215952:;
		if (!(((*this)._method_is_str() == _20733_x._method_is_str()))) { goto _case_end_5128216064; }
		_case_begin_5128216064:;
		{
			return true;
		}
		goto _match_end_5128214384;
		_case_end_5128216064:;
		if (!(((*this)._method_is_nil() == _20733_x._method_is_nil()))) { goto _case_end_5128216176; }
		_case_begin_5128216176:;
		{
			return true;
		}
		goto _match_end_5128214384;
		_case_end_5128216176:;
		_case_begin_5128214592:;
		{
			return false;
		}
		goto _match_end_5128214384;
		_case_end_5128214592:;
		_match_end_5128214384:;
	}
}



inline jule::Bool _130c83140_Const::_method_and(_130c83140_Const _22522_x) {
	{
		if (!(((*this)._method_is_bool() && _22522_x._method_is_bool()))) { goto _case_end_5128230528; }
		_case_begin_5128230528:;
		{
			return (*this)._method_read_bool() && _22522_x._method_read_bool();
		}
		goto _match_end_5128229232;
		_case_end_5128230528:;
		_case_begin_5128229440:;
		{
			return false;
		}
		goto _match_end_5128229232;
		_case_end_5128229440:;
		_match_end_5128229232:;
	}
}



inline jule::Bool _130c83140_Const::_method_or(_130c83140_Const _23721_x) {
	{
		if (!(((*this)._method_is_bool() && _23721_x._method_is_bool()))) { goto _case_end_5128237040; }
		_case_begin_5128237040:;
		{
			return (*this)._method_read_bool() || _23721_x._method_read_bool();
		}
		goto _match_end_5128235744;
		_case_end_5128237040:;
		_case_begin_5128235952:;
		{
			return false;
		}
		goto _match_end_5128235744;
		_case_end_5128235952:;
		_match_end_5128235744:;
	}
}



inline jule::Bool _130c83140_Const::_method_eqs(_130c83140_Const _24922_x) {
	{
		if (!(((*this)._method_is_nil()))) { goto _case_end_5128605184; }
		_case_begin_5128605184:;
		{
			return _24922_x._method_is_nil();
		}
		goto _match_end_5128604672;
		_case_end_5128605184:;
		if (!(((*this)._method_is_bool()))) { goto _case_end_5128605296; }
		_case_begin_5128605296:;
		{
			return _24922_x._method_is_bool() && ((*this)._method_read_bool() == _24922_x._method_read_bool());
		}
		goto _match_end_5128604672;
		_case_end_5128605296:;
		if (!(((*this)._method_is_str()))) { goto _case_end_5128605408; }
		_case_begin_5128605408:;
		{
			return _24922_x._method_is_str() && ((*this)._method_read_str() == _24922_x._method_read_str());
		}
		goto _match_end_5128604672;
		_case_end_5128605408:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_5128606240; }
		_case_begin_5128606240:;
		{
			return (*this)._method_read_i64() == _24922_x._method_as_i64();
		}
		goto _match_end_5128604672;
		_case_end_5128606240:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_5128606352; }
		_case_begin_5128606352:;
		{
			return (*this)._method_read_u64() == _24922_x._method_as_u64();
		}
		goto _match_end_5128604672;
		_case_end_5128606352:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_5128606464; }
		_case_begin_5128606464:;
		{
			return (*this)._method_read_f64() == _24922_x._method_as_f64();
		}
		goto _match_end_5128604672;
		_case_end_5128606464:;
		_case_begin_5128604880:;
		{
			return false;
		}
		goto _match_end_5128604672;
		_case_end_5128604880:;
		_match_end_5128604672:;
	}
}



inline jule::Bool _130c83140_Const::_method_lt(_130c83140_Const _28121_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_5128624832; }
		_case_begin_5128624832:;
		{
			return (*this)._method_read_i64() < _28121_x._method_as_i64();
		}
		goto _match_end_5128624320;
		_case_end_5128624832:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_5128624944; }
		_case_begin_5128624944:;
		{
			return (*this)._method_read_u64() < _28121_x._method_as_u64();
		}
		goto _match_end_5128624320;
		_case_end_5128624944:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_5128625056; }
		_case_begin_5128625056:;
		{
			return (*this)._method_read_f64() < _28121_x._method_as_f64();
		}
		goto _match_end_5128624320;
		_case_end_5128625056:;
		_case_begin_5128624528:;
		{
			return false;
		}
		goto _match_end_5128624320;
		_case_end_5128624528:;
		_match_end_5128624320:;
	}
}



inline jule::Bool _130c83140_Const::_method_gt(_130c83140_Const _30421_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_5128635760; }
		_case_begin_5128635760:;
		{
			return (*this)._method_read_i64() > _30421_x._method_as_i64();
		}
		goto _match_end_5128635248;
		_case_end_5128635760:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_5128635872; }
		_case_begin_5128635872:;
		{
			return (*this)._method_read_u64() > _30421_x._method_as_u64();
		}
		goto _match_end_5128635248;
		_case_end_5128635872:;
		if (!(((*this)._method_is_f64()))) { goto _case_end_5128635984; }
		_case_begin_5128635984:;
		{
			return (*this)._method_read_f64() > _30421_x._method_as_f64();
		}
		goto _match_end_5128635248;
		_case_end_5128635984:;
		_case_begin_5128635456:;
		{
			return false;
		}
		goto _match_end_5128635248;
		_case_end_5128635456:;
		_match_end_5128635248:;
	}
}



inline jule::Bool _130c83140_Const::_method_add(_130c83140_Const _32626_x) {
	{
		if (!(((*this)._method_is_str()))) { goto _case_end_5128646944; }
		_case_begin_5128646944:;
		{
			if ((!(_32626_x._method_is_str()))) {
				return false;
			}
			(*this)._method_set_str((*this)._method_read_str() + _32626_x._method_read_str());
		}
		goto _match_end_5128645648;
		_case_end_5128646944:;
		if (!(((*this)._method_is_f64()) || ((*this)._method_is_i64()) || ((*this)._method_is_u64()))) { goto _case_end_5128646160; }
		_case_begin_5128646160:;
		{
			(*this)._method_set_by_type(static_cast<jule::F64>((*this)._method_as_f64() + _32626_x._method_as_f64()),_32626_x);
		}
		goto _match_end_5128645648;
		_case_end_5128646160:;
		_case_begin_5128645856:;
		{
			return false;
		}
		goto _match_end_5128645648;
		_case_end_5128645856:;
		_match_end_5128645648:;
	}
	return true;
}



inline jule::Bool _130c83140_Const::_method_sub(_130c83140_Const _34726_x) {
	{
		if (!(((*this)._method_is_f64()) || ((*this)._method_is_i64()) || ((*this)._method_is_u64()))) { goto _case_end_5128660336; }
		_case_begin_5128660336:;
		{
			(*this)._method_set_by_type(static_cast<jule::F64>((*this)._method_as_f64() - _34726_x._method_as_f64()),_34726_x);
		}
		goto _match_end_5128659040;
		_case_end_5128660336:;
		_case_begin_5128659248:;
		{
			return false;
		}
		goto _match_end_5128659040;
		_case_end_5128659248:;
		_match_end_5128659040:;
	}
	return true;
}



inline jule::Bool _130c83140_Const::_method_mul(_130c83140_Const _36226_x) {
	{
		if (!(((*this)._method_is_f64()) || ((*this)._method_is_i64()) || ((*this)._method_is_u64()))) { goto _case_end_5128669264; }
		_case_begin_5128669264:;
		{
			(*this)._method_set_by_type(static_cast<jule::F64>((*this)._method_as_f64() * _36226_x._method_as_f64()),_36226_x);
		}
		goto _match_end_5128667968;
		_case_end_5128669264:;
		_case_begin_5128668176:;
		{
			return false;
		}
		goto _match_end_5128667968;
		_case_end_5128668176:;
		_match_end_5128667968:;
	}
	return true;
}



inline jule::Bool _130c83140_Const::_method_div(_130c83140_Const _38126_x) {
	{
		if (!(((*this)._method_is_f64()))) { goto _case_end_5128676784; }
		_case_begin_5128676784:;
		{
			jule::F64 _38417_l = _38126_x._method_as_f64();
			if (_38417_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_read_f64(),_38417_l)));
		}
		goto _match_end_5128676272;
		_case_end_5128676784:;
		if (!(((*this)._method_is_i64()))) { goto _case_end_5128676896; }
		_case_begin_5128676896:;
		{
			jule::F64 _39117_l = _38126_x._method_as_f64();
			if (_39117_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_as_f64(),_39117_l)));
		}
		goto _match_end_5128676272;
		_case_end_5128676896:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_5128677008; }
		_case_begin_5128677008:;
		{
			jule::F64 _39817_l = _38126_x._method_as_f64();
			if (_39817_l == 0LL) {
				return false;
			}
			(*this)._method_set_f64(static_cast<jule::F64>(jule::div((*this)._method_as_f64(),_39817_l)));
		}
		goto _match_end_5128676272;
		_case_end_5128677008:;
		_case_begin_5128676480:;
		{
			return false;
		}
		goto _match_end_5128676272;
		_case_end_5128676480:;
		_match_end_5128676272:;
	}
	return true;
}



inline jule::Bool _130c83140_Const::_method_mod(_130c83140_Const _41326_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_5128697520; }
		_case_begin_5128697520:;
		{
			jule::I64 _41617_l = _41326_x._method_as_i64();
			if (_41617_l == 0LL) {
				return false;
			}
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() % _41617_l));
		}
		goto _match_end_5128696224;
		_case_end_5128697520:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_5128696736; }
		_case_begin_5128696736:;
		{
			jule::U64 _42317_l = _41326_x._method_as_u64();
			if (_42317_l == 0LL) {
				return false;
			}
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() % _42317_l));
		}
		goto _match_end_5128696224;
		_case_end_5128696736:;
		_case_begin_5128696432:;
		{
			return false;
		}
		goto _match_end_5128696224;
		_case_end_5128696432:;
		_match_end_5128696224:;
	}
	return true;
}



inline jule::Bool _130c83140_Const::_method_bitwise_and(_130c83140_Const _43734_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_5128712736; }
		_case_begin_5128712736:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() & _43734_x._method_as_i64()));
		}
		goto _match_end_5128711440;
		_case_end_5128712736:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_5128711952; }
		_case_begin_5128711952:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() & _43734_x._method_as_u64()));
		}
		goto _match_end_5128711440;
		_case_end_5128711952:;
		_case_begin_5128711648:;
		{
			return false;
		}
		goto _match_end_5128711440;
		_case_end_5128711648:;
		_match_end_5128711440:;
	}
	return true;
}



inline jule::Bool _130c83140_Const::_method_bitwise_or(_130c83140_Const _45333_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_5128723184; }
		_case_begin_5128723184:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() | _45333_x._method_as_i64()));
		}
		goto _match_end_5128721888;
		_case_end_5128723184:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_5128722400; }
		_case_begin_5128722400:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() | _45333_x._method_as_u64()));
		}
		goto _match_end_5128721888;
		_case_end_5128722400:;
		_case_begin_5128722096:;
		{
			return false;
		}
		goto _match_end_5128721888;
		_case_end_5128722096:;
		_match_end_5128721888:;
	}
	return true;
}



inline jule::Bool _130c83140_Const::_method_xor(_130c83140_Const _46926_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_5128733920; }
		_case_begin_5128733920:;
		{
			(*this)._method_set_i64(static_cast<jule::I64>((*this)._method_read_i64() ^ _46926_x._method_as_i64()));
		}
		goto _match_end_5128732624;
		_case_end_5128733920:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_5128733136; }
		_case_begin_5128733136:;
		{
			(*this)._method_set_u64(static_cast<jule::U64>((*this)._method_read_u64() ^ _46926_x._method_as_u64()));
		}
		goto _match_end_5128732624;
		_case_end_5128733136:;
		_case_begin_5128732832:;
		{
			return false;
		}
		goto _match_end_5128732624;
		_case_end_5128732832:;
		_match_end_5128732624:;
	}
	return true;
}



inline jule::Bool _130c83140_Const::_method_lshift(_130c83140_Const _48529_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_5128744368; }
		_case_begin_5128744368:;
		{
			jule::I64 _48817_l = (*this)._method_as_i64();
			if (_48817_l < 0LL) {
				jule::U64 _49021_r = _48529_x._method_as_u64();
				(*this)._method_set_i64(_48817_l << _49021_r);
			} else {
				_130c83140_lshift_unsig((*this),_48529_x);
			}
		}
		goto _match_end_5128743072;
		_case_end_5128744368:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_5128743584; }
		_case_begin_5128743584:;
		{
			_130c83140_lshift_unsig((*this),_48529_x);
		}
		goto _match_end_5128743072;
		_case_end_5128743584:;
		_case_begin_5128743280:;
		{
			return false;
		}
		goto _match_end_5128743072;
		_case_end_5128743280:;
		_match_end_5128743072:;
	}
	return true;
}



inline jule::Bool _130c83140_Const::_method_rshift(_130c83140_Const _50829_x) {
	{
		if (!(((*this)._method_is_i64()))) { goto _case_end_5128756880; }
		_case_begin_5128756880:;
		{
			jule::I64 _51117_l = (*this)._method_as_i64();
			if (_51117_l < 0LL) {
				jule::U64 _51321_r = _50829_x._method_as_u64();
				(*this)._method_set_i64(_51117_l >> _51321_r);
			} else {
				_130c83140_rshift_unsig((*this),_50829_x);
			}
		}
		goto _match_end_5128755584;
		_case_end_5128756880:;
		if (!(((*this)._method_is_u64()))) { goto _case_end_5128756096; }
		_case_begin_5128756096:;
		{
			_130c83140_rshift_unsig((*this),_50829_x);
		}
		goto _match_end_5128755584;
		_case_end_5128756096:;
		_case_begin_5128755792:;
		{
			return false;
		}
		goto _match_end_5128755584;
		_case_end_5128755792:;
		_match_end_5128755584:;
	}
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _130c83140_Const &_Src) {
	_Stream << "Const{";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _127b2e960_FieldIns &_Src) {
	_Stream << "FieldIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _127b2e960_StructIns::_method_to_str(void) {
	jule::Str _20717_kind = jule::Str("", 0);
	_20717_kind+=(*this)._field_decl->_field_ident;
	if ((*this)._field_generics.len() > 0LL) {
		_20717_kind+=jule::Str("[", 1);
		{
			auto &__julec_range_expr = (*this)._field_generics;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_1304dc9b0_TypeKind> _127b2e960_g = *__julec_range_begin;
				_iter_begin_5370798512:;
				{
					_20717_kind+=_127b2e960_g->_method_to_str();
					_20717_kind+=jule::Str(",", 1);
				}
				_iter_next_5370798512:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _127b2e960_g = *__julec_range_begin; goto _iter_begin_5370798512; }
				_iter_end_5370798512:;
			}
		}
		_20717_kind=_20717_kind.slice(0LL,static_cast<jule::Int>(_20717_kind.len() - 1LL));
		_20717_kind+=jule::Str("]", 1);
	}
	return _20717_kind;
}



inline jule::Bool _127b2e960_StructIns::_method_equals(jule::Ref<_1304dc9b0_TypeKind> _22221_other) {
	jule::Ref<_127b2e960_StructIns> _22313_s = (_22221_other).alloc->_method_strct();
	if ((!(jule::real(_22313_s)))) {
		return false;
	}
	if (((*this)._field_decl).alloc != (_22313_s->_field_decl).alloc) {
		return false;
	}
	if ((*this)._field_generics.len() != _22313_s->_field_generics.len()) {
		return false;
	}
	jule::Int _23617_i = 0LL;
	_iter_begin_5142240288:;
	if (!(_23617_i < (*this)._field_generics.len())) { goto _iter_end_5142240288; }
	{
		if ((!((*this)._field_generics[static_cast<jule::Int>(_23617_i)]->_method_equals(_22313_s->_field_generics[static_cast<jule::Int>(_23617_i)])))) {
			return false;
		}
	}
	_iter_next_5142240288:;
	(_23617_i)++;
	goto _iter_begin_5142240288;
	_iter_end_5142240288:;
	return true;
}



inline jule::Ref<_127ed52e0_Fn> _127b2e960_StructIns::_method_find_method(jule::Str _25034_ident,jule::Bool _25046_statically) {
	{
		auto &__julec_range_expr = (*this)._field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127ed52e0_Fn> _127b2e960_f = *__julec_range_begin;
			_iter_begin_5142248752:;
			{
				if ((_127b2e960_f->_field_statically == _25046_statically) && (_127b2e960_f->_field_ident == _25034_ident)) {
					return _127b2e960_f;
				}
			}
			_iter_next_5142248752:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127b2e960_f = *__julec_range_begin; goto _iter_begin_5142248752; }
			_iter_end_5142248752:;
		}
	}
	return jule::new_ref<_127ed52e0_Fn>();
}



inline jule::Ref<_127b2e960_FieldIns> _127b2e960_StructIns::_method_find_field(jule::Str _26133_ident) {
	{
		auto &__julec_range_expr = (*this)._field_fields;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127b2e960_FieldIns> _127b2e960_f = *__julec_range_begin;
			_iter_begin_5142254816:;
			{
				if (_127b2e960_f->_field_decl->_field_ident == _26133_ident) {
					return _127b2e960_f;
				}
			}
			_iter_next_5142254816:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127b2e960_f = *__julec_range_begin; goto _iter_begin_5142254816; }
			_iter_end_5142254816:;
		}
	}
	return jule::new_ref<_127b2e960_FieldIns>();
}







std::ostream &operator<<(std::ostream &_Stream, const _127b2e960_StructIns &_Src) {
	_Stream << "StructIns{";
	_Stream << "checked:" << _Src._field_checked << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "has_mut:" << _Src._field_has_mut;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _127ed52e0_RetType &_Src) {
	_Stream << "RetType{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "idents:" << _Src._field_idents;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _127ed52e0_ParamIns::_method_to_str(void) {
	jule::Str _19217_s = jule::Str("", 0);
	if ((*this)._field_decl->_field_mutable) {
		_19217_s+=jule::Str("mut ", 4);
	}
	if ((*this)._field_decl->_field_reference) {
		_19217_s+=jule::Str("&_:", 3);
	}
	if ((*this)._field_decl->_method_is_self()) {
		if ((*this)._field_decl->_method_is_ref()) {
			_19217_s+=jule::Str("&", 1);
		}
		_19217_s+=jule::Str("self", 4);
		return _19217_s;
	}
	if ((*this)._field_decl->_field_variadic) {
		_19217_s+=jule::Str("...", 3);
	}
	if (jule::real((*this)._field_kind)) {
		_19217_s+=(*this)._field_kind->_method_to_str();
	}
	return _19217_s;
}







std::ostream &operator<<(std::ostream &_Stream, const _127ed52e0_ParamIns &_Src) {
	_Stream << "ParamIns{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _127ed52e0_FnIns::_method_to_str(void) {
	jule::Str _23717_s = jule::Str("", 0);
	if ((*this)._field_decl->_field_statically) {
		_23717_s+=jule::Str("static ", 7);
	}
	if ((*this)._field_decl->_field_unsafety) {
		_23717_s+=jule::Str("unsafe ", 7);
	}
	_23717_s+=jule::Str("fn", 2);
	if ((*this)._field_generics.len() > 0LL) {
		_23717_s+=jule::Str("[", 1);
		{
			auto &__julec_range_expr = (*this)._field_generics;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Int _127ed52e0_i = 0;
				jule::Ref<_1304dc9b0_TypeKind> _127ed52e0_t = *__julec_range_begin;
				_iter_begin_5142370928:;
				{
					_23717_s+=_127ed52e0_t->_method_to_str();
					if ((_127ed52e0_i + 1LL) < (*this)._field_generics.len()) {
						_23717_s+=jule::Str(",", 1);
					}
				}
				_iter_next_5142370928:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { ++_127ed52e0_i; _127ed52e0_t = *__julec_range_begin; goto _iter_begin_5142370928; }
				_iter_end_5142370928:;
			}
		}
		_23717_s+=jule::Str("]", 1);
	} else if ((*this)._field_decl->_field_generics.len() > 0LL) {
		_23717_s+=jule::Str("[", 1);
		{
			auto &__julec_range_expr = (*this)._field_decl->_field_generics;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Int _127ed52e0_i = 0;
				jule::Ref<_1275d7180_GenericDecl> _127ed52e0_g = *__julec_range_begin;
				_iter_begin_5142370016:;
				{
					_23717_s+=_127ed52e0_g->_field_ident;
					if ((_127ed52e0_i + 1LL) < (*this)._field_decl->_field_generics.len()) {
						_23717_s+=jule::Str(",", 1);
					}
				}
				_iter_next_5142370016:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { ++_127ed52e0_i; _127ed52e0_g = *__julec_range_begin; goto _iter_begin_5142370016; }
				_iter_end_5142370016:;
			}
		}
		_23717_s+=jule::Str("]", 1);
	}
	_23717_s+=jule::Str("(", 1);
	jule::I64 _27013_n = (*this)._field_params.len();
	if (_27013_n > 0LL) {
		{
			auto &__julec_range_expr = (*this)._field_params;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_127ed52e0_ParamIns> _127ed52e0_p = *__julec_range_begin;
				_iter_begin_5142387008:;
				{
					_23717_s+=_127ed52e0_p->_method_to_str();
					_23717_s+=jule::Str(",", 1);
				}
				_iter_next_5142387008:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _127ed52e0_p = *__julec_range_begin; goto _iter_begin_5142387008; }
				_iter_end_5142387008:;
			}
		}
		_23717_s=_23717_s.slice(0LL,static_cast<jule::Int>(_23717_s.len() - 1LL));
	}
	_23717_s+=jule::Str(")", 1);
	if ((!((*this)._field_decl->_method_is_void()))) {
		_23717_s+=jule::Str(":", 1);
		_23717_s+=(*this)._field_result->_method_to_str();
	}
	return _23717_s;
}



inline jule::Bool _127ed52e0_FnIns::_method_equals(jule::Ref<_1304dc9b0_TypeKind> _28721_other) {
	jule::Ref<_127ed52e0_FnIns> _28813_f = (_28721_other).alloc->_method_fnc();
	if ((!(jule::real(_28813_f)))) {
		return false;
	}
	if ((*this)._field_decl->_field_statically != _28813_f->_field_decl->_field_statically) {
		return false;
	}
	if ((*this)._field_decl->_field_unsafety != _28813_f->_field_decl->_field_unsafety) {
		return false;
	}
	if ((*this)._field_generics.len() != _28813_f->_field_generics.len()) {
		return false;
	}
	if ((*this)._field_decl->_method_is_void() != _28813_f->_field_decl->_method_is_void()) {
		return false;
	}
	jule::Int _30917_i = 0LL;
	_iter_begin_5142407264:;
	if (!(_30917_i < (*this)._field_generics.len())) { goto _iter_end_5142407264; }
	{
		if ((!((*this)._field_generics[static_cast<jule::Int>(_30917_i)]->_method_equals(_28813_f->_field_generics[static_cast<jule::Int>(_30917_i)])))) {
			return false;
		}
	}
	_iter_next_5142407264:;
	(_30917_i)++;
	goto _iter_begin_5142407264;
	_iter_end_5142407264:;
	jule::Fn<jule::Bool(jule::Ref<_127ed52e0_ParamIns>,jule::Ref<_127ed52e0_ParamIns>)> _31613_check_params = jule::Fn<jule::Bool(jule::Ref<_127ed52e0_ParamIns>,jule::Ref<_127ed52e0_ParamIns>)>([=](jule::Ref<_127ed52e0_ParamIns> _31631_p1,jule::Ref<_127ed52e0_ParamIns> _31646_p2) mutable -> jule::Bool {
		if (_31631_p1->_field_decl->_field_mutable != _31646_p2->_field_decl->_field_mutable) {
			return false;
		}
		if (_31631_p1->_field_decl->_method_is_self()) {
			if ((!(_31646_p2->_field_decl->_method_is_self()))) {
				return false;
			}
			if (_31631_p1->_field_decl->_method_is_ref() != _31646_p2->_field_decl->_method_is_ref()) {
				return false;
			}
			return true;
		}
		if (_31631_p1->_field_decl->_field_reference != _31646_p2->_field_decl->_field_reference) {
			return false;
		}
		if (_31631_p1->_field_decl->_field_variadic != _31646_p2->_field_decl->_field_variadic) {
			return false;
		}
		return _31631_p1->_field_kind->_method_equals(_31646_p2->_field_kind);
	});
	_30917_i=0LL;
	_iter_begin_5142420224:;
	if (!(_30917_i < (*this)._field_params.len())) { goto _iter_end_5142420224; }
	{
		if ((!(_31613_check_params((*this)._field_params[static_cast<jule::Int>(_30917_i)],_28813_f->_field_params[static_cast<jule::Int>(_30917_i)])))) {
			return false;
		}
	}
	_iter_next_5142420224:;
	(_30917_i)++;
	goto _iter_begin_5142420224;
	_iter_end_5142420224:;
	if ((!((*this)._field_decl->_method_is_void()))) {
		if ((!((*this)._field_result->_method_equals(_28813_f->_field_result)))) {
			return false;
		}
	}
	return true;
}



inline jule::Bool _127ed52e0_FnIns::_method_is_builtin(void) {
	return (*this)._field_caller != nullptr;
}



inline jule::Bool _127ed52e0_FnIns::_method_is_anon(void) {
	return (*this)._field_anon || (jule::real((*this)._field_decl) && (*this)._field_decl->_method_is_anon());
}







std::ostream &operator<<(std::ostream &_Stream, const _127ed52e0_FnIns &_Src) {
	_Stream << "FnIns{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "caller:" << _Src._field_caller << ", ";
	_Stream << "reloaded:" << _Src._field_reloaded << ", ";
	_Stream << "anon:" << _Src._field_anon;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_127ff3480_SymbolBuilder> _127ff3480_SymbolBuilder::_method_get_root(void) {
	jule::Ref<_127ff3480_SymbolBuilder> _31117_root = this->self;
	_iter_begin_5142463840:;
	if (!(jule::real(_31117_root->_field_owner))) { goto _iter_end_5142463840; }
	{
		_31117_root=_31117_root->_field_owner;
	}
	_iter_next_5142463840:;
	goto _iter_begin_5142463840;
	_iter_end_5142463840:;
	return _31117_root;
}



inline void _127ff3480_SymbolBuilder::_method_push_err(_127941de0_Token _31827_token,jule::Str _31841_key,jule::Slice<jule::Any> _31851_args) {
	(*this)._field_errors=append((*this)._field_errors,jule::Slice<_136e99d00_Log>({_136e99d00_Log(1LLU,_31827_token._field_row,_31827_token._field_column,_31827_token._field_file->_method_path(),_136e8b750_errorf(_31841_key,_31851_args))}));
}



inline jule::Bool _127ff3480_SymbolBuilder::_method_check_cpp_use_decl_path(jule::Ref<_1275d7180_UseDecl> _32842_decl) {
	jule::Bool _32860_ok = jule::Bool();
	if (_136f04bd0_is_std_header_path(_32842_decl->_field_link_path)) {
		_32860_ok = true;
		return _32860_ok;
	}
	jule::Str _33313_ext = _136ec98d0_ext(_32842_decl->_field_link_path);
	if ((!(_136f04bd0_is_valid_header_ext(_33313_ext))) && (!(_136f04bd0_is_valid_cpp_ext(_33313_ext)))) {
		(*this)._method_push_err(_32842_decl->_field_token,jule::Str("invalid_cpp_ext", 15),jule::Slice<jule::Any>({jule::Any(_33313_ext)}));
		_32860_ok = false;
		return _32860_ok;
	}
	jule::Ref<_1275e3c20_Status> _33914_info;
	jule::Int _33920_err;
	std::tie(_33914_info,_33920_err) = _136e09ef0_stat(_32842_decl->_field_link_path);
	if ((_33920_err != 0LLU) || _33914_info->_method_is_dir()) {
		(*this)._method_push_err(_32842_decl->_field_token,jule::Str("use_not_found", 13),jule::Slice<jule::Any>({jule::Any(_32842_decl->_field_link_path)}));
		_32860_ok = false;
		return _32860_ok;
	}
	_32860_ok = true;
	return _32860_ok;
}



inline jule::Ref<_1300a4650_ImportInfo> _127ff3480_SymbolBuilder::_method_build_cpp_header_import(jule::Ref<_1275d7180_UseDecl> _34946_decl) {
	jule::Str _35017_path = _34946_decl->_field_link_path;
	if ((!(_136f04bd0_is_std_header_path(_34946_decl->_field_link_path)))) {
		jule::Bool _35321_ok = (*this)._method_check_cpp_use_decl_path(_34946_decl);
		if ((!(_35321_ok))) {
			return jule::new_ref<_1300a4650_ImportInfo>();
		}
		std::tie(_35017_path,_35321_ok) = _136ec98d0_abs(_34946_decl->_field_link_path);
		if ((!(_35321_ok))) {
			(*this)._method_push_err(_34946_decl->_field_token,jule::Str("use_not_found", 13),jule::Slice<jule::Any>({jule::Any(_34946_decl->_field_link_path)}));
		}
	}
	return jule::new_struct<_1300a4650_ImportInfo>(new( std::nothrow ) _1300a4650_ImportInfo(_34946_decl->_field_token,_35017_path,_34946_decl->_field_link_path,jule::Str("", 0),jule::Bool(),true,false,jule::Bool(),jule::Slice<_127941de0_Token>(),jule::new_ref<_1300a4650_Package>()));
}



inline jule::Ref<_1300a4650_ImportInfo> _127ff3480_SymbolBuilder::_method_build_std_import(jule::Ref<_1275d7180_UseDecl> _37639_decl) {
	jule::Str _37717_path = _37639_decl->_field_link_path.slice(static_cast<jule::Int>(jule::Str("std::", 5).len()));
	_37717_path=_37717_path.replace(jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_37717_path=_136ec98d0_join(jule::Slice<jule::Str>({_136e9f470_PATH_STDLIB,_37717_path}));
	jule::Bool _38020_ok;
	std::tie(_37717_path,_38020_ok) = _136ec98d0_abs(_37717_path);
	if ((!(_38020_ok))) {
		(*this)._method_push_err(_37639_decl->_field_token,jule::Str("use_not_found", 13),jule::Slice<jule::Any>({jule::Any(_37639_decl->_field_link_path)}));
		return jule::new_ref<_1300a4650_ImportInfo>();
	}
	jule::Ref<_1275e3c20_Status> _38614_info;
	jule::Int _38620_err;
	std::tie(_38614_info,_38620_err) = _136e09ef0_stat(_37717_path);
	if ((_38620_err != 0LLU) || (!(_38614_info->_method_is_dir()))) {
		(*this)._method_push_err(_37639_decl->_field_token,jule::Str("use_not_found", 13),jule::Slice<jule::Any>({jule::Any(_37639_decl->_field_link_path)}));
		return jule::new_ref<_1300a4650_ImportInfo>();
	}
	jule::Str _39413_ident = _37639_decl->_field_link_path.slice(static_cast<jule::Int>(_37639_decl->_field_link_path.rfind(jule::Str("::", 2)) + 1LL));
	return jule::new_struct<_1300a4650_ImportInfo>(new( std::nothrow ) _1300a4650_ImportInfo(_37639_decl->_field_token,_37717_path,_37639_decl->_field_link_path,_39413_ident,jule::Bool(),false,true,_37639_decl->_field_full,jule::Slice<_127941de0_Token>(),jule::new_struct<_1300a4650_Package>(new( std::nothrow ) _1300a4650_Package(nullptr))));
}



inline jule::Ref<_1300a4650_ImportInfo> _127ff3480_SymbolBuilder::_method_build_ident_import(jule::Ref<_1275d7180_UseDecl> _41042_decl) {
	jule::Str _41117_path = _41042_decl->_field_link_path;
	_41117_path=_41117_path.replace(jule::Str("::", 2),static_cast<jule::Str>(47LL),-1LL);
	_41117_path=_136ec98d0_join(jule::Slice<jule::Str>({this->self->_method_get_root()->_field_ast->_field_file->_method_dir(),_41117_path}));
	jule::Bool _41520_ok;
	std::tie(_41117_path,_41520_ok) = _136ec98d0_abs(_41117_path);
	if ((!(_41520_ok))) {
		this->self->_method_push_err(_41042_decl->_field_token,jule::Str("use_not_found", 13),jule::Slice<jule::Any>({jule::Any(_41042_decl->_field_link_path)}));
		return jule::new_ref<_1300a4650_ImportInfo>();
	}
	jule::Ref<_1275e3c20_Status> _42114_info;
	jule::Int _42120_err;
	std::tie(_42114_info,_42120_err) = _136e09ef0_stat(_41117_path);
	if ((_42120_err != 0LLU) || (!(_42114_info->_method_is_dir()))) {
		this->self->_method_push_err(_41042_decl->_field_token,jule::Str("use_not_found", 13),jule::Slice<jule::Any>({jule::Any(_41042_decl->_field_link_path)}));
		return jule::new_ref<_1300a4650_ImportInfo>();
	}
	jule::Str _42913_ident = _41042_decl->_field_link_path.slice(static_cast<jule::Int>(_41042_decl->_field_link_path.rfind(jule::Str("::", 2)) + 1LL));
	return jule::new_struct<_1300a4650_ImportInfo>(new( std::nothrow ) _1300a4650_ImportInfo(_41042_decl->_field_token,_41117_path,_41042_decl->_field_link_path,_42913_ident,jule::Bool(),false,false,_41042_decl->_field_full,jule::Slice<_127941de0_Token>(),jule::new_struct<_1300a4650_Package>(new( std::nothrow ) _1300a4650_Package(nullptr))));
}



inline jule::Ref<_1300a4650_ImportInfo> _127ff3480_SymbolBuilder::_method_build_import(jule::Ref<_1275d7180_UseDecl> _44536_decl) {
	{
		if (!((_44536_decl->_field_cpp_linked))) { goto _case_end_5142569456; }
		_case_begin_5142569456:;
		{
			return this->self->_method_build_cpp_header_import(_44536_decl);
		}
		goto _match_end_5142567728;
		_case_end_5142569456:;
		if (!((_44536_decl->_field_std))) { goto _case_end_5142569024; }
		_case_begin_5142569024:;
		{
			return this->self->_method_build_std_import(_44536_decl);
		}
		goto _match_end_5142567728;
		_case_end_5142569024:;
		_case_begin_5142567936:;
		{
			return this->self->_method_build_ident_import(_44536_decl);
		}
		goto _match_end_5142567728;
		_case_end_5142567936:;
		_match_end_5142567728:;
	}
}



inline jule::Bool _127ff3480_SymbolBuilder::_method_check_duplicate_use_decl(jule::Ref<_1300a4650_ImportInfo> _45343_pkg) {
	jule::Bool _45363_ok = jule::Bool();
	jule::Ref<_1300a4650_ImportInfo> _45513_lpkg = (*this)._field_table->_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1300a4650_ImportInfo>)>([=](jule::Ref<_1300a4650_ImportInfo> _45549_spkg) mutable -> jule::Bool {
		return _45343_pkg->_field_path == _45549_spkg->_field_path;
	}));
	if ((!(jule::real(_45513_lpkg)))) {
		_45363_ok = true;
		return _45363_ok;
	}
	(*this)._method_push_err(_45343_pkg->_field_token,jule::Str("duplicate_use_decl", 18),jule::Slice<jule::Any>({jule::Any(_45343_pkg->_field_link_path)}));
	_45363_ok = false;
	return _45363_ok;
}



inline void _127ff3480_SymbolBuilder::_method_impl_import_selections(jule::Ref<_1300a4650_ImportInfo> _46645_imp,jule::Ref<_1275d7180_UseDecl> _46667_decl) {
	{
		auto &__julec_range_expr = _46667_decl->_field_selected;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_127941de0_Token _127ff3480_ident = *__julec_range_begin;
			_iter_begin_5142591008:;
			{
				if (_46645_imp->_method_exist_ident(_127ff3480_ident._field_kind)) {
					(*this)._method_push_err(_127ff3480_ident,jule::Str("duplicated_import_selection", 27),jule::Slice<jule::Any>({jule::Any(_127ff3480_ident._field_kind)}));
					goto _iter_next_5142591008;
				}
				_46645_imp->_field_selected=append(_46645_imp->_field_selected,jule::Slice<_127941de0_Token>({_127ff3480_ident}));
			}
			_iter_next_5142591008:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127ff3480_ident = *__julec_range_begin; goto _iter_begin_5142591008; }
			_iter_end_5142591008:;
		}
	}
}



inline jule::Str _127ff3480_SymbolBuilder::_method_get_as_link_path(jule::Str _47740_path) {
	if (_47740_path.has_prefix(_136e9f470_PATH_STDLIB)) {
		_47740_path=_47740_path.slice(static_cast<jule::Int>(_136e9f470_PATH_STDLIB.len()));
		return jule::Str("std", 3) + _47740_path.replace(static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
	}
	jule::Str _48314_root;
	std::tie(_48314_root,std::ignore) = _136ec98d0_abs(this->self->_method_get_root()->_field_ast->_field_file->_method_dir());
	_47740_path=_47740_path.slice(static_cast<jule::Int>(_48314_root.len()));
	if (_47740_path[static_cast<jule::Int>(0LL)] == 47LL) {
		_47740_path=_47740_path.slice(static_cast<jule::Int>(1LL));
	}
	return _47740_path.replace(static_cast<jule::Str>(47LL),jule::Str("::", 2),-1LL);
}



inline void _127ff3480_SymbolBuilder::_method_push_cross_cycle_error(jule::Ref<_127ff3480_SymbolBuilder> _49142_target,jule::Ref<_1300a4650_ImportInfo> _49166_imp,_127941de0_Token _49184_error_token) {
	
	jule::Str _49417_message = jule::Str("", 0);
	jule::Fn<void(jule::Ref<_127ff3480_SymbolBuilder>,jule::Str)> _49613_push = jule::Fn<void(jule::Ref<_127ff3480_SymbolBuilder>,jule::Str)>([=](jule::Ref<_127ff3480_SymbolBuilder> _49623_sb,jule::Str _49643_path) mutable -> void {
		jule::Str _49717_refers_to = _136e8b750_errorf(jule::Str("refers_to", 9),jule::Slice<jule::Any>({jule::Any(this->self->_method_get_as_link_path(_49623_sb->_field_table->_field_file->_method_dir())),jule::Any(this->self->_method_get_as_link_path(_49643_path))}));
		_49417_message=((_127ff3480_str_repeat(jule::Str(" ", 1),4LL) + _49717_refers_to) + jule::Str("\n", 1)) + _49417_message;
	});
	_49613_push(this->self,_49166_imp->_field_path);
	jule::Ref<_127ff3480_SymbolBuilder> _50317_owner = this->self->_field_owner;
	jule::Ref<_127ff3480_SymbolBuilder> _50417_old = this->self;
	_iter_begin_5142624752:;
	if (!(jule::real(_50317_owner->_field_owner))) { goto _iter_end_5142624752; }
	{
		_49613_push(_50417_old->_field_owner,_50417_old->_field_table->_field_file->_method_dir());
		if ((_50317_owner->_field_owner).alloc == (_49142_target).alloc) {
			_49613_push(_49142_target,_50317_owner->_field_table->_field_file->_method_dir());
			goto _iter_end_5142624752;
		}
		_50417_old=_50317_owner;
		_50317_owner=_50317_owner->_field_owner;
	}
	_iter_next_5142624752:;
	goto _iter_begin_5142624752;
	_iter_end_5142624752:;
	this->self->_method_push_err(_49184_error_token,jule::Str("pkg_illegal_cross_cycle", 23),jule::Slice<jule::Any>({jule::Any(_49417_message)}));
}



inline jule::Bool _127ff3480_SymbolBuilder::_method_check_import_cycles(jule::Ref<_1300a4650_ImportInfo> _52139_imp,jule::Ref<_1275d7180_UseDecl> _52157_decl) {
	if (_52139_imp->_field_path == this->self->_field_table->_field_file->_method_dir()) {
		this->self->_method_push_err(_52157_decl->_field_token,jule::Str("pkg_illegal_cycle_refers_itself", 31),jule::Slice<jule::Any>({jule::Any(this->self->_method_get_as_link_path(_52139_imp->_field_path))}));
		return false;
	}
	if ((!(jule::real(this->self->_field_owner)))) {
		return true;
	}
	if (this->self->_field_owner->_field_table->_field_file->_method_dir() == _52139_imp->_field_path) {
		this->self->_method_push_cross_cycle_error(this->self->_field_owner,_52139_imp,_52157_decl->_field_token);
		return false;
	}
	jule::Ref<_127ff3480_SymbolBuilder> _53617_owner = this->self->_field_owner;
	_julec_label_iter:;
	if (_53617_owner->_field_table->_field_file->_method_dir() == _52139_imp->_field_path) {
		this->self->_method_push_cross_cycle_error(_53617_owner,_52139_imp,_52157_decl->_field_token);
		return false;
	}
	if (jule::real(_53617_owner->_field_owner)) {
		_53617_owner=_53617_owner->_field_owner;
		goto _julec_label_iter;
	}
	return true;
}



inline jule::Bool _127ff3480_SymbolBuilder::_method_import_package(jule::Ref<_1300a4650_ImportInfo> _55138_imp,jule::Ref<_1275d7180_UseDecl> _55160_decl) {
	jule::Bool _55178_ok = jule::Bool();
	if (_55138_imp->_field_cpp_linked) {
		_55178_ok = true;
		return _55178_ok;
	}
	jule::Ref<_1300a4650_ImportInfo> _55617_port = this->self->_field_importer.get()._method_get_import(_55138_imp->_field_path);
	if (jule::real(_55617_port)) {
		_55138_imp->_field_package=_55617_port->_field_package;
		_55138_imp->_field_duplicate=true;
	} else {
		if ((!(this->self->_method_check_import_cycles(_55138_imp,_55160_decl)))) {
			_55178_ok = false;
			return _55178_ok;
		}
		jule::Slice<jule::Ref<_1275d0e60_Ast>> _56522_asts;
		jule::Slice<_136e99d00_Log> _56528_errors;
		std::tie(_56522_asts,_56528_errors) = this->self->_field_importer.get()._method_import_package(_55138_imp->_field_path);
		if (_56528_errors.len() > 0LL) {
			this->self->_field_errors=append(this->self->_field_errors,_56528_errors);
			_55178_ok = false;
			return _55178_ok;
		}
		{
			auto &__julec_range_expr = _56522_asts;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_1275d0e60_Ast> _127ff3480_ast = *__julec_range_begin;
				_iter_begin_5142691024:;
				{
					jule::Ref<_13032dc50_SymbolTable> _57226_table;
					jule::Slice<_136e99d00_Log> _57233_errors;
					std::tie(_57226_table,_57233_errors) = _13064d450_build_symbols(_127ff3480_ast,this->self->_field_importer,this->self);
					if (_57233_errors.len() > 0LL) {
						this->self->_field_errors=append(this->self->_field_errors,_57233_errors);
						this->self->_method_push_err(_55138_imp->_field_token,jule::Str("used_package_has_errors", 23),jule::Slice<jule::Any>({jule::Any(_55138_imp->_field_link_path)}));
						_55178_ok = false;
						return _55178_ok;
					}
					_55138_imp->_field_package->_field_files=append(_55138_imp->_field_package->_field_files,jule::Slice<jule::Ref<_13032dc50_SymbolTable>>({_57226_table}));
				}
				_iter_next_5142691024:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _127ff3480_ast = *__julec_range_begin; goto _iter_begin_5142691024; }
				_iter_end_5142691024:;
			}
		}
	}
	this->self->_method_impl_import_selections(_55138_imp,_55160_decl);
	_55178_ok = true;
	return _55178_ok;
}



inline jule::Ref<_1300a4650_ImportInfo> _127ff3480_SymbolBuilder::_method_import_use_decl(jule::Ref<_1275d7180_UseDecl> _59039_decl) {
	jule::Ref<_1300a4650_ImportInfo> _59117_imp = this->self->_method_build_import(_59039_decl);
	if ((!(jule::real(_59117_imp)))) {
		return jule::new_ref<_1300a4650_ImportInfo>();
	}
	jule::Bool _59717_ok = this->self->_method_check_duplicate_use_decl(_59117_imp);
	if ((!(_59717_ok))) {
		return jule::new_ref<_1300a4650_ImportInfo>();
	}
	_59717_ok=this->self->_method_import_package(_59117_imp,_59039_decl);
	this->self->_field_table->_field_imports._method_push(_59117_imp);
	if (_59717_ok) {
		this->self->_field_importer.get()._method_imported(_59117_imp);
		return _59117_imp;
	}
	return jule::new_ref<_1300a4650_ImportInfo>();
}



inline void _127ff3480_SymbolBuilder::_method_import_use_decls(void) {
	jule::Int _61217_i = 0LL;
	_iter_begin_5142724016:;
	if (!(_61217_i < this->self->_field_ast->_field_use_decls._method_len())) { goto _iter_end_5142724016; }
	{
		jule::Ref<_1275d7180_UseDecl> _61421_decl = this->self->_field_ast->_field_use_decls._method_at(_61217_i);
		this->self->_method_import_use_decl(_61421_decl);
		if (this->self->_field_errors.len() > 0LL) {
			goto _iter_end_5142724016;
		}
	}
	_iter_next_5142724016:;
	(_61217_i)++;
	goto _iter_begin_5142724016;
	_iter_end_5142724016:;
}



inline void _127ff3480_SymbolBuilder::_method_append_decl(_1275d7180_Node _62434_decl) {
	{
		auto &_match_expr{ _62434_decl._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_TypeAliasDecl>>())) { goto _case_end_5142735536; }
		_case_begin_5142735536:;
		{
			jule::Ref<_1304dc9b0_TypeAlias> _62721_ta = _127ff3480_build_type_alias(_62434_decl._field_data.operator jule::Ref<_1275d7180_TypeAliasDecl>());
			(*this)._field_table->_field_type_aliases._method_push(_62721_ta);
		}
		goto _match_end_5142733216;
		_case_end_5142735536:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_StructDecl>>())) { goto _case_end_5142734816; }
		_case_begin_5142734816:;
		{
			jule::Ref<_127b2e960_Struct> _63121_srct = _127ff3480_build_struct(_62434_decl._field_data.operator jule::Ref<_1275d7180_StructDecl>());
			(*this)._field_table->_field_structs._method_push(_63121_srct);
		}
		goto _match_end_5142733216;
		_case_end_5142734816:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_FnDecl>>())) { goto _case_end_5142734928; }
		_case_begin_5142734928:;
		{
			jule::Ref<_127ed52e0_Fn> _63521_f = _127ff3480_build_fn(_62434_decl._field_data.operator jule::Ref<_1275d7180_FnDecl>());
			(*this)._field_table->_field_funcs._method_push(_63521_f);
		}
		goto _match_end_5142733216;
		_case_end_5142734928:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_TraitDecl>>())) { goto _case_end_5142734336; }
		_case_begin_5142734336:;
		{
			jule::Ref<_130099320_Trait> _63921_t = _127ff3480_build_trait(_62434_decl._field_data.operator jule::Ref<_1275d7180_TraitDecl>());
			(*this)._field_table->_field_traits._method_push(_63921_t);
		}
		goto _match_end_5142733216;
		_case_end_5142734336:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_VarDecl>>())) { goto _case_end_5142734448; }
		_case_begin_5142734448:;
		{
			jule::Ref<_1303533b0_Var> _64321_v = _127ff3480_build_var(_62434_decl._field_data.operator jule::Ref<_1275d7180_VarDecl>());
			(*this)._field_table->_field_vars._method_push(_64321_v);
		}
		goto _match_end_5142733216;
		_case_end_5142734448:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_EnumDecl>>())) { goto _case_end_5142734560; }
		_case_begin_5142734560:;
		{
			jule::Ref<_13009ed30_Enum> _64721_e = _127ff3480_build_enum(_62434_decl._field_data.operator jule::Ref<_1275d7180_EnumDecl>());
			(*this)._field_table->_field_enums._method_push(_64721_e);
		}
		goto _match_end_5142733216;
		_case_end_5142734560:;
		_case_begin_5142734032:;
		{
			(*this)._method_push_err(_62434_decl._field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		}
		goto _match_end_5142733216;
		_case_end_5142734032:;
		_match_end_5142733216:;
	}
}



inline void _127ff3480_SymbolBuilder::_method_append_decls(void) {
	jule::Int _65617_i = 0LL;
	_iter_begin_5142755360:;
	if (!(_65617_i < (*this)._field_ast->_field_decls._method_len())) { goto _iter_end_5142755360; }
	{
		_1275d7180_Node _65821_decl = (*this)._field_ast->_field_decls._method_at(_65617_i);
		(*this)._method_append_decl(_65821_decl);
	}
	_iter_next_5142755360:;
	(_65617_i)++;
	goto _iter_begin_5142755360;
	_iter_end_5142755360:;
}



inline void _127ff3480_SymbolBuilder::_method_append_impls(void) {
	(*this)._field_table->_field_impls=_127ab7fa0_Vector_15::_static_method_new(static_cast<jule::Int>((*this)._field_ast->_field_impls._method_len()));
	jule::Int _66517_i = 0LL;
	_iter_begin_5142775024:;
	if (!(_66517_i < (*this)._field_ast->_field_impls._method_len())) { goto _iter_end_5142775024; }
	{
		jule::Ref<_1275d7180_Impl> _66721_decl = (*this)._field_ast->_field_impls._method_at(_66517_i);
		(*this)._field_table->_field_impls._method_push(_127ff3480_build_impl(_66721_decl));
	}
	_iter_next_5142775024:;
	(_66517_i)++;
	goto _iter_begin_5142775024;
	_iter_end_5142775024:;
}



inline void _127ff3480_SymbolBuilder::_method_push_directive_pass(jule::Ref<_1275d7180_Directive> _67242_d) {
	_127ff3480_Pass _67317_pass = _127ff3480_Pass(_67242_d->_field_token,jule::Str());
	{
		auto &__julec_range_expr = _67242_d->_field_args;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _127ff3480_arg = *__julec_range_begin;
			_iter_begin_5142786016:;
			{
				if (_127ff3480_arg != jule::Str("", 0)) {
					_67317_pass._field_text+=_127ff3480_arg + jule::Str(" ", 1);
				}
			}
			_iter_next_5142786016:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127ff3480_arg = *__julec_range_begin; goto _iter_begin_5142786016; }
			_iter_end_5142786016:;
		}
	}
	_67317_pass._field_text=_67317_pass._field_text.trim(jule::Str(" \n\r\t\v", 5));
	(*this)._field_table->_field_passes._method_push(_67317_pass);
}



inline void _127ff3480_SymbolBuilder::_method_append_top_directives(void) {
	jule::Int _68617_i = 0LL;
	_iter_begin_5142793984:;
	if (!(_68617_i < (*this)._field_ast->_field_top_directives._method_len())) { goto _iter_end_5142793984; }
	{
		jule::Ref<_1275d7180_Directive> _68821_d = (*this)._field_ast->_field_top_directives._method_at(_68617_i);
		{
			auto &_match_expr{ _68821_d->_field_tag };
			if (!((jule::Str("pass", 4)) == _match_expr)) { goto _case_end_5142798672; }
			_case_begin_5142798672:;
			{
				(*this)._method_push_directive_pass(_68821_d);
			}
			goto _match_end_5142797344;
			_case_end_5142798672:;
			_match_end_5142797344:;
		}
	}
	_iter_next_5142793984:;
	(_68617_i)++;
	goto _iter_begin_5142793984;
	_iter_end_5142793984:;
}



inline void _127ff3480_SymbolBuilder::_method_build(void) {
	this->self->_field_table=jule::new_struct<_13032dc50_SymbolTable>(new( std::nothrow ) _13032dc50_SymbolTable(this->self->_field_ast->_field_file,_127ab7fa0_Vector_6(),_127ab7fa0_Vector_7(),_127ab7fa0_Vector_9(),_127ab7fa0_Vector_10(),_127ab7fa0_Vector_12(),_127ab7fa0_Vector_11(),_127ab7fa0_Vector_13(),_127ab7fa0_Vector_14(),_127ab7fa0_Vector_15()));
	this->self->_method_append_top_directives();
	this->self->_method_import_use_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_append_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_append_impls();
}







std::ostream &operator<<(std::ostream &_Stream, const _127ff3480_SymbolBuilder &_Src) {
	_Stream << "SymbolBuilder{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "importer:" << _Src._field_importer << ", ";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "ast:" << _Src._field_ast << ", ";
	_Stream << "table:" << _Src._field_table;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1300a11b0_If &_Src) {
	_Stream << "If{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1300a11b0_Else &_Src) {
	_Stream << "Else{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1300a11b0_Conditional &_Src) {
	_Stream << "Conditional{";
	_Stream << "elifs:" << _Src._field_elifs << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1300a11b0_InfIter &_Src) {
	_Stream << "InfIter{";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1300a11b0_WhileIter::_method_is_while_next(void) {
	return (*this)._field_next != nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1300a11b0_WhileIter &_Src) {
	_Stream << "WhileIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "next:" << _Src._field_next << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1300a11b0_RangeIter &_Src) {
	_Stream << "RangeIter{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "key_a:" << _Src._field_key_a << ", ";
	_Stream << "key_b:" << _Src._field_key_b;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1300a11b0_ContSt &_Src) {
	_Stream << "ContSt{";
	_Stream << "it:" << _Src._field_it;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1300a11b0_BreakSt &_Src) {
	_Stream << "BreakSt{";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "mtch:" << _Src._field_mtch;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1300a11b0_Label &_Src) {
	_Stream << "Label{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1300a11b0_GotoSt &_Src) {
	_Stream << "GotoSt{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1300a11b0_Postfix &_Src) {
	_Stream << "Postfix{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1300a11b0_Assign &_Src) {
	_Stream << "Assign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1300a11b0_MultiAssign &_Src) {
	_Stream << "MultiAssign{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1300a11b0_Match &_Src) {
	_Stream << "Match{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "type_match:" << _Src._field_type_match << ", ";
	_Stream << "cases:" << _Src._field_cases << ", ";
	_Stream << "default:" << _Src._field_default;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1300a11b0_Case::_method_is_default(void) {
	return (*this)._field_exprs == nullptr;
}







std::ostream &operator<<(std::ostream &_Stream, const _1300a11b0_Case &_Src) {
	_Stream << "Case{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "next:" << _Src._field_next;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1300a11b0_FallSt &_Src) {
	_Stream << "FallSt{";
	_Stream << "dest_case:" << _Src._field_dest_case;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1300a11b0_RetSt &_Src) {
	_Stream << "RetSt{";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1300a11b0_Recover &_Src) {
	_Stream << "Recover{";
	_Stream << "handler:" << _Src._field_handler << ", ";
	_Stream << "handler_expr:" << _Src._field_handler_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1300a11b0_ScopeGoto &_Src) {
	_Stream << "ScopeGoto{";
	_Stream << "gt:" << _Src._field_gt << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "pos:" << _Src._field_pos;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1300a4650_ImportInfo> _1300a11b0_ScopeChecker::_method_find_package(jule::Str _36731_ident) {
	return (*this)._field_s->_method_find_package(_36731_ident);
}



inline jule::Ref<_1300a4650_ImportInfo> _1300a11b0_ScopeChecker::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1300a4650_ImportInfo>)> _37733_selector) {
	return (*this)._field_s->_method_select_package(_37733_selector);
}



inline jule::Ref<_1303533b0_Var> _1300a11b0_ScopeChecker::_method_find_var(jule::Str _38827_ident,jule::Bool _38839_cpp_linked) {
	
	jule::Ref<_1303533b0_Var> _39117_v = (*this)._field_table->_method___find_var(_38827_ident,_38839_cpp_linked,true);
	if (jule::real(_39117_v)) {
		return _39117_v;
	}
	jule::Ref<_1300a11b0_ScopeChecker> _39617_parent = (*this)._field_parent;
	_iter_begin_5142875424:;
	if (!(jule::real(_39617_parent))) { goto _iter_end_5142875424; }
	{
		jule::Ref<_1303533b0_Var> _39821_v = _39617_parent->_field_table->_method___find_var(_38827_ident,_38839_cpp_linked,true);
		if (jule::real(_39821_v)) {
			return _39821_v;
		}
		_39617_parent=_39617_parent->_field_parent;
	}
	_iter_next_5142875424:;
	goto _iter_begin_5142875424;
	_iter_end_5142875424:;
	return (*this)._field_s->_method_find_var(_38827_ident,_38839_cpp_linked);
}



inline jule::Ref<_1304dc9b0_TypeAlias> _1300a11b0_ScopeChecker::_method_find_type_alias(jule::Str _41534_ident,jule::Bool _41546_cpp_linked) {
	
	jule::Ref<_1304dc9b0_TypeAlias> _41817_ta = (*this)._field_table->_method___find_type_alias(_41534_ident,_41546_cpp_linked,true);
	if (jule::real(_41817_ta)) {
		return _41817_ta;
	}
	jule::Ref<_1300a11b0_ScopeChecker> _42317_parent = (*this)._field_parent;
	_iter_begin_5142892192:;
	if (!(jule::real(_42317_parent))) { goto _iter_end_5142892192; }
	{
		jule::Ref<_1304dc9b0_TypeAlias> _42521_ta = _42317_parent->_field_table->_method___find_type_alias(_41534_ident,_41546_cpp_linked,true);
		if (jule::real(_42521_ta)) {
			return _42521_ta;
		}
		_42317_parent=_42317_parent->_field_parent;
	}
	_iter_next_5142892192:;
	goto _iter_begin_5142892192;
	_iter_end_5142892192:;
	return (*this)._field_s->_method_find_type_alias(_41534_ident,_41546_cpp_linked);
}



inline jule::Ref<_127b2e960_Struct> _1300a11b0_ScopeChecker::_method_find_struct(jule::Str _44030_ident,jule::Bool _44042_cpp_linked) {
	return (*this)._field_s->_method_find_struct(_44030_ident,_44042_cpp_linked);
}



inline jule::Ref<_127ed52e0_Fn> _1300a11b0_ScopeChecker::_method_find_fn(jule::Str _44926_ident,jule::Bool _44938_cpp_linked) {
	return (*this)._field_s->_method_find_fn(_44926_ident,_44938_cpp_linked);
}



inline jule::Ref<_130099320_Trait> _1300a11b0_ScopeChecker::_method_find_trait(jule::Str _45829_ident) {
	return (*this)._field_s->_method_find_trait(_45829_ident);
}



inline jule::Ref<_13009ed30_Enum> _1300a11b0_ScopeChecker::_method_find_enum(jule::Str _46728_ident) {
	return (*this)._field_s->_method_find_enum(_46728_ident);
}



inline jule::Bool _1300a11b0_ScopeChecker::_method_is_unsafe(void) {
	jule::Ref<_1300a11b0_ScopeChecker> _47517_scope = this->self;
	_julec_label_iter:;
	if (_47517_scope->_field_scope->_field_unsafety) {
		return true;
	}
	if (jule::real(_47517_scope->_field_parent)) {
		_47517_scope=_47517_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _1300a11b0_ScopeChecker::_method_is_root(void) {
	return (!(jule::real((*this)._field_parent))) || jule::real((*this)._field_owner);
}



inline jule::Ref<_1300a11b0_ScopeChecker> _1300a11b0_ScopeChecker::_method_get_root(void) {
	jule::Ref<_1300a11b0_ScopeChecker> _49717_root = this->self;
	_iter_begin_5142933424:;
	if (!(jule::real(_49717_root->_field_parent) && (!(jule::real(_49717_root->_field_owner))))) { goto _iter_end_5142933424; }
	{
		_49717_root=_49717_root->_field_parent;
	}
	_iter_next_5142933424:;
	goto _iter_begin_5142933424;
	_iter_end_5142933424:;
	return _49717_root;
}



inline jule::Ref<_1300a11b0_Label> _1300a11b0_ScopeChecker::_method_find_label(jule::Str _50729_ident) {
	jule::Int _50817_i = 0LL;
	_iter_begin_5142938464:;
	if (!(_50817_i < (*this)._field_scope->_field_stmts._method_len())) { goto _iter_end_5142938464; }
	{
		jule::Any _51021_st = (*this)._field_scope->_field_stmts._method_at(_50817_i);
		{
			auto &_match_expr{ _51021_st };
			if (!(_match_expr.type_is<jule::Ref<_1300a11b0_Label>>())) { goto _case_end_5142942960; }
			_case_begin_5142942960:;
			{
				jule::Ref<_1300a11b0_Label> _51325_label = _51021_st.operator jule::Ref<_1300a11b0_Label>();
				if (_51325_label->_field_ident == _50729_ident) {
					return _51325_label;
				}
			}
			goto _match_end_5142941856;
			_case_end_5142942960:;
			_match_end_5142941856:;
		}
	}
	_iter_next_5142938464:;
	(_50817_i)++;
	goto _iter_begin_5142938464;
	_iter_end_5142938464:;
	return jule::new_ref<_1300a11b0_Label>();
}



inline jule::Ref<_1300a11b0_ScopeLabel> _1300a11b0_ScopeChecker::_method_find_label_scope(jule::Str _52536_ident) {
	jule::Ref<_1300a11b0_ScopeLabel> _52617_label = this->self->_method_find_label_all(_52536_ident);
	if (jule::real(_52617_label) && ((_52617_label->_field_scope).alloc == (this->self).alloc)) {
		return _52617_label;
	}
	return jule::new_ref<_1300a11b0_ScopeLabel>();
}



inline jule::Ref<_1300a11b0_ScopeLabel> _1300a11b0_ScopeChecker::_method_find_label_all(jule::Str _53733_ident) {
	{
		auto &__julec_range_expr = (*this)._field_labels.get();
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1300a11b0_ScopeLabel> _1300a11b0_lbl = *__julec_range_begin;
			_iter_begin_5142955648:;
			{
				if (_1300a11b0_lbl->_field_label->_field_ident == _53733_ident) {
					return _1300a11b0_lbl;
				}
			}
			_iter_next_5142955648:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a11b0_lbl = *__julec_range_begin; goto _iter_begin_5142955648; }
			_iter_end_5142955648:;
		}
	}
	return jule::new_ref<_1300a11b0_ScopeLabel>();
}



inline jule::Bool _1300a11b0_ScopeChecker::_method_is_duplicated_ident(jule::Uintptr _54938_itself,jule::Str _54955_ident) {
	jule::Ref<_1303533b0_Var> _55013_v = (*this)._method_find_var(_54955_ident,false);
	if ((jule::real(_55013_v) && (((jule::Uintptr)((_55013_v).alloc)) != _54938_itself)) && ((_55013_v->_field_scope).alloc == ((*this)._field_tree).alloc)) {
		return true;
	}
	jule::Ref<_1304dc9b0_TypeAlias> _55513_ta = (*this)._method_find_type_alias(_54955_ident,false);
	if ((jule::real(_55513_ta) && (((jule::Uintptr)((_55513_ta).alloc)) != _54938_itself)) && ((_55513_ta->_field_scope).alloc == ((*this)._field_tree).alloc)) {
		return true;
	}
	return false;
}



inline void _1300a11b0_ScopeChecker::_method_check_var_decl(jule::Ref<_1275d7180_VarDecl> _56338_decl) {
	jule::Ref<_1303533b0_Var> _56417_v = _127ff3480_build_var(_56338_decl);
	__JULE_DEFER({
		this->self->_field_table->_field_vars._method_push(_56417_v);
		this->self->_field_scope->_field_stmts._method_push(jule::Any(_56417_v));
	});
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_56417_v).alloc)),_56417_v->_field_ident)) {
		this->self->_field_s->_method_push_err(_56417_v->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_56417_v->_field_ident)}));
	}
	this->self->_field_s->_method_check_var_decl(_56417_v,this->self);
	if ((!(_56417_v->_method_is_auto_typed())) && ((!(jule::real(_56417_v->_field_kind))) || (!(jule::real(_56417_v->_field_kind->_field_kind))))) {
		return;
	}
	this->self->_field_s->_method_check_type_var(_56417_v,this->self);
}



inline void _1300a11b0_ScopeChecker::_method_check_type_alias_decl(jule::Ref<_1275d7180_TypeAliasDecl> _58345_decl) {
	jule::Ref<_1304dc9b0_TypeAlias> _58417_ta = _127ff3480_build_type_alias(_58345_decl);
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_58417_ta).alloc)),_58417_ta->_field_ident)) {
		this->self->_field_s->_method_push_err(_58417_ta->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_58417_ta->_field_ident)}));
	}
	this->self->_field_s->_method_check_type_alias_decl(_58417_ta,this->self);
	this->self->_field_table->_field_type_aliases._method_push(_58417_ta);
}



inline jule::Ref<_1300a11b0_Scope> _1300a11b0_ScopeChecker::_method_get_child(void) {
	return jule::new_struct<_1300a11b0_Scope>(new( std::nothrow ) _1300a11b0_Scope((*this)._field_scope,jule::Bool(),jule::Bool(),_127ab7fa0_Vector_8()));
}



inline void _1300a11b0_ScopeChecker::_method_check_child_ssc(jule::Ref<_1275d7180_ScopeTree> _59939_tree,jule::Ref<_1300a11b0_Scope> _59961_s,jule::Ref<_1300a11b0_ScopeChecker> _59976_ssc) {
	_59976_ssc->_field_parent=this->self;
	_59976_ssc->_method_check(_59939_tree,_59961_s);
}



inline jule::Ref<_1300a11b0_Scope> _1300a11b0_ScopeChecker::_method_check_child_sc(jule::Ref<_1275d7180_ScopeTree> _60438_tree,jule::Ref<_1300a11b0_ScopeChecker> _60460_ssc) {
	jule::Ref<_1300a11b0_Scope> _60517_s = this->self->_method_get_child();
	this->self->_method_check_child_ssc(_60438_tree,_60517_s,_60460_ssc);
	return _60517_s;
}



inline jule::Ref<_1300a11b0_Scope> _1300a11b0_ScopeChecker::_method_check_child(jule::Ref<_1275d7180_ScopeTree> _61035_tree) {
	jule::Ref<_1300a11b0_ScopeChecker> _61117_ssc = this->self->_method_new_child_checker();
	return this->self->_method_check_child_sc(_61035_tree,_61117_ssc);
}



inline void _1300a11b0_ScopeChecker::_method_check_anon_scope(jule::Ref<_1275d7180_ScopeTree> _61540_tree) {
	jule::Ref<_1300a11b0_Scope> _61617_s = this->self->_method_check_child(_61540_tree);
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_61617_s));
}



inline jule::Bool _1300a11b0_ScopeChecker::_method_try_call_recover(jule::Ref<_13064b610_Data> _62040_d) {
	{
		auto &_match_expr{ _62040_d->_field_model };
		if (!(_match_expr.type_is<jule::Ref<_1300a11b0_Recover>>())) { goto _case_end_5143038960; }
		goto _match_end_5143037104;
		_case_end_5143038960:;
		_case_begin_5143037920:;
		{
			return false;
		}
		goto _match_end_5143037104;
		_case_end_5143037920:;
		_match_end_5143037104:;
	}
	jule::Ref<_1300a11b0_Recover> _62917_rec = _62040_d->_field_model.operator jule::Ref<_1300a11b0_Recover>();
	_62917_rec->_field_handler=_62040_d->_field_kind->_method_fnc();
	_62917_rec->_field_scope=jule::new_struct<_1300a11b0_Scope>(new( std::nothrow ) _1300a11b0_Scope());
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_62917_rec));
	this->self->_field_tree->_field_stmts=this->self->_field_tree->_field_stmts.slice(static_cast<jule::Int>(this->self->_field_i + 1LL));
	this->self->_field_scope=_62917_rec->_field_scope;
	this->self->_method_check_tree();
	return true;
}



inline void _1300a11b0_ScopeChecker::_method_check_expr(jule::Ref<_1275d7180_Expr> _64134_expr) {
	jule::Ref<_13064b610_Data> _64217_d = this->self->_field_s->_method_eval(_64134_expr,this->self);
	if ((!(jule::real(_64217_d)))) {
		return;
	}
	if (_64134_expr->_method_is_fn_call()) {
		jule::Bool _64817_ok = this->self->_method_try_call_recover(_64217_d);
		if (_64817_ok) {
			return;
		}
	}
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_64217_d));
}



inline jule::Ref<_1300a11b0_If> _1300a11b0_ScopeChecker::_method_check_if(jule::Ref<_1275d7180_If> _65732_i) {
	jule::Ref<_1300a11b0_Scope> _65817_s = this->self->_method_check_child(_65732_i->_field_scope);
	jule::Ref<_13064b610_Data> _66017_d = this->self->_field_s->_method_eval(_65732_i->_field_expr,this->self);
	if ((!(jule::real(_66017_d)))) {
		return jule::new_ref<_1300a11b0_If>();
	}
	jule::Ref<_1304dc9b0_Prim> _66513_prim = _66017_d->_field_kind->_method_prim();
	if ((!(jule::real(_66513_prim)))) {
		this->self->_field_s->_method_push_err(_65732_i->_field_expr->_field_token,jule::Str("if_require_bool_expr", 20),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1300a11b0_If>();
	}
	if ((!(_66513_prim->_method_is_bool()))) {
		this->self->_field_s->_method_push_err(_65732_i->_field_expr->_field_token,jule::Str("if_require_bool_expr", 20),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1300a11b0_If>();
	}
	return jule::new_struct<_1300a11b0_If>(new( std::nothrow ) _1300a11b0_If(_66017_d->_field_model,_65817_s));
}



inline jule::Ref<_1300a11b0_Else> _1300a11b0_ScopeChecker::_method_check_else(jule::Ref<_1275d7180_Else> _68234_e) {
	jule::Ref<_1300a11b0_Scope> _68317_s = this->self->_method_check_child(_68234_e->_field_scope);
	return jule::new_struct<_1300a11b0_Else>(new( std::nothrow ) _1300a11b0_Else(_68317_s));
}



inline void _1300a11b0_ScopeChecker::_method_check_conditional(jule::Ref<_1275d7180_Conditional> _68941_conditional) {
	jule::Ref<_1300a11b0_Conditional> _69017_c = jule::new_struct<_1300a11b0_Conditional>(new( std::nothrow ) _1300a11b0_Conditional());
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_69017_c));
	_69017_c->_field_elifs=jule::Slice<jule::Ref<_1300a11b0_If>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_68941_conditional->_field_tail.len() + 1LL)));
	_69017_c->_field_elifs[static_cast<jule::Int>(0LL)]=this->self->_method_check_if(_68941_conditional->_field_head);
	{
		auto &__julec_range_expr = _68941_conditional->_field_tail;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1300a11b0_i = 0;
			jule::Ref<_1275d7180_If> _1300a11b0_elif = *__julec_range_begin;
			_iter_begin_5143097520:;
			{
				_69017_c->_field_elifs[static_cast<jule::Int>(_1300a11b0_i + 1LL)]=this->self->_method_check_if(_1300a11b0_elif);
			}
			_iter_next_5143097520:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1300a11b0_i; _1300a11b0_elif = *__julec_range_begin; goto _iter_begin_5143097520; }
			_iter_end_5143097520:;
		}
	}
	if (jule::real(_68941_conditional->_field_default)) {
		_69017_c->_field_default=this->self->_method_check_else(_68941_conditional->_field_default);
	}
}



inline jule::Ref<_1300a11b0_Scope> _1300a11b0_ScopeChecker::_method_check_iter_scope_sc(jule::Uintptr _70539_it,jule::Ref<_1275d7180_ScopeTree> _70556_tree,jule::Ref<_1300a11b0_ScopeChecker> _70578_ssc) {
	_70578_ssc->_field_it=_70539_it;
	return this->self->_method_check_child_sc(_70556_tree,_70578_ssc);
}



inline jule::Ref<_1300a11b0_Scope> _1300a11b0_ScopeChecker::_method_check_iter_scope(jule::Uintptr _71036_it,jule::Ref<_1275d7180_ScopeTree> _71053_tree) {
	jule::Ref<_1300a11b0_ScopeChecker> _71117_ssc = this->self->_method_new_child_checker();
	return this->self->_method_check_iter_scope_sc(_71036_it,_71053_tree,_71117_ssc);
}



inline void _1300a11b0_ScopeChecker::_method_check_inf_iter(jule::Ref<_1275d7180_Iter> _71538_it) {
	jule::Ref<_1300a11b0_InfIter> _71617_kind = jule::new_struct<_1300a11b0_InfIter>(new( std::nothrow ) _1300a11b0_InfIter());
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_71617_kind));
	_71617_kind->_field_scope=this->self->_method_check_iter_scope(((jule::Uintptr)((_71617_kind).alloc)),_71538_it->_field_scope);
}



inline void _1300a11b0_ScopeChecker::_method_check_while_iter(jule::Ref<_1275d7180_Iter> _72340_it) {
	jule::Ref<_1275d7180_WhileKind> _72417_wh = _72340_it->_field_kind.operator jule::Ref<_1275d7180_WhileKind>();
	if ((!(jule::real(_72417_wh->_field_expr))) && (_72417_wh->_field_next == nullptr)) {
		this->self->_method_check_inf_iter(_72340_it);
		return;
	}
	jule::Ref<_1300a11b0_WhileIter> _73017_kind = jule::new_struct<_1300a11b0_WhileIter>(new( std::nothrow ) _1300a11b0_WhileIter());
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_73017_kind));
	_73017_kind->_field_scope=this->self->_method_check_iter_scope(((jule::Uintptr)((_73017_kind).alloc)),_72340_it->_field_scope);
	if (jule::real(_72417_wh->_field_expr)) {
		jule::Ref<_13064b610_Data> _73721_d = this->self->_field_s->_method_eval(_72417_wh->_field_expr,this->self);
		if ((!(jule::real(_73721_d)))) {
			return;
		}
		jule::Ref<_1304dc9b0_Prim> _74217_prim = _73721_d->_field_kind->_method_prim();
		if ((!(jule::real(_74217_prim)))) {
			this->self->_field_s->_method_push_err(_72340_it->_field_token,jule::Str("iter_while_require_bool_expr", 28),jule::Slice<jule::Any>({}));
			return;
		}
		if ((!(_74217_prim->_method_is_bool()))) {
			this->self->_field_s->_method_push_err(_72340_it->_field_token,jule::Str("iter_while_require_bool_expr", 28),jule::Slice<jule::Any>({}));
			return;
		}
		_73017_kind->_field_expr=_73721_d->_field_model;
	}
	if (_72417_wh->_method_is_while_next()) {
		if ((!(_1300a11b0_is_valid_ast_st_for_next_st(_72417_wh->_field_next)))) {
			this->self->_field_s->_method_push_err(_72417_wh->_field_next_token,jule::Str("invalid_stmt_for_next", 21),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Int _76217_n = this->self->_field_scope->_field_stmts._method_len();
		this->self->_method_check_node(_72417_wh->_field_next);
		if (_76217_n < this->self->_field_scope->_field_stmts._method_len()) {
			jule::Any _76525_st = this->self->_field_scope->_field_stmts._method_at(_76217_n);
			this->self->_field_scope->_field_stmts._method_set_len(_76217_n);
			if ((!(_1300a11b0_is_valid_st_for_next_st(_76525_st)))) {
				this->self->_field_s->_method_push_err(_72417_wh->_field_next_token,jule::Str("invalid_stmt_for_next", 21),jule::Slice<jule::Any>({}));
			}
			_73017_kind->_field_next=_76525_st;
		}
	}
}



inline void _1300a11b0_ScopeChecker::_method_check_range_iter(jule::Ref<_1275d7180_Iter> _77640_it) {
	jule::Ref<_1275d7180_RangeKind> _77717_rang = _77640_it->_field_kind.operator jule::Ref<_1275d7180_RangeKind>();
	jule::Ref<_13064b610_Data> _77917_d = this->self->_field_s->_method_eval(_77717_rang->_field_expr,this->self);
	if ((!(jule::real(_77917_d)))) {
		return;
	}
	jule::Ref<_1300a11b0_RangeIter> _78417_kind = jule::new_struct<_1300a11b0_RangeIter>(new( std::nothrow ) _1300a11b0_RangeIter(_77917_d,jule::Ref<_1300a11b0_Scope>(),jule::Ref<_1303533b0_Var>(),jule::Ref<_1303533b0_Var>()));
	_13032cf90_RangeChecker _78817_rc = _13032cf90_RangeChecker(this->self,_77717_rang,_78417_kind,_77917_d);
	jule::Bool _79413_ok = _78817_rc._method_check();
	if ((!(_79413_ok))) {
		return;
	}
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_78417_kind));
	jule::Ref<_1300a11b0_ScopeChecker> _80117_ssc = this->self->_method_new_child_checker();
	if (jule::real(_78417_kind->_field_key_a)) {
		_80117_ssc->_field_table->_field_vars._method_push(_78417_kind->_field_key_a);
	}
	if (jule::real(_78417_kind->_field_key_b)) {
		_80117_ssc->_field_table->_field_vars._method_push(_78417_kind->_field_key_b);
	}
	_78417_kind->_field_scope=this->self->_method_check_iter_scope_sc(((jule::Uintptr)((_78417_kind).alloc)),_77640_it->_field_scope,_80117_ssc);
}



inline void _1300a11b0_ScopeChecker::_method_check_iter(jule::Ref<_1275d7180_Iter> _81434_it) {
	if (_81434_it->_method_is_inf()) {
		this->self->_method_check_inf_iter(_81434_it);
		return;
	}
	{
		auto &_match_expr{ _81434_it->_field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_WhileKind>>())) { goto _case_end_5133388064; }
		_case_begin_5133388064:;
		{
			this->self->_method_check_while_iter(_81434_it);
		}
		goto _match_end_5133384016;
		_case_end_5133388064:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_RangeKind>>())) { goto _case_end_5133387488; }
		_case_begin_5133387488:;
		{
			this->self->_method_check_range_iter(_81434_it);
		}
		goto _match_end_5133384016;
		_case_end_5133387488:;
		_case_begin_5133386496:;
		{
			jule::outln(jule::Str("error <unimplemented iteration kind>", 36));
		}
		goto _match_end_5133384016;
		_case_end_5133386496:;
		_match_end_5133384016:;
	}
}



inline jule::Bool _1300a11b0_ScopeChecker::_method_check_valid_cont_label(jule::Uintptr _82742_it) {
	jule::Ref<_1300a11b0_ScopeChecker> _82817_scope = this->self;
	_julec_label_iter:;
	if (_82817_scope->_field_it == _82742_it) {
		return true;
	}
	if (jule::real(_82817_scope->_field_parent)) {
		_82817_scope=_82817_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Bool _1300a11b0_ScopeChecker::_method_check_valid_break_label(jule::Uintptr _84343_ptr) {
	jule::Ref<_1300a11b0_ScopeChecker> _84417_scope = this->self;
	_julec_label_iter:;
	if (_84417_scope->_field_it == _84343_ptr) {
		return true;
	}
	if (_84417_scope->_field_cse != 0LL) {
		jule::Uintptr _85217_mtch = ((jule::Uintptr)((((_1300a11b0_Case*)(_84417_scope->_field_cse))->_field_owner).alloc));
		if (_85217_mtch == _84343_ptr) {
			return true;
		}
	}
	if (jule::real(_84417_scope->_field_parent)) {
		_84417_scope=_84417_scope->_field_parent;
		goto _julec_label_iter;
	}
	return false;
}



inline jule::Ref<_1300a11b0_ContSt> _1300a11b0_ScopeChecker::_method_check_cont_valid_scope(jule::Ref<_1275d7180_ContSt> _86641_c) {
	if (_86641_c->_field_label._field_id != 0LLU) {
		return jule::new_struct<_1300a11b0_ContSt>(new( std::nothrow ) _1300a11b0_ContSt());
	}
	_1300a11b0_ScopeChecker _87117_scope = (*this);
	_julec_label_iter:;
	{
		if (!((((_87117_scope._field_it == 0LL) && jule::real(_87117_scope._field_parent)) && (!(jule::real(_87117_scope._field_owner)))))) { goto _case_end_5133419504; }
		_case_begin_5133419504:;
		{
			_87117_scope=_87117_scope._field_parent;
			goto _julec_label_iter;
		}
		goto _match_end_5133419056;
		_case_end_5133419504:;
		if (!((_87117_scope._field_it != 0LL))) { goto _case_end_5133419616; }
		_case_begin_5133419616:;
		{
			return jule::new_struct<_1300a11b0_ContSt>(new( std::nothrow ) _1300a11b0_ContSt(_87117_scope._field_it));
		}
		goto _match_end_5133419056;
		_case_end_5133419616:;
		_match_end_5133419056:;
	}
	(*this)._field_s->_method_push_err(_86641_c->_field_token,jule::Str("continue_at_out_of_valid_scope", 30),jule::Slice<jule::Any>({}));
	return jule::new_ref<_1300a11b0_ContSt>();
}



inline void _1300a11b0_ScopeChecker::_method_check_cont(jule::Ref<_1275d7180_ContSt> _88630_c) {
	jule::Ref<_1300a11b0_ContSt> _88717_cont = this->self->_method_check_cont_valid_scope(_88630_c);
	if ((!(jule::real(_88717_cont)))) {
		return;
	}
	if (_88630_c->_field_label._field_id != 0LLU) {
		jule::Ref<_1300a11b0_ScopeLabel> _89321_label = _1300a11b0_find_label_parent(_88630_c->_field_label._field_kind,this->self->_field_parent);
		if ((!(jule::real(_89321_label)))) {
			this->self->_field_s->_method_push_err(_88630_c->_field_label,jule::Str("label_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_88630_c->_field_label._field_kind)}));
			return;
		}
		_89321_label->_field_used=true;
		if ((_89321_label->_field_pos + 1LL) >= _89321_label->_field_scope->_field_scope->_field_stmts._method_len()) {
			this->self->_field_s->_method_push_err(_88630_c->_field_label,jule::Str("invalid_label", 13),jule::Slice<jule::Any>({}));
			return;
		}
		jule::Int _90617_i = _89321_label->_field_pos + 1LL;
		if (_90617_i >= _89321_label->_field_scope->_field_scope->_field_stmts._method_len()) {
			this->self->_field_s->_method_push_err(_88630_c->_field_label,jule::Str("invalid_label", 13),jule::Slice<jule::Any>({}));
		} else {
			jule::Any _91025_st = _89321_label->_field_scope->_field_scope->_field_stmts._method_at(_90617_i);
			{
				auto &_match_expr{ _91025_st };
				if (!(_match_expr.type_is<jule::Ref<_1300a11b0_InfIter>>())) { goto _case_end_5133456912; }
				_case_begin_5133456912:;
				{
					_88717_cont->_field_it=((jule::Uintptr)((_91025_st.operator jule::Ref<_1300a11b0_InfIter>()).alloc));
				}
				goto _match_end_5133454672;
				_case_end_5133456912:;
				if (!(_match_expr.type_is<jule::Ref<_1300a11b0_RangeIter>>())) { goto _case_end_5133456016; }
				_case_begin_5133456016:;
				{
					_88717_cont->_field_it=((jule::Uintptr)((_91025_st.operator jule::Ref<_1300a11b0_RangeIter>()).alloc));
				}
				goto _match_end_5133454672;
				_case_end_5133456016:;
				if (!(_match_expr.type_is<jule::Ref<_1300a11b0_WhileIter>>())) { goto _case_end_5133456128; }
				_case_begin_5133456128:;
				{
					_88717_cont->_field_it=((jule::Uintptr)((_91025_st.operator jule::Ref<_1300a11b0_WhileIter>()).alloc));
				}
				goto _match_end_5133454672;
				_case_end_5133456128:;
				_case_begin_5133455712:;
				{
					this->self->_field_s->_method_push_err(_88630_c->_field_label,jule::Str("invalid_label", 13),jule::Slice<jule::Any>({}));
				}
				goto _match_end_5133454672;
				_case_end_5133455712:;
				_match_end_5133454672:;
			}
		}
	}
	if (_88717_cont->_field_it != 0LL) {
		if ((!(this->self->_method_check_valid_cont_label(_88717_cont->_field_it)))) {
			this->self->_field_s->_method_push_err(_88630_c->_field_label,jule::Str("invalid_label", 13),jule::Slice<jule::Any>({}));
		}
	}
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_88717_cont));
}



inline void _1300a11b0_ScopeChecker::_method_check_label(jule::Ref<_1275d7180_LabelSt> _92935_l) {
	if (jule::real(this->self->_method_find_label(_92935_l->_field_ident))) {
		this->self->_field_s->_method_push_err(_92935_l->_field_token,jule::Str("label_exist", 11),jule::Slice<jule::Any>({jule::Any(_92935_l->_field_ident)}));
		return;
	}
	jule::Ref<_1300a11b0_Label> _93517_label = jule::new_struct<_1300a11b0_Label>(new( std::nothrow ) _1300a11b0_Label(_92935_l->_field_ident));
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_93517_label));
	this->self->_field_labels=append(this->self->_field_labels.get(),jule::Slice<jule::Ref<_1300a11b0_ScopeLabel>>({jule::new_struct<_1300a11b0_ScopeLabel>(new( std::nothrow ) _1300a11b0_ScopeLabel(_92935_l->_field_token,_93517_label,this->self->_field_scope->_field_stmts._method_len() - 1LL,this->self,jule::Bool()))}));
}



inline void _1300a11b0_ScopeChecker::_method_push_goto(jule::Ref<_1275d7180_GotoSt> _94833_gt) {
	this->self->_field_scope->_field_stmts._method_push(jule::Any(jule::new_struct<_1300a11b0_GotoSt>(new( std::nothrow ) _1300a11b0_GotoSt(_94833_gt->_field_label._field_kind))));
	this->self->_field_gotos=append(this->self->_field_gotos.get(),jule::Slice<jule::Ref<_1300a11b0_ScopeGoto>>({jule::new_struct<_1300a11b0_ScopeGoto>(new( std::nothrow ) _1300a11b0_ScopeGoto(_94833_gt,this->self,this->self->_field_scope->_field_stmts._method_len() - 1LL))}));
}



inline void _1300a11b0_ScopeChecker::_method_check_postfix(jule::Ref<_1275d7180_AssignSt> _96037_a) {
	if (_96037_a->_field_left.len() > 1LL) {
		this->self->_field_s->_method_push_err(_96037_a->_field_setter,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_13064b610_Data> _96617_d = this->self->_field_s->_method_eval(_96037_a->_field_left[static_cast<jule::Int>(0LL)]->_field_expr,this->self);
	if ((!(jule::real(_96617_d)))) {
		return;
	}
	_1300a11b0_check_assign(this->self->_field_s,_96617_d,jule::new_ref<_13064b610_Data>(),_96037_a->_field_setter);
	if (jule::real(_96617_d->_field_kind->_method_ptr())) {
		jule::Ref<_1304dc9b0_Ptr> _97421_ptr = _96617_d->_field_kind->_method_ptr();
		if ((!(_97421_ptr->_method_is_unsafe())) && (!(this->self->_method_is_unsafe()))) {
			this->self->_field_s->_method_push_err(_96037_a->_field_left[static_cast<jule::Int>(0LL)]->_field_expr->_field_token,jule::Str("unsafe_behavior_at_out_of_unsafe_scope", 38),jule::Slice<jule::Any>({}));
			return;
		}
	}
	jule::Ref<_1304dc9b0_TypeKind> _98117_check_t = _96617_d->_field_kind;
	if (jule::real(_96617_d->_field_kind->_method_ref())) {
		_98117_check_t=_96617_d->_field_kind->_method_ref()->_field_elem;
	}
	if ((!(jule::real(_98117_check_t->_method_prim()))) || (!(_130d7f700_is_num(_98117_check_t->_method_prim()->_field_kind)))) {
		this->self->_field_s->_method_push_err(_96037_a->_field_setter,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any(_96037_a->_field_setter._field_kind),jule::Any(_96617_d->_field_kind->_method_to_str())}));
		return;
	}
	this->self->_field_scope->_field_stmts._method_push(jule::Any(jule::new_struct<_1300a11b0_Postfix>(new( std::nothrow ) _1300a11b0_Postfix(_96617_d->_field_model,_96037_a->_field_setter._field_kind))));
}



inline jule::Bool _1300a11b0_ScopeChecker::_method_is_new_assign_ident(jule::Str _99738_ident) {
	if (_127941de0_is_ignore_ident(_99738_ident) || (_99738_ident == jule::Str("", 0))) {
		return false;
	}
	return (*this)._field_table->_method_def_by_ident(_99738_ident,false) == nullptr;
}



inline void _1300a11b0_ScopeChecker::_method_check_single_assign(jule::Ref<_1275d7180_AssignSt> _100543_a) {
	jule::Ref<_13064b610_Data> _100617_l = jule::new_ref<_13064b610_Data>();
	jule::Ref<_13064b610_Data> _100717_r = jule::new_ref<_13064b610_Data>();
	if ((!(_127941de0_is_ignore_ident(_100543_a->_field_left[static_cast<jule::Int>(0LL)]->_field_ident)))) {
		_100617_l=this->self->_field_s->_method_eval(_100543_a->_field_left[static_cast<jule::Int>(0LL)]->_field_expr,this->self);
		if ((!(jule::real(_100617_l)))) {
			return;
		}
	}
	if (jule::real(_100617_l)) {
		_100717_r=this->self->_field_s->_method_evalp(_100543_a->_field_right,this->self,_100617_l->_field_kind);
	} else {
		_100717_r=this->self->_field_s->_method_eval(_100543_a->_field_right,this->self);
	}
	if ((!(jule::real(_100717_r)))) {
		return;
	}
	if ((!(jule::real(_100617_l)))) {
		if (_100717_r->_field_kind->_method_is_void()) {
			this->self->_field_s->_method_push_err(_100543_a->_field_right->_field_token,jule::Str("invalid_expr", 12),jule::Slice<jule::Any>({}));
		}
		this->self->_field_scope->_field_stmts._method_push(jule::Any(_100717_r));
		return;
	}
	if ((!(_1300a11b0_check_assign(this->self->_field_s,_100617_l,_100717_r,_100543_a->_field_setter)))) {
		return;
	}
	if (jule::real(_100717_r->_field_kind->_method_tup())) {
		this->self->_field_s->_method_push_err(_100543_a->_field_setter,jule::Str("missing_multi_assign_idents", 27),jule::Slice<jule::Any>({}));
		return;
	}
	this->self->_field_scope->_field_stmts._method_push(jule::Any(jule::new_struct<_1300a11b0_Assign>(new( std::nothrow ) _1300a11b0_Assign(_100617_l->_field_model,_100717_r->_field_model,_100543_a->_field_setter._field_kind))));
	if ((_100543_a->_field_setter._field_kind != jule::Str("=", 1)) && (!(_100717_r->_method_is_const()))) {
		_100543_a->_field_setter._field_kind=_100543_a->_field_setter._field_kind.slice(0LL,static_cast<jule::Int>(_100543_a->_field_setter._field_kind.len() - 1LL));
		_13064b610_BinopSolver _105221_solver = _13064b610_BinopSolver(jule::new_struct<_13064b610_Eval>(new( std::nothrow ) _13064b610_Eval(this->self->_field_s,this->self,jule::Ref<_1304dc9b0_TypeKind>(),this->self->_method_is_unsafe(),jule::Ref<_1303533b0_Var>())),jule::Ref<_13064b610_Data>(),jule::Ref<_13064b610_Data>(),_100543_a->_field_setter);
		_100717_r=_105221_solver._method_solve_explicit(_100617_l,_100717_r);
		if ((!(jule::real(_100717_r)))) {
			return;
		}
		_100543_a->_field_setter._field_kind+=jule::Str("=", 1);
	}
	_13032cf90_AssignTypeChecker _106817_checker = _13032cf90_AssignTypeChecker(this->self->_field_s,_100617_l->_field_kind,_100717_r,_100543_a->_field_setter,true);
	_106817_checker._method_check();
}



inline void _1300a11b0_ScopeChecker::_method___process_end_part_of_multi_assign(jule::Ref<_1300a11b0_MultiAssign> _107857_st,jule::Ref<_1275d7180_AssignSt> _107913_a,jule::Ref<_1275d7180_AssignLeft> _107927_lexpr,jule::Ref<_13064b610_Data> _107951_l,jule::Ref<_13064b610_Data> _107965_r) {
	if (_127941de0_is_ignore_ident(_107927_lexpr->_field_ident)) {
		if (_107965_r->_field_kind->_method_is_void()) {
			(*this)._field_s->_method_push_err(_107913_a->_field_right->_field_token,jule::Str("invalid_expr", 12),jule::Slice<jule::Any>({}));
		}
		_107857_st->_field_l=append(_107857_st->_field_l,jule::Slice<jule::Any>({jule::Any(nullptr)}));
		return;
	}
	if (_107913_a->_field_declarative && (*this)._method_is_new_assign_ident(_107927_lexpr->_field_ident)) {
		jule::Ref<_1303533b0_Var> _109121_v = jule::new_struct<_1303533b0_Var>(new( std::nothrow ) _1303533b0_Var((*this)._field_tree,_107927_lexpr->_field_token,_107927_lexpr->_field_ident,jule::Bool(),jule::Bool(),_107927_lexpr->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),_107927_lexpr->_field_reference,jule::Str(),jule::Ref<_1304dc9b0_TypeSymbol>(),jule::new_struct<_13064b610_Value>(new( std::nothrow ) _13064b610_Value(_107913_a->_field_right,_107965_r)),jule::Ref<_127ff3480_ReferenceStack>(),jule::Slice<jule::Ref<_1303533b0_Var>>()));
		(*this)._field_s->_method_check_var(_109121_v);
		_107857_st->_field_l=append(_107857_st->_field_l,jule::Slice<jule::Any>({jule::Any(_109121_v)}));
		(*this)._field_table->_field_vars._method_push(_109121_v);
		(*this)._field_scope->_field_stmts._method_push(jule::Any(_109121_v));
		return;
	}
	if (_107927_lexpr->_field_mutable || _107927_lexpr->_field_reference) {
		(*this)._field_s->_method_push_err(_107927_lexpr->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_107927_lexpr->_field_ident)}));
	}
	if ((!(_1300a11b0_check_assign((*this)._field_s,_107951_l,_107965_r,_107913_a->_field_setter)))) {
		return;
	}
	
	(*this)._field_s->_method_check_validity_for_init_expr(_107951_l->_field_mutable,false,_107951_l->_field_kind,_107965_r,_107913_a->_field_setter);
	_13032cf90_AssignTypeChecker _112517_checker = _13032cf90_AssignTypeChecker((*this)._field_s,_107951_l->_field_kind,_107965_r,_107913_a->_field_setter,true);
	_112517_checker._method_check();
	_107857_st->_field_l=append(_107857_st->_field_l,jule::Slice<jule::Any>({_107951_l->_field_model}));
}



inline void _1300a11b0_ScopeChecker::_method_check_ret_multi_assign(jule::Ref<_1275d7180_AssignSt> _113746_a) {
	jule::Ref<_13064b610_Data> _113817_rd = this->self->_field_s->_method_eval(_113746_a->_field_right,this->self);
	if ((!(jule::real(_113817_rd)))) {
		return;
	}
	jule::Slice<jule::Ref<_13064b610_Data>> _114317_r = _1300a11b0_get_datas_from_tuple_data(_113817_rd);
	{
		if (!((_113746_a->_field_left.len() > _114317_r.len()))) { goto _case_end_5133665520; }
		_case_begin_5133665520:;
		{
			this->self->_field_s->_method_push_err(_113746_a->_field_setter,jule::Str("overflow_multi_assign_idents", 28),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_5133665056;
		_case_end_5133665520:;
		if (!((_113746_a->_field_left.len() < _114317_r.len()))) { goto _case_end_5133665632; }
		_case_begin_5133665632:;
		{
			this->self->_field_s->_method_push_err(_113746_a->_field_setter,jule::Str("missing_multi_assign_idents", 27),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_5133665056;
		_case_end_5133665632:;
		_match_end_5133665056:;
	}
	jule::Ref<_1300a11b0_MultiAssign> _115517_st = jule::new_struct<_1300a11b0_MultiAssign>(new( std::nothrow ) _1300a11b0_MultiAssign(jule::Slice<jule::Any>(),_113817_rd->_field_model));
	if ((!(jule::real(_113817_rd->_field_kind->_method_tup())))) {
		_115517_st->_field_r=jule::Any(jule::new_struct<_1279cf930_TupleExprModel>(new( std::nothrow ) _1279cf930_TupleExprModel(_114317_r)));
	}
	{
		auto &__julec_range_expr = _113746_a->_field_left;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1300a11b0_i = 0;
			_iter_begin_5133678448:;
			{
				jule::Ref<_1275d7180_AssignLeft> _116421_lexpr = _113746_a->_field_left[static_cast<jule::Int>(_1300a11b0_i)];
				jule::Ref<_13064b610_Data> _116521_l = jule::new_ref<_13064b610_Data>();
				jule::Ref<_13064b610_Data> _116621_r = _114317_r[static_cast<jule::Int>(_1300a11b0_i)];
				if ((!(_127941de0_is_ignore_ident(_116421_lexpr->_field_ident))) && ((!(_113746_a->_field_declarative)) || (!(this->self->_method_is_new_assign_ident(_116421_lexpr->_field_ident))))) {
					_116521_l=this->self->_field_s->_method_eval(_116421_lexpr->_field_expr,this->self);
					if ((!(jule::real(_116521_l)))) {
						goto _iter_next_5133678448;
					}
				}
				this->self->_method___process_end_part_of_multi_assign(_115517_st,_113746_a,_116421_lexpr,_116521_l,_116621_r);
			}
			_iter_next_5133678448:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1300a11b0_i; goto _iter_begin_5133678448; }
			_iter_end_5133678448:;
		}
	}
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_115517_st));
}



inline void _1300a11b0_ScopeChecker::_method_check_multi_assign(jule::Ref<_1275d7180_AssignSt> _118142_a) {
	{
		auto &_match_expr{ _118142_a->_field_right->_field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_FnCallExpr>>())) { goto _case_end_5133698320; }
		_case_begin_5133698320:;
		{
			this->self->_method_check_ret_multi_assign(_118142_a);
			return;
		}
		goto _match_end_5133697216;
		_case_end_5133698320:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_UnsafeExpr>>())) { goto _case_end_5133698432; }
		_case_begin_5133698432:;
		{
			{
				auto &_match_expr{ _118142_a->_field_right->_field_kind.operator jule::Ref<_1275d7180_UnsafeExpr>()->_field_expr };
				if (!(_match_expr.type_is<jule::Ref<_1275d7180_FnCallExpr>>())) { goto _case_end_5133703408; }
				_case_begin_5133703408:;
				{
					this->self->_method_check_ret_multi_assign(_118142_a);
					return;
				}
				goto _match_end_5133700240;
				_case_end_5133703408:;
				_match_end_5133700240:;
			}
		}
		goto _match_end_5133697216;
		_case_end_5133698432:;
		_match_end_5133697216:;
	}
	jule::Slice<jule::Any> _119517_right = _1300a11b0_get_expr_models(_118142_a->_field_right->_field_kind);
	{
		if (!((_118142_a->_field_left.len() > _119517_right.len()))) { goto _case_end_5133707056; }
		_case_begin_5133707056:;
		{
			this->self->_field_s->_method_push_err(_118142_a->_field_setter,jule::Str("overflow_multi_assign_idents", 28),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_5133706864;
		_case_end_5133707056:;
		if (!((_118142_a->_field_left.len() < _119517_right.len()))) { goto _case_end_5133707168; }
		_case_begin_5133707168:;
		{
			this->self->_field_s->_method_push_err(_118142_a->_field_setter,jule::Str("missing_multi_assign_idents", 27),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_5133706864;
		_case_end_5133707168:;
		_match_end_5133706864:;
	}
	jule::Ref<_1279cf930_TupleExprModel> _120717_right_tuple = jule::new_struct<_1279cf930_TupleExprModel>(new( std::nothrow ) _1279cf930_TupleExprModel());
	jule::Ref<_1300a11b0_MultiAssign> _120917_st = jule::new_struct<_1300a11b0_MultiAssign>(new( std::nothrow ) _1300a11b0_MultiAssign(jule::Slice<jule::Any>(),_120717_right_tuple));
	{
		auto &__julec_range_expr = _118142_a->_field_left;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1300a11b0_i = 0;
			_iter_begin_5133718208:;
			{
				jule::Ref<_1275d7180_AssignLeft> _121421_lexpr = _118142_a->_field_left[static_cast<jule::Int>(_1300a11b0_i)];
				jule::Ref<_13064b610_Data> _121521_l = jule::new_ref<_13064b610_Data>();
				jule::Ref<_13064b610_Data> _121621_r = jule::new_ref<_13064b610_Data>();
				if ((!(_127941de0_is_ignore_ident(_121421_lexpr->_field_ident))) && ((!(_118142_a->_field_declarative)) || (!(this->self->_method_is_new_assign_ident(_121421_lexpr->_field_ident))))) {
					_121521_l=this->self->_field_s->_method_eval(_121421_lexpr->_field_expr,this->self);
					if ((!(jule::real(_121521_l)))) {
						goto _iter_next_5133718208;
					}
				}
				if (jule::real(_121521_l)) {
					jule::Ref<_1275d7180_Expr> _122625_expr = jule::new_struct<_1275d7180_Expr>(new( std::nothrow ) _1275d7180_Expr(_118142_a->_field_right->_field_token,_119517_right[static_cast<jule::Int>(_1300a11b0_i)]));
					_121621_r=this->self->_field_s->_method_evalp(_122625_expr,this->self,_121521_l->_field_kind);
				} else {
					jule::Ref<_1275d7180_Expr> _122925_expr = jule::new_struct<_1275d7180_Expr>(new( std::nothrow ) _1275d7180_Expr(_118142_a->_field_right->_field_token,_119517_right[static_cast<jule::Int>(_1300a11b0_i)]));
					_121621_r=this->self->_field_s->_method_eval(_122925_expr,this->self);
				}
				if ((!(jule::real(_121621_r)))) {
					goto _iter_next_5133718208;
				}
				_120717_right_tuple->_field_datas=append(_120717_right_tuple->_field_datas,jule::Slice<jule::Ref<_13064b610_Data>>({_121621_r}));
				this->self->_method___process_end_part_of_multi_assign(_120917_st,_118142_a,_121421_lexpr,_121521_l,_121621_r);
			}
			_iter_next_5133718208:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1300a11b0_i; goto _iter_begin_5133718208; }
			_iter_end_5133718208:;
		}
	}
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_120917_st));
}



inline void _1300a11b0_ScopeChecker::_method_check_assign_st(jule::Ref<_1275d7180_AssignSt> _124439_a) {
	if (_127941de0_is_postfix_op(_124439_a->_field_setter._field_kind)) {
		this->self->_method_check_postfix(_124439_a);
		return;
	}
	if ((_124439_a->_field_left.len() == 1LL) && (!(_124439_a->_field_declarative))) {
		this->self->_method_check_single_assign(_124439_a);
		return;
	}
	this->self->_method_check_multi_assign(_124439_a);
}



inline jule::Ref<_1300a11b0_Scope> _1300a11b0_ScopeChecker::_method_check_case_scope(jule::Ref<_1300a11b0_Case> _125836_c,jule::Ref<_1275d7180_ScopeTree> _125850_tree) {
	jule::Ref<_1300a11b0_ScopeChecker> _125917_ssc = this->self->_method_new_child_checker();
	_125917_ssc->_field_cse=((jule::Uintptr)((_125836_c).alloc));
	return this->self->_method_check_child_sc(_125850_tree,_125917_ssc);
}



inline jule::Ref<_1300a11b0_Case> _1300a11b0_ScopeChecker::_method_check_case(jule::Ref<_1300a11b0_Match> _126434_m,jule::Int _126445_i,jule::Ref<_1275d7180_Case> _126457_c,jule::Ref<_13064b610_Data> _126487_expr) {
	jule::Ref<_1300a11b0_Case> _126517__case = _126434_m->_field_cases[static_cast<jule::Int>(_126445_i)];
	_126517__case->_field_exprs=jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_126457_c->_field_exprs.len())));
	{
		auto &__julec_range_expr = _126457_c->_field_exprs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1300a11b0_i = 0;
			jule::Ref<_1275d7180_Expr> _1300a11b0_e = *__julec_range_begin;
			_iter_begin_5133772912:;
			{
				if (_126434_m->_field_type_match) {
					jule::Ref<_13064b610_Eval> _127025_eval = jule::new_struct<_13064b610_Eval>(new( std::nothrow ) _13064b610_Eval(this->self->_field_s,this->self,jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Ref<_1303533b0_Var>()));
					jule::Ref<_13064b610_Data> _127525_d = _127025_eval->_method_eval(_1300a11b0_e);
					if (jule::real(_127525_d)) {
						_126517__case->_field_exprs[static_cast<jule::Int>(_1300a11b0_i)]=jule::Any(_127525_d->_field_kind);
						if (_1300a11b0_count_match_type(_126434_m,_127525_d->_field_kind) > 1LL) {
							this->self->_field_s->_method_push_err(_1300a11b0_e->_field_token,jule::Str("duplicate_match_type", 20),jule::Slice<jule::Any>({jule::Any(_127525_d->_field_kind->_method_to_str())}));
						}
					}
					jule::Ref<_130099320_Trait> _128321_trt = _126487_expr->_field_kind->_method_trt();
					if (jule::real(_128321_trt)) {
						this->self->_field_s->_method_check_type_compatibility(_126487_expr->_field_kind,_127525_d->_field_kind,_1300a11b0_e->_field_token,false);
					}
					goto _iter_next_5133772912;
				}
				jule::Ref<_13064b610_Data> _129121_d = this->self->_field_s->_method_eval(_1300a11b0_e,this->self);
				if ((!(jule::real(_129121_d)))) {
					goto _iter_next_5133772912;
				}
				_126517__case->_field_exprs[static_cast<jule::Int>(_1300a11b0_i)]=_129121_d->_field_model;
				_13032cf90_AssignTypeChecker _129821_checker = _13032cf90_AssignTypeChecker(this->self->_field_s,_126487_expr->_field_kind,_129121_d,_1300a11b0_e->_field_token,true);
				_129821_checker._method_check();
			}
			_iter_next_5133772912:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1300a11b0_i; _1300a11b0_e = *__julec_range_begin; goto _iter_begin_5133772912; }
			_iter_end_5133772912:;
		}
	}
	_126517__case->_field_scope=this->self->_method_check_case_scope(_126517__case,_126457_c->_field_scope);
	return _126517__case;
}



inline void _1300a11b0_ScopeChecker::_method_check_cases(jule::Ref<_1275d7180_MatchCase> _131235_m,jule::Ref<_1300a11b0_Match> _131270_rm,jule::Ref<_13064b610_Data> _131286_expr) {
	_131270_rm->_field_cases=jule::Slice<jule::Ref<_1300a11b0_Case>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_131235_m->_field_cases.len())));
	{
		auto &__julec_range_expr = _131235_m->_field_cases;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1300a11b0_i = 0;
			_iter_begin_5133814896:;
			{
				jule::Ref<_1300a11b0_Case> _131521__case = jule::new_struct<_1300a11b0_Case>(new( std::nothrow ) _1300a11b0_Case(_131270_rm,jule::Ref<_1300a11b0_Scope>(),jule::Slice<jule::Any>(),jule::Ref<_1300a11b0_Case>()));
				if (_1300a11b0_i > 0LL) {
					_131270_rm->_field_cases[static_cast<jule::Int>(_1300a11b0_i - 1LL)]->_field_next=_131521__case;
				}
				_131270_rm->_field_cases[static_cast<jule::Int>(_1300a11b0_i)]=_131521__case;
			}
			_iter_next_5133814896:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1300a11b0_i; goto _iter_begin_5133814896; }
			_iter_end_5133814896:;
		}
	}
	if (jule::real(_131270_rm->_field_default) && (_131235_m->_field_cases.len() > 0LL)) {
		_131270_rm->_field_cases[static_cast<jule::Int>(_131270_rm->_field_cases.len() - 1LL)]->_field_next=_131270_rm->_field_default;
	}
	{
		auto &__julec_range_expr = _131235_m->_field_cases;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1300a11b0_i = 0;
			jule::Ref<_1275d7180_Case> _1300a11b0_c = *__julec_range_begin;
			_iter_begin_5133826128:;
			{
				this->self->_method_check_case(_131270_rm,_1300a11b0_i,_1300a11b0_c,_131286_expr);
			}
			_iter_next_5133826128:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1300a11b0_i; _1300a11b0_c = *__julec_range_begin; goto _iter_begin_5133826128; }
			_iter_end_5133826128:;
		}
	}
}



inline jule::Ref<_1300a11b0_Case> _1300a11b0_ScopeChecker::_method_check_default(jule::Ref<_1300a11b0_Match> _133537_m,jule::Ref<_1275d7180_Else> _133552_d) {
	jule::Ref<_1300a11b0_Case> _133617_def = jule::new_struct<_1300a11b0_Case>(new( std::nothrow ) _1300a11b0_Case(_133537_m,jule::Ref<_1300a11b0_Scope>(),jule::Slice<jule::Any>(),jule::Ref<_1300a11b0_Case>()));
	_133617_def->_field_scope=this->self->_method_check_case_scope(_133617_def,_133552_d->_field_scope);
	return _133617_def;
}



inline void _1300a11b0_ScopeChecker::_method_check_type_match(jule::Ref<_1275d7180_MatchCase> _134340_m) {
	jule::Ref<_13064b610_Data> _134417_d = this->self->_field_s->_method_eval(_134340_m->_field_expr,this->self);
	if ((!(jule::real(_134417_d)))) {
		return;
	}
	if ((!((jule::real(_134417_d->_field_kind->_method_prim()) && _134417_d->_field_kind->_method_prim()->_method_is_any()) || jule::real(_134417_d->_field_kind->_method_trt())))) {
		this->self->_field_s->_method_push_err(_134340_m->_field_expr->_field_token,jule::Str("type_case_has_not_valid_expr", 28),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_1300a11b0_Match> _135417_tm = jule::new_struct<_1300a11b0_Match>(new( std::nothrow ) _1300a11b0_Match(_134417_d,true,jule::Slice<jule::Ref<_1300a11b0_Case>>(),jule::Ref<_1300a11b0_Case>()));
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_135417_tm));
	if (jule::real(_134340_m->_field_default)) {
		_135417_tm->_field_default=this->self->_method_check_default(_135417_tm,_134340_m->_field_default);
	}
	this->self->_method_check_cases(_134340_m,_135417_tm,_134417_d);
}



inline void _1300a11b0_ScopeChecker::_method_check_common_match(jule::Ref<_1275d7180_MatchCase> _136742_m) {
	jule::Ref<_13064b610_Data> _136817_d = jule::new_ref<_13064b610_Data>();
	if ((!(jule::real(_136742_m->_field_expr)))) {
		_136817_d=jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_130c83140_new_bool(true)));
		_136817_d->_field_model=jule::Any(_136817_d->_field_constant);
	} else {
		_136817_d=this->self->_field_s->_method_eval(_136742_m->_field_expr,this->self);
		if ((!(jule::real(_136817_d)))) {
			return;
		}
	}
	jule::Ref<_1300a11b0_Match> _138217_mc = jule::new_struct<_1300a11b0_Match>(new( std::nothrow ) _1300a11b0_Match(_136817_d,jule::Bool(),jule::Slice<jule::Ref<_1300a11b0_Case>>(),jule::Ref<_1300a11b0_Case>()));
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_138217_mc));
	if (jule::real(_136742_m->_field_default)) {
		_138217_mc->_field_default=this->self->_method_check_default(_138217_mc,_136742_m->_field_default);
	}
	this->self->_method_check_cases(_136742_m,_138217_mc,_136817_d);
}



inline void _1300a11b0_ScopeChecker::_method_check_match(jule::Ref<_1275d7180_MatchCase> _139435_m) {
	if (_139435_m->_field_type_match) {
		this->self->_method_check_type_match(_139435_m);
		return;
	}
	this->self->_method_check_common_match(_139435_m);
}



inline void _1300a11b0_ScopeChecker::_method_check_fall(jule::Ref<_1275d7180_FallSt> _140229_f) {
	if (((*this)._field_cse == 0LL) || (((*this)._field_scope->_field_stmts._method_len() + 1LL) < (*this)._field_scope->_field_stmts._method_len())) {
		(*this)._field_s->_method_push_err(_140229_f->_field_token,jule::Str("fallthrough_wrong_use", 21),jule::Slice<jule::Any>({}));
		return;
	}
	_1300a11b0_Case* _140817__case = ((_1300a11b0_Case*)((*this)._field_cse));
	if ((!(jule::real(_140817__case->_field_next)))) {
		(*this)._field_s->_method_push_err(_140229_f->_field_token,jule::Str("fallthrough_into_final_case", 27),jule::Slice<jule::Any>({}));
		return;
	}
	(*this)._field_scope->_field_stmts._method_push(jule::Any(jule::new_struct<_1300a11b0_FallSt>(new( std::nothrow ) _1300a11b0_FallSt(((jule::Uintptr)((_140817__case->_field_next).alloc))))));
}



inline jule::Ref<_1300a11b0_BreakSt> _1300a11b0_ScopeChecker::_method_check_break_with_label(jule::Ref<_1275d7180_BreakSt> _141942_b) {
	jule::Ref<_1300a11b0_BreakSt> _142017_brk = this->self->_method_check_plain_break(_141942_b);
	if ((!(jule::real(_142017_brk)))) {
		return jule::new_ref<_1300a11b0_BreakSt>();
	}
	_142017_brk->_field_it=0LL;
	_142017_brk->_field_mtch=0LL;
	jule::Ref<_1300a11b0_ScopeLabel> _143017_label = _1300a11b0_find_label_parent(_141942_b->_field_label._field_kind,this->self->_field_parent);
	if ((!(jule::real(_143017_label)))) {
		this->self->_field_s->_method_push_err(_141942_b->_field_label,jule::Str("label_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_141942_b->_field_label._field_kind)}));
		return jule::new_ref<_1300a11b0_BreakSt>();
	}
	_143017_label->_field_used=true;
	if ((_143017_label->_field_pos + 1LL) >= _143017_label->_field_scope->_field_scope->_field_stmts._method_len()) {
		this->self->_field_s->_method_push_err(_141942_b->_field_label,jule::Str("invalid_label", 13),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1300a11b0_BreakSt>();
	}
	jule::Int _144313_i = _143017_label->_field_pos + 1LL;
	if (_144313_i >= _143017_label->_field_scope->_field_scope->_field_stmts._method_len()) {
		this->self->_field_s->_method_push_err(_141942_b->_field_label,jule::Str("invalid_label", 13),jule::Slice<jule::Any>({}));
	} else {
		jule::Any _144721_st = _143017_label->_field_scope->_field_scope->_field_stmts._method_at(_144313_i);
		{
			auto &_match_expr{ _144721_st };
			if (!(_match_expr.type_is<jule::Ref<_1300a11b0_InfIter>>())) { goto _case_end_5143382608; }
			_case_begin_5143382608:;
			{
				_142017_brk->_field_it=((jule::Uintptr)((_144721_st.operator jule::Ref<_1300a11b0_InfIter>()).alloc));
			}
			goto _match_end_5143380400;
			_case_end_5143382608:;
			if (!(_match_expr.type_is<jule::Ref<_1300a11b0_RangeIter>>())) { goto _case_end_5143381712; }
			_case_begin_5143381712:;
			{
				_142017_brk->_field_it=((jule::Uintptr)((_144721_st.operator jule::Ref<_1300a11b0_RangeIter>()).alloc));
			}
			goto _match_end_5143380400;
			_case_end_5143381712:;
			if (!(_match_expr.type_is<jule::Ref<_1300a11b0_WhileIter>>())) { goto _case_end_5143381824; }
			_case_begin_5143381824:;
			{
				_142017_brk->_field_it=((jule::Uintptr)((_144721_st.operator jule::Ref<_1300a11b0_WhileIter>()).alloc));
			}
			goto _match_end_5143380400;
			_case_end_5143381824:;
			if (!(_match_expr.type_is<jule::Ref<_1300a11b0_Match>>())) { goto _case_end_5143381936; }
			_case_begin_5143381936:;
			{
				_142017_brk->_field_mtch=((jule::Uintptr)((_144721_st.operator jule::Ref<_1300a11b0_Match>()).alloc));
			}
			goto _match_end_5143380400;
			_case_end_5143381936:;
			_case_begin_5143381408:;
			{
				this->self->_field_s->_method_push_err(_141942_b->_field_label,jule::Str("invalid_label", 13),jule::Slice<jule::Any>({}));
			}
			goto _match_end_5143380400;
			_case_end_5143381408:;
			_match_end_5143380400:;
		}
	}
	if (_142017_brk->_field_it != 0LL) {
		if ((!(this->self->_method_check_valid_break_label(_142017_brk->_field_it)))) {
			this->self->_field_s->_method_push_err(_141942_b->_field_label,jule::Str("invalid_label", 13),jule::Slice<jule::Any>({}));
		}
	}
	if (_142017_brk->_field_mtch != 0LL) {
		if ((!(this->self->_method_check_valid_break_label(_142017_brk->_field_mtch)))) {
			this->self->_field_s->_method_push_err(_141942_b->_field_label,jule::Str("invalid_label", 13),jule::Slice<jule::Any>({}));
		}
	}
	return _142017_brk;
}



inline jule::Ref<_1300a11b0_BreakSt> _1300a11b0_ScopeChecker::_method_check_plain_break(jule::Ref<_1275d7180_BreakSt> _147237_b) {
	jule::Ref<_1300a11b0_ScopeChecker> _147317_scope = this->self;
	_julec_label_iter:;
	{
		if (!(((((_147317_scope->_field_it == 0LL) && (_147317_scope->_field_cse == 0LL)) && jule::real(_147317_scope->_field_parent)) && (!(jule::real(_147317_scope->_field_owner)))))) { goto _case_end_5143405488; }
		_case_begin_5143405488:;
		{
			_147317_scope=_147317_scope->_field_parent;
			goto _julec_label_iter;
		}
		goto _match_end_5143405264;
		_case_end_5143405488:;
		if (!((_147317_scope->_field_it != 0LL))) { goto _case_end_5143405600; }
		_case_begin_5143405600:;
		{
			return jule::new_struct<_1300a11b0_BreakSt>(new( std::nothrow ) _1300a11b0_BreakSt(_147317_scope->_field_it,jule::Uintptr()));
		}
		goto _match_end_5143405264;
		_case_end_5143405600:;
		if (!((_147317_scope->_field_cse != 0LL))) { goto _case_end_5143405712; }
		_case_begin_5143405712:;
		{
			return jule::new_struct<_1300a11b0_BreakSt>(new( std::nothrow ) _1300a11b0_BreakSt(jule::Uintptr(),((jule::Uintptr)((((_1300a11b0_Case*)(_147317_scope->_field_cse))->_field_owner).alloc))));
		}
		goto _match_end_5143405264;
		_case_end_5143405712:;
		_match_end_5143405264:;
	}
	this->self->_field_s->_method_push_err(_147237_b->_field_token,jule::Str("break_at_out_of_valid_scope", 27),jule::Slice<jule::Any>({}));
	return jule::new_ref<_1300a11b0_BreakSt>();
}



inline void _1300a11b0_ScopeChecker::_method_check_break(jule::Ref<_1275d7180_BreakSt> _149131_b) {
	if (_149131_b->_field_label._field_id != 0LLU) {
		jule::Ref<_1300a11b0_BreakSt> _149321_brk = this->self->_method_check_break_with_label(_149131_b);
		this->self->_field_scope->_field_stmts._method_push(jule::Any(_149321_brk));
		return;
	}
	jule::Ref<_1300a11b0_BreakSt> _149817_brk = this->self->_method_check_plain_break(_149131_b);
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_149817_brk));
}



inline void _1300a11b0_ScopeChecker::_method_check_ret(jule::Ref<_1275d7180_RetSt> _150233_r) {
	jule::Ref<_1300a11b0_RetSt> _150317_rt = jule::new_struct<_1300a11b0_RetSt>(new( std::nothrow ) _1300a11b0_RetSt());
	this->self->_field_scope->_field_stmts._method_push(jule::Any(_150317_rt));
	jule::Ref<_13064b610_Data> _150617_d = jule::new_ref<_13064b610_Data>();
	if (jule::real(_150233_r->_field_expr)) {
		_150617_d=this->self->_field_s->_method_eval(_150233_r->_field_expr,this->self);
		if ((!(jule::real(_150617_d)))) {
			return;
		}
	}
	jule::Ref<_13032cf90_RetTypeChecker> _151517_rtc = jule::new_struct<_13032cf90_RetTypeChecker>(new( std::nothrow ) _13032cf90_RetTypeChecker(this->self,this->self->_method_get_root()->_field_owner,jule::Slice<jule::Ref<_1304dc9b0_TypeKind>>(),jule::Slice<jule::Ref<_13064b610_Data>>(),jule::Slice<jule::Ref<_1303533b0_Var>>(),_150233_r->_field_token));
	jule::Bool _152013_ok = _151517_rtc->_method_check(_150617_d);
	if ((!(_152013_ok))) {
		return;
	}
	if ((!(jule::real(_150617_d))) && (_151517_rtc->_field_vars.len() == 0LL)) {
		return;
	}
	_150317_rt->_field_vars=_151517_rtc->_field_vars;
	if (jule::real(_150617_d)) {
		_150317_rt->_field_expr=_150617_d->_field_model;
	}
}



inline void _1300a11b0_ScopeChecker::_method_check_node(jule::Any _153634_node) {
	{
		auto &_match_expr{ _153634_node };
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_Comment>>())) { goto _case_end_5143458608; }
		_case_begin_5143458608:;
		{
			goto _match_end_5143456976;
		}
		goto _match_end_5143456976;
		_case_end_5143458608:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_ScopeTree>>())) { goto _case_end_5143458720; }
		_case_begin_5143458720:;
		{
			this->self->_method_check_anon_scope(_153634_node.operator jule::Ref<_1275d7180_ScopeTree>());
		}
		goto _match_end_5143456976;
		_case_end_5143458720:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_VarDecl>>())) { goto _case_end_5143458832; }
		_case_begin_5143458832:;
		{
			this->self->_method_check_var_decl(_153634_node.operator jule::Ref<_1275d7180_VarDecl>());
		}
		goto _match_end_5143456976;
		_case_end_5143458832:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_TypeAliasDecl>>())) { goto _case_end_5143457904; }
		_case_begin_5143457904:;
		{
			this->self->_method_check_type_alias_decl(_153634_node.operator jule::Ref<_1275d7180_TypeAliasDecl>());
		}
		goto _match_end_5143456976;
		_case_end_5143457904:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_Expr>>())) { goto _case_end_5143458016; }
		_case_begin_5143458016:;
		{
			this->self->_method_check_expr(_153634_node.operator jule::Ref<_1275d7180_Expr>());
		}
		goto _match_end_5143456976;
		_case_end_5143458016:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_Conditional>>())) { goto _case_end_5143458128; }
		_case_begin_5143458128:;
		{
			this->self->_method_check_conditional(_153634_node.operator jule::Ref<_1275d7180_Conditional>());
		}
		goto _match_end_5143456976;
		_case_end_5143458128:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_Iter>>())) { goto _case_end_5143458240; }
		_case_begin_5143458240:;
		{
			this->self->_method_check_iter(_153634_node.operator jule::Ref<_1275d7180_Iter>());
		}
		goto _match_end_5143456976;
		_case_end_5143458240:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_ContSt>>())) { goto _case_end_5143459872; }
		_case_begin_5143459872:;
		{
			this->self->_method_check_cont(_153634_node.operator jule::Ref<_1275d7180_ContSt>());
		}
		goto _match_end_5143456976;
		_case_end_5143459872:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_LabelSt>>())) { goto _case_end_5143459984; }
		_case_begin_5143459984:;
		{
			this->self->_method_check_label(_153634_node.operator jule::Ref<_1275d7180_LabelSt>());
		}
		goto _match_end_5143456976;
		_case_end_5143459984:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_GotoSt>>())) { goto _case_end_5143460096; }
		_case_begin_5143460096:;
		{
			this->self->_method_push_goto(_153634_node.operator jule::Ref<_1275d7180_GotoSt>());
		}
		goto _match_end_5143456976;
		_case_end_5143460096:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_AssignSt>>())) { goto _case_end_5143460208; }
		_case_begin_5143460208:;
		{
			this->self->_method_check_assign_st(_153634_node.operator jule::Ref<_1275d7180_AssignSt>());
		}
		goto _match_end_5143456976;
		_case_end_5143460208:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_MatchCase>>())) { goto _case_end_5143460320; }
		_case_begin_5143460320:;
		{
			this->self->_method_check_match(_153634_node.operator jule::Ref<_1275d7180_MatchCase>());
		}
		goto _match_end_5143456976;
		_case_end_5143460320:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_FallSt>>())) { goto _case_end_5143460432; }
		_case_begin_5143460432:;
		{
			this->self->_method_check_fall(_153634_node.operator jule::Ref<_1275d7180_FallSt>());
		}
		goto _match_end_5143456976;
		_case_end_5143460432:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_BreakSt>>())) { goto _case_end_5143460544; }
		_case_begin_5143460544:;
		{
			this->self->_method_check_break(_153634_node.operator jule::Ref<_1275d7180_BreakSt>());
		}
		goto _match_end_5143456976;
		_case_end_5143460544:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_RetSt>>())) { goto _case_end_5143460656; }
		_case_begin_5143460656:;
		{
			this->self->_method_check_ret(_153634_node.operator jule::Ref<_1275d7180_RetSt>());
		}
		goto _match_end_5143456976;
		_case_end_5143460656:;
		_case_begin_5143457104:;
		{
			jule::outln(jule::Str("error <unimplemented scope node>", 32));
		}
		goto _match_end_5143456976;
		_case_end_5143457104:;
		_match_end_5143456976:;
	}
}



inline void _1300a11b0_ScopeChecker::_method_check_tree(void) {
	this->self->_field_i=0LL;
	_iter_begin_5143494336:;
	if (!(this->self->_field_i < this->self->_field_tree->_field_stmts.len())) { goto _iter_end_5143494336; }
	{
		this->self->_method_check_node(this->self->_field_tree->_field_stmts[static_cast<jule::Int>(this->self->_field_i)]);
	}
	_iter_next_5143494336:;
	(this->self->_field_i)++;
	goto _iter_begin_5143494336;
	_iter_end_5143494336:;
}



inline void _1300a11b0_ScopeChecker::_method_check_same_scope_goto(jule::Ref<_1300a11b0_ScopeGoto> _156440_gt,jule::Ref<_1300a11b0_ScopeLabel> _156460_label) {
	if (_156460_label->_field_pos < _156440_gt->_field_pos) {
		return;
	}
	jule::Int _156917_i = _156460_label->_field_pos;
	_iter_begin_5143503168:;
	if (!(_156917_i > _156440_gt->_field_pos)) { goto _iter_end_5143503168; }
	{
		jule::Any _157117_s = _156460_label->_field_scope->_field_scope->_field_stmts._method_at(_156917_i);
		if (_1300a11b0_st_is_def(_157117_s)) {
			(*this)._field_s->_method_push_err(_156440_gt->_field_gt->_field_token,jule::Str("goto_jumps_declarations", 23),jule::Slice<jule::Any>({jule::Any(_156440_gt->_field_gt->_field_label._field_kind)}));
			goto _iter_end_5143503168;
		}
	}
	_iter_next_5143503168:;
	(_156917_i)--;
	goto _iter_begin_5143503168;
	_iter_end_5143503168:;
}



inline jule::Bool _1300a11b0_ScopeChecker::_method_check_label_parents(jule::Ref<_1300a11b0_ScopeGoto> _157938_gt,jule::Ref<_1300a11b0_ScopeLabel> _157958_label) {
	jule::Ref<_1300a11b0_ScopeChecker> _158017_scope = _157958_label->_field_scope;
	_julec_label_parent_scopes:;
	if (jule::real(_158017_scope->_field_parent) && ((_158017_scope->_field_parent).alloc != (_157938_gt->_field_scope).alloc)) {
		_158017_scope=_158017_scope->_field_parent;
		jule::Int _158521_i = 0LL;
		_iter_begin_5143520496:;
		if (!(_158521_i < _158017_scope->_field_scope->_field_stmts._method_len())) { goto _iter_end_5143520496; }
		{
			{
				if (!((_158521_i >= _157958_label->_field_pos))) { goto _case_end_5143522064; }
				_case_begin_5143522064:;
				{
					return true;
				}
				goto _match_end_5143521824;
				_case_end_5143522064:;
				if (!((_1300a11b0_st_is_def(_158017_scope->_field_scope->_field_stmts._method_at(_158521_i))))) { goto _case_end_5143522176; }
				_case_begin_5143522176:;
				{
					(*this)._field_s->_method_push_err(_157938_gt->_field_gt->_field_token,jule::Str("goto_jumps_declarations", 23),jule::Slice<jule::Any>({jule::Any(_157938_gt->_field_gt->_field_label._field_kind)}));
					return false;
				}
				goto _match_end_5143521824;
				_case_end_5143522176:;
				_match_end_5143521824:;
			}
		}
		_iter_next_5143520496:;
		(_158521_i)++;
		goto _iter_begin_5143520496;
		_iter_end_5143520496:;
		goto _julec_label_parent_scopes;
	}
	return true;
}



inline void _1300a11b0_ScopeChecker::_method_check_goto_scope(jule::Ref<_1300a11b0_ScopeGoto> _160339_gt,jule::Ref<_1300a11b0_ScopeLabel> _160355_label) {
	jule::Int _160417_i = _160339_gt->_field_pos;
	_iter_begin_5143537728:;
	if (!(_160417_i < _160339_gt->_field_scope->_field_scope->_field_stmts._method_len())) { goto _iter_end_5143537728; }
	{
		{
			if (!((_160417_i >= _160355_label->_field_pos))) { goto _case_end_5143539376; }
			_case_begin_5143539376:;
			{
				return;
			}
			goto _match_end_5143539136;
			_case_end_5143539376:;
			if (!((_1300a11b0_st_is_def(_160339_gt->_field_scope->_field_scope->_field_stmts._method_at(_160417_i))))) { goto _case_end_5143539488; }
			_case_begin_5143539488:;
			{
				(*this)._field_s->_method_push_err(_160339_gt->_field_gt->_field_token,jule::Str("goto_jumps_declarations", 23),jule::Slice<jule::Any>({jule::Any(_160339_gt->_field_gt->_field_label._field_kind)}));
				return;
			}
			goto _match_end_5143539136;
			_case_end_5143539488:;
			_match_end_5143539136:;
		}
	}
	_iter_next_5143537728:;
	(_160417_i)++;
	goto _iter_begin_5143537728;
	_iter_end_5143537728:;
}



inline void _1300a11b0_ScopeChecker::_method_check_diff_scope_goto(jule::Ref<_1300a11b0_ScopeGoto> _161744_gt,jule::Ref<_1300a11b0_ScopeLabel> _161764_label) {
	{
		if (!(((_161764_label->_field_scope->_field_child_index > 0LL) && (_161744_gt->_field_scope->_field_child_index == 0LL)))) { goto _case_end_5143552816; }
		_case_begin_5143552816:;
		{
			if ((!((*this)._method_check_label_parents(_161744_gt,_161764_label)))) {
				return;
			}
		}
		goto _match_end_5143552560;
		_case_end_5143552816:;
		if (!((_161764_label->_field_scope->_field_child_index < _161744_gt->_field_scope->_field_child_index))) { goto _case_end_5143552928; }
		_case_begin_5143552928:;
		{
			return;
		}
		goto _match_end_5143552560;
		_case_end_5143552928:;
		_match_end_5143552560:;
	}
	jule::Ref<_1300a11b0_ScopeChecker> _162817_scope = _161764_label->_field_scope;
	jule::Int _162917_i = _161764_label->_field_pos - 1LL;
	_iter_begin_5143559840:;
	if (!(_162917_i >= 0LL)) { goto _iter_end_5143559840; }
	{
		jule::Any _163117_s = _162817_scope->_field_scope->_field_stmts._method_at(_162917_i);
		{
			auto &_match_expr{ _163117_s };
			if (!(_match_expr.type_is<jule::Ref<_1300a11b0_Scope>>())) { goto _case_end_5143565040; }
			_case_begin_5143565040:;
			{
				if (_162917_i <= _161744_gt->_field_pos) {
					return;
				}
			}
			goto _match_end_5143563936;
			_case_end_5143565040:;
			_match_end_5143563936:;
		}
		if (_1300a11b0_st_is_def(_163117_s)) {
			(*this)._field_s->_method_push_err(_161744_gt->_field_gt->_field_token,jule::Str("goto_jumps_declarations", 23),jule::Slice<jule::Any>({jule::Any(_161744_gt->_field_gt->_field_label._field_kind)}));
			goto _iter_end_5143559840;
		}
	}
	_iter_next_5143559840:;
	(_162917_i)--;
	goto _iter_begin_5143559840;
	_iter_end_5143559840:;
	if (jule::real(_162817_scope->_field_parent) && ((_162817_scope->_field_parent).alloc != (_161744_gt->_field_scope).alloc)) {
		(*this)._method_check_label_parents(_161744_gt,_161764_label);
	} else {
		(*this)._method_check_goto_scope(_161744_gt,_161764_label);
	}
}



inline void _1300a11b0_ScopeChecker::_method_check_goto(jule::Ref<_1300a11b0_ScopeGoto> _165333_gt,jule::Ref<_1300a11b0_ScopeLabel> _165353_label) {
	{
		if (!(((_165333_gt->_field_scope).alloc == (_165353_label->_field_scope).alloc))) { goto _case_end_5143579344; }
		_case_begin_5143579344:;
		{
			(*this)._method_check_same_scope_goto(_165333_gt,_165353_label);
		}
		goto _match_end_5143579088;
		_case_end_5143579344:;
		if (!((_165353_label->_field_scope->_field_child_index > 0LL))) { goto _case_end_5143579456; }
		_case_begin_5143579456:;
		{
			(*this)._method_check_diff_scope_goto(_165333_gt,_165353_label);
		}
		goto _match_end_5143579088;
		_case_end_5143579456:;
		_match_end_5143579088:;
	}
}



inline void _1300a11b0_ScopeChecker::_method_check_gotos(void) {
	{
		auto &__julec_range_expr = (*this)._field_gotos.get();
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1300a11b0_ScopeGoto> _1300a11b0_gt = *__julec_range_begin;
			_iter_begin_5143586192:;
			{
				jule::Ref<_1300a11b0_ScopeLabel> _166521_label = (*this)._method_find_label_all(_1300a11b0_gt->_field_gt->_field_label._field_kind);
				if ((!(jule::real(_166521_label)))) {
					(*this)._field_s->_method_push_err(_1300a11b0_gt->_field_gt->_field_token,jule::Str("label_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_1300a11b0_gt->_field_gt->_field_label._field_kind)}));
					goto _iter_next_5143586192;
				}
				_166521_label->_field_used=true;
				(*this)._method_check_goto(_1300a11b0_gt,_166521_label);
			}
			_iter_next_5143586192:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a11b0_gt = *__julec_range_begin; goto _iter_begin_5143586192; }
			_iter_end_5143586192:;
		}
	}
}



inline void _1300a11b0_ScopeChecker::_method_check_labels(void) {
	{
		auto &__julec_range_expr = (*this)._field_labels.get();
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1300a11b0_ScopeLabel> _1300a11b0_l = *__julec_range_begin;
			_iter_begin_5143599024:;
			{
				if ((!(_1300a11b0_l->_field_used))) {
					(*this)._field_s->_method_push_err(_1300a11b0_l->_field_token,jule::Str("declared_but_not_used", 21),jule::Slice<jule::Any>({jule::Any(_1300a11b0_l->_field_label->_field_ident)}));
				}
			}
			_iter_next_5143599024:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a11b0_l = *__julec_range_begin; goto _iter_begin_5143599024; }
			_iter_end_5143599024:;
		}
	}
}



inline void _1300a11b0_ScopeChecker::_method_check_vars(void) {
	jule::Int _168517_i = 0LL;
	_iter_begin_5143600096:;
	if (!(_168517_i < (*this)._field_table->_field_vars._method_len())) { goto _iter_end_5143600096; }
	{
		jule::Ref<_1303533b0_Var> _168717_v = (*this)._field_table->_field_vars._method_at(_168517_i);
		if ((((!(_168717_v->_field_used)) && (!(_127941de0_is_ignore_ident(_168717_v->_field_ident)))) && (!(_127941de0_is_anon_ident(_168717_v->_field_ident)))) && (_168717_v->_field_ident != jule::Str("self", 4))) {
			(*this)._field_s->_method_push_err(_168717_v->_field_token,jule::Str("declared_but_not_used", 21),jule::Slice<jule::Any>({jule::Any(_168717_v->_field_ident)}));
		}
	}
	_iter_next_5143600096:;
	(_168517_i)++;
	goto _iter_begin_5143600096;
	_iter_end_5143600096:;
}



inline void _1300a11b0_ScopeChecker::_method_check_aliases(void) {
	jule::Int _169517_i = 0LL;
	_iter_begin_5143599920:;
	if (!(_169517_i < (*this)._field_table->_field_type_aliases._method_len())) { goto _iter_end_5143599920; }
	{
		jule::Ref<_1304dc9b0_TypeAlias> _169717_a = (*this)._field_table->_field_type_aliases._method_at(_169517_i);
		if (((!(_169717_a->_field_used)) && (!(_127941de0_is_ignore_ident(_169717_a->_field_ident)))) && (!(_127941de0_is_anon_ident(_169717_a->_field_ident)))) {
			(*this)._field_s->_method_push_err(_169717_a->_field_token,jule::Str("declared_but_not_used", 21),jule::Slice<jule::Any>({jule::Any(_169717_a->_field_ident)}));
		}
	}
	_iter_next_5143599920:;
	(_169517_i)++;
	goto _iter_begin_5143599920;
	_iter_end_5143599920:;
}



inline void _1300a11b0_ScopeChecker::_method_check(jule::Ref<_1275d7180_ScopeTree> _170529_tree,jule::Ref<_1300a11b0_Scope> _170551_s) {
	_170551_s->_field_deferred=_170529_tree->_field_deferred;
	_170551_s->_field_unsafety=_170529_tree->_field_unsafety;
	jule::I64 _170913_errors = this->self->_field_s->_field_errors.len();
	this->self->_field_tree=_170529_tree;
	this->self->_field_scope=_170551_s;
	this->self->_method_check_tree();
	if (_170913_errors == this->self->_field_s->_field_errors.len()) {
		this->self->_method_check_vars();
		this->self->_method_check_aliases();
	}
	if (this->self->_method_is_root()) {
		this->self->_method_check_gotos();
		this->self->_method_check_labels();
	}
}



inline jule::Ref<_1300a11b0_ScopeChecker> _1300a11b0_ScopeChecker::_method_new_child_checker(void) {
	jule::Ref<_1300a11b0_ScopeChecker> _172917_base = _1300a11b0_new_scope_checker_base(this->self->_field_s,jule::new_ref<_127ed52e0_FnIns>());
	_172917_base->_field_parent=this->self;
	_172917_base->_field_labels=this->self->_field_labels;
	_172917_base->_field_gotos=this->self->_field_gotos;
	_172917_base->_field_child_index=this->self->_field_child_index + 1LL;
	return _172917_base;
}







std::ostream &operator<<(std::ostream &_Stream, const _1300a11b0_ScopeChecker &_Src) {
	_Stream << "ScopeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "child_index:" << _Src._field_child_index << ", ";
	_Stream << "table:" << _Src._field_table << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "tree:" << _Src._field_tree << ", ";
	_Stream << "it:" << _Src._field_it << ", ";
	_Stream << "cse:" << _Src._field_cse << ", ";
	_Stream << "labels:" << _Src._field_labels << ", ";
	_Stream << "gotos:" << _Src._field_gotos << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1279cf930_BinopExprModel &_Src) {
	_Stream << "BinopExprModel{";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1279cf930_UnaryExprModel &_Src) {
	_Stream << "UnaryExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1279cf930_GetRefPtrExprModel &_Src) {
	_Stream << "GetRefPtrExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1279cf930_StructArgExprModel &_Src) {
	_Stream << "StructArgExprModel{";
	_Stream << "field:" << _Src._field_field << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1279cf930_StructLitExprModel &_Src) {
	_Stream << "StructLitExprModel{";
	_Stream << "strct:" << _Src._field_strct << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1279cf930_AllocStructLitExprModel &_Src) {
	_Stream << "AllocStructLitExprModel{";
	_Stream << "lit:" << _Src._field_lit;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1279cf930_CastingExprModel &_Src) {
	_Stream << "CastingExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1279cf930_FnCallExprModel &_Src) {
	_Stream << "FnCallExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "is_co:" << _Src._field_is_co << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1279cf930_SliceExprModel &_Src) {
	_Stream << "SliceExprModel{";
	_Stream << "elem_kind:" << _Src._field_elem_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1279cf930_IndexigExprModel &_Src) {
	_Stream << "IndexigExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "index:" << _Src._field_index;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1279cf930_AnonFnExprModel &_Src) {
	_Stream << "AnonFnExprModel{";
	_Stream << "func:" << _Src._field_func << ", ";
	_Stream << "global:" << _Src._field_global;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1279cf930_KeyValPairExprModel &_Src) {
	_Stream << "KeyValPairExprModel{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1279cf930_MapExprModel &_Src) {
	_Stream << "MapExprModel{";
	_Stream << "key_kind:" << _Src._field_key_kind << ", ";
	_Stream << "val_kind:" << _Src._field_val_kind << ", ";
	_Stream << "entries:" << _Src._field_entries;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1279cf930_SlicingExprModel &_Src) {
	_Stream << "SlicingExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "left:" << _Src._field_left << ", ";
	_Stream << "right:" << _Src._field_right;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1279cf930_TraitSubIdentExprModel &_Src) {
	_Stream << "TraitSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1279cf930_StructSubIdentExprModel &_Src) {
	_Stream << "StructSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "method:" << _Src._field_method << ", ";
	_Stream << "field:" << _Src._field_field;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1279cf930_StructStaticIdentExprModel &_Src) {
	_Stream << "StructStaticIdentExprModel{";
	_Stream << "structure:" << _Src._field_structure << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "method:" << _Src._field_method;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1279cf930_ArrayExprModel &_Src) {
	_Stream << "ArrayExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "elems:" << _Src._field_elems;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1279cf930_CommonIdentExprModel &_Src) {
	_Stream << "CommonIdentExprModel{";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1279cf930_CommonSubIdentExprModel &_Src) {
	_Stream << "CommonSubIdentExprModel{";
	_Stream << "expr_kind:" << _Src._field_expr_kind << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1279cf930_TupleExprModel &_Src) {
	_Stream << "TupleExprModel{";
	_Stream << "datas:" << _Src._field_datas;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1279cf930_BuiltinOutCallExprModel &_Src) {
	_Stream << "BuiltinOutCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1279cf930_BuiltinOutlnCallExprModel &_Src) {
	_Stream << "BuiltinOutlnCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1279cf930_BuiltinCloneCallExprModel &_Src) {
	_Stream << "BuiltinCloneCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1279cf930_BuiltinNewCallExprModel &_Src) {
	_Stream << "BuiltinNewCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "init:" << _Src._field_init;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1279cf930_BuiltinRealCallExprModel &_Src) {
	_Stream << "BuiltinRealCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1279cf930_BuiltinDropCallExprModel &_Src) {
	_Stream << "BuiltinDropCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1279cf930_BuiltinPanicCallExprModel &_Src) {
	_Stream << "BuiltinPanicCallExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1279cf930_BuiltinMakeCallExprModel &_Src) {
	_Stream << "BuiltinMakeCallExprModel{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "len:" << _Src._field_len << ", ";
	_Stream << "cap:" << _Src._field_cap;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1279cf930_BuiltinErrorTraitSubIdentExprModel &_Src) {
	_Stream << "BuiltinErrorTraitSubIdentExprModel{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1279cf930_SizeofExprModel &_Src) {
	_Stream << "SizeofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1279cf930_AlignofExprModel &_Src) {
	_Stream << "AlignofExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1279cf930_RuneExprModel &_Src) {
	_Stream << "RuneExprModel{";
	_Stream << "code:" << _Src._field_code;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1279cf930_ExplicitDerefExprModel &_Src) {
	_Stream << "ExplicitDerefExprModel{";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1300a4650_ImportInfo> _1300a4650_Package::_method_find_package(jule::Str ) {
	return jule::new_ref<_1300a4650_ImportInfo>();
}



inline jule::Ref<_1300a4650_ImportInfo> _1300a4650_Package::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1300a4650_ImportInfo>)> ) {
	return jule::new_ref<_1300a4650_ImportInfo>();
}



inline jule::Ref<_1303533b0_Var> _1300a4650_Package::_method_find_var(jule::Str _26327_ident,jule::Bool _26339_cpp_linked) {
	return _1300a4650_find_var_in_package((*this)._field_files,_26327_ident,_26339_cpp_linked);
}



inline jule::Ref<_1304dc9b0_TypeAlias> _1300a4650_Package::_method_find_type_alias(jule::Str _26934_ident,jule::Bool _26946_cpp_linked) {
	return _1300a4650_find_type_alias_in_package((*this)._field_files,_26934_ident,_26946_cpp_linked);
}



inline jule::Ref<_127b2e960_Struct> _1300a4650_Package::_method_find_struct(jule::Str _27530_ident,jule::Bool _27542_cpp_linked) {
	return _1300a4650_find_struct_in_package((*this)._field_files,_27530_ident,_27542_cpp_linked);
}



inline jule::Ref<_127ed52e0_Fn> _1300a4650_Package::_method_find_fn(jule::Str _28126_ident,jule::Bool _28138_cpp_linked) {
	return _1300a4650_find_fn_in_package((*this)._field_files,_28126_ident,_28138_cpp_linked);
}



inline jule::Ref<_130099320_Trait> _1300a4650_Package::_method_find_trait(jule::Str _28729_ident) {
	return _1300a4650_find_trait_in_package((*this)._field_files,_28729_ident);
}



inline jule::Ref<_13009ed30_Enum> _1300a4650_Package::_method_find_enum(jule::Str _29328_ident) {
	return _1300a4650_find_enum_in_package((*this)._field_files,_29328_ident);
}







std::ostream &operator<<(std::ostream &_Stream, const _1300a4650_Package &_Src) {
	_Stream << "Package{";
	_Stream << "files:" << _Src._field_files;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1300a4650_ImportInfo> _1300a20d0_Sema::_method_find_package(jule::Str _29231_ident) {
	return (*this)._field_file->_method_find_package(_29231_ident);
}



inline jule::Ref<_1300a4650_ImportInfo> _1300a20d0_Sema::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1300a4650_ImportInfo>)> _30233_selector) {
	return (*this)._field_file->_method_select_package(_30233_selector);
}



inline jule::Ref<_1303533b0_Var> _1300a20d0_Sema::_method_find_var(jule::Str _31227_ident,jule::Bool _31239_cpp_linked) {
	jule::Ref<_1303533b0_Var> _31417_v = _1300a4650_find_var_in_package((*this)._field_files,_31227_ident,_31239_cpp_linked);
	if (jule::real(_31417_v)) {
		return _31417_v;
	}
	jule::Int _32017_i = 0LL;
	_iter_begin_5143750512:;
	if (!(_32017_i < (*this)._field_file->_field_imports._method_len())) { goto _iter_end_5143750512; }
	{
		jule::Ref<_1300a4650_ImportInfo> _32221_imp = (*this)._field_file->_field_imports._method_at(_32017_i);
		if ((!(_1300a20d0_imp_is_lookupable(_32221_imp,_31227_ident)))) {
			goto _iter_next_5143750512;
		}
		jule::Ref<_1303533b0_Var> _32621_v = _32221_imp->_method_find_var(_31227_ident,_31239_cpp_linked);
		if (jule::real(_32621_v) && (*this)._method_is_accessible_define(_32621_v->_field_public,_32621_v->_field_token)) {
			return _32621_v;
		}
	}
	_iter_next_5143750512:;
	(_32017_i)++;
	goto _iter_begin_5143750512;
	_iter_end_5143750512:;
	return jule::new_ref<_1303533b0_Var>();
}



inline jule::Ref<_1304dc9b0_TypeAlias> _1300a20d0_Sema::_method_find_type_alias(jule::Str _34134_ident,jule::Bool _34146_cpp_linked) {
	jule::Ref<_1304dc9b0_TypeAlias> _34317_ta = _1300a4650_find_type_alias_in_package((*this)._field_files,_34134_ident,_34146_cpp_linked);
	if (jule::real(_34317_ta)) {
		return _34317_ta;
	}
	jule::Int _34917_i = 0LL;
	_iter_begin_5143770080:;
	if (!(_34917_i < (*this)._field_file->_field_imports._method_len())) { goto _iter_end_5143770080; }
	{
		jule::Ref<_1300a4650_ImportInfo> _35121_imp = (*this)._field_file->_field_imports._method_at(_34917_i);
		if ((!(_1300a20d0_imp_is_lookupable(_35121_imp,_34134_ident)))) {
			goto _iter_next_5143770080;
		}
		jule::Ref<_1304dc9b0_TypeAlias> _35521_ta = _35121_imp->_method_find_type_alias(_34134_ident,_34146_cpp_linked);
		if (jule::real(_35521_ta) && (*this)._method_is_accessible_define(_35521_ta->_field_public,_35521_ta->_field_token)) {
			return _35521_ta;
		}
	}
	_iter_next_5143770080:;
	(_34917_i)++;
	goto _iter_begin_5143770080;
	_iter_end_5143770080:;
	return jule::new_ref<_1304dc9b0_TypeAlias>();
}



inline jule::Ref<_127b2e960_Struct> _1300a20d0_Sema::_method_find_struct(jule::Str _37030_ident,jule::Bool _37042_cpp_linked) {
	jule::Ref<_127b2e960_Struct> _37217_strct = _1300a4650_find_struct_in_package((*this)._field_files,_37030_ident,_37042_cpp_linked);
	if (jule::real(_37217_strct)) {
		return _37217_strct;
	}
	jule::Int _37817_i = 0LL;
	_iter_begin_5143784992:;
	if (!(_37817_i < (*this)._field_file->_field_imports._method_len())) { goto _iter_end_5143784992; }
	{
		jule::Ref<_1300a4650_ImportInfo> _38021_imp = (*this)._field_file->_field_imports._method_at(_37817_i);
		if ((!(_1300a20d0_imp_is_lookupable(_38021_imp,_37030_ident)))) {
			goto _iter_next_5143784992;
		}
		jule::Ref<_127b2e960_Struct> _38421_strct = _38021_imp->_method_find_struct(_37030_ident,_37042_cpp_linked);
		if (jule::real(_38421_strct) && (*this)._method_is_accessible_define(_38421_strct->_field_public,_38421_strct->_field_token)) {
			return _38421_strct;
		}
	}
	_iter_next_5143784992:;
	(_37817_i)++;
	goto _iter_begin_5143784992;
	_iter_end_5143784992:;
	return jule::new_ref<_127b2e960_Struct>();
}



inline jule::Ref<_127ed52e0_Fn> _1300a20d0_Sema::_method_find_fn(jule::Str _39926_ident,jule::Bool _39938_cpp_linked) {
	jule::Ref<_127ed52e0_Fn> _40117_f = _1300a4650_find_fn_in_package((*this)._field_files,_39926_ident,_39938_cpp_linked);
	if (jule::real(_40117_f)) {
		return _40117_f;
	}
	jule::Int _40717_i = 0LL;
	_iter_begin_5143801488:;
	if (!(_40717_i < (*this)._field_file->_field_imports._method_len())) { goto _iter_end_5143801488; }
	{
		jule::Ref<_1300a4650_ImportInfo> _40921_imp = (*this)._field_file->_field_imports._method_at(_40717_i);
		if ((!(_1300a20d0_imp_is_lookupable(_40921_imp,_39926_ident)))) {
			goto _iter_next_5143801488;
		}
		jule::Ref<_127ed52e0_Fn> _41321_f = _40921_imp->_method_find_fn(_39926_ident,_39938_cpp_linked);
		if (jule::real(_41321_f) && (*this)._method_is_accessible_define(_41321_f->_field_public,_41321_f->_field_token)) {
			return _41321_f;
		}
	}
	_iter_next_5143801488:;
	(_40717_i)++;
	goto _iter_begin_5143801488;
	_iter_end_5143801488:;
	return jule::new_ref<_127ed52e0_Fn>();
}



inline jule::Ref<_130099320_Trait> _1300a20d0_Sema::_method_find_trait(jule::Str _42829_ident) {
	jule::Ref<_130099320_Trait> _43017_t = _1300a4650_find_trait_in_package((*this)._field_files,_42829_ident);
	if (jule::real(_43017_t)) {
		return _43017_t;
	}
	jule::Int _43617_i = 0LL;
	_iter_begin_5143817968:;
	if (!(_43617_i < (*this)._field_file->_field_imports._method_len())) { goto _iter_end_5143817968; }
	{
		jule::Ref<_1300a4650_ImportInfo> _43821_imp = (*this)._field_file->_field_imports._method_at(_43617_i);
		if ((!(_1300a20d0_imp_is_lookupable(_43821_imp,_42829_ident)))) {
			goto _iter_next_5143817968;
		}
		jule::Ref<_130099320_Trait> _44221_t = _43821_imp->_method_find_trait(_42829_ident);
		if (jule::real(_44221_t) && (*this)._method_is_accessible_define(_44221_t->_field_public,_44221_t->_field_token)) {
			return _44221_t;
		}
	}
	_iter_next_5143817968:;
	(_43617_i)++;
	goto _iter_begin_5143817968;
	_iter_end_5143817968:;
	return jule::new_ref<_130099320_Trait>();
}



inline jule::Ref<_13009ed30_Enum> _1300a20d0_Sema::_method_find_enum(jule::Str _45728_ident) {
	jule::Ref<_13009ed30_Enum> _45917_e = _1300a4650_find_enum_in_package((*this)._field_files,_45728_ident);
	if (jule::real(_45917_e)) {
		return _45917_e;
	}
	jule::Int _46517_i = 0LL;
	_iter_begin_5143833568:;
	if (!(_46517_i < (*this)._field_file->_field_imports._method_len())) { goto _iter_end_5143833568; }
	{
		jule::Ref<_1300a4650_ImportInfo> _46721_imp = (*this)._field_file->_field_imports._method_at(_46517_i);
		if ((!(_1300a20d0_imp_is_lookupable(_46721_imp,_45728_ident)))) {
			goto _iter_next_5143833568;
		}
		jule::Ref<_13009ed30_Enum> _47121_e = _46721_imp->_method_find_enum(_45728_ident);
		if (jule::real(_47121_e) && (*this)._method_is_accessible_define(_47121_e->_field_public,_47121_e->_field_token)) {
			return _47121_e;
		}
	}
	_iter_next_5143833568:;
	(_46517_i)++;
	goto _iter_begin_5143833568;
	_iter_end_5143833568:;
	return jule::new_ref<_13009ed30_Enum>();
}



inline void _1300a20d0_Sema::_method_set_current_file(jule::Ref<_13032dc50_SymbolTable> _48239_f) {
	(*this)._field_file=_48239_f;
}



inline void _1300a20d0_Sema::_method_push_err(_127941de0_Token _48427_token,jule::Str _48441_key,jule::Slice<jule::Any> _48451_args) {
	(*this)._field_errors=append((*this)._field_errors,jule::Slice<_136e99d00_Log>({_1300a20d0_compiler_err(_48427_token,_48441_key,_48451_args)}));
}



inline jule::Bool _1300a20d0_Sema::_method_is_accessible_define(jule::Bool _48935_public,_127941de0_Token _48949_token) {
	return (_48935_public || (!(jule::real(_48949_token._field_file)))) || ((*this)._field_file->_field_file->_method_dir() == _48949_token._field_file->_method_dir());
}



inline jule::Bool _1300a20d0_Sema::_method_is_duplicated_ident(jule::Uintptr _49634_itself,jule::Str _49651_ident,jule::Bool _49663_cpp_linked) {
	{
		auto &__julec_range_expr = (*this)._field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13032dc50_SymbolTable> _1300a20d0_f = *__julec_range_begin;
			_iter_begin_5143864320:;
			{
				if (_1300a20d0_f->_method_is_duplicated_ident(_49634_itself,_49651_ident,_49663_cpp_linked)) {
					return true;
				}
				jule::Int _50221_i = 0LL;
				_iter_begin_5143870080:;
				if (!(_50221_i < _1300a20d0_f->_field_imports._method_len())) { goto _iter_end_5143870080; }
				{
					jule::Ref<_1300a4650_ImportInfo> _50421_imp = (&(_1300a20d0_f->_field_imports))->_method_at(_50221_i);
					{
						auto &__julec_range_expr = _50421_imp->_field_selected;
						if (__julec_range_expr.begin() != __julec_range_expr.end()) {
							auto __julec_range_begin = __julec_range_expr.begin();
							const auto __julec_range_end = __julec_range_expr.end();
							_127941de0_Token _1300a20d0_selected = *__julec_range_begin;
							_iter_begin_5143873136:;
							{
								if (_1300a20d0_selected._field_kind == _49651_ident) {
									return true;
								}
							}
							_iter_next_5143873136:;
							++__julec_range_begin;
							if (__julec_range_begin != __julec_range_end) { _1300a20d0_selected = *__julec_range_begin; goto _iter_begin_5143873136; }
							_iter_end_5143873136:;
						}
					}
				}
				_iter_next_5143870080:;
				(_50221_i)++;
				goto _iter_begin_5143870080;
				_iter_end_5143870080:;
			}
			_iter_next_5143864320:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a20d0_f = *__julec_range_begin; goto _iter_begin_5143864320; }
			_iter_end_5143864320:;
		}
	}
	return false;
}



inline jule::Bool _1300a20d0_Sema::_method_check_generic_quantity(jule::Int _51541_required,jule::Int _51556_given,_127941de0_Token _51568_error_token) {
	jule::Bool _51590_ok = jule::Bool();
	{
		if (!(((_51541_required == 0LL) && (_51556_given > 0LL)))) { goto _case_end_5143881952; }
		_case_begin_5143881952:;
		{
			(*this)._method_push_err(_51568_error_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
			_51590_ok = false;
			return _51590_ok;
		}
		goto _match_end_5143881376;
		_case_end_5143881952:;
		if (!(((_51541_required > 0LL) && (_51556_given == 0LL)))) { goto _case_end_5143882064; }
		_case_begin_5143882064:;
		{
			(*this)._method_push_err(_51568_error_token,jule::Str("has_generics", 12),jule::Slice<jule::Any>({}));
			_51590_ok = false;
			return _51590_ok;
		}
		goto _match_end_5143881376;
		_case_end_5143882064:;
		if (!((_51541_required < _51556_given))) { goto _case_end_5143882928; }
		_case_begin_5143882928:;
		{
			(*this)._method_push_err(_51568_error_token,jule::Str("generics_overflow", 17),jule::Slice<jule::Any>({}));
			_51590_ok = false;
			return _51590_ok;
		}
		goto _match_end_5143881376;
		_case_end_5143882928:;
		if (!((_51541_required > _51556_given))) { goto _case_end_5143883040; }
		_case_begin_5143883040:;
		{
			(*this)._method_push_err(_51568_error_token,jule::Str("missing_generics", 16),jule::Slice<jule::Any>({}));
			_51590_ok = false;
			return _51590_ok;
		}
		goto _match_end_5143881376;
		_case_end_5143883040:;
		_case_begin_5143881568:;
		{
			_51590_ok = true;
			return _51590_ok;
		}
		goto _match_end_5143881376;
		_case_end_5143881568:;
		_match_end_5143881376:;
	}
}



inline jule::Bool _1300a20d0_Sema::_method_is_duplicated_import_selection(jule::Uintptr _53845_itself,jule::Str _53862_ident) {
	jule::Int _53917_i = 0LL;
	_iter_begin_5143896848:;
	if (!(_53917_i < (*this)._field_file->_field_imports._method_len())) { goto _iter_end_5143896848; }
	{
		jule::Ref<_1300a4650_ImportInfo> _54117_imp = ((*this)._field_file).alloc->_field_imports._method_at(_53917_i);
		if (((jule::Uintptr)((_54117_imp).alloc)) == _53845_itself) {
			goto _iter_end_5143896848;
		}
		if (_54117_imp->_method_exist_ident(_53862_ident)) {
			return true;
		}
	}
	_iter_next_5143896848:;
	(_53917_i)++;
	goto _iter_begin_5143896848;
	_iter_end_5143896848:;
	return false;
}



inline void _1300a20d0_Sema::_method_check_import_selections(jule::Ref<_1300a4650_ImportInfo> _55546_imp) {
	(*this)._method_set_current_file((*this)._field_files[static_cast<jule::Int>(0LL)]);
	__JULE_DEFER({
		jule::drop((*this)._field_file);
	});
	jule::Fn<jule::Any(jule::Str)> _56013_get_def = jule::Fn<jule::Any(jule::Str)>([=](jule::Str _56026_ident) mutable -> jule::Any {
		if (_130b8f5f0_find_package_builtin_def(_55546_imp->_field_link_path,_56026_ident) != nullptr) {
			return true;
		}
		{
			auto &__julec_range_expr = _55546_imp->_field_package->_field_files;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_13032dc50_SymbolTable> _1300a20d0_f = *__julec_range_begin;
				_iter_begin_5143916864:;
				{
					
					jule::Any _56725_def = _1300a20d0_f->_method_def_by_ident(_56026_ident,false);
					if (_56725_def != nullptr) {
						return _56725_def;
					}
				}
				_iter_next_5143916864:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _1300a20d0_f = *__julec_range_begin; goto _iter_begin_5143916864; }
				_iter_end_5143916864:;
			}
		}
		return nullptr;
	});
	{
		auto &__julec_range_expr = _55546_imp->_field_selected;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_127941de0_Token _1300a20d0_ident = *__julec_range_begin;
			_iter_begin_5143923584:;
			{
				if (_1300a20d0_ident._field_kind == jule::Str("self", 4)) {
					goto _iter_next_5143923584;
				}
				if ((*this)._method_is_duplicated_import_selection(((jule::Uintptr)((_55546_imp).alloc)),_1300a20d0_ident._field_kind)) {
					(*this)._method_push_err(_1300a20d0_ident,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_1300a20d0_ident._field_kind)}));
					goto _iter_next_5143923584;
				}
				jule::Any _58621_def = _56013_get_def(_1300a20d0_ident._field_kind);
				{
					auto &_match_expr{ _58621_def };
					if (!(_match_expr.type_is<jule::Bool>())) { goto _case_end_5143932944; }
					_case_begin_5143932944:;
					{
						goto _iter_next_5143923584;
					}
					goto _match_end_5143931072;
					_case_end_5143932944:;
					if (!(_match_expr.type_is<jule::Ref<_1303533b0_Var>>())) { goto _case_end_5143932144; }
					_case_begin_5143932144:;
					{
						jule::Ref<_1303533b0_Var> _59325_v = _58621_def.operator jule::Ref<_1303533b0_Var>();
						if ((*this)._method_is_accessible_define(_59325_v->_field_public,_59325_v->_field_token)) {
							goto _iter_next_5143923584;
						}
					}
					goto _match_end_5143931072;
					_case_end_5143932144:;
					if (!(_match_expr.type_is<jule::Ref<_1304dc9b0_TypeAlias>>())) { goto _case_end_5143932256; }
					_case_begin_5143932256:;
					{
						jule::Ref<_1304dc9b0_TypeAlias> _59925_ta = _58621_def.operator jule::Ref<_1304dc9b0_TypeAlias>();
						if ((*this)._method_is_accessible_define(_59925_ta->_field_public,_59925_ta->_field_token)) {
							goto _iter_next_5143923584;
						}
					}
					goto _match_end_5143931072;
					_case_end_5143932256:;
					if (!(_match_expr.type_is<jule::Ref<_127b2e960_Struct>>())) { goto _case_end_5143932368; }
					_case_begin_5143932368:;
					{
						jule::Ref<_127b2e960_Struct> _60525_strct = _58621_def.operator jule::Ref<_127b2e960_Struct>();
						if ((*this)._method_is_accessible_define(_60525_strct->_field_public,_60525_strct->_field_token)) {
							goto _iter_next_5143923584;
						}
					}
					goto _match_end_5143931072;
					_case_end_5143932368:;
					if (!(_match_expr.type_is<jule::Ref<_130099320_Trait>>())) { goto _case_end_5143935072; }
					_case_begin_5143935072:;
					{
						jule::Ref<_130099320_Trait> _61125_t = _58621_def.operator jule::Ref<_130099320_Trait>();
						if ((*this)._method_is_accessible_define(_61125_t->_field_public,_61125_t->_field_token)) {
							goto _iter_next_5143923584;
						}
					}
					goto _match_end_5143931072;
					_case_end_5143935072:;
					if (!(_match_expr.type_is<jule::Ref<_13009ed30_Enum>>())) { goto _case_end_5143935184; }
					_case_begin_5143935184:;
					{
						jule::Ref<_13009ed30_Enum> _61725_e = _58621_def.operator jule::Ref<_13009ed30_Enum>();
						if ((*this)._method_is_accessible_define(_61725_e->_field_public,_61725_e->_field_token)) {
							goto _iter_next_5143923584;
						}
					}
					goto _match_end_5143931072;
					_case_end_5143935184:;
					if (!(_match_expr.type_is<jule::Ref<_127ed52e0_Fn>>())) { goto _case_end_5143935296; }
					_case_begin_5143935296:;
					{
						jule::Ref<_127ed52e0_Fn> _62325_f = _58621_def.operator jule::Ref<_127ed52e0_Fn>();
						if ((*this)._method_is_accessible_define(_62325_f->_field_public,_62325_f->_field_token)) {
							goto _iter_next_5143923584;
						}
					}
					goto _match_end_5143931072;
					_case_end_5143935296:;
					_case_begin_5143931632:;
					{
						(*this)._method_push_err(_1300a20d0_ident,jule::Str("ident_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_1300a20d0_ident._field_kind)}));
						goto _iter_next_5143923584;
					}
					goto _match_end_5143931072;
					_case_end_5143931632:;
					_match_end_5143931072:;
				}
				(*this)._method_push_err(_1300a20d0_ident,jule::Str("ident_is_not_accessible", 23),jule::Slice<jule::Any>({jule::Any(_1300a20d0_ident._field_kind)}));
			}
			_iter_next_5143923584:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a20d0_ident = *__julec_range_begin; goto _iter_begin_5143923584; }
			_iter_end_5143923584:;
		}
	}
}



inline jule::Bool _1300a20d0_Sema::_method_check_import(jule::Ref<_1300a4650_ImportInfo> _63835_imp) {
	if ((_63835_imp->_field_duplicate || _63835_imp->_field_cpp_linked) || (_63835_imp->_field_package->_field_files.len() == 0LL)) {
		return true;
	}
	jule::Ref<_1300a20d0_Sema> _64317_sema = jule::new_struct<_1300a20d0_Sema>(new( std::nothrow ) _1300a20d0_Sema());
	_64317_sema->_method_check(_63835_imp->_field_package->_field_files);
	if (_64317_sema->_field_errors.len() > 0LL) {
		(*this)._field_errors=append((*this)._field_errors,_64317_sema->_field_errors);
		return false;
	}
	(*this)._method_check_import_selections(_63835_imp);
	return true;
}



inline void _1300a20d0_Sema::_method_check_imports(void) {
	{
		auto &__julec_range_expr = (*this)._field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13032dc50_SymbolTable> _1300a20d0_file = *__julec_range_begin;
			_iter_begin_5143976864:;
			{
				jule::Int _65621_i = 0LL;
				_iter_begin_5143978528:;
				if (!(_65621_i < _1300a20d0_file->_field_imports._method_len())) { goto _iter_end_5143978528; }
				{
					jule::Ref<_1300a4650_ImportInfo> _65825_imp = _1300a20d0_file->_field_imports._method_at(_65621_i);
					jule::Bool _65921_ok = (*this)._method_check_import(_65825_imp);
					if ((!(_65921_ok))) {
						(*this)._method_push_err(_65825_imp->_field_token,jule::Str("used_package_has_errors", 23),jule::Slice<jule::Any>({jule::Any(_65825_imp->_field_link_path)}));
						return;
					}
				}
				_iter_next_5143978528:;
				(_65621_i)++;
				goto _iter_begin_5143978528;
				_iter_end_5143978528:;
			}
			_iter_next_5143976864:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a20d0_file = *__julec_range_begin; goto _iter_begin_5143976864; }
			_iter_end_5143976864:;
		}
	}
}



inline void _1300a20d0_Sema::_method_impl_file_impls(void) {
	jule::Int _67117_i = 0LL;
	_iter_begin_5143989392:;
	if (!(_67117_i < this->self->_field_file->_field_impls._method_len())) { goto _iter_end_5143989392; }
	{
		jule::Ref<_12791ab70_Impl> _67321_imp = this->self->_field_file->_field_impls._method_at(_67117_i);
		this->self->_method_impl_impl(_67321_imp);
	}
	_iter_next_5143989392:;
	(_67117_i)++;
	goto _iter_begin_5143989392;
	_iter_end_5143989392:;
}



inline void _1300a20d0_Sema::_method_impl_impls(void) {
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13032dc50_SymbolTable> _1300a20d0_file = *__julec_range_begin;
			_iter_begin_5143997472:;
			{
				this->self->_method_set_current_file(_1300a20d0_file);
				this->self->_method_impl_file_impls();
			}
			_iter_next_5143997472:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a20d0_file = *__julec_range_begin; goto _iter_begin_5143997472; }
			_iter_end_5143997472:;
		}
	}
}



inline void _1300a20d0_Sema::_method_check_enums(void) {
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13032dc50_SymbolTable> _1300a20d0_file = *__julec_range_begin;
			_iter_begin_5144002400:;
			{
				this->self->_method_set_current_file(_1300a20d0_file);
				this->self->_method_check_enum_decls();
			}
			_iter_next_5144002400:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a20d0_file = *__julec_range_begin; goto _iter_begin_5144002400; }
			_iter_end_5144002400:;
		}
	}
}



inline jule::Bool _1300a20d0_Sema::_method_check_type_with_refers(jule::Ref<_1304dc9b0_TypeSymbol> _69446_t,jule::Trait<_1304dc360_Lookup> _69462_l,jule::Ref<_1304dc9b0_Referencer> _69473_referencer) {
	jule::Bool _694100_ok = jule::Bool();
	if (_69446_t->_method_checked()) {
		_694100_ok = true;
		return _694100_ok;
	}
	_1304dc9b0_TypeChecker _69817_tc = _1304dc9b0_TypeChecker(this->self,_69462_l,_69473_referencer,_127941de0_Token(),jule::Slice<jule::Ref<_1275d7180_GenericDecl>>(),jule::Slice<jule::Ref<_1304dc9b0_TypeAlias>>(),jule::Bool());
	_69817_tc._method_check(_69446_t);
	_694100_ok = _69446_t->_method_checked();
	return _694100_ok;
}



inline jule::Bool _1300a20d0_Sema::_method_check_type(jule::Ref<_1304dc9b0_TypeSymbol> _70934_t,jule::Trait<_1304dc360_Lookup> _70950_l) {
	jule::Bool _70963_ok = jule::Bool();
	_70963_ok = this->self->_method_check_type_with_refers(_70934_t,_70950_l,jule::new_ref<_1304dc9b0_Referencer>());
	return _70963_ok;
}



inline jule::Ref<_1304dc9b0_TypeKind> _1300a20d0_Sema::_method_build_type_with_generics(jule::Ref<_1275d7180_TypeDecl> _71548_t,jule::Slice<jule::Ref<_1304dc9b0_TypeAlias>> _71562_generics) {
	jule::Ref<_1304dc9b0_TypeChecker> _71617_tc = jule::new_struct<_1304dc9b0_TypeChecker>(new( std::nothrow ) _1304dc9b0_TypeChecker(this->self,this->self,jule::Ref<_1304dc9b0_Referencer>(),_127941de0_Token(),jule::Slice<jule::Ref<_1275d7180_GenericDecl>>(),_71562_generics,jule::Bool()));
	return _71617_tc->_method_check_decl(_71548_t);
}



inline jule::Ref<_1304dc9b0_TypeKind> _1300a20d0_Sema::_method_build_type(jule::Ref<_1275d7180_TypeDecl> _72534_t) {
	return this->self->_method_build_type_with_generics(_72534_t,nullptr);
}



inline jule::Ref<_13064b610_Data> _1300a20d0_Sema::_method_evalpd(jule::Ref<_1275d7180_Expr> _73130_expr,jule::Trait<_1304dc360_Lookup> _73147_l,jule::Ref<_1304dc9b0_TypeKind> _73162_p,jule::Ref<_1303533b0_Var> _73176_owner) {
	jule::Ref<_13064b610_Eval> _73217_e = jule::new_struct<_13064b610_Eval>(new( std::nothrow ) _13064b610_Eval(this->self,_73147_l,jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),_73176_owner));
	{
		auto &_match_expr{ _73147_l };
		if (!(_match_expr.type_is<jule::Ref<_1300a11b0_ScopeChecker>>())) { goto _case_end_5144056864; }
		_case_begin_5144056864:;
		{
			_73217_e->_field_unsafety=_73147_l.operator jule::Ref<_1300a11b0_ScopeChecker>()->_method_is_unsafe();
		}
		goto _match_end_5144050720;
		_case_end_5144056864:;
		_match_end_5144050720:;
	}
	_73217_e->_field_prefix=_73162_p;
	return _73217_e->_method_eval_expr(_73130_expr);
}



inline jule::Ref<_13064b610_Data> _1300a20d0_Sema::_method_evalp(jule::Ref<_1275d7180_Expr> _74929_expr,jule::Trait<_1304dc360_Lookup> _74946_l,jule::Ref<_1304dc9b0_TypeKind> _74961_p) {
	return this->self->_method_evalpd(_74929_expr,_74946_l,_74961_p,jule::new_ref<_1303533b0_Var>());
}



inline jule::Ref<_13064b610_Data> _1300a20d0_Sema::_method_eval(jule::Ref<_1275d7180_Expr> _75428_expr,jule::Trait<_1304dc360_Lookup> _75445_l) {
	return this->self->_method_evalp(_75428_expr,_75445_l,jule::new_ref<_1304dc9b0_TypeKind>());
}



inline void _1300a20d0_Sema::_method_check_assign_type(jule::Ref<_1304dc9b0_TypeKind> _75841_dest,jule::Ref<_13064b610_Data> _75862_d,_127941de0_Token _75872_error_token,jule::Bool _75892_deref) {
	jule::Ref<_13032cf90_AssignTypeChecker> _75917_atc = jule::new_struct<_13032cf90_AssignTypeChecker>(new( std::nothrow ) _13032cf90_AssignTypeChecker(this->self,_75841_dest,_75862_d,_75872_error_token,_75892_deref));
	jule::Bool _76613_ok = _75917_atc->_method_check();
	if ((!(_76613_ok))) {
		return;
	}
	if ((!(_75862_d->_method_is_const())) || (!(jule::real(_75841_dest->_method_prim())))) {
		return;
	}
	jule::Str _77517_kind = _75841_dest->_method_prim()->_field_kind;
	{
		if (!((_130d7f700_is_sig_int(_77517_kind)))) { goto _case_end_5144080848; }
		_case_begin_5144080848:;
		{
			_75862_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_75862_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_5144080624;
		_case_end_5144080848:;
		if (!((_130d7f700_is_unsig_int(_77517_kind)))) { goto _case_end_5144080960; }
		_case_begin_5144080960:;
		{
			_75862_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_75862_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_5144080624;
		_case_end_5144080960:;
		if (!((_130d7f700_is_float(_77517_kind)))) { goto _case_end_5144081072; }
		_case_begin_5144081072:;
		{
			_75862_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_75862_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_5144080624;
		_case_end_5144081072:;
		_match_end_5144080624:;
	}
}



inline jule::Bool _1300a20d0_Sema::_method_check_type_compatibility(jule::Ref<_1304dc9b0_TypeKind> _78948_dest,jule::Ref<_1304dc9b0_TypeKind> _79013_src,_127941de0_Token _79029_error_token,jule::Bool _79049_deref) {
	jule::Str _79113_dest_kind = _78948_dest->_method_to_str();
	if ((!(jule::real(_79013_src)))) {
		this->self->_method_push_err(_79029_error_token,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any(_79113_dest_kind),jule::Any(jule::Str("<untyped>", 9))}));
		return false;
	}
	jule::Str _79613_src_kind = _79013_src->_method_to_str();
	if (jule::real(_79013_src->_method_tup())) {
		this->self->_method_push_err(_79029_error_token,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any(_79113_dest_kind),jule::Any(_79613_src_kind)}));
		return false;
	}
	if (jule::real(_78948_dest->_method_prim()) && _78948_dest->_method_prim()->_method_is_any()) {
		return false;
	}
	jule::Ref<_13032cf90_TypeCompatibilityChecker> _80817_tcc = jule::new_struct<_13032cf90_TypeCompatibilityChecker>(new( std::nothrow ) _13032cf90_TypeCompatibilityChecker(this->self,_78948_dest,_79013_src,_79029_error_token,_79049_deref,jule::Bool()));
	jule::Bool _81513_ok = _80817_tcc->_method_check();
	{
		if (!((_81513_ok))) { goto _case_end_5144122400; }
		_case_begin_5144122400:;
		{
			return true;
		}
		goto _match_end_5144117904;
		_case_end_5144122400:;
		if (!((_79113_dest_kind == _79613_src_kind))) { goto _case_end_5144122512; }
		_case_begin_5144122512:;
		{
			return true;
		}
		goto _match_end_5144117904;
		_case_end_5144122512:;
		_case_begin_5144096128:;
		{
			this->self->_method_push_err(_79029_error_token,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any(_79113_dest_kind),jule::Any(_79613_src_kind)}));
			return false;
		}
		goto _match_end_5144117904;
		_case_end_5144096128:;
		_match_end_5144117904:;
	}
}



inline jule::Ref<_1304dc9b0_TypeKind> _1300a20d0_Sema::_method_build_non_generic_type_kind(jule::Ref<_1275d7180_TypeDecl> _83651_ast,jule::Slice<jule::Ref<_1275d7180_GenericDecl>> _83667_generics) {
	jule::Ref<_1304dc9b0_TypeChecker> _83717_tc = jule::new_struct<_1304dc9b0_TypeChecker>(new( std::nothrow ) _1304dc9b0_TypeChecker(this->self,this->self,jule::Ref<_1304dc9b0_Referencer>(),_127941de0_Token(),_83667_generics,jule::Slice<jule::Ref<_1304dc9b0_TypeAlias>>(),jule::Bool()));
	return _83717_tc->_method_check_decl(_83651_ast);
}



inline void _1300a20d0_Sema::_method_build_fn_non_generic_type_kinds(jule::Ref<_127ed52e0_FnIns> _84555_f) {
	jule::Slice<jule::Ref<_1275d7180_GenericDecl>> _84617_generics = nullptr;
	if (_84555_f->_field_decl->_method_is_method()) {
		_84617_generics=append(_84555_f->_field_decl->_field_generics,_84555_f->_field_decl->_field_owner->_field_generics);
	} else {
		_84617_generics=_84555_f->_field_decl->_field_generics;
	}
	{
		auto &__julec_range_expr = _84555_f->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127ed52e0_ParamIns> _1300a20d0_p = *__julec_range_begin;
			_iter_begin_5144135392:;
			{
				if ((!(_1300a20d0_p->_field_decl->_method_is_self()))) {
					_1300a20d0_p->_field_kind=this->self->_method_build_non_generic_type_kind(_1300a20d0_p->_field_decl->_field_kind->_field_decl,_84617_generics);
				}
			}
			_iter_next_5144135392:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a20d0_p = *__julec_range_begin; goto _iter_begin_5144135392; }
			_iter_end_5144135392:;
		}
	}
	if ((!(_84555_f->_field_decl->_method_is_void()))) {
		_84555_f->_field_result=this->self->_method_build_non_generic_type_kind(_84555_f->_field_decl->_field_result->_field_kind->_field_decl,_84617_generics);
	}
}



inline jule::Ref<_127ed52e0_FnIns> _1300a20d0_Sema::_method_get_trait_check_fn_kind(jule::Ref<_127ed52e0_Fn> _86347_f) {
	jule::Ref<_127ed52e0_FnIns> _86417_ins = _86347_f->_method_instance_force();
	this->self->_method_build_fn_non_generic_type_kinds(_86417_ins);
	return _86417_ins;
}



inline jule::Bool _1300a20d0_Sema::_method_reload_fn_ins_types(jule::Ref<_127ed52e0_FnIns> _86943_f) {
	jule::Bool _86956_ok = jule::Bool();
	if (_86943_f->_method_is_builtin() || _86943_f->_method_is_anon()) {
		_86956_ok = true;
		return _86956_ok;
	}
	jule::Ref<_1300a20d0_Sema> _87417_sema = _86943_f->_field_decl->_field_sema;
	jule::Ref<_13032dc50_SymbolTable> _87617_old = _86943_f->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_86943_f->_field_decl->_field_sema->_method_set_current_file(_87617_old);
	});
	jule::Ref<_13032dc50_SymbolTable> _87817_file = _1300a20d0_find_file(_86943_f->_field_decl->_field_sema->_field_files,_86943_f->_field_decl->_field_token._field_file);
	if (jule::real(_87817_file)) {
		_86943_f->_field_decl->_field_sema->_method_set_current_file(_87817_file);
	}
	jule::I64 _88317_size = _86943_f->_field_generics.len();
	if (jule::real(_86943_f->_field_decl) && jule::real(_86943_f->_field_decl->_field_owner)) {
		_88317_size+=static_cast<jule::I64>(_86943_f->_field_decl->_field_owner->_field_generics.len());
	}
	jule::Slice<jule::Ref<_1304dc9b0_TypeAlias>> _88817_generics = jule::Slice<jule::Ref<_1304dc9b0_TypeAlias>>::alloc(static_cast<jule::Int>(0LL),static_cast<jule::Int>(_88317_size));
	{
		auto &__julec_range_expr = _86943_f->_field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1300a20d0_i = 0;
			jule::Ref<_1304dc9b0_TypeKind> _1300a20d0_g = *__julec_range_begin;
			_iter_begin_5102762944:;
			{
				_88817_generics=append(_88817_generics,jule::Slice<jule::Ref<_1304dc9b0_TypeAlias>>({jule::new_struct<_1304dc9b0_TypeAlias>(new( std::nothrow ) _1304dc9b0_TypeAlias(jule::Ref<_1275d7180_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),_127941de0_Token(),_86943_f->_field_decl->_field_generics[static_cast<jule::Int>(_1300a20d0_i)]->_field_ident,jule::new_struct<_1304dc9b0_TypeSymbol>(new( std::nothrow ) _1304dc9b0_TypeSymbol(jule::Ref<_1275d7180_TypeDecl>(),_1300a20d0_g)),jule::Str(),jule::Slice<jule::Any>()))}));
			}
			_iter_next_5102762944:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1300a20d0_i; _1300a20d0_g = *__julec_range_begin; goto _iter_begin_5102762944; }
			_iter_end_5102762944:;
		}
	}
	if (jule::real(_86943_f->_field_decl) && jule::real(_86943_f->_field_decl->_field_owner)) {
		jule::Ref<_127b2e960_StructIns> _90021_owner = _86943_f->_field_owner;
		{
			auto &__julec_range_expr = _90021_owner->_field_generics;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Int _1300a20d0_i = 0;
				jule::Ref<_1304dc9b0_TypeKind> _1300a20d0_g = *__julec_range_begin;
				_iter_begin_5103002240:;
				{
					_88817_generics=append(_88817_generics,jule::Slice<jule::Ref<_1304dc9b0_TypeAlias>>({jule::new_struct<_1304dc9b0_TypeAlias>(new( std::nothrow ) _1304dc9b0_TypeAlias(jule::Ref<_1275d7180_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),_127941de0_Token(),_90021_owner->_field_decl->_field_generics[static_cast<jule::Int>(_1300a20d0_i)]->_field_ident,jule::new_struct<_1304dc9b0_TypeSymbol>(new( std::nothrow ) _1304dc9b0_TypeSymbol(jule::Ref<_1275d7180_TypeDecl>(),_1300a20d0_g)),jule::Str(),jule::Slice<jule::Any>()))}));
				}
				_iter_next_5103002240:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { ++_1300a20d0_i; _1300a20d0_g = *__julec_range_begin; goto _iter_begin_5103002240; }
				_iter_end_5103002240:;
			}
		}
	}
	_86956_ok=true;
	{
		auto &__julec_range_expr = _86943_f->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127ed52e0_ParamIns> _1300a20d0_p = *__julec_range_begin;
			_iter_begin_5103003840:;
			{
				if ((!(_1300a20d0_p->_field_decl->_method_is_self()))) {
					_1300a20d0_p->_field_kind=_87417_sema->_method_build_type_with_generics(_1300a20d0_p->_field_decl->_field_kind->_field_decl,_88817_generics);
					_86956_ok=jule::real(_1300a20d0_p->_field_kind) && _86956_ok;
				}
			}
			_iter_next_5103003840:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a20d0_p = *__julec_range_begin; goto _iter_begin_5103003840; }
			_iter_end_5103003840:;
		}
	}
	if ((!(_86943_f->_field_decl->_method_is_void()))) {
		_86943_f->_field_result=_87417_sema->_method_build_type_with_generics(_86943_f->_field_decl->_field_result->_field_kind->_field_decl,_88817_generics);
		_86956_ok=jule::real(_86943_f->_field_result) && _86956_ok;
	}
	if ((_87417_sema).alloc != (this->self).alloc) {
		this->self->_field_errors=append(this->self->_field_errors,_87417_sema->_field_errors);
	}
	_86956_ok = _86956_ok;
	return _86956_ok;
}



inline void _1300a20d0_Sema::_method_check_validity_for_init_expr(jule::Bool _93148_left_mut,jule::Bool _93164_left_ref,jule::Ref<_1304dc9b0_TypeKind> _9329_left_kind,jule::Ref<_13064b610_Data> _93235_d,_127941de0_Token _93245_error_token) {
	if ((_93148_left_mut && (!(_93235_d->_field_mutable))) && _1304dc9b0_is_mut(_93235_d->_field_kind)) {
		this->self->_method_push_err(_93245_error_token,jule::Str("assignment_non_mut_to_mut", 25),jule::Slice<jule::Any>({}));
	}
	if (_93164_left_ref) {
		{
			auto &_match_expr{ _93235_d->_field_model };
			if (!(_match_expr.type_is<jule::Ref<_1303533b0_Var>>() || _match_expr.type_is<jule::Ref<_1279cf930_TraitSubIdentExprModel>>() || _match_expr.type_is<jule::Ref<_1279cf930_CommonIdentExprModel>>() || _match_expr.type_is<jule::Ref<_1279cf930_StructSubIdentExprModel>>() || _match_expr.type_is<jule::Ref<_1279cf930_CommonSubIdentExprModel>>())) { goto _case_end_5103037728; }
			goto _match_end_5103035472;
			_case_end_5103037728:;
			if (!(_match_expr.type_is<jule::Ref<_1279cf930_UnaryExprModel>>())) { goto _case_end_5103037936; }
			_case_begin_5103037936:;
			{
				jule::Ref<_1279cf930_UnaryExprModel> _94621_unary = _93235_d->_field_model.operator jule::Ref<_1279cf930_UnaryExprModel>();
				if (_94621_unary->_field_op == jule::Str("*", 1)) {
					goto _match_end_5103035472;
				}
				goto _case_begin_5103036544;
			}
			goto _match_end_5103035472;
			_case_end_5103037936:;
			_case_begin_5103036544:;
			{
				this->self->_method_push_err(_93245_error_token,jule::Str("reference_assign_non_var", 24),jule::Slice<jule::Any>({}));
			}
			goto _match_end_5103035472;
			_case_end_5103036544:;
			_match_end_5103035472:;
		}
		if (_93148_left_mut && (!(_93235_d->_field_mutable))) {
			this->self->_method_push_err(_93245_error_token,jule::Str("mut_reference_points_to_immut", 29),jule::Slice<jule::Any>({}));
		}
	}
	jule::Ref<_13032cf90_AssignTypeChecker> _96217_atc = jule::new_struct<_13032cf90_AssignTypeChecker>(new( std::nothrow ) _13032cf90_AssignTypeChecker(this->self,jule::Ref<_1304dc9b0_TypeKind>(),_93235_d,_93245_error_token,jule::Bool()));
	_96217_atc->_method_check_validity();
}



inline jule::Bool _1300a20d0_Sema::_method_check_type_alias_decl_kind(jule::Ref<_1304dc9b0_TypeAlias> _97050_ta,jule::Trait<_1304dc360_Lookup> _97066_l) {
	jule::Bool _97079_ok = jule::Bool();
	jule::Ref<_13032dc50_SymbolTable> _97117_old = this->self->_field_file;
	__JULE_DEFER({
		this->self->_method_set_current_file(_97117_old);
	});
	jule::Ref<_13032dc50_SymbolTable> _97317_file = _1300a20d0_find_file(this->self->_field_files,_97050_ta->_field_token._field_file);
	if (jule::real(_97317_file)) {
		this->self->_method_set_current_file(_97317_file);
	}
	_97079_ok=this->self->_method_check_type_with_refers(_97050_ta->_field_kind,_97066_l,jule::new_struct<_1304dc9b0_Referencer>(new( std::nothrow ) _1304dc9b0_Referencer(_97050_ta->_field_ident,_97050_ta,(&(_97050_ta->_field_refers)))));
	if ((_97079_ok && jule::real(_97050_ta->_field_kind->_field_kind->_method_arr())) && _97050_ta->_field_kind->_field_kind->_method_arr()->_field_auto) {
		this->self->_method_push_err(_97050_ta->_field_kind->_field_decl->_field_token,jule::Str("array_auto_sized", 16),jule::Slice<jule::Any>({}));
		_97079_ok=false;
	}
	return _97079_ok;
}



inline void _1300a20d0_Sema::_method_check_type_alias_decl(jule::Ref<_1304dc9b0_TypeAlias> _99045_ta,jule::Trait<_1304dc360_Lookup> _99061_l) {
	if (_127941de0_is_ignore_ident(_99045_ta->_field_ident)) {
		this->self->_method_push_err(_99045_ta->_field_token,jule::Str("ignore_ident", 12),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_type_alias_decl_kind(_99045_ta,_99061_l);
}



inline void _1300a20d0_Sema::_method_check_type_alias_decl_dup(jule::Ref<_1304dc9b0_TypeAlias> _99849_ta) {
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_99849_ta).alloc)),_99849_ta->_field_ident,_99849_ta->_field_cpp_linked)) {
		this->self->_method_push_err(_99849_ta->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_99849_ta->_field_ident)}));
	}
	this->self->_method_check_type_alias_decl_kind(_99849_ta,this->self);
}



inline jule::Bool _1300a20d0_Sema::_method_check_type_alias_decls(void) {
	jule::Bool _100644_ok = jule::Bool();
	jule::Int _100717_i = 0LL;
	_iter_begin_5103086848:;
	if (!(_100717_i < this->self->_field_file->_field_type_aliases._method_len())) { goto _iter_end_5103086848; }
	{
		jule::Ref<_1304dc9b0_TypeAlias> _100921_ta = this->self->_field_file->_field_type_aliases._method_at(_100717_i);
		this->self->_method_check_type_alias_decl_dup(_100921_ta);
		if (this->self->_field_errors.len() > 0LL) {
			_100644_ok = false;
			return _100644_ok;
		}
	}
	_iter_next_5103086848:;
	(_100717_i)++;
	goto _iter_begin_5103086848;
	_iter_end_5103086848:;
	_100644_ok = true;
	return _100644_ok;
}



inline void _1300a20d0_Sema::_method_check_enum_items_dup(jule::Ref<_13009ed30_Enum> _102039_e) {
	{
		auto &__julec_range_expr = _102039_e->_field_items;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13009ed30_EnumItem> _1300a20d0_item = *__julec_range_begin;
			_iter_begin_5103097872:;
			{
				if (_127941de0_is_ignore_ident(_1300a20d0_item->_field_ident)) {
					(*this)._method_push_err(_1300a20d0_item->_field_token,jule::Str("ignore_ident", 12),jule::Slice<jule::Any>({}));
				} else {
					{
						auto &__julec_range_expr = _102039_e->_field_items;
						if (__julec_range_expr.begin() != __julec_range_expr.end()) {
							auto __julec_range_begin = __julec_range_expr.begin();
							const auto __julec_range_end = __julec_range_expr.end();
							jule::Ref<_13009ed30_EnumItem> _1300a20d0_citem = *__julec_range_begin;
							_iter_begin_5103104272:;
							{
								if (_1300a20d0_item == _1300a20d0_citem) {
									goto _iter_end_5103104272;
								} else if (_1300a20d0_item->_field_ident == _1300a20d0_citem->_field_ident) {
									(*this)._method_push_err(_1300a20d0_item->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_1300a20d0_item->_field_ident)}));
									goto _iter_end_5103104272;
								}
							}
							_iter_next_5103104272:;
							++__julec_range_begin;
							if (__julec_range_begin != __julec_range_end) { _1300a20d0_citem = *__julec_range_begin; goto _iter_begin_5103104272; }
							_iter_end_5103104272:;
						}
					}
				}
			}
			_iter_next_5103097872:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a20d0_item = *__julec_range_begin; goto _iter_begin_5103097872; }
			_iter_end_5103097872:;
		}
	}
}



inline void _1300a20d0_Sema::_method_check_enum_items_str(jule::Ref<_13009ed30_Enum> _103744_e) {
	{
		auto &__julec_range_expr = _103744_e->_field_items;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13009ed30_EnumItem> _1300a20d0_item = *__julec_range_begin;
			_iter_begin_5103099664:;
			{
				if (_1300a20d0_item->_method_auto_expr()) {
					_1300a20d0_item->_field_value=jule::new_struct<_13064b610_Value>(new( std::nothrow ) _13064b610_Value(jule::Ref<_1275d7180_Expr>(),jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::Ref<_1304dc9b0_TypeKind>(),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_130c83140_new_str(_1300a20d0_item->_field_ident)))));
					_1300a20d0_item->_field_value->_field_data->_field_model=jule::Any(_1300a20d0_item->_field_value->_field_data->_field_constant);
				} else {
					jule::Ref<_13064b610_Data> _104725_d = this->self->_method_eval(_1300a20d0_item->_field_value->_field_expr,this->self);
					if ((!(jule::real(_104725_d)))) {
						goto _iter_next_5103099664;
					}
					if ((!(_104725_d->_method_is_const()))) {
						this->self->_method_push_err(_1300a20d0_item->_field_value->_field_expr->_field_token,jule::Str("expr_not_const", 14),jule::Slice<jule::Any>({}));
					}
					this->self->_method_check_assign_type(_103744_e->_field_kind->_field_kind,_104725_d,_1300a20d0_item->_field_token,false);
					_1300a20d0_item->_field_value->_field_data=_104725_d;
				}
			}
			_iter_next_5103099664:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a20d0_item = *__julec_range_begin; goto _iter_begin_5103099664; }
			_iter_end_5103099664:;
		}
	}
}



inline void _1300a20d0_Sema::_method_check_enum_items_int(jule::Ref<_13009ed30_Enum> _106244_e) {
	jule::U64 _106317_max = static_cast<jule::U64>(_130cde370_max_of(_106244_e->_field_kind->_field_kind->_method_prim()->_method_to_str()));
	{
		auto &__julec_range_expr = _106244_e->_field_items;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1300a20d0_i = 0;
			jule::Ref<_13009ed30_EnumItem> _1300a20d0_item = *__julec_range_begin;
			_iter_begin_5103135392:;
			{
				if (_106317_max == 0LL) {
					this->self->_method_push_err(_1300a20d0_item->_field_token,jule::Str("overflow_limits", 15),jule::Slice<jule::Any>({}));
				} else {
					(_106317_max)--;
				}
				if (_1300a20d0_item->_method_auto_expr()) {
					_1300a20d0_item->_field_value=jule::new_struct<_13064b610_Value>(new( std::nothrow ) _13064b610_Value(jule::Ref<_1275d7180_Expr>(),jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::Ref<_1304dc9b0_TypeKind>(),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_130c83140_new_u64(_106317_max - (_106317_max - static_cast<jule::U64>(_1300a20d0_i)))))));
					_1300a20d0_item->_field_value->_field_data->_field_model=jule::Any(_1300a20d0_item->_field_value->_field_data->_field_constant);
				} else {
					jule::Ref<_13064b610_Data> _107925_d = this->self->_method_eval(_1300a20d0_item->_field_value->_field_expr,this->self);
					if ((!(jule::real(_107925_d)))) {
						goto _iter_next_5103135392;
					}
					if ((!(_107925_d->_method_is_const()))) {
						this->self->_method_push_err(_1300a20d0_item->_field_value->_field_expr->_field_token,jule::Str("expr_not_const", 14),jule::Slice<jule::Any>({}));
					}
					this->self->_method_check_assign_type(_106244_e->_field_kind->_field_kind,_107925_d,_1300a20d0_item->_field_token,false);
					_1300a20d0_item->_field_value->_field_data=_107925_d;
				}
			}
			_iter_next_5103135392:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1300a20d0_i; _1300a20d0_item = *__julec_range_begin; goto _iter_begin_5103135392; }
			_iter_end_5103135392:;
		}
	}
}



inline void _1300a20d0_Sema::_method_check_enum_decl(jule::Ref<_13009ed30_Enum> _109439_e) {
	if (_127941de0_is_ignore_ident(_109439_e->_field_ident)) {
		this->self->_method_push_err(_109439_e->_field_token,jule::Str("ignore_ident", 12),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_109439_e).alloc)),_109439_e->_field_ident,false)) {
		this->self->_method_push_err(_109439_e->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_109439_e->_field_ident)}));
	}
	if (_109439_e->_field_items.len() == 0LL) {
		this->self->_method_push_err(_109439_e->_field_token,jule::Str("no_member_in_enum", 17),jule::Slice<jule::Any>({jule::Any(_109439_e->_field_ident)}));
	}
	this->self->_method_check_enum_items_dup(_109439_e);
	if (jule::real(_109439_e->_field_kind)) {
		if ((!(this->self->_method_check_type(_109439_e->_field_kind,this->self)))) {
			return;
		}
	} else {
		_109439_e->_field_kind=jule::new_struct<_1304dc9b0_TypeSymbol>(new( std::nothrow ) _1304dc9b0_TypeSymbol(jule::Ref<_1275d7180_TypeDecl>(),jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("int", 3))))));
	}
	jule::Ref<_1304dc9b0_Prim> _112017_t = _109439_e->_field_kind->_field_kind->_method_prim();
	if ((!(jule::real(_112017_t)))) {
		this->self->_method_push_err(_109439_e->_field_token,jule::Str("invalid_type_source", 19),jule::Slice<jule::Any>({}));
		return;
	}
	{
		if (!((_112017_t->_method_is_str()))) { goto _case_end_5103184352; }
		_case_begin_5103184352:;
		{
			this->self->_method_check_enum_items_str(_109439_e);
		}
		goto _match_end_5103180224;
		_case_end_5103184352:;
		if (!((_130d7f700_is_int(_112017_t->_method_to_str())))) { goto _case_end_5103183616; }
		_case_begin_5103183616:;
		{
			this->self->_method_check_enum_items_int(_109439_e);
		}
		goto _match_end_5103180224;
		_case_end_5103183616:;
		_case_begin_5103182880:;
		{
			this->self->_method_push_err(_109439_e->_field_token,jule::Str("invalid_type_source", 19),jule::Slice<jule::Any>({}));
		}
		goto _match_end_5103180224;
		_case_end_5103182880:;
		_match_end_5103180224:;
	}
}



inline jule::Bool _1300a20d0_Sema::_method_check_enum_decls(void) {
	jule::Bool _114038_ok = jule::Bool();
	jule::Int _114117_i = 0LL;
	_iter_begin_5103193248:;
	if (!(_114117_i < this->self->_field_file->_field_enums._method_len())) { goto _iter_end_5103193248; }
	{
		jule::Ref<_13009ed30_Enum> _114321_e = this->self->_field_file->_field_enums._method_at(_114117_i);
		this->self->_method_check_enum_decl(_114321_e);
		if (this->self->_field_errors.len() > 0LL) {
			_114038_ok = false;
			return _114038_ok;
		}
	}
	_iter_next_5103193248:;
	(_114117_i)++;
	goto _iter_begin_5103193248;
	_iter_end_5103193248:;
	_114038_ok = true;
	return _114038_ok;
}



inline jule::Bool _1300a20d0_Sema::_method_check_decl_generics(jule::Slice<jule::Ref<_1275d7180_GenericDecl>> _115438_generics) {
	jule::Bool _115466_ok = jule::Bool();
	_115466_ok=true;
	{
		auto &__julec_range_expr = _115438_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1300a20d0_i = 0;
			jule::Ref<_1275d7180_GenericDecl> _1300a20d0_g = *__julec_range_begin;
			_iter_begin_5103204912:;
			{
				if (_127941de0_is_ignore_ident(_1300a20d0_g->_field_ident)) {
					(*this)._method_push_err(_1300a20d0_g->_field_token,jule::Str("ignore_ident", 12),jule::Slice<jule::Any>({}));
					_115466_ok=false;
					goto _iter_next_5103204912;
				}
				_julec_label_duplication_lookup:;
				{
					auto &__julec_range_expr = _115438_generics;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Int _1300a20d0_j = 0;
						jule::Ref<_1275d7180_GenericDecl> _1300a20d0_ct = *__julec_range_begin;
						_iter_begin_5103211008:;
						{
							{
								if (!((_1300a20d0_j >= _1300a20d0_i))) { goto _case_end_5103213488; }
								_case_begin_5103213488:;
								{
									goto _iter_end_5103211008;
								}
								goto _match_end_5103213248;
								_case_end_5103213488:;
								if (!((_1300a20d0_g->_field_ident == _1300a20d0_ct->_field_ident))) { goto _case_end_5103213600; }
								_case_begin_5103213600:;
								{
									(*this)._method_push_err(_1300a20d0_g->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_1300a20d0_g->_field_ident)}));
									_115466_ok=false;
									goto _iter_end_5103211008;
								}
								goto _match_end_5103213248;
								_case_end_5103213600:;
								_match_end_5103213248:;
							}
						}
						_iter_next_5103211008:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { ++_1300a20d0_j; _1300a20d0_ct = *__julec_range_begin; goto _iter_begin_5103211008; }
						_iter_end_5103211008:;
					}
				}
			}
			_iter_next_5103204912:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1300a20d0_i; _1300a20d0_g = *__julec_range_begin; goto _iter_begin_5103204912; }
			_iter_end_5103204912:;
		}
	}
	return _115466_ok;
}



inline jule::Bool _1300a20d0_Sema::_method_check_fn_decl_params_dup(jule::Ref<_127ed52e0_Fn> _118143_f) {
	jule::Bool _118153_ok = jule::Bool();
	_118153_ok=true;
	_julec_label_check:;
	{
		auto &__julec_range_expr = _118143_f->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1300a20d0_i = 0;
			jule::Ref<_127ed52e0_Param> _1300a20d0_p = *__julec_range_begin;
			_iter_begin_5103223472:;
			{
				{
					auto &__julec_range_expr = _118143_f->_field_generics;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_1275d7180_GenericDecl> _1300a20d0_g = *__julec_range_begin;
						_iter_begin_5103226112:;
						{
							if (_1300a20d0_p->_field_ident == _1300a20d0_g->_field_ident) {
								_118153_ok=false;
								(*this)._method_push_err(_1300a20d0_p->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_1300a20d0_p->_field_ident)}));
								goto _iter_next_5103223472;
							}
						}
						_iter_next_5103226112:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _1300a20d0_g = *__julec_range_begin; goto _iter_begin_5103226112; }
						_iter_end_5103226112:;
					}
				}
				_julec_label_params_lookup:;
				{
					auto &__julec_range_expr = _118143_f->_field_params;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Int _1300a20d0_j = 0;
						jule::Ref<_127ed52e0_Param> _1300a20d0_jp = *__julec_range_begin;
						_iter_begin_5103226752:;
						{
							{
								if (!((_1300a20d0_j >= _1300a20d0_i))) { goto _case_end_5103234688; }
								_case_begin_5103234688:;
								{
									goto _iter_end_5103226752;
								}
								goto _match_end_5103234432;
								_case_end_5103234688:;
								if (!((_127941de0_is_anon_ident(_1300a20d0_p->_field_ident) || _127941de0_is_anon_ident(_1300a20d0_jp->_field_ident)))) { goto _case_end_5103234800; }
								_case_begin_5103234800:;
								{
									goto _iter_end_5103226752;
								}
								goto _match_end_5103234432;
								_case_end_5103234800:;
								if (!((_1300a20d0_p->_field_ident == _1300a20d0_jp->_field_ident))) { goto _case_end_5103234912; }
								_case_begin_5103234912:;
								{
									_118153_ok=false;
									(*this)._method_push_err(_1300a20d0_p->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_1300a20d0_p->_field_ident)}));
									goto _iter_next_5103223472;
								}
								goto _match_end_5103234432;
								_case_end_5103234912:;
								_match_end_5103234432:;
							}
						}
						_iter_next_5103226752:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { ++_1300a20d0_j; _1300a20d0_jp = *__julec_range_begin; goto _iter_begin_5103226752; }
						_iter_end_5103226752:;
					}
				}
			}
			_iter_next_5103223472:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1300a20d0_i; _1300a20d0_p = *__julec_range_begin; goto _iter_begin_5103223472; }
			_iter_end_5103223472:;
		}
	}
	return _118153_ok;
}



inline jule::Bool _1300a20d0_Sema::_method_check_fn_decl_result_dup(jule::Ref<_127ed52e0_Fn> _121543_f) {
	jule::Bool _121553_ok = jule::Bool();
	_121553_ok=true;
	if (_121543_f->_method_is_void()) {
		return _121553_ok;
	}
	{
		auto &__julec_range_expr = _121543_f->_field_result->_field_idents;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1300a20d0_i = 0;
			_127941de0_Token _1300a20d0_v = *__julec_range_begin;
			_iter_begin_5103248640:;
			{
				if (_127941de0_is_ignore_ident(_1300a20d0_v._field_kind)) {
					goto _iter_next_5103248640;
				}
				{
					auto &__julec_range_expr = _121543_f->_field_generics;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_1275d7180_GenericDecl> _1300a20d0_g = *__julec_range_begin;
						_iter_begin_5103252688:;
						{
							if (_1300a20d0_v._field_kind == _1300a20d0_g->_field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_5103252688:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _1300a20d0_g = *__julec_range_begin; goto _iter_begin_5103252688; }
						_iter_end_5103252688:;
					}
				}
				{
					auto &__julec_range_expr = _121543_f->_field_params;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_127ed52e0_Param> _1300a20d0_p = *__julec_range_begin;
						_iter_begin_5103256304:;
						{
							if (_1300a20d0_v._field_kind == _1300a20d0_p->_field_ident) {
								goto _julec_label_exist;
							}
						}
						_iter_next_5103256304:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _1300a20d0_p = *__julec_range_begin; goto _iter_begin_5103256304; }
						_iter_end_5103256304:;
					}
				}
				_julec_label_itself_lookup:;
				{
					auto &__julec_range_expr = _121543_f->_field_result->_field_idents;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Int _1300a20d0_j = 0;
						_127941de0_Token _1300a20d0_jv = *__julec_range_begin;
						_iter_begin_5103261536:;
						{
							{
								if (!((_1300a20d0_j >= _1300a20d0_i))) { goto _case_end_5103264176; }
								_case_begin_5103264176:;
								{
									goto _iter_end_5103261536;
								}
								goto _match_end_5103263936;
								_case_end_5103264176:;
								if (!((_1300a20d0_jv._field_kind == _1300a20d0_v._field_kind))) { goto _case_end_5103264288; }
								_case_begin_5103264288:;
								{
									goto _julec_label_exist;
								}
								goto _match_end_5103263936;
								_case_end_5103264288:;
								_match_end_5103263936:;
							}
						}
						_iter_next_5103261536:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { ++_1300a20d0_j; _1300a20d0_jv = *__julec_range_begin; goto _iter_begin_5103261536; }
						_iter_end_5103261536:;
					}
				}
				goto _iter_next_5103248640;
				_julec_label_exist:;
				(*this)._method_push_err(_1300a20d0_v,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_1300a20d0_v._field_kind)}));
				_121553_ok=false;
			}
			_iter_next_5103248640:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1300a20d0_i; _1300a20d0_v = *__julec_range_begin; goto _iter_begin_5103248640; }
			_iter_end_5103248640:;
		}
	}
	return _121553_ok;
}



inline jule::Bool _1300a20d0_Sema::_method_check_fn_decl_types(jule::Ref<_127ed52e0_Fn> _126343_f) {
	jule::Bool _126353_ok = jule::Bool();
	_126353_ok=true;
	jule::Slice<jule::Ref<_1275d7180_GenericDecl>> _126617_generics = _126343_f->_field_generics;
	if (jule::real(_126343_f->_field_owner)) {
		_126617_generics=append(_126617_generics,_126343_f->_field_owner->_field_generics);
	}
	{
		auto &__julec_range_expr = _126343_f->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127ed52e0_Param> _1300a20d0_p = *__julec_range_begin;
			_iter_begin_5103280752:;
			{
				if ((!(_1300a20d0_p->_method_is_self()))) {
					jule::Ref<_1304dc9b0_TypeKind> _127325_kind = this->self->_method_build_non_generic_type_kind(_1300a20d0_p->_field_kind->_field_decl,_126617_generics);
					_126353_ok=jule::real(_127325_kind) && _126353_ok;
					_1300a20d0_p->_field_kind->_field_kind=_127325_kind;
				}
			}
			_iter_next_5103280752:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a20d0_p = *__julec_range_begin; goto _iter_begin_5103280752; }
			_iter_end_5103280752:;
		}
	}
	if ((!(_126343_f->_method_is_void()))) {
		jule::Ref<_1304dc9b0_TypeKind> _128021_kind = this->self->_method_build_non_generic_type_kind(_126343_f->_field_result->_field_kind->_field_decl,_126617_generics);
		_126353_ok=jule::real(_128021_kind) && _126353_ok;
		_126343_f->_field_result->_field_kind->_field_kind=_128021_kind;
	}
	_126353_ok = _126353_ok;
	return _126353_ok;
}



inline jule::Bool _1300a20d0_Sema::_method_check_fn_decl_prototype(jule::Ref<_127ed52e0_Fn> _129047_f) {
	jule::Bool _129057_ok = jule::Bool();
	{
		if (!(((!(this->self->_method_check_decl_generics(_129047_f->_field_generics)))))) { goto _case_end_5103295856; }
		_case_begin_5103295856:;
		{
			_129057_ok = false;
			return _129057_ok;
		}
		goto _match_end_5103295264;
		_case_end_5103295856:;
		if (!(((!(this->self->_method_check_fn_decl_params_dup(_129047_f)))))) { goto _case_end_5103295968; }
		_case_begin_5103295968:;
		{
			_129057_ok = false;
			return _129057_ok;
		}
		goto _match_end_5103295264;
		_case_end_5103295968:;
		if (!(((!(this->self->_method_check_fn_decl_result_dup(_129047_f)))))) { goto _case_end_5103296832; }
		_case_begin_5103296832:;
		{
			_129057_ok = false;
			return _129057_ok;
		}
		goto _match_end_5103295264;
		_case_end_5103296832:;
		if (!(((!(this->self->_method_check_fn_decl_types(_129047_f)))))) { goto _case_end_5103296944; }
		_case_begin_5103296944:;
		{
			_129057_ok = false;
			return _129057_ok;
		}
		goto _match_end_5103295264;
		_case_end_5103296944:;
		_case_begin_5103295472:;
		{
			_129057_ok = true;
			return _129057_ok;
		}
		goto _match_end_5103295264;
		_case_end_5103295472:;
		_match_end_5103295264:;
	}
}



inline void _1300a20d0_Sema::_method_check_trait_decl_method(jule::Ref<_127ed52e0_Fn> _130947_f) {
	if (_127941de0_is_ignore_ident(_130947_f->_field_ident)) {
		this->self->_method_push_err(_130947_f->_field_token,jule::Str("ignore_ident", 12),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_fn_decl_prototype(_130947_f);
	_130947_f->_field_sema=this->self;
}



inline void _1300a20d0_Sema::_method_check_trait_decl_methods(jule::Ref<_130099320_Trait> _131848_t) {
	{
		auto &__julec_range_expr = _131848_t->_field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1300a20d0_i = 0;
			jule::Ref<_127ed52e0_Fn> _1300a20d0_f = *__julec_range_begin;
			_iter_begin_5103312096:;
			{
				this->self->_method_check_trait_decl_method(_1300a20d0_f);
				if (this->self->_field_errors.len() > 0LL) {
					return;
				}
				_julec_label_duplicate_lookup:;
				{
					auto &__julec_range_expr = _131848_t->_field_methods;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Int _1300a20d0_j = 0;
						jule::Ref<_127ed52e0_Fn> _1300a20d0_jf = *__julec_range_begin;
						_iter_begin_5103318688:;
						{
							{
								if (!((_1300a20d0_j >= _1300a20d0_i))) { goto _case_end_5103321264; }
								_case_begin_5103321264:;
								{
									goto _iter_end_5103318688;
								}
								goto _match_end_5103321024;
								_case_end_5103321264:;
								if (!((_1300a20d0_f->_field_ident == _1300a20d0_jf->_field_ident))) { goto _case_end_5103321376; }
								_case_begin_5103321376:;
								{
									this->self->_method_push_err(_1300a20d0_f->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_1300a20d0_f->_field_ident)}));
									goto _iter_end_5103318688;
								}
								goto _match_end_5103321024;
								_case_end_5103321376:;
								_match_end_5103321024:;
							}
						}
						_iter_next_5103318688:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { ++_1300a20d0_j; _1300a20d0_jf = *__julec_range_begin; goto _iter_begin_5103318688; }
						_iter_end_5103318688:;
					}
				}
			}
			_iter_next_5103312096:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1300a20d0_i; _1300a20d0_f = *__julec_range_begin; goto _iter_begin_5103312096; }
			_iter_end_5103312096:;
		}
	}
}



inline void _1300a20d0_Sema::_method_check_trait_decl(jule::Ref<_130099320_Trait> _134840_t) {
	if (_127941de0_is_ignore_ident(_134840_t->_field_ident)) {
		this->self->_method_push_err(_134840_t->_field_token,jule::Str("ignore_ident", 12),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_134840_t).alloc)),_134840_t->_field_ident,false)) {
		this->self->_method_push_err(_134840_t->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_134840_t->_field_ident)}));
	}
	this->self->_method_check_trait_decl_methods(_134840_t);
}



inline jule::Bool _1300a20d0_Sema::_method_check_trait_decls(void) {
	jule::Bool _135939_ok = jule::Bool();
	jule::Int _136017_i = 0LL;
	_iter_begin_5103341504:;
	if (!(_136017_i < this->self->_field_file->_field_traits._method_len())) { goto _iter_end_5103341504; }
	{
		jule::Ref<_130099320_Trait> _136221_t = this->self->_field_file->_field_traits._method_at(_136017_i);
		this->self->_method_check_trait_decl(_136221_t);
		if (this->self->_field_errors.len() > 0LL) {
			_135939_ok = false;
			return _135939_ok;
		}
	}
	_iter_next_5103341504:;
	(_136017_i)++;
	goto _iter_begin_5103341504;
	_iter_end_5103341504:;
	_135939_ok = true;
	return _135939_ok;
}



inline jule::Bool _1300a20d0_Sema::_method_check_trait_impl_methods(jule::Ref<_130099320_Trait> _137347_base,jule::Ref<_12791ab70_Impl> _137361_ipl) {
	jule::Bool _137375_ok = jule::Bool();
	_137375_ok=true;
	{
		auto &__julec_range_expr = _137361_ipl->_field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127ed52e0_Fn> _1300a20d0_f = *__julec_range_begin;
			_iter_begin_5103354976:;
			{
				if ((!(jule::real(_137347_base->_method_find_method(_1300a20d0_f->_field_ident))))) {
					(*this)._method_push_err(_1300a20d0_f->_field_token,jule::Str("trait_have_not_ident", 20),jule::Slice<jule::Any>({jule::Any(_137347_base->_field_ident),jule::Any(_1300a20d0_f->_field_ident)}));
					_137375_ok=false;
				}
			}
			_iter_next_5103354976:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a20d0_f = *__julec_range_begin; goto _iter_begin_5103354976; }
			_iter_end_5103354976:;
		}
	}
	return _137375_ok;
}



inline jule::Bool _1300a20d0_Sema::_method_impl_to_struct(jule::Ref<_127b2e960_Struct> _138438_dest,jule::Ref<_12791ab70_Impl> _138457_ipl) {
	jule::Bool _138471_ok = jule::Bool();
	_138471_ok=true;
	{
		auto &__julec_range_expr = _138457_ipl->_field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127ed52e0_Fn> _1300a20d0_f = *__julec_range_begin;
			_iter_begin_5103366560:;
			{
				if (jule::real(_138438_dest->_method_find_method(_1300a20d0_f->_field_ident,_1300a20d0_f->_field_statically)) || jule::real(_138438_dest->_method_find_field(_1300a20d0_f->_field_ident))) {
					this->self->_method_push_err(_1300a20d0_f->_field_token,jule::Str("struct_already_have_ident", 25),jule::Slice<jule::Any>({jule::Any(_138438_dest->_field_ident),jule::Any(_1300a20d0_f->_field_ident)}));
					_138471_ok=false;
					goto _iter_next_5103366560;
				}
				if ((_138438_dest->_field_generics.len() > 0LL) && (_1300a20d0_f->_field_generics.len() > 0LL)) {
					{
						auto &__julec_range_expr = _1300a20d0_f->_field_generics;
						if (__julec_range_expr.begin() != __julec_range_expr.end()) {
							auto __julec_range_begin = __julec_range_expr.begin();
							const auto __julec_range_end = __julec_range_expr.end();
							jule::Ref<_1275d7180_GenericDecl> _1300a20d0_fg = *__julec_range_begin;
							_iter_begin_5103376816:;
							{
								{
									auto &__julec_range_expr = _138438_dest->_field_generics;
									if (__julec_range_expr.begin() != __julec_range_expr.end()) {
										auto __julec_range_begin = __julec_range_expr.begin();
										const auto __julec_range_end = __julec_range_expr.end();
										jule::Ref<_1275d7180_GenericDecl> _1300a20d0_dg = *__julec_range_begin;
										_iter_begin_5103378880:;
										{
											if (_1300a20d0_fg->_field_ident == _1300a20d0_dg->_field_ident) {
												this->self->_method_push_err(_1300a20d0_fg->_field_token,jule::Str("method_has_generic_with_same_ident", 34),jule::Slice<jule::Any>({}));
												_138471_ok=false;
											}
										}
										_iter_next_5103378880:;
										++__julec_range_begin;
										if (__julec_range_begin != __julec_range_end) { _1300a20d0_dg = *__julec_range_begin; goto _iter_begin_5103378880; }
										_iter_end_5103378880:;
									}
								}
							}
							_iter_next_5103376816:;
							++__julec_range_begin;
							if (__julec_range_begin != __julec_range_end) { _1300a20d0_fg = *__julec_range_begin; goto _iter_begin_5103376816; }
							_iter_end_5103376816:;
						}
					}
				}
				_1300a20d0_f->_field_sema=this->self;
				_1300a20d0_f->_field_owner=_138438_dest;
				_138438_dest->_field_methods._method_push(_1300a20d0_f);
			}
			_iter_next_5103366560:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a20d0_f = *__julec_range_begin; goto _iter_begin_5103366560; }
			_iter_end_5103366560:;
		}
	}
	return _138471_ok;
}



inline void _1300a20d0_Sema::_method_impl_trait(jule::Ref<_12791ab70_Impl> _141234_decl) {
	jule::Ref<_130099320_Trait> _141317_base = this->self->_method_find_trait(_141234_decl->_field_base._field_kind);
	if ((!(jule::real(_141317_base)))) {
		_141317_base=_130b8f5f0_find_builtin_trait(_141234_decl->_field_base._field_kind);
	}
	if ((!(jule::real(_141317_base)))) {
		this->self->_method_push_err(_141234_decl->_field_base,jule::Str("impl_base_not_exist", 19),jule::Slice<jule::Any>({jule::Any(_141234_decl->_field_base._field_kind)}));
		return;
	}
	
	jule::Ref<_127b2e960_Struct> _142617_dest = this->self->_method_find_struct(_141234_decl->_field_dest._field_kind,false);
	if ((!(jule::real(_142617_dest)))) {
		this->self->_method_push_err(_141234_decl->_field_dest,jule::Str("impl_dest_not_exist", 19),jule::Slice<jule::Any>({jule::Any(_141234_decl->_field_dest._field_kind)}));
		return;
	}
	if (_142617_dest->_field_token._field_file->_method_dir() != this->self->_field_file->_field_file->_method_dir()) {
		this->self->_method_push_err(_141234_decl->_field_dest,jule::Str("illegal_impl_out_of_package", 27),jule::Slice<jule::Any>({}));
		return;
	}
	_141317_base->_field_implemented=append(_141317_base->_field_implemented,jule::Slice<jule::Ref<_127b2e960_Struct>>({_142617_dest}));
	_142617_dest->_field_implements=append(_142617_dest->_field_implements,jule::Slice<jule::Ref<_130099320_Trait>>({_141317_base}));
	{
		if (!(((!(this->self->_method_check_trait_impl_methods(_141317_base,_141234_decl)))))) { goto _case_end_5103398800; }
		_case_begin_5103398800:;
		{
			return;
		}
		goto _match_end_5103416368;
		_case_end_5103398800:;
		if (!(((!(this->self->_method_impl_to_struct(_142617_dest,_141234_decl)))))) { goto _case_end_5103414000; }
		_case_begin_5103414000:;
		{
			return;
		}
		goto _match_end_5103416368;
		_case_end_5103414000:;
		_match_end_5103416368:;
	}
}



inline void _1300a20d0_Sema::_method_impl_struct(jule::Ref<_12791ab70_Impl> _144935_decl) {
	
	jule::Ref<_127b2e960_Struct> _145417_dest = this->self->_method_find_struct(_144935_decl->_field_dest._field_kind,false);
	if ((!(jule::real(_145417_dest)))) {
		this->self->_method_push_err(_144935_decl->_field_dest,jule::Str("impl_dest_not_exist", 19),jule::Slice<jule::Any>({jule::Any(_144935_decl->_field_dest._field_kind)}));
		return;
	}
	if (_145417_dest->_field_token._field_file->_method_dir() != this->self->_field_file->_field_file->_method_dir()) {
		this->self->_method_push_err(_144935_decl->_field_dest,jule::Str("illegal_impl_out_of_package", 27),jule::Slice<jule::Any>({}));
		return;
	}
	{
		if (!(((!(this->self->_method_impl_to_struct(_145417_dest,_144935_decl)))))) { goto _case_end_5144344320; }
		_case_begin_5144344320:;
		{
			return;
		}
		goto _match_end_5144343328;
		_case_end_5144344320:;
		_match_end_5144343328:;
	}
}



inline void _1300a20d0_Sema::_method_impl_impl(jule::Ref<_12791ab70_Impl> _147233_decl) {
	{
		if (!((_147233_decl->_method_is_trait_impl()))) { goto _case_end_5144348240; }
		_case_begin_5144348240:;
		{
			this->self->_method_impl_trait(_147233_decl);
		}
		goto _match_end_5144347984;
		_case_end_5144348240:;
		if (!((_147233_decl->_method_is_struct_impl()))) { goto _case_end_5144348352; }
		_case_begin_5144348352:;
		{
			this->self->_method_impl_struct(_147233_decl);
		}
		goto _match_end_5144347984;
		_case_end_5144348352:;
		_match_end_5144347984:;
	}
}



inline void _1300a20d0_Sema::_method_check_var_decl(jule::Ref<_1303533b0_Var> _148438_decl,jule::Trait<_1304dc360_Lookup> _148450_l) {
	if (_127941de0_is_ignore_ident(_148438_decl->_field_ident)) {
		this->self->_method_push_err(_148438_decl->_field_token,jule::Str("ignore_ident", 12),jule::Slice<jule::Any>({}));
	}
	if (_148438_decl->_method_is_auto_typed()) {
		if (_148438_decl->_field_statically) {
			this->self->_method_push_err(_148438_decl->_field_token,jule::Str("static_is_auto_typed", 20),jule::Slice<jule::Any>({}));
		}
		if ((!(_148438_decl->_method_is_initialized()))) {
			this->self->_method_push_err(_148438_decl->_field_token,jule::Str("missing_autotype_value", 22),jule::Slice<jule::Any>({}));
		}
	} else {
		this->self->_method_check_type(_148438_decl->_field_kind,_148450_l);
	}
	if (_148438_decl->_field_constant && _148438_decl->_field_reference) {
		this->self->_method_push_err(_148438_decl->_field_token,jule::Str("constant_reference", 18),jule::Slice<jule::Any>({}));
	}
	if ((!(_148438_decl->_method_is_initialized()))) {
		if (_148438_decl->_field_constant) {
			this->self->_method_push_err(_148438_decl->_field_token,jule::Str("const_var_not_have_expr", 23),jule::Slice<jule::Any>({}));
		}
		if (_148438_decl->_field_statically) {
			this->self->_method_push_err(_148438_decl->_field_token,jule::Str("static_not_have_expr", 20),jule::Slice<jule::Any>({}));
		}
		if (_148438_decl->_field_reference) {
			this->self->_method_push_err(_148438_decl->_field_token,jule::Str("reference_not_initialized", 25),jule::Slice<jule::Any>({}));
		}
	}
}



inline void _1300a20d0_Sema::_method_check_global_var_decl(jule::Ref<_1303533b0_Var> _152145_decl) {
	if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_152145_decl).alloc)),_152145_decl->_field_ident,_152145_decl->_field_cpp_linked)) {
		this->self->_method_push_err(_152145_decl->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_152145_decl->_field_ident)}));
	}
	if (_152145_decl->_field_cpp_linked && _152145_decl->_field_constant) {
		this->self->_method_push_err(_152145_decl->_field_token,jule::Str("cpp_linked_variable_is_const", 28),jule::Slice<jule::Any>({}));
	}
	if (((!(_152145_decl->_field_cpp_linked)) && (!(_152145_decl->_field_constant))) && (!(_152145_decl->_field_statically))) {
		this->self->_method_push_err(_152145_decl->_field_token,jule::Str("global_not_static", 17),jule::Slice<jule::Any>({}));
	}
	this->self->_method_check_var_decl(_152145_decl,this->self);
}



inline jule::Bool _1300a20d0_Sema::_method_check_global_decls(void) {
	jule::Bool _153640_ok = jule::Bool();
	jule::Int _153717_i = 0LL;
	_iter_begin_5144396528:;
	if (!(_153717_i < this->self->_field_file->_field_vars._method_len())) { goto _iter_end_5144396528; }
	{
		jule::Ref<_1303533b0_Var> _153921_decl = this->self->_field_file->_field_vars._method_at(_153717_i);
		this->self->_method_check_global_var_decl(_153921_decl);
		if (this->self->_field_errors.len() > 0LL) {
			_153640_ok = false;
			return _153640_ok;
		}
	}
	_iter_next_5144396528:;
	(_153717_i)++;
	goto _iter_begin_5144396528;
	_iter_end_5144396528:;
	_153640_ok = true;
	return _153640_ok;
}



inline jule::Bool _1300a20d0_Sema::_method_check_struct_trait_impl(jule::Ref<_127b2e960_Struct> _155047_strct,jule::Ref<_130099320_Trait> _155067_trt) {
	jule::Bool _155082_ok = jule::Bool();
	{
		auto &__julec_range_expr = _155067_trt->_field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127ed52e0_Fn> _1300a20d0_tf = *__julec_range_begin;
			_iter_begin_5144408336:;
			{
				jule::Bool _155221_exist = false;
				jule::Ref<_127ed52e0_Fn> _155321_sf = _155047_strct->_method_find_method(_1300a20d0_tf->_field_ident,_1300a20d0_tf->_field_statically);
				jule::Ref<_127ed52e0_FnIns> _155417_tf_k = this->self->_method_get_trait_check_fn_kind(_1300a20d0_tf);
				if (jule::real(_155321_sf)) {
					jule::Ref<_127ed52e0_FnIns> _155621_sf_k = this->self->_method_get_trait_check_fn_kind(_155321_sf);
					_155221_exist=((_155417_tf_k->_field_decl->_field_public == _155621_sf_k->_field_decl->_field_public) && (_155417_tf_k->_field_decl->_field_ident == _155621_sf_k->_field_decl->_field_ident)) && _155417_tf_k->_method_equals(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_155621_sf_k)));
				}
				if ((!(_155221_exist))) {
					this->self->_method_push_err(_155047_strct->_field_token,jule::Str("not_impl_trait_def", 18),jule::Slice<jule::Any>({jule::Any(_155067_trt->_field_ident),jule::Any(_155417_tf_k->_method_to_str())}));
					_155082_ok=false;
				}
			}
			_iter_next_5144408336:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a20d0_tf = *__julec_range_begin; goto _iter_begin_5144408336; }
			_iter_end_5144408336:;
		}
	}
	return _155082_ok;
}



inline jule::Bool _1300a20d0_Sema::_method_check_struct_impls(jule::Ref<_127b2e960_Struct> _157142_strct) {
	jule::Bool _157160_ok = jule::Bool();
	_157160_ok=true;
	{
		auto &__julec_range_expr = _157142_strct->_field_implements;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_130099320_Trait> _1300a20d0_trt = *__julec_range_begin;
			_iter_begin_5144428816:;
			{
				_157160_ok=this->self->_method_check_struct_trait_impl(_157142_strct,_1300a20d0_trt) && _157160_ok;
			}
			_iter_next_5144428816:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a20d0_trt = *__julec_range_begin; goto _iter_begin_5144428816; }
			_iter_end_5144428816:;
		}
	}
	_157160_ok = _157160_ok;
	return _157160_ok;
}



inline jule::Bool _1300a20d0_Sema::_method_check_struct_fields(jule::Ref<_127b2e960_Struct> _157943_st) {
	jule::Bool _157958_ok = jule::Bool();
	_157958_ok=true;
	jule::Ref<_1304dc9b0_TypeChecker> _158217_tc = jule::new_struct<_1304dc9b0_TypeChecker>(new( std::nothrow ) _1304dc9b0_TypeChecker(this->self,this->self,jule::new_struct<_1304dc9b0_Referencer>(new( std::nothrow ) _1304dc9b0_Referencer(_157943_st->_field_ident,_157943_st,nullptr)),_127941de0_Token(),_157943_st->_field_generics,jule::Slice<jule::Ref<_1304dc9b0_TypeAlias>>(),jule::Bool()));
	jule::I64 _159213_n = _157943_st->_field_instances.len();
	{
		auto &__julec_range_expr = _157943_st->_field_fields;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127b2e960_Field> _1300a20d0_f = *__julec_range_begin;
			_iter_begin_5144441136:;
			{
				_1300a20d0_f->_field_owner=_157943_st;
				_1300a20d0_f->_field_kind->_field_kind=_158217_tc->_method_check_decl(_1300a20d0_f->_field_kind->_field_decl);
				_157958_ok=jule::real(_1300a20d0_f->_field_kind->_field_kind) && _157958_ok;
				{
					auto &__julec_range_expr = _157943_st->_field_fields;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_127b2e960_Field> _1300a20d0_cf = *__julec_range_begin;
						_iter_begin_5144447056:;
						{
							if (_1300a20d0_f == _1300a20d0_cf) {
								goto _iter_end_5144447056;
							} else if (_1300a20d0_f->_field_ident == _1300a20d0_cf->_field_ident) {
								this->self->_method_push_err(_1300a20d0_f->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_1300a20d0_f->_field_ident)}));
								_157958_ok=false;
							}
						}
						_iter_next_5144447056:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _1300a20d0_cf = *__julec_range_begin; goto _iter_begin_5144447056; }
						_iter_end_5144447056:;
					}
				}
			}
			_iter_next_5144441136:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a20d0_f = *__julec_range_begin; goto _iter_begin_5144441136; }
			_iter_end_5144441136:;
		}
	}
	if (_157958_ok && (_159213_n != _157943_st->_field_instances.len())) {
		jule::drop(_158217_tc->_field_referencer);
		_157943_st->_field_instances=_157943_st->_field_instances.slice(0LL,static_cast<jule::Int>(_159213_n));
		{
			auto &__julec_range_expr = _157943_st->_field_fields;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_127b2e960_Field> _1300a20d0_f = *__julec_range_begin;
				_iter_begin_5144454912:;
				{
					_1300a20d0_f->_field_kind->_field_kind=_158217_tc->_method_check_decl(_1300a20d0_f->_field_kind->_field_decl);
				}
				_iter_next_5144454912:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _1300a20d0_f = *__julec_range_begin; goto _iter_begin_5144454912; }
				_iter_end_5144454912:;
			}
		}
	}
	_157958_ok = _157958_ok;
	return _157958_ok;
}



inline void _1300a20d0_Sema::_method_check_struct_decl(jule::Ref<_127b2e960_Struct> _162041_strct) {
	if (_127941de0_is_ignore_ident(_162041_strct->_field_ident)) {
		this->self->_method_push_err(_162041_strct->_field_token,jule::Str("ignore_ident", 12),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_162041_strct).alloc)),_162041_strct->_field_ident,_162041_strct->_field_cpp_linked)) {
		this->self->_method_push_err(_162041_strct->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_162041_strct->_field_ident)}));
	}
	_162041_strct->_field_sema=this->self;
	{
		if (!(((!(this->self->_method_check_decl_generics(_162041_strct->_field_generics)))))) { goto _case_end_5144470464; }
		_case_begin_5144470464:;
		{
			return;
		}
		goto _match_end_5144470112;
		_case_end_5144470464:;
		if (!(((!(this->self->_method_check_struct_fields(_162041_strct)))))) { goto _case_end_5144470576; }
		_case_begin_5144470576:;
		{
			return;
		}
		goto _match_end_5144470112;
		_case_end_5144470576:;
		if (!(((!(this->self->_method_check_struct_impls(_162041_strct)))))) { goto _case_end_5144470688; }
		_case_begin_5144470688:;
		{
			return;
		}
		goto _match_end_5144470112;
		_case_end_5144470688:;
		_match_end_5144470112:;
	}
}



inline jule::Bool _1300a20d0_Sema::_method_check_struct_decls(void) {
	jule::Bool _163640_ok = jule::Bool();
	jule::Int _163717_i = 0LL;
	_iter_begin_5144478176:;
	if (!(_163717_i < this->self->_field_file->_field_structs._method_len())) { goto _iter_end_5144478176; }
	{
		jule::Ref<_127b2e960_Struct> _163921_strct = this->self->_field_file->_field_structs._method_at(_163717_i);
		this->self->_method_check_struct_decl(_163921_strct);
		if (this->self->_field_errors.len() > 0LL) {
			_163640_ok = false;
			return _163640_ok;
		}
	}
	_iter_next_5144478176:;
	(_163717_i)++;
	goto _iter_begin_5144478176;
	_iter_end_5144478176:;
	_163640_ok = true;
	return _163640_ok;
}



inline void _1300a20d0_Sema::_method_check_fn_decl(jule::Ref<_127ed52e0_Fn> _165137_f) {
	if (_127941de0_is_ignore_ident(_165137_f->_field_ident)) {
		this->self->_method_push_err(_165137_f->_field_token,jule::Str("ignore_ident", 12),jule::Slice<jule::Any>({}));
	} else if (this->self->_method_is_duplicated_ident(((jule::Uintptr)((_165137_f).alloc)),_165137_f->_field_ident,_165137_f->_field_cpp_linked)) {
		this->self->_method_push_err(_165137_f->_field_token,jule::Str("duplicated_ident", 16),jule::Slice<jule::Any>({jule::Any(_165137_f->_field_ident)}));
	}
	_165137_f->_field_sema=this->self;
	this->self->_method_check_fn_decl_prototype(_165137_f);
}



inline jule::Bool _1300a20d0_Sema::_method_check_fn_decls(void) {
	jule::Bool _166336_ok = jule::Bool();
	jule::Int _166417_i = 0LL;
	_iter_begin_5144500160:;
	if (!(_166417_i < this->self->_field_file->_field_funcs._method_len())) { goto _iter_end_5144500160; }
	{
		jule::Ref<_127ed52e0_Fn> _166621_f = this->self->_field_file->_field_funcs._method_at(_166417_i);
		this->self->_method_check_fn_decl(_166621_f);
		if (this->self->_field_errors.len() > 0LL) {
			_166336_ok = false;
			return _166336_ok;
		}
	}
	_iter_next_5144500160:;
	(_166417_i)++;
	goto _iter_begin_5144500160;
	_iter_end_5144500160:;
	_166336_ok = true;
	return _166336_ok;
}



inline jule::Bool _1300a20d0_Sema::_method_check_directive_pass(_127ff3480_Pass _167739_pass) {
	jule::Bool _167753_ok = jule::Bool();
	if (_167739_pass._field_text == jule::Str("", 0)) {
		_167753_ok = true;
		return _167753_ok;
	}
	if (_167739_pass._field_text[static_cast<jule::Int>(0LL)] != '-') {
		(*this)._method_push_err(_167739_pass._field_token,jule::Str("pass_directive_not_starts_with_dash", 35),jule::Slice<jule::Any>({}));
		_167753_ok = false;
		return _167753_ok;
	}
	_167753_ok = true;
	return _167753_ok;
}



inline jule::Bool _1300a20d0_Sema::_method_check_passes(void) {
	jule::Bool _169033_ok = jule::Bool();
	_169033_ok=true;
	jule::Int _169217_i = 0LL;
	_iter_begin_5144518512:;
	if (!(_169217_i < (*this)._field_file->_field_passes._method_len())) { goto _iter_end_5144518512; }
	{
		_127ff3480_Pass _169417_pass = (*this)._field_file->_field_passes._method_at(_169217_i);
		_169033_ok=(*this)._method_check_directive_pass(_169417_pass) && _169033_ok;
	}
	_iter_next_5144518512:;
	(_169217_i)++;
	goto _iter_begin_5144518512;
	_iter_end_5144518512:;
	return _169033_ok;
}



inline jule::Bool _1300a20d0_Sema::_method_check_struct_derive_illegal_cycles(jule::Str _170053_derive,jule::Ref<_127b2e960_Struct> _170066_st1,jule::Ref<_1304dc9b0_TypeKind> _170084_k) {
	jule::Bool _1700100_ok = jule::Bool();
	jule::Fn<jule::Ref<_127b2e960_Struct>(jule::Ref<_1304dc9b0_TypeKind>)> _170117_get_struct_from_kind = nullptr;
	_170117_get_struct_from_kind=jule::Fn<jule::Ref<_127b2e960_Struct>(jule::Ref<_1304dc9b0_TypeKind>)>([=](jule::Ref<_1304dc9b0_TypeKind> _170239_k) mutable -> jule::Ref<_127b2e960_Struct> {
		{
			if (!(((!(jule::real(_170239_k)))))) { goto _case_end_5144539584; }
			_case_begin_5144539584:;
			{
				return jule::new_ref<_127b2e960_Struct>();
			}
			goto _match_end_5144537808;
			_case_end_5144539584:;
			if (!((jule::real(_170239_k->_method_strct())))) { goto _case_end_5144539696; }
			_case_begin_5144539696:;
			{
				return _170239_k->_method_strct()->_field_decl;
			}
			goto _match_end_5144537808;
			_case_end_5144539696:;
			if (!((jule::real(_170239_k->_method_ref())))) { goto _case_end_5144539328; }
			_case_begin_5144539328:;
			{
				return _170117_get_struct_from_kind(_170239_k->_method_ref()->_field_elem);
			}
			goto _match_end_5144537808;
			_case_end_5144539328:;
			if (!((jule::real(_170239_k->_method_slc())))) { goto _case_end_5144539440; }
			_case_begin_5144539440:;
			{
				return _170117_get_struct_from_kind(_170239_k->_method_slc()->_field_elem);
			}
			goto _match_end_5144537808;
			_case_end_5144539440:;
			if (!((jule::real(_170239_k->_method_arr())))) { goto _case_end_5144538320; }
			_case_begin_5144538320:;
			{
				return _170117_get_struct_from_kind(_170239_k->_method_arr()->_field_elem);
			}
			goto _match_end_5144537808;
			_case_end_5144538320:;
			if (!((jule::real(_170239_k->_method_ptr())))) { goto _case_end_5144538432; }
			_case_begin_5144538432:;
			{
				return jule::new_ref<_127b2e960_Struct>();
			}
			goto _match_end_5144537808;
			_case_end_5144538432:;
			_case_begin_5144538016:;
			{
				return jule::new_ref<_127b2e960_Struct>();
			}
			goto _match_end_5144537808;
			_case_end_5144538016:;
			_match_end_5144537808:;
		}
	});
	jule::Ref<_127b2e960_Struct> _172917_st2 = _170117_get_struct_from_kind(_170084_k);
	if ((!(jule::real(_172917_st2)))) {
		_1700100_ok = true;
		return _1700100_ok;
	}
	if ((_170066_st1).alloc == (_172917_st2).alloc) {
		(*this)._method_push_err(_170066_st1->_field_token,jule::Str("derive_illegal_cycle_refers_itself", 34),jule::Slice<jule::Any>({jule::Any(_170053_derive),jule::Any(_170066_st1->_field_ident)}));
		_1700100_ok = false;
		return _1700100_ok;
	}
	
	jule::Str _174317_message = jule::Str("", 0);
	jule::Fn<void(jule::Ref<_127b2e960_Struct>,jule::Ref<_127b2e960_Struct>)> _174513_push = jule::Fn<void(jule::Ref<_127b2e960_Struct>,jule::Ref<_127b2e960_Struct>)>([=](jule::Ref<_127b2e960_Struct> _174523_st1,jule::Ref<_127b2e960_Struct> _174537_st2) mutable -> void {
		jule::Str _174617_refers_to = _136e8b750_errorf(jule::Str("refers_to", 9),jule::Slice<jule::Any>({jule::Any(_174523_st1->_field_ident),jule::Any(_174537_st2->_field_ident)}));
		_174317_message=((_127ff3480_str_repeat(jule::Str(" ", 1),4LL) + _174617_refers_to) + jule::Str("\n", 1)) + _174317_message;
	});
	jule::Fn<jule::Bool(jule::Ref<_127b2e960_Struct>)> _175117_check_cross = nullptr;
	_175117_check_cross=jule::Fn<jule::Bool(jule::Ref<_127b2e960_Struct>)>([=](jule::Ref<_127b2e960_Struct> _175226_st2) mutable -> jule::Bool {
		{
			auto &__julec_range_expr = _175226_st2->_field_uses;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_127b2e960_Struct> _1300a20d0_u = *__julec_range_begin;
				_iter_begin_5144575104:;
				{
					if (_1300a20d0_u == _170066_st1) {
						_174513_push(_175226_st2,_1300a20d0_u);
						return false;
					}
					if ((!(_175117_check_cross(_1300a20d0_u)))) {
						_174513_push(_175226_st2,_1300a20d0_u);
						return false;
					}
				}
				_iter_next_5144575104:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _1300a20d0_u = *__julec_range_begin; goto _iter_begin_5144575104; }
				_iter_end_5144575104:;
			}
		}
		return true;
	});
	if ((!(_175117_check_cross(_172917_st2)))) {
		jule::Str _176921_err_msg = _174317_message;
		_174317_message=jule::Str("", 0);
		_174513_push(_170066_st1,_172917_st2);
		_176921_err_msg=_176921_err_msg + _174317_message;
		(*this)._method_push_err(_170066_st1->_field_token,jule::Str("derive_illegal_cross_cycle", 26),jule::Slice<jule::Any>({jule::Any(_170053_derive),jule::Any(_176921_err_msg)}));
		_1700100_ok = false;
		return _1700100_ok;
	}
	_1700100_ok = true;
	return _1700100_ok;
}



inline jule::Bool _1300a20d0_Sema::_method_check_struct_ins_derive_clone(jule::Ref<_127b2e960_StructIns> _178052_st) {
	jule::Bool _178070_ok = jule::Bool();
	if ((!(_178052_st->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
		_178070_ok = true;
		return _178070_ok;
	}
	{
		auto &__julec_range_expr = _178052_st->_field_fields;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127b2e960_FieldIns> _1300a20d0_f = *__julec_range_begin;
			_iter_begin_5144591632:;
			{
				if ((!(jule::real(_1300a20d0_f->_field_kind))) || (!(_1304dc9b0_is_mut(_1300a20d0_f->_field_kind)))) {
					goto _iter_next_5144591632;
				}
				if ((!(_1304dc9b0_supports_cloning(_1300a20d0_f->_field_kind)))) {
					(*this)._method_push_err(_178052_st->_field_decl->_field_token,jule::Str("type_not_compatible_for_derive", 30),jule::Slice<jule::Any>({jule::Any(_1300a20d0_f->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
					_178070_ok = false;
					return _178070_ok;
				}
				if ((!((*this)._method_check_struct_derive_illegal_cycles(jule::Str("Clone", 5),_178052_st->_field_decl,_1300a20d0_f->_field_kind)))) {
					_178070_ok = false;
					return _178070_ok;
				}
			}
			_iter_next_5144591632:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a20d0_f = *__julec_range_begin; goto _iter_begin_5144591632; }
			_iter_end_5144591632:;
		}
	}
	_178070_ok = true;
	return _178070_ok;
}



inline jule::Bool _1300a20d0_Sema::_method_check_struct_derive_clone(jule::Ref<_127b2e960_Struct> _180348_st) {
	jule::Bool _180363_ok = jule::Bool();
	_180363_ok = (*this)._method_check_struct_ins_derive_clone(_180348_st->_method_instance());
	return _180363_ok;
}



inline jule::Bool _1300a20d0_Sema::_method_check_file_derives(void) {
	jule::Bool _180739_ok = jule::Bool();
	jule::Int _180917_i = 0LL;
	_iter_begin_5144612912:;
	if (!(_180917_i < (*this)._field_file->_field_structs._method_len())) { goto _iter_end_5144612912; }
	{
		jule::Ref<_127b2e960_Struct> _181121_st = (*this)._field_file->_field_structs._method_at(_180917_i);
		jule::Bool _181217_ok = (*this)._method_check_struct_derive_clone(_181121_st);
		if ((!(_181217_ok))) {
			_180739_ok = false;
			return _180739_ok;
		}
	}
	_iter_next_5144612912:;
	(_180917_i)++;
	goto _iter_begin_5144612912;
	_iter_end_5144612912:;
	_180739_ok = true;
	return _180739_ok;
}



inline void _1300a20d0_Sema::_method_check_package_derives(void) {
	{
		auto &__julec_range_expr = (*this)._field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13032dc50_SymbolTable> _1300a20d0_f = *__julec_range_begin;
			_iter_begin_5144621632:;
			{
				(*this)._method_set_current_file(_1300a20d0_f);
				jule::Bool _182417_ok = (*this)._method_check_file_derives();
				if ((!(_182417_ok))) {
					return;
				}
			}
			_iter_next_5144621632:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a20d0_f = *__julec_range_begin; goto _iter_begin_5144621632; }
			_iter_end_5144621632:;
		}
	}
}



inline void _1300a20d0_Sema::_method_check_package_decls(void) {
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13032dc50_SymbolTable> _1300a20d0_f = *__julec_range_begin;
			_iter_begin_5144627680:;
			{
				this->self->_method_set_current_file(_1300a20d0_f);
				if ((!(this->self->_method_check_passes()))) {
					return;
				}
			}
			_iter_next_5144627680:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a20d0_f = *__julec_range_begin; goto _iter_begin_5144627680; }
			_iter_end_5144627680:;
		}
	}
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13032dc50_SymbolTable> _1300a20d0_f = *__julec_range_begin;
			_iter_begin_5144628688:;
			{
				this->self->_method_set_current_file(_1300a20d0_f);
				if ((!(this->self->_method_check_type_alias_decls()))) {
					return;
				}
			}
			_iter_next_5144628688:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a20d0_f = *__julec_range_begin; goto _iter_begin_5144628688; }
			_iter_end_5144628688:;
		}
	}
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13032dc50_SymbolTable> _1300a20d0_f = *__julec_range_begin;
			_iter_begin_5144632592:;
			{
				this->self->_method_set_current_file(_1300a20d0_f);
				if ((!(this->self->_method_check_trait_decls()))) {
					return;
				}
			}
			_iter_next_5144632592:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a20d0_f = *__julec_range_begin; goto _iter_begin_5144632592; }
			_iter_end_5144632592:;
		}
	}
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13032dc50_SymbolTable> _1300a20d0_f = *__julec_range_begin;
			_iter_begin_5144636400:;
			{
				this->self->_method_set_current_file(_1300a20d0_f);
				if ((!(this->self->_method_check_global_decls()))) {
					return;
				}
			}
			_iter_next_5144636400:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a20d0_f = *__julec_range_begin; goto _iter_begin_5144636400; }
			_iter_end_5144636400:;
		}
	}
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13032dc50_SymbolTable> _1300a20d0_f = *__julec_range_begin;
			_iter_begin_5144640352:;
			{
				this->self->_method_set_current_file(_1300a20d0_f);
				if ((!(this->self->_method_check_fn_decls()))) {
					return;
				}
			}
			_iter_next_5144640352:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a20d0_f = *__julec_range_begin; goto _iter_begin_5144640352; }
			_iter_end_5144640352:;
		}
	}
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13032dc50_SymbolTable> _1300a20d0_f = *__julec_range_begin;
			_iter_begin_5144644016:;
			{
				this->self->_method_set_current_file(_1300a20d0_f);
				if ((!(this->self->_method_check_struct_decls()))) {
					return;
				}
			}
			_iter_next_5144644016:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a20d0_f = *__julec_range_begin; goto _iter_begin_5144644016; }
			_iter_end_5144644016:;
		}
	}
	this->self->_method_check_package_derives();
}



inline void _1300a20d0_Sema::_method_check_data_for_auto_type(jule::Ref<_13064b610_Data> _187943_d,_127941de0_Token _187953_err_token) {
	{
		if (!((_187943_d->_method_is_nil()))) { goto _case_end_5144654640; }
		_case_begin_5144654640:;
		{
			(*this)._method_push_err(_187953_err_token,jule::Str("nil_for_autotype", 16),jule::Slice<jule::Any>({}));
		}
		goto _match_end_5144654384;
		_case_end_5144654640:;
		if (!((_187943_d->_method_is_void()))) { goto _case_end_5144654752; }
		_case_begin_5144654752:;
		{
			(*this)._method_push_err(_187953_err_token,jule::Str("void_for_autotype", 17),jule::Slice<jule::Any>({}));
		}
		goto _match_end_5144654384;
		_case_end_5144654752:;
		_match_end_5144654384:;
	}
}



inline void _1300a20d0_Sema::_method_check_var(jule::Ref<_1303533b0_Var> _188933_v) {
	if (_188933_v->_field_cpp_linked) {
		return;
	}
	if (_188933_v->_method_is_auto_typed()) {
		_188933_v->_field_kind=jule::new_struct<_1304dc9b0_TypeSymbol>(new( std::nothrow ) _1304dc9b0_TypeSymbol(jule::Ref<_1275d7180_TypeDecl>(),_188933_v->_field_value->_field_data->_field_kind));
		this->self->_method_check_data_for_auto_type(_188933_v->_field_value->_field_data,_188933_v->_field_value->_field_expr->_field_token);
	} else {
		jule::Ref<_1304dc9b0_Arr> _190121_arr = _188933_v->_field_kind->_field_kind->_method_arr();
		if (jule::real(_190121_arr)) {
			if (_190121_arr->_field_auto) {
				jule::Ref<_1304dc9b0_Arr> _190425_data_arr = _188933_v->_field_value->_field_data->_field_kind->_method_arr();
				if (jule::real(_190425_data_arr)) {
					_190121_arr->_field_n=_190425_data_arr->_field_n;
				}
			}
		}
		this->self->_method_check_assign_type(_188933_v->_field_kind->_field_kind,_188933_v->_field_value->_field_data,_188933_v->_field_value->_field_expr->_field_token,false);
	}
	this->self->_method_check_validity_for_init_expr(_188933_v->_field_mutable,_188933_v->_field_reference,_188933_v->_field_kind->_field_kind,_188933_v->_field_value->_field_data,_188933_v->_field_value->_field_expr->_field_token);
	if ((!(_188933_v->_field_constant))) {
		jule::drop(_188933_v->_field_value->_field_data->_field_constant);
	}
}



inline void _1300a20d0_Sema::_method_check_type_var(jule::Ref<_1303533b0_Var> _192738_decl,jule::Trait<_1304dc360_Lookup> _192750_l) {
	if (_192738_decl->_field_cpp_linked || (!(_192738_decl->_method_is_initialized()))) {
		return;
	}
	if (jule::real(_192738_decl->_field_kind)) {
		_192738_decl->_field_value->_field_data=this->self->_method_evalpd(_192738_decl->_field_value->_field_expr,_192750_l,_192738_decl->_field_kind->_field_kind,_192738_decl);
	} else {
		_192738_decl->_field_value->_field_data=this->self->_method_evalpd(_192738_decl->_field_value->_field_expr,_192750_l,jule::new_ref<_1304dc9b0_TypeKind>(),_192738_decl);
	}
	if ((!(jule::real(_192738_decl->_field_value->_field_data)))) {
		return;
	}
	this->self->_method_check_var(_192738_decl);
}



inline void _1300a20d0_Sema::_method_check_global_types(void) {
	jule::Int _194817_i = 0LL;
	_iter_begin_5144699440:;
	if (!(_194817_i < this->self->_field_file->_field_vars._method_len())) { goto _iter_end_5144699440; }
	{
		jule::Ref<_1303533b0_Var> _195021_decl = this->self->_field_file->_field_vars._method_at(_194817_i);
		this->self->_method_check_type_var(_195021_decl,this->self);
	}
	_iter_next_5144699440:;
	(_194817_i)++;
	goto _iter_begin_5144699440;
	_iter_end_5144699440:;
	_194817_i=0LL;
	_iter_begin_5144706208:;
	if (!(_194817_i < this->self->_field_file->_field_vars._method_len())) { goto _iter_end_5144706208; }
	{
		jule::Ref<_1303533b0_Var> _195721_decl = this->self->_field_file->_field_vars._method_at(_194817_i);
		if (_195721_decl->_method_is_initialized() && (_195721_decl->_field_depends.len() > 0LL)) {
			this->self->_method_check_type_var(_195721_decl,this->self);
		}
	}
	_iter_next_5144706208:;
	(_194817_i)++;
	goto _iter_begin_5144706208;
	_iter_end_5144706208:;
}



inline void _1300a20d0_Sema::_method_check_type_method(jule::Ref<_127b2e960_StructIns> _196441_strct,jule::Ref<_127ed52e0_Fn> _196464_f) {
	if (_196464_f->_field_cpp_linked) {
		return;
	}
	if (_196464_f->_field_generics.len() > 0LL) {
		return;
	}
	if (_196464_f->_field_instances.len() == 0LL) {
		jule::Ref<_127ed52e0_FnIns> _197521_ins = _196464_f->_method_instance();
		_197521_ins->_field_owner=_196441_strct;
		_196464_f->_method_append_instance(_197521_ins);
		this->self->_method_reload_fn_ins_types(_197521_ins);
		_197521_ins->_field_reloaded=true;
	}
	{
		auto &__julec_range_expr = _196464_f->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127ed52e0_FnIns> _1300a20d0_ins = *__julec_range_begin;
			_iter_begin_5144724752:;
			{
				if (_1300a20d0_ins->_field_scope->_field_stmts._method_len() > 0LL) {
					goto _iter_next_5144724752;
				}
				this->self->_method_check_fn_ins(_1300a20d0_ins);
			}
			_iter_next_5144724752:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a20d0_ins = *__julec_range_begin; goto _iter_begin_5144724752; }
			_iter_end_5144724752:;
		}
	}
}



inline void _1300a20d0_Sema::_method_check_type_struct(jule::Ref<_127b2e960_Struct> _199141_strct) {
	if (_199141_strct->_field_cpp_linked) {
		return;
	}
	if ((_199141_strct->_field_generics.len() == 0LL) && (_199141_strct->_field_instances.len() == 0LL)) {
		jule::Ref<_127b2e960_StructIns> _199721_ins = _199141_strct->_method_instance();
		_199721_ins->_field_checked=true;
		_199141_strct->_method_append_instance(_199721_ins);
	}
	{
		auto &__julec_range_expr = _199141_strct->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127b2e960_StructIns> _1300a20d0_ins = *__julec_range_begin;
			_iter_begin_5144735680:;
			{
				{
					auto &__julec_range_expr = _1300a20d0_ins->_field_methods;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_127ed52e0_Fn> _1300a20d0_f = *__julec_range_begin;
						_iter_begin_5144743296:;
						{
							this->self->_method_check_type_method(_1300a20d0_ins,_1300a20d0_f);
						}
						_iter_next_5144743296:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _1300a20d0_f = *__julec_range_begin; goto _iter_begin_5144743296; }
						_iter_end_5144743296:;
					}
				}
			}
			_iter_next_5144735680:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a20d0_ins = *__julec_range_begin; goto _iter_begin_5144735680; }
			_iter_end_5144735680:;
		}
	}
}



inline void _1300a20d0_Sema::_method_check_struct_types(void) {
	jule::Int _201017_i = 0LL;
	_iter_begin_5144744400:;
	if (!(_201017_i < this->self->_field_file->_field_structs._method_len())) { goto _iter_end_5144744400; }
	{
		jule::Ref<_127b2e960_Struct> _201221_strct = this->self->_field_file->_field_structs._method_at(_201017_i);
		this->self->_method_check_type_struct(_201221_strct);
	}
	_iter_next_5144744400:;
	(_201017_i)++;
	goto _iter_begin_5144744400;
	_iter_end_5144744400:;
}



inline void _1300a20d0_Sema::_method_check_rets(jule::Ref<_127ed52e0_FnIns> _201733_f) {
	if (_201733_f->_field_decl->_method_is_void()) {
		return;
	}
	jule::Bool _202213_ok = _1300a20d0_has_ret(_201733_f->_field_scope);
	if ((!(_202213_ok))) {
		(*this)._method_push_err(_201733_f->_field_decl->_field_token,jule::Str("missing_ret", 11),jule::Slice<jule::Any>({}));
	}
}



inline void _1300a20d0_Sema::_method_check_fn_ins_sc(jule::Ref<_127ed52e0_FnIns> _202838_f,jule::Ref<_1300a11b0_ScopeChecker> _202853_sc) {
	if (_202838_f->_field_decl->_field_cpp_linked) {
		return;
	}
	jule::Slice<jule::Ref<_1303533b0_Var>> _203317_vars = _1300a20d0_build_ret_vars(_202838_f);
	_202853_sc->_field_table->_field_vars._method_append(_203317_vars);
	_202853_sc->_field_table->_field_vars._method_append(_1300a20d0_build_param_vars(_202838_f));
	_202853_sc->_field_table->_field_type_aliases._method_append(_1300a20d0_build_generic_type_aliases(_202838_f));
	_202853_sc->_method_check(_202838_f->_field_decl->_field_scope,_202838_f->_field_scope);
	if (_203317_vars.len() > 0LL) {
		{
			auto &__julec_range_expr = _203317_vars;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_1303533b0_Var> _1300a20d0_v = *__julec_range_begin;
				_iter_begin_5144767856:;
				{
					_202838_f->_field_scope->_field_stmts._method_push_front(jule::Any(_1300a20d0_v));
				}
				_iter_next_5144767856:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _1300a20d0_v = *__julec_range_begin; goto _iter_begin_5144767856; }
				_iter_end_5144767856:;
			}
		}
	}
	(*this)._method_check_rets(_202838_f);
}



inline void _1300a20d0_Sema::_method_check_fn_ins(jule::Ref<_127ed52e0_FnIns> _205135_f) {
	if (_205135_f->_field_decl->_field_cpp_linked) {
		return;
	}
	jule::Ref<_13032dc50_SymbolTable> _205617_old = _205135_f->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_205135_f->_field_decl->_field_sema->_method_set_current_file(_205617_old);
	});
	jule::Ref<_13032dc50_SymbolTable> _205817_file = _1300a20d0_find_file(_205135_f->_field_decl->_field_sema->_field_files,_205135_f->_field_decl->_field_token._field_file);
	if (jule::real(_205817_file)) {
		_205135_f->_field_decl->_field_sema->_method_set_current_file(_205817_file);
	}
	jule::Ref<_1300a11b0_ScopeChecker> _206317_sc = _1300a11b0_new_scope_checker(_205135_f->_field_decl->_field_sema,_205135_f);
	(*this)._method_check_fn_ins_sc(_205135_f,_206317_sc);
	if ((_205135_f->_field_decl->_field_sema).alloc != (&((*this)))) {
		(*this)._field_errors=append((*this)._field_errors,_205135_f->_field_decl->_field_sema->_field_errors);
	}
}



inline void _1300a20d0_Sema::_method_check_type_fn(jule::Ref<_127ed52e0_Fn> _207137_f) {
	if (_207137_f->_field_cpp_linked) {
		return;
	}
	if (_207137_f->_field_generics.len() > 0LL) {
		return;
	}
	{
		auto &__julec_range_expr = _207137_f->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127ed52e0_FnIns> _1300a20d0_ins = *__julec_range_begin;
			_iter_begin_5144803008:;
			{
				this->self->_method_check_fn_ins(_1300a20d0_ins);
			}
			_iter_next_5144803008:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a20d0_ins = *__julec_range_begin; goto _iter_begin_5144803008; }
			_iter_end_5144803008:;
		}
	}
}



inline void _1300a20d0_Sema::_method_precheck_type_fn(jule::Ref<_127ed52e0_Fn> _208640_f) {
	if (_208640_f->_field_cpp_linked) {
		return;
	}
	if (_208640_f->_field_generics.len() > 0LL) {
		return;
	}
	if (_208640_f->_field_instances.len() == 0LL) {
		jule::Ref<_127ed52e0_FnIns> _209721_ins = _208640_f->_method_instance();
		_208640_f->_field_instances=append(_208640_f->_field_instances,jule::Slice<jule::Ref<_127ed52e0_FnIns>>({_209721_ins}));
		this->self->_method_reload_fn_ins_types(_209721_ins);
		_209721_ins->_field_reloaded=true;
	}
}



inline jule::Bool _1300a20d0_Sema::_method_precheck_fn_types(void) {
	jule::Bool _210539_ok = jule::Bool();
	jule::Int _210617_i = 0LL;
	_iter_begin_5144820848:;
	if (!(_210617_i < this->self->_field_file->_field_funcs._method_len())) { goto _iter_end_5144820848; }
	{
		jule::Ref<_127ed52e0_Fn> _210821_decl = this->self->_field_file->_field_funcs._method_at(_210617_i);
		this->self->_method_precheck_type_fn(_210821_decl);
	}
	_iter_next_5144820848:;
	(_210617_i)++;
	goto _iter_begin_5144820848;
	_iter_end_5144820848:;
	_210539_ok = true;
	return _210539_ok;
}



inline jule::Bool _1300a20d0_Sema::_method_check_fn_types(void) {
	jule::Bool _211636_ok = jule::Bool();
	jule::Int _211717_i = 0LL;
	_iter_begin_5144829632:;
	if (!(_211717_i < this->self->_field_file->_field_funcs._method_len())) { goto _iter_end_5144829632; }
	{
		jule::Ref<_127ed52e0_Fn> _211921_decl = this->self->_field_file->_field_funcs._method_at(_211717_i);
		this->self->_method_check_type_fn(_211921_decl);
	}
	_iter_next_5144829632:;
	(_211717_i)++;
	goto _iter_begin_5144829632;
	_iter_end_5144829632:;
	_211636_ok = true;
	return _211636_ok;
}



inline void _1300a20d0_Sema::_method_check_package_types(void) {
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13032dc50_SymbolTable> _1300a20d0_f = *__julec_range_begin;
			_iter_begin_5144837152:;
			{
				this->self->_method_set_current_file(_1300a20d0_f);
				this->self->_method_check_global_types();
			}
			_iter_next_5144837152:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a20d0_f = *__julec_range_begin; goto _iter_begin_5144837152; }
			_iter_end_5144837152:;
		}
	}
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13032dc50_SymbolTable> _1300a20d0_f = *__julec_range_begin;
			_iter_begin_5144838160:;
			{
				this->self->_method_set_current_file(_1300a20d0_f);
				this->self->_method_precheck_fn_types();
			}
			_iter_next_5144838160:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a20d0_f = *__julec_range_begin; goto _iter_begin_5144838160; }
			_iter_end_5144838160:;
		}
	}
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13032dc50_SymbolTable> _1300a20d0_f = *__julec_range_begin;
			_iter_begin_5144844256:;
			{
				this->self->_method_set_current_file(_1300a20d0_f);
				this->self->_method_check_fn_types();
			}
			_iter_next_5144844256:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a20d0_f = *__julec_range_begin; goto _iter_begin_5144844256; }
			_iter_end_5144844256:;
		}
	}
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13032dc50_SymbolTable> _1300a20d0_f = *__julec_range_begin;
			_iter_begin_5144844976:;
			{
				this->self->_method_set_current_file(_1300a20d0_f);
				this->self->_method_check_struct_types();
			}
			_iter_next_5144844976:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a20d0_f = *__julec_range_begin; goto _iter_begin_5144844976; }
			_iter_end_5144844976:;
		}
	}
}



inline void _1300a20d0_Sema::_method_set_file_sema_fields(void) {
	jule::Int _215117_i = 0LL;
	_iter_begin_5144851744:;
	if (!(_215117_i < this->self->_field_file->_field_funcs._method_len())) { goto _iter_end_5144851744; }
	{
		jule::Ref<_127ed52e0_Fn> _215321_f = this->self->_field_file->_field_funcs._method_at(_215117_i);
		_215321_f->_field_sema=this->self;
	}
	_iter_next_5144851744:;
	(_215117_i)++;
	goto _iter_begin_5144851744;
	_iter_end_5144851744:;
	_215117_i=0LL;
	_iter_begin_5144857040:;
	if (!(_215117_i < this->self->_field_file->_field_structs._method_len())) { goto _iter_end_5144857040; }
	{
		jule::Ref<_127b2e960_Struct> _215921_st = this->self->_field_file->_field_structs._method_at(_215117_i);
		_215921_st->_field_sema=this->self;
	}
	_iter_next_5144857040:;
	(_215117_i)++;
	goto _iter_begin_5144857040;
	_iter_end_5144857040:;
}



inline void _1300a20d0_Sema::_method_set_sema_fields(void) {
	{
		auto &__julec_range_expr = this->self->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13032dc50_SymbolTable> _1300a20d0_file = *__julec_range_begin;
			_iter_begin_5144863776:;
			{
				this->self->_method_set_current_file(_1300a20d0_file);
				this->self->_method_set_file_sema_fields();
			}
			_iter_next_5144863776:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a20d0_file = *__julec_range_begin; goto _iter_begin_5144863776; }
			_iter_end_5144863776:;
		}
	}
}



inline void _1300a20d0_Sema::_method_check(jule::Slice<jule::Ref<_13032dc50_SymbolTable>> _217129_files) {
	this->self->_field_files=_217129_files;
	this->self->_method_check_imports();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_enums();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_set_sema_fields();
	this->self->_method_impl_impls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_package_decls();
	if (this->self->_field_errors.len() > 0LL) {
		return;
	}
	this->self->_method_check_package_types();
}







std::ostream &operator<<(std::ostream &_Stream, const _1300a20d0_Sema &_Src) {
	_Stream << "Sema{";
	_Stream << "errors:" << _Src._field_errors << ", ";
	_Stream << "files:" << _Src._field_files << ", ";
	_Stream << "file:" << _Src._field_file;
	_Stream << "}";
	return _Stream;
}



inline void _13032cf90_DynamicTypeAnnotation::_method_push_generic(jule::Ref<_1304dc9b0_TypeKind> _52635_k,jule::Int _52649_i) {
	(*this)._field_f->_field_generics[static_cast<jule::Int>(_52649_i)]=_52635_k;
}



inline jule::Bool _13032cf90_DynamicTypeAnnotation::_method_annotate_prim(jule::Ref<_1304dc9b0_TypeKind> _53043_k) {
	jule::Bool _53059_ok = jule::Bool();
	jule::Str _53113_kind = (*((*this)._field_k))->_method_to_str();
	{
		auto &__julec_range_expr = (*this)._field_f->_field_decl->_field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _13032cf90_i = 0;
			jule::Ref<_1275d7180_GenericDecl> _13032cf90_g = *__julec_range_begin;
			_iter_begin_5145138512:;
			{
				if (_53113_kind != _13032cf90_g->_field_ident) {
					goto _iter_next_5145138512;
				}
				jule::Ref<_1304dc9b0_TypeKind> _53717_t = (*this)._field_f->_field_generics[static_cast<jule::Int>(_13032cf90_i)];
				{
					if (!(((!(jule::real(_53717_t)))))) { goto _case_end_5145144576; }
					_case_begin_5145144576:;
					{
						(*this)._method_push_generic(_53043_k,_13032cf90_i);
					}
					goto _match_end_5145144368;
					_case_end_5145144576:;
					if (!((_53717_t->_method_to_str() != _53043_k->_method_to_str()))) { goto _case_end_5145144688; }
					_case_begin_5145144688:;
					{
						_53059_ok = false;
						return _53059_ok;
					}
					goto _match_end_5145144368;
					_case_end_5145144688:;
					_match_end_5145144368:;
				}
				(*((*this)._field_k))->_field_kind=_53043_k->_field_kind;
				_53059_ok = true;
				return _53059_ok;
			}
			_iter_next_5145138512:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_13032cf90_i; _13032cf90_g = *__julec_range_begin; goto _iter_begin_5145138512; }
			_iter_end_5145138512:;
		}
	}
	_53059_ok = false;
	return _53059_ok;
}



inline jule::Bool _13032cf90_DynamicTypeAnnotation::_method_annotate_slc(jule::Ref<_1304dc9b0_TypeKind> _55442_k) {
	jule::Bool _55458_ok = jule::Bool();
	jule::Ref<_1304dc9b0_Slc> _55517_pslc = (*((*this)._field_k))->_method_slc();
	if ((!(jule::real(_55517_pslc)))) {
		_55458_ok = false;
		return _55458_ok;
	}
	jule::Ref<_1304dc9b0_Slc> _56017_slc = _55442_k->_method_slc();
	_1304dc9b0_TypeKind* _56117_kk = (_55517_pslc->_field_elem).alloc;
	(*this)._field_k=(&(_56117_kk));
	_55458_ok = (*this)._method_annotate_kind(_56017_slc->_field_elem);
	return _55458_ok;
}



inline jule::Bool _13032cf90_DynamicTypeAnnotation::_method_annotate_map(jule::Ref<_1304dc9b0_TypeKind> _56642_k) {
	jule::Bool _56658_ok = jule::Bool();
	jule::Ref<_1304dc9b0_Map> _56717_pmap = (*((*this)._field_k))->_method_map();
	if ((!(jule::real(_56717_pmap)))) {
		_56658_ok = false;
		return _56658_ok;
	}
	jule::Ref<_1304dc9b0_Map> _57217_m = _56642_k->_method_map();
	jule::Fn<jule::Bool(_1304dc9b0_TypeKind**,jule::Ref<_1304dc9b0_TypeKind>)> _57313_check = jule::Fn<jule::Bool(_1304dc9b0_TypeKind**,jule::Ref<_1304dc9b0_TypeKind>)>([=](_1304dc9b0_TypeKind** _57328_k,jule::Ref<_1304dc9b0_TypeKind> _57347_ck) mutable -> jule::Bool {
		jule::Bool _57364_ok = jule::Bool();
		_1304dc9b0_TypeKind** _57421_old = (*this)._field_k;
		(*this)._field_k=_57328_k;
		_57364_ok=(*this)._method_annotate_kind(_57347_ck);
		(*this)._field_k=_57421_old;
		_57364_ok = _57364_ok;
		return _57364_ok;
	});
	_1304dc9b0_TypeKind* _58117_key = (_56717_pmap->_field_key).alloc;
	_1304dc9b0_TypeKind* _58217_val = (_56717_pmap->_field_val).alloc;
	_56658_ok = _57313_check((&(_58117_key)),_57217_m->_field_key) && _57313_check((&(_58217_val)),_57217_m->_field_val);
	return _56658_ok;
}



inline jule::Bool _13032cf90_DynamicTypeAnnotation::_method_annotate_fn(jule::Ref<_1304dc9b0_TypeKind> _58641_k) {
	jule::Bool _58657_ok = jule::Bool();
	jule::Ref<_127ed52e0_FnIns> _58717_pf = (*((*this)._field_k))->_method_fnc();
	if ((!(jule::real(_58717_pf)))) {
		_58657_ok = false;
		return _58657_ok;
	}
	jule::Ref<_127ed52e0_FnIns> _59117_f = _58641_k->_method_fnc();
	{
		if (!((_58717_pf->_field_params.len() != _59117_f->_field_params.len()))) { goto _case_end_5145192512; }
		_case_begin_5145192512:;
		{
			_58657_ok = false;
			return _58657_ok;
		}
		goto _match_end_5145192064;
		_case_end_5145192512:;
		if (!((_58717_pf->_field_decl->_method_is_void() != _59117_f->_field_decl->_method_is_void()))) { goto _case_end_5145192624; }
		_case_begin_5145192624:;
		{
			_58657_ok = false;
			return _58657_ok;
		}
		goto _match_end_5145192064;
		_case_end_5145192624:;
		_match_end_5145192064:;
	}
	_58657_ok=true;
	_1304dc9b0_TypeKind** _60117_old = (*this)._field_k;
	{
		auto &__julec_range_expr = _59117_f->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _13032cf90_i = 0;
			jule::Ref<_127ed52e0_ParamIns> _13032cf90_fp = *__julec_range_begin;
			_iter_begin_5145198640:;
			{
				_1304dc9b0_TypeKind* _60321_pfp = (_58717_pf->_field_params[static_cast<jule::Int>(_13032cf90_i)]->_field_kind).alloc;
				(*this)._field_k=(&(_60321_pfp));
				_58657_ok=(*this)._method_annotate_kind(_13032cf90_fp->_field_kind) && _58657_ok;
			}
			_iter_next_5145198640:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_13032cf90_i; _13032cf90_fp = *__julec_range_begin; goto _iter_begin_5145198640; }
			_iter_end_5145198640:;
		}
	}
	if ((!(_58717_pf->_field_decl->_method_is_void()))) {
		_1304dc9b0_TypeKind* _60921_result = (_58717_pf->_field_result).alloc;
		(*this)._field_k=(&(_60921_result));
		_58657_ok=(*this)._method_annotate_kind(_59117_f->_field_result) && _58657_ok;
	}
	(*this)._field_k=_60117_old;
	_58657_ok = _58657_ok;
	return _58657_ok;
}



inline jule::Bool _13032cf90_DynamicTypeAnnotation::_method_annotate_ptr(jule::Ref<_1304dc9b0_TypeKind> _61842_k) {
	jule::Bool _61858_ok = jule::Bool();
	jule::Ref<_1304dc9b0_Ptr> _61917_pptr = (*((*this)._field_k))->_method_ptr();
	if ((!(jule::real(_61917_pptr)))) {
		_61858_ok = false;
		return _61858_ok;
	}
	jule::Ref<_1304dc9b0_Ptr> _62417_ptr = _61842_k->_method_ptr();
	_1304dc9b0_TypeKind* _62517_cpptr = (_61917_pptr->_field_elem).alloc;
	(*this)._field_k=(&(_62517_cpptr));
	_61858_ok = (*this)._method_annotate_kind(_62417_ptr->_field_elem);
	return _61858_ok;
}



inline jule::Bool _13032cf90_DynamicTypeAnnotation::_method_annotate_any(jule::Ref<_1304dc9b0_TypeKind> _63042_k) {
	jule::Bool _63058_ok = jule::Bool();
	jule::Str _63113_kind = (*((*this)._field_k))->_method_to_str();
	{
		auto &__julec_range_expr = (*this)._field_f->_field_decl->_field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _13032cf90_i = 0;
			jule::Ref<_1275d7180_GenericDecl> _13032cf90_g = *__julec_range_begin;
			_iter_begin_5145228704:;
			{
				if (_63113_kind != _13032cf90_g->_field_ident) {
					goto _iter_next_5145228704;
				}
				jule::Ref<_1304dc9b0_TypeKind> _63717_t = (*this)._field_f->_field_generics[static_cast<jule::Int>(_13032cf90_i)];
				{
					if (!(((!(jule::real(_63717_t)))))) { goto _case_end_5145234768; }
					_case_begin_5145234768:;
					{
						(*this)._method_push_generic(_63042_k,_13032cf90_i);
					}
					goto _match_end_5145234560;
					_case_end_5145234768:;
					if (!((_63717_t->_method_to_str() != _63042_k->_method_to_str()))) { goto _case_end_5145234880; }
					_case_begin_5145234880:;
					{
						_63058_ok = false;
						return _63058_ok;
					}
					goto _match_end_5145234560;
					_case_end_5145234880:;
					_match_end_5145234560:;
				}
				(*((*this)._field_k))->_field_kind=_63042_k->_field_kind;
				_63058_ok = true;
				return _63058_ok;
			}
			_iter_next_5145228704:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_13032cf90_i; _13032cf90_g = *__julec_range_begin; goto _iter_begin_5145228704; }
			_iter_end_5145228704:;
		}
	}
	_63058_ok = false;
	return _63058_ok;
}



inline jule::Bool _13032cf90_DynamicTypeAnnotation::_method_annotate_kind(jule::Ref<_1304dc9b0_TypeKind> _65443_k) {
	jule::Bool _65459_ok = jule::Bool();
	if (((*this)._field_k == nullptr) || ((*((*this)._field_k)) == nullptr)) {
		return _65459_ok;
	}
	{
		if (!(((*this)._method_annotate_any(_65443_k)))) { goto _case_end_5145246688; }
		_case_begin_5145246688:;
		{
			_65459_ok = true;
			return _65459_ok;
		}
		goto _match_end_5145245952;
		_case_end_5145246688:;
		if (!((jule::real(_65443_k->_method_prim())))) { goto _case_end_5145246800; }
		_case_begin_5145246800:;
		{
			_65459_ok = (*this)._method_annotate_prim(_65443_k);
			return _65459_ok;
		}
		goto _match_end_5145245952;
		_case_end_5145246800:;
		if (!((jule::real(_65443_k->_method_slc())))) { goto _case_end_5145247456; }
		_case_begin_5145247456:;
		{
			_65459_ok = (*this)._method_annotate_slc(_65443_k);
			return _65459_ok;
		}
		goto _match_end_5145245952;
		_case_end_5145247456:;
		if (!((jule::real(_65443_k->_method_map())))) { goto _case_end_5145247568; }
		_case_begin_5145247568:;
		{
			_65459_ok = (*this)._method_annotate_map(_65443_k);
			return _65459_ok;
		}
		goto _match_end_5145245952;
		_case_end_5145247568:;
		if (!((jule::real(_65443_k->_method_fnc())))) { goto _case_end_5145247680; }
		_case_begin_5145247680:;
		{
			_65459_ok = (*this)._method_annotate_fn(_65443_k);
			return _65459_ok;
		}
		goto _match_end_5145245952;
		_case_end_5145247680:;
		if (!((jule::real(_65443_k->_method_ptr())))) { goto _case_end_5145247792; }
		_case_begin_5145247792:;
		{
			_65459_ok = (*this)._method_annotate_ptr(_65443_k);
			return _65459_ok;
		}
		goto _match_end_5145245952;
		_case_end_5145247792:;
		_case_begin_5145244880:;
		{
			_65459_ok = false;
			return _65459_ok;
		}
		goto _match_end_5145245952;
		_case_end_5145244880:;
		_match_end_5145245952:;
	}
}



inline jule::Bool _13032cf90_DynamicTypeAnnotation::_method_annotate(void) {
	jule::Bool _67036_ok = jule::Bool();
	_1304dc9b0_TypeKind* _67117_pk = ((*this)._field_p->_field_kind).alloc;
	(*this)._field_k=(&(_67117_pk));
	_67036_ok = (*this)._method_annotate_kind((*this)._field_a->_field_kind);
	return _67036_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _13032cf90_DynamicTypeAnnotation &_Src) {
	_Stream << "DynamicTypeAnnotation{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "p:" << _Src._field_p << ", ";
	_Stream << "a:" << _Src._field_a << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "k:" << _Src._field_k;
	_Stream << "}";
	return _Stream;
}



inline void _13032cf90_StructLitChecker::_method_push_err(_127941de0_Token _89127_token,jule::Str _89141_key,jule::Slice<jule::Any> _89151_args) {
	(*this)._field_e->_method_push_err(_89127_token,_89141_key,_89151_args);
}



inline void _13032cf90_StructLitChecker::_method_push_match(jule::Ref<_127b2e960_FieldIns> _89533_f,jule::Ref<_13064b610_Data> _89551_d,_127941de0_Token _89561_error_token) {
	(*this)._field_args=append((*this)._field_args,jule::Slice<jule::Ref<_1279cf930_StructArgExprModel>>({jule::new_struct<_1279cf930_StructArgExprModel>(new( std::nothrow ) _1279cf930_StructArgExprModel(_89533_f,_89551_d->_field_model))}));
	
	(*this)._field_e->_field_s->_method_check_validity_for_init_expr(_89533_f->_field_decl->_field_mutable,false,_89533_f->_field_kind,_89551_d,_89561_error_token);
	(*this)._field_e->_field_s->_method_check_assign_type(_89533_f->_field_kind,_89551_d,_89561_error_token,false);
}



inline void _13032cf90_StructLitChecker::_method_check_pair(jule::Ref<_1275d7180_FieldExprPair> _90633_pair,jule::Slice<jule::Any> _90659_exprs) {
	jule::Ref<_127b2e960_FieldIns> _90817_f = (*this)._field_s->_method_find_field(_90633_pair->_field_field._field_kind);
	if ((!(jule::real(_90817_f)))) {
		(*this)._method_push_err(_90633_pair->_field_field,jule::Str("ident_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_90633_pair->_field_field._field_kind)}));
		return;
	}
	if ((!((*this)._field_e->_field_s->_method_is_accessible_define(_90817_f->_field_decl->_field_public,_90817_f->_field_decl->_field_token)))) {
		(*this)._method_push_err(_90633_pair->_field_field,jule::Str("ident_is_not_accessible", 23),jule::Slice<jule::Any>({jule::Any(_90633_pair->_field_field._field_kind)}));
	}
	_julec_label_dup_lookup:;
	{
		auto &__julec_range_expr = _90659_exprs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _13032cf90_expr = *__julec_range_begin;
			_iter_begin_5145482800:;
			{
				{
					auto &_match_expr{ _13032cf90_expr };
					if (!(_match_expr.type_is<jule::Ref<_1275d7180_FieldExprPair>>())) { goto _case_end_5145484000; }
					_case_begin_5145484000:;
					{
						jule::Ref<_1275d7180_FieldExprPair> _92325_dpair = _13032cf90_expr.operator jule::Ref<_1275d7180_FieldExprPair>();
						{
							if (!((_90633_pair == _92325_dpair))) { goto _case_end_5145487904; }
							_case_begin_5145487904:;
							{
								goto _iter_end_5145482800;
							}
							goto _match_end_5145487648;
							_case_end_5145487904:;
							if (!((_90633_pair->_field_field._field_kind == _92325_dpair->_field_field._field_kind))) { goto _case_end_5145488016; }
							_case_begin_5145488016:;
							{
								(*this)._method_push_err(_90633_pair->_field_field,jule::Str("already_has_expr", 16),jule::Slice<jule::Any>({jule::Any(_90633_pair->_field_field._field_kind)}));
								goto _iter_end_5145482800;
							}
							goto _match_end_5145487648;
							_case_end_5145488016:;
							_match_end_5145487648:;
						}
					}
					goto _match_end_5145483248;
					_case_end_5145484000:;
					_match_end_5145483248:;
				}
			}
			_iter_next_5145482800:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13032cf90_expr = *__julec_range_begin; goto _iter_begin_5145482800; }
			_iter_end_5145482800:;
		}
	}
	jule::Ref<_13064b610_Data> _93517_d = (*this)._field_e->_method_eval_expr_kind(_90633_pair->_field_expr);
	if ((!(jule::real(_93517_d)))) {
		return;
	}
	(*this)._method_push_match(_90817_f,_93517_d,_90633_pair->_field_field);
}



inline jule::Bool _13032cf90_StructLitChecker::_method_ready_exprs(jule::Slice<jule::Any> _94234_exprs) {
	jule::Bool _94317_ok = true;
	{
		auto &__julec_range_expr = _94234_exprs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _13032cf90_i = 0;
			jule::Any _13032cf90_expr = *__julec_range_begin;
			_iter_begin_5145501424:;
			{
				{
					auto &_match_expr{ _13032cf90_expr };
					if (!(_match_expr.type_is<jule::Ref<_1275d7180_KeyValPair>>())) { goto _case_end_5145503856; }
					_case_begin_5145503856:;
					{
						jule::Ref<_1275d7180_KeyValPair> _94725_pair = _13032cf90_expr.operator jule::Ref<_1275d7180_KeyValPair>();
						{
							auto &_match_expr{ _94725_pair->_field_key };
							if (!(_match_expr.type_is<jule::Ref<_1275d7180_IdentExpr>>())) { goto _case_end_5145509264; }
							goto _match_end_5145507104;
							_case_end_5145509264:;
							_case_begin_5145508016:;
							{
								(*this)._method_push_err(_94725_pair->_field_colon,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
								_94317_ok=false;
								goto _iter_next_5145501424;
							}
							goto _match_end_5145507104;
							_case_end_5145508016:;
							_match_end_5145507104:;
						}
						_94234_exprs[static_cast<jule::Int>(_13032cf90_i)]=jule::Any(jule::new_struct<_1275d7180_FieldExprPair>(new( std::nothrow ) _1275d7180_FieldExprPair(_94725_pair->_field_key.operator jule::Ref<_1275d7180_IdentExpr>()->_field_token,_94725_pair->_field_val)));
					}
					goto _match_end_5145503728;
					_case_end_5145503856:;
					_match_end_5145503728:;
				}
			}
			_iter_next_5145501424:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_13032cf90_i; _13032cf90_expr = *__julec_range_begin; goto _iter_begin_5145501424; }
			_iter_end_5145501424:;
		}
	}
	return _94317_ok;
}



inline void _13032cf90_StructLitChecker::_method_check(jule::Slice<jule::Any> _96828_exprs) {
	if (_96828_exprs.len() == 0LL) {
		return;
	}
	if ((!((*this)._method_ready_exprs(_96828_exprs)))) {
		return;
	}
	jule::Bool _97717_paired = false;
	{
		auto &__julec_range_expr = _96828_exprs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _13032cf90_i = 0;
			jule::Any _13032cf90_expr = *__julec_range_begin;
			_iter_begin_5145521104:;
			{
				{
					auto &_match_expr{ _13032cf90_expr };
					if (!(_match_expr.type_is<jule::Ref<_1275d7180_FieldExprPair>>())) { goto _case_end_5145524224; }
					_case_begin_5145524224:;
					{
						jule::Ref<_1275d7180_FieldExprPair> _98125_pair = _13032cf90_expr.operator jule::Ref<_1275d7180_FieldExprPair>();
						if ((_13032cf90_i > 0LL) && (!(_97717_paired))) {
							(*this)._method_push_err(_98125_pair->_field_field,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
						}
						_97717_paired=true;
						(*this)._method_check_pair(_98125_pair,_96828_exprs);
					}
					goto _match_end_5145522496;
					_case_end_5145524224:;
					if (!(_match_expr.type_is<jule::Ref<_1275d7180_Expr>>())) { goto _case_end_5145524336; }
					_case_begin_5145524336:;
					{
						jule::Ref<_1275d7180_Expr> _98925_e = _13032cf90_expr.operator jule::Ref<_1275d7180_Expr>();
						if (_97717_paired) {
							(*this)._method_push_err(_98925_e->_field_token,jule::Str("argument_must_target_to_field", 29),jule::Slice<jule::Any>({}));
						}
						if (_13032cf90_i >= (*this)._field_s->_field_fields.len()) {
							(*this)._method_push_err(_98925_e->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
							goto _iter_next_5145521104;
						}
						jule::Ref<_13064b610_Data> _99825_d = (*this)._field_e->_method_eval_expr_kind(_98925_e->_field_kind);
						if ((!(jule::real(_99825_d)))) {
							goto _iter_next_5145521104;
						}
						jule::Ref<_127b2e960_FieldIns> _100325_field = (*this)._field_s->_field_fields[static_cast<jule::Int>(_13032cf90_i)];
						(*this)._method_push_match(_100325_field,_99825_d,_98925_e->_field_token);
					}
					goto _match_end_5145522496;
					_case_end_5145524336:;
					_match_end_5145522496:;
				}
			}
			_iter_next_5145521104:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_13032cf90_i; _13032cf90_expr = *__julec_range_begin; goto _iter_begin_5145521104; }
			_iter_end_5145521104:;
		}
	}
	if ((!(_97717_paired))) {
		jule::I64 _101017_n = (*this)._field_s->_field_fields.len();
		jule::I64 _101121_diff = _101017_n - _96828_exprs.len();
		{
			if (!((_101121_diff <= 0LL))) { goto _case_end_5145549984; }
			_case_begin_5145549984:;
			{
				return;
			}
			goto _match_end_5145549792;
			_case_end_5145549984:;
			_match_end_5145549792:;
		}
		jule::Str _101721_idents = jule::Str("", 0);
		_iter_begin_5145548016:;
		if (!(_101121_diff > 0LL)) { goto _iter_end_5145548016; }
		{
			_101721_idents+=jule::Str(", ", 2) + (*this)._field_s->_field_fields[static_cast<jule::Int>(_101017_n - _101121_diff)]->_field_decl->_field_ident;
		}
		_iter_next_5145548016:;
		(_101121_diff)--;
		goto _iter_begin_5145548016;
		_iter_end_5145548016:;
		_101721_idents=_101721_idents.slice(static_cast<jule::Int>(2LL));
		(*this)._method_push_err((*this)._field_error_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(_101721_idents)}));
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _13032cf90_StructLitChecker &_Src) {
	_Stream << "StructLitChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1303533b0_Var> _13032cf90_RangeChecker::_method_build_var(jule::Ref<_1275d7180_VarDecl> _103628_decl) {
	jule::Ref<_1303533b0_Var> _103717_v = _127ff3480_build_var(_103628_decl);
	return _103717_v;
}



inline void _13032cf90_RangeChecker::_method_set_size_key(void) {
	if ((!(jule::real((*this)._field_rang->_field_key_a))) || _127941de0_is_ignore_ident((*this)._field_rang->_field_key_a->_field_ident)) {
		return;
	}
	(*this)._field_kind->_field_key_a=(*this)._method_build_var((*this)._field_rang->_field_key_a);
	(*this)._field_kind->_field_key_a->_field_kind=jule::new_struct<_1304dc9b0_TypeSymbol>(new( std::nothrow ) _1304dc9b0_TypeSymbol(jule::Ref<_1275d7180_TypeDecl>(),jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("int", 3))))));
}



inline void _13032cf90_RangeChecker::_method_check_slice(void) {
	(*this)._method_set_size_key();
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _127941de0_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ref<_1304dc9b0_Slc> _106017_slc = (*this)._field_d->_field_kind->_method_slc();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1304dc9b0_TypeSymbol>(new( std::nothrow ) _1304dc9b0_TypeSymbol(jule::Ref<_1275d7180_TypeDecl>(),_106017_slc->_field_elem));
	(*this)._field_sc->_field_s->_method_check_validity_for_init_expr((*this)._field_kind->_field_key_b->_field_mutable,(*this)._field_kind->_field_key_b->_field_reference,(*this)._field_kind->_field_key_b->_field_kind->_field_kind,(*this)._field_d,(*this)._field_rang->_field_in_token);
}



inline void _13032cf90_RangeChecker::_method_check_array(void) {
	(*this)._method_set_size_key();
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _127941de0_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ref<_1304dc9b0_Arr> _107717_arr = (*this)._field_d->_field_kind->_method_arr();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1304dc9b0_TypeSymbol>(new( std::nothrow ) _1304dc9b0_TypeSymbol(jule::Ref<_1275d7180_TypeDecl>(),_107717_arr->_field_elem));
	(*this)._field_sc->_field_s->_method_check_validity_for_init_expr((*this)._field_kind->_field_key_b->_field_mutable,(*this)._field_kind->_field_key_b->_field_reference,(*this)._field_kind->_field_key_b->_field_kind->_field_kind,(*this)._field_d,(*this)._field_rang->_field_in_token);
}



inline void _13032cf90_RangeChecker::_method_check_map_key_a(void) {
	if ((!(jule::real((*this)._field_rang->_field_key_a))) || _127941de0_is_ignore_ident((*this)._field_rang->_field_key_a->_field_ident)) {
		return;
	}
	jule::Ref<_1304dc9b0_Map> _109317_m = (*this)._field_d->_field_kind->_method_map();
	(*this)._field_kind->_field_key_a=(*this)._method_build_var((*this)._field_rang->_field_key_a);
	(*this)._field_kind->_field_key_a->_field_kind=jule::new_struct<_1304dc9b0_TypeSymbol>(new( std::nothrow ) _1304dc9b0_TypeSymbol(jule::Ref<_1275d7180_TypeDecl>(),_109317_m->_field_key));
	jule::Ref<_13064b610_Data> _109717_d = jule::new_ref<_13064b610_Data>((*this)._field_d.get());
	_109717_d->_field_kind=_109317_m->_field_key;
	(*this)._field_sc->_field_s->_method_check_validity_for_init_expr((*this)._field_kind->_field_key_a->_field_mutable,(*this)._field_kind->_field_key_a->_field_reference,(*this)._field_kind->_field_key_a->_field_kind->_field_kind,_109717_d,(*this)._field_rang->_field_in_token);
}



inline void _13032cf90_RangeChecker::_method_check_map_key_b(void) {
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _127941de0_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	jule::Ref<_1304dc9b0_Map> _111217_m = (*this)._field_d->_field_kind->_method_map();
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1304dc9b0_TypeSymbol>(new( std::nothrow ) _1304dc9b0_TypeSymbol(jule::Ref<_1275d7180_TypeDecl>(),_111217_m->_field_val));
	jule::Ref<_13064b610_Data> _111617_d = jule::new_ref<_13064b610_Data>((*this)._field_d.get());
	_111617_d->_field_kind=_111217_m->_field_val;
	(*this)._field_sc->_field_s->_method_check_validity_for_init_expr((*this)._field_kind->_field_key_b->_field_mutable,(*this)._field_kind->_field_key_b->_field_reference,(*this)._field_kind->_field_key_b->_field_kind->_field_kind,_111617_d,(*this)._field_rang->_field_in_token);
}



inline void _13032cf90_RangeChecker::_method_check_map(void) {
	(*this)._method_check_map_key_a();
	(*this)._method_check_map_key_b();
}



inline void _13032cf90_RangeChecker::_method_check_str(void) {
	(*this)._method_set_size_key();
	if ((!(jule::real((*this)._field_rang->_field_key_b))) || _127941de0_is_ignore_ident((*this)._field_rang->_field_key_b->_field_ident)) {
		return;
	}
	(*this)._field_kind->_field_key_b=(*this)._method_build_var((*this)._field_rang->_field_key_b);
	(*this)._field_kind->_field_key_b->_field_kind=jule::new_struct<_1304dc9b0_TypeSymbol>(new( std::nothrow ) _1304dc9b0_TypeSymbol(jule::Ref<_1275d7180_TypeDecl>(),jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("u8", 2))))));
}



inline jule::Bool _13032cf90_RangeChecker::_method_check(void) {
	if (jule::real((*this)._field_d->_field_kind->_method_ref())) {
		(*this)._field_d->_field_model=jule::Any(jule::new_struct<_1279cf930_ExplicitDerefExprModel>(new( std::nothrow ) _1279cf930_ExplicitDerefExprModel((*this)._field_d->_field_model)));
		(*this)._field_d->_field_kind=(*this)._field_d->_field_kind->_method_ref()->_field_elem;
	}
	{
		if (!((jule::real((*this)._field_d->_field_kind->_method_slc())))) { goto _case_end_5145659024; }
		_case_begin_5145659024:;
		{
			(*this)._method_check_slice();
			return true;
		}
		goto _match_end_5145658736;
		_case_end_5145659024:;
		if (!((jule::real((*this)._field_d->_field_kind->_method_arr())))) { goto _case_end_5145659136; }
		_case_begin_5145659136:;
		{
			(*this)._method_check_array();
			return true;
		}
		goto _match_end_5145658736;
		_case_end_5145659136:;
		if (!((jule::real((*this)._field_d->_field_kind->_method_map())))) { goto _case_end_5145659248; }
		_case_begin_5145659248:;
		{
			(*this)._method_check_map();
			return true;
		}
		goto _match_end_5145658736;
		_case_end_5145659248:;
		_match_end_5145658736:;
	}
	jule::Ref<_1304dc9b0_Prim> _116713_prim = (*this)._field_d->_field_kind->_method_prim();
	if (jule::real(_116713_prim) && _116713_prim->_method_is_str()) {
		(*this)._method_check_str();
		return true;
	}
	(*this)._field_sc->_field_s->_method_push_err((*this)._field_rang->_field_in_token,jule::Str("iter_range_require_enumerable_expr", 34),jule::Slice<jule::Any>({}));
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _13032cf90_RangeChecker &_Src) {
	_Stream << "RangeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "rang:" << _Src._field_rang << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "d:" << _Src._field_d;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _13064b610_Data::_method_is_nil(void) {
	return (*this)._field_kind->_method_is_nil();
}



inline jule::Bool _13064b610_Data::_method_is_void(void) {
	return (*this)._field_kind->_method_is_void();
}



inline jule::Bool _13064b610_Data::_method_is_const(void) {
	return jule::real((*this)._field_constant);
}







std::ostream &operator<<(std::ostream &_Stream, const _13064b610_Data &_Src) {
	_Stream << "Data{";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "cast_kind:" << _Src._field_cast_kind << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "lvalue:" << _Src._field_lvalue << ", ";
	_Stream << "variadiced:" << _Src._field_variadiced << ", ";
	_Stream << "is_rune:" << _Src._field_is_rune << ", ";
	_Stream << "model:" << _Src._field_model << ", ";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "constant:" << _Src._field_constant;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _13064b610_Value &_Src) {
	_Stream << "Value{";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline void _13064b610_Eval::_method_push_err(_127941de0_Token _29227_token,jule::Str _29241_key,jule::Slice<jule::Any> _29251_args) {
	(*this)._field_s->_field_errors=append((*this)._field_s->_field_errors,jule::Slice<_136e99d00_Log>({_1300a20d0_compiler_err(_29227_token,_29241_key,_29251_args)}));
}



inline jule::Bool _13064b610_Eval::_method_is_unsafe(void) {
	return (*this)._field_unsafety;
}



inline jule::Bool _13064b610_Eval::_method_is_global(void) {
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1300a20d0_Sema>>())) { goto _case_end_5145934400; }
		_case_begin_5145934400:;
		{
			return true;
		}
		goto _match_end_5145932528;
		_case_end_5145934400:;
		_case_begin_5145933312:;
		{
			return false;
		}
		goto _match_end_5145932528;
		_case_end_5145933312:;
		_match_end_5145932528:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_lit_nil(void) {
	jule::Ref<_130c83140_Const> _31117_constant = _130c83140_new_nil();
	return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),nullptr)),jule::Ref<_1304dc9b0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),_31117_constant,false,_31117_constant));
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_lit_str(jule::Ref<_1275d7180_LitExpr> _32222_lt) {
	jule::Str _32317_s = _32222_lt->_field_value.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(_32222_lt->_field_value.len() - 1LL));
	if (_127941de0_is_raw_str(_32222_lt->_field_value)) {
		_32317_s=_130df9c40_to_raw_str(static_cast<jule::Slice<jule::U8>>(_32317_s));
	} else {
		_32317_s=_130df9c40_to_str(static_cast<jule::Slice<jule::U8>>(_32317_s));
	}
	jule::Ref<_130c83140_Const> _32917_constant = _130c83140_new_str(_32317_s);
	return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("str", 3)))),jule::Ref<_1304dc9b0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),_32917_constant,false,_32917_constant));
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_lit_bool(jule::Ref<_1275d7180_LitExpr> _34323_lit) {
	jule::Ref<_130c83140_Const> _34417_constant = _130c83140_new_bool(_34323_lit->_field_value == jule::Str("true", 4));
	return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1304dc9b0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),_34417_constant,false,_34417_constant));
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_lit_rune(jule::Ref<_1275d7180_LitExpr> _35723_l) {
	
	
	jule::Str _36113_lt = _35723_l->_field_value.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(_35723_l->_field_value.len() - 1LL));
	jule::I32 _36213_r = _130df9c40_to_rune(static_cast<jule::Slice<jule::U8>>(_36113_lt));
	jule::Ref<_13064b610_Data> _36317_data = jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::Ref<_1304dc9b0_TypeKind>(),jule::Ref<_1304dc9b0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,_130c83140_new_i64(static_cast<jule::I64>(_36213_r))));
	jule::Bool _37017_is_byte;
	std::tie(std::ignore,_37017_is_byte) = _130df9c40_is_byte_lit(_35723_l->_field_value);
	if (_37017_is_byte) {
		_36317_data->_field_kind=jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("u8", 2))));
	} else {
		_36317_data->_field_kind=jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("i32", 3))));
	}
	_36317_data->_field_model=jule::Any(jule::new_struct<_1279cf930_RuneExprModel>(new( std::nothrow ) _1279cf930_RuneExprModel(_36213_r)));
	_36317_data->_field_is_rune=true;
	return _36317_data;
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_lit_float(jule::Ref<_1275d7180_LitExpr> _38624_l) {
	
	jule::F64 _38914_f;
	std::tie(_38914_f,std::ignore) = _136fb03b0_parse_float(_38624_l->_field_value,64LL);
	jule::Ref<_130c83140_Const> _39017_constant = _130c83140_new_f64(_38914_f);
	return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("f64", 3)))),jule::Ref<_1304dc9b0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),_39017_constant,false,_39017_constant));
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_lit_int(jule::Ref<_1275d7180_LitExpr> _40422_l) {
	
	jule::Str _40717_lit = _40422_l->_field_value;
	jule::Int _40817_base = 0LL;
	{
		if (!((_40717_lit.has_prefix(jule::Str("0x", 2))))) { goto _case_end_5145996880; }
		_case_begin_5145996880:;
		{
			_40717_lit=_40717_lit.slice(static_cast<jule::Int>(2LL));
			_40817_base=16LL;
		}
		goto _match_end_5145995632;
		_case_end_5145996880:;
		if (!((_40717_lit.has_prefix(jule::Str("0b", 2))))) { goto _case_end_5145997024; }
		_case_begin_5145997024:;
		{
			_40717_lit=_40717_lit.slice(static_cast<jule::Int>(2LL));
			_40817_base=2LL;
		}
		goto _match_end_5145995632;
		_case_end_5145997024:;
		if (!(((_40717_lit[static_cast<jule::Int>(0LL)] == '0') && (_40717_lit.len() > 1LL)))) { goto _case_end_5145997264; }
		_case_begin_5145997264:;
		{
			_40717_lit=_40717_lit.slice(static_cast<jule::Int>(1LL));
			_40817_base=8LL;
		}
		goto _match_end_5145995632;
		_case_end_5145997264:;
		_case_begin_5145996080:;
		{
			_40817_base=10LL;
		}
		goto _match_end_5145995632;
		_case_end_5145996080:;
		_match_end_5145995632:;
	}
	jule::Ref<_13064b610_Data> _42717_d = jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::Ref<_1304dc9b0_TypeKind>(),jule::Ref<_1304dc9b0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_130c83140_Const>()));
	jule::Any _43317_value = jule::Any(nullptr);
	jule::I64 _43414_sig;
	jule::Int _43419_err;
	std::tie(_43414_sig,_43419_err) = _126edcdf0_parse_int(_40717_lit,_40817_base,64LL);
	if (_43419_err == 0LLU) {
		_43317_value=jule::Any(_43414_sig);
		_42717_d->_field_constant=_130c83140_new_i64(_43414_sig);
	} else {
		jule::U64 _43918_unsig;
		std::tie(_43918_unsig,std::ignore) = _126edcdf0_parse_uint(_40717_lit,_40817_base,64LL);
		_42717_d->_field_constant=_130c83140_new_u64(_43918_unsig);
		_43317_value=jule::Any(_43918_unsig);
	}
	_42717_d->_field_kind=jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(_13064b610_kind_by_bitsize(_43317_value))));
	_13064b610_normalize_bitsize(_42717_d);
	_42717_d->_field_model=jule::Any(_42717_d->_field_constant);
	return _42717_d;
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_lit_num(jule::Ref<_1275d7180_LitExpr> _45422_l) {
	{
		if (!((_127941de0_is_float(_45422_l->_field_value)))) { goto _case_end_5146028688; }
		_case_begin_5146028688:;
		{
			return (*this)._method_lit_float(_45422_l);
		}
		goto _match_end_5146026960;
		_case_end_5146028688:;
		_case_begin_5146027168:;
		{
			return (*this)._method_lit_int(_45422_l);
		}
		goto _match_end_5146026960;
		_case_end_5146027168:;
		_match_end_5146026960:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_lit(jule::Ref<_1275d7180_LitExpr> _46123_lit) {
	{
		if (!((_46123_lit->_method_is_nil()))) { goto _case_end_5146035136; }
		_case_begin_5146035136:;
		{
			return (*this)._method_lit_nil();
		}
		goto _match_end_5146033360;
		_case_end_5146035136:;
		if (!((_127941de0_is_str(_46123_lit->_field_value)))) { goto _case_end_5146035248; }
		_case_begin_5146035248:;
		{
			return (*this)._method_lit_str(_46123_lit);
		}
		goto _match_end_5146033360;
		_case_end_5146035248:;
		if (!((_127941de0_is_bool(_46123_lit->_field_value)))) { goto _case_end_5146034880; }
		_case_begin_5146034880:;
		{
			return (*this)._method_lit_bool(_46123_lit);
		}
		goto _match_end_5146033360;
		_case_end_5146034880:;
		if (!((_127941de0_is_rune(_46123_lit->_field_value)))) { goto _case_end_5146034992; }
		_case_begin_5146034992:;
		{
			return (*this)._method_lit_rune(_46123_lit);
		}
		goto _match_end_5146033360;
		_case_end_5146034992:;
		if (!((_127941de0_is_num(_46123_lit->_field_value)))) { goto _case_end_5146033872; }
		_case_begin_5146033872:;
		{
			return (*this)._method_lit_num(_46123_lit);
		}
		goto _match_end_5146033360;
		_case_end_5146033872:;
		_case_begin_5146033568:;
		{
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5146033360;
		_case_end_5146033568:;
		_match_end_5146033360:;
	}
}



inline jule::Any _13064b610_Eval::_method_find_builtins(jule::Str _47232_ident) {
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1300a4650_ImportInfo>>())) { goto _case_end_5146047536; }
		_case_begin_5146047536:;
		{
			jule::Any _47521_def = _13064b610_find_builtins_import(_47232_ident,(*this)._field_lookup.operator jule::Ref<_1300a4650_ImportInfo>());
			if (_47521_def != nullptr) {
				return _47521_def;
			}
		}
		goto _match_end_5146046736;
		_case_end_5146047536:;
		if (!(_match_expr.type_is<jule::Ref<_1300a20d0_Sema>>())) { goto _case_end_5146047712; }
		_case_begin_5146047712:;
		{
			jule::Any _48121_def = _13064b610_find_builtins_sema(_47232_ident,(*this)._field_lookup.operator jule::Ref<_1300a20d0_Sema>());
			if (_48121_def != nullptr) {
				return _48121_def;
			}
		}
		goto _match_end_5146046736;
		_case_end_5146047712:;
		if (!(_match_expr.type_is<jule::Ref<_1300a11b0_ScopeChecker>>())) { goto _case_end_5146047824; }
		_case_begin_5146047824:;
		{
			jule::Any _48721_def = _13064b610_find_builtins_sema(_47232_ident,(*this)._field_lookup.operator jule::Ref<_1300a11b0_ScopeChecker>()->_field_s);
			if (_48721_def != nullptr) {
				return _48721_def;
			}
		}
		goto _match_end_5146046736;
		_case_end_5146047824:;
		_match_end_5146046736:;
	}
	return _130b8f5f0_find_builtin_def(_47232_ident);
}



inline jule::Any _13064b610_Eval::_method_get_def(jule::Str _49626_ident,jule::Bool _49638_cpp_linked) {
	if ((!(_49638_cpp_linked))) {
		jule::Ref<_13009ed30_Enum> _49821_enm = (*this)._field_lookup.get()._method_find_enum(_49626_ident);
		if (jule::real(_49821_enm)) {
			return _49821_enm;
		}
	}
	jule::Ref<_1303533b0_Var> _50417_v = (*this)._field_lookup.get()._method_find_var(_49626_ident,_49638_cpp_linked);
	if (jule::real(_50417_v)) {
		return _50417_v;
	}
	jule::Ref<_127ed52e0_Fn> _50917_f = (*this)._field_lookup.get()._method_find_fn(_49626_ident,_49638_cpp_linked);
	if (jule::real(_50917_f)) {
		return _50917_f;
	}
	jule::Ref<_127b2e960_Struct> _51417_s = (*this)._field_lookup.get()._method_find_struct(_49626_ident,_49638_cpp_linked);
	if (jule::real(_51417_s)) {
		return _51417_s;
	}
	jule::Ref<_1304dc9b0_TypeAlias> _51917_ta = (*this)._field_lookup.get()._method_find_type_alias(_49626_ident,_49638_cpp_linked);
	if (jule::real(_51917_ta)) {
		return _51917_ta;
	}
	return (*this)._method_find_builtins(_49626_ident);
}



inline void _13064b610_Eval::_method_push_reference(jule::Ref<_127ff3480_ReferenceStack> _52737_references) {
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1300a11b0_ScopeChecker>>())) { goto _case_end_5146092416; }
		_case_begin_5146092416:;
		{
			jule::Ref<_1300a11b0_ScopeChecker> _53021_sc = (*this)._field_lookup.operator jule::Ref<_1300a11b0_ScopeChecker>()->_method_get_root();
			if ((!(_52737_references->_method_exist_1(_53021_sc->_field_owner->_field_decl)))) {
				_52737_references->_method_push(jule::Any(_53021_sc->_field_owner->_field_decl));
			}
		}
		goto _match_end_5146086048;
		_case_end_5146092416:;
		_case_begin_5146086816:;
		{
			if (jule::real((*this)._field_owner) && (!(_52737_references->_method_exist_0((*this)._field_owner)))) {
				_52737_references->_method_push(jule::Any((*this)._field_owner));
			}
		}
		goto _match_end_5146086048;
		_case_end_5146086816:;
		_match_end_5146086048:;
	}
}



inline void _13064b610_Eval::_method_push_reference_to_fn(jule::Ref<_127ed52e0_Fn> _54243_f) {
	(*this)._method_push_reference(_54243_f->_field_references);
}



inline void _13064b610_Eval::_method_push_reference_to_var(jule::Ref<_1303533b0_Var> _54644_v) {
	if ((!(jule::real(_54644_v->_field_references)))) {
		return;
	}
	(*this)._method_push_reference(_54644_v->_field_references);
}



inline void _13064b610_Eval::_method_push_reference_to_struct(jule::Ref<_127b2e960_Struct> _55447_s) {
	(*this)._method_push_reference(_55447_s->_field_references);
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_enum(jule::Ref<_13009ed30_Enum> _55828_enm,_127941de0_Token _55840_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_55828_enm->_field_public,_55828_enm->_field_token)))) {
		(*this)._method_push_err(_55840_error_token,jule::Str("ident_is_not_accessible", 23),jule::Slice<jule::Any>({jule::Any(_55828_enm->_field_ident)}));
		return jule::new_ref<_13064b610_Data>();
	}
	return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_55828_enm)),jule::Ref<_1304dc9b0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),true,jule::new_ref<_130c83140_Const>()));
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_struct(jule::Ref<_127b2e960_StructIns> _57534_s,_127941de0_Token _57549_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_57534_s->_field_decl->_field_public,_57534_s->_field_decl->_field_token)))) {
		(*this)._method_push_err(_57549_error_token,jule::Str("ident_is_not_accessible", 23),jule::Slice<jule::Any>({jule::Any(_57534_s->_field_decl->_field_ident)}));
		return jule::new_ref<_13064b610_Data>();
	}
	return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_57534_s)),jule::Ref<_1304dc9b0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),_57534_s,true,jule::new_ref<_130c83140_Const>()));
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_fn_ins(jule::Ref<_127ed52e0_FnIns> _59330_f) {
	return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_59330_f)),jule::Ref<_1304dc9b0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),_59330_f,false,jule::new_ref<_130c83140_Const>()));
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_fn(jule::Ref<_127ed52e0_Fn> _60630_f,_127941de0_Token _60638_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_60630_f->_field_public,_60630_f->_field_token)))) {
		(*this)._method_push_err(_60638_error_token,jule::Str("ident_is_not_accessible", 23),jule::Slice<jule::Any>({jule::Any(_60630_f->_field_ident)}));
		return jule::new_ref<_13064b610_Data>();
	}
	(*this)._method_push_reference_to_fn(_60630_f);
	jule::Ref<_127ed52e0_FnIns> _61417_ins = _60630_f->_method_instance();
	return (*this)._method_eval_fn_ins(_61417_ins);
}



inline jule::Bool _13064b610_Eval::_method_check_illegal_cycles(jule::Ref<_1303533b0_Var> _62143_v,_127941de0_Token _62152_decl_token) {
	jule::Bool _62173_ok = jule::Bool();
	if ((!(jule::real((*this)._field_owner)))) {
		_62173_ok = true;
		return _62173_ok;
	}
	if (((*this)._field_owner).alloc == (_62143_v).alloc) {
		(*this)._method_push_err((*this)._field_owner->_field_token,jule::Str("illegal_cycle_refers_itself", 27),jule::Slice<jule::Any>({jule::Any((*this)._field_owner->_field_ident)}));
		_62173_ok = false;
		return _62173_ok;
	}
	
	jule::Str _63517_message = jule::Str("", 0);
	jule::Fn<void(jule::Ref<_1303533b0_Var>,jule::Ref<_1303533b0_Var>)> _63713_push = jule::Fn<void(jule::Ref<_1303533b0_Var>,jule::Ref<_1303533b0_Var>)>([=](jule::Ref<_1303533b0_Var> _63723_v1,jule::Ref<_1303533b0_Var> _63733_v2) mutable -> void {
		jule::Str _63817_refers_to = _136e8b750_errorf(jule::Str("refers_to", 9),jule::Slice<jule::Any>({jule::Any(_63723_v1->_field_ident),jule::Any(_63733_v2->_field_ident)}));
		_63517_message=((_127ff3480_str_repeat(jule::Str(" ", 1),4LL) + _63817_refers_to) + jule::Str("\n", 1)) + _63517_message;
	});
	jule::Fn<jule::Bool(jule::Ref<_1303533b0_Var>)> _64317_check_cross = jule::Fn<jule::Bool(jule::Ref<_1303533b0_Var>)>();
	_64317_check_cross=jule::Fn<jule::Bool(jule::Ref<_1303533b0_Var>)>([=](jule::Ref<_1303533b0_Var> _64426_v) mutable -> jule::Bool {
		{
			auto &__julec_range_expr = _64426_v->_field_depends;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_1303533b0_Var> _13064b610_d = *__julec_range_begin;
				_iter_begin_5146196528:;
				{
					if (_13064b610_d == (*this)._field_owner) {
						_63713_push(_64426_v,_13064b610_d);
						return false;
					}
					if ((!(_64317_check_cross(_13064b610_d)))) {
						_63713_push(_64426_v,_13064b610_d);
						return false;
					}
				}
				_iter_next_5146196528:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _13064b610_d = *__julec_range_begin; goto _iter_begin_5146196528; }
				_iter_end_5146196528:;
			}
		}
		return true;
	});
	if ((!(_64317_check_cross(_62143_v)))) {
		jule::Str _66121_err_msg = _63517_message;
		_63517_message=jule::Str("", 0);
		_63713_push((*this)._field_owner,_62143_v);
		_66121_err_msg=_66121_err_msg + _63517_message;
		(*this)._method_push_err(_62152_decl_token,jule::Str("illegal_cross_cycle", 19),jule::Slice<jule::Any>({jule::Any(_66121_err_msg)}));
		_62173_ok = false;
		return _62173_ok;
	}
	(*this)._field_owner->_field_depends=append((*this)._field_owner->_field_depends,jule::Slice<jule::Ref<_1303533b0_Var>>({_62143_v}));
	_62173_ok = true;
	return _62173_ok;
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_var(jule::Ref<_1303533b0_Var> _67331_v,_127941de0_Token _67340_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_67331_v->_field_public,_67331_v->_field_token)))) {
		(*this)._method_push_err(_67340_error_token,jule::Str("ident_is_not_accessible", 23),jule::Slice<jule::Any>({jule::Any(_67331_v->_field_ident)}));
		return jule::new_ref<_13064b610_Data>();
	}
	_67331_v->_field_used=true;
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1300a20d0_Sema>>())) { goto _case_end_5146219904; }
		_case_begin_5146219904:;
		{
			jule::Bool _68417_ok = (*this)._method_check_illegal_cycles(_67331_v,_67340_error_token);
			if ((!(_68417_ok))) {
				return jule::new_ref<_13064b610_Data>();
			}
		}
		goto _match_end_5146218480;
		_case_end_5146219904:;
		_match_end_5146218480:;
	}
	(*this)._method_push_reference_to_var(_67331_v);
	if ((!(_67331_v->_field_cpp_linked)) && ((!(jule::real(_67331_v->_field_value))) || (!(jule::real(_67331_v->_field_value->_field_data))))) {
		if (_67331_v->_field_constant) {
			(*this)._field_s->_method_check_type_var(_67331_v,(*this)._field_s);
			if ((!(jule::real(_67331_v->_field_value->_field_data)))) {
				return jule::new_ref<_13064b610_Data>();
			}
		}
	}
	if ((!(jule::real(_67331_v->_field_kind))) || (!(jule::real(_67331_v->_field_kind->_field_kind)))) {
		return jule::new_ref<_13064b610_Data>();
	}
	jule::Ref<_13064b610_Data> _70717_d = jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(_67331_v->_field_kind->_field_kind->_method_clone(),jule::Ref<_1304dc9b0_TypeKind>(),_67331_v->_field_mutable,_67331_v->_field_reference,(!(_67331_v->_field_constant)),jule::Bool(),jule::Bool(),_67331_v,false,jule::Ref<_130c83140_Const>()));
	if (((!(_67331_v->_field_cpp_linked)) && _67331_v->_method_is_initialized()) && jule::real(_67331_v->_field_value->_field_data)) {
		_70717_d->_field_is_rune=_67331_v->_field_value->_field_data->_field_is_rune;
	}
	if (_67331_v->_field_constant) {
		_70717_d->_field_constant=jule::new_ref<_130c83140_Const>(_67331_v->_field_value->_field_data->_field_constant.get());
		_70717_d->_field_model=jule::Any(_70717_d->_field_constant);
	}
	if (jule::real(_70717_d->_field_kind->_method_fnc())) {
		jule::Ref<_127ed52e0_FnIns> _72621_f = _70717_d->_field_kind->_method_fnc();
		if (jule::real(_72621_f->_field_decl)) {
			_72621_f->_field_decl->_field_ident=_67331_v->_field_ident;
		}
	}
	return _70717_d;
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_type_alias(jule::Ref<_1304dc9b0_TypeAlias> _73738_ta,_127941de0_Token _73754_error_token) {
	if ((!((*this)._field_s->_method_is_accessible_define(_73738_ta->_field_public,_73738_ta->_field_token)))) {
		(*this)._method_push_err(_73754_error_token,jule::Str("ident_is_not_accessible", 23),jule::Slice<jule::Any>({jule::Any(_73738_ta->_field_ident)}));
		return jule::new_ref<_13064b610_Data>();
	}
	_73738_ta->_field_used=true;
	jule::Trait<_1304dc9b0_Kind> _74517_kind = _73738_ta->_field_kind->_field_kind->_field_kind;
	{
		auto &_match_expr{ _74517_kind };
		if (!(_match_expr.type_is<jule::Ref<_127b2e960_StructIns>>())) { goto _case_end_5146267760; }
		_case_begin_5146267760:;
		{
			return (*this)._method_eval_struct(_74517_kind.operator jule::Ref<_127b2e960_StructIns>(),_73754_error_token);
		}
		goto _match_end_5146260384;
		_case_end_5146267760:;
		if (!(_match_expr.type_is<jule::Ref<_13009ed30_Enum>>())) { goto _case_end_5146266912; }
		_case_begin_5146266912:;
		{
			return (*this)._method_eval_enum(_74517_kind.operator jule::Ref<_13009ed30_Enum>(),_73754_error_token);
		}
		goto _match_end_5146260384;
		_case_end_5146266912:;
		_case_begin_5146260640:;
		{
			jule::Ref<_13064b610_Data> _75421_d = jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(_73738_ta->_field_kind->_field_kind->_method_clone(),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),true,jule::Ref<_130c83140_Const>()));
			_75421_d->_field_model=jule::Any(_75421_d->_field_kind);
			return _75421_d;
		}
		goto _match_end_5146260384;
		_case_end_5146260640:;
		_match_end_5146260384:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_def(jule::Any _76331_def,_127941de0_Token _76341_ident) {
	{
		auto &_match_expr{ _76331_def };
		if (!(_match_expr.type_is<jule::Ref<_1303533b0_Var>>())) { goto _case_end_5146279360; }
		_case_begin_5146279360:;
		{
			return (*this)._method_eval_var(_76331_def.operator jule::Ref<_1303533b0_Var>(),_76341_ident);
		}
		goto _match_end_5146274816;
		_case_end_5146279360:;
		if (!(_match_expr.type_is<jule::Ref<_13009ed30_Enum>>())) { goto _case_end_5146279472; }
		_case_begin_5146279472:;
		{
			return (*this)._method_eval_enum(_76331_def.operator jule::Ref<_13009ed30_Enum>(),_76341_ident);
		}
		goto _match_end_5146274816;
		_case_end_5146279472:;
		if (!(_match_expr.type_is<jule::Ref<_127b2e960_Struct>>())) { goto _case_end_5146275712; }
		_case_begin_5146275712:;
		{
			return (*this)._method_eval_struct(_76331_def.operator jule::Ref<_127b2e960_Struct>()->_method_instance(),_76341_ident);
		}
		goto _match_end_5146274816;
		_case_end_5146275712:;
		if (!(_match_expr.type_is<jule::Ref<_127ed52e0_Fn>>())) { goto _case_end_5146275824; }
		_case_begin_5146275824:;
		{
			return (*this)._method_eval_fn(_76331_def.operator jule::Ref<_127ed52e0_Fn>(),_76341_ident);
		}
		goto _match_end_5146274816;
		_case_end_5146275824:;
		if (!(_match_expr.type_is<jule::Ref<_127ed52e0_FnIns>>())) { goto _case_end_5146275936; }
		_case_begin_5146275936:;
		{
			return (*this)._method_eval_fn_ins(_76331_def.operator jule::Ref<_127ed52e0_FnIns>());
		}
		goto _match_end_5146274816;
		_case_end_5146275936:;
		if (!(_match_expr.type_is<jule::Ref<_1304dc9b0_TypeAlias>>())) { goto _case_end_5146279680; }
		_case_begin_5146279680:;
		{
			return (*this)._method_eval_type_alias(_76331_def.operator jule::Ref<_1304dc9b0_TypeAlias>(),_76341_ident);
		}
		goto _match_end_5146274816;
		_case_end_5146279680:;
		_case_begin_5146274912:;
		{
			(*this)._method_push_err(_76341_ident,jule::Str("ident_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_76341_ident._field_kind)}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5146274816;
		_case_end_5146274912:;
		_match_end_5146274816:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_ident(jule::Ref<_1275d7180_IdentExpr> _78929_ident) {
	jule::Any _79017_def = (*this)._method_get_def(_78929_ident->_field_ident,_78929_ident->_field_cpp_linked);
	return (*this)._method_eval_def(_79017_def,_78929_ident->_field_token);
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_unary_minus(jule::Ref<_13064b610_Data> _79435_d) {
	jule::Ref<_1304dc9b0_Prim> _79513_t = _79435_d->_field_kind->_method_prim();
	if ((!(jule::real(_79513_t))) || (!(_130d7f700_is_num(_79513_t->_method_to_str())))) {
		return jule::new_ref<_13064b610_Data>();
	}
	if (_79435_d->_method_is_const()) {
		{
			if (!((_79435_d->_field_constant->_method_is_f64()))) { goto _case_end_5146305584; }
			_case_begin_5146305584:;
			{
				_79435_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_79435_d->_field_constant->_method_read_f64()))));
			}
			goto _match_end_5146305328;
			_case_end_5146305584:;
			if (!((_79435_d->_field_constant->_method_is_i64()))) { goto _case_end_5146305696; }
			_case_begin_5146305696:;
			{
				_79435_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_79435_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_5146305328;
			_case_end_5146305696:;
			if (!((_79435_d->_field_constant->_method_is_u64()))) { goto _case_end_5146305808; }
			_case_begin_5146305808:;
			{
				_79435_d->_field_constant->_method_set_f64(static_cast<jule::F64>((-(_79435_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_5146305328;
			_case_end_5146305808:;
			_match_end_5146305328:;
		}
		_13064b610_normalize_type(_79435_d);
	}
	_79435_d->_field_lvalue=false;
	_79435_d->_field_model=jule::Any(jule::new_struct<_1279cf930_UnaryExprModel>(new( std::nothrow ) _1279cf930_UnaryExprModel(_79435_d->_field_model,jule::Str("-", 1))));
	return _79435_d;
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_unary_plus(jule::Ref<_13064b610_Data> _81734_d) {
	jule::Ref<_1304dc9b0_Prim> _81813_t = _81734_d->_field_kind->_method_prim();
	if ((!(jule::real(_81813_t))) || (!(_130d7f700_is_num(_81813_t->_method_to_str())))) {
		return jule::new_ref<_13064b610_Data>();
	}
	if (_81734_d->_method_is_const()) {
		{
			if (!((_81734_d->_field_constant->_method_is_f64()))) { goto _case_end_5146328000; }
			_case_begin_5146328000:;
			{
				_81734_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_81734_d->_field_constant->_method_read_f64()))));
			}
			goto _match_end_5146327744;
			_case_end_5146328000:;
			if (!((_81734_d->_field_constant->_method_is_i64()))) { goto _case_end_5146328112; }
			_case_begin_5146328112:;
			{
				_81734_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_81734_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_5146327744;
			_case_end_5146328112:;
			if (!((_81734_d->_field_constant->_method_is_u64()))) { goto _case_end_5146328224; }
			_case_begin_5146328224:;
			{
				_81734_d->_field_constant->_method_set_f64(static_cast<jule::F64>((+(_81734_d->_field_constant->_method_as_f64()))));
			}
			goto _match_end_5146327744;
			_case_end_5146328224:;
			_match_end_5146327744:;
		}
		_13064b610_normalize_type(_81734_d);
	}
	_81734_d->_field_lvalue=false;
	_81734_d->_field_model=jule::Any(jule::new_struct<_1279cf930_UnaryExprModel>(new( std::nothrow ) _1279cf930_UnaryExprModel(_81734_d->_field_model,jule::Str("+", 1))));
	return _81734_d;
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_unary_caret(jule::Ref<_13064b610_Data> _84035_d) {
	jule::Ref<_1304dc9b0_Prim> _84113_t = _84035_d->_field_kind->_method_prim();
	if ((!(jule::real(_84113_t))) || (!(_130d7f700_is_int(_84113_t->_method_to_str())))) {
		return jule::new_ref<_13064b610_Data>();
	}
	if (_84035_d->_method_is_const()) {
		{
			if (!((_84035_d->_field_constant->_method_is_i64()))) { goto _case_end_5146349744; }
			_case_begin_5146349744:;
			{
				_84035_d->_field_constant->_method_set_i64(static_cast<jule::I64>((~(_84035_d->_field_constant->_method_read_i64()))));
			}
			goto _match_end_5146349504;
			_case_end_5146349744:;
			if (!((_84035_d->_field_constant->_method_is_u64()))) { goto _case_end_5146349856; }
			_case_begin_5146349856:;
			{
				_84035_d->_field_constant->_method_set_u64(static_cast<jule::U64>((~(_84035_d->_field_constant->_method_read_u64()))));
			}
			goto _match_end_5146349504;
			_case_end_5146349856:;
			_match_end_5146349504:;
		}
	}
	_84035_d->_field_lvalue=false;
	_84035_d->_field_model=jule::Any(jule::new_struct<_1279cf930_UnaryExprModel>(new( std::nothrow ) _1279cf930_UnaryExprModel(_84035_d->_field_model,jule::Str("^", 1))));
	return _84035_d;
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_unary_excl(jule::Ref<_13064b610_Data> _86434_d) {
	jule::Ref<_1304dc9b0_Prim> _86513_t = _86434_d->_field_kind->_method_prim();
	if ((!(jule::real(_86513_t))) || (!(_86513_t->_method_is_bool()))) {
		return jule::new_ref<_13064b610_Data>();
	}
	if (_86434_d->_method_is_const()) {
		{
			if (!((_86434_d->_field_constant->_method_is_bool()))) { goto _case_end_5146366992; }
			_case_begin_5146366992:;
			{
				_86434_d->_field_constant->_method_set_bool((!(_86434_d->_field_constant->_method_read_bool())));
			}
			goto _match_end_5146366768;
			_case_end_5146366992:;
			_match_end_5146366768:;
		}
	}
	_86434_d->_field_lvalue=false;
	_86434_d->_field_model=jule::Any(jule::new_struct<_1279cf930_UnaryExprModel>(new( std::nothrow ) _1279cf930_UnaryExprModel(_86434_d->_field_model,jule::Str("!", 1))));
	return _86434_d;
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_unary_star(jule::Ref<_13064b610_Data> _88538_d,_127941de0_Token _88548_op) {
	if ((!((*this)._method_is_unsafe()))) {
		(*this)._method_push_err(_88548_op,jule::Str("unsafe_behavior_at_out_of_unsafe_scope", 38),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_1304dc9b0_Ptr> _89017_t = _88538_d->_field_kind->_method_ptr();
	if ((!(jule::real(_89017_t))) || _89017_t->_method_is_unsafe()) {
		return jule::new_ref<_13064b610_Data>();
	}
	jule::drop(_88538_d->_field_constant);
	_88538_d->_field_lvalue=true;
	_88538_d->_field_kind=_89017_t->_field_elem;
	_88538_d->_field_model=jule::Any(jule::new_struct<_1279cf930_UnaryExprModel>(new( std::nothrow ) _1279cf930_UnaryExprModel(_88538_d->_field_model,jule::Str("*", 1))));
	return _88538_d;
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_unary_amper(jule::Ref<_13064b610_Data> _90435_d) {
	{
		auto &_match_expr{ _90435_d->_field_model };
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_StructLitExprModel>>())) { goto _case_end_5146402784; }
		_case_begin_5146402784:;
		{
			jule::Ref<_1279cf930_StructLitExprModel> _90721_lit = _90435_d->_field_model.operator jule::Ref<_1279cf930_StructLitExprModel>();
			_90435_d->_field_kind=jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_1304dc9b0_Ref>(new( std::nothrow ) _1304dc9b0_Ref(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_90721_lit->_field_strct))))));
			_90435_d->_field_model=jule::Any(jule::new_struct<_1279cf930_AllocStructLitExprModel>(new( std::nothrow ) _1279cf930_AllocStructLitExprModel(_90721_lit)));
		}
		goto _match_end_5146389936;
		_case_end_5146402784:;
		_case_begin_5146390752:;
		{
			{
				if (!((jule::real(_90435_d->_field_kind->_method_ref())))) { goto _case_end_5146393104; }
				_case_begin_5146393104:;
				{
					_90435_d->_field_kind=jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_1304dc9b0_Ptr>(new( std::nothrow ) _1304dc9b0_Ptr(_90435_d->_field_kind->_method_ref()->_field_elem->_method_clone()))));
					_90435_d->_field_model=jule::Any(jule::new_struct<_1279cf930_GetRefPtrExprModel>(new( std::nothrow ) _1279cf930_GetRefPtrExprModel(_90435_d->_field_model)));
				}
				goto _match_end_5146392096;
				_case_end_5146393104:;
				if (!((_1304dc9b0_can_get_ptr(_90435_d)))) { goto _case_end_5146393888; }
				_case_begin_5146393888:;
				{
					_90435_d->_field_kind=jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_1304dc9b0_Ptr>(new( std::nothrow ) _1304dc9b0_Ptr(_90435_d->_field_kind->_method_clone()))));
					_90435_d->_field_model=jule::Any(jule::new_struct<_1279cf930_UnaryExprModel>(new( std::nothrow ) _1279cf930_UnaryExprModel(_90435_d->_field_model,jule::Str("&", 1))));
				}
				goto _match_end_5146392096;
				_case_end_5146393888:;
				_case_begin_5146392288:;
				{
					jule::drop(_90435_d);
				}
				goto _match_end_5146392096;
				_case_end_5146392288:;
				_match_end_5146392096:;
			}
		}
		goto _match_end_5146389936;
		_case_end_5146390752:;
		_match_end_5146389936:;
	}
	if (jule::real(_90435_d)) {
		jule::drop(_90435_d->_field_constant);
		_90435_d->_field_lvalue=true;
		_90435_d->_field_mutable=true;
	}
	return _90435_d;
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_unary_type_decl(jule::Ref<_13064b610_Data> _95143_d,jule::Ref<_1275d7180_UnaryExpr> _95153_u) {
	_1304dc9b0_TypeChecker _95217_tc = _1304dc9b0_TypeChecker((*this)._field_s,(*this)._field_lookup,jule::Ref<_1304dc9b0_Referencer>(),_95153_u->_field_op,jule::Slice<jule::Ref<_1275d7180_GenericDecl>>(),jule::Slice<jule::Ref<_1304dc9b0_TypeAlias>>(),jule::Bool());
	{
		auto &_match_expr{ _95153_u->_field_op._field_kind };
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_5146439536; }
		_case_begin_5146439536:;
		{
			_95143_d->_field_kind=jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_95217_tc._method_build_ptr_from_type(_95143_d->_field_kind)));
		}
		goto _match_end_5146432720;
		_case_end_5146439536:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_5146439760; }
		_case_begin_5146439760:;
		{
			_95143_d->_field_kind=jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_95217_tc._method_build_ref_from_type(_95143_d->_field_kind)));
		}
		goto _match_end_5146432720;
		_case_end_5146439760:;
		_case_begin_5146435552:;
		{
			(*this)._method_push_err(_95153_u->_field_op,jule::Str("invalid_expr_unary_operator", 27),jule::Slice<jule::Any>({jule::Any(_95153_u->_field_op._field_kind)}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5146432720;
		_case_end_5146435552:;
		_match_end_5146432720:;
	}
	_95143_d->_field_decl=true;
	return _95143_d;
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_unary(jule::Ref<_1275d7180_UnaryExpr> _97434_u) {
	jule::Ref<_1304dc9b0_TypeKind> _97517_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_97517_prefix;
	});
	jule::Ref<_13064b610_Data> _97917_d = this->self->_method_eval_expr_kind(_97434_u->_field_expr);
	if ((!(jule::real(_97917_d)))) {
		return jule::new_ref<_13064b610_Data>();
	}
	if (_97917_d->_field_decl) {
		return this->self->_method_eval_unary_type_decl(_97917_d,_97434_u);
	}
	jule::Ref<_1304dc9b0_TypeKind> _98817_cast_kind = _97917_d->_field_cast_kind;
	{
		auto &_match_expr{ _97434_u->_field_op._field_kind };
		if (!((jule::Str("-", 1)) == _match_expr)) { goto _case_end_5146461040; }
		_case_begin_5146461040:;
		{
			_97917_d=this->self->_method_eval_unary_minus(_97917_d);
		}
		goto _match_end_5146457008;
		_case_end_5146461040:;
		if (!((jule::Str("+", 1)) == _match_expr)) { goto _case_end_5146461152; }
		_case_begin_5146461152:;
		{
			_97917_d=this->self->_method_eval_unary_plus(_97917_d);
		}
		goto _match_end_5146457008;
		_case_end_5146461152:;
		if (!((jule::Str("^", 1)) == _match_expr)) { goto _case_end_5146460160; }
		_case_begin_5146460160:;
		{
			_97917_d=this->self->_method_eval_unary_caret(_97917_d);
		}
		goto _match_end_5146457008;
		_case_end_5146460160:;
		if (!((jule::Str("!", 1)) == _match_expr)) { goto _case_end_5146460272; }
		_case_begin_5146460272:;
		{
			_97917_d=this->self->_method_eval_unary_excl(_97917_d);
		}
		goto _match_end_5146457008;
		_case_end_5146460272:;
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_5146460384; }
		_case_begin_5146460384:;
		{
			_97917_d=this->self->_method_eval_unary_star(_97917_d,_97434_u->_field_op);
		}
		goto _match_end_5146457008;
		_case_end_5146460384:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_5146460496; }
		_case_begin_5146460496:;
		{
			_97917_d=this->self->_method_eval_unary_amper(_97917_d);
		}
		goto _match_end_5146457008;
		_case_end_5146460496:;
		_case_begin_5146454672:;
		{
			jule::drop(_97917_d);
		}
		goto _match_end_5146457008;
		_case_end_5146454672:;
		_match_end_5146457008:;
	}
	if ((!(jule::real(_97917_d)))) {
		this->self->_method_push_err(_97434_u->_field_op,jule::Str("invalid_expr_unary_operator", 27),jule::Slice<jule::Any>({jule::Any(_97434_u->_field_op._field_kind)}));
	} else if (_97917_d->_method_is_const()) {
		_97917_d->_field_model=jule::Any(_97917_d->_field_constant);
	} else if (jule::real(_98817_cast_kind)) {
		_97917_d->_field_cast_kind=_98817_cast_kind;
		_13064b610_apply_cast_kind(_97917_d);
	}
	return _97917_d;
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_variadic(jule::Ref<_1275d7180_VariadicExpr> _101137_v) {
	jule::Ref<_1304dc9b0_TypeKind> _101217_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_101217_prefix;
	});
	jule::Ref<_13064b610_Data> _101617_d = this->self->_method_eval_expr_kind(_101137_v->_field_expr);
	if ((!(jule::real(_101617_d)))) {
		return jule::new_ref<_13064b610_Data>();
	}
	if (jule::real(_101617_d->_field_kind->_method_ref())) {
		_101617_d->_field_kind=_101617_d->_field_kind->_method_ref()->_field_elem;
		_101617_d->_field_model=jule::Any(jule::new_struct<_1279cf930_ExplicitDerefExprModel>(new( std::nothrow ) _1279cf930_ExplicitDerefExprModel(_101617_d->_field_model)));
	}
	if ((!(_1304dc9b0_is_variadicable(_101617_d->_field_kind)))) {
		this->self->_method_push_err(_101137_v->_field_token,jule::Str("variadic_with_non_variadicable", 30),jule::Slice<jule::Any>({jule::Any(_101617_d->_field_kind->_method_to_str())}));
		return jule::new_ref<_13064b610_Data>();
	}
	_101617_d->_field_variadiced=true;
	_101617_d->_field_kind=_101617_d->_field_kind->_method_slc()->_field_elem;
	return _101617_d;
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_unsafe(jule::Ref<_1275d7180_UnsafeExpr> _103835_u) {
	jule::Bool _103913_unsafety = this->self->_field_unsafety;
	this->self->_field_unsafety=true;
	jule::Ref<_13064b610_Data> _104217_d = this->self->_method_eval_expr_kind(_103835_u->_field_expr);
	this->self->_field_unsafety=_103913_unsafety;
	return _104217_d;
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_arr(jule::Ref<_1275d7180_SliceExpr> _104932_s) {
	jule::Ref<_1304dc9b0_Arr> _105117_pt = this->self->_field_prefix->_method_arr();
	jule::Ref<_1304dc9b0_Arr> _105317_arr = jule::new_struct<_1304dc9b0_Arr>(new( std::nothrow ) _1304dc9b0_Arr(false,0LL,_105117_pt->_field_elem));
	if (_105117_pt->_field_auto) {
		_105317_arr->_field_n=static_cast<jule::I64>(_104932_s->_field_elems.len());
	} else {
		_105317_arr->_field_n=static_cast<jule::I64>(_104932_s->_field_elems.len());
		if (_105317_arr->_field_n > _105117_pt->_field_n) {
			this->self->_method_push_err(_104932_s->_field_token,jule::Str("overflow_limits", 15),jule::Slice<jule::Any>({}));
		} else if (_105317_arr->_field_n < _105117_pt->_field_n) {
			_105317_arr->_field_n=_105117_pt->_field_n;
		}
	}
	jule::Ref<_1279cf930_ArrayExprModel> _107017_model = jule::new_struct<_1279cf930_ArrayExprModel>(new( std::nothrow ) _1279cf930_ArrayExprModel(_105317_arr,jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_104932_s->_field_elems.len())))));
	jule::Ref<_1304dc9b0_TypeKind> _107517_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_105317_arr->_field_elem;
	{
		auto &__julec_range_expr = _104932_s->_field_elems;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _13064b610_i = 0;
			jule::Any _13064b610_elem = *__julec_range_begin;
			_iter_begin_5146525680:;
			{
				jule::Ref<_13064b610_Data> _107821_d = this->self->_method_eval_expr_kind(_13064b610_elem);
				if ((!(jule::real(_107821_d)))) {
					goto _iter_next_5146525680;
				}
				this->self->_field_s->_method_check_assign_type(_105317_arr->_field_elem,_107821_d,_104932_s->_field_token,true);
				_107017_model->_field_elems[static_cast<jule::Int>(_13064b610_i)]=_107821_d->_field_model;
			}
			_iter_next_5146525680:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_13064b610_i; _13064b610_elem = *__julec_range_begin; goto _iter_begin_5146525680; }
			_iter_end_5146525680:;
		}
	}
	this->self->_field_prefix=_107517_prefix;
	return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_105317_arr)),jule::Ref<_1304dc9b0_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_107017_model,jule::Bool(),jule::Ref<_130c83140_Const>()));
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_exp_slc(jule::Ref<_1275d7180_SliceExpr> _109536_s,jule::Ref<_1304dc9b0_TypeKind> _109551_elem_type) {
	jule::Ref<_1304dc9b0_Slc> _109617_slc = jule::new_struct<_1304dc9b0_Slc>(new( std::nothrow ) _1304dc9b0_Slc(_109551_elem_type));
	jule::Ref<_1279cf930_SliceExprModel> _110017_model = jule::new_struct<_1279cf930_SliceExprModel>(new( std::nothrow ) _1279cf930_SliceExprModel(_109551_elem_type,jule::Slice<jule::Any>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_109536_s->_field_elems.len())))));
	jule::Ref<_1304dc9b0_TypeKind> _110517_prefix = this->self->_field_prefix;
	this->self->_field_prefix=_109617_slc->_field_elem;
	{
		auto &__julec_range_expr = _109536_s->_field_elems;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _13064b610_i = 0;
			jule::Any _13064b610_elem = *__julec_range_begin;
			_iter_begin_5146547616:;
			{
				jule::Ref<_13064b610_Data> _110821_d = this->self->_method_eval_expr_kind(_13064b610_elem);
				if ((!(jule::real(_110821_d)))) {
					goto _iter_next_5146547616;
				}
				this->self->_field_s->_method_check_assign_type(_109617_slc->_field_elem,_110821_d,_109536_s->_field_token,true);
				_110017_model->_field_elems[static_cast<jule::Int>(_13064b610_i)]=_110821_d->_field_model;
			}
			_iter_next_5146547616:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_13064b610_i; _13064b610_elem = *__julec_range_begin; goto _iter_begin_5146547616; }
			_iter_end_5146547616:;
		}
	}
	this->self->_field_prefix=_110517_prefix;
	return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_109617_slc)),jule::Ref<_1304dc9b0_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_110017_model,jule::Bool(),jule::Ref<_130c83140_Const>()));
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_slice_expr(jule::Ref<_1275d7180_SliceExpr> _112539_s) {
	if (jule::real(this->self->_field_prefix)) {
		{
			if (!((jule::real(this->self->_field_prefix->_method_arr())))) { goto _case_end_5146563184; }
			_case_begin_5146563184:;
			{
				return this->self->_method_eval_arr(_112539_s);
			}
			goto _match_end_5146562944;
			_case_end_5146563184:;
			if (!((jule::real(this->self->_field_prefix->_method_slc())))) { goto _case_end_5146563296; }
			_case_begin_5146563296:;
			{
				jule::Ref<_1304dc9b0_Slc> _113225_pt = this->self->_field_prefix->_method_slc();
				return this->self->_method_eval_exp_slc(_112539_s,_113225_pt->_field_elem);
			}
			goto _match_end_5146562944;
			_case_end_5146563296:;
			_match_end_5146562944:;
		}
	}
	jule::Ref<_1304dc9b0_TypeKind> _113717_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	if (_112539_s->_field_elems.len() == 0LL) {
		this->self->_method_push_err(_112539_s->_field_token,jule::Str("dynamic_type_annotation_failed", 30),jule::Slice<jule::Any>({}));
		return jule::new_ref<_13064b610_Data>();
	}
	jule::Ref<_13064b610_Data> _114517_first_elem = this->self->_method_eval_expr_kind(_112539_s->_field_elems[static_cast<jule::Int>(0LL)]);
	if ((!(jule::real(_114517_first_elem)))) {
		return jule::new_ref<_13064b610_Data>();
	}
	jule::Ref<_13064b610_Data> _115017_d = this->self->_method_eval_exp_slc(_112539_s,_114517_first_elem->_field_kind);
	this->self->_field_prefix=_113717_prefix;
	return _115017_d;
}



inline void _13064b610_Eval::_method_check_integer_indexing_by_data(jule::Ref<_13064b610_Data> _115653_d,_127941de0_Token _115663_token) {
	jule::Str _115713_err_key = _13064b610_check_data_for_integer_indexing(_115653_d);
	if (_115713_err_key != jule::Str("", 0)) {
		(*this)._method_push_err(_115663_token,_115713_err_key,jule::Slice<jule::Any>({}));
	}
}



inline void _13064b610_Eval::_method_indexing_ptr(jule::Ref<_13064b610_Data> _116335_d,jule::Ref<_13064b610_Data> _116349_index,jule::Ref<_1275d7180_IndexingExpr> _116363_i) {
	(*this)._method_check_integer_indexing_by_data(_116349_index,_116363_i->_field_token);
	jule::Ref<_1304dc9b0_Ptr> _116617_ptr = _116335_d->_field_kind->_method_ptr();
	{
		if (!((_116617_ptr->_method_is_unsafe()))) { goto _case_end_5146594992; }
		_case_begin_5146594992:;
		{
			(*this)._method_push_err(_116363_i->_field_token,jule::Str("unsafe_ptr_indexing", 19),jule::Slice<jule::Any>({}));
			return;
		}
		goto _match_end_5146594784;
		_case_end_5146594992:;
		if (!(((!((*this)._method_is_unsafe()))))) { goto _case_end_5146595104; }
		_case_begin_5146595104:;
		{
			(*this)._method_push_err(_116363_i->_field_token,jule::Str("unsafe_behavior_at_out_of_unsafe_scope", 38),jule::Slice<jule::Any>({}));
		}
		goto _match_end_5146594784;
		_case_end_5146595104:;
		_match_end_5146594784:;
	}
	_116335_d->_field_kind=_116617_ptr->_field_elem->_method_clone();
}



inline void _13064b610_Eval::_method_indexing_arr(jule::Ref<_13064b610_Data> _117935_d,jule::Ref<_13064b610_Data> _117949_index,jule::Ref<_1275d7180_IndexingExpr> _117963_i) {
	jule::Ref<_1304dc9b0_Arr> _118017_arr = _117935_d->_field_kind->_method_arr();
	_117935_d->_field_kind=_118017_arr->_field_elem->_method_clone();
	(*this)._method_check_integer_indexing_by_data(_117949_index,_117963_i->_field_token);
}



inline void _13064b610_Eval::_method_indexing_slc(jule::Ref<_13064b610_Data> _118535_d,jule::Ref<_13064b610_Data> _118548_index,jule::Ref<_1275d7180_IndexingExpr> _118562_i) {
	jule::Ref<_1304dc9b0_Slc> _118617_slc = _118535_d->_field_kind->_method_slc();
	_118535_d->_field_kind=_118617_slc->_field_elem->_method_clone();
	(*this)._method_check_integer_indexing_by_data(_118548_index,_118562_i->_field_token);
}



inline void _13064b610_Eval::_method_indexing_map(jule::Ref<_13064b610_Data> _119135_d,jule::Ref<_13064b610_Data> _119149_index,jule::Ref<_1275d7180_IndexingExpr> _119167_i) {
	if ((!(jule::real(_119149_index)))) {
		return;
	}
	jule::Ref<_1304dc9b0_Map> _119617_m = _119135_d->_field_kind->_method_map();
	_13032cf90_AssignTypeChecker _119717_atc = _13032cf90_AssignTypeChecker((*this)._field_s,_119617_m->_field_key,_119149_index,_119167_i->_field_token,true);
	_119717_atc._method_check();
	_119135_d->_field_kind=_119617_m->_field_val->_method_clone();
}



inline void _13064b610_Eval::_method_indexing_str(jule::Ref<_13064b610_Data> _120935_d,jule::Ref<_13064b610_Data> _120949_index,jule::Ref<_1275d7180_IndexingExpr> _120963_i) {
	
	_120935_d->_field_kind->_field_kind=_1304dc9b0_build_prim_type(jule::Str("u8", 2));
	if ((!(jule::real(_120949_index)))) {
		return;
	}
	(*this)._method_check_integer_indexing_by_data(_120949_index,_120963_i->_field_token);
	if ((!(_120949_index->_method_is_const()))) {
		jule::drop(_120935_d->_field_constant);
		return;
	}
	if (_120935_d->_method_is_const()) {
		_127941de0_Token _122517_error_token = _120963_i->_field_token;
		jule::I64 _122617_i = _120949_index->_field_constant->_method_as_i64();
		jule::Str _122717_s = _120935_d->_field_constant->_method_read_str();
		if (static_cast<jule::Int>(_122617_i) >= _122717_s.len()) {
			(*this)._method_push_err(_122517_error_token,jule::Str("overflow_limits", 15),jule::Slice<jule::Any>({}));
		} else {
			_120935_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_122717_s[static_cast<jule::Int>(_122617_i)]));
		}
	}
}



inline void _13064b610_Eval::_method_to_indexing(jule::Ref<_13064b610_Data> _123634_d,jule::Ref<_13064b610_Data> _123648_index,jule::Ref<_1275d7180_IndexingExpr> _123666_i) {
	{
		if (!((jule::real(_123634_d->_field_kind->_method_ptr())))) { goto _case_end_5146658352; }
		_case_begin_5146658352:;
		{
			(*this)._method_indexing_ptr(_123634_d,_123648_index,_123666_i);
			return;
		}
		goto _match_end_5146658064;
		_case_end_5146658352:;
		if (!((jule::real(_123634_d->_field_kind->_method_arr())))) { goto _case_end_5146658464; }
		_case_begin_5146658464:;
		{
			(*this)._method_indexing_arr(_123634_d,_123648_index,_123666_i);
			return;
		}
		goto _match_end_5146658064;
		_case_end_5146658464:;
		if (!((jule::real(_123634_d->_field_kind->_method_slc())))) { goto _case_end_5146658576; }
		_case_begin_5146658576:;
		{
			(*this)._method_indexing_slc(_123634_d,_123648_index,_123666_i);
			return;
		}
		goto _match_end_5146658064;
		_case_end_5146658576:;
		if (!((jule::real(_123634_d->_field_kind->_method_map())))) { goto _case_end_5146658704; }
		_case_begin_5146658704:;
		{
			(*this)._method_indexing_map(_123634_d,_123648_index,_123666_i);
			return;
		}
		goto _match_end_5146658064;
		_case_end_5146658704:;
		if (!((jule::real(_123634_d->_field_kind->_method_prim())))) { goto _case_end_5146658832; }
		_case_begin_5146658832:;
		{
			jule::Ref<_1304dc9b0_Prim> _125517_prim = _123634_d->_field_kind->_method_prim();
			{
				if (!((_125517_prim->_method_is_str()))) { goto _case_end_5146673600; }
				_case_begin_5146673600:;
				{
					(*this)._method_indexing_str(_123634_d,_123648_index,_123666_i);
					return;
				}
				goto _match_end_5146673344;
				_case_end_5146673600:;
				_match_end_5146673344:;
			}
		}
		goto _match_end_5146658064;
		_case_end_5146658832:;
		_match_end_5146658064:;
	}
	(*this)._method_push_err(_123666_i->_field_token,jule::Str("not_supports_indexing", 21),jule::Slice<jule::Any>({jule::Any(_123634_d->_field_kind->_method_to_str())}));
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_ident_decl_from_indexing(jule::Ref<_1275d7180_IndexingExpr> _126653_i) {
	{
		auto &_match_expr{ _126653_i->_field_expr };
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_IdentExpr>>())) { goto _case_end_5146682416; }
		goto _match_end_5146680816;
		_case_end_5146682416:;
		_case_begin_5146681632:;
		{
			this->self->_method_push_err(_126653_i->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5146680816;
		_case_end_5146681632:;
		_match_end_5146680816:;
	}
	jule::Ref<_1275d7180_IdentTypeDecl> _127417_decl = jule::new_struct<_1275d7180_IdentTypeDecl>(new( std::nothrow ) _1275d7180_IdentTypeDecl(_127941de0_Token(),_126653_i->_field_expr.operator jule::Ref<_1275d7180_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ref<_1275d7180_TypeDecl>>()));
	{
		auto &_match_expr{ _126653_i->_field_index };
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_UnaryExpr>>())) { goto _case_end_5146691504; }
		_case_begin_5146691504:;
		{
			jule::Ref<_13064b610_Data> _128221_d = this->self->_method_eval_unary(_126653_i->_field_index.operator jule::Ref<_1275d7180_UnaryExpr>());
			if ((!(_128221_d->_field_decl))) {
				this->self->_method_push_err(_126653_i->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
				return jule::new_ref<_13064b610_Data>();
			}
			_127417_decl->_field_generics=append(_127417_decl->_field_generics,jule::Slice<jule::Ref<_1275d7180_TypeDecl>>({jule::new_struct<_1275d7180_TypeDecl>(new( std::nothrow ) _1275d7180_TypeDecl(_127941de0_Token(),_128221_d->_field_kind))}));
		}
		goto _match_end_5146686944;
		_case_end_5146691504:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_TypeDecl>>())) { goto _case_end_5146691616; }
		_case_begin_5146691616:;
		{
			_127417_decl->_field_generics=append(_127417_decl->_field_generics,jule::Slice<jule::Ref<_1275d7180_TypeDecl>>({_126653_i->_field_index.operator jule::Ref<_1275d7180_TypeDecl>()}));
		}
		goto _match_end_5146686944;
		_case_end_5146691616:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_IdentExpr>>())) { goto _case_end_5146688272; }
		_case_begin_5146688272:;
		{
			_127417_decl->_field_generics=append(_127417_decl->_field_generics,jule::Slice<jule::Ref<_1275d7180_TypeDecl>>({jule::new_struct<_1275d7180_TypeDecl>(new( std::nothrow ) _1275d7180_TypeDecl(_127941de0_Token(),jule::new_struct<_1275d7180_IdentTypeDecl>(new( std::nothrow ) _1275d7180_IdentTypeDecl(_127941de0_Token(),_126653_i->_field_index.operator jule::Ref<_1275d7180_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ref<_1275d7180_TypeDecl>>()))))}));
		}
		goto _match_end_5146686944;
		_case_end_5146688272:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_TupleExpr>>())) { goto _case_end_5146688384; }
		_case_begin_5146688384:;
		{
			{
				auto &__julec_range_expr = _126653_i->_field_index.operator jule::Ref<_1275d7180_TupleExpr>()->_field_expr;
				if (__julec_range_expr.begin() != __julec_range_expr.end()) {
					auto __julec_range_begin = __julec_range_expr.begin();
					const auto __julec_range_end = __julec_range_expr.end();
					jule::Any _13064b610_expr = *__julec_range_begin;
					_iter_begin_5146711568:;
					{
						{
							auto &_match_expr{ _13064b610_expr };
							if (!(_match_expr.type_is<jule::Ref<_1275d7180_TypeDecl>>())) { goto _case_end_5146713472; }
							_case_begin_5146713472:;
							{
								_127417_decl->_field_generics=append(_127417_decl->_field_generics,jule::Slice<jule::Ref<_1275d7180_TypeDecl>>({_13064b610_expr.operator jule::Ref<_1275d7180_TypeDecl>()}));
							}
							goto _match_end_5146712752;
							_case_end_5146713472:;
							if (!(_match_expr.type_is<jule::Ref<_1275d7180_IdentExpr>>())) { goto _case_end_5146713584; }
							_case_begin_5146713584:;
							{
								_127417_decl->_field_generics=append(_127417_decl->_field_generics,jule::Slice<jule::Ref<_1275d7180_TypeDecl>>({jule::new_struct<_1275d7180_TypeDecl>(new( std::nothrow ) _1275d7180_TypeDecl(_127941de0_Token(),jule::new_struct<_1275d7180_IdentTypeDecl>(new( std::nothrow ) _1275d7180_IdentTypeDecl(_127941de0_Token(),_13064b610_expr.operator jule::Ref<_1275d7180_IdentExpr>()->_field_ident,jule::Bool(),jule::Slice<jule::Ref<_1275d7180_TypeDecl>>()))))}));
							}
							goto _match_end_5146712752;
							_case_end_5146713584:;
							_match_end_5146712752:;
						}
					}
					_iter_next_5146711568:;
					++__julec_range_begin;
					if (__julec_range_begin != __julec_range_end) { _13064b610_expr = *__julec_range_begin; goto _iter_begin_5146711568; }
					_iter_end_5146711568:;
				}
			}
		}
		goto _match_end_5146686944;
		_case_end_5146688384:;
		_case_begin_5146687968:;
		{
			this->self->_method_push_err(_126653_i->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5146686944;
		_case_end_5146687968:;
		_match_end_5146686944:;
	}
	return this->self->_method_eval_type(jule::new_struct<_1275d7180_TypeDecl>(new( std::nothrow ) _1275d7180_TypeDecl(_127941de0_Token(),_127417_decl)));
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_indexing(jule::Ref<_1275d7180_IndexingExpr> _131837_i) {
	jule::Ref<_1304dc9b0_TypeKind> _131917_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_131917_prefix;
	});
	jule::Ref<_13064b610_Data> _132317_d = this->self->_method_eval_expr_kind(_131837_i->_field_expr);
	if ((!(jule::real(_132317_d)))) {
		return jule::new_ref<_13064b610_Data>();
	}
	if (_132317_d->_field_decl) {
		return this->self->_method_eval_ident_decl_from_indexing(_131837_i);
	}
	jule::Any _133317_expr_model = _132317_d->_field_model;
	jule::Ref<_13064b610_Data> _133417_index = this->self->_method_eval_expr_kind(_131837_i->_field_index);
	this->self->_method_to_indexing(_132317_d,_133417_index,_131837_i);
	if (jule::real(_133417_index)) {
		if (_132317_d->_method_is_const()) {
			_132317_d->_field_model=jule::Any(_132317_d->_field_constant);
		} else {
			_132317_d->_field_model=jule::Any(jule::new_struct<_1279cf930_IndexigExprModel>(new( std::nothrow ) _1279cf930_IndexigExprModel(_133317_expr_model,_133417_index->_field_model)));
		}
	}
	return _132317_d;
}



inline std::tuple<jule::Ref<_13064b610_Data>,jule::Ref<_13064b610_Data>> _13064b610_Eval::_method_eval_slicing_exprs(jule::Ref<_1275d7180_SlicingExpr> _135542_s) {
	jule::Ref<_1304dc9b0_TypeKind> _135617_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_135617_prefix;
	});
	jule::Ref<_13064b610_Data> _136017_l = jule::new_ref<_13064b610_Data>();
	jule::Ref<_13064b610_Data> _136117_r = jule::new_ref<_13064b610_Data>();
	if (_135542_s->_field_start != nullptr) {
		_136017_l=this->self->_method_eval_expr_kind(_135542_s->_field_start);
		if (jule::real(_136017_l)) {
			this->self->_method_check_integer_indexing_by_data(_136017_l,_135542_s->_field_token);
		} else {
			return std::make_tuple(jule::new_ref<_13064b610_Data>(),jule::new_ref<_13064b610_Data>());
		}
	} else {
		_136017_l=jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(_130cb2be0_SYS_INT))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),_130c83140_new_i64(0LL)));
		_136017_l->_field_model=jule::Any(_136017_l->_field_constant);
	}
	if (_135542_s->_field_to != nullptr) {
		_136117_r=this->self->_method_eval_expr_kind(_135542_s->_field_to);
		if (jule::real(_136117_r)) {
			this->self->_method_check_integer_indexing_by_data(_136117_r,_135542_s->_field_token);
		} else {
			return std::make_tuple(jule::new_ref<_13064b610_Data>(),jule::new_ref<_13064b610_Data>());
		}
	}
	return std::make_tuple(_136017_l,_136117_r);
}



inline void _13064b610_Eval::_method_slicing_arr(jule::Ref<_13064b610_Data> _139030_d) {
	jule::Ref<_1304dc9b0_TypeKind> _139117_elem_type = _139030_d->_field_kind->_method_arr()->_field_elem->_method_clone();
	_139030_d->_field_kind->_field_kind=jule::new_struct<_1304dc9b0_Slc>(new( std::nothrow ) _1304dc9b0_Slc(_139117_elem_type));
	_139030_d->_field_lvalue=false;
	_139030_d->_field_mutable=_139030_d->_field_mutable || (!(_1304dc9b0_is_mut(_139117_elem_type)));
}



inline void _13064b610_Eval::_method_slicing_slc(jule::Ref<_13064b610_Data> _140130_d) {
	_140130_d->_field_lvalue=false;
}



inline void _13064b610_Eval::_method_slicing_str(jule::Ref<_13064b610_Data> _140530_d,jule::Ref<_13064b610_Data> _140540_l,jule::Ref<_13064b610_Data> _140550_r) {
	_140530_d->_field_lvalue=false;
	_140530_d->_field_mutable=true;
	if ((!(_140530_d->_method_is_const()))) {
		return;
	}
	if ((!(jule::real(_140540_l))) || (!(jule::real(_140550_r)))) {
		jule::drop(_140530_d->_field_constant);
		return;
	}
	if (_140540_l->_method_is_const() && _140550_r->_method_is_const()) {
		jule::I64 _141817_left = _140540_l->_field_constant->_method_as_i64();
		if (_141817_left < 0LL) {
			return;
		}
		jule::Str _142317_s = _140530_d->_field_constant->_method_read_str();
		jule::I64 _142421_right = 0LL;
		if ((!(jule::real(_140550_r)))) {
			_142421_right=static_cast<jule::I64>(_142317_s.len());
		} else {
			_142421_right=static_cast<jule::I64>(_140550_r->_field_constant->_method_as_i64());
		}
		if (_141817_left > _142421_right) {
			return;
		}
		_140530_d->_field_constant->_method_set_str(_142317_s.slice(static_cast<jule::Int>(_141817_left),static_cast<jule::Int>(_142421_right)));
	} else {
		jule::drop(_140530_d->_field_constant);
	}
}



inline void _13064b610_Eval::_method_check_slicing(jule::Ref<_13064b610_Data> _144036_d,jule::Ref<_13064b610_Data> _144046_l,jule::Ref<_13064b610_Data> _144056_r,jule::Ref<_1275d7180_SlicingExpr> _144066_s) {
	{
		if (!((jule::real(_144036_d->_field_kind->_method_arr())))) { goto _case_end_5146807376; }
		_case_begin_5146807376:;
		{
			(*this)._method_slicing_arr(_144036_d);
			return;
		}
		goto _match_end_5146807104;
		_case_end_5146807376:;
		if (!((jule::real(_144036_d->_field_kind->_method_slc())))) { goto _case_end_5146807488; }
		_case_begin_5146807488:;
		{
			(*this)._method_slicing_slc(_144036_d);
			return;
		}
		goto _match_end_5146807104;
		_case_end_5146807488:;
		if (!((jule::real(_144036_d->_field_kind->_method_prim())))) { goto _case_end_5146807600; }
		_case_begin_5146807600:;
		{
			jule::Ref<_1304dc9b0_Prim> _145117_prim = _144036_d->_field_kind->_method_prim();
			{
				if (!((_145117_prim->_method_is_str()))) { goto _case_end_5146817088; }
				_case_begin_5146817088:;
				{
					(*this)._method_slicing_str(_144036_d,_144046_l,_144056_r);
					return;
				}
				goto _match_end_5146816832;
				_case_end_5146817088:;
				_match_end_5146816832:;
			}
		}
		goto _match_end_5146807104;
		_case_end_5146807600:;
		_match_end_5146807104:;
	}
	(*this)._method_push_err(_144066_s->_field_token,jule::Str("not_supports_slicing", 20),jule::Slice<jule::Any>({jule::Any(_144036_d->_field_kind->_method_to_str())}));
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_slicing(jule::Ref<_1275d7180_SlicingExpr> _146236_s) {
	jule::Ref<_13064b610_Data> _146317_d = this->self->_method_eval_expr_kind(_146236_s->_field_expr);
	if ((!(jule::real(_146317_d)))) {
		return jule::new_ref<_13064b610_Data>();
	}
	jule::Ref<_13064b610_Data> _146818_l;
	jule::Ref<_13064b610_Data> _146825_r;
	std::tie(_146818_l,_146825_r) = this->self->_method_eval_slicing_exprs(_146236_s);
	if ((!(jule::real(_146818_l)))) {
		return _146317_d;
	}
	this->self->_method_check_slicing(_146317_d,_146818_l,_146825_r,_146236_s);
	jule::drop(_146317_d->_field_cast_kind);
	jule::Ref<_1279cf930_SlicingExprModel> _147617_model = jule::new_struct<_1279cf930_SlicingExprModel>(new( std::nothrow ) _1279cf930_SlicingExprModel(_146317_d->_field_model,_146818_l->_field_model,jule::Any()));
	if (jule::real(_146825_r)) {
		_147617_model->_field_right=_146825_r->_field_model;
	}
	_146317_d->_field_model=jule::Any(_147617_model);
	return _146317_d;
}



inline void _13064b610_Eval::_method_cast_ptr(jule::Ref<_1304dc9b0_TypeKind> _148927_t,jule::Ref<_13064b610_Data> _148945_d,_127941de0_Token _148955_error_token) {
	if ((!((*this)._method_is_unsafe()))) {
		(*this)._method_push_err(_148955_error_token,jule::Str("unsafe_behavior_at_out_of_unsafe_scope", 38),jule::Slice<jule::Any>({}));
		return;
	}
	jule::Ref<_1304dc9b0_Prim> _149513_prim = _148945_d->_field_kind->_method_prim();
	if ((!(jule::real(_148945_d->_field_kind->_method_ptr()))) && ((!(jule::real(_149513_prim))) || (!(_130d7f700_is_int(_149513_prim->_method_to_str()))))) {
		(*this)._method_push_err(_148955_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(_148945_d->_field_kind->_method_to_str()),jule::Any(_148927_t->_method_to_str())}));
	}
	jule::drop(_148945_d->_field_constant);
}



inline void _13064b610_Eval::_method_cast_struct(jule::Ref<_1304dc9b0_TypeKind> _150334_t,jule::Ref<_13064b610_Data> _150352_d,_127941de0_Token _150362_error_token) {
	jule::Ref<_130099320_Trait> _150417_tr = _150352_d->_field_kind->_method_trt();
	if ((!(jule::real(_150417_tr)))) {
		(*this)._method_push_err(_150362_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(_150352_d->_field_kind->_method_to_str()),jule::Any(_150334_t->_method_to_str())}));
		return;
	}
	jule::Ref<_127b2e960_StructIns> _151017_s = jule::new_ref<_127b2e960_StructIns>();
	if (jule::real(_150334_t->_method_ref())) {
		_151017_s=_150334_t->_method_ref()->_field_elem->_method_strct();
	} else {
		_151017_s=_150334_t->_method_strct();
	}
	(*this)._method_push_reference_to_struct(_151017_s->_field_decl);
	if ((!(_151017_s->_field_decl->_method_is_implements(_150417_tr)))) {
		(*this)._method_push_err(_150362_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(_150352_d->_field_kind->_method_to_str()),jule::Any(_150334_t->_method_to_str())}));
	}
}



inline void _13064b610_Eval::_method_cast_ref(jule::Ref<_1304dc9b0_TypeKind> _152431_t,jule::Ref<_13064b610_Data> _152449_d,_127941de0_Token _152459_error_token) {
	jule::Ref<_1304dc9b0_Ref> _152517_ref = _152431_t->_method_ref();
	if (jule::real(_152517_ref->_field_elem->_method_strct())) {
		(*this)._method_cast_struct(_152431_t,_152449_d,_152459_error_token);
		return;
	}
	(*this)._method_push_err(_152459_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(_152449_d->_field_kind->_method_to_str()),jule::Any(_152431_t->_method_to_str())}));
}



inline void _13064b610_Eval::_method_cast_slc(jule::Ref<_1304dc9b0_TypeKind> _153431_t,jule::Ref<_13064b610_Data> _153449_d,_127941de0_Token _153459_error_token) {
	if (jule::real(_153449_d->_field_kind->_method_enm())) {
		if ((!(jule::real(_153449_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_prim()))) || (!(_153449_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_prim()->_method_is_str()))) {
			(*this)._method_push_err(_153459_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(_153449_d->_field_kind->_method_to_str()),jule::Any(_153431_t->_method_to_str())}));
			return;
		}
	} else if ((!(jule::real(_153449_d->_field_kind->_method_prim()))) || (!(_153449_d->_field_kind->_method_prim()->_method_is_str()))) {
		(*this)._method_push_err(_153459_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(_153449_d->_field_kind->_method_to_str()),jule::Any(_153431_t->_method_to_str())}));
		return;
	}
	_153431_t=_153431_t->_method_slc()->_field_elem;
	jule::Ref<_1304dc9b0_Prim> _154613_prim = _153431_t->_method_prim();
	if ((!(jule::real(_154613_prim))) || ((!(_154613_prim->_method_is_u8())) && (!(_154613_prim->_method_is_i32())))) {
		(*this)._method_push_err(_153459_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(_153449_d->_field_kind->_method_to_str()),jule::Any(_153431_t->_method_to_str())}));
	}
}



inline void _13064b610_Eval::_method_cast_str(jule::Ref<_13064b610_Data> _155231_d,_127941de0_Token _155241_error_token) {
	if (jule::real(_155231_d->_field_kind->_method_enm())) {
		jule::Ref<_13009ed30_Enum> _155421_e = _155231_d->_field_kind->_method_enm();
		if (jule::real(_155421_e->_field_kind->_field_kind->_method_prim()) && _155421_e->_field_kind->_field_kind->_method_prim()->_method_is_str()) {
			return;
		}
	}
	if (jule::real(_155231_d->_field_kind->_method_prim())) {
		jule::Ref<_1304dc9b0_Prim> _156117_prim = _155231_d->_field_kind->_method_prim();
		if ((!(_156117_prim->_method_is_u8())) && (!(_156117_prim->_method_is_i32()))) {
			(*this)._method_push_err(_155241_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_155231_d->_field_kind->_method_to_str())}));
		}
		return;
	}
	if ((!(jule::real(_155231_d->_field_kind->_method_slc())))) {
		(*this)._method_push_err(_155241_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_155231_d->_field_kind->_method_to_str())}));
		return;
	}
	jule::Ref<_1304dc9b0_TypeKind> _157317_t = _155231_d->_field_kind->_method_slc()->_field_elem;
	jule::Ref<_1304dc9b0_Prim> _157413_prim = _157317_t->_method_prim();
	if ((!(jule::real(_157413_prim))) || ((!(_157413_prim->_method_is_u8())) && (!(_157413_prim->_method_is_i32())))) {
		(*this)._method_push_err(_155241_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(jule::Str("str", 3)),jule::Any(_155231_d->_field_kind->_method_to_str())}));
	}
}



inline void _13064b610_Eval::_method_cast_int(jule::Ref<_1304dc9b0_TypeKind> _158031_t,jule::Ref<_13064b610_Data> _158049_d,_127941de0_Token _158059_error_token) {
	if (_158049_d->_method_is_const()) {
		jule::Ref<_1304dc9b0_Prim> _158217_prim = _158031_t->_method_prim();
		{
			if (!((_130d7f700_is_sig_int(_158217_prim->_field_kind)))) { goto _case_end_5146953456; }
			_case_begin_5146953456:;
			{
				_158049_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_158049_d->_field_constant->_method_as_i64()));
			}
			goto _match_end_5146953200;
			_case_end_5146953456:;
			if (!((_130d7f700_is_unsig_int(_158217_prim->_field_kind)))) { goto _case_end_5146953568; }
			_case_begin_5146953568:;
			{
				_158049_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_158049_d->_field_constant->_method_as_u64()));
			}
			goto _match_end_5146953200;
			_case_end_5146953568:;
			_match_end_5146953200:;
		}
	}
	if (jule::real(_158049_d->_field_kind->_method_enm())) {
		jule::Ref<_13009ed30_Enum> _159317_e = _158049_d->_field_kind->_method_enm();
		if (_130d7f700_is_num(_159317_e->_field_kind->_field_kind->_method_to_str())) {
			return;
		}
	}
	if (jule::real(_158049_d->_field_kind->_method_ptr())) {
		jule::Ref<_1304dc9b0_Prim> _160017_prim = _158031_t->_method_prim();
		if (_160017_prim->_method_is_uintptr()) {
		} else if ((!((*this)._method_is_unsafe()))) {
			(*this)._method_push_err(_158059_error_token,jule::Str("unsafe_behavior_at_out_of_unsafe_scope", 38),jule::Slice<jule::Any>({}));
		} else if (((((!(_160017_prim->_method_is_i32())) && (!(_160017_prim->_method_is_i64()))) && (!(_160017_prim->_method_is_u16()))) && (!(_160017_prim->_method_is_u32()))) && (!(_160017_prim->_method_is_u64()))) {
			(*this)._method_push_err(_158059_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(_158049_d->_field_kind->_method_to_str()),jule::Any(_158031_t->_method_to_str())}));
		}
		return;
	}
	jule::Ref<_1304dc9b0_Prim> _161113_prim = _158049_d->_field_kind->_method_prim();
	if (jule::real(_161113_prim) && _130d7f700_is_num(_161113_prim->_method_to_str())) {
		return;
	}
	(*this)._method_push_err(_158059_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(_158049_d->_field_kind->_method_to_str()),jule::Any(_158031_t->_method_to_str())}));
}



inline void _13064b610_Eval::_method_cast_num(jule::Ref<_1304dc9b0_TypeKind> _161931_t,jule::Ref<_13064b610_Data> _161949_d,_127941de0_Token _161959_error_token) {
	if (_161949_d->_method_is_const()) {
		jule::Ref<_1304dc9b0_Prim> _162117_prim = _161931_t->_method_prim();
		{
			if (!((_130d7f700_is_float(_162117_prim->_field_kind)))) { goto _case_end_5146997072; }
			_case_begin_5146997072:;
			{
				_161949_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_161949_d->_field_constant->_method_as_f64()));
			}
			goto _match_end_5146996752;
			_case_end_5146997072:;
			if (!((_130d7f700_is_sig_int(_162117_prim->_field_kind)))) { goto _case_end_5146997184; }
			_case_begin_5146997184:;
			{
				_161949_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_161949_d->_field_constant->_method_as_i64()));
			}
			goto _match_end_5146996752;
			_case_end_5146997184:;
			if (!((_130d7f700_is_unsig_int(_162117_prim->_field_kind)))) { goto _case_end_5146997296; }
			_case_begin_5146997296:;
			{
				_161949_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_161949_d->_field_constant->_method_as_u64()));
			}
			goto _match_end_5146996752;
			_case_end_5146997296:;
			_match_end_5146996752:;
		}
	}
	if (jule::real(_161949_d->_field_kind->_method_enm())) {
		jule::Ref<_13009ed30_Enum> _163517_e = _161949_d->_field_kind->_method_enm();
		if (_130d7f700_is_num(_163517_e->_field_kind->_field_kind->_method_to_str())) {
			return;
		}
	}
	jule::Ref<_1304dc9b0_Prim> _164113_prim = _161949_d->_field_kind->_method_prim();
	if (jule::real(_164113_prim) && _130d7f700_is_num(_164113_prim->_method_to_str())) {
		return;
	}
	(*this)._method_push_err(_161959_error_token,jule::Str("type_not_supports_casting_to", 28),jule::Slice<jule::Any>({jule::Any(_161949_d->_field_kind->_method_to_str()),jule::Any(_161931_t->_method_to_str())}));
}



inline void _13064b610_Eval::_method_cast_prim(jule::Ref<_1304dc9b0_TypeKind> _164932_t,jule::Ref<_13064b610_Data> _164950_d,_127941de0_Token _164960_error_token) {
	jule::Ref<_1304dc9b0_Prim> _165013_prim = _164932_t->_method_prim();
	{
		if (!((_165013_prim->_method_is_any()))) { goto _case_end_5147025904; }
		goto _match_end_5147024144;
		_case_end_5147025904:;
		if (!((_165013_prim->_method_is_str()))) { goto _case_end_5147025184; }
		_case_begin_5147025184:;
		{
			(*this)._method_cast_str(_164950_d,_164960_error_token);
		}
		goto _match_end_5147024144;
		_case_end_5147025184:;
		if (!((_130d7f700_is_int(_165013_prim->_method_to_str())))) { goto _case_end_5147024704; }
		_case_begin_5147024704:;
		{
			(*this)._method_cast_int(_164932_t,_164950_d,_164960_error_token);
		}
		goto _match_end_5147024144;
		_case_end_5147024704:;
		if (!((_130d7f700_is_num(_165013_prim->_method_to_str())))) { goto _case_end_5147024816; }
		_case_begin_5147024816:;
		{
			(*this)._method_cast_num(_164932_t,_164950_d,_164960_error_token);
		}
		goto _match_end_5147024144;
		_case_end_5147024816:;
		_case_begin_5147024400:;
		{
			(*this)._method_push_err(_164960_error_token,jule::Str("type_not_supports_casting", 25),jule::Slice<jule::Any>({jule::Any(_164932_t->_method_to_str())}));
		}
		goto _match_end_5147024144;
		_case_end_5147024400:;
		_match_end_5147024144:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_cast_by_type_n_data(jule::Ref<_1304dc9b0_TypeKind> _166947_t,jule::Ref<_13064b610_Data> _166965_d,_127941de0_Token _166975_error_token) {
	{
		if (!((jule::real(_166965_d->_field_kind->_method_prim()) && _166965_d->_field_kind->_method_prim()->_method_is_any()))) { goto _case_end_5147041904; }
		goto _match_end_5147040160;
		_case_end_5147041904:;
		if (!((jule::real(_166947_t->_method_ptr())))) { goto _case_end_5147044288; }
		_case_begin_5147044288:;
		{
			(*this)._method_cast_ptr(_166947_t,_166965_d,_166975_error_token);
		}
		goto _match_end_5147040160;
		_case_end_5147044288:;
		if (!((jule::real(_166947_t->_method_ref())))) { goto _case_end_5147044400; }
		_case_begin_5147044400:;
		{
			(*this)._method_cast_ref(_166947_t,_166965_d,_166975_error_token);
		}
		goto _match_end_5147040160;
		_case_end_5147044400:;
		if (!((jule::real(_166947_t->_method_slc())))) { goto _case_end_5147040656; }
		_case_begin_5147040656:;
		{
			(*this)._method_cast_slc(_166947_t,_166965_d,_166975_error_token);
		}
		goto _match_end_5147040160;
		_case_end_5147040656:;
		if (!((jule::real(_166947_t->_method_strct())))) { goto _case_end_5147040768; }
		_case_begin_5147040768:;
		{
			(*this)._method_cast_struct(_166947_t,_166965_d,_166975_error_token);
		}
		goto _match_end_5147040160;
		_case_end_5147040768:;
		if (!((jule::real(_166947_t->_method_prim())))) { goto _case_end_5147040880; }
		_case_begin_5147040880:;
		{
			(*this)._method_cast_prim(_166947_t,_166965_d,_166975_error_token);
		}
		goto _match_end_5147040160;
		_case_end_5147040880:;
		_case_begin_5147040352:;
		{
			(*this)._method_push_err(_166975_error_token,jule::Str("type_not_supports_casting", 25),jule::Slice<jule::Any>({jule::Any(_166947_t->_method_to_str())}));
			jule::drop(_166965_d);
		}
		goto _match_end_5147040160;
		_case_end_5147040352:;
		_match_end_5147040160:;
	}
	if ((!(jule::real(_166965_d)))) {
		return jule::new_ref<_13064b610_Data>();
	}
	_166965_d->_field_mutable=_166965_d->_field_mutable || ((!(_1304dc9b0_is_mut(_166965_d->_field_kind))) && _1304dc9b0_is_mut(_166947_t));
	_166965_d->_field_lvalue=_1304dc9b0_is_lvalue(_166947_t);
	_166965_d->_field_decl=false;
	if (jule::real(_166947_t->_method_prim()) && _166965_d->_method_is_const()) {
		_166965_d->_field_model=jule::Any(_166965_d->_field_constant);
	}
	if ((!(jule::real(_166965_d->_field_kind->_method_enm()))) || (_166965_d->_field_kind->_method_enm()->_field_kind->_field_kind->_method_to_str() != _166947_t->_method_to_str())) {
		_166965_d->_field_cast_kind=_166947_t;
	} else {
		_166965_d->_field_kind=_166947_t;
	}
	return _166965_d;
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_cast(jule::Ref<_1275d7180_CastExpr> _171833_c) {
	jule::Ref<_1304dc9b0_TypeSymbol> _171917_t = _127ff3480_build_type(_171833_c->_field_kind);
	jule::Bool _172013_ok = this->self->_field_s->_method_check_type(_171917_t,this->self->_field_lookup);
	if ((!(_172013_ok))) {
		return jule::new_ref<_13064b610_Data>();
	}
	jule::Ref<_1304dc9b0_TypeKind> _172517_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_172517_prefix;
	});
	jule::Ref<_13064b610_Data> _172917_d = this->self->_method_eval_expr_kind(_171833_c->_field_expr);
	if ((!(jule::real(_172917_d)))) {
		return jule::new_ref<_13064b610_Data>();
	}
	_172917_d=this->self->_method_eval_cast_by_type_n_data(_171917_t->_field_kind,_172917_d,_171833_c->_field_kind->_field_token);
	return _172917_d;
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_ns_selection(jule::Ref<_1275d7180_NsSelectionExpr> _173936_s) {
	jule::Str _174013_path = _1304dc9b0_build_link_path_by_tokens(_173936_s->_field_ns);
	jule::Ref<_1300a4650_ImportInfo> _174117_imp = (*this)._field_lookup.get()._method_select_package(jule::Fn<jule::Bool(jule::Ref<_1300a4650_ImportInfo>)>([=](jule::Ref<_1300a4650_ImportInfo> _174153_p) mutable -> jule::Bool {
		return _174153_p->_field_link_path == _174013_path;
	}));
	if ((!(jule::real(_174117_imp))) || (!(_174117_imp->_method_is_lookupable(jule::Str("self", 4))))) {
		(*this)._method_push_err(_173936_s->_field_ident,jule::Str("namespace_not_exist", 19),jule::Slice<jule::Any>({jule::Any(_174013_path)}));
		return jule::new_ref<_13064b610_Data>();
	}
	jule::Trait<_1304dc360_Lookup> _175017_lookup = (*this)._field_lookup;
	(*this)._field_lookup=_174117_imp;
	
	jule::Any _175417_def = (*this)._method_get_def(_173936_s->_field_ident._field_kind,false);
	(*this)._field_lookup=_175017_lookup;
	jule::Ref<_13064b610_Data> _175717_d = (*this)._method_eval_def(_175417_def,_173936_s->_field_ident);
	return _175717_d;
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_struct_lit_explicit(jule::Ref<_127b2e960_StructIns> _176248_s,jule::Slice<jule::Any> _176267_exprs,_127941de0_Token _176286_error_token) {
	jule::Bool _176313_ok = this->self->_field_s->_method_check_generic_quantity(static_cast<jule::I64>(_176248_s->_field_decl->_field_generics.len()),static_cast<jule::I64>(_176248_s->_field_generics.len()),_176286_error_token);
	if ((!(_176313_ok))) {
		return jule::new_ref<_13064b610_Data>();
	}
	this->self->_method_push_reference_to_struct(_176248_s->_field_decl);
	_13032cf90_StructLitChecker _177117_slc = _13032cf90_StructLitChecker(this->self,_176286_error_token,_176248_s,jule::Slice<jule::Ref<_1279cf930_StructArgExprModel>>());
	_177117_slc._method_check(_176267_exprs);
	return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_176248_s)),jule::Ref<_1304dc9b0_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_1279cf930_StructLitExprModel>(new( std::nothrow ) _1279cf930_StructLitExprModel(_176248_s,_177117_slc._field_args)),jule::Bool(),jule::Ref<_130c83140_Const>()));
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_struct_lit(jule::Ref<_1275d7180_StructLit> _178839_lit) {
	jule::Ref<_1304dc9b0_TypeSymbol> _178917_t = _127ff3480_build_type(_178839_lit->_field_kind);
	jule::Bool _179013_ok = this->self->_field_s->_method_check_type(_178917_t,this->self->_field_lookup);
	if ((!(_179013_ok))) {
		return jule::new_ref<_13064b610_Data>();
	}
	jule::Ref<_127b2e960_StructIns> _179517_s = _178917_t->_field_kind->_method_strct();
	if ((!(jule::real(_179517_s)))) {
		this->self->_method_push_err(_178839_lit->_field_kind->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_13064b610_Data>();
	}
	return this->self->_method_eval_struct_lit_explicit(_179517_s,_178839_lit->_field_exprs,_178839_lit->_field_kind->_field_token);
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_type(jule::Ref<_1275d7180_TypeDecl> _180432_t) {
	jule::Ref<_1304dc9b0_TypeSymbol> _180517_tk = _127ff3480_build_type(_180432_t);
	jule::Bool _180613_ok = (*this)._field_s->_method_check_type(_180517_tk,(*this)._field_lookup);
	if ((!(_180613_ok))) {
		return jule::new_ref<_13064b610_Data>();
	}
	return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(_180517_tk->_field_kind,jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_180517_tk->_field_kind,true,jule::Ref<_130c83140_Const>()));
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_call_type_fn(jule::Ref<_1275d7180_FnCallExpr> _181836_fc,jule::Ref<_13064b610_Data> _181857_d) {
	if (_181836_fc->_field_generics.len() > 0LL) {
		this->self->_method_push_err(_181836_fc->_field_token,jule::Str("type_not_supports_generics", 26),jule::Slice<jule::Any>({jule::Any(_181857_d->_field_kind->_method_to_str())}));
	} else if (_181836_fc->_field_args.len() < 1LL) {
		this->self->_method_push_err(_181836_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
	} else if (_181836_fc->_field_args.len() > 1LL) {
		this->self->_method_push_err(_181836_fc->_field_args[static_cast<jule::Int>(1LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	if (_181836_fc->_field_args.len() > 0LL) {
		jule::Ref<_13064b610_Data> _182821_arg = this->self->_method_eval_expr_kind(_181836_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_kind);
		if (jule::real(_182821_arg)) {
			_181857_d=this->self->_method_eval_cast_by_type_n_data(_181857_d->_field_kind,_182821_arg,_181836_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token);
		}
	}
	_181857_d->_field_decl=false;
	return _181857_d;
}



inline std::tuple<jule::Bool,jule::Bool> _13064b610_Eval::_method_check_fn_call_generics(jule::Ref<_127ed52e0_FnIns> _183945_f,jule::Ref<_1275d7180_FnCallExpr> _184013_fc) {
	jule::Bool _184042_dynamic_annotation = jule::Bool();
	jule::Bool _184032_ok = jule::Bool();
	{
		if (!((((_183945_f->_field_decl->_field_generics.len() > 0LL) && (_184013_fc->_field_generics.len() == 0LL)) && (_183945_f->_field_params.len() > 0LL)))) { goto _case_end_5147184928; }
		_case_begin_5147184928:;
		{
			_184042_dynamic_annotation=true;
			_183945_f->_field_generics=jule::Slice<jule::Ref<_1304dc9b0_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_183945_f->_field_decl->_field_generics.len())));
			_184032_ok = true;
			_184042_dynamic_annotation = true;
			return std::make_tuple(_184032_ok,_184042_dynamic_annotation);
		}
		goto _match_end_5147178688;
		_case_end_5147184928:;
		if (!(((!((*this)._field_s->_method_check_generic_quantity(static_cast<jule::I64>(_183945_f->_field_decl->_field_generics.len()),static_cast<jule::I64>(_184013_fc->_field_generics.len()),_184013_fc->_field_token)))))) { goto _case_end_5147189280; }
		_case_begin_5147189280:;
		{
			_184032_ok = false;
			_184042_dynamic_annotation = false;
			return std::make_tuple(_184032_ok,_184042_dynamic_annotation);
		}
		goto _match_end_5147178688;
		_case_end_5147189280:;
		_case_begin_5147178896:;
		{
			_183945_f->_field_generics=jule::Slice<jule::Ref<_1304dc9b0_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_183945_f->_field_decl->_field_generics.len())));
			{
				auto &__julec_range_expr = _184013_fc->_field_generics;
				if (__julec_range_expr.begin() != __julec_range_expr.end()) {
					auto __julec_range_begin = __julec_range_expr.begin();
					const auto __julec_range_end = __julec_range_expr.end();
					jule::Int _13064b610_i = 0;
					jule::Ref<_1275d7180_TypeDecl> _13064b610_g = *__julec_range_begin;
					_iter_begin_5147180496:;
					{
						jule::Ref<_1304dc9b0_TypeSymbol> _185525_k = _127ff3480_build_type(_13064b610_g);
						jule::Bool _185621_ok = (*this)._field_s->_method_check_type(_185525_k,(*this)._field_lookup);
						if ((!(_185621_ok))) {
							_184032_ok = false;
							_184042_dynamic_annotation = false;
							return std::make_tuple(_184032_ok,_184042_dynamic_annotation);
						}
						_183945_f->_field_generics[static_cast<jule::Int>(_13064b610_i)]=_185525_k->_field_kind;
					}
					_iter_next_5147180496:;
					++__julec_range_begin;
					if (__julec_range_begin != __julec_range_end) { ++_13064b610_i; _13064b610_g = *__julec_range_begin; goto _iter_begin_5147180496; }
					_iter_end_5147180496:;
				}
			}
			_184032_ok = true;
			_184042_dynamic_annotation = false;
			return std::make_tuple(_184032_ok,_184042_dynamic_annotation);
		}
		goto _match_end_5147178688;
		_case_end_5147178896:;
		_match_end_5147178688:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_call_builtin_fn(jule::Ref<_1275d7180_FnCallExpr> _186739_fc,jule::Ref<_13064b610_Data> _186760_d) {
	jule::Ref<_127ed52e0_FnIns> _186817_f = _186760_d->_field_kind->_method_fnc();
	_186760_d=_186817_f->_field_caller(this->self,_186739_fc,_186760_d);
	if ((!(jule::real(_186760_d)))) {
		return jule::new_ref<_13064b610_Data>();
	}
	_186760_d->_field_mutable=true;
	return _186760_d;
}



inline void _13064b610_Eval::_method_check_fn_of_concurrent_call(jule::Ref<_127ed52e0_FnIns>& _187947_f,_127941de0_Token _187958_error_token) {
	if ((*this)._method_is_unsafe()) {
		return;
	}
	{
		auto &__julec_range_expr = _187947_f->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127ed52e0_ParamIns> _13064b610_p = *__julec_range_begin;
			_iter_begin_5147220336:;
			{
				if (_13064b610_p->_field_decl->_field_reference) {
					(*this)._method_push_err(_187958_error_token,jule::Str("concurrent_call_with_reference_parameter", 40),jule::Slice<jule::Any>({}));
					return;
				}
			}
			_iter_next_5147220336:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13064b610_p = *__julec_range_begin; goto _iter_begin_5147220336; }
			_iter_end_5147220336:;
		}
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_call_fn(jule::Ref<_1275d7180_FnCallExpr> _189231_fc,jule::Ref<_13064b610_Data> _189252_d) {
	jule::Ref<_127ed52e0_FnIns> _189317_f = _189252_d->_field_kind->_method_fnc();
	if (_189317_f->_method_is_builtin()) {
		return this->self->_method_call_builtin_fn(_189231_fc,_189252_d);
	}
	if (_189231_fc->_field_concurrent) {
		this->self->_method_check_fn_of_concurrent_call(_189317_f,_189231_fc->_field_token);
	}
	if ((((!(_189252_d->_field_mutable)) && _189317_f->_field_decl->_method_is_method()) && (!(_189317_f->_field_decl->_field_statically))) && _189317_f->_field_decl->_field_params[static_cast<jule::Int>(0LL)]->_field_mutable) {
		this->self->_method_push_err(_189231_fc->_field_token,jule::Str("mutable_operation_on_immutable", 30),jule::Slice<jule::Any>({}));
	} else if ((!(this->self->_method_is_unsafe())) && _189317_f->_field_decl->_field_unsafety) {
		this->self->_method_push_err(_189231_fc->_field_token,jule::Str("unsafe_behavior_at_out_of_unsafe_scope", 38),jule::Slice<jule::Any>({}));
	}
	jule::Bool _190818_ok;
	jule::Bool _190822_dynamic_annotation;
	std::tie(_190818_ok,_190822_dynamic_annotation) = this->self->_method_check_fn_call_generics(_189317_f,_189231_fc);
	if ((!(_190818_ok))) {
		return jule::new_ref<_13064b610_Data>();
	}
	jule::Ref<_1300a20d0_Sema> _191317_old = this->self->_field_s;
	if (jule::real(_189317_f->_field_decl->_field_owner)) {
		this->self->_field_s=_189317_f->_field_decl->_field_owner->_field_sema;
	}
	__JULE_DEFER({
		if ((_191317_old).alloc != (this->self->_field_s).alloc) {
			_191317_old->_field_errors=append(_191317_old->_field_errors,this->self->_field_s->_field_errors);
		}
		this->self->_field_s=_191317_old;
	});
	if ((!(_190822_dynamic_annotation))) {
		if ((!(_189317_f->_field_reloaded))) {
			jule::Bool _192721_ok = this->self->_field_s->_method_reload_fn_ins_types(_189317_f);
			if ((!(_192721_ok))) {
				return jule::new_ref<_13064b610_Data>();
			}
			_189317_f->_field_reloaded=true;
		}
	} else {
		this->self->_field_s->_method_build_fn_non_generic_type_kinds(_189317_f);
	}
	_13032cf90_FnCallArgChecker _193717_fcac = _13032cf90_FnCallArgChecker(this->self,_189231_fc->_field_args,_189231_fc->_field_token,_189317_f,_190822_dynamic_annotation,jule::Slice<jule::Any>());
	if (jule::real(_189317_f->_field_decl->_field_owner)) {
		std::tie(_191317_old,this->self->_field_s) = std::make_tuple(this->self->_field_s,_191317_old);
		_190818_ok=_193717_fcac._method_check();
		std::tie(_191317_old,this->self->_field_s) = std::make_tuple(this->self->_field_s,_191317_old);
	} else {
		_190818_ok=_193717_fcac._method_check();
	}
	if ((!(_190818_ok)) && _190822_dynamic_annotation) {
		return jule::new_ref<_13064b610_Data>();
	}
	jule::Bool _195614_is_unique_ins;
	jule::Int _195629_pos;
	std::tie(_195614_is_unique_ins,_195629_pos) = _189317_f->_field_decl->_method_append_instance(_189317_f);
	if ((!(_195614_is_unique_ins))) {
		_189317_f=_189317_f->_field_decl->_field_instances[static_cast<jule::Int>(_195629_pos)];
	}
	jule::Any _196117_call_model = _189252_d->_field_model;
	if (_189317_f->_field_decl->_method_is_void()) {
		_189252_d=_13064b610_build_void_data();
	} else {
		if (_190822_dynamic_annotation) {
			_190818_ok=this->self->_field_s->_method_reload_fn_ins_types(_189317_f);
			if ((!(_190818_ok))) {
				return jule::new_ref<_13064b610_Data>();
			}
			_189317_f->_field_reloaded=true;
		}
		_189252_d->_field_kind=_189317_f->_field_result;
		_189252_d->_field_lvalue=_1304dc9b0_is_lvalue(_189317_f->_field_result);
	}
	_189252_d->_field_mutable=true;
	_189252_d->_field_model=jule::Any(jule::new_struct<_1279cf930_FnCallExprModel>(new( std::nothrow ) _1279cf930_FnCallExprModel(_189317_f,_189231_fc->_field_concurrent,_196117_call_model,_193717_fcac._field_arg_models)));
	if ((_189317_f->_field_generics.len() > 0LL) && _195614_is_unique_ins) {
		this->self->_field_s->_method_check_fn_ins(_189317_f);
	}
	return _189252_d;
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_fn_call(jule::Ref<_1275d7180_FnCallExpr> _199436_fc) {
	jule::Ref<_1304dc9b0_TypeKind> _199517_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_199517_prefix;
	});
	jule::Ref<_13064b610_Data> _199917_d = this->self->_method_eval_expr_kind(_199436_fc->_field_expr->_field_kind);
	if ((!(jule::real(_199917_d)))) {
		return jule::new_ref<_13064b610_Data>();
	}
	if (_199917_d->_field_decl) {
		return this->self->_method_call_type_fn(_199436_fc,_199917_d);
	}
	if ((!(jule::real(_199917_d->_field_kind->_method_fnc())))) {
		this->self->_method_push_err(_199436_fc->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
		return jule::new_ref<_13064b610_Data>();
	}
	return this->self->_method_call_fn(_199436_fc,_199917_d);
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_enum_static(jule::Ref<_13009ed30_Enum> _201639_enm,_127941de0_Token _201651_ident) {
	jule::Ref<_13064b610_Data> _201717_d = jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_201639_enm)),jule::Ref<_1304dc9b0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_130c83140_Const>()));
	jule::Ref<_13009ed30_EnumItem> _202417_item = _201639_enm->_method_find_item(_201651_ident._field_kind);
	if ((!(jule::real(_202417_item)))) {
		(*this)._method_push_err(_201651_ident,jule::Str("obj_have_not_ident", 18),jule::Slice<jule::Any>({jule::Any(_201651_ident._field_kind)}));
	} else {
		_201717_d->_field_constant=jule::new_ref<_130c83140_Const>(_202417_item->_field_value->_field_data->_field_constant.get());
		_201717_d->_field_model=jule::Any(_201717_d->_field_constant);
	}
	return _201717_d;
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_struct_static(jule::Ref<_127b2e960_StructIns> _203541_s,_127941de0_Token _203556_ident) {
	
	jule::Ref<_127ed52e0_Fn> _203717_method = _203541_s->_method_find_method(_203556_ident._field_kind,true);
	if ((!(jule::real(_203717_method)))) {
		(*this)._method_push_err(_203556_ident,jule::Str("obj_have_not_ident", 18),jule::Slice<jule::Any>({jule::Any(_203556_ident._field_kind)}));
	}
	jule::Ref<_13064b610_Data> _204217_d = jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::Ref<_1304dc9b0_TypeKind>(),jule::Ref<_1304dc9b0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_130c83140_Const>()));
	(*this)._method_push_reference_to_fn(_203717_method);
	jule::Ref<_127ed52e0_FnIns> _205017_ins = _203717_method->_method_instance();
	_205017_ins->_field_owner=_203541_s;
	_204217_d->_field_model=jule::Any(jule::new_struct<_1279cf930_StructStaticIdentExprModel>(new( std::nothrow ) _1279cf930_StructStaticIdentExprModel(_203541_s,_204217_d->_field_model,_205017_ins)));
	_204217_d->_field_kind=jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_205017_ins));
	return _204217_d;
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_trait_sub_ident(jule::Ref<_13064b610_Data> _206239_d,jule::Ref<_130099320_Trait> _206253_trt,_127941de0_Token _206266_ident) {
	jule::Ref<_127ed52e0_Fn> _206317_f = _206253_trt->_method_find_method(_206266_ident._field_kind);
	if ((!(jule::real(_206317_f)))) {
		(*this)._method_push_err(_206266_ident,jule::Str("obj_have_not_ident", 18),jule::Slice<jule::Any>({jule::Any(_206266_ident._field_kind)}));
		return jule::new_ref<_13064b610_Data>();
	}
	jule::Any _206917_model = jule::Any(nullptr);
	if ((_206253_trt).alloc == (_130b8f5f0_BUILTIN_TRAIT_ERROR).alloc) {
		_206917_model=jule::Any(jule::new_struct<_1279cf930_BuiltinErrorTraitSubIdentExprModel>(new( std::nothrow ) _1279cf930_BuiltinErrorTraitSubIdentExprModel(_206239_d->_field_model,_206266_ident._field_kind)));
	} else {
		_206917_model=jule::Any(jule::new_struct<_1279cf930_TraitSubIdentExprModel>(new( std::nothrow ) _1279cf930_TraitSubIdentExprModel(_206239_d->_field_model,_206266_ident._field_kind)));
	}
	return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_206317_f->_method_instance())),jule::Ref<_1304dc9b0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),_206917_model,false,jule::Ref<_130c83140_Const>()));
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_struct_sub_ident(jule::Ref<_13064b610_Data> _209144_d,jule::Ref<_127b2e960_StructIns> _209158_s,jule::Ref<_1275d7180_SubIdentExpr> _209173_si,jule::Bool _209192_ref) {
	jule::Ref<_127b2e960_FieldIns> _209217_f = _209158_s->_method_find_field(_209173_si->_field_ident._field_kind);
	if (jule::real(_209217_f)) {
		if ((!((*this)._field_s->_method_is_accessible_define(_209217_f->_field_decl->_field_public,_209217_f->_field_decl->_field_token)))) {
			(*this)._method_push_err(_209173_si->_field_ident,jule::Str("ident_is_not_accessible", 23),jule::Slice<jule::Any>({jule::Any(_209217_f->_field_decl->_field_ident)}));
		}
		jule::Ref<_1279cf930_StructSubIdentExprModel> _209821_model = jule::new_struct<_1279cf930_StructSubIdentExprModel>(new( std::nothrow ) _1279cf930_StructSubIdentExprModel(_209144_d->_field_model,_209144_d->_field_kind,jule::Ref<_127ed52e0_FnIns>(),_209217_f));
		_209144_d->_field_model=jule::Any(_209821_model);
		_209144_d->_field_kind=_209217_f->_field_kind->_method_clone();
		if (_209217_f->_field_decl->_field_mutable && (!(_209144_d->_field_mutable))) {
			{
				auto &_match_expr{ (*this)._field_lookup };
				if (!(_match_expr.type_is<jule::Ref<_1300a11b0_ScopeChecker>>())) { goto _case_end_5147378192; }
				_case_begin_5147378192:;
				{
					jule::Ref<_1300a11b0_ScopeChecker> _211025_scope = (*this)._field_lookup.operator jule::Ref<_1300a11b0_ScopeChecker>();
					_209144_d->_field_mutable=jule::real(_211025_scope->_field_owner) && ((_211025_scope->_field_owner->_field_owner).alloc == (_209158_s).alloc);
					if (_209144_d->_field_mutable) {
						jule::Ref<_1303533b0_Var> _211333_field = _209821_model->_field_expr.operator jule::Ref<_1303533b0_Var>();
						jule::Ref<_1303533b0_Var> _211433_v = jule::new_struct<_1303533b0_Var>(new( std::nothrow ) _1303533b0_Var(_211333_field->_field_scope,_211333_field->_field_token,_211333_field->_field_ident,_211333_field->_field_cpp_linked,_211333_field->_field_constant,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),_211333_field->_field_kind,_211333_field->_field_value,jule::Ref<_127ff3480_ReferenceStack>(),jule::Slice<jule::Ref<_1303533b0_Var>>()));
						_211433_v->_field_mutable=true;
						_209821_model->_field_expr=jule::Any(_211433_v);
					}
				}
				goto _match_end_5147375872;
				_case_end_5147378192:;
				_match_end_5147375872:;
			}
		}
		return _209144_d;
	}
	
	jule::Ref<_127ed52e0_Fn> _213317_m = _209158_s->_method_find_method(_209173_si->_field_ident._field_kind,false);
	if ((!(jule::real(_213317_m)))) {
		(*this)._method_push_err(_209173_si->_field_ident,jule::Str("obj_have_not_ident", 18),jule::Slice<jule::Any>({jule::Any(_209173_si->_field_ident._field_kind)}));
		return jule::new_ref<_13064b610_Data>();
	}
	if (_213317_m->_field_params[static_cast<jule::Int>(0LL)]->_method_is_ref() && (!(_209192_ref))) {
		(*this)._method_push_err(_209173_si->_field_ident,jule::Str("ref_method_used_with_not_ref_instance", 37),jule::Slice<jule::Any>({}));
	}
	(*this)._method_push_reference_to_fn(_213317_m);
	jule::Ref<_127ed52e0_FnIns> _214517_ins = _213317_m->_method_instance();
	_214517_ins->_field_owner=_209158_s;
	_209144_d->_field_model=jule::Any(jule::new_struct<_1279cf930_StructSubIdentExprModel>(new( std::nothrow ) _1279cf930_StructSubIdentExprModel(_209144_d->_field_model,_209144_d->_field_kind,_214517_ins,jule::Ref<_127b2e960_FieldIns>())));
	_209144_d->_field_kind=jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_214517_ins));
	return _209144_d;
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_slice_sub_ident(jule::Ref<_13064b610_Data> _215643_d,_127941de0_Token _215653_ident) {
	{
		auto &_match_expr{ _215653_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_5147417056; }
		_case_begin_5147417056:;
		{
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(_130cb2be0_SYS_INT))),jule::Ref<_1304dc9b0_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_1279cf930_CommonSubIdentExprModel>(new( std::nothrow ) _1279cf930_CommonSubIdentExprModel(_215643_d->_field_kind,_215643_d->_field_model,jule::Str("len()", 5))),jule::Bool(),jule::Ref<_130c83140_Const>()));
		}
		goto _match_end_5147412528;
		_case_end_5147417056:;
		if (!((jule::Str("cap", 3)) == _match_expr)) { goto _case_end_5147416800; }
		_case_begin_5147416800:;
		{
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(_130cb2be0_SYS_INT))),jule::Ref<_1304dc9b0_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_1279cf930_CommonSubIdentExprModel>(new( std::nothrow ) _1279cf930_CommonSubIdentExprModel(_215643_d->_field_kind,_215643_d->_field_model,jule::Str("cap()", 5))),jule::Bool(),jule::Ref<_130c83140_Const>()));
		}
		goto _match_end_5147412528;
		_case_end_5147416800:;
		_case_begin_5147413280:;
		{
			(*this)._method_push_err(_215653_ident,jule::Str("obj_have_not_ident", 18),jule::Slice<jule::Any>({jule::Any(_215653_ident._field_kind)}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5147412528;
		_case_end_5147413280:;
		_match_end_5147412528:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_array_sub_ident(jule::Ref<_13064b610_Data> _218643_d,_127941de0_Token _218653_ident) {
	{
		auto &_match_expr{ _218653_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_5147431536; }
		_case_begin_5147431536:;
		{
			jule::Ref<_130c83140_Const> _218921_c = _130c83140_new_i64(static_cast<jule::I64>(_218643_d->_field_kind->_method_arr()->_field_n));
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(_130cb2be0_SYS_INT))),jule::Ref<_1304dc9b0_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_218921_c,jule::Bool(),_218921_c));
		}
		goto _match_end_5147427008;
		_case_end_5147431536:;
		_case_begin_5147427760:;
		{
			(*this)._method_push_err(_218653_ident,jule::Str("obj_have_not_ident", 18),jule::Slice<jule::Any>({jule::Any(_218653_ident._field_kind)}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5147427008;
		_case_end_5147427760:;
		_match_end_5147427008:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_map_sub_ident(jule::Ref<_13064b610_Data> _220341_d,_127941de0_Token _220351_ident) {
	{
		auto &_match_expr{ _220351_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_5147443424; }
		_case_begin_5147443424:;
		{
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(_130cb2be0_SYS_INT))),jule::Ref<_1304dc9b0_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_1279cf930_CommonSubIdentExprModel>(new( std::nothrow ) _1279cf930_CommonSubIdentExprModel(_220341_d->_field_kind,_220341_d->_field_model,jule::Str("len()", 5))),jule::Bool(),jule::Ref<_130c83140_Const>()));
		}
		goto _match_end_5147439152;
		_case_end_5147443424:;
		if (!((jule::Str("clear", 5)) == _match_expr)) { goto _case_end_5147443952; }
		_case_begin_5147443952:;
		{
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_127ed52e0_FnIns>(new( std::nothrow ) _127ed52e0_FnIns(jule::Ref<_127b2e960_StructIns>(),jule::Ref<_127ed52e0_Fn>(),jule::Slice<jule::Ref<_1304dc9b0_TypeKind>>(),jule::Slice<jule::Ref<_127ed52e0_ParamIns>>(),jule::Ref<_1304dc9b0_TypeKind>(),jule::Ref<_1300a11b0_Scope>(),_130b8f5f0_builtin_caller_common_mut,jule::Bool(),jule::Bool())))),jule::Ref<_1304dc9b0_TypeKind>(),_220341_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_1279cf930_CommonSubIdentExprModel>(new( std::nothrow ) _1279cf930_CommonSubIdentExprModel(_220341_d->_field_kind,_220341_d->_field_model,jule::Str("clear", 5))),jule::Bool(),jule::Ref<_130c83140_Const>()));
		}
		goto _match_end_5147439152;
		_case_end_5147443952:;
		if (!((jule::Str("keys", 4)) == _match_expr)) { goto _case_end_5147444064; }
		_case_begin_5147444064:;
		{
			jule::Ref<_1304dc9b0_Map> _223221_m = _220341_d->_field_kind->_method_map();
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_127ed52e0_FnIns>(new( std::nothrow ) _127ed52e0_FnIns(jule::Ref<_127b2e960_StructIns>(),jule::Ref<_127ed52e0_Fn>(),jule::Slice<jule::Ref<_1304dc9b0_TypeKind>>(),jule::Slice<jule::Ref<_127ed52e0_ParamIns>>(),jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_1304dc9b0_Slc>(new( std::nothrow ) _1304dc9b0_Slc(_223221_m->_field_key)))),jule::Ref<_1300a11b0_Scope>(),_130b8f5f0_builtin_caller_common_mut,jule::Bool(),jule::Bool())))),jule::Ref<_1304dc9b0_TypeKind>(),_220341_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_1279cf930_CommonSubIdentExprModel>(new( std::nothrow ) _1279cf930_CommonSubIdentExprModel(_220341_d->_field_kind,_220341_d->_field_model,jule::Str("keys", 4))),jule::Bool(),jule::Ref<_130c83140_Const>()));
		}
		goto _match_end_5147439152;
		_case_end_5147444064:;
		if (!((jule::Str("values", 6)) == _match_expr)) { goto _case_end_5147440208; }
		_case_begin_5147440208:;
		{
			jule::Ref<_1304dc9b0_Map> _225321_m = _220341_d->_field_kind->_method_map();
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_127ed52e0_FnIns>(new( std::nothrow ) _127ed52e0_FnIns(jule::Ref<_127b2e960_StructIns>(),jule::Ref<_127ed52e0_Fn>(),jule::Slice<jule::Ref<_1304dc9b0_TypeKind>>(),jule::Slice<jule::Ref<_127ed52e0_ParamIns>>(),jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_1304dc9b0_Slc>(new( std::nothrow ) _1304dc9b0_Slc(_225321_m->_field_val)))),jule::Ref<_1300a11b0_Scope>(),_130b8f5f0_builtin_caller_common_mut,jule::Bool(),jule::Bool())))),jule::Ref<_1304dc9b0_TypeKind>(),_220341_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_1279cf930_CommonSubIdentExprModel>(new( std::nothrow ) _1279cf930_CommonSubIdentExprModel(_220341_d->_field_kind,_220341_d->_field_model,jule::Str("values", 6))),jule::Bool(),jule::Ref<_130c83140_Const>()));
		}
		goto _match_end_5147439152;
		_case_end_5147440208:;
		if (!((jule::Str("has", 3)) == _match_expr)) { goto _case_end_5147440320; }
		_case_begin_5147440320:;
		{
			jule::Ref<_1304dc9b0_Map> _227421_m = _220341_d->_field_kind->_method_map();
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_127ed52e0_FnIns>(new( std::nothrow ) _127ed52e0_FnIns(jule::Ref<_127b2e960_StructIns>(),jule::Ref<_127ed52e0_Fn>(),jule::Slice<jule::Ref<_1304dc9b0_TypeKind>>(),jule::Slice<jule::Ref<_127ed52e0_ParamIns>>({jule::new_struct<_127ed52e0_ParamIns>(new( std::nothrow ) _127ed52e0_ParamIns(jule::new_struct<_127ed52e0_Param>(new( std::nothrow ) _127ed52e0_Param(_127941de0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1304dc9b0_TypeSymbol>(),jule::Str("key", 3))),_227421_m->_field_key))}),jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1300a11b0_Scope>(),_130b8f5f0_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_1304dc9b0_TypeKind>(),_220341_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_1279cf930_CommonSubIdentExprModel>(new( std::nothrow ) _1279cf930_CommonSubIdentExprModel(_220341_d->_field_kind,_220341_d->_field_model,jule::Str("has", 3))),jule::Bool(),jule::Ref<_130c83140_Const>()));
		}
		goto _match_end_5147439152;
		_case_end_5147440320:;
		if (!((jule::Str("del", 3)) == _match_expr)) { goto _case_end_5147440432; }
		_case_begin_5147440432:;
		{
			jule::Ref<_1304dc9b0_Map> _229921_m = _220341_d->_field_kind->_method_map();
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_127ed52e0_FnIns>(new( std::nothrow ) _127ed52e0_FnIns(jule::Ref<_127b2e960_StructIns>(),jule::Ref<_127ed52e0_Fn>(),jule::Slice<jule::Ref<_1304dc9b0_TypeKind>>(),jule::Slice<jule::Ref<_127ed52e0_ParamIns>>({jule::new_struct<_127ed52e0_ParamIns>(new( std::nothrow ) _127ed52e0_ParamIns(jule::new_struct<_127ed52e0_Param>(new( std::nothrow ) _127ed52e0_Param(_127941de0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1304dc9b0_TypeSymbol>(),jule::Str("key", 3))),_229921_m->_field_key))}),jule::Ref<_1304dc9b0_TypeKind>(),jule::Ref<_1300a11b0_Scope>(),_130b8f5f0_builtin_caller_common_mut,jule::Bool(),jule::Bool())))),jule::Ref<_1304dc9b0_TypeKind>(),_220341_d->_field_mutable,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_1279cf930_CommonSubIdentExprModel>(new( std::nothrow ) _1279cf930_CommonSubIdentExprModel(_220341_d->_field_kind,_220341_d->_field_model,jule::Str("del", 3))),jule::Bool(),jule::Ref<_130c83140_Const>()));
		}
		goto _match_end_5147439152;
		_case_end_5147440432:;
		_case_begin_5147439904:;
		{
			(*this)._method_push_err(_220351_ident,jule::Str("obj_have_not_ident", 18),jule::Slice<jule::Any>({jule::Any(_220351_ident._field_kind)}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5147439152;
		_case_end_5147439904:;
		_match_end_5147439152:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_str_sub_ident(jule::Ref<_13064b610_Data> _232841_d,_127941de0_Token _232851_ident) {
	{
		auto &_match_expr{ _232851_ident._field_kind };
		if (!((jule::Str("len", 3)) == _match_expr)) { goto _case_end_5147502048; }
		_case_begin_5147502048:;
		{
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(_130cb2be0_SYS_INT))),jule::Ref<_1304dc9b0_TypeKind>(),false,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_1279cf930_CommonSubIdentExprModel>(new( std::nothrow ) _1279cf930_CommonSubIdentExprModel(_232841_d->_field_kind,_232841_d->_field_model,jule::Str("len()", 5))),jule::Bool(),jule::Ref<_130c83140_Const>()));
		}
		goto _match_end_5147497776;
		_case_end_5147502048:;
		if (!((jule::Str("has_prefix", 10)) == _match_expr)) { goto _case_end_5147502576; }
		_case_begin_5147502576:;
		{
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_127ed52e0_FnIns>(new( std::nothrow ) _127ed52e0_FnIns(jule::Ref<_127b2e960_StructIns>(),jule::Ref<_127ed52e0_Fn>(),jule::Slice<jule::Ref<_1304dc9b0_TypeKind>>(),jule::Slice<jule::Ref<_127ed52e0_ParamIns>>({jule::new_struct<_127ed52e0_ParamIns>(new( std::nothrow ) _127ed52e0_ParamIns(jule::new_struct<_127ed52e0_Param>(new( std::nothrow ) _127ed52e0_Param(_127941de0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1304dc9b0_TypeSymbol>(),jule::Str("sub", 3))),_232841_d->_field_kind))}),jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1300a11b0_Scope>(),_130b8f5f0_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_1279cf930_CommonSubIdentExprModel>(new( std::nothrow ) _1279cf930_CommonSubIdentExprModel(_232841_d->_field_kind,_232841_d->_field_model,jule::Str("has_prefix", 10))),jule::Bool(),jule::Ref<_130c83140_Const>()));
		}
		goto _match_end_5147497776;
		_case_end_5147502576:;
		if (!((jule::Str("has_suffix", 10)) == _match_expr)) { goto _case_end_5147502688; }
		_case_begin_5147502688:;
		{
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_127ed52e0_FnIns>(new( std::nothrow ) _127ed52e0_FnIns(jule::Ref<_127b2e960_StructIns>(),jule::Ref<_127ed52e0_Fn>(),jule::Slice<jule::Ref<_1304dc9b0_TypeKind>>(),jule::Slice<jule::Ref<_127ed52e0_ParamIns>>({jule::new_struct<_127ed52e0_ParamIns>(new( std::nothrow ) _127ed52e0_ParamIns(jule::new_struct<_127ed52e0_Param>(new( std::nothrow ) _127ed52e0_Param(_127941de0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1304dc9b0_TypeSymbol>(),jule::Str("sub", 3))),_232841_d->_field_kind))}),jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1300a11b0_Scope>(),_130b8f5f0_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_1279cf930_CommonSubIdentExprModel>(new( std::nothrow ) _1279cf930_CommonSubIdentExprModel(_232841_d->_field_kind,_232841_d->_field_model,jule::Str("has_suffix", 10))),jule::Bool(),jule::Ref<_130c83140_Const>()));
		}
		goto _match_end_5147497776;
		_case_end_5147502688:;
		if (!((jule::Str("find", 4)) == _match_expr)) { goto _case_end_5147498832; }
		_case_begin_5147498832:;
		{
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_127ed52e0_FnIns>(new( std::nothrow ) _127ed52e0_FnIns(jule::Ref<_127b2e960_StructIns>(),jule::Ref<_127ed52e0_Fn>(),jule::Slice<jule::Ref<_1304dc9b0_TypeKind>>(),jule::Slice<jule::Ref<_127ed52e0_ParamIns>>({jule::new_struct<_127ed52e0_ParamIns>(new( std::nothrow ) _127ed52e0_ParamIns(jule::new_struct<_127ed52e0_Param>(new( std::nothrow ) _127ed52e0_Param(_127941de0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1304dc9b0_TypeSymbol>(),jule::Str("sub", 3))),_232841_d->_field_kind))}),jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("int", 3)))),jule::Ref<_1300a11b0_Scope>(),_130b8f5f0_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_1279cf930_CommonSubIdentExprModel>(new( std::nothrow ) _1279cf930_CommonSubIdentExprModel(_232841_d->_field_kind,_232841_d->_field_model,jule::Str("find", 4))),jule::Bool(),jule::Ref<_130c83140_Const>()));
		}
		goto _match_end_5147497776;
		_case_end_5147498832:;
		if (!((jule::Str("rfind", 5)) == _match_expr)) { goto _case_end_5147498944; }
		_case_begin_5147498944:;
		{
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_127ed52e0_FnIns>(new( std::nothrow ) _127ed52e0_FnIns(jule::Ref<_127b2e960_StructIns>(),jule::Ref<_127ed52e0_Fn>(),jule::Slice<jule::Ref<_1304dc9b0_TypeKind>>(),jule::Slice<jule::Ref<_127ed52e0_ParamIns>>({jule::new_struct<_127ed52e0_ParamIns>(new( std::nothrow ) _127ed52e0_ParamIns(jule::new_struct<_127ed52e0_Param>(new( std::nothrow ) _127ed52e0_Param(_127941de0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1304dc9b0_TypeSymbol>(),jule::Str("sub", 3))),_232841_d->_field_kind))}),jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("int", 3)))),jule::Ref<_1300a11b0_Scope>(),_130b8f5f0_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_1279cf930_CommonSubIdentExprModel>(new( std::nothrow ) _1279cf930_CommonSubIdentExprModel(_232841_d->_field_kind,_232841_d->_field_model,jule::Str("rfind", 5))),jule::Bool(),jule::Ref<_130c83140_Const>()));
		}
		goto _match_end_5147497776;
		_case_end_5147498944:;
		if (!((jule::Str("trim", 4)) == _match_expr)) { goto _case_end_5147499056; }
		_case_begin_5147499056:;
		{
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_127ed52e0_FnIns>(new( std::nothrow ) _127ed52e0_FnIns(jule::Ref<_127b2e960_StructIns>(),jule::Ref<_127ed52e0_Fn>(),jule::Slice<jule::Ref<_1304dc9b0_TypeKind>>(),jule::Slice<jule::Ref<_127ed52e0_ParamIns>>({jule::new_struct<_127ed52e0_ParamIns>(new( std::nothrow ) _127ed52e0_ParamIns(jule::new_struct<_127ed52e0_Param>(new( std::nothrow ) _127ed52e0_Param(_127941de0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1304dc9b0_TypeSymbol>(),jule::Str("bytes", 5))),_232841_d->_field_kind))}),_232841_d->_field_kind,jule::Ref<_1300a11b0_Scope>(),_130b8f5f0_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_1279cf930_CommonSubIdentExprModel>(new( std::nothrow ) _1279cf930_CommonSubIdentExprModel(_232841_d->_field_kind,_232841_d->_field_model,jule::Str("trim", 4))),jule::Bool(),jule::Ref<_130c83140_Const>()));
		}
		goto _match_end_5147497776;
		_case_end_5147499056:;
		if (!((jule::Str("rtrim", 5)) == _match_expr)) { goto _case_end_5147502864; }
		_case_begin_5147502864:;
		{
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_127ed52e0_FnIns>(new( std::nothrow ) _127ed52e0_FnIns(jule::Ref<_127b2e960_StructIns>(),jule::Ref<_127ed52e0_Fn>(),jule::Slice<jule::Ref<_1304dc9b0_TypeKind>>(),jule::Slice<jule::Ref<_127ed52e0_ParamIns>>({jule::new_struct<_127ed52e0_ParamIns>(new( std::nothrow ) _127ed52e0_ParamIns(jule::new_struct<_127ed52e0_Param>(new( std::nothrow ) _127ed52e0_Param(_127941de0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1304dc9b0_TypeSymbol>(),jule::Str("bytes", 5))),_232841_d->_field_kind))}),_232841_d->_field_kind,jule::Ref<_1300a11b0_Scope>(),_130b8f5f0_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_1279cf930_CommonSubIdentExprModel>(new( std::nothrow ) _1279cf930_CommonSubIdentExprModel(_232841_d->_field_kind,_232841_d->_field_model,jule::Str("rtrim", 5))),jule::Bool(),jule::Ref<_130c83140_Const>()));
		}
		goto _match_end_5147497776;
		_case_end_5147502864:;
		if (!((jule::Str("split", 5)) == _match_expr)) { goto _case_end_5147502976; }
		_case_begin_5147502976:;
		{
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_127ed52e0_FnIns>(new( std::nothrow ) _127ed52e0_FnIns(jule::Ref<_127b2e960_StructIns>(),jule::Ref<_127ed52e0_Fn>(),jule::Slice<jule::Ref<_1304dc9b0_TypeKind>>(),jule::Slice<jule::Ref<_127ed52e0_ParamIns>>({jule::new_struct<_127ed52e0_ParamIns>(new( std::nothrow ) _127ed52e0_ParamIns(jule::new_struct<_127ed52e0_Param>(new( std::nothrow ) _127ed52e0_Param(_127941de0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1304dc9b0_TypeSymbol>(),jule::Str("sub", 3))),_232841_d->_field_kind)),jule::new_struct<_127ed52e0_ParamIns>(new( std::nothrow ) _127ed52e0_ParamIns(jule::new_struct<_127ed52e0_Param>(new( std::nothrow ) _127ed52e0_Param(_127941de0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1304dc9b0_TypeSymbol>(),jule::Str("n", 1))),jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("int", 3))))))}),jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_1304dc9b0_Slc>(new( std::nothrow ) _1304dc9b0_Slc(_232841_d->_field_kind)))),jule::Ref<_1300a11b0_Scope>(),_130b8f5f0_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_1279cf930_CommonSubIdentExprModel>(new( std::nothrow ) _1279cf930_CommonSubIdentExprModel(_232841_d->_field_kind,_232841_d->_field_model,jule::Str("split", 5))),jule::Bool(),jule::Ref<_130c83140_Const>()));
		}
		goto _match_end_5147497776;
		_case_end_5147502976:;
		if (!((jule::Str("replace", 7)) == _match_expr)) { goto _case_end_5147503088; }
		_case_begin_5147503088:;
		{
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_127ed52e0_FnIns>(new( std::nothrow ) _127ed52e0_FnIns(jule::Ref<_127b2e960_StructIns>(),jule::Ref<_127ed52e0_Fn>(),jule::Slice<jule::Ref<_1304dc9b0_TypeKind>>(),jule::Slice<jule::Ref<_127ed52e0_ParamIns>>({jule::new_struct<_127ed52e0_ParamIns>(new( std::nothrow ) _127ed52e0_ParamIns(jule::new_struct<_127ed52e0_Param>(new( std::nothrow ) _127ed52e0_Param(_127941de0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1304dc9b0_TypeSymbol>(),jule::Str("sub", 3))),_232841_d->_field_kind)),jule::new_struct<_127ed52e0_ParamIns>(new( std::nothrow ) _127ed52e0_ParamIns(jule::new_struct<_127ed52e0_Param>(new( std::nothrow ) _127ed52e0_Param(_127941de0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1304dc9b0_TypeSymbol>(),jule::Str("new", 3))),_232841_d->_field_kind)),jule::new_struct<_127ed52e0_ParamIns>(new( std::nothrow ) _127ed52e0_ParamIns(jule::new_struct<_127ed52e0_Param>(new( std::nothrow ) _127ed52e0_Param(_127941de0_Token(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Ref<_1304dc9b0_TypeSymbol>(),jule::Str("n", 1))),jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("int", 3))))))}),_232841_d->_field_kind,jule::Ref<_1300a11b0_Scope>(),_130b8f5f0_builtin_caller_common,jule::Bool(),jule::Bool())))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_1279cf930_CommonSubIdentExprModel>(new( std::nothrow ) _1279cf930_CommonSubIdentExprModel(_232841_d->_field_kind,_232841_d->_field_model,jule::Str("replace", 7))),jule::Bool(),jule::Ref<_130c83140_Const>()));
		}
		goto _match_end_5147497776;
		_case_end_5147503088:;
		_case_begin_5147498528:;
		{
			(*this)._method_push_err(_232851_ident,jule::Str("obj_have_not_ident", 18),jule::Slice<jule::Any>({jule::Any(_232851_ident._field_kind)}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5147497776;
		_case_end_5147498528:;
		_match_end_5147497776:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_int_type_static(_127941de0_Token _255339_ident) {
	
	{
		auto &_match_expr{ _255339_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_5147565056; }
		_case_begin_5147565056:;
		{
			jule::Ref<_130c83140_Const> _255821_c = _130c83140_new_i64(static_cast<jule::I64>(_130cde370_max_of(jule::Str("int", 3))));
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("int", 3)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_255821_c,jule::Bool(),_255821_c));
		}
		goto _match_end_5147560048;
		_case_end_5147565056:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_5147565280; }
		_case_begin_5147565280:;
		{
			jule::Ref<_130c83140_Const> _256621_c = _130c83140_new_i64(static_cast<jule::I64>(_130cde370_min_of(jule::Str("int", 3))));
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("int", 3)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_256621_c,jule::Bool(),_256621_c));
		}
		goto _match_end_5147560048;
		_case_end_5147565280:;
		_case_begin_5147561104:;
		{
			(*this)._method_push_err(_255339_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("int", 3)),jule::Any(_255339_ident._field_kind)}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5147560048;
		_case_end_5147561104:;
		_match_end_5147560048:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_uint_type_static(_127941de0_Token _257940_ident) {
	
	{
		auto &_match_expr{ _257940_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_5147581584; }
		_case_begin_5147581584:;
		{
			jule::Ref<_130c83140_Const> _258421_c = _130c83140_new_u64(static_cast<jule::U64>(_130cde370_max_of(jule::Str("uint", 4))));
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("uint", 4)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_258421_c,jule::Bool(),_258421_c));
		}
		goto _match_end_5147576576;
		_case_end_5147581584:;
		_case_begin_5147577632:;
		{
			(*this)._method_push_err(_257940_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("uint", 4)),jule::Any(_257940_ident._field_kind)}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5147576576;
		_case_end_5147577632:;
		_match_end_5147576576:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_i8_type_static(_127941de0_Token _259738_ident) {
	
	
	
	{
		auto &_match_expr{ _259738_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_5147596112; }
		_case_begin_5147596112:;
		{
			jule::Ref<_130c83140_Const> _260421_c = _130c83140_new_i64(127LL);
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("i8", 2)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_260421_c,jule::Bool(),_260421_c));
		}
		goto _match_end_5147591136;
		_case_end_5147596112:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_5147595856; }
		_case_begin_5147595856:;
		{
			jule::Ref<_130c83140_Const> _261221_c = _130c83140_new_i64(-128LL);
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("i8", 2)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_261221_c,jule::Bool(),_261221_c));
		}
		goto _match_end_5147591136;
		_case_end_5147595856:;
		_case_begin_5147592000:;
		{
			(*this)._method_push_err(_259738_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("i8", 2)),jule::Any(_259738_ident._field_kind)}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5147591136;
		_case_end_5147592000:;
		_match_end_5147591136:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_i16_type_static(_127941de0_Token _262539_ident) {
	
	
	
	{
		auto &_match_expr{ _262539_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_5147612976; }
		_case_begin_5147612976:;
		{
			jule::Ref<_130c83140_Const> _263221_c = _130c83140_new_i64(32767LL);
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("i16", 3)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_263221_c,jule::Bool(),_263221_c));
		}
		goto _match_end_5147608256;
		_case_end_5147612976:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_5147613200; }
		_case_begin_5147613200:;
		{
			jule::Ref<_130c83140_Const> _264021_c = _130c83140_new_i64(-32768LL);
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("i16", 3)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_264021_c,jule::Bool(),_264021_c));
		}
		goto _match_end_5147608256;
		_case_end_5147613200:;
		_case_begin_5147609120:;
		{
			(*this)._method_push_err(_262539_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("i16", 3)),jule::Any(_262539_ident._field_kind)}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5147608256;
		_case_end_5147609120:;
		_match_end_5147608256:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_i32_type_static(_127941de0_Token _265339_ident) {
	
	
	
	{
		auto &_match_expr{ _265339_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_5147630352; }
		_case_begin_5147630352:;
		{
			jule::Ref<_130c83140_Const> _266021_c = _130c83140_new_i64(2147483647LL);
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_266021_c,jule::Bool(),_266021_c));
		}
		goto _match_end_5147615008;
		_case_end_5147630352:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_5147630096; }
		_case_begin_5147630096:;
		{
			jule::Ref<_130c83140_Const> _266821_c = _130c83140_new_i64(-2147483648LL);
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("i32", 3)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_266821_c,jule::Bool(),_266821_c));
		}
		goto _match_end_5147615008;
		_case_end_5147630096:;
		_case_begin_5147626240:;
		{
			(*this)._method_push_err(_265339_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("i32", 3)),jule::Any(_265339_ident._field_kind)}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5147615008;
		_case_end_5147626240:;
		_match_end_5147615008:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_i64_type_static(_127941de0_Token _268139_ident) {
	
	
	
	{
		auto &_match_expr{ _268139_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_5147648128; }
		_case_begin_5147648128:;
		{
			jule::Ref<_130c83140_Const> _268821_c = _130c83140_new_i64(jule::MIN_I64);
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_268821_c,jule::Bool(),_268821_c));
		}
		goto _match_end_5147642976;
		_case_end_5147648128:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_5147648240; }
		_case_begin_5147648240:;
		{
			jule::Ref<_130c83140_Const> _269621_c = _130c83140_new_i64(jule::MAX_I64);
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("i64", 3)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_269621_c,jule::Bool(),_269621_c));
		}
		goto _match_end_5147642976;
		_case_end_5147648240:;
		_case_begin_5147643840:;
		{
			(*this)._method_push_err(_268139_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("i64", 3)),jule::Any(_268139_ident._field_kind)}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5147642976;
		_case_end_5147643840:;
		_match_end_5147642976:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_u8_type_static(_127941de0_Token _270938_ident) {
	
	
	{
		auto &_match_expr{ _270938_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_5147662784; }
		_case_begin_5147662784:;
		{
			jule::Ref<_130c83140_Const> _271521_c = _130c83140_new_u64(255LLU);
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("u8", 2)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_271521_c,jule::Bool(),_271521_c));
		}
		goto _match_end_5147658032;
		_case_end_5147662784:;
		_case_begin_5147658784:;
		{
			(*this)._method_push_err(_270938_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("u8", 2)),jule::Any(_270938_ident._field_kind)}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5147658032;
		_case_end_5147658784:;
		_match_end_5147658032:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_u16_type_static(_127941de0_Token _272839_ident) {
	
	
	{
		auto &_match_expr{ _272839_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_5147675280; }
		_case_begin_5147675280:;
		{
			jule::Ref<_130c83140_Const> _273421_c = _130c83140_new_u64(65535LLU);
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("u16", 3)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_273421_c,jule::Bool(),_273421_c));
		}
		goto _match_end_5147670528;
		_case_end_5147675280:;
		_case_begin_5147671280:;
		{
			(*this)._method_push_err(_272839_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("u16", 3)),jule::Any(_272839_ident._field_kind)}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5147670528;
		_case_end_5147671280:;
		_match_end_5147670528:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_u32_type_static(_127941de0_Token _274739_ident) {
	
	
	{
		auto &_match_expr{ _274739_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_5147687680; }
		_case_begin_5147687680:;
		{
			jule::Ref<_130c83140_Const> _275321_c = _130c83140_new_u64(4294967295LLU);
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("u32", 3)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_275321_c,jule::Bool(),_275321_c));
		}
		goto _match_end_5147682928;
		_case_end_5147687680:;
		_case_begin_5147683680:;
		{
			(*this)._method_push_err(_274739_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("u32", 3)),jule::Any(_274739_ident._field_kind)}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5147682928;
		_case_end_5147683680:;
		_match_end_5147682928:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_u64_type_static(_127941de0_Token _276639_ident) {
	
	
	{
		auto &_match_expr{ _276639_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_5147700224; }
		_case_begin_5147700224:;
		{
			jule::Ref<_130c83140_Const> _277221_c = _130c83140_new_u64(jule::MAX_U64);
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("u64", 3)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_277221_c,jule::Bool(),_277221_c));
		}
		goto _match_end_5147695472;
		_case_end_5147700224:;
		_case_begin_5147696224:;
		{
			(*this)._method_push_err(_276639_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("u64", 3)),jule::Any(_276639_ident._field_kind)}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5147695472;
		_case_end_5147696224:;
		_match_end_5147695472:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_f32_type_tatic(_127941de0_Token _278538_ident) {
	
	
	
	{
		auto &_match_expr{ _278538_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_5147713728; }
		_case_begin_5147713728:;
		{
			jule::Ref<_130c83140_Const> _279221_c = _130c83140_new_f64(3.4028234663852886e+38);
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("f32", 3)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_279221_c,jule::Bool(),_279221_c));
		}
		goto _match_end_5147708320;
		_case_end_5147713728:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_5147713952; }
		_case_begin_5147713952:;
		{
			jule::Ref<_130c83140_Const> _280021_c = _130c83140_new_f64(-3.4028234663852886e+38);
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("f32", 3)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_280021_c,jule::Bool(),_280021_c));
		}
		goto _match_end_5147708320;
		_case_end_5147713952:;
		_case_begin_5147709872:;
		{
			(*this)._method_push_err(_278538_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("f32", 3)),jule::Any(_278538_ident._field_kind)}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5147708320;
		_case_end_5147709872:;
		_match_end_5147708320:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_f64_type_static(_127941de0_Token _281339_ident) {
	
	
	
	{
		auto &_match_expr{ _281339_ident._field_kind };
		if (!((jule::Str("MAX", 3)) == _match_expr)) { goto _case_end_5147731024; }
		_case_begin_5147731024:;
		{
			jule::Ref<_130c83140_Const> _282021_c = _130c83140_new_f64(jule::MAX_F64);
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("f64", 3)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_282021_c,jule::Bool(),_282021_c));
		}
		goto _match_end_5147725472;
		_case_end_5147731024:;
		if (!((jule::Str("MIN", 3)) == _match_expr)) { goto _case_end_5147731248; }
		_case_begin_5147731248:;
		{
			jule::Ref<_130c83140_Const> _282821_c = _130c83140_new_f64(jule::MIN_F64);
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("f64", 3)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_282821_c,jule::Bool(),_282821_c));
		}
		goto _match_end_5147725472;
		_case_end_5147731248:;
		_case_begin_5147727168:;
		{
			(*this)._method_push_err(_281339_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(jule::Str("f64", 3)),jule::Any(_281339_ident._field_kind)}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5147725472;
		_case_end_5147727168:;
		_match_end_5147725472:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_prim_static(jule::Str _284135_kind,_127941de0_Token _284146_ident) {
	{
		auto &_match_expr{ _284135_kind };
		if (!((jule::Str("int", 3)) == _match_expr)) { goto _case_end_5147745424; }
		_case_begin_5147745424:;
		{
			return (*this)._method_eval_int_type_static(_284146_ident);
		}
		goto _match_end_5147740864;
		_case_end_5147745424:;
		if (!((jule::Str("uint", 4)) == _match_expr)) { goto _case_end_5147745696; }
		_case_begin_5147745696:;
		{
			return (*this)._method_eval_uint_type_static(_284146_ident);
		}
		goto _match_end_5147740864;
		_case_end_5147745696:;
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_5147745808; }
		_case_begin_5147745808:;
		{
			return (*this)._method_eval_i8_type_static(_284146_ident);
		}
		goto _match_end_5147740864;
		_case_end_5147745808:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_5147741760; }
		_case_begin_5147741760:;
		{
			return (*this)._method_eval_i16_type_static(_284146_ident);
		}
		goto _match_end_5147740864;
		_case_end_5147741760:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_5147741872; }
		_case_begin_5147741872:;
		{
			return (*this)._method_eval_i32_type_static(_284146_ident);
		}
		goto _match_end_5147740864;
		_case_end_5147741872:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_5147741984; }
		_case_begin_5147741984:;
		{
			return (*this)._method_eval_i64_type_static(_284146_ident);
		}
		goto _match_end_5147740864;
		_case_end_5147741984:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_5147745984; }
		_case_begin_5147745984:;
		{
			return (*this)._method_eval_u8_type_static(_284146_ident);
		}
		goto _match_end_5147740864;
		_case_end_5147745984:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_5147746096; }
		_case_begin_5147746096:;
		{
			return (*this)._method_eval_u16_type_static(_284146_ident);
		}
		goto _match_end_5147740864;
		_case_end_5147746096:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_5147746208; }
		_case_begin_5147746208:;
		{
			return (*this)._method_eval_u32_type_static(_284146_ident);
		}
		goto _match_end_5147740864;
		_case_end_5147746208:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_5147746400; }
		_case_begin_5147746400:;
		{
			return (*this)._method_eval_u64_type_static(_284146_ident);
		}
		goto _match_end_5147740864;
		_case_end_5147746400:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_5147746512; }
		_case_begin_5147746512:;
		{
			return (*this)._method_eval_f32_type_tatic(_284146_ident);
		}
		goto _match_end_5147740864;
		_case_end_5147746512:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_5147746624; }
		_case_begin_5147746624:;
		{
			return (*this)._method_eval_f64_type_static(_284146_ident);
		}
		goto _match_end_5147740864;
		_case_end_5147746624:;
		_case_begin_5147740960:;
		{
			(*this)._method_push_err(_284146_ident,jule::Str("type_have_not_ident", 19),jule::Slice<jule::Any>({jule::Any(_284135_kind),jule::Any(_284146_ident._field_kind)}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5147740864;
		_case_end_5147740960:;
		_match_end_5147740864:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_type_static(jule::Ref<_13064b610_Data> _286139_d,jule::Ref<_1275d7180_SubIdentExpr> _286153_si) {
	{
		if (!((jule::real(_286139_d->_field_kind->_method_prim())))) { goto _case_end_5147770304; }
		_case_begin_5147770304:;
		{
			return (*this)._method_eval_prim_static(_286139_d->_field_kind->_method_prim()->_method_to_str(),_286153_si->_field_ident);
		}
		goto _match_end_5147765616;
		_case_end_5147770304:;
		if (!((jule::real(_286139_d->_field_kind->_method_enm())))) { goto _case_end_5147770048; }
		_case_begin_5147770048:;
		{
			return (*this)._method_eval_enum_static(_286139_d->_field_kind->_method_enm(),_286153_si->_field_ident);
		}
		goto _match_end_5147765616;
		_case_end_5147770048:;
		if (!((jule::real(_286139_d->_field_kind->_method_strct())))) { goto _case_end_5147770576; }
		_case_begin_5147770576:;
		{
			return (*this)._method_eval_struct_static(_286139_d->_field_kind->_method_strct(),_286153_si->_field_ident);
		}
		goto _match_end_5147765616;
		_case_end_5147770576:;
		_case_begin_5147765824:;
		{
			(*this)._method_push_err(_286153_si->_field_ident,jule::Str("type_not_support_sub_fields", 27),jule::Slice<jule::Any>({jule::Any(_286139_d->_field_kind->_method_to_str())}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5147765616;
		_case_end_5147765824:;
		_match_end_5147765616:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_obj_sub_ident(jule::Ref<_13064b610_Data> _287841_d,jule::Ref<_1275d7180_SubIdentExpr> _287855_si) {
	jule::Ref<_1304dc9b0_TypeKind> _287917_kind = _287841_d->_field_kind;
	if (jule::real(_287841_d->_field_kind->_method_ptr())) {
		jule::Ref<_1304dc9b0_Ptr> _288117_ptr = _287841_d->_field_kind->_method_ptr();
		if ((!(_288117_ptr->_method_is_unsafe()))) {
			if ((!(_287855_si->_field_is_self)) && (!((*this)._method_is_unsafe()))) {
				(*this)._method_push_err(_287855_si->_field_ident,jule::Str("unsafe_behavior_at_out_of_unsafe_scope", 38),jule::Slice<jule::Any>({}));
			}
			_287917_kind=_287841_d->_field_kind->_method_ptr()->_field_elem;
		}
	} else if (jule::real(_287841_d->_field_kind->_method_ref())) {
		_287917_kind=_287841_d->_field_kind->_method_ref()->_field_elem;
	}
	{
		if (!((jule::real(_287841_d->_field_kind->_method_trt())))) { goto _case_end_5147796464; }
		_case_begin_5147796464:;
		{
			return (*this)._method_eval_trait_sub_ident(_287841_d,_287841_d->_field_kind->_method_trt(),_287855_si->_field_ident);
		}
		goto _match_end_5147796096;
		_case_end_5147796464:;
		if (!((jule::real(_287917_kind->_method_strct())))) { goto _case_end_5147796576; }
		_case_begin_5147796576:;
		{
			jule::Ref<_127b2e960_StructIns> _289717_s = _287917_kind->_method_strct();
			if (_13064b610_is_instanced_struct(_289717_s)) {
				jule::Bool _289925_used_reference_elem = jule::real(_287841_d->_field_kind->_method_ref());
				return (*this)._method_eval_struct_sub_ident(_287841_d,_287917_kind->_method_strct(),_287855_si,_289925_used_reference_elem);
			}
		}
		goto _match_end_5147796096;
		_case_end_5147796576:;
		if (!((jule::real(_287917_kind->_method_slc())))) { goto _case_end_5147796688; }
		_case_begin_5147796688:;
		{
			return (*this)._method_eval_slice_sub_ident(_287841_d,_287855_si->_field_ident);
		}
		goto _match_end_5147796096;
		_case_end_5147796688:;
		if (!((jule::real(_287917_kind->_method_arr())))) { goto _case_end_5147796800; }
		_case_begin_5147796800:;
		{
			return (*this)._method_eval_array_sub_ident(_287841_d,_287855_si->_field_ident);
		}
		goto _match_end_5147796096;
		_case_end_5147796800:;
		if (!((jule::real(_287917_kind->_method_map())))) { goto _case_end_5147796928; }
		_case_begin_5147796928:;
		{
			return (*this)._method_eval_map_sub_ident(_287841_d,_287855_si->_field_ident);
		}
		goto _match_end_5147796096;
		_case_end_5147796928:;
		if (!((jule::real(_287917_kind->_method_prim())))) { goto _case_end_5147797056; }
		_case_begin_5147797056:;
		{
			jule::Ref<_1304dc9b0_Prim> _291317_p = _287917_kind->_method_prim();
			{
				auto &_match_expr{ _291317_p->_field_kind };
				if (!((jule::Str("str", 3)) == _match_expr)) { goto _case_end_5147817360; }
				_case_begin_5147817360:;
				{
					return (*this)._method_eval_str_sub_ident(_287841_d,_287855_si->_field_ident);
				}
				goto _match_end_5147812976;
				_case_end_5147817360:;
				_match_end_5147812976:;
			}
		}
		goto _match_end_5147796096;
		_case_end_5147797056:;
		_match_end_5147796096:;
	}
	(*this)._method_push_err(_287855_si->_field_ident,jule::Str("obj_not_support_sub_fields", 26),jule::Slice<jule::Any>({jule::Any(_287841_d->_field_kind->_method_to_str())}));
	return jule::new_ref<_13064b610_Data>();
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_sub_ident(jule::Ref<_1275d7180_SubIdentExpr> _292438_si) {
	jule::Ref<_1304dc9b0_TypeKind> _292517_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_292517_prefix;
	});
	jule::Ref<_13064b610_Data> _292917_d = this->self->_method_eval_expr_kind(_292438_si->_field_expr);
	if ((!(jule::real(_292917_d)))) {
		return jule::new_ref<_13064b610_Data>();
	}
	if (_292917_d->_field_decl) {
		return this->self->_method_eval_type_static(_292917_d,_292438_si);
	}
	return this->self->_method_eval_obj_sub_ident(_292917_d,_292438_si);
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_tuple(jule::Ref<_1275d7180_TupleExpr> _294134_tup) {
	jule::Ref<_1304dc9b0_Tuple> _294217_tup_t = jule::new_struct<_1304dc9b0_Tuple>(new( std::nothrow ) _1304dc9b0_Tuple());
	_294217_tup_t->_field_types=jule::Slice<jule::Ref<_1304dc9b0_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_294134_tup->_field_expr.len())));
	jule::Ref<_1279cf930_TupleExprModel> _294517_model = jule::new_struct<_1279cf930_TupleExprModel>(new( std::nothrow ) _1279cf930_TupleExprModel(jule::Slice<jule::Ref<_13064b610_Data>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_294134_tup->_field_expr.len())))));
	jule::Bool _294917_ok = true;
	{
		auto &__julec_range_expr = _294134_tup->_field_expr;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _13064b610_i = 0;
			jule::Any _13064b610_expr = *__julec_range_begin;
			_iter_begin_5129317136:;
			{
				jule::Ref<_13064b610_Data> _295121_d = this->self->_method_eval_expr_kind(_13064b610_expr);
				if ((!(jule::real(_295121_d)))) {
					_294917_ok=false;
					goto _iter_next_5129317136;
				}
				_294217_tup_t->_field_types[static_cast<jule::Int>(_13064b610_i)]=_295121_d->_field_kind;
				_294517_model->_field_datas[static_cast<jule::Int>(_13064b610_i)]=_295121_d;
			}
			_iter_next_5129317136:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_13064b610_i; _13064b610_expr = *__julec_range_begin; goto _iter_begin_5129317136; }
			_iter_end_5129317136:;
		}
	}
	if ((!(_294917_ok))) {
		return jule::new_ref<_13064b610_Data>();
	}
	return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_294217_tup_t)),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),_294517_model,jule::Bool(),jule::Ref<_130c83140_Const>()));
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_map(jule::Ref<_1304dc9b0_Map> _297032_m,jule::Ref<_1275d7180_BraceLit> _297045_lit) {
	jule::Ref<_1279cf930_MapExprModel> _297117_model = jule::new_struct<_1279cf930_MapExprModel>(new( std::nothrow ) _1279cf930_MapExprModel(_297032_m->_field_key,_297032_m->_field_val,jule::Slice<jule::Ref<_1279cf930_KeyValPairExprModel>>()));
	{
		auto &__julec_range_expr = _297045_lit->_field_exprs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _13064b610_expr = *__julec_range_begin;
			_iter_begin_5148526624:;
			{
				{
					auto &_match_expr{ _13064b610_expr };
					if (!(_match_expr.type_is<jule::Ref<_1275d7180_KeyValPair>>())) { goto _case_end_5148531872; }
					goto _match_end_5148527856;
					_case_end_5148531872:;
					_case_begin_5148527952:;
					{
						this->self->_method_push_err(_297045_lit->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
						return jule::new_ref<_13064b610_Data>();
					}
					goto _match_end_5148527856;
					_case_end_5148527952:;
					_match_end_5148527856:;
				}
				jule::Ref<_1275d7180_KeyValPair> _298621_pair = _13064b610_expr.operator jule::Ref<_1275d7180_KeyValPair>();
				jule::Ref<_13064b610_Data> _298821_key = this->self->_method_eval_expr_kind(_298621_pair->_field_key);
				if ((!(jule::real(_298821_key)))) {
					return jule::new_ref<_13064b610_Data>();
				}
				jule::Ref<_13064b610_Data> _299321_val = this->self->_method_eval_expr_kind(_298621_pair->_field_val);
				if ((!(jule::real(_299321_val)))) {
					return jule::new_ref<_13064b610_Data>();
				}
				this->self->_field_s->_method_check_assign_type(_297032_m->_field_key,_298821_key,_298621_pair->_field_colon,true);
				this->self->_field_s->_method_check_assign_type(_297032_m->_field_val,_299321_val,_298621_pair->_field_colon,true);
				_297117_model->_field_entries=append(_297117_model->_field_entries,jule::Slice<jule::Ref<_1279cf930_KeyValPairExprModel>>({jule::new_struct<_1279cf930_KeyValPairExprModel>(new( std::nothrow ) _1279cf930_KeyValPairExprModel(_298821_key->_field_model,_299321_val->_field_model))}));
			}
			_iter_next_5148526624:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13064b610_expr = *__julec_range_begin; goto _iter_begin_5148526624; }
			_iter_end_5148526624:;
		}
	}
	return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_297032_m)),jule::Ref<_1304dc9b0_TypeKind>(),true,jule::Bool(),false,false,jule::Bool(),_297117_model,false,jule::Ref<_130c83140_Const>()));
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_brace_lit(jule::Ref<_1275d7180_BraceLit> _301738_lit) {
	{
		if (!(((!(jule::real(this->self->_field_prefix)))))) { goto _case_end_5148555568; }
		_case_begin_5148555568:;
		{
			this->self->_method_push_err(_301738_lit->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5148551696;
		_case_end_5148555568:;
		if (!((jule::real(this->self->_field_prefix->_method_map())))) { goto _case_end_5148555680; }
		_case_begin_5148555680:;
		{
			return this->self->_method_eval_map(this->self->_field_prefix->_method_map(),_301738_lit);
		}
		goto _match_end_5148551696;
		_case_end_5148555680:;
		if (!((jule::real(this->self->_field_prefix->_method_strct())))) { goto _case_end_5148552208; }
		_case_begin_5148552208:;
		{
			return this->self->_method_eval_struct_lit_explicit(this->self->_field_prefix->_method_strct(),_301738_lit->_field_exprs,_301738_lit->_field_token);
		}
		goto _match_end_5148551696;
		_case_end_5148552208:;
		_case_begin_5148551904:;
		{
			this->self->_method_push_err(_301738_lit->_field_token,jule::Str("invalid_syntax", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5148551696;
		_case_end_5148551904:;
		_match_end_5148551696:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_anon_fn(jule::Ref<_1275d7180_FnDecl> _303535_decl) {
	_1304dc9b0_TypeChecker _303617_tc = _1304dc9b0_TypeChecker((*this)._field_s,(*this)._field_lookup,jule::Ref<_1304dc9b0_Referencer>(),_127941de0_Token(),jule::Slice<jule::Ref<_1275d7180_GenericDecl>>(),jule::Slice<jule::Ref<_1304dc9b0_TypeAlias>>(),jule::Bool());
	jule::Ref<_127ed52e0_FnIns> _304017_ins = _303617_tc._method_build_fn(_303535_decl);
	_304017_ins->_field_anon=true;
	{
		auto &_match_expr{ (*this)._field_lookup };
		if (!(_match_expr.type_is<jule::Ref<_1300a11b0_ScopeChecker>>())) { goto _case_end_5148575840; }
		_case_begin_5148575840:;
		{
			jule::Ref<_1300a11b0_ScopeChecker> _304521_sc = (*this)._field_lookup.operator jule::Ref<_1300a11b0_ScopeChecker>();
			jule::Ref<_1300a11b0_ScopeChecker> _304621_scc = _304521_sc->_method_new_child_checker();
			_304621_scc->_field_labels=jule::new_ref<jule::Slice<jule::Ref<_1300a11b0_ScopeLabel>>>(nullptr);
			_304621_scc->_field_gotos=jule::new_ref<jule::Slice<jule::Ref<_1300a11b0_ScopeGoto>>>(nullptr);
			jule::drop(_304621_scc->_field_owner);
			_304621_scc->_field_child_index=0LL;
			_304621_scc->_field_it=0LL;
			_304621_scc->_field_cse=0LL;
			_304621_scc->_field_owner=_304017_ins;
			(*this)._field_s->_method_check_fn_ins_sc(_304017_ins,_304621_scc);
		}
		goto _match_end_5148573664;
		_case_end_5148575840:;
		_case_begin_5148568880:;
		{
			(*this)._field_s->_method_check_fn_ins(_304017_ins);
		}
		goto _match_end_5148573664;
		_case_end_5148568880:;
		_match_end_5148573664:;
	}
	return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_304017_ins)),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::new_struct<_1279cf930_AnonFnExprModel>(new( std::nothrow ) _1279cf930_AnonFnExprModel(_304017_ins,(*this)._method_is_global())),jule::Bool(),jule::Ref<_130c83140_Const>()));
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_binop(jule::Ref<_1275d7180_BinopExpr> _306934_op) {
	jule::Ref<_1304dc9b0_TypeKind> _307017_prefix = this->self->_field_prefix;
	jule::drop(this->self->_field_prefix);
	__JULE_DEFER({
		this->self->_field_prefix=_307017_prefix;
	});
	_13064b610_BinopSolver _307417_bs = _13064b610_BinopSolver(this->self,jule::Ref<_13064b610_Data>(),jule::Ref<_13064b610_Data>(),_127941de0_Token());
	return _307417_bs._method_solve(_306934_op);
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_expr_kind(jule::Any _308038_kind) {
	jule::Ref<_13064b610_Data> _308117_d = jule::new_ref<_13064b610_Data>();
	{
		auto &_match_expr{ _308038_kind };
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_LitExpr>>())) { goto _case_end_5148604176; }
		_case_begin_5148604176:;
		{
			_308117_d=this->self->_method_eval_lit(_308038_kind.operator jule::Ref<_1275d7180_LitExpr>());
		}
		goto _match_end_5148601520;
		_case_end_5148604176:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_IdentExpr>>())) { goto _case_end_5148603632; }
		_case_begin_5148603632:;
		{
			_308117_d=this->self->_method_eval_ident(_308038_kind.operator jule::Ref<_1275d7180_IdentExpr>());
		}
		goto _match_end_5148601520;
		_case_end_5148603632:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_UnaryExpr>>())) { goto _case_end_5148603744; }
		_case_begin_5148603744:;
		{
			_308117_d=this->self->_method_eval_unary(_308038_kind.operator jule::Ref<_1275d7180_UnaryExpr>());
		}
		goto _match_end_5148601520;
		_case_end_5148603744:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_VariadicExpr>>())) { goto _case_end_5148604736; }
		_case_begin_5148604736:;
		{
			_308117_d=this->self->_method_eval_variadic(_308038_kind.operator jule::Ref<_1275d7180_VariadicExpr>());
		}
		goto _match_end_5148601520;
		_case_end_5148604736:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_UnsafeExpr>>())) { goto _case_end_5148604848; }
		_case_begin_5148604848:;
		{
			_308117_d=this->self->_method_eval_unsafe(_308038_kind.operator jule::Ref<_1275d7180_UnsafeExpr>());
		}
		goto _match_end_5148601520;
		_case_end_5148604848:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_SliceExpr>>())) { goto _case_end_5148604960; }
		_case_begin_5148604960:;
		{
			_308117_d=this->self->_method_eval_slice_expr(_308038_kind.operator jule::Ref<_1275d7180_SliceExpr>());
		}
		goto _match_end_5148601520;
		_case_end_5148604960:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_IndexingExpr>>())) { goto _case_end_5148605072; }
		_case_begin_5148605072:;
		{
			_308117_d=this->self->_method_eval_indexing(_308038_kind.operator jule::Ref<_1275d7180_IndexingExpr>());
		}
		goto _match_end_5148601520;
		_case_end_5148605072:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_SlicingExpr>>())) { goto _case_end_5148605184; }
		_case_begin_5148605184:;
		{
			_308117_d=this->self->_method_eval_slicing(_308038_kind.operator jule::Ref<_1275d7180_SlicingExpr>());
		}
		goto _match_end_5148601520;
		_case_end_5148605184:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_CastExpr>>())) { goto _case_end_5148605296; }
		_case_begin_5148605296:;
		{
			_308117_d=this->self->_method_eval_cast(_308038_kind.operator jule::Ref<_1275d7180_CastExpr>());
		}
		goto _match_end_5148601520;
		_case_end_5148605296:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_NsSelectionExpr>>())) { goto _case_end_5148605408; }
		_case_begin_5148605408:;
		{
			_308117_d=this->self->_method_eval_ns_selection(_308038_kind.operator jule::Ref<_1275d7180_NsSelectionExpr>());
		}
		goto _match_end_5148601520;
		_case_end_5148605408:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_StructLit>>())) { goto _case_end_5148605520; }
		_case_begin_5148605520:;
		{
			_308117_d=this->self->_method_eval_struct_lit(_308038_kind.operator jule::Ref<_1275d7180_StructLit>());
		}
		goto _match_end_5148601520;
		_case_end_5148605520:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_TypeDecl>>())) { goto _case_end_5148605632; }
		_case_begin_5148605632:;
		{
			_308117_d=this->self->_method_eval_type(_308038_kind.operator jule::Ref<_1275d7180_TypeDecl>());
		}
		goto _match_end_5148601520;
		_case_end_5148605632:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_FnCallExpr>>())) { goto _case_end_5148605744; }
		_case_begin_5148605744:;
		{
			_308117_d=this->self->_method_eval_fn_call(_308038_kind.operator jule::Ref<_1275d7180_FnCallExpr>());
		}
		goto _match_end_5148601520;
		_case_end_5148605744:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_SubIdentExpr>>())) { goto _case_end_5148605856; }
		_case_begin_5148605856:;
		{
			_308117_d=this->self->_method_eval_sub_ident(_308038_kind.operator jule::Ref<_1275d7180_SubIdentExpr>());
		}
		goto _match_end_5148601520;
		_case_end_5148605856:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_TupleExpr>>())) { goto _case_end_5148605968; }
		_case_begin_5148605968:;
		{
			_308117_d=this->self->_method_eval_tuple(_308038_kind.operator jule::Ref<_1275d7180_TupleExpr>());
		}
		goto _match_end_5148601520;
		_case_end_5148605968:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_BraceLit>>())) { goto _case_end_5148606080; }
		_case_begin_5148606080:;
		{
			_308117_d=this->self->_method_eval_brace_lit(_308038_kind.operator jule::Ref<_1275d7180_BraceLit>());
		}
		goto _match_end_5148601520;
		_case_end_5148606080:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_FnDecl>>())) { goto _case_end_5148606192; }
		_case_begin_5148606192:;
		{
			_308117_d=this->self->_method_eval_anon_fn(_308038_kind.operator jule::Ref<_1275d7180_FnDecl>());
		}
		goto _match_end_5148601520;
		_case_end_5148606192:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_BinopExpr>>())) { goto _case_end_5148606304; }
		_case_begin_5148606304:;
		{
			_308117_d=this->self->_method_eval_binop(_308038_kind.operator jule::Ref<_1275d7180_BinopExpr>());
		}
		goto _match_end_5148601520;
		_case_end_5148606304:;
		_case_begin_5148602672:;
		{
			jule::drop(_308117_d);
		}
		goto _match_end_5148601520;
		_case_end_5148602672:;
		_match_end_5148601520:;
	}
	if ((!(jule::real(_308117_d)))) {
		return jule::new_ref<_13064b610_Data>();
	}
	if ((!(jule::real(_308117_d->_field_kind)))) {
		return _308117_d;
	}
	if ((((!(jule::real(_308117_d->_field_cast_kind))) && _308117_d->_method_is_const()) && (!(_308117_d->_field_is_rune))) && jule::real(_308117_d->_field_kind->_method_prim())) {
		{
			if (!((_308117_d->_field_constant->_method_is_i64()))) { goto _case_end_5148647568; }
			_case_begin_5148647568:;
			{
				if (_13032cf90_int_assignable(jule::Str("int", 3),_308117_d)) {
					_308117_d->_field_kind->_field_kind=_1304dc9b0_build_prim_type(jule::Str("int", 3));
				}
			}
			goto _match_end_5148647328;
			_case_end_5148647568:;
			if (!((_308117_d->_field_constant->_method_is_u64()))) { goto _case_end_5148647680; }
			_case_begin_5148647680:;
			{
				if (_13032cf90_int_assignable(jule::Str("uint", 4),_308117_d)) {
					_308117_d->_field_kind->_field_kind=_1304dc9b0_build_prim_type(jule::Str("uint", 4));
				}
			}
			goto _match_end_5148647328;
			_case_end_5148647680:;
			_match_end_5148647328:;
		}
	}
	if ((!(_308117_d->_field_decl))) {
		if ((((((jule::real(this->self->_field_prefix) && (!(jule::real(_308117_d->_field_cast_kind)))) && (!(_308117_d->_field_variadiced))) && (!(_308117_d->_field_lvalue))) && (!(_308117_d->_method_is_const()))) && jule::real(_308117_d->_field_kind->_method_prim())) && _130d7f700_is_num(_308117_d->_field_kind->_method_prim()->_field_kind)) {
			_308117_d->_field_cast_kind=_308117_d->_field_kind;
		}
		_13064b610_apply_cast_kind(_308117_d);
		if ((!(jule::real(_308117_d->_field_kind->_method_prim()))) || (!(_308117_d->_field_kind->_method_prim()->_method_is_any()))) {
			if ((jule::real(this->self->_field_prefix) && jule::real(this->self->_field_prefix->_method_prim())) && this->self->_field_prefix->_method_prim()->_method_is_any()) {
				_308117_d->_field_cast_kind=this->self->_field_prefix;
				_13064b610_apply_cast_kind_model(_308117_d);
				jule::drop(_308117_d->_field_cast_kind);
			}
		}
	}
	return _308117_d;
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval(jule::Ref<_1275d7180_Expr> _315628_expr) {
	jule::Ref<_13064b610_Data> _315717_d = this->self->_method_eval_expr_kind(_315628_expr->_field_kind);
	if ((!(jule::real(_315717_d))) || (!(jule::real(_315717_d->_field_kind)))) {
		return jule::new_ref<_13064b610_Data>();
	}
	{
		if (!((jule::real(_315717_d->_field_kind->_method_fnc())))) { goto _case_end_5148683632; }
		_case_begin_5148683632:;
		{
			jule::Ref<_127ed52e0_FnIns> _316421_f = _315717_d->_field_kind->_method_fnc();
			if (_316421_f->_method_is_builtin()) {
				goto _match_end_5148683424;
			}
			if (_316421_f->_field_generics.len() != _316421_f->_field_decl->_field_generics.len()) {
				this->self->_field_s->_method_push_err(_315628_expr->_field_token,jule::Str("has_generics", 12),jule::Slice<jule::Any>({}));
			}
			if (_316421_f->_field_decl->_method_is_method()) {
				this->self->_field_s->_method_push_err(_315628_expr->_field_token,jule::Str("method_not_invoked", 18),jule::Slice<jule::Any>({}));
			}
		}
		goto _match_end_5148683424;
		_case_end_5148683632:;
		_match_end_5148683424:;
	}
	return _315717_d;
}



inline jule::Ref<_13064b610_Data> _13064b610_Eval::_method_eval_expr(jule::Ref<_1275d7180_Expr> _318433_expr) {
	jule::Ref<_13064b610_Data> _318517_d = this->self->_method_eval(_318433_expr);
	{
		if (!(((!(jule::real(_318517_d)))))) { goto _case_end_5148701264; }
		_case_begin_5148701264:;
		{
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5148699504;
		_case_end_5148701264:;
		if (!((_318517_d->_field_decl))) { goto _case_end_5148700800; }
		_case_begin_5148700800:;
		{
			this->self->_method_push_err(_318433_expr->_field_token,jule::Str("invalid_expr", 12),jule::Slice<jule::Any>({}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5148699504;
		_case_end_5148700800:;
		_case_begin_5148699760:;
		{
			return _318517_d;
		}
		goto _match_end_5148699504;
		_case_end_5148699760:;
		_match_end_5148699504:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _13064b610_Eval &_Src) {
	_Stream << "Eval{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "prefix:" << _Src._field_prefix << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "owner:" << _Src._field_owner;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1304dc9b0_TypeKind::_method_to_str(void) {
	if ((*this)._method_is_nil()) {
		return jule::Str("nil", 3);
	}
	if ((*this)._field_cpp_linked) {
		return jule::Str("cpp.", 4) + (*this)._field_cpp_ident;
	}
	return (*this)._field_kind.get()._method_to_str();
}



inline jule::Bool _1304dc9b0_TypeKind::_method_equals(jule::Ref<_1304dc9b0_TypeKind> _7121_other) {
	if ((*this)._method_is_nil()) {
		return _7121_other->_method_is_nil();
	}
	if ((*this)._field_cpp_linked) {
		if ((!(_7121_other->_field_cpp_linked))) {
			return false;
		}
		return (*this)._field_cpp_ident == _7121_other->_field_cpp_ident;
	}
	return (*this)._field_kind.get()._method_equals(_7121_other);
}



inline jule::Ref<_1304dc9b0_TypeKind> _1304dc9b0_TypeKind::_method_clone(void) {
	if ((!(jule::real(this->self)))) {
		return jule::new_ref<_1304dc9b0_TypeKind>();
	}
	jule::Ref<_1304dc9b0_TypeKind> _9417_kind = jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(this->self->_field_cpp_linked,this->self->_field_cpp_ident,this->self->_field_kind));
	return _9417_kind;
}



inline jule::Bool _1304dc9b0_TypeKind::_method_is_nil(void) {
	return (*this)._field_kind == nullptr;
}



inline jule::Bool _1304dc9b0_TypeKind::_method_is_void(void) {
	jule::Ref<_1304dc9b0_Prim> _10713_prim = (*((&((*this)))))._method_prim();
	return jule::real(_10713_prim) && (_10713_prim->_method_to_str() == jule::Str("void", 4));
}



inline jule::Ref<_1304dc9b0_Prim> _1304dc9b0_TypeKind::_method_prim(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1304dc9b0_Prim>>())) { goto _case_end_5144240720; }
		_case_begin_5144240720:;
		{
			return (*this)._field_kind.operator jule::Ref<_1304dc9b0_Prim>();
		}
		goto _match_end_5144239232;
		_case_end_5144240720:;
		_case_begin_5144239712:;
		{
			return jule::new_ref<_1304dc9b0_Prim>();
		}
		goto _match_end_5144239232;
		_case_end_5144239712:;
		_match_end_5144239232:;
	}
}



inline jule::Ref<_1304dc9b0_Ref> _1304dc9b0_TypeKind::_method_ref(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1304dc9b0_Ref>>())) { goto _case_end_5144244640; }
		_case_begin_5144244640:;
		{
			return (*this)._field_kind.operator jule::Ref<_1304dc9b0_Ref>();
		}
		goto _match_end_5144243456;
		_case_end_5144244640:;
		_case_begin_5144243648:;
		{
			return jule::new_ref<_1304dc9b0_Ref>();
		}
		goto _match_end_5144243456;
		_case_end_5144243648:;
		_match_end_5144243456:;
	}
}



inline jule::Ref<_1304dc9b0_Ptr> _1304dc9b0_TypeKind::_method_ptr(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1304dc9b0_Ptr>>())) { goto _case_end_5144248688; }
		_case_begin_5144248688:;
		{
			return (*this)._field_kind.operator jule::Ref<_1304dc9b0_Ptr>();
		}
		goto _match_end_5144243968;
		_case_end_5144248688:;
		_case_begin_5144247648:;
		{
			return jule::new_ref<_1304dc9b0_Ptr>();
		}
		goto _match_end_5144243968;
		_case_end_5144247648:;
		_match_end_5144243968:;
	}
}



inline jule::Ref<_13009ed30_Enum> _1304dc9b0_TypeKind::_method_enm(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_13009ed30_Enum>>())) { goto _case_end_5144252736; }
		_case_begin_5144252736:;
		{
			return (*this)._field_kind.operator jule::Ref<_13009ed30_Enum>();
		}
		goto _match_end_5144247968;
		_case_end_5144252736:;
		_case_begin_5144251840:;
		{
			return jule::new_ref<_13009ed30_Enum>();
		}
		goto _match_end_5144247968;
		_case_end_5144251840:;
		_match_end_5144247968:;
	}
}



inline jule::Ref<_1304dc9b0_Arr> _1304dc9b0_TypeKind::_method_arr(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1304dc9b0_Arr>>())) { goto _case_end_5144256640; }
		_case_begin_5144256640:;
		{
			return (*this)._field_kind.operator jule::Ref<_1304dc9b0_Arr>();
		}
		goto _match_end_5144253088;
		_case_end_5144256640:;
		_case_begin_5144255584:;
		{
			return jule::new_ref<_1304dc9b0_Arr>();
		}
		goto _match_end_5144253088;
		_case_end_5144255584:;
		_match_end_5144253088:;
	}
}



inline jule::Ref<_1304dc9b0_Slc> _1304dc9b0_TypeKind::_method_slc(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1304dc9b0_Slc>>())) { goto _case_end_5144260688; }
		_case_begin_5144260688:;
		{
			return (*this)._field_kind.operator jule::Ref<_1304dc9b0_Slc>();
		}
		goto _match_end_5144255904;
		_case_end_5144260688:;
		_case_begin_5144259792:;
		{
			return jule::new_ref<_1304dc9b0_Slc>();
		}
		goto _match_end_5144255904;
		_case_end_5144259792:;
		_match_end_5144255904:;
	}
}



inline jule::Ref<_127ed52e0_FnIns> _1304dc9b0_TypeKind::_method_fnc(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_127ed52e0_FnIns>>())) { goto _case_end_5144264592; }
		_case_begin_5144264592:;
		{
			return (*this)._field_kind.operator jule::Ref<_127ed52e0_FnIns>();
		}
		goto _match_end_5144261040;
		_case_end_5144264592:;
		_case_begin_5144263536:;
		{
			return jule::new_ref<_127ed52e0_FnIns>();
		}
		goto _match_end_5144261040;
		_case_end_5144263536:;
		_match_end_5144261040:;
	}
}



inline jule::Ref<_127b2e960_StructIns> _1304dc9b0_TypeKind::_method_strct(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_127b2e960_StructIns>>())) { goto _case_end_5144268496; }
		_case_begin_5144268496:;
		{
			return (*this)._field_kind.operator jule::Ref<_127b2e960_StructIns>();
		}
		goto _match_end_5144263856;
		_case_end_5144268496:;
		_case_begin_5144267600:;
		{
			return jule::new_ref<_127b2e960_StructIns>();
		}
		goto _match_end_5144263856;
		_case_end_5144267600:;
		_match_end_5144263856:;
	}
}



inline jule::Ref<_130099320_Trait> _1304dc9b0_TypeKind::_method_trt(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_130099320_Trait>>())) { goto _case_end_5144272400; }
		_case_begin_5144272400:;
		{
			return (*this)._field_kind.operator jule::Ref<_130099320_Trait>();
		}
		goto _match_end_5144268848;
		_case_end_5144272400:;
		_case_begin_5144271344:;
		{
			return jule::new_ref<_130099320_Trait>();
		}
		goto _match_end_5144268848;
		_case_end_5144271344:;
		_match_end_5144268848:;
	}
}



inline jule::Ref<_1304dc9b0_Map> _1304dc9b0_TypeKind::_method_map(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1304dc9b0_Map>>())) { goto _case_end_5144276304; }
		_case_begin_5144276304:;
		{
			return (*this)._field_kind.operator jule::Ref<_1304dc9b0_Map>();
		}
		goto _match_end_5144271664;
		_case_end_5144276304:;
		_case_begin_5144275408:;
		{
			return jule::new_ref<_1304dc9b0_Map>();
		}
		goto _match_end_5144271664;
		_case_end_5144275408:;
		_match_end_5144271664:;
	}
}



inline jule::Ref<_1304dc9b0_Tuple> _1304dc9b0_TypeKind::_method_tup(void) {
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1304dc9b0_Tuple>>())) { goto _case_end_5144280256; }
		_case_begin_5144280256:;
		{
			return (*this)._field_kind.operator jule::Ref<_1304dc9b0_Tuple>();
		}
		goto _match_end_5144276656;
		_case_end_5144280256:;
		_case_begin_5144279200:;
		{
			return jule::new_ref<_1304dc9b0_Tuple>();
		}
		goto _match_end_5144276656;
		_case_end_5144279200:;
		_match_end_5144276656:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1304dc9b0_TypeKind &_Src) {
	_Stream << "TypeKind{";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "cpp_ident:" << _Src._field_cpp_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1304dc9b0_TypeSymbol::_method_checked(void) {
	return jule::real((*this)._field_kind);
}



inline void _1304dc9b0_TypeSymbol::_method_remove_kind(void) {
	jule::drop((*this)._field_kind);
}







std::ostream &operator<<(std::ostream &_Stream, const _1304dc9b0_TypeSymbol &_Src) {
	_Stream << "TypeSymbol{";
	_Stream << "decl:" << _Src._field_decl << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1304dc9b0_Prim::_method_to_str(void) {
	return (*this)._field_kind;
}



inline jule::Bool _1304dc9b0_Prim::_method_equals(jule::Ref<_1304dc9b0_TypeKind> _22521_other) {
	jule::Ref<_1304dc9b0_Prim> _22613_prim = (_22521_other).alloc->_method_prim();
	if ((!(jule::real(_22613_prim)))) {
		return false;
	}
	return (*this)._field_kind == _22613_prim->_field_kind;
}



inline jule::Bool _1304dc9b0_Prim::_method_is_i8(void) {
	return (*this)._field_kind == jule::Str("i8", 2);
}



inline jule::Bool _1304dc9b0_Prim::_method_is_i16(void) {
	return (*this)._field_kind == jule::Str("i16", 3);
}



inline jule::Bool _1304dc9b0_Prim::_method_is_i32(void) {
	return (*this)._field_kind == jule::Str("i32", 3);
}



inline jule::Bool _1304dc9b0_Prim::_method_is_i64(void) {
	return (*this)._field_kind == jule::Str("i64", 3);
}



inline jule::Bool _1304dc9b0_Prim::_method_is_u8(void) {
	return (*this)._field_kind == jule::Str("u8", 2);
}



inline jule::Bool _1304dc9b0_Prim::_method_is_u16(void) {
	return (*this)._field_kind == jule::Str("u16", 3);
}



inline jule::Bool _1304dc9b0_Prim::_method_is_u32(void) {
	return (*this)._field_kind == jule::Str("u32", 3);
}



inline jule::Bool _1304dc9b0_Prim::_method_is_u64(void) {
	return (*this)._field_kind == jule::Str("u64", 3);
}



inline jule::Bool _1304dc9b0_Prim::_method_is_f32(void) {
	return (*this)._field_kind == jule::Str("f32", 3);
}



inline jule::Bool _1304dc9b0_Prim::_method_is_f64(void) {
	return (*this)._field_kind == jule::Str("f64", 3);
}



inline jule::Bool _1304dc9b0_Prim::_method_is_int(void) {
	return (*this)._field_kind == jule::Str("int", 3);
}



inline jule::Bool _1304dc9b0_Prim::_method_is_uint(void) {
	return (*this)._field_kind == jule::Str("uint", 4);
}



inline jule::Bool _1304dc9b0_Prim::_method_is_uintptr(void) {
	return (*this)._field_kind == jule::Str("uintptr", 7);
}



inline jule::Bool _1304dc9b0_Prim::_method_is_bool(void) {
	return (*this)._field_kind == jule::Str("bool", 4);
}



inline jule::Bool _1304dc9b0_Prim::_method_is_str(void) {
	return (*this)._field_kind == jule::Str("str", 3);
}



inline jule::Bool _1304dc9b0_Prim::_method_is_any(void) {
	return (*this)._field_kind == jule::Str("any", 3);
}







std::ostream &operator<<(std::ostream &_Stream, const _1304dc9b0_Prim &_Src) {
	_Stream << "Prim{";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1304dc9b0_Ref::_method_to_str(void) {
	return jule::Str("&", 1) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _1304dc9b0_Ref::_method_equals(jule::Ref<_1304dc9b0_TypeKind> _29421_other) {
	jule::Ref<_1304dc9b0_Ref> _29513_ref = (_29421_other).alloc->_method_ref();
	if ((!(jule::real(_29513_ref)))) {
		return false;
	}
	return (*this)._field_elem->_method_equals(_29513_ref->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _1304dc9b0_Ref &_Src) {
	_Stream << "Ref{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1304dc9b0_Slc::_method_to_str(void) {
	return jule::Str("[]", 2) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _1304dc9b0_Slc::_method_equals(jule::Ref<_1304dc9b0_TypeKind> _31321_other) {
	jule::Ref<_1304dc9b0_Slc> _31413_slc = (_31321_other).alloc->_method_slc();
	if ((!(jule::real(_31413_slc)))) {
		return false;
	}
	return (*this)._field_elem->_method_equals(_31413_slc->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _1304dc9b0_Slc &_Src) {
	_Stream << "Slc{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1304dc9b0_Tuple::_method_to_str(void) {
	jule::Str _33017_s = jule::Str("(", 1);
	_33017_s+=(*this)._field_types[static_cast<jule::Int>(0LL)]->_method_to_str();
	{
		auto __julec_range_expr = (*this)._field_types.slice(static_cast<jule::Int>(1LL));
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1304dc9b0_TypeKind> _1304dc9b0_t = *__julec_range_begin;
			_iter_begin_5149604240:;
			{
				_33017_s+=jule::Str(",", 1);
				_33017_s+=_1304dc9b0_t->_method_to_str();
			}
			_iter_next_5149604240:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1304dc9b0_t = *__julec_range_begin; goto _iter_begin_5149604240; }
			_iter_end_5149604240:;
		}
	}
	_33017_s+=jule::Str(")", 1);
	return _33017_s;
}



inline jule::Bool _1304dc9b0_Tuple::_method_equals(jule::Ref<_1304dc9b0_TypeKind> _34121_other) {
	jule::Ref<_1304dc9b0_Tuple> _34213_tup = (_34121_other).alloc->_method_tup();
	if ((!(jule::real(_34213_tup)))) {
		return false;
	}
	if ((*this)._field_types.len() != _34213_tup->_field_types.len()) {
		return false;
	}
	jule::Int _35117_i = 0LL;
	_iter_begin_5149610240:;
	if (!(_35117_i < (*this)._field_types.len())) { goto _iter_end_5149610240; }
	{
		if ((!((*this)._field_types[static_cast<jule::Int>(_35117_i)]->_method_equals(_34213_tup->_field_types[static_cast<jule::Int>(_35117_i)])))) {
			return false;
		}
	}
	_iter_next_5149610240:;
	(_35117_i)++;
	goto _iter_begin_5149610240;
	_iter_end_5149610240:;
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _1304dc9b0_Tuple &_Src) {
	_Stream << "Tuple{";
	_Stream << "types:" << _Src._field_types;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1304dc9b0_Map::_method_to_str(void) {
	jule::Str _37117_s = jule::Str("[", 1);
	_37117_s+=(*this)._field_key->_method_to_str();
	_37117_s+=jule::Str(":", 1);
	_37117_s+=(*this)._field_val->_method_to_str();
	_37117_s+=jule::Str("]", 1);
	return _37117_s;
}



inline jule::Bool _1304dc9b0_Map::_method_equals(jule::Ref<_1304dc9b0_TypeKind> _38021_other) {
	jule::Ref<_1304dc9b0_Map> _38113_map = (_38021_other).alloc->_method_map();
	if ((!(jule::real(_38113_map)))) {
		return false;
	}
	return (*this)._field_key->_method_equals(_38113_map->_field_key) && (*this)._field_val->_method_equals(_38113_map->_field_val);
}







std::ostream &operator<<(std::ostream &_Stream, const _1304dc9b0_Map &_Src) {
	_Stream << "Map{";
	_Stream << "key:" << _Src._field_key << ", ";
	_Stream << "val:" << _Src._field_val;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1304dc9b0_Arr::_method_to_str(void) {
	jule::Str _39917_s = jule::Str("[", 1);
	_39917_s+=_127164920_itoa((*this)._field_n);
	_39917_s+=jule::Str("]", 1);
	_39917_s+=(*this)._field_elem->_method_to_str();
	return _39917_s;
}



inline jule::Bool _1304dc9b0_Arr::_method_equals(jule::Ref<_1304dc9b0_TypeKind> _40721_other) {
	jule::Ref<_1304dc9b0_Arr> _40813_arr = (_40721_other).alloc->_method_arr();
	if ((!(jule::real(_40813_arr)))) {
		return false;
	}
	return ((*this)._field_n == _40813_arr->_field_n) && (*this)._field_elem->_method_equals(_40813_arr->_field_elem);
}







std::ostream &operator<<(std::ostream &_Stream, const _1304dc9b0_Arr &_Src) {
	_Stream << "Arr{";
	_Stream << "auto:" << _Src._field_auto << ", ";
	_Stream << "n:" << _Src._field_n << ", ";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _1304dc9b0_Ptr::_method_to_str(void) {
	if ((*this)._method_is_unsafe()) {
		return jule::Str("*unsafe", 7);
	}
	return jule::Str("*", 1) + (*this)._field_elem->_method_to_str();
}



inline jule::Bool _1304dc9b0_Ptr::_method_equals(jule::Ref<_1304dc9b0_TypeKind> _43121_other) {
	jule::Ref<_1304dc9b0_Ptr> _43213_ptr = (_43121_other).alloc->_method_ptr();
	if ((!(jule::real(_43213_ptr)))) {
		return false;
	}
	return (*this)._field_elem->_method_equals(_43213_ptr->_field_elem);
}



inline jule::Bool _1304dc9b0_Ptr::_method_is_unsafe(void) {
	return (!(jule::real((*this)._field_elem)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1304dc9b0_Ptr &_Src) {
	_Stream << "Ptr{";
	_Stream << "elem:" << _Src._field_elem;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1304dc9b0_Referencer &_Src) {
	_Stream << "Referencer{";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "refs:" << _Src._field_refs;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1300a4650_ImportInfo> _1271b5120_PlainImporter::_method_get_import(jule::Str _7529_path) {
	{
		auto &__julec_range_expr = (*this)._field_all_packages;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1300a4650_ImportInfo> _1271b5120_p = *__julec_range_begin;
			_iter_begin_5150237392:;
			{
				if (_1271b5120_p->_field_path == _7529_path) {
					return _1271b5120_p;
				}
			}
			_iter_next_5150237392:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1271b5120_p = *__julec_range_begin; goto _iter_begin_5150237392; }
			_iter_end_5150237392:;
		}
	}
	return jule::new_ref<_1300a4650_ImportInfo>();
}



inline std::tuple<jule::Slice<jule::Ref<_1275d0e60_Ast>>,jule::Slice<_136e99d00_Log>> _1271b5120_PlainImporter::_method_import_package(jule::Str _8533_path) {
	jule::Slice<jule::Ref<_127281550_DirEntry>> _8614_dirents;
	jule::Str _8623_err_msg;
	std::tie(_8614_dirents,_8623_err_msg) = _1271b5120_read_package_dirents(_8533_path);
	if (_8623_err_msg != jule::Str("", 0)) {
		jule::Slice<_136e99d00_Log> _8821_errors = jule::Slice<_136e99d00_Log>({_1271b5120_flat_compiler_err(_8623_err_msg)});
		return std::make_tuple(nullptr,_8821_errors);
	}
	jule::Slice<jule::Ref<_1275d0e60_Ast>> _9217_asts = nullptr;
	{
		auto &__julec_range_expr = _8614_dirents;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127281550_DirEntry> _1271b5120_dirent = *__julec_range_begin;
			_iter_begin_5150242848:;
			{
				jule::Str _9417_path = _136ec98d0_join(jule::Slice<jule::Str>({_8533_path,_1271b5120_dirent->_field_name}));
				jule::Ref<_126f67810_File> _9521_file = _126f67810_new_file_set(_9417_path);
				jule::Slice<_136e99d00_Log> _9621_errors = _127774a70_lex(_9521_file,_1271b5120_read_buff(_9521_file->_method_path()));
				if (_9621_errors.len() > 0LL) {
					return std::make_tuple(nullptr,_9621_errors);
				}
				jule::Ref<_127b065b0_FileInfo> _10121_finfo = _127b065b0_parse_file(_9521_file);
				if (_10121_finfo->_field_errors.len() > 0LL) {
					return std::make_tuple(nullptr,_10121_finfo->_field_errors);
				}
				_9217_asts=append(_9217_asts,jule::Slice<jule::Ref<_1275d0e60_Ast>>({_10121_finfo->_field_ast}));
			}
			_iter_next_5150242848:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1271b5120_dirent = *__julec_range_begin; goto _iter_begin_5150242848; }
			_iter_end_5150242848:;
		}
	}
	return std::make_tuple(_9217_asts,nullptr);
}



inline void _1271b5120_PlainImporter::_method_imported(jule::Ref<_1300a4650_ImportInfo> _11231_imp) {
	{
		auto &__julec_range_expr = (*this)._field_all_packages;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1300a4650_ImportInfo> _1271b5120_p = *__julec_range_begin;
			_iter_begin_5150268032:;
			{
				if ((_1271b5120_p->_field_cpp_linked == _11231_imp->_field_cpp_linked) && (_1271b5120_p->_field_link_path == _11231_imp->_field_link_path)) {
					return;
				}
			}
			_iter_next_5150268032:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1271b5120_p = *__julec_range_begin; goto _iter_begin_5150268032; }
			_iter_end_5150268032:;
		}
	}
	(*this)._field_all_packages=append((*this)._field_all_packages,jule::Slice<jule::Ref<_1300a4650_ImportInfo>>({_11231_imp}));
}







std::ostream &operator<<(std::ostream &_Stream, const _1271b5120_PlainImporter &_Src) {
	_Stream << "PlainImporter{";
	_Stream << "all_packages:" << _Src._field_all_packages;
	_Stream << "}";
	return _Stream;
}



inline jule::Slice<jule::Ref<_127b2e960_Struct>> _136f09c40_IR::_method_get_all_structures(void) {
	jule::Slice<jule::Ref<_127b2e960_Struct>> _2717_buffer = nullptr;
	jule::Fn<void(jule::Ref<_1300a4650_Package>)> _2913_append_structs = jule::Fn<void(jule::Ref<_1300a4650_Package>)>([=](jule::Ref<_1300a4650_Package> _2937_p) mutable -> void {
		{
			auto &__julec_range_expr = _2937_p->_field_files;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_13032dc50_SymbolTable> _136f09c40_f = *__julec_range_begin;
				_iter_begin_5150333680:;
				{
					jule::Int _3125_i = 0LL;
					_iter_begin_5150335296:;
					if (!(_3125_i < _136f09c40_f->_field_structs._method_len())) { goto _iter_end_5150335296; }
					{
						jule::Ref<_127b2e960_Struct> _3329_s = _136f09c40_f->_field_structs._method_at(_3125_i);
						if ((!(_3329_s->_field_cpp_linked))) {
							_2717_buffer=append(_2717_buffer,jule::Slice<jule::Ref<_127b2e960_Struct>>({_3329_s}));
						}
					}
					_iter_next_5150335296:;
					(_3125_i)++;
					goto _iter_begin_5150335296;
					_iter_end_5150335296:;
				}
				_iter_next_5150333680:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _136f09c40_f = *__julec_range_begin; goto _iter_begin_5150333680; }
				_iter_end_5150333680:;
			}
		}
	});
	_2913_append_structs((*this)._field_main);
	{
		auto &__julec_range_expr = (*this)._field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1300a4650_ImportInfo> _136f09c40_u = *__julec_range_begin;
			_iter_begin_5150331776:;
			{
				if ((!(_136f09c40_u->_field_cpp_linked))) {
					_2913_append_structs(_136f09c40_u->_field_package);
				}
			}
			_iter_next_5150331776:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _136f09c40_u = *__julec_range_begin; goto _iter_begin_5150331776; }
			_iter_end_5150331776:;
		}
	}
	return _2717_buffer;
}



inline jule::Slice<jule::Ref<_1303533b0_Var>> _136f09c40_IR::_method_get_all_variables(void) {
	jule::Slice<jule::Ref<_1303533b0_Var>> _5517_buffer = nullptr;
	jule::Fn<void(jule::Ref<_1300a4650_Package>)> _5713_append_vars = jule::Fn<void(jule::Ref<_1300a4650_Package>)>([=](jule::Ref<_1300a4650_Package> _5734_p) mutable -> void {
		{
			auto &__julec_range_expr = _5734_p->_field_files;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_13032dc50_SymbolTable> _136f09c40_f = *__julec_range_begin;
				_iter_begin_5150353792:;
				{
					jule::Int _5925_i = 0LL;
					_iter_begin_5150355408:;
					if (!(_5925_i < _136f09c40_f->_field_vars._method_len())) { goto _iter_end_5150355408; }
					{
						jule::Ref<_1303533b0_Var> _6129_v = _136f09c40_f->_field_vars._method_at(_5925_i);
						if ((!(_6129_v->_field_cpp_linked))) {
							_5517_buffer=append(_5517_buffer,jule::Slice<jule::Ref<_1303533b0_Var>>({_6129_v}));
						}
					}
					_iter_next_5150355408:;
					(_5925_i)++;
					goto _iter_begin_5150355408;
					_iter_end_5150355408:;
				}
				_iter_next_5150353792:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _136f09c40_f = *__julec_range_begin; goto _iter_begin_5150353792; }
				_iter_end_5150353792:;
			}
		}
	});
	_5713_append_vars((*this)._field_main);
	{
		auto &__julec_range_expr = (*this)._field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1300a4650_ImportInfo> _136f09c40_u = *__julec_range_begin;
			_iter_begin_5150351888:;
			{
				if ((!(_136f09c40_u->_field_cpp_linked))) {
					_5713_append_vars(_136f09c40_u->_field_package);
				}
			}
			_iter_next_5150351888:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _136f09c40_u = *__julec_range_begin; goto _iter_begin_5150351888; }
			_iter_end_5150351888:;
		}
	}
	return _5517_buffer;
}







std::ostream &operator<<(std::ostream &_Stream, const _136f09c40_IR &_Src) {
	_Stream << "IR{";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "main:" << _Src._field_main << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}



inline void _1275c5880_ScopeDeadCode::_method_optimize_child(jule::Ref<_1300a11b0_Scope> _2138_s) {
	jule::Ref<_1275c5880_ScopeDeadCode> _2217_sdc = jule::new_struct<_1275c5880_ScopeDeadCode>(new( std::nothrow ) _1275c5880_ScopeDeadCode(this->self,_2138_s,(&(_2138_s->_field_stmts)),jule::Int()));
	{
		_2217_sdc->_method_optimize_stmts();
	}
}



inline void _1275c5880_ScopeDeadCode::_method_eliminate_followed(void) {
	(*this)._field_stmts->_method_remove_range((*this)._field_i + 1LL,static_cast<jule::Int>(((*this)._field_stmts->_method_len() - (*this)._field_i) - 1LL));
	jule::Ref<_1275c5880_ScopeDeadCode> _3217_parent = (*this)._field_parent;
	_iter_begin_5150585968:;
	if (!(jule::real(_3217_parent))) { goto _iter_end_5150585968; }
	{
		_3217_parent->_field_stmts->_method_remove_range(_3217_parent->_field_i + 1LL,static_cast<jule::Int>((_3217_parent->_field_stmts->_method_len() - _3217_parent->_field_i) - 1LL));
		_3217_parent=_3217_parent->_field_parent;
	}
	_iter_next_5150585968:;
	goto _iter_begin_5150585968;
	_iter_end_5150585968:;
}



inline void _1275c5880_ScopeDeadCode::_method_optimize_stmt(jule::Any _3944_st) {
	{
		auto &_match_expr{ _3944_st };
		if (!(_match_expr.type_is<jule::Ref<_1300a11b0_Scope>>())) { goto _case_end_5150593232; }
		_case_begin_5150593232:;
		{
			jule::Ref<_1300a11b0_Scope> _4221_scope = _3944_st.operator jule::Ref<_1300a11b0_Scope>();
			if (_4221_scope->_field_deferred) {
				_1275c5880_eliminate_dead_code_of_scope(_4221_scope);
			} else {
				this->self->_method_optimize_child(_4221_scope);
			}
		}
		goto _match_end_5150592864;
		_case_end_5150593232:;
		if (!(_match_expr.type_is<jule::Ref<_1300a11b0_RetSt>>())) { goto _case_end_5150593344; }
		_case_begin_5150593344:;
		{
			this->self->_method_eliminate_followed();
		}
		goto _match_end_5150592864;
		_case_end_5150593344:;
		_match_end_5150592864:;
	}
}



inline void _1275c5880_ScopeDeadCode::_method_optimize_stmts(void) {
	this->self->_field_i=0LL;
	_iter_begin_5150594848:;
	if (!(this->self->_field_i < this->self->_field_stmts->_method_len())) { goto _iter_end_5150594848; }
	{
		this->self->_method_optimize_stmt(this->self->_field_stmts->_method_at(this->self->_field_i));
	}
	_iter_next_5150594848:;
	(this->self->_field_i)++;
	goto _iter_begin_5150594848;
	_iter_end_5150594848:;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275c5880_ScopeDeadCode &_Src) {
	_Stream << "ScopeDeadCode{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "stmts:" << _Src._field_stmts << ", ";
	_Stream << "i:" << _Src._field_i;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _127fba3d0_IndexRangeSetter::_method_setup_vars(jule::Ref<_1303533b0_Var> _4429_key_a,jule::Ref<_1303533b0_Var> _4446_key_b) {
	jule::Str _4513_indent = _130f8bbe0_indent();
	jule::Str _4717_obj = jule::Str("", 0);
	if (jule::real(_4429_key_a)) {
		_4717_obj+=_130f8bbe0_gen_var_init_expr(_4429_key_a,jule::Str("0", 1));
		_4717_obj+=jule::Str("\n", 1);
		_4717_obj+=_4513_indent;
	}
	if (jule::real(_4446_key_b)) {
		_4717_obj+=_130f8bbe0_gen_var_init_expr(_4446_key_b,jule::Str("*__julec_range_begin", 20));
		_4717_obj+=jule::Str("\n", 1);
		_4717_obj+=_4513_indent;
	}
	return _4717_obj;
}



inline jule::Str _127fba3d0_IndexRangeSetter::_method_next_steps(jule::Ref<_1303533b0_Var> _6329_key_a,jule::Ref<_1303533b0_Var> _6346_key_b,jule::Str _6359_begin) {
	jule::Str _6413_indent = _130f8bbe0_indent();
	jule::Str _6617_obj = jule::Str("++__julec_range_begin;\n", 23);
	_6617_obj+=_6413_indent;
	_6617_obj+=jule::Str("if (__julec_range_begin != __julec_range_end) { ", 48);
	if (jule::real(_6329_key_a)) {
		_6617_obj+=(jule::Str("++", 2) + _130f5aa90_var_out_ident(_6329_key_a)) + jule::Str("; ", 2);
	}
	if (jule::real(_6346_key_b)) {
		_6617_obj+=_130f5aa90_var_out_ident(_6346_key_b) + jule::Str(" = *__julec_range_begin; ", 25);
	}
	_6617_obj+=(jule::Str("goto ", 5) + _6359_begin) + jule::Str("; }\n", 4);
	return _6617_obj;
}







std::ostream &operator<<(std::ostream &_Stream, const _127fba3d0_IndexRangeSetter &_Src) {
	_Stream << "IndexRangeSetter{";
	_Stream << "}";
	return _Stream;
}



inline jule::Str _127fba3d0_MapRangeSetter::_method_setup_vars(jule::Ref<_1303533b0_Var> _8529_key_a,jule::Ref<_1303533b0_Var> _8546_key_b) {
	jule::Str _8613_indent = _130f8bbe0_indent();
	jule::Str _8717_obj = jule::Str("", 0);
	if (jule::real(_8529_key_a)) {
		_8717_obj+=_130f8bbe0_gen_var_init_expr(_8529_key_a,jule::Str("__julec_range_begin->first", 26));
		_8717_obj+=jule::Str("\n", 1);
		_8717_obj+=_8613_indent;
	}
	if (jule::real(_8546_key_b)) {
		_8717_obj+=_130f8bbe0_gen_var_init_expr(_8546_key_b,jule::Str("__julec_range_begin->second", 27));
		_8717_obj+=_130f5aa90_var_out_ident(_8546_key_b);
		_8717_obj+=jule::Str("\n", 1);
		_8717_obj+=_8613_indent;
	}
	return _8717_obj;
}



inline jule::Str _127fba3d0_MapRangeSetter::_method_next_steps(jule::Ref<_1303533b0_Var> _10529_key_a,jule::Ref<_1303533b0_Var> _10546_key_b,jule::Str _10559_begin) {
	jule::Str _10613_indent = _130f8bbe0_indent();
	jule::Str _10817_obj = jule::Str("++__julec_range_begin;\n", 23);
	_10817_obj+=_10613_indent;
	_10817_obj+=jule::Str("if (__julec_range_begin != __julec_range_end) { ", 48);
	if (jule::real(_10529_key_a)) {
		_10817_obj+=_130f5aa90_var_out_ident(_10529_key_a);
		_10817_obj+=jule::Str(" = __julec_range_begin->first; ", 31);
	}
	if (jule::real(_10546_key_b)) {
		_10817_obj+=_130f5aa90_var_out_ident(_10546_key_b);
		_10817_obj+=jule::Str(" = __julec_range_begin->second; ", 32);
	}
	_10817_obj+=(jule::Str("goto ", 5) + _10559_begin) + jule::Str("; }\n", 4);
	return _10817_obj;
}







std::ostream &operator<<(std::ostream &_Stream, const _127fba3d0_MapRangeSetter &_Src) {
	_Stream << "MapRangeSetter{";
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _130f8bbe0_OrderedDecls &_Src) {
	_Stream << "OrderedDecls{";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "globals:" << _Src._field_globals;
	_Stream << "}";
	return _Stream;
}



inline void _1304dc9b0_TypeChecker::_method_push_err(_127941de0_Token _61727_token,jule::Str _61741_key,jule::Slice<jule::Any> _61751_args) {
	(*this)._field_s->_method_push_err(_61727_token,_61741_key,_61751_args);
}



inline jule::Ref<_1304dc9b0_Prim> _1304dc9b0_TypeChecker::_method_build_prim(jule::Ref<_1275d7180_IdentTypeDecl> _62129_decl) {
	if ((!(_1304dc9b0_is_prim(_62129_decl->_field_ident)))) {
		(*this)._method_push_err((*this)._field_error_token,jule::Str("invalid_type", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_1304dc9b0_Prim>();
	}
	if (_62129_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_62129_decl->_field_token,jule::Str("type_not_supports_generics", 26),jule::Slice<jule::Any>({jule::Any(_62129_decl->_field_ident)}));
		return jule::new_ref<_1304dc9b0_Prim>();
	}
	return _1304dc9b0_build_prim_type(_62129_decl->_field_ident);
}



inline jule::Bool _1304dc9b0_TypeChecker::_method_check_illegal_cycles(jule::Ref<_1275d7180_IdentTypeDecl> _63939_ident,jule::Any _63966_decl) {
	jule::Bool _63979_ok = jule::Bool();
	if ((!(jule::real((*this)._field_referencer)))) {
		_63979_ok = true;
		return _63979_ok;
	}
	{
		auto &_match_expr{ _63966_decl };
		if (!(_match_expr.type_is<jule::Ref<_127b2e960_Struct>>())) { goto _case_end_5149683152; }
		_case_begin_5149683152:;
		{
			if ((*this)._field_not_plain) {
				_63979_ok = true;
				return _63979_ok;
			}
		}
		goto _match_end_5149681504;
		_case_end_5149683152:;
		_match_end_5149681504:;
	}
	if ((*this)._field_referencer->_field_owner == _63966_decl) {
		(*this)._method_push_err(_63939_ident->_field_token,jule::Str("illegal_cycle_refers_itself", 27),jule::Slice<jule::Any>({jule::Any((*this)._field_referencer->_field_ident)}));
		_63979_ok = false;
		return _63979_ok;
	}
	
	jule::Str _66017_message = jule::Str("", 0);
	jule::Fn<void(jule::Any,jule::Any)> _66213_push = jule::Fn<void(jule::Any,jule::Any)>([=](jule::Any _66223_def1,jule::Any _66234_def2) mutable -> void {
		jule::Fn<jule::Str(jule::Any)> _66317_get_ident = jule::Fn<jule::Str(jule::Any)>([=](jule::Any _66332_def) mutable -> jule::Str {
			{
				auto &_match_expr{ _66332_def };
				if (!(_match_expr.type_is<jule::Ref<_1304dc9b0_TypeAlias>>())) { goto _case_end_5149701008; }
				_case_begin_5149701008:;
				{
					return _66332_def.operator jule::Ref<_1304dc9b0_TypeAlias>()->_field_ident;
				}
				goto _match_end_5149700048;
				_case_end_5149701008:;
				if (!(_match_expr.type_is<jule::Ref<_127b2e960_Struct>>())) { goto _case_end_5149701120; }
				_case_begin_5149701120:;
				{
					return _66332_def.operator jule::Ref<_127b2e960_Struct>()->_field_ident;
				}
				goto _match_end_5149700048;
				_case_end_5149701120:;
				if (!(_match_expr.type_is<jule::Ref<_13009ed30_Enum>>())) { goto _case_end_5149701232; }
				_case_begin_5149701232:;
				{
					return _66332_def.operator jule::Ref<_13009ed30_Enum>()->_field_ident;
				}
				goto _match_end_5149700048;
				_case_end_5149701232:;
				_case_begin_5149700144:;
				{
					return jule::Str("", 0);
				}
				goto _match_end_5149700048;
				_case_end_5149700144:;
				_match_end_5149700048:;
			}
		});
		jule::Str _67217_def1_ident = _66317_get_ident(_66223_def1);
		jule::Str _67317_def2_ident = _66317_get_ident(_66234_def2);
		jule::Str _67417_refers_to = _136e8b750_errorf(jule::Str("refers_to", 9),jule::Slice<jule::Any>({jule::Any(_67217_def1_ident),jule::Any(_67317_def2_ident)}));
		_66017_message=((_127ff3480_str_repeat(jule::Str(" ", 1),4LL) + _67417_refers_to) + jule::Str("\n", 1)) + _66017_message;
	});
	jule::Fn<jule::Bool(jule::Any)> _67917_check_cross = nullptr;
	_67917_check_cross=jule::Fn<jule::Bool(jule::Any)>([=](jule::Any _68026_decl) mutable -> jule::Bool {
		{
			auto &_match_expr{ _68026_decl };
			if (!(_match_expr.type_is<jule::Ref<_1304dc9b0_TypeAlias>>())) { goto _case_end_5149718640; }
			_case_begin_5149718640:;
			{
				jule::Ref<_1304dc9b0_TypeAlias> _68321_ta = _68026_decl.operator jule::Ref<_1304dc9b0_TypeAlias>();
				{
					auto &__julec_range_expr = _68321_ta->_field_refers;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Any _1304dc9b0_d = *__julec_range_begin;
						_iter_begin_5149722768:;
						{
							if (_1304dc9b0_d == (*this)._field_referencer->_field_owner) {
								_66213_push(jule::Any(_68321_ta),_1304dc9b0_d);
								return false;
							}
							if ((!(_67917_check_cross(_1304dc9b0_d)))) {
								_66213_push(jule::Any(_68321_ta),_1304dc9b0_d);
								return false;
							}
						}
						_iter_next_5149722768:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _1304dc9b0_d = *__julec_range_begin; goto _iter_begin_5149722768; }
						_iter_end_5149722768:;
					}
				}
			}
			goto _match_end_5149718544;
			_case_end_5149718640:;
			if (!(_match_expr.type_is<jule::Ref<_127b2e960_Struct>>())) { goto _case_end_5149719312; }
			_case_begin_5149719312:;
			{
				jule::Ref<_127b2e960_Struct> _69721_s = _68026_decl.operator jule::Ref<_127b2e960_Struct>();
				{
					auto &__julec_range_expr = _69721_s->_field_depends;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_127b2e960_Struct> _1304dc9b0_d = *__julec_range_begin;
						_iter_begin_5149731440:;
						{
							if ((*this)._field_referencer->_field_owner == _1304dc9b0_d) {
								_66213_push(jule::Any(_69721_s),jule::Any(_1304dc9b0_d));
								return false;
							}
							if ((!(_67917_check_cross(jule::Any(_1304dc9b0_d))))) {
								_66213_push(jule::Any(_69721_s),jule::Any(_1304dc9b0_d));
								return false;
							}
						}
						_iter_next_5149731440:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _1304dc9b0_d = *__julec_range_begin; goto _iter_begin_5149731440; }
						_iter_end_5149731440:;
					}
				}
			}
			goto _match_end_5149718544;
			_case_end_5149719312:;
			_match_end_5149718544:;
		}
		return true;
	});
	if ((!(_67917_check_cross(_63966_decl)))) {
		jule::Str _71621_err_msg = _66017_message;
		_66017_message=jule::Str("", 0);
		_66213_push((*this)._field_referencer->_field_owner,_63966_decl);
		_71621_err_msg=_71621_err_msg + _66017_message;
		(*this)._method_push_err(_63939_ident->_field_token,jule::Str("illegal_cross_cycle", 19),jule::Slice<jule::Any>({jule::Any(_71621_err_msg)}));
		_63979_ok = false;
		return _63979_ok;
	}
	{
		auto &_match_expr{ (*this)._field_referencer->_field_owner };
		if (!(_match_expr.type_is<jule::Ref<_1304dc9b0_TypeAlias>>())) { goto _case_end_5149732288; }
		_case_begin_5149732288:;
		{
			{
				(*((*this)._field_referencer->_field_refs))=append((*((*this)._field_referencer->_field_refs)),jule::Slice<jule::Any>({_63966_decl}));
			}
		}
		goto _match_end_5149741200;
		_case_end_5149732288:;
		if (!(_match_expr.type_is<jule::Ref<_127b2e960_Struct>>())) { goto _case_end_5149732400; }
		_case_begin_5149732400:;
		{
			{
				auto &_match_expr{ _63966_decl };
				if (!(_match_expr.type_is<jule::Ref<_127b2e960_Struct>>())) { goto _case_end_5149745536; }
				_case_begin_5149745536:;
				{
					jule::Ref<_127b2e960_Struct> _73125_s = (*this)._field_referencer->_field_owner.operator jule::Ref<_127b2e960_Struct>();
					_73125_s->_field_depends=append(_73125_s->_field_depends,jule::Slice<jule::Ref<_127b2e960_Struct>>({_63966_decl.operator jule::Ref<_127b2e960_Struct>()}));
				}
				goto _match_end_5149747200;
				_case_end_5149745536:;
				_match_end_5149747200:;
			}
		}
		goto _match_end_5149741200;
		_case_end_5149732400:;
		_match_end_5149741200:;
	}
	_63979_ok = true;
	return _63979_ok;
}



inline jule::Trait<_1304dc9b0_Kind> _1304dc9b0_TypeChecker::_method_from_type_alias(jule::Ref<_1275d7180_IdentTypeDecl> _73934_decl,jule::Ref<_1304dc9b0_TypeAlias> _73960_ta) {
	if ((!((*this)._field_s->_method_is_accessible_define(_73960_ta->_field_public,_73960_ta->_field_token)))) {
		(*this)._method_push_err(_73934_decl->_field_token,jule::Str("ident_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_73934_decl->_field_ident)}));
		return nullptr;
	}
	_73960_ta->_field_used=true;
	if (_73934_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_73934_decl->_field_token,jule::Str("type_not_supports_generics", 26),jule::Slice<jule::Any>({jule::Any(_73934_decl->_field_ident)}));
		return nullptr;
	}
	jule::Bool _75217_ok = (*this)._method_check_illegal_cycles(_73934_decl,jule::Any(_73960_ta));
	if ((!(_75217_ok))) {
		return nullptr;
	}
	_75217_ok=(*this)._field_s->_method_check_type_alias_decl_kind(_73960_ta,(*this)._field_lookup);
	if ((!(_75217_ok))) {
		return nullptr;
	}
	jule::Ref<_1304dc9b0_TypeKind> _76317_kind = _73960_ta->_field_kind->_field_kind->_method_clone();
	if (_73960_ta->_field_cpp_linked) {
		_76317_kind->_field_cpp_linked=true;
		_76317_kind->_field_cpp_ident=_73960_ta->_field_ident;
	}
	return _76317_kind;
}



inline jule::Ref<_13009ed30_Enum> _1304dc9b0_TypeChecker::_method_from_enum(jule::Ref<_1275d7180_IdentTypeDecl> _77328_decl,jule::Ref<_13009ed30_Enum> _77354_e) {
	if ((!((*this)._field_s->_method_is_accessible_define(_77354_e->_field_public,_77354_e->_field_token)))) {
		(*this)._method_push_err(_77328_decl->_field_token,jule::Str("ident_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_77328_decl->_field_ident)}));
		return jule::new_ref<_13009ed30_Enum>();
	}
	if (_77328_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_77328_decl->_field_token,jule::Str("type_not_supports_generics", 26),jule::Slice<jule::Any>({jule::Any(_77328_decl->_field_ident)}));
		return jule::new_ref<_13009ed30_Enum>();
	}
	return _77354_e;
}



inline jule::Bool _1304dc9b0_TypeChecker::_method_check_struct_ins(jule::Ref<_127b2e960_StructIns> _78739_ins,_127941de0_Token _78756_error_token) {
	jule::Bool _78778_ok = jule::Bool();
	if (_78739_ins->_field_checked) {
		_78778_ok = true;
		return _78778_ok;
	}
	_78739_ins->_field_checked=true;
	if (jule::real((*this)._field_referencer) && ((*this)._field_referencer->_field_owner == _78739_ins->_field_decl)) {
		_78778_ok = true;
		return _78778_ok;
	}
	jule::Ref<_13032dc50_SymbolTable> _80117_old_file = (*this)._field_s->_field_file;
	__JULE_DEFER({
		(*this)._field_s->_method_set_current_file(_80117_old_file);
	});
	jule::Ref<_13032dc50_SymbolTable> _80417_f = _1300a20d0_find_file((*this)._field_s->_field_files,_78739_ins->_field_decl->_field_token._field_file);
	if (jule::real(_80417_f)) {
		(*this)._field_s->_method_set_current_file(_80417_f);
	}
	jule::Ref<_1304dc9b0_Referencer> _80917_referencer = jule::new_struct<_1304dc9b0_Referencer>(new( std::nothrow ) _1304dc9b0_Referencer(_78739_ins->_field_decl->_field_ident,_78739_ins->_field_decl,nullptr));
	jule::Slice<jule::Ref<_1304dc9b0_TypeAlias>> _81417_generics = jule::Slice<jule::Ref<_1304dc9b0_TypeAlias>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_78739_ins->_field_generics.len())));
	{
		auto &__julec_range_expr = _78739_ins->_field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1304dc9b0_i = 0;
			jule::Ref<_1304dc9b0_TypeKind> _1304dc9b0_g = *__julec_range_begin;
			_iter_begin_5149813952:;
			{
				_81417_generics[static_cast<jule::Int>(_1304dc9b0_i)]=jule::new_struct<_1304dc9b0_TypeAlias>(new( std::nothrow ) _1304dc9b0_TypeAlias(jule::Ref<_1275d7180_ScopeTree>(),jule::Bool(),jule::Bool(),jule::Bool(),_127941de0_Token(),_78739_ins->_field_decl->_field_generics[static_cast<jule::Int>(_1304dc9b0_i)]->_field_ident,jule::new_struct<_1304dc9b0_TypeSymbol>(new( std::nothrow ) _1304dc9b0_TypeSymbol(jule::Ref<_1275d7180_TypeDecl>(),_1304dc9b0_g)),jule::Str(),jule::Slice<jule::Any>()));
			}
			_iter_next_5149813952:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1304dc9b0_i; _1304dc9b0_g = *__julec_range_begin; goto _iter_begin_5149813952; }
			_iter_end_5149813952:;
		}
	}
	jule::Ref<_13032dc50_SymbolTable> _82417_old_sema_file = _78739_ins->_field_decl->_field_sema->_field_file;
	__JULE_DEFER({
		_78739_ins->_field_decl->_field_sema->_method_set_current_file(_82417_old_sema_file);
	});
	_1304dc9b0_TypeChecker _82717_tc = _1304dc9b0_TypeChecker(_78739_ins->_field_decl->_field_sema,_78739_ins->_field_decl->_field_sema,_80917_referencer,_127941de0_Token(),jule::Slice<jule::Ref<_1275d7180_GenericDecl>>(),_81417_generics,jule::Bool());
	{
		auto &__julec_range_expr = _78739_ins->_field_fields;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127b2e960_FieldIns> _1304dc9b0_f = *__julec_range_begin;
			_iter_begin_5149826768:;
			{
				jule::Ref<_1304dc9b0_TypeKind> _83621_kind = _82717_tc._method_check_decl(_1304dc9b0_f->_field_decl->_field_kind->_field_decl);
				_78778_ok=jule::real(_83621_kind);
				if ((jule::real(_78739_ins->_field_decl->_field_sema) && ((*this)._field_s != _78739_ins->_field_decl->_field_sema)) && (_78739_ins->_field_decl->_field_sema->_field_errors.len() > 0LL)) {
					(*this)._field_s->_field_errors=append((*this)._field_s->_field_errors,_78739_ins->_field_decl->_field_sema->_field_errors);
				}
				if ((!(_78778_ok))) {
					_78778_ok = false;
					return _78778_ok;
				}
				_1304dc9b0_f->_field_kind=_83621_kind;
				if (_1304dc9b0_is_mut(_1304dc9b0_f->_field_kind)) {
					_78739_ins->_field_has_mut=true;
					(*this)._field_s->_method_check_struct_ins_derive_clone(_78739_ins);
				}
			}
			_iter_next_5149826768:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1304dc9b0_f = *__julec_range_begin; goto _iter_begin_5149826768; }
			_iter_end_5149826768:;
		}
	}
	if (_78739_ins->_field_generics.len() > 0LL) {
		{
			auto &__julec_range_expr = _78739_ins->_field_methods;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_127ed52e0_Fn> _1304dc9b0_m = *__julec_range_begin;
				_iter_begin_5149845536:;
				{
					if (_1304dc9b0_m->_field_generics.len() > 0LL) {
						goto _iter_next_5149845536;
					}
					(*this)._field_s->_method_check_type_method(_78739_ins,_1304dc9b0_m);
				}
				_iter_next_5149845536:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _1304dc9b0_m = *__julec_range_begin; goto _iter_begin_5149845536; }
				_iter_end_5149845536:;
			}
		}
	}
	_78778_ok = true;
	return _78778_ok;
}



inline void _1304dc9b0_TypeChecker::_method_append_used_struct_reference(jule::Ref<_127b2e960_Struct> _86851_s) {
	if ((!(jule::real((*this)._field_referencer)))) {
		return;
	}
	{
		auto &_match_expr{ (*this)._field_referencer->_field_owner };
		if (!(_match_expr.type_is<jule::Ref<_127b2e960_Struct>>())) { goto _case_end_5149856784; }
		_case_begin_5149856784:;
		{
			jule::Ref<_127b2e960_Struct> _87521_ref_s = (*this)._field_referencer->_field_owner.operator jule::Ref<_127b2e960_Struct>();
			if ((!(_87521_ref_s->_method_is_uses(_86851_s)))) {
				_87521_ref_s->_field_uses=append(_87521_ref_s->_field_uses,jule::Slice<jule::Ref<_127b2e960_Struct>>({_86851_s}));
			}
		}
		goto _match_end_5149855632;
		_case_end_5149856784:;
		_match_end_5149855632:;
	}
}



inline jule::Ref<_127b2e960_StructIns> _1304dc9b0_TypeChecker::_method_from_struct(jule::Ref<_1275d7180_IdentTypeDecl> _88234_decl,jule::Ref<_127b2e960_Struct> _88260_s) {
	if ((!((*this)._field_s->_method_is_accessible_define(_88260_s->_field_public,_88260_s->_field_token)))) {
		(*this)._method_push_err(_88234_decl->_field_token,jule::Str("ident_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_88234_decl->_field_ident)}));
		return jule::new_ref<_127b2e960_StructIns>();
	}
	if ((*this)._field_ignore_generics.len() > 0LL) {
		return jule::new_ref<_127b2e960_StructIns>();
	}
	jule::Bool _89317_ok = (*this)._field_not_plain || (*this)._method_check_illegal_cycles(_88234_decl,jule::Any(_88260_s));
	if ((!(_89317_ok))) {
		return jule::new_ref<_127b2e960_StructIns>();
	}
	(*this)._method_append_used_struct_reference(_88260_s);
	jule::Ref<_127b2e960_StructIns> _89917_ins = _88260_s->_method_instance();
	_89917_ins->_field_generics=jule::Slice<jule::Ref<_1304dc9b0_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_88234_decl->_field_generics.len())));
	jule::Ref<_1304dc9b0_Referencer> _90117_referencer = (*this)._field_referencer;
	jule::drop((*this)._field_referencer);
	{
		auto &__julec_range_expr = _88234_decl->_field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1304dc9b0_i = 0;
			jule::Ref<_1275d7180_TypeDecl> _1304dc9b0_g = *__julec_range_begin;
			_iter_begin_5149876144:;
			{
				jule::Ref<_1304dc9b0_TypeKind> _90421_kind = (*this)._method_build(_1304dc9b0_g->_field_kind);
				if ((!(jule::real(_90421_kind)))) {
					_89317_ok=false;
					goto _iter_next_5149876144;
				}
				_89917_ins->_field_generics[static_cast<jule::Int>(_1304dc9b0_i)]=_90421_kind;
			}
			_iter_next_5149876144:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1304dc9b0_i; _1304dc9b0_g = *__julec_range_begin; goto _iter_begin_5149876144; }
			_iter_end_5149876144:;
		}
	}
	(*this)._field_referencer=_90117_referencer;
	if ((!(_89317_ok))) {
		return jule::new_ref<_127b2e960_StructIns>();
	}
	_89317_ok=(*this)._field_s->_method_check_generic_quantity(static_cast<jule::I64>(_89917_ins->_field_decl->_field_generics.len()),static_cast<jule::I64>(_89917_ins->_field_generics.len()),_88234_decl->_field_token);
	if ((!(_89317_ok))) {
		return jule::new_ref<_127b2e960_StructIns>();
	}
	jule::Ref<_127b2e960_StructIns> _92317_exist_instance = _88260_s->_method_append_instance(_89917_ins);
	if (jule::real(_92317_exist_instance)) {
		return _92317_exist_instance;
	}
	_89317_ok=(*this)._method_check_struct_ins(_89917_ins,_88234_decl->_field_token);
	if ((!(_89317_ok))) {
		return jule::new_ref<_127b2e960_StructIns>();
	}
	return _89917_ins;
}



inline jule::Trait<_1304dc9b0_Kind> _1304dc9b0_TypeChecker::_method_get_def(jule::Ref<_1275d7180_IdentTypeDecl> _93830_decl) {
	{
		auto &__julec_range_expr = (*this)._field_ignore_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1275d7180_GenericDecl> _1304dc9b0_g = *__julec_range_begin;
			_iter_begin_5149907920:;
			{
				if (_1304dc9b0_g->_field_ident == _93830_decl->_field_ident) {
					return _1304dc9b0_build_prim_type(_1304dc9b0_g->_field_ident);
				}
			}
			_iter_next_5149907920:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1304dc9b0_g = *__julec_range_begin; goto _iter_begin_5149907920; }
			_iter_end_5149907920:;
		}
	}
	{
		auto &__julec_range_expr = (*this)._field_use_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1304dc9b0_TypeAlias> _1304dc9b0_g = *__julec_range_begin;
			_iter_begin_5149912032:;
			{
				if (_1304dc9b0_g->_field_ident == _93830_decl->_field_ident) {
					jule::Ref<_127b2e960_StructIns> _94725_st = _1304dc9b0_g->_field_kind->_field_kind->_method_strct();
					if (jule::real(_94725_st)) {
						jule::Bool _94925_ok = (*this)._method_check_illegal_cycles(_93830_decl,jule::Any(_94725_st->_field_decl));
						if ((!(_94925_ok))) {
							return nullptr;
						}
					}
					return _1304dc9b0_g->_field_kind->_field_kind->_field_kind;
				}
			}
			_iter_next_5149912032:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1304dc9b0_g = *__julec_range_begin; goto _iter_begin_5149912032; }
			_iter_end_5149912032:;
		}
	}
	if ((!(_93830_decl->_field_cpp_linked))) {
		jule::Ref<_13009ed30_Enum> _95921_e = (*this)._field_lookup.get()._method_find_enum(_93830_decl->_field_ident);
		if (jule::real(_95921_e)) {
			return (*this)._method_from_enum(_93830_decl,_95921_e);
		}
		jule::Ref<_130099320_Trait> _96421_t = (*this)._field_lookup.get()._method_find_trait(_93830_decl->_field_ident);
		if ((!(jule::real(_96421_t)))) {
			_96421_t=_130b8f5f0_find_builtin_trait(_93830_decl->_field_ident);
		}
		if (jule::real(_96421_t)) {
			if ((!((*this)._field_s->_method_is_accessible_define(_96421_t->_field_public,_96421_t->_field_token)))) {
				(*this)._method_push_err(_93830_decl->_field_token,jule::Str("ident_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_93830_decl->_field_ident)}));
				return nullptr;
			}
			if (_93830_decl->_field_generics.len() > 0LL) {
				(*this)._method_push_err(_93830_decl->_field_token,jule::Str("type_not_supports_generics", 26),jule::Slice<jule::Any>({jule::Any(_93830_decl->_field_ident)}));
				return nullptr;
			}
			return _96421_t;
		}
	}
	jule::Ref<_127b2e960_Struct> _98217_s = (*this)._field_lookup.get()._method_find_struct(_93830_decl->_field_ident,_93830_decl->_field_cpp_linked);
	if (jule::real(_98217_s)) {
		return (*this)._method_from_struct(_93830_decl,_98217_s);
	}
	jule::Ref<_1304dc9b0_TypeAlias> _98717_ta = (*this)._field_lookup.get()._method_find_type_alias(_93830_decl->_field_ident,_93830_decl->_field_cpp_linked);
	if ((!(jule::real(_98717_ta)))) {
		_98717_ta=_130b8f5f0_find_builtin_type_alias(_93830_decl->_field_ident);
	}
	if (jule::real(_98717_ta)) {
		return (*this)._method_from_type_alias(_93830_decl,_98717_ta);
	}
	(*this)._method_push_err(_93830_decl->_field_token,jule::Str("ident_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_93830_decl->_field_ident)}));
	return nullptr;
}



inline jule::Trait<_1304dc9b0_Kind> _1304dc9b0_TypeChecker::_method_build_ident(jule::Ref<_1275d7180_IdentTypeDecl> _99934_decl) {
	{
		if (!((_1304dc9b0_is_prim(_99934_decl->_field_ident)))) { goto _case_end_5149954800; }
		_case_begin_5149954800:;
		{
			return (*this)._method_build_prim(_99934_decl);
		}
		goto _match_end_5149953072;
		_case_end_5149954800:;
		_case_begin_5149953280:;
		{
			return (*this)._method_get_def(_99934_decl);
		}
		goto _match_end_5149953072;
		_case_end_5149953280:;
		_match_end_5149953072:;
	}
}



inline jule::Ref<_1304dc9b0_Ref> _1304dc9b0_TypeChecker::_method_build_ref_from_type(jule::Ref<_1304dc9b0_TypeKind> _100642_elem) {
	{
		if (!(((!(jule::real(_100642_elem)))))) { goto _case_end_5149958592; }
		_case_begin_5149958592:;
		{
			return jule::new_ref<_1304dc9b0_Ref>();
		}
		goto _match_end_5149958272;
		_case_end_5149958592:;
		if (!((jule::real(_100642_elem->_method_strct())))) { goto _case_end_5149958704; }
		_case_begin_5149958704:;
		{
			jule::Ref<_127b2e960_StructIns> _101317_s = _100642_elem->_method_strct();
			if (jule::real(_101317_s->_field_decl) && _101317_s->_field_decl->_field_cpp_linked) {
				(*this)._method_push_err((*this)._field_error_token,jule::Str("cpp_linked_struct_for_ref", 25),jule::Slice<jule::Any>({}));
				return jule::new_ref<_1304dc9b0_Ref>();
			}
		}
		goto _match_end_5149958272;
		_case_end_5149958704:;
		if (!((jule::real(_100642_elem->_method_ref())))) { goto _case_end_5149958816; }
		_case_begin_5149958816:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("ref_refs_ref", 12),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1304dc9b0_Ref>();
		}
		goto _match_end_5149958272;
		_case_end_5149958816:;
		if (!((jule::real(_100642_elem->_method_ptr())))) { goto _case_end_5149958944; }
		_case_begin_5149958944:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("ref_refs_ptr", 12),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1304dc9b0_Ref>();
		}
		goto _match_end_5149958272;
		_case_end_5149958944:;
		if (!((jule::real(_100642_elem->_method_enm())))) { goto _case_end_5149959072; }
		_case_begin_5149959072:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("ref_refs_enum", 13),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1304dc9b0_Ref>();
		}
		goto _match_end_5149958272;
		_case_end_5149959072:;
		if (!((jule::real(_100642_elem->_method_arr())))) { goto _case_end_5149959200; }
		_case_begin_5149959200:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("ref_refs_array", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1304dc9b0_Ref>();
		}
		goto _match_end_5149958272;
		_case_end_5149959200:;
		_match_end_5149958272:;
	}
	return jule::new_struct<_1304dc9b0_Ref>(new( std::nothrow ) _1304dc9b0_Ref(_100642_elem));
}



inline jule::Ref<_1304dc9b0_Ref> _1304dc9b0_TypeChecker::_method_build_ref(jule::Ref<_1275d7180_RefTypeDecl> _104132_decl) {
	jule::Bool _104213_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_104213_not_plain;
	});
	jule::Ref<_1304dc9b0_TypeKind> _104617_elem = (*this)._method_check_decl(_104132_decl->_field_elem);
	return (*this)._method_build_ref_from_type(_104617_elem);
}



inline jule::Ref<_1304dc9b0_Ptr> _1304dc9b0_TypeChecker::_method_build_ptr_from_type(jule::Ref<_1304dc9b0_TypeKind> _105042_elem) {
	{
		if (!(((!(jule::real(_105042_elem)))))) { goto _case_end_5149990432; }
		_case_begin_5149990432:;
		{
			return jule::new_ref<_1304dc9b0_Ptr>();
		}
		goto _match_end_5149990144;
		_case_end_5149990432:;
		if (!((jule::real(_105042_elem->_method_ref())))) { goto _case_end_5149990544; }
		_case_begin_5149990544:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("ptr_points_ref", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1304dc9b0_Ptr>();
		}
		goto _match_end_5149990144;
		_case_end_5149990544:;
		if (!((jule::real(_105042_elem->_method_enm())))) { goto _case_end_5149990656; }
		_case_begin_5149990656:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("ptr_points_enum", 15),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1304dc9b0_Ptr>();
		}
		goto _match_end_5149990144;
		_case_end_5149990656:;
		if (!((jule::real(_105042_elem->_method_arr()) && _105042_elem->_method_arr()->_field_auto))) { goto _case_end_5149990784; }
		_case_begin_5149990784:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("array_auto_sized", 16),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1304dc9b0_Ptr>();
		}
		goto _match_end_5149990144;
		_case_end_5149990784:;
		_match_end_5149990144:;
	}
	return jule::new_struct<_1304dc9b0_Ptr>(new( std::nothrow ) _1304dc9b0_Ptr(_105042_elem));
}



inline jule::Ref<_1304dc9b0_Ptr> _1304dc9b0_TypeChecker::_method_build_ptr(jule::Ref<_1275d7180_PtrTypeDecl> _107432_decl) {
	jule::Bool _107513_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_107513_not_plain;
	});
	jule::Ref<_1304dc9b0_TypeKind> _107917_elem = jule::new_ref<_1304dc9b0_TypeKind>();
	if ((!(_107432_decl->_method_is_unsafe()))) {
		_107917_elem=(*this)._method_check_decl(_107432_decl->_field_elem);
		return (*this)._method_build_ptr_from_type(_107917_elem);
	}
	return jule::new_struct<_1304dc9b0_Ptr>(new( std::nothrow ) _1304dc9b0_Ptr(_107917_elem));
}



inline jule::Ref<_1304dc9b0_Slc> _1304dc9b0_TypeChecker::_method_build_slc(jule::Ref<_1275d7180_SlcTypeDecl> _109132_decl) {
	jule::Bool _109213_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_109213_not_plain;
	});
	jule::Ref<_1304dc9b0_TypeKind> _109617_elem = (*this)._method_check_decl(_109132_decl->_field_elem);
	{
		if (!(((!(jule::real(_109617_elem)))))) { goto _case_end_5150020704; }
		_case_begin_5150020704:;
		{
			return jule::new_ref<_1304dc9b0_Slc>();
		}
		goto _match_end_5150020016;
		_case_end_5150020704:;
		if (!((jule::real(_109617_elem->_method_arr()) && _109617_elem->_method_arr()->_field_auto))) { goto _case_end_5150020816; }
		_case_begin_5150020816:;
		{
			(*this)._method_push_err(_109132_decl->_field_elem->_field_token,jule::Str("array_auto_sized", 16),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1304dc9b0_Slc>();
		}
		goto _match_end_5150020016;
		_case_end_5150020816:;
		_match_end_5150020016:;
	}
	return jule::new_struct<_1304dc9b0_Slc>(new( std::nothrow ) _1304dc9b0_Slc(_109617_elem));
}



inline jule::Ref<_1304dc9b0_Arr> _1304dc9b0_TypeChecker::_method_build_arr(jule::Ref<_1275d7180_ArrTypeDecl> _111332_decl) {
	jule::Bool _111413_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_111413_not_plain;
	});
	jule::Int _111817_n = 0LL;
	if ((!(_111332_decl->_method_auto_sized()))) {
		jule::Ref<_13064b610_Data> _112121_size = (*this)._field_s->_method_eval(_111332_decl->_field_size,(*this)._field_lookup);
		if ((!(jule::real(_112121_size)))) {
			return jule::new_ref<_1304dc9b0_Arr>();
		}
		if ((!(_112121_size->_method_is_const()))) {
			(*this)._method_push_err(_111332_decl->_field_elem->_field_token,jule::Str("expr_not_const", 14),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1304dc9b0_Arr>();
		} else if ((!(_130d7f700_is_int(_112121_size->_field_kind->_method_prim()->_field_kind)))) {
			(*this)._method_push_err(_111332_decl->_field_elem->_field_token,jule::Str("array_size_is_not_int", 21),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1304dc9b0_Arr>();
		}
		_111817_n=static_cast<jule::Int>(_112121_size->_field_constant->_method_as_i64());
		if (_111817_n < 0LL) {
			(*this)._method_push_err(_111332_decl->_field_elem->_field_token,jule::Str("array_size_is_negative", 22),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1304dc9b0_Arr>();
		}
	}
	jule::Ref<_1304dc9b0_TypeKind> _114117_elem = (*this)._method_check_decl(_111332_decl->_field_elem);
	{
		if (!(((!(jule::real(_114117_elem)))))) { goto _case_end_5150053376; }
		_case_begin_5150053376:;
		{
			return jule::new_ref<_1304dc9b0_Arr>();
		}
		goto _match_end_5150053152;
		_case_end_5150053376:;
		if (!((jule::real(_114117_elem->_method_arr()) && _114117_elem->_method_arr()->_field_auto))) { goto _case_end_5150053488; }
		_case_begin_5150053488:;
		{
			(*this)._method_push_err(_111332_decl->_field_elem->_field_token,jule::Str("array_auto_sized", 16),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1304dc9b0_Arr>();
		}
		goto _match_end_5150053152;
		_case_end_5150053488:;
		_match_end_5150053152:;
	}
	return jule::new_struct<_1304dc9b0_Arr>(new( std::nothrow ) _1304dc9b0_Arr(_111332_decl->_method_auto_sized(),_111817_n,_114117_elem));
}



inline jule::Ref<_1304dc9b0_Map> _1304dc9b0_TypeChecker::_method_build_map(jule::Ref<_1275d7180_MapTypeDecl> _116032_decl) {
	jule::Bool _116113_not_plain = (*this)._field_not_plain;
	(*this)._field_not_plain=true;
	__JULE_DEFER({
		(*this)._field_not_plain=_116113_not_plain;
	});
	jule::Ref<_1304dc9b0_TypeKind> _116517_key = (*this)._method_check_decl(_116032_decl->_field_key);
	if ((!(jule::real(_116517_key)))) {
		return jule::new_ref<_1304dc9b0_Map>();
	}
	jule::Ref<_1304dc9b0_TypeKind> _117017_val = (*this)._method_check_decl(_116032_decl->_field_val);
	if ((!(jule::real(_117017_val)))) {
		return jule::new_ref<_1304dc9b0_Map>();
	}
	if (jule::real(_117017_val->_method_enm())) {
		(*this)._method_push_err(_116032_decl->_field_val->_field_token,jule::Str("enum_as_map_val", 15),jule::Slice<jule::Any>({}));
	}
	return jule::new_struct<_1304dc9b0_Map>(new( std::nothrow ) _1304dc9b0_Map(_116517_key,_117017_val));
}



inline jule::Ref<_1304dc9b0_Tuple> _1304dc9b0_TypeChecker::_method_build_tuple(jule::Ref<_1275d7180_TupleTypeDecl> _118434_decl) {
	jule::Slice<jule::Ref<_1304dc9b0_TypeKind>> _118517_types = jule::Slice<jule::Ref<_1304dc9b0_TypeKind>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_118434_decl->_field_types.len())));
	{
		auto &__julec_range_expr = _118434_decl->_field_types;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1304dc9b0_i = 0;
			jule::Ref<_1275d7180_TypeDecl> _1304dc9b0_t = *__julec_range_begin;
			_iter_begin_5150080976:;
			{
				jule::Ref<_1304dc9b0_TypeKind> _118721_kind = (*this)._method_check_decl(_1304dc9b0_t);
				if ((!(jule::real(_118721_kind)))) {
					return jule::new_ref<_1304dc9b0_Tuple>();
				}
				_118517_types[static_cast<jule::Int>(_1304dc9b0_i)]=_118721_kind;
			}
			_iter_next_5150080976:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1304dc9b0_i; _1304dc9b0_t = *__julec_range_begin; goto _iter_begin_5150080976; }
			_iter_end_5150080976:;
		}
	}
	return jule::new_struct<_1304dc9b0_Tuple>(new( std::nothrow ) _1304dc9b0_Tuple(_118517_types));
}



inline jule::Bool _1304dc9b0_TypeChecker::_method_check_fn_types(jule::Ref<_127ed52e0_FnIns> _119737_f) {
	jule::Bool _119750_ok = jule::Bool();
	{
		auto &__julec_range_expr = _119737_f->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127ed52e0_ParamIns> _1304dc9b0_p = *__julec_range_begin;
			_iter_begin_5150090384:;
			{
				_1304dc9b0_p->_field_kind=(*this)._method_build(_1304dc9b0_p->_field_decl->_field_kind->_field_decl->_field_kind);
				_119750_ok=jule::real(_1304dc9b0_p->_field_kind);
				if ((!(_119750_ok))) {
					_119750_ok = false;
					return _119750_ok;
				}
			}
			_iter_next_5150090384:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1304dc9b0_p = *__julec_range_begin; goto _iter_begin_5150090384; }
			_iter_end_5150090384:;
		}
	}
	if ((!(_119737_f->_field_decl->_method_is_void()))) {
		_119737_f->_field_result=(*this)._method_build(_119737_f->_field_decl->_field_result->_field_kind->_field_decl->_field_kind);
		_119750_ok = jule::real(_119737_f->_field_result);
		return _119750_ok;
	}
	_119750_ok = true;
	return _119750_ok;
}



inline jule::Ref<_127ed52e0_FnIns> _1304dc9b0_TypeChecker::_method_build_fn(jule::Ref<_1275d7180_FnDecl> _121431_decl) {
	if (_121431_decl->_field_generics.len() > 0LL) {
		(*this)._method_push_err(_121431_decl->_field_token,jule::Str("genericed_fn_as_anonymous_fn", 28),jule::Slice<jule::Any>({}));
		return jule::new_ref<_127ed52e0_FnIns>();
	}
	jule::Ref<_127ed52e0_Fn> _122017_f = _127ff3480_build_fn(_121431_decl);
	jule::Ref<_127ed52e0_FnIns> _122117_ins = _122017_f->_method_instance_force();
	_122117_ins->_field_anon=true;
	jule::Bool _122413_ok = (*this)._method_check_fn_types(_122117_ins);
	if ((!(_122413_ok))) {
		return jule::new_ref<_127ed52e0_FnIns>();
	}
	return _122117_ins;
}



inline jule::Trait<_1304dc9b0_Kind> _1304dc9b0_TypeChecker::_method_build_by_std_namespace(jule::Ref<_1275d7180_NamespaceTypeDecl> _123245_decl) {
	jule::Str _123313_path = _1304dc9b0_build_link_path_by_tokens(_123245_decl->_field_idents);
	jule::Ref<_1300a4650_ImportInfo> _123417_imp = (*this)._field_lookup.get()._method_select_package(jule::Fn<jule::Bool(jule::Ref<_1300a4650_ImportInfo>)>([=](jule::Ref<_1300a4650_ImportInfo> _123453_imp) mutable -> jule::Bool {
		return _123453_imp->_field_std && (_123453_imp->_field_link_path == _123313_path);
	}));
	if ((!(jule::real(_123417_imp))) || (!(_123417_imp->_method_is_lookupable(jule::Str("self", 4))))) {
		(*this)._method_push_err(_123245_decl->_field_idents[static_cast<jule::Int>(0LL)],jule::Str("namespace_not_exist", 19),jule::Slice<jule::Any>({jule::Any(_123313_path)}));
		return nullptr;
	}
	jule::Trait<_1304dc360_Lookup> _124317_lookup = (*this)._field_lookup;
	(*this)._field_lookup=_123417_imp;
	jule::Trait<_1304dc9b0_Kind> _124617_kind = (*this)._method_build_ident(_123245_decl->_field_kind);
	(*this)._field_lookup=_124317_lookup;
	return _124617_kind;
}



inline jule::Trait<_1304dc9b0_Kind> _1304dc9b0_TypeChecker::_method_build_by_namespace(jule::Ref<_1275d7180_NamespaceTypeDecl> _125341_decl) {
	_127941de0_Token _125413_token = _125341_decl->_field_idents[static_cast<jule::Int>(0LL)];
	if (_125413_token._field_kind == jule::Str("std", 3)) {
		return (*this)._method_build_by_std_namespace(_125341_decl);
	}
	(*this)._method_push_err(_125413_token,jule::Str("ident_not_exist", 15),jule::Slice<jule::Any>({jule::Any(_125413_token._field_kind)}));
	return nullptr;
}



inline jule::Ref<_1304dc9b0_TypeKind> _1304dc9b0_TypeChecker::_method_build(jule::Any _126328_decl_kind) {
	jule::Trait<_1304dc9b0_Kind> _126417_kind = nullptr;
	{
		auto &_match_expr{ _126328_decl_kind };
		if (!(_match_expr.type_is<jule::Ref<_1304dc9b0_TypeKind>>())) { goto _case_end_5150145568; }
		_case_begin_5150145568:;
		{
			_126417_kind=_126328_decl_kind.operator jule::Ref<_1304dc9b0_TypeKind>();
		}
		goto _match_end_5150141776;
		_case_end_5150145568:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_IdentTypeDecl>>())) { goto _case_end_5150145872; }
		_case_begin_5150145872:;
		{
			jule::Trait<_1304dc9b0_Kind> _127121_t = (*this)._method_build_ident(_126328_decl_kind.operator jule::Ref<_1275d7180_IdentTypeDecl>());
			if (_127121_t != nullptr) {
				_126417_kind=_127121_t;
			}
		}
		goto _match_end_5150141776;
		_case_end_5150145872:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_RefTypeDecl>>())) { goto _case_end_5150145984; }
		_case_begin_5150145984:;
		{
			jule::Ref<_1304dc9b0_Ref> _127721_t = (*this)._method_build_ref(_126328_decl_kind.operator jule::Ref<_1275d7180_RefTypeDecl>());
			if (jule::real(_127721_t)) {
				_126417_kind=_127721_t;
			}
		}
		goto _match_end_5150141776;
		_case_end_5150145984:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_PtrTypeDecl>>())) { goto _case_end_5150142672; }
		_case_begin_5150142672:;
		{
			jule::Ref<_1304dc9b0_Ptr> _128321_t = (*this)._method_build_ptr(_126328_decl_kind.operator jule::Ref<_1275d7180_PtrTypeDecl>());
			if (jule::real(_128321_t)) {
				_126417_kind=_128321_t;
			}
		}
		goto _match_end_5150141776;
		_case_end_5150142672:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_SlcTypeDecl>>())) { goto _case_end_5150142784; }
		_case_begin_5150142784:;
		{
			jule::Ref<_1304dc9b0_Slc> _128921_t = (*this)._method_build_slc(_126328_decl_kind.operator jule::Ref<_1275d7180_SlcTypeDecl>());
			if (jule::real(_128921_t)) {
				_126417_kind=_128921_t;
			}
		}
		goto _match_end_5150141776;
		_case_end_5150142784:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_ArrTypeDecl>>())) { goto _case_end_5150142896; }
		_case_begin_5150142896:;
		{
			jule::Ref<_1304dc9b0_Arr> _129521_t = (*this)._method_build_arr(_126328_decl_kind.operator jule::Ref<_1275d7180_ArrTypeDecl>());
			if (jule::real(_129521_t)) {
				_126417_kind=_129521_t;
			}
		}
		goto _match_end_5150141776;
		_case_end_5150142896:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_MapTypeDecl>>())) { goto _case_end_5150146160; }
		_case_begin_5150146160:;
		{
			jule::Ref<_1304dc9b0_Map> _130121_t = (*this)._method_build_map(_126328_decl_kind.operator jule::Ref<_1275d7180_MapTypeDecl>());
			if (jule::real(_130121_t)) {
				_126417_kind=_130121_t;
			}
		}
		goto _match_end_5150141776;
		_case_end_5150146160:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_TupleTypeDecl>>())) { goto _case_end_5150146272; }
		_case_begin_5150146272:;
		{
			jule::Ref<_1304dc9b0_Tuple> _130721_t = (*this)._method_build_tuple(_126328_decl_kind.operator jule::Ref<_1275d7180_TupleTypeDecl>());
			if (jule::real(_130721_t)) {
				_126417_kind=_130721_t;
			}
		}
		goto _match_end_5150141776;
		_case_end_5150146272:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_FnDecl>>())) { goto _case_end_5150146384; }
		_case_begin_5150146384:;
		{
			jule::Ref<_127ed52e0_FnIns> _131321_t = (*this)._method_build_fn(_126328_decl_kind.operator jule::Ref<_1275d7180_FnDecl>());
			if (jule::real(_131321_t)) {
				_126417_kind=_131321_t;
			}
		}
		goto _match_end_5150141776;
		_case_end_5150146384:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_NamespaceTypeDecl>>())) { goto _case_end_5150146576; }
		_case_begin_5150146576:;
		{
			jule::Trait<_1304dc9b0_Kind> _131921_t = (*this)._method_build_by_namespace(_126328_decl_kind.operator jule::Ref<_1275d7180_NamespaceTypeDecl>());
			if (_131921_t != nullptr) {
				_126417_kind=_131921_t;
			}
		}
		goto _match_end_5150141776;
		_case_end_5150146576:;
		_case_begin_5150142320:;
		{
			(*this)._method_push_err((*this)._field_error_token,jule::Str("invalid_type", 12),jule::Slice<jule::Any>({}));
			return jule::new_ref<_1304dc9b0_TypeKind>();
		}
		goto _match_end_5150141776;
		_case_end_5150142320:;
		_match_end_5150141776:;
	}
	if (_126417_kind == nullptr) {
		return jule::new_ref<_1304dc9b0_TypeKind>();
	}
	{
		auto &_match_expr{ _126417_kind };
		if (!(_match_expr.type_is<jule::Ref<_1304dc9b0_TypeKind>>())) { goto _case_end_5150182848; }
		_case_begin_5150182848:;
		{
			return _126417_kind.operator jule::Ref<_1304dc9b0_TypeKind>();
		}
		goto _match_end_5150180496;
		_case_end_5150182848:;
		_case_begin_5150181792:;
		{
			return jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_126417_kind));
		}
		goto _match_end_5150180496;
		_case_end_5150181792:;
		_match_end_5150180496:;
	}
}



inline jule::Ref<_1304dc9b0_TypeKind> _1304dc9b0_TypeChecker::_method_check_decl(jule::Ref<_1275d7180_TypeDecl> _134433_decl) {
	_127941de0_Token _134617_error_token = (*this)._field_error_token;
	(*this)._field_error_token=_134433_decl->_field_token;
	jule::Ref<_1304dc9b0_TypeKind> _134917_kind = (*this)._method_build(_134433_decl->_field_kind);
	(*this)._field_error_token=_134617_error_token;
	return _134917_kind;
}



inline void _1304dc9b0_TypeChecker::_method_check(jule::Ref<_1304dc9b0_TypeSymbol> _135528_t) {
	if ((!(jule::real(_135528_t->_field_decl)))) {
		return;
	}
	jule::Ref<_1304dc9b0_TypeKind> _136017_kind = (*this)._method_check_decl(_135528_t->_field_decl);
	if ((!(jule::real(_136017_kind)))) {
		_135528_t->_method_remove_kind();
		return;
	}
	_135528_t->_field_kind=_136017_kind;
}







std::ostream &operator<<(std::ostream &_Stream, const _1304dc9b0_TypeChecker &_Src) {
	_Stream << "TypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "lookup:" << _Src._field_lookup << ", ";
	_Stream << "referencer:" << _Src._field_referencer << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "ignore_generics:" << _Src._field_ignore_generics << ", ";
	_Stream << "use_generics:" << _Src._field_use_generics << ", ";
	_Stream << "not_plain:" << _Src._field_not_plain;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1304dc9b0_TypeAlias &_Src) {
	_Stream << "TypeAlias{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "refers:" << _Src._field_refers;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _13064b610_BinopSolver::_method_check_type_compatibility(void) {
	_13032cf90_TypeCompatibilityChecker _320917_tcc = _13032cf90_TypeCompatibilityChecker((*this)._field_e->_field_s,(*this)._field_l->_field_kind,(*this)._field_r->_field_kind,(*this)._field_op,true,jule::Bool());
	return _320917_tcc._method_check();
}



inline jule::Ref<_13064b610_Data> _13064b610_BinopSolver::_method_eval_nil(void) {
	if ((!(_1304dc9b0_is_nil_compatible((*this)._field_r->_field_kind)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any(jule::Str("nil", 3)),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_13064b610_Data>();
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_5148722368; }
		_case_begin_5148722368:;
		{
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_130c83140_Const>()));
		}
		goto _match_end_5148713392;
		_case_end_5148722368:;
		_case_begin_5148721184:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("nil", 3))}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5148713392;
		_case_end_5148721184:;
		_match_end_5148713392:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_BinopSolver::_method_eval_enum(void) {
	jule::Ref<_13009ed30_Enum> _324117_enm = (*this)._field_l->_field_kind->_method_enm();
	if ((!(jule::real((*this)._field_r->_field_kind->_method_enm()))) || ((_324117_enm).alloc != ((*this)._field_r->_field_kind->_method_enm()).alloc)) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any(_324117_enm->_field_ident),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_13064b610_Data>();
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_5148740832; }
		_case_begin_5148740832:;
		{
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_130c83140_Const>()));
		}
		goto _match_end_5148736144;
		_case_end_5148740832:;
		if (!((jule::Str("&", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr)) { goto _case_end_5148744608; }
		_case_begin_5148744608:;
		{
			if ((!(jule::real(_324117_enm->_field_kind->_field_kind->_method_prim()))) || (!(_130d7f700_is_int(_324117_enm->_field_kind->_field_kind->_method_prim()->_method_to_str())))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_324117_enm->_field_ident)}));
			}
			return (*this)._field_l;
		}
		goto _match_end_5148736144;
		_case_end_5148744608:;
		_case_begin_5148739264:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(_324117_enm->_field_ident)}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5148736144;
		_case_end_5148739264:;
		_match_end_5148736144:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_BinopSolver::_method_eval_ptr(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_13064b610_Data>();
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str("<=", 2)) == _match_expr || (jule::Str(">=", 2)) == _match_expr)) { goto _case_end_5148768928; }
		_case_begin_5148768928:;
		{
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_130c83140_Const>()));
		}
		goto _match_end_5148756880;
		_case_end_5148768928:;
		_case_begin_5148763296:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5148756880;
		_case_end_5148763296:;
		_match_end_5148756880:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_BinopSolver::_method_eval_arr(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_13064b610_Data>();
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_5148785376; }
		_case_begin_5148785376:;
		{
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_130c83140_Const>()));
		}
		goto _match_end_5148778704;
		_case_end_5148785376:;
		_case_begin_5148779680:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5148778704;
		_case_end_5148779680:;
		_match_end_5148778704:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_BinopSolver::_method_eval_slc(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_13064b610_Data>();
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_5148800720; }
		_case_begin_5148800720:;
		{
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_130c83140_Const>()));
		}
		goto _match_end_5148794160;
		_case_end_5148800720:;
		_case_begin_5148795328:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5148794160;
		_case_end_5148795328:;
		_match_end_5148794160:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_BinopSolver::_method_eval_fn(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_13064b610_Data>();
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_5148811712; }
		_case_begin_5148811712:;
		{
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_130c83140_Const>()));
		}
		goto _match_end_5148809760;
		_case_end_5148811712:;
		_case_begin_5148810992:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5148809760;
		_case_end_5148810992:;
		_match_end_5148809760:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_BinopSolver::_method_eval_struct(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_13064b610_Data>();
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_5148830528; }
		_case_begin_5148830528:;
		{
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_130c83140_Const>()));
		}
		goto _match_end_5148828096;
		_case_end_5148830528:;
		_case_begin_5148829264:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5148828096;
		_case_end_5148829264:;
		_match_end_5148828096:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_BinopSolver::_method_eval_trait(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_13064b610_Data>();
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_5148846128; }
		_case_begin_5148846128:;
		{
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_130c83140_Const>()));
		}
		goto _match_end_5148843696;
		_case_end_5148846128:;
		_case_begin_5148844864:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5148843696;
		_case_end_5148844864:;
		_match_end_5148843696:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_BinopSolver::_method_eval_any(void) {
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_5148855104; }
		_case_begin_5148855104:;
		{
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_130c83140_Const>()));
		}
		goto _match_end_5148853472;
		_case_end_5148855104:;
		_case_begin_5148854272:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("any", 3))}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5148853472;
		_case_end_5148854272:;
		_match_end_5148853472:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_BinopSolver::_method_eval_bool(void) {
	if ((!((*this)._method_check_type_compatibility()))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_13064b610_Data>();
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("&&", 2)) == _match_expr || (jule::Str("||", 2)) == _match_expr)) { goto _case_end_5148870624; }
		_case_begin_5148870624:;
		{
			return (*this)._field_l;
		}
		goto _match_end_5148868192;
		_case_end_5148870624:;
		_case_begin_5148869360:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any((*this)._field_l->_field_kind->_method_to_str())}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5148868192;
		_case_end_5148869360:;
		_match_end_5148868192:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_BinopSolver::_method_eval_str(void) {
	jule::Str _343517_rk = (*this)._field_r->_field_kind->_method_to_str();
	if (_343517_rk != jule::Str("str", 3)) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any((*this)._field_l->_field_kind->_method_to_str()),jule::Any(_343517_rk)}));
		return jule::new_ref<_13064b610_Data>();
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr)) { goto _case_end_5148886288; }
		_case_begin_5148886288:;
		{
			return (*this)._field_l;
		}
		goto _match_end_5148880464;
		_case_end_5148886288:;
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr)) { goto _case_end_5148890352; }
		_case_begin_5148890352:;
		{
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_130c83140_Const>()));
		}
		goto _match_end_5148880464;
		_case_end_5148890352:;
		_case_begin_5148879520:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("any", 3))}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5148880464;
		_case_end_5148879520:;
		_match_end_5148880464:;
	}
}



inline void _13064b610_BinopSolver::_method_set_type_to_greater(void) {
	if (((*this)._field_l->_method_is_const() && (*this)._field_r->_method_is_const()) || ((!((*this)._field_l->_method_is_const())) && (!((*this)._field_r->_method_is_const())))) {
		jule::Str _346117_lk = (*this)._field_l->_field_kind->_method_to_str();
		jule::Str _346217_rk = (*this)._field_r->_field_kind->_method_to_str();
		if (_130d2a0a0_is_greater(_346217_rk,_346117_lk)) {
			(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
		}
		return;
	}
	if ((*this)._field_l->_method_is_const()) {
		(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
		return;
	}
	(*this)._field_r->_field_kind=(*this)._field_l->_field_kind;
}



inline void _13064b610_BinopSolver::_method_mod(void) {
	jule::Fn<void(jule::Ref<_13064b610_Data>)> _347813_check = jule::Fn<void(jule::Ref<_13064b610_Data>)>([=](jule::Ref<_13064b610_Data> _347828_d) mutable -> void {
		if ((!(_347828_d->_method_is_const()))) {
			if ((!(jule::real(_347828_d->_field_kind->_method_prim()))) || (!(_130d7f700_is_int(_347828_d->_field_kind->_method_prim()->_field_kind)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("modulo_with_not_int", 19),jule::Slice<jule::Any>({}));
			}
			return;
		}
		{
			if (!((_13032cf90_sig_assignable(jule::Str("i64", 3),_347828_d)))) { goto _case_end_5148921488; }
			_case_begin_5148921488:;
			{
				_347828_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_347828_d->_field_constant->_method_as_i64()));
			}
			goto _match_end_5148919968;
			_case_end_5148921488:;
			if (!((_13032cf90_unsig_assignable(jule::Str("u64", 3),_347828_d)))) { goto _case_end_5148920944; }
			_case_begin_5148920944:;
			{
				_347828_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_347828_d->_field_constant->_method_as_u64()));
			}
			goto _match_end_5148919968;
			_case_end_5148920944:;
			_case_begin_5148920160:;
			{
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("modulo_with_not_int", 19),jule::Slice<jule::Any>({}));
			}
			goto _match_end_5148919968;
			_case_end_5148920160:;
			_match_end_5148919968:;
		}
	});
	_347813_check((*this)._field_l);
	_347813_check((*this)._field_r);
}



inline jule::Ref<_13064b610_Data> _13064b610_BinopSolver::_method_eval_float(void) {
	jule::Str _350313_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _350413_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!(_130d7f700_is_num(_350313_lk))) || (!(_130d7f700_is_num(_350413_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any(_350313_lk),jule::Any(_350413_rk)}));
		return jule::new_ref<_13064b610_Data>();
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_5148942912; }
		_case_begin_5148942912:;
		{
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_130c83140_Const>()));
		}
		goto _match_end_5148941312;
		_case_end_5148942912:;
		_match_end_5148941312:;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("*", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr)) { goto _case_end_5148948048; }
		_case_begin_5148948048:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_5148945728;
		_case_end_5148948048:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_5148950944; }
		_case_begin_5148950944:;
		{
			if ((!(_130d7f700_is_int(_350413_rk)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any(_350313_lk),jule::Any(_350413_rk)}));
				return jule::new_ref<_13064b610_Data>();
			}
			(*this)._method_mod();
			return (*this)._field_r;
		}
		goto _match_end_5148945728;
		_case_end_5148950944:;
		_case_begin_5148947392:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_float", 22),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5148945728;
		_case_end_5148947392:;
		_match_end_5148945728:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_BinopSolver::_method_eval_unsig_int(void) {
	jule::Str _354913_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _355013_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!(_130d7f700_is_num(_354913_lk))) || (!(_130d7f700_is_num(_355013_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any(_354913_lk),jule::Any(_355013_rk)}));
		return jule::new_ref<_13064b610_Data>();
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_5148970288; }
		_case_begin_5148970288:;
		{
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_130c83140_Const>()));
		}
		goto _match_end_5148968688;
		_case_end_5148970288:;
		_match_end_5148968688:;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("*", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr || (jule::Str("&", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr || (jule::Str("^", 1)) == _match_expr)) { goto _case_end_5148978320; }
		_case_begin_5148978320:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_5148973104;
		_case_end_5148978320:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_5148978544; }
		_case_begin_5148978544:;
		{
			(*this)._method_mod();
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_5148973104;
		_case_end_5148978544:;
		if (!((jule::Str("<<", 2)) == _match_expr || (jule::Str(">>", 2)) == _match_expr)) { goto _case_end_5148978848; }
		_case_begin_5148978848:;
		{
			if ((!(_13064b610_is_ok_for_shifting((*this)._field_r)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("bitshift_must_unsigned", 22),jule::Slice<jule::Any>({}));
				return jule::new_ref<_13064b610_Data>();
			}
			if ((*this)._field_l->_method_is_const()) {
				(*this)._field_l->_field_kind=(*this)._field_r->_field_kind;
			}
			return (*this)._field_l;
		}
		goto _match_end_5148973104;
		_case_end_5148978848:;
		_case_begin_5148972000:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_uint", 21),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5148973104;
		_case_end_5148972000:;
		_match_end_5148973104:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_BinopSolver::_method_eval_sig_int(void) {
	jule::Str _360813_lk = (*this)._field_l->_field_kind->_method_to_str();
	jule::Str _360913_rk = (*this)._field_r->_field_kind->_method_to_str();
	if ((!(_130d7f700_is_num(_360813_lk))) || (!(_130d7f700_is_num(_360913_rk)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any(_360813_lk),jule::Any(_360913_rk)}));
		return jule::new_ref<_13064b610_Data>();
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr || (jule::Str("!=", 2)) == _match_expr || (jule::Str("<", 1)) == _match_expr || (jule::Str(">", 1)) == _match_expr || (jule::Str(">=", 2)) == _match_expr || (jule::Str("<=", 2)) == _match_expr)) { goto _case_end_5149002544; }
		_case_begin_5149002544:;
		{
			return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("bool", 4)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_130c83140_Const>()));
		}
		goto _match_end_5149000944;
		_case_end_5149002544:;
		_match_end_5149000944:;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("+", 1)) == _match_expr || (jule::Str("-", 1)) == _match_expr || (jule::Str("*", 1)) == _match_expr || (jule::Str("/", 1)) == _match_expr || (jule::Str("&", 1)) == _match_expr || (jule::Str("|", 1)) == _match_expr || (jule::Str("^", 1)) == _match_expr)) { goto _case_end_5149010576; }
		_case_begin_5149010576:;
		{
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_5149005360;
		_case_end_5149010576:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_5149010800; }
		_case_begin_5149010800:;
		{
			(*this)._method_mod();
			(*this)._method_set_type_to_greater();
			return (*this)._field_l;
		}
		goto _match_end_5149005360;
		_case_end_5149010800:;
		if (!((jule::Str("<<", 2)) == _match_expr || (jule::Str(">>", 2)) == _match_expr)) { goto _case_end_5149011120; }
		_case_begin_5149011120:;
		{
			if ((!(_13064b610_is_ok_for_shifting((*this)._field_r)))) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("bitshift_must_unsigned", 22),jule::Slice<jule::Any>({}));
				return jule::new_ref<_13064b610_Data>();
			}
			return (*this)._field_l;
		}
		goto _match_end_5149005360;
		_case_end_5149011120:;
		_case_begin_5149007120:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_int", 20),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind)}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5149005360;
		_case_end_5149007120:;
		_match_end_5149005360:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_BinopSolver::_method_eval_prim(void) {
	jule::Ref<_1304dc9b0_Prim> _366313_prim = (*this)._field_l->_field_kind->_method_prim();
	{
		if (!((_366313_prim->_method_is_any()))) { goto _case_end_5149024816; }
		_case_begin_5149024816:;
		{
			return (*this)._method_eval_any();
		}
		goto _match_end_5149024496;
		_case_end_5149024816:;
		if (!((_366313_prim->_method_is_bool()))) { goto _case_end_5149024928; }
		_case_begin_5149024928:;
		{
			return (*this)._method_eval_bool();
		}
		goto _match_end_5149024496;
		_case_end_5149024928:;
		if (!((_366313_prim->_method_is_str()))) { goto _case_end_5149025040; }
		_case_begin_5149025040:;
		{
			return (*this)._method_eval_str();
		}
		goto _match_end_5149024496;
		_case_end_5149025040:;
		_match_end_5149024496:;
	}
	jule::Ref<_1304dc9b0_Prim> _367013_rprim = (*this)._field_r->_field_kind->_method_prim();
	if ((!(jule::real(_367013_rprim)))) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any(_366313_prim->_method_to_str()),jule::Any((*this)._field_r->_field_kind->_method_to_str())}));
		return jule::new_ref<_13064b610_Data>();
	}
	jule::Str _367613_lk = _366313_prim->_method_to_str();
	{
		if (!((_130d7f700_is_float(_367613_lk)))) { goto _case_end_5149041456; }
		_case_begin_5149041456:;
		{
			return (*this)._method_eval_float();
		}
		goto _match_end_5149039728;
		_case_end_5149041456:;
		if (!((_130d7f700_is_unsig_int(_367613_lk)))) { goto _case_end_5149041568; }
		_case_begin_5149041568:;
		{
			return (*this)._method_eval_unsig_int();
		}
		goto _match_end_5149039728;
		_case_end_5149041568:;
		if (!((_130d7f700_is_sig_int(_367613_lk)))) { goto _case_end_5149041200; }
		_case_begin_5149041200:;
		{
			return (*this)._method_eval_sig_int();
		}
		goto _match_end_5149039728;
		_case_end_5149041200:;
		_case_begin_5149039888:;
		{
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5149039728;
		_case_end_5149039888:;
		_match_end_5149039728:;
	}
}



inline jule::Ref<_13064b610_Data> _13064b610_BinopSolver::_method_eval(void) {
	{
		if (!(((*this)._field_l->_field_kind->_method_is_void()))) { goto _case_end_5149048528; }
		_case_begin_5149048528:;
		{
			(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("operator_not_for_juletype", 25),jule::Slice<jule::Any>({jule::Any((*this)._field_op._field_kind),jule::Any(jule::Str("void", 4))}));
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5149047232;
		_case_end_5149048528:;
		if (!(((*this)._field_l->_field_kind->_method_is_nil()))) { goto _case_end_5149048752; }
		_case_begin_5149048752:;
		{
			return (*this)._method_eval_nil();
		}
		goto _match_end_5149047232;
		_case_end_5149048752:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_enm())))) { goto _case_end_5149048864; }
		_case_begin_5149048864:;
		{
			return (*this)._method_eval_enum();
		}
		goto _match_end_5149047232;
		_case_end_5149048864:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_ptr())))) { goto _case_end_5149047744; }
		_case_begin_5149047744:;
		{
			return (*this)._method_eval_ptr();
		}
		goto _match_end_5149047232;
		_case_end_5149047744:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_arr())))) { goto _case_end_5149047856; }
		_case_begin_5149047856:;
		{
			return (*this)._method_eval_arr();
		}
		goto _match_end_5149047232;
		_case_end_5149047856:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_slc())))) { goto _case_end_5149047968; }
		_case_begin_5149047968:;
		{
			return (*this)._method_eval_slc();
		}
		goto _match_end_5149047232;
		_case_end_5149047968:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_fnc())))) { goto _case_end_5149049328; }
		_case_begin_5149049328:;
		{
			return (*this)._method_eval_fn();
		}
		goto _match_end_5149047232;
		_case_end_5149049328:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_trt()) || jule::real((*this)._field_r->_field_kind->_method_trt())))) { goto _case_end_5149049440; }
		_case_begin_5149049440:;
		{
			if (jule::real((*this)._field_r->_field_kind->_method_trt())) {
				std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple((*this)._field_r,(*this)._field_l);
			}
			return (*this)._method_eval_trait();
		}
		goto _match_end_5149047232;
		_case_end_5149049440:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_strct())))) { goto _case_end_5149049552; }
		_case_begin_5149049552:;
		{
			return (*this)._method_eval_struct();
		}
		goto _match_end_5149047232;
		_case_end_5149049552:;
		if (!((jule::real((*this)._field_l->_field_kind->_method_prim())))) { goto _case_end_5149049664; }
		_case_begin_5149049664:;
		{
			return (*this)._method_eval_prim();
		}
		goto _match_end_5149047232;
		_case_end_5149049664:;
		_case_begin_5149047440:;
		{
			return jule::new_ref<_13064b610_Data>();
		}
		goto _match_end_5149047232;
		_case_end_5149047440:;
		_match_end_5149047232:;
	}
}



inline void _13064b610_BinopSolver::_method_assign_shift(jule::Ref<_13064b610_Data> _372631_d,jule::F64 _372641_r) {
	{
		if (!((_372641_r <= 6LL))) { goto _case_end_5149086224; }
		_case_begin_5149086224:;
		{
			_372631_d->_field_kind->_method_prim()->_field_kind=jule::Str("i8", 2);
			_372631_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_372631_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_5149083600;
		_case_end_5149086224:;
		if (!((_372641_r <= 7LL))) { goto _case_end_5149084272; }
		_case_begin_5149084272:;
		{
			_372631_d->_field_kind->_method_prim()->_field_kind=jule::Str("u8", 2);
			_372631_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_372631_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_5149083600;
		_case_end_5149084272:;
		if (!((_372641_r <= 14LL))) { goto _case_end_5149084384; }
		_case_begin_5149084384:;
		{
			_372631_d->_field_kind->_method_prim()->_field_kind=jule::Str("i16", 3);
			_372631_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_372631_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_5149083600;
		_case_end_5149084384:;
		if (!((_372641_r <= 15LL))) { goto _case_end_5149088848; }
		_case_begin_5149088848:;
		{
			_372631_d->_field_kind->_method_prim()->_field_kind=jule::Str("u16", 3);
			_372631_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_372631_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_5149083600;
		_case_end_5149088848:;
		if (!((_372641_r <= 30LL))) { goto _case_end_5149088960; }
		_case_begin_5149088960:;
		{
			_372631_d->_field_kind->_method_prim()->_field_kind=jule::Str("i32", 3);
			_372631_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_372631_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_5149083600;
		_case_end_5149088960:;
		if (!((_372641_r <= 31LL))) { goto _case_end_5149089072; }
		_case_begin_5149089072:;
		{
			_372631_d->_field_kind->_method_prim()->_field_kind=jule::Str("u32", 3);
			_372631_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_372631_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_5149083600;
		_case_end_5149089072:;
		if (!((_372641_r <= 62LL))) { goto _case_end_5149089184; }
		_case_begin_5149089184:;
		{
			_372631_d->_field_kind->_method_prim()->_field_kind=jule::Str("i64", 3);
			_372631_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_372631_d->_field_constant->_method_as_i64()));
		}
		goto _match_end_5149083600;
		_case_end_5149089184:;
		if (!((_372641_r <= 63LL))) { goto _case_end_5149089296; }
		_case_begin_5149089296:;
		{
			_372631_d->_field_kind->_method_prim()->_field_kind=jule::Str("u64", 3);
			_372631_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_372631_d->_field_constant->_method_as_u64()));
		}
		goto _match_end_5149083600;
		_case_end_5149089296:;
		if (!((_372641_r <= 127LL))) { goto _case_end_5149089408; }
		_case_begin_5149089408:;
		{
			_372631_d->_field_kind->_method_prim()->_field_kind=jule::Str("f32", 3);
			_372631_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_372631_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_5149083600;
		_case_end_5149089408:;
		_case_begin_5149083808:;
		{
			_372631_d->_field_kind->_method_prim()->_field_kind=jule::Str("f64", 3);
			_372631_d->_field_constant->_method_set_f64(static_cast<jule::F64>(_372631_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_5149083600;
		_case_end_5149083808:;
		_match_end_5149083600:;
	}
}



inline void _13064b610_BinopSolver::_method_solve_const(jule::Ref<_13064b610_Data> _377034_d) {
	{
		if (!(((!(jule::real(_377034_d)))))) { goto _case_end_5149128176; }
		_case_begin_5149128176:;
		{
			return;
		}
		goto _match_end_5149127920;
		_case_end_5149128176:;
		if (!(((!((*this)._field_l->_method_is_const()))) || ((!((*this)._field_r->_method_is_const()))))) { goto _case_end_5149128288; }
		_case_begin_5149128288:;
		{
			jule::drop(_377034_d->_field_constant);
			return;
		}
		goto _match_end_5149127920;
		_case_end_5149128288:;
		_match_end_5149127920:;
	}
	{
		auto &_match_expr{ (*this)._field_op._field_kind };
		if (!((jule::Str("==", 2)) == _match_expr)) { goto _case_end_5149131776; }
		_case_begin_5149131776:;
		{
			_377034_d->_field_constant=_130c83140_new_bool((*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant));
		}
		goto _match_end_5149132768;
		_case_end_5149131776:;
		if (!((jule::Str("!=", 2)) == _match_expr)) { goto _case_end_5149131888; }
		_case_begin_5149131888:;
		{
			_377034_d->_field_constant=_130c83140_new_bool((!((*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant))));
		}
		goto _match_end_5149132768;
		_case_end_5149131888:;
		if (!((jule::Str("::", 2)) == _match_expr)) { goto _case_end_5149133936; }
		_case_begin_5149133936:;
		{
			_377034_d->_field_constant=_130c83140_new_bool((*this)._field_l->_field_constant->_method_or((*this)._field_r->_field_constant));
		}
		goto _match_end_5149132768;
		_case_end_5149133936:;
		if (!((jule::Str("&&", 2)) == _match_expr)) { goto _case_end_5149134048; }
		_case_begin_5149134048:;
		{
			_377034_d->_field_constant=_130c83140_new_bool((*this)._field_l->_field_constant->_method_and((*this)._field_r->_field_constant));
		}
		goto _match_end_5149132768;
		_case_end_5149134048:;
		if (!((jule::Str(">", 1)) == _match_expr)) { goto _case_end_5149134160; }
		_case_begin_5149134160:;
		{
			_377034_d->_field_constant=_130c83140_new_bool((*this)._field_l->_field_constant->_method_gt((*this)._field_r->_field_constant));
		}
		goto _match_end_5149132768;
		_case_end_5149134160:;
		if (!((jule::Str("<", 1)) == _match_expr)) { goto _case_end_5149134272; }
		_case_begin_5149134272:;
		{
			_377034_d->_field_constant=_130c83140_new_bool((*this)._field_l->_field_constant->_method_lt((*this)._field_r->_field_constant));
		}
		goto _match_end_5149132768;
		_case_end_5149134272:;
		if (!((jule::Str(">=", 2)) == _match_expr)) { goto _case_end_5149134384; }
		_case_begin_5149134384:;
		{
			_377034_d->_field_constant=_130c83140_new_bool((*this)._field_l->_field_constant->_method_gt((*this)._field_r->_field_constant) || (*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant));
		}
		goto _match_end_5149132768;
		_case_end_5149134384:;
		if (!((jule::Str("<=", 2)) == _match_expr)) { goto _case_end_5149134496; }
		_case_begin_5149134496:;
		{
			_377034_d->_field_constant=_130c83140_new_bool((*this)._field_l->_field_constant->_method_lt((*this)._field_r->_field_constant) || (*this)._field_l->_field_constant->_method_eqs((*this)._field_r->_field_constant));
		}
		goto _match_end_5149132768;
		_case_end_5149134496:;
		if (!((jule::Str("+", 1)) == _match_expr)) { goto _case_end_5149134608; }
		_case_begin_5149134608:;
		{
			(*this)._field_l->_field_constant->_method_add((*this)._field_r->_field_constant);
			_377034_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_5149132768;
		_case_end_5149134608:;
		if (!((jule::Str("-", 1)) == _match_expr)) { goto _case_end_5149134720; }
		_case_begin_5149134720:;
		{
			(*this)._field_l->_field_constant->_method_sub((*this)._field_r->_field_constant);
			_377034_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_5149132768;
		_case_end_5149134720:;
		if (!((jule::Str("*", 1)) == _match_expr)) { goto _case_end_5149134832; }
		_case_begin_5149134832:;
		{
			(*this)._field_l->_field_constant->_method_mul((*this)._field_r->_field_constant);
			_377034_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_5149132768;
		_case_end_5149134832:;
		if (!((jule::Str("/", 1)) == _match_expr)) { goto _case_end_5149134944; }
		_case_begin_5149134944:;
		{
			jule::Bool _382017_ok = (*this)._field_l->_field_constant->_method_div((*this)._field_r->_field_constant);
			if ((!(_382017_ok)) && ((*this)._field_r->_field_constant->_method_as_f64() == 0LL)) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("divide_by_zero", 14),jule::Slice<jule::Any>({}));
			}
			_377034_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_5149132768;
		_case_end_5149134944:;
		if (!((jule::Str("%", 1)) == _match_expr)) { goto _case_end_5149135056; }
		_case_begin_5149135056:;
		{
			jule::Bool _382717_ok = (*this)._field_l->_field_constant->_method_mod((*this)._field_r->_field_constant);
			if ((!(_382717_ok)) && ((*this)._field_r->_field_constant->_method_as_f64() == 0LL)) {
				(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("divide_by_zero", 14),jule::Slice<jule::Any>({}));
			}
			_377034_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_5149132768;
		_case_end_5149135056:;
		if (!((jule::Str("|", 1)) == _match_expr)) { goto _case_end_5149135168; }
		_case_begin_5149135168:;
		{
			(*this)._field_l->_field_constant->_method_bitwise_or((*this)._field_r->_field_constant);
			_377034_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_5149132768;
		_case_end_5149135168:;
		if (!((jule::Str("&", 1)) == _match_expr)) { goto _case_end_5149135296; }
		_case_begin_5149135296:;
		{
			(*this)._field_l->_field_constant->_method_bitwise_and((*this)._field_r->_field_constant);
			_377034_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_5149132768;
		_case_end_5149135296:;
		if (!((jule::Str("^", 1)) == _match_expr)) { goto _case_end_5149135424; }
		_case_begin_5149135424:;
		{
			(*this)._field_l->_field_constant->_method_xor((*this)._field_r->_field_constant);
			_377034_d->_field_constant=(*this)._field_l->_field_constant;
		}
		goto _match_end_5149132768;
		_case_end_5149135424:;
		if (!((jule::Str("<<", 2)) == _match_expr)) { goto _case_end_5149135552; }
		_case_begin_5149135552:;
		{
			_377034_d->_field_constant=(*this)._field_l->_field_constant;
			(*this)._field_l->_field_constant->_method_lshift((*this)._field_r->_field_constant);
			(*this)._method_assign_shift(_377034_d,static_cast<jule::F64>((*this)._field_r->_field_constant->_method_as_f64()));
		}
		goto _match_end_5149132768;
		_case_end_5149135552:;
		if (!((jule::Str(">>", 2)) == _match_expr)) { goto _case_end_5149135680; }
		_case_begin_5149135680:;
		{
			_377034_d->_field_constant=(*this)._field_l->_field_constant;
			(*this)._field_l->_field_constant->_method_rshift((*this)._field_r->_field_constant);
			(*this)._method_assign_shift(_377034_d,static_cast<jule::F64>((*this)._field_r->_field_constant->_method_as_f64()));
		}
		goto _match_end_5149132768;
		_case_end_5149135680:;
		_match_end_5149132768:;
	}
	_377034_d->_field_model=jule::Any(_377034_d->_field_constant);
}



inline void _13064b610_BinopSolver::_method_post_const(jule::Ref<_13064b610_Data> _385929_d) {
	if ((!(jule::real(_385929_d)))) {
		return;
	}
	if ((!(_385929_d->_method_is_const()))) {
		return;
	}
	_13064b610_normalize_bitsize(_385929_d);
}



inline void _13064b610_BinopSolver::_method_prepare_data(jule::Ref<_13064b610_Data> _387031_d) {
	if (jule::real(_387031_d) && jule::real(_387031_d->_field_kind->_method_ref())) {
		_387031_d->_field_kind=_387031_d->_field_kind->_method_ref()->_field_elem;
	}
}



inline void _13064b610_BinopSolver::_method_prepare_eval(void) {
	(*this)._method_prepare_data((*this)._field_r);
	(*this)._method_prepare_data((*this)._field_l);
}



inline void _13064b610_BinopSolver::_method_check_data(jule::Ref<_13064b610_Data> _388133_d) {
	jule::Ref<_127ed52e0_FnIns> _388213_f = _388133_d->_field_kind->_method_fnc();
	if ((jule::real(_388213_f) && jule::real(_388213_f->_field_decl)) && _388213_f->_field_decl->_method_is_method()) {
		(*this)._field_e->_method_push_err((*this)._field_op,jule::Str("invalid_expr_for_binop", 22),jule::Slice<jule::Any>({}));
	}
}



inline void _13064b610_BinopSolver::_method_check_datas(void) {
	(*this)._method_check_data((*this)._field_l);
	(*this)._method_check_data((*this)._field_r);
}



inline jule::Ref<_13064b610_Data> _13064b610_BinopSolver::_method_solve_explicit(jule::Ref<_13064b610_Data> _389337_l,jule::Ref<_13064b610_Data> _389351_r) {
	std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple(_389337_l,_389351_r);
	(*this)._method_prepare_eval();
	(*this)._method_check_datas();
	jule::Ref<_13064b610_Data> _389917_d = (*this)._method_eval();
	std::tie((*this)._field_l,(*this)._field_r) = std::make_tuple(_389337_l,_389351_r);
	(*this)._method_solve_const(_389917_d);
	(*this)._method_post_const(_389917_d);
	if (jule::real(_389917_d) && (!(_389917_d->_method_is_const()))) {
		_389917_d->_field_model=jule::Any(jule::new_struct<_1279cf930_BinopExprModel>(new( std::nothrow ) _1279cf930_BinopExprModel(_389337_l->_field_model,_389351_r->_field_model,(*this)._field_op._field_kind)));
	}
	return _389917_d;
}



inline jule::Ref<_13064b610_Data> _13064b610_BinopSolver::_method_solve(jule::Ref<_1275d7180_BinopExpr> _392228_op) {
	jule::Ref<_13064b610_Data> _392317_l = (*this)._field_e->_method_eval_expr_kind(_392228_op->_field_left);
	if ((!(jule::real(_392317_l))) || (!(jule::real(_392317_l->_field_kind)))) {
		return jule::new_ref<_13064b610_Data>();
	}
	jule::Ref<_13064b610_Data> _392817_r = (*this)._field_e->_method_eval_expr_kind(_392228_op->_field_right);
	if ((!(jule::real(_392817_r))) || (!(jule::real(_392817_r->_field_kind)))) {
		return jule::new_ref<_13064b610_Data>();
	}
	(*this)._field_op=_392228_op->_field_op;
	jule::Ref<_13064b610_Data> _393517_d = (*this)._method_solve_explicit(_392317_l,_392817_r);
	if ((jule::real(_393517_d) && _392317_l->_field_is_rune) && _392817_r->_field_is_rune) {
		_393517_d->_field_is_rune=true;
	}
	return _393517_d;
}







std::ostream &operator<<(std::ostream &_Stream, const _13064b610_BinopSolver &_Src) {
	_Stream << "BinopSolver{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "op:" << _Src._field_op;
	_Stream << "}";
	return _Stream;
}



inline void _13032cf90_RetTypeChecker::_method_prepare_types(void) {
	(*this)._field_types=_13032cf90_get_fn_result_types((*this)._field_f);
}



inline void _13032cf90_RetTypeChecker::_method_prepare_exprs(jule::Ref<_13064b610_Data> _119336_d) {
	if ((!(jule::real(_119336_d)))) {
		return;
	}
	if ((!(jule::real(_119336_d->_field_kind->_method_tup())))) {
		(*this)._field_exprs=append((*this)._field_exprs,jule::Slice<jule::Ref<_13064b610_Data>>({_119336_d}));
		return;
	}
	(*this)._field_exprs=_1300a11b0_get_datas_from_tuple_data(_119336_d);
}



inline void _13032cf90_RetTypeChecker::_method_ret_vars(void) {
	if ((*this)._field_f->_field_decl->_method_is_void()) {
		return;
	}
	(*this)._field_vars=jule::Slice<jule::Ref<_1303533b0_Var>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>((*this)._field_f->_field_decl->_field_result->_field_idents.len())));
	jule::Ref<_1300a11b0_ScopeChecker> _121217_root_scope = (*this)._field_sc->_method_get_root();
	jule::Int _121417_j = 0LL;
	{
		auto &__julec_range_expr = (*this)._field_f->_field_decl->_field_result->_field_idents;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _13032cf90_i = 0;
			_127941de0_Token _13032cf90_ident = *__julec_range_begin;
			_iter_begin_5145699184:;
			{
				if ((!(_127941de0_is_ignore_ident(_13032cf90_ident._field_kind)))) {
					(*this)._field_vars[static_cast<jule::Int>(_13032cf90_i)]=_121217_root_scope->_field_table->_field_vars._method_at(_121417_j);
					(_121417_j)++;
				} else {
					(*this)._field_vars[static_cast<jule::Int>(_13032cf90_i)]=jule::new_struct<_1303533b0_Var>(new( std::nothrow ) _1303533b0_Var(jule::Ref<_1275d7180_ScopeTree>(),_127941de0_Token(),jule::Str("_", 1),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_1304dc9b0_TypeSymbol>(new( std::nothrow ) _1304dc9b0_TypeSymbol(jule::Ref<_1275d7180_TypeDecl>(),(*this)._field_types[static_cast<jule::Int>(_13032cf90_i)])),jule::Ref<_13064b610_Value>(),jule::Ref<_127ff3480_ReferenceStack>(),jule::Slice<jule::Ref<_1303533b0_Var>>()));
				}
			}
			_iter_next_5145699184:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_13032cf90_i; _13032cf90_ident = *__julec_range_begin; goto _iter_begin_5145699184; }
			_iter_end_5145699184:;
		}
	}
	if (_121417_j == 0LL) {
		(*this)._field_vars=nullptr;
	}
}



inline void _13032cf90_RetTypeChecker::_method_check_exprs(void) {
	{
		auto &__julec_range_expr = (*this)._field_exprs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _13032cf90_i = 0;
			jule::Ref<_13064b610_Data> _13032cf90_d = *__julec_range_begin;
			_iter_begin_5145711120:;
			{
				if (_13032cf90_i >= (*this)._field_types.len()) {
					goto _iter_end_5145711120;
				}
				jule::Ref<_1304dc9b0_TypeKind> _123921_t = (*this)._field_types[static_cast<jule::Int>(_13032cf90_i)];
				if ((!(_13032cf90_d->_field_mutable)) && _1304dc9b0_is_mut(_13032cf90_d->_field_kind)) {
					(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("ret_with_mut_typed_non_mut", 26),jule::Slice<jule::Any>({}));
					return;
				}
				_13032cf90_AssignTypeChecker _124521_ac = _13032cf90_AssignTypeChecker((*this)._field_sc->_field_s,_123921_t,_13032cf90_d,(*this)._field_error_token,jule::Bool());
				_124521_ac._method_check();
			}
			_iter_next_5145711120:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_13032cf90_i; _13032cf90_d = *__julec_range_begin; goto _iter_begin_5145711120; }
			_iter_end_5145711120:;
		}
	}
}



inline jule::Bool _13032cf90_RetTypeChecker::_method_check(jule::Ref<_13064b610_Data> _125528_d) {
	(*this)._method_prepare_types();
	(*this)._method_prepare_exprs(_125528_d);
	(*this)._method_ret_vars();
	jule::I64 _126013_n = (*this)._field_exprs.len();
	if ((_126013_n == 0LL) && (!((*this)._field_f->_field_decl->_method_is_void()))) {
		if ((!((*this)._field_f->_field_decl->_method_any_var()))) {
			(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("require_ret_expr", 16),jule::Slice<jule::Any>({}));
			return false;
		}
		return true;
	}
	if ((_126013_n > 0LL) && (*this)._field_f->_field_decl->_method_is_void()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("void_function_ret_expr", 22),jule::Slice<jule::Any>({}));
		return false;
	}
	if (_126013_n > (*this)._field_types.len()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("overflow_ret", 12),jule::Slice<jule::Any>({}));
	} else if (_126013_n < (*this)._field_types.len()) {
		(*this)._field_sc->_field_s->_method_push_err((*this)._field_error_token,jule::Str("missing_multi_ret", 17),jule::Slice<jule::Any>({}));
	}
	(*this)._method_check_exprs();
	return true;
}







std::ostream &operator<<(std::ostream &_Stream, const _13032cf90_RetTypeChecker &_Src) {
	_Stream << "RetTypeChecker{";
	_Stream << "sc:" << _Src._field_sc << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "types:" << _Src._field_types << ", ";
	_Stream << "exprs:" << _Src._field_exprs << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "error_token:" << _Src._field_error_token;
	_Stream << "}";
	return _Stream;
}



inline void _13032cf90_FnCallArgChecker::_method_push_err_token(_127941de0_Token _68833_token,jule::Str _68847_key,jule::Slice<jule::Any> _68857_args) {
	(*this)._field_e->_field_s->_method_push_err(_68833_token,_68847_key,_68857_args);
}



inline void _13032cf90_FnCallArgChecker::_method_push_err(jule::Str _69227_key,jule::Slice<jule::Any> _69237_args) {
	(*this)._method_push_err_token((*this)._field_error_token,_69227_key,_69237_args);
}



inline jule::Slice<jule::Ref<_127ed52e0_ParamIns>> _13032cf90_FnCallArgChecker::_method_get_params(void) {
	if ((((*this)._field_f->_field_params.len() > 0LL) && jule::real((*this)._field_f->_field_params[static_cast<jule::Int>(0LL)]->_field_decl)) && (*this)._field_f->_field_params[static_cast<jule::Int>(0LL)]->_field_decl->_method_is_self()) {
		return (*this)._field_f->_field_params.slice(static_cast<jule::Int>(1LL));
	}
	return (*this)._field_f->_field_params;
}



inline jule::Bool _13032cf90_FnCallArgChecker::_method_check_counts(jule::Slice<jule::Ref<_127ed52e0_ParamIns>> _70331_params) {
	jule::Bool _70354_ok = jule::Bool();
	jule::I64 _70417_n = _70331_params.len();
	if ((_70417_n > 0LL) && _70331_params[static_cast<jule::Int>(0LL)]->_field_decl->_method_is_self()) {
		(_70417_n)--;
	}
	jule::I64 _70917_diff = _70417_n - (*this)._field_args.len();
	{
		if (!((_70917_diff == 0LL))) { goto _case_end_5145295264; }
		_case_begin_5145295264:;
		{
			_70354_ok = true;
			return _70354_ok;
		}
		goto _match_end_5145294848;
		_case_end_5145295264:;
		if (!(((_70417_n > 0LL) && _70331_params[static_cast<jule::Int>(_70417_n - 1LL)]->_field_decl->_field_variadic))) { goto _case_end_5145295376; }
		_case_begin_5145295376:;
		{
			_70354_ok = true;
			return _70354_ok;
		}
		goto _match_end_5145294848;
		_case_end_5145295376:;
		if (!(((_70917_diff < 0LL) || (_70917_diff > _70331_params.len())))) { goto _case_end_5145295488; }
		_case_begin_5145295488:;
		{
			(*this)._method_push_err(jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
			_70354_ok = false;
			return _70354_ok;
		}
		goto _match_end_5145294848;
		_case_end_5145295488:;
		_match_end_5145294848:;
	}
	jule::Str _72217_idents = jule::Str("", 0);
	_iter_begin_5145299840:;
	if (!(_70917_diff > 0LL)) { goto _iter_end_5145299840; }
	{
		_72217_idents+=jule::Str(", ", 2) + _70331_params[static_cast<jule::Int>(_70417_n - _70917_diff)]->_field_decl->_field_ident;
	}
	_iter_next_5145299840:;
	(_70917_diff)--;
	goto _iter_begin_5145299840;
	_iter_end_5145299840:;
	_72217_idents=_72217_idents.slice(static_cast<jule::Int>(2LL));
	(*this)._method_push_err(jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(_72217_idents)}));
	_70354_ok = false;
	return _70354_ok;
}



inline jule::Bool _13032cf90_FnCallArgChecker::_method_check_arg(jule::Ref<_127ed52e0_ParamIns> _73232_p,jule::Ref<_13064b610_Data> _73250_arg,_127941de0_Token _73266_error_token) {
	jule::Bool _73288_ok = jule::Bool();
	if ((*this)._field_dynamic_annotation) {
		_13032cf90_DynamicTypeAnnotation _73421_dta = _13032cf90_DynamicTypeAnnotation((*this)._field_e,(*this)._field_f,_73232_p,_73250_arg,_73266_error_token,nullptr);
		_73288_ok=_73421_dta._method_annotate();
		if ((!(_73288_ok))) {
			(*this)._method_push_err_token(_73266_error_token,jule::Str("dynamic_type_annotation_failed", 30),jule::Slice<jule::Any>({}));
			_73288_ok = false;
			return _73288_ok;
		}
	}
	(*this)._field_e->_field_s->_method_check_validity_for_init_expr(_73232_p->_field_decl->_field_mutable,_73232_p->_field_decl->_field_reference,_73232_p->_field_kind,_73250_arg,_73266_error_token);
	(*this)._field_e->_field_s->_method_check_assign_type(_73232_p->_field_kind,_73250_arg,_73266_error_token,false);
	_73288_ok = true;
	return _73288_ok;
}



inline jule::Bool _13032cf90_FnCallArgChecker::_method_push(jule::Ref<_127ed52e0_ParamIns> _75427_p,jule::Ref<_1275d7180_Expr> _75445_arg) {
	jule::Bool _75459_ok = jule::Bool();
	jule::Ref<_13064b610_Data> _75517_d = jule::new_ref<_13064b610_Data>();
	if ((!((*this)._field_dynamic_annotation)) && (!(_75427_p->_field_decl->_field_variadic))) {
		jule::Ref<_1304dc9b0_TypeKind> _75721_old = (*this)._field_e->_field_prefix;
		(*this)._field_e->_field_prefix=_75427_p->_field_kind;
		_75517_d=(*this)._field_e->_method_eval_expr_kind(_75445_arg->_field_kind);
		(*this)._field_e->_field_prefix=_75721_old;
	} else {
		jule::Ref<_1304dc9b0_TypeKind> _76221_old = (*this)._field_e->_field_prefix;
		jule::drop((*this)._field_e->_field_prefix);
		_75517_d=(*this)._field_e->_method_eval_expr_kind(_75445_arg->_field_kind);
		(*this)._field_e->_field_prefix=_76221_old;
	}
	if ((!(jule::real(_75517_d)))) {
		_75459_ok = false;
		return _75459_ok;
	}
	(*this)._field_arg_models=append((*this)._field_arg_models,jule::Slice<jule::Any>({_75517_d->_field_model}));
	_75459_ok = (*this)._method_check_arg(_75427_p,_75517_d,_75445_arg->_field_token);
	return _75459_ok;
}



inline jule::Bool _13032cf90_FnCallArgChecker::_method_push_variadic(jule::Ref<_127ed52e0_ParamIns> _77436_p,jule::Int _77454_i) {
	jule::Bool _77464_ok = jule::Bool();
	_77464_ok=true;
	jule::Bool _77617_variadiced = false;
	jule::Bool _77713_more = (_77454_i + 1LL) < (*this)._field_args.len();
	jule::Ref<_1279cf930_SliceExprModel> _77817_model = jule::new_struct<_1279cf930_SliceExprModel>(new( std::nothrow ) _1279cf930_SliceExprModel(_77436_p->_field_kind,jule::Slice<jule::Any>()));
	jule::Ref<_1304dc9b0_TypeKind> _78217_old = (*this)._field_e->_field_prefix;
	_iter_begin_5145356240:;
	if (!(_77454_i < (*this)._field_args.len())) { goto _iter_end_5145356240; }
	{
		jule::Ref<_1275d7180_Expr> _78421_arg = (*this)._field_args[static_cast<jule::Int>(_77454_i)];
		{
			auto &_match_expr{ _78421_arg->_field_kind };
			if (!(_match_expr.type_is<jule::Ref<_1275d7180_VariadicExpr>>())) { goto _case_end_5145382000; }
			_case_begin_5145382000:;
			{
				(*this)._field_e->_field_prefix=jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_1304dc9b0_Slc>(new( std::nothrow ) _1304dc9b0_Slc(_77436_p->_field_kind))));
			}
			goto _match_end_5145379440;
			_case_end_5145382000:;
			_case_begin_5145380768:;
			{
				(*this)._field_e->_field_prefix=_77436_p->_field_kind;
			}
			goto _match_end_5145379440;
			_case_end_5145380768:;
			_match_end_5145379440:;
		}
		jule::Ref<_13064b610_Data> _79421_d = (*this)._field_e->_method_eval_expr_kind(_78421_arg->_field_kind);
		if ((!(jule::real(_79421_d)))) {
			_77464_ok=false;
			goto _iter_next_5145356240;
		}
		if (_79421_d->_field_variadiced) {
			_77617_variadiced=true;
			_79421_d->_field_variadiced=false;
			{
				auto &_match_expr{ _79421_d->_field_model };
				if (!(_match_expr.type_is<jule::Ref<_1279cf930_SliceExprModel>>())) { goto _case_end_5145392144; }
				_case_begin_5145392144:;
				{
					_77817_model=_79421_d->_field_model.operator jule::Ref<_1279cf930_SliceExprModel>();
					_77817_model->_field_elem_kind=_77436_p->_field_kind;
				}
				goto _match_end_5145389888;
				_case_end_5145392144:;
				_case_begin_5145390688:;
				{
					jule::drop(_77817_model);
					(*this)._field_arg_models=append((*this)._field_arg_models,jule::Slice<jule::Any>({_79421_d->_field_model}));
				}
				goto _match_end_5145389888;
				_case_end_5145390688:;
				_match_end_5145389888:;
			}
		} else {
			_77817_model->_field_elems=append(_77817_model->_field_elems,jule::Slice<jule::Any>({_79421_d->_field_model}));
		}
		_77464_ok=(*this)._method_check_arg(_77436_p,_79421_d,_78421_arg->_field_token) && _77464_ok;
	}
	_iter_next_5145356240:;
	(_77454_i)++;
	goto _iter_begin_5145356240;
	_iter_end_5145356240:;
	(*this)._field_e->_field_prefix=_78217_old;
	if (_77617_variadiced && _77713_more) {
		(*this)._method_push_err(jule::Str("more_args_with_variadiced", 25),jule::Slice<jule::Any>({}));
	}
	if (jule::real(_77817_model)) {
		(*this)._field_arg_models=append((*this)._field_arg_models,jule::Slice<jule::Any>({jule::Any(_77817_model)}));
	}
	_77464_ok = _77464_ok;
	return _77464_ok;
}



inline jule::Bool _13032cf90_FnCallArgChecker::_method_check_args(jule::Slice<jule::Ref<_127ed52e0_ParamIns>> _83033_params) {
	jule::Bool _83056_ok = jule::Bool();
	_83056_ok=true;
	jule::Int _83217_i = 0LL;
	_julec_label_iter:;
	_iter_begin_5145415536:;
	if (!(_83217_i < _83033_params.len())) { goto _iter_end_5145415536; }
	{
		jule::Ref<_127ed52e0_ParamIns> _83521_p = _83033_params[static_cast<jule::Int>(_83217_i)];
		{
			if (!((_83521_p->_field_decl->_method_is_self()))) { goto _case_end_5145420944; }
			goto _match_end_5145418672;
			_case_end_5145420944:;
			if (!((_83521_p->_field_decl->_field_variadic))) { goto _case_end_5145420128; }
			_case_begin_5145420128:;
			{
				_83056_ok=(*this)._method_push_variadic(_83521_p,_83217_i) && _83056_ok;
				goto _iter_end_5145415536;
			}
			goto _match_end_5145418672;
			_case_end_5145420128:;
			if (!(((*this)._field_args.len() <= _83217_i))) { goto _case_end_5145420240; }
			_case_begin_5145420240:;
			{
				_83056_ok=false;
				goto _iter_end_5145415536;
			}
			goto _match_end_5145418672;
			_case_end_5145420240:;
			_case_begin_5145418928:;
			{
				_83056_ok=(*this)._method_push(_83521_p,(*this)._field_args[static_cast<jule::Int>(_83217_i)]) && _83056_ok;
			}
			goto _match_end_5145418672;
			_case_end_5145418928:;
			_match_end_5145418672:;
		}
		(_83217_i)++;
	}
	_iter_next_5145415536:;
	goto _iter_begin_5145415536;
	_iter_end_5145415536:;
	_83056_ok = _83056_ok;
	return _83056_ok;
}



inline jule::Bool _13032cf90_FnCallArgChecker::_method_check_dynamic_type_annotation(void) {
	jule::Bool _85750_ok = jule::Bool();
	{
		auto &__julec_range_expr = (*this)._field_f->_field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1304dc9b0_TypeKind> _13032cf90_g = *__julec_range_begin;
			_iter_begin_5145430576:;
			{
				if ((!(jule::real(_13032cf90_g)))) {
					(*this)._method_push_err(jule::Str("dynamic_type_annotation_failed", 30),jule::Slice<jule::Any>({}));
					_85750_ok = false;
					return _85750_ok;
				}
			}
			_iter_next_5145430576:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13032cf90_g = *__julec_range_begin; goto _iter_begin_5145430576; }
			_iter_end_5145430576:;
		}
	}
	_85750_ok = true;
	return _85750_ok;
}



inline jule::Bool _13032cf90_FnCallArgChecker::_method_check(void) {
	jule::Bool _86726_ok = jule::Bool();
	jule::Slice<jule::Ref<_127ed52e0_ParamIns>> _86817_params = (*this)._method_get_params();
	_86726_ok=(*this)._method_check_counts(_86817_params);
	if ((!(_86726_ok))) {
		_86726_ok = false;
		return _86726_ok;
	}
	_86726_ok=(*this)._method_check_args(_86817_params);
	if (_86726_ok && (*this)._field_dynamic_annotation) {
		_86726_ok=(*this)._method_check_dynamic_type_annotation();
	}
	_86726_ok = _86726_ok;
	return _86726_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _13032cf90_FnCallArgChecker &_Src) {
	_Stream << "FnCallArgChecker{";
	_Stream << "e:" << _Src._field_e << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "f:" << _Src._field_f << ", ";
	_Stream << "dynamic_annotation:" << _Src._field_dynamic_annotation << ", ";
	_Stream << "arg_models:" << _Src._field_arg_models;
	_Stream << "}";
	return _Stream;
}



inline void _13032cf90_AssignTypeChecker::_method_push_err(jule::Str _43127_key,jule::Slice<jule::Any> _43137_args) {
	(*this)._field_s->_method_push_err((*this)._field_error_token,_43127_key,_43137_args);
}



inline jule::Bool _13032cf90_AssignTypeChecker::_method_check_validity(void) {
	jule::Bool _43617_valid = true;
	{
		if (!((jule::real((*this)._field_d->_field_kind->_method_fnc())))) { goto _case_end_5145073264; }
		_case_begin_5145073264:;
		{
			jule::Ref<_127ed52e0_FnIns> _44017_f = (*this)._field_d->_field_kind->_method_fnc();
			{
				if (!((_44017_f->_method_is_builtin()))) { goto _case_end_5145078176; }
				_case_begin_5145078176:;
				{
					(*this)._method_push_err(jule::Str("builtin_as_anonymous_fn", 23),jule::Slice<jule::Any>({}));
					_43617_valid=false;
				}
				goto _match_end_5145077856;
				_case_end_5145078176:;
				if (!((_44017_f->_field_decl->_method_is_method()))) { goto _case_end_5145078288; }
				_case_begin_5145078288:;
				{
					(*this)._method_push_err(jule::Str("method_as_anonymous_fn", 22),jule::Slice<jule::Any>({}));
					_43617_valid=false;
				}
				goto _match_end_5145077856;
				_case_end_5145078288:;
				if (!((_44017_f->_field_decl->_field_generics.len() > 0LL))) { goto _case_end_5145078400; }
				_case_begin_5145078400:;
				{
					(*this)._method_push_err(jule::Str("genericed_fn_as_anonymous_fn", 28),jule::Slice<jule::Any>({}));
					_43617_valid=false;
				}
				goto _match_end_5145077856;
				_case_end_5145078400:;
				_match_end_5145077856:;
			}
		}
		goto _match_end_5145073008;
		_case_end_5145073264:;
		if (!((jule::real((*this)._field_d->_field_kind->_method_tup())))) { goto _case_end_5145073376; }
		_case_begin_5145073376:;
		{
			(*this)._method_push_err(jule::Str("tuple_assign_to_single", 22),jule::Slice<jule::Any>({}));
			_43617_valid=false;
		}
		goto _match_end_5145073008;
		_case_end_5145073376:;
		_match_end_5145073008:;
	}
	return _43617_valid;
}



inline jule::Bool _13032cf90_AssignTypeChecker::_method_check_const(void) {
	if ((((!((*this)._field_d->_method_is_const())) || (!(jule::real((*this)._field_dest->_method_prim())))) || (!(jule::real((*this)._field_d->_field_kind->_method_prim())))) || (!(_130d7f700_is_num((*this)._field_d->_field_kind->_method_prim()->_field_kind)))) {
		return false;
	}
	jule::Str _47213_kind = (*this)._field_dest->_method_prim()->_field_kind;
	{
		if (!((_130d7f700_is_float(_47213_kind)))) { goto _case_end_5145101440; }
		_case_begin_5145101440:;
		{
			if ((!(_13032cf90_float_assignable(_47213_kind,(*this)._field_d)))) {
				(*this)._method_push_err(jule::Str("overflow_limits", 15),jule::Slice<jule::Any>({}));
				return false;
			}
		}
		goto _match_end_5145100192;
		_case_end_5145101440:;
		if (!((_130d7f700_is_int(_47213_kind)))) { goto _case_end_5145100656; }
		_case_begin_5145100656:;
		{
			if ((!(_13032cf90_int_assignable(_47213_kind,(*this)._field_d)))) {
				(*this)._method_push_err(jule::Str("overflow_limits", 15),jule::Slice<jule::Any>({}));
				return false;
			}
		}
		goto _match_end_5145100192;
		_case_end_5145100656:;
		_case_begin_5145100352:;
		{
			return false;
		}
		goto _match_end_5145100192;
		_case_end_5145100352:;
		_match_end_5145100192:;
	}
	return true;
}



inline jule::Bool _13032cf90_AssignTypeChecker::_method_check(void) {
	{
		if (!(((!(jule::real((*this)._field_d)))))) { goto _case_end_5145112400; }
		_case_begin_5145112400:;
		{
			return false;
		}
		goto _match_end_5145110624;
		_case_end_5145112400:;
		if (!(((!((*this)._method_check_validity()))))) { goto _case_end_5145111920; }
		_case_begin_5145111920:;
		{
			return false;
		}
		goto _match_end_5145110624;
		_case_end_5145111920:;
		if (!(((*this)._field_d->_field_variadiced))) { goto _case_end_5145111136; }
		_case_begin_5145111136:;
		{
			(*this)._method_push_err(jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any((*this)._field_dest->_method_to_str()),jule::Any(((*this)._field_d->_field_kind->_method_to_str() + jule::Str("...", 3)))}));
			return false;
		}
		goto _match_end_5145110624;
		_case_end_5145111136:;
		if (!(((*this)._method_check_const()))) { goto _case_end_5145111248; }
		_case_begin_5145111248:;
		{
			return true;
		}
		goto _match_end_5145110624;
		_case_end_5145111248:;
		_case_begin_5145110832:;
		{
			return (*this)._field_s->_method_check_type_compatibility((*this)._field_dest,(*this)._field_d->_field_kind,(*this)._field_error_token,(*this)._field_deref);
		}
		goto _match_end_5145110624;
		_case_end_5145110832:;
		_match_end_5145110624:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _13032cf90_AssignTypeChecker &_Src) {
	_Stream << "AssignTypeChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "d:" << _Src._field_d << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "deref:" << _Src._field_deref;
	_Stream << "}";
	return _Stream;
}



inline void _13032cf90_TypeCompatibilityChecker::_method_push_err(jule::Str _14527_key,jule::Slice<jule::Any> _14537_args) {
	(*this)._field_s->_method_push_err((*this)._field_error_token,_14527_key,_14537_args);
}



inline jule::Bool _13032cf90_TypeCompatibilityChecker::_method_check_trait(void) {
	jule::Bool _14932_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_14932_ok = true;
		return _14932_ok;
	}
	jule::Ref<_130099320_Trait> _15413_trt = (*this)._field_dest->_method_trt();
	jule::Bool _15517_ref = false;
	{
		if (!((jule::real((*this)._field_src->_method_ref())))) { goto _case_end_5144898208; }
		_case_begin_5144898208:;
		{
			_15517_ref=true;
			(*this)._field_src=(*this)._field_src->_method_ref()->_field_elem;
			if (jule::real((*this)._field_src->_method_strct())) {
				_14932_ok = false;
				return _14932_ok;
			}
			goto _case_begin_5144898320;
		}
		goto _match_end_5144896592;
		_case_end_5144898208:;
		if (!((jule::real((*this)._field_src->_method_strct())))) { goto _case_end_5144898320; }
		_case_begin_5144898320:;
		{
			jule::Ref<_127b2e960_StructIns> _16617_s = (*this)._field_src->_method_strct();
			if ((!(_16617_s->_field_decl->_method_is_implements(_15413_trt)))) {
				_14932_ok = false;
				return _14932_ok;
			}
			if (_13032cf90_trait_has_reference_receiver(_15413_trt) && (!(_15517_ref))) {
				(*this)._method_push_err(jule::Str("trait_has_reference_parametered_function", 40),jule::Slice<jule::Any>({}));
				_14932_ok = false;
				return _14932_ok;
			}
			_14932_ok = true;
			return _14932_ok;
		}
		goto _match_end_5144896592;
		_case_end_5144898320:;
		if (!((jule::real((*this)._field_src->_method_trt())))) { goto _case_end_5144897344; }
		_case_begin_5144897344:;
		{
			_14932_ok = _15413_trt == (*this)._field_src->_method_trt();
			return _14932_ok;
		}
		goto _match_end_5144896592;
		_case_end_5144897344:;
		_case_begin_5144897040:;
		{
			_14932_ok = false;
			return _14932_ok;
		}
		goto _match_end_5144896592;
		_case_end_5144897040:;
		_match_end_5144896592:;
	}
}



inline jule::Bool _13032cf90_TypeCompatibilityChecker::_method_check_ref(void) {
	jule::Bool _18630_ok = jule::Bool();
	if ((*this)._field_dest->_method_to_str() == (*this)._field_src->_method_to_str()) {
		_18630_ok = true;
		return _18630_ok;
	} else if ((!((*this)._field_deref))) {
		_18630_ok = false;
		return _18630_ok;
	} else if ((!(jule::real((*this)._field_src->_method_ref())))) {
		(*this)._field_dest=(*this)._field_dest->_method_ref()->_field_elem;
		_18630_ok = (*this)._method_check();
		return _18630_ok;
	}
	(*this)._field_src=(*this)._field_src->_method_ref()->_field_elem;
	_18630_ok = (*this)._method_check();
	return _18630_ok;
}



inline jule::Bool _13032cf90_TypeCompatibilityChecker::_method_check_ptr(void) {
	jule::Bool _20030_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_20030_ok = true;
		return _20030_ok;
	}
	jule::Ref<_1304dc9b0_Ptr> _20517_src = (*this)._field_src->_method_ptr();
	if ((!(jule::real(_20517_src)))) {
		_20030_ok = false;
		return _20030_ok;
	}
	jule::Ref<_1304dc9b0_Ptr> _21017_dest = (*this)._field_dest->_method_ptr();
	if (_21017_dest->_method_is_unsafe()) {
		_20030_ok = true;
		return _20030_ok;
	}
	_13032cf90_TypeCompatibilityChecker _21617_sub = _13032cf90_TypeCompatibilityChecker((*this)._field_s,_21017_dest->_field_elem,_20517_src->_field_elem,(*this)._field_error_token,jule::Bool(),true);
	_20030_ok = _21617_sub._method_check();
	return _20030_ok;
}



inline jule::Bool _13032cf90_TypeCompatibilityChecker::_method_check_slc(void) {
	jule::Bool _22630_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_22630_ok = true;
		return _22630_ok;
	}
	jule::Ref<_1304dc9b0_Slc> _23117_src = (*this)._field_src->_method_slc();
	if ((!(jule::real(_23117_src)))) {
		_22630_ok = false;
		return _22630_ok;
	}
	jule::Ref<_1304dc9b0_Slc> _23517_dest = (*this)._field_dest->_method_slc();
	_13032cf90_TypeCompatibilityChecker _23717_sub = _13032cf90_TypeCompatibilityChecker((*this)._field_s,_23517_dest->_field_elem,_23117_src->_field_elem,(*this)._field_error_token,jule::Bool(),true);
	_22630_ok = _23717_sub._method_check();
	return _22630_ok;
}



inline jule::Bool _13032cf90_TypeCompatibilityChecker::_method_check_arr(void) {
	jule::Bool _24730_ok = jule::Bool();
	jule::Ref<_1304dc9b0_Arr> _24817_src = (*this)._field_src->_method_arr();
	if ((!(jule::real(_24817_src)))) {
		_24730_ok = false;
		return _24730_ok;
	}
	jule::Ref<_1304dc9b0_Arr> _25217_dest = (*this)._field_dest->_method_arr();
	if (_25217_dest->_field_n != _24817_src->_field_n) {
		_24730_ok = false;
		return _24730_ok;
	}
	_13032cf90_TypeCompatibilityChecker _25717_sub = _13032cf90_TypeCompatibilityChecker((*this)._field_s,_25217_dest->_field_elem,_24817_src->_field_elem,(*this)._field_error_token,jule::Bool(),true);
	_24730_ok = _25717_sub._method_check();
	return _24730_ok;
}



inline jule::Bool _13032cf90_TypeCompatibilityChecker::_method_check_map(void) {
	jule::Bool _26730_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_26730_ok = true;
		return _26730_ok;
	}
	jule::Ref<_1304dc9b0_Map> _27217_src = (*this)._field_src->_method_map();
	if ((!(jule::real(_27217_src)))) {
		_26730_ok = false;
		return _26730_ok;
	}
	jule::Ref<_1304dc9b0_Map> _27717_dest = (*this)._field_dest->_method_map();
	_13032cf90_TypeCompatibilityChecker _27917_sub = _13032cf90_TypeCompatibilityChecker((*this)._field_s,_27717_dest->_field_key,_27217_src->_field_key,(*this)._field_error_token,jule::Bool(),jule::Bool());
	if ((!(_27917_sub._method_check()))) {
		_26730_ok = false;
		return _26730_ok;
	}
	_27917_sub._field_src=_27217_src->_field_val;
	_27917_sub._field_dest=_27717_dest->_field_val;
	_26730_ok = _27917_sub._method_check();
	return _26730_ok;
}



inline jule::Bool _13032cf90_TypeCompatibilityChecker::_method_check_struct(void) {
	jule::Bool _29433_ok = jule::Bool();
	jule::Ref<_127b2e960_StructIns> _29517_src = (*this)._field_src->_method_strct();
	if ((!(jule::real(_29517_src)))) {
		_29433_ok = false;
		return _29433_ok;
	}
	jule::Ref<_127b2e960_StructIns> _29917_dest = (*this)._field_dest->_method_strct();
	{
		if (!(((_29917_dest->_field_decl).alloc != (_29517_src->_field_decl).alloc))) { goto _case_end_5144985040; }
		_case_begin_5144985040:;
		{
			_29433_ok = false;
			return _29433_ok;
		}
		goto _match_end_5144984592;
		_case_end_5144985040:;
		if (!((_29917_dest->_field_generics.len() == 0LL))) { goto _case_end_5144985152; }
		_case_begin_5144985152:;
		{
			_29433_ok = true;
			return _29433_ok;
		}
		goto _match_end_5144984592;
		_case_end_5144985152:;
		_match_end_5144984592:;
	}
	{
		auto &__julec_range_expr = _29917_dest->_field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _13032cf90_i = 0;
			jule::Ref<_1304dc9b0_TypeKind> _13032cf90_dg = *__julec_range_begin;
			_iter_begin_5144989136:;
			{
				jule::Ref<_1304dc9b0_TypeKind> _30921_sg = _29517_src->_field_generics[static_cast<jule::Int>(_13032cf90_i)];
				_13032cf90_TypeCompatibilityChecker _31021_sub = _13032cf90_TypeCompatibilityChecker((*this)._field_s,_13032cf90_dg,_30921_sg,(*this)._field_error_token,jule::Bool(),jule::Bool());
				if ((!(_31021_sub._method_check()))) {
					_29433_ok = false;
					return _29433_ok;
				}
			}
			_iter_next_5144989136:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_13032cf90_i; _13032cf90_dg = *__julec_range_begin; goto _iter_begin_5144989136; }
			_iter_end_5144989136:;
		}
	}
	_29433_ok = true;
	return _29433_ok;
}



inline jule::Bool _13032cf90_TypeCompatibilityChecker::_method_check_fn(void) {
	jule::Bool _32329_ok = jule::Bool();
	if ((*this)._field_src->_method_is_nil()) {
		_32329_ok = true;
		return _32329_ok;
	}
	jule::Ref<_127ed52e0_FnIns> _32817_src = (*this)._field_src->_method_fnc();
	if ((!(jule::real(_32817_src)))) {
		_32329_ok = false;
		return _32329_ok;
	}
	jule::Ref<_127ed52e0_FnIns> _33317_dest = (*this)._field_dest->_method_fnc();
	if (jule::real(_32817_src->_field_result) != jule::real(_33317_dest->_field_result)) {
		_32329_ok = false;
		return _32329_ok;
	}
	if (_32817_src->_field_params.len() != _33317_dest->_field_params.len()) {
		_32329_ok = false;
		return _32329_ok;
	}
	{
		auto &__julec_range_expr = _32817_src->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _13032cf90_i = 0;
			_iter_begin_5145007744:;
			{
				jule::Ref<_127ed52e0_ParamIns> _34221_srcp = _32817_src->_field_params[static_cast<jule::Int>(_13032cf90_i)];
				jule::Ref<_127ed52e0_ParamIns> _34321_destp = _33317_dest->_field_params[static_cast<jule::Int>(_13032cf90_i)];
				if (jule::real(_34221_srcp) != jule::real(_34321_destp)) {
					_32329_ok = false;
					return _32329_ok;
				}
				_13032cf90_TypeCompatibilityChecker _34821_sub = _13032cf90_TypeCompatibilityChecker((*this)._field_s,_34321_destp->_field_kind,_34221_srcp->_field_kind,(*this)._field_error_token,jule::Bool(),jule::Bool());
				if ((!(_34821_sub._method_check()))) {
					_32329_ok = false;
					return _32329_ok;
				}
			}
			_iter_next_5145007744:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_13032cf90_i; goto _iter_begin_5145007744; }
			_iter_end_5145007744:;
		}
	}
	if (jule::real(_32817_src->_field_result)) {
		_13032cf90_TypeCompatibilityChecker _36021_sub = _13032cf90_TypeCompatibilityChecker((*this)._field_s,_33317_dest->_field_result,_32817_src->_field_result,(*this)._field_error_token,jule::Bool(),jule::Bool());
		if ((!(_36021_sub._method_check()))) {
			_32329_ok = false;
			return _32329_ok;
		}
	}
	_32329_ok = true;
	return _32329_ok;
}



inline jule::Bool _13032cf90_TypeCompatibilityChecker::_method_check_enum(void) {
	jule::Bool _37431_ok = jule::Bool();
	jule::Ref<_13009ed30_Enum> _37513_r = (*this)._field_src->_method_enm();
	if ((!(jule::real(_37513_r)))) {
		_37431_ok = false;
		return _37431_ok;
	}
	_37431_ok = ((*this)._field_dest->_method_enm()).alloc == (_37513_r).alloc;
	return _37431_ok;
}



inline jule::Bool _13032cf90_TypeCompatibilityChecker::_method_check(void) {
	jule::Bool _38226_ok = jule::Bool();
	if ((!(jule::real((*this)._field_src)))) {
		_38226_ok = false;
		return _38226_ok;
	}
	if (jule::real((*this)._field_dest->_method_ref())) {
		_38226_ok = (*this)._method_check_ref();
		return _38226_ok;
	}
	if (jule::real((*this)._field_src->_method_ref())) {
		(*this)._field_src=(*this)._field_src->_method_ref()->_field_elem;
	}
	{
		if (!((jule::real((*this)._field_dest->_method_trt())))) { goto _case_end_5145041312; }
		_case_begin_5145041312:;
		{
			_38226_ok = (*this)._method_check_trait();
			return _38226_ok;
		}
		goto _match_end_5145040880;
		_case_end_5145041312:;
		if (!((jule::real((*this)._field_dest->_method_ptr())))) { goto _case_end_5145041424; }
		_case_begin_5145041424:;
		{
			_38226_ok = (*this)._method_check_ptr();
			return _38226_ok;
		}
		goto _match_end_5145040880;
		_case_end_5145041424:;
		if (!((jule::real((*this)._field_dest->_method_slc())))) { goto _case_end_5145041536; }
		_case_begin_5145041536:;
		{
			_38226_ok = (*this)._method_check_slc();
			return _38226_ok;
		}
		goto _match_end_5145040880;
		_case_end_5145041536:;
		if (!((jule::real((*this)._field_dest->_method_arr())))) { goto _case_end_5145041648; }
		_case_begin_5145041648:;
		{
			_38226_ok = (*this)._method_check_arr();
			return _38226_ok;
		}
		goto _match_end_5145040880;
		_case_end_5145041648:;
		if (!((jule::real((*this)._field_dest->_method_map())))) { goto _case_end_5145041760; }
		_case_begin_5145041760:;
		{
			_38226_ok = (*this)._method_check_map();
			return _38226_ok;
		}
		goto _match_end_5145040880;
		_case_end_5145041760:;
		if (!((jule::real((*this)._field_dest->_method_enm())))) { goto _case_end_5145041872; }
		_case_begin_5145041872:;
		{
			_38226_ok = (*this)._method_check_enum();
			return _38226_ok;
		}
		goto _match_end_5145040880;
		_case_end_5145041872:;
		if (!((jule::real((*this)._field_dest->_method_strct())))) { goto _case_end_5145041984; }
		_case_begin_5145041984:;
		{
			_38226_ok = (*this)._method_check_struct();
			return _38226_ok;
		}
		goto _match_end_5145040880;
		_case_end_5145041984:;
		if (!((jule::real((*this)._field_dest->_method_fnc())))) { goto _case_end_5145042096; }
		_case_begin_5145042096:;
		{
			_38226_ok = (*this)._method_check_fn();
			return _38226_ok;
		}
		goto _match_end_5145040880;
		_case_end_5145042096:;
		_match_end_5145040880:;
	}
	jule::Str _40613_dest = (*this)._field_dest->_method_to_str();
	if ((!((*this)._field_ignore_any)) || (_40613_dest != jule::Str("any", 3))) {
		if (_130d2a0a0_types_are_compatible(_40613_dest,(*this)._field_src->_method_to_str())) {
			_38226_ok = true;
			return _38226_ok;
		}
	}
	if (_1304dc9b0_is_nil_compatible((*this)._field_dest)) {
		_38226_ok = (*this)._field_src->_method_is_nil();
		return _38226_ok;
	}
	_38226_ok = false;
	return _38226_ok;
}







std::ostream &operator<<(std::ostream &_Stream, const _13032cf90_TypeCompatibilityChecker &_Src) {
	_Stream << "TypeCompatibilityChecker{";
	_Stream << "s:" << _Src._field_s << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "src:" << _Src._field_src << ", ";
	_Stream << "error_token:" << _Src._field_error_token << ", ";
	_Stream << "deref:" << _Src._field_deref << ", ";
	_Stream << "ignore_any:" << _Src._field_ignore_any;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1303533b0_Var::_method_is_initialized(void) {
	return jule::real((*this)._field_value);
}



inline jule::Bool _1303533b0_Var::_method_is_auto_typed(void) {
	return (!(jule::real((*this)._field_kind))) || (!(jule::real((*this)._field_kind->_field_decl)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1303533b0_Var &_Src) {
	_Stream << "Var{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "used:" << _Src._field_used << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "value:" << _Src._field_value << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "depends:" << _Src._field_depends;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1300a4650_ImportInfo> _1300a4650_ImportInfo::_method_find_package(jule::Str ) {
	return jule::new_ref<_1300a4650_ImportInfo>();
}



inline jule::Ref<_1300a4650_ImportInfo> _1300a4650_ImportInfo::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1300a4650_ImportInfo>)> ) {
	return jule::new_ref<_1300a4650_ImportInfo>();
}



inline jule::Ref<_1303533b0_Var> _1300a4650_ImportInfo::_method_find_var(jule::Str _14427_ident,jule::Bool _14439_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_14427_ident)))) {
		return jule::new_ref<_1303533b0_Var>();
	}
	return _1300a4650_find_var_in_package((*this)._field_package->_field_files,_14427_ident,false);
}



inline jule::Ref<_1304dc9b0_TypeAlias> _1300a4650_ImportInfo::_method_find_type_alias(jule::Str _15734_ident,jule::Bool _15746_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_15734_ident)))) {
		return jule::new_ref<_1304dc9b0_TypeAlias>();
	}
	return _1300a4650_find_type_alias_in_package((*this)._field_package->_field_files,_15734_ident,false);
}



inline jule::Ref<_127b2e960_Struct> _1300a4650_ImportInfo::_method_find_struct(jule::Str _17030_ident,jule::Bool _17042_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_17030_ident)))) {
		return jule::new_ref<_127b2e960_Struct>();
	}
	return _1300a4650_find_struct_in_package((*this)._field_package->_field_files,_17030_ident,false);
}



inline jule::Ref<_127ed52e0_Fn> _1300a4650_ImportInfo::_method_find_fn(jule::Str _18326_ident,jule::Bool _18338_cpp_linked) {
	if ((!((*this)._method_is_lookupable(_18326_ident)))) {
		return jule::new_ref<_127ed52e0_Fn>();
	}
	return _1300a4650_find_fn_in_package((*this)._field_package->_field_files,_18326_ident,false);
}



inline jule::Ref<_130099320_Trait> _1300a4650_ImportInfo::_method_find_trait(jule::Str _19529_ident) {
	if ((!((*this)._method_is_lookupable(_19529_ident)))) {
		return jule::new_ref<_130099320_Trait>();
	}
	return _1300a4650_find_trait_in_package((*this)._field_package->_field_files,_19529_ident);
}



inline jule::Ref<_13009ed30_Enum> _1300a4650_ImportInfo::_method_find_enum(jule::Str _20728_ident) {
	if ((!((*this)._method_is_lookupable(_20728_ident)))) {
		return jule::new_ref<_13009ed30_Enum>();
	}
	return _1300a4650_find_enum_in_package((*this)._field_package->_field_files,_20728_ident);
}



inline jule::Bool _1300a4650_ImportInfo::_method_is_lookupable(jule::Str _21728_ident) {
	if ((*this)._field_cpp_linked) {
		return false;
	}
	if ((!((*this)._field_import_all))) {
		if ((*this)._method_exist_ident(jule::Str("self", 4))) {
			return true;
		}
		if ((*this)._field_selected.len() > 0LL) {
			if ((!((*this)._method_exist_ident(_21728_ident)))) {
				return false;
			}
		}
	}
	return true;
}



inline jule::Bool _1300a4650_ImportInfo::_method_exist_ident(jule::Str _23726_ident) {
	{
		auto &__julec_range_expr = (*this)._field_selected;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_127941de0_Token _1300a4650_sident = *__julec_range_begin;
			_iter_begin_5143708352:;
			{
				if (_1300a4650_sident._field_kind == _23726_ident) {
					return true;
				}
			}
			_iter_next_5143708352:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a4650_sident = *__julec_range_begin; goto _iter_begin_5143708352; }
			_iter_end_5143708352:;
		}
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _1300a4650_ImportInfo &_Src) {
	_Stream << "ImportInfo{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "path:" << _Src._field_path << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "duplicate:" << _Src._field_duplicate << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std << ", ";
	_Stream << "import_all:" << _Src._field_import_all << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "package:" << _Src._field_package;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1300a11b0_ScopeLabel &_Src) {
	_Stream << "ScopeLabel{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "used:" << _Src._field_used;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _12791ab70_Impl::_method_is_trait_impl(void) {
	return (*this)._field_base._field_id != 0LLU;
}



inline jule::Bool _12791ab70_Impl::_method_is_struct_impl(void) {
	return (*this)._field_base._field_id == 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _12791ab70_Impl &_Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _13009ed30_Enum::_method_to_str(void) {
	return (*this)._field_ident;
}



inline jule::Bool _13009ed30_Enum::_method_equals(jule::Ref<_1304dc9b0_TypeKind> _3521_other) {
	jule::Ref<_13009ed30_Enum> _3613_enm = (_3521_other).alloc->_method_enm();
	if ((!(jule::real(_3613_enm)))) {
		return false;
	}
	return (&((*this))) == (_3613_enm).alloc;
}



inline jule::Ref<_13009ed30_EnumItem> _13009ed30_Enum::_method_find_item(jule::Str _4732_ident) {
	{
		auto &__julec_range_expr = (*this)._field_items;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13009ed30_EnumItem> _13009ed30_item = *__julec_range_begin;
			_iter_begin_5142837856:;
			{
				if (_13009ed30_item->_field_ident == _4732_ident) {
					return _13009ed30_item;
				}
			}
			_iter_next_5142837856:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13009ed30_item = *__julec_range_begin; goto _iter_begin_5142837856; }
			_iter_end_5142837856:;
		}
	}
	return jule::new_ref<_13009ed30_EnumItem>();
}







std::ostream &operator<<(std::ostream &_Stream, const _13009ed30_Enum &_Src) {
	_Stream << "Enum{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "doc:" << _Src._field_doc;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _13009ed30_EnumItem::_method_auto_expr(void) {
	return (!(jule::real((*this)._field_value)));
}







std::ostream &operator<<(std::ostream &_Stream, const _13009ed30_EnumItem &_Src) {
	_Stream << "EnumItem{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "value:" << _Src._field_value;
	_Stream << "}";
	return _Stream;
}



inline jule::Str _130099320_Trait::_method_to_str(void) {
	return (*this)._field_ident;
}



inline jule::Bool _130099320_Trait::_method_equals(jule::Ref<_1304dc9b0_TypeKind> _2421_other) {
	jule::Ref<_130099320_Trait> _2513_trt = (_2421_other).alloc->_method_trt();
	if ((!(jule::real(_2513_trt)))) {
		return false;
	}
	return (&((*this))) == (_2513_trt).alloc;
}



inline jule::Bool _130099320_Trait::_method_is_builtin(void) {
	return (*this)._field_token._field_id == 0LLU;
}



inline jule::Ref<_127ed52e0_Fn> _130099320_Trait::_method_find_method(jule::Str _3934_ident) {
	{
		auto &__julec_range_expr = (*this)._field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127ed52e0_Fn> _130099320_f = *__julec_range_begin;
			_iter_begin_5142823248:;
			{
				if (_130099320_f->_field_ident == _3934_ident) {
					return _130099320_f;
				}
			}
			_iter_next_5142823248:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _130099320_f = *__julec_range_begin; goto _iter_begin_5142823248; }
			_iter_end_5142823248:;
		}
	}
	return jule::new_ref<_127ed52e0_Fn>();
}







std::ostream &operator<<(std::ostream &_Stream, const _130099320_Trait &_Src) {
	_Stream << "Trait{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "implemented:" << _Src._field_implemented;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _127ff3480_Pass &_Src) {
	_Stream << "Pass{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _127ed52e0_Fn::_method_is_void(void) {
	return (!(jule::real((*this)._field_result)));
}



inline jule::Bool _127ed52e0_Fn::_method_is_method(void) {
	return jule::real((*this)._field_owner);
}



inline jule::Bool _127ed52e0_Fn::_method_is_entry_point(void) {
	return (*this)._field_ident == jule::Str("main", 4);
}



inline jule::Bool _127ed52e0_Fn::_method_is_init(void) {
	return (*this)._field_ident == jule::Str("init", 4);
}



inline jule::Bool _127ed52e0_Fn::_method_is_anon(void) {
	return _127941de0_is_anon_ident((*this)._field_ident);
}



inline jule::Bool _127ed52e0_Fn::_method_any_var(void) {
	return jule::real((*this)._field_result) && ((*this)._field_result->_field_idents.len() > 0LL);
}



inline jule::Bool _127ed52e0_Fn::_method_parameters_uses_generics(void) {
	if ((*this)._field_generics.len() == 0LL) {
		return false;
	}
	{
		auto &__julec_range_expr = (*this)._field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127ed52e0_Param> _127ed52e0_p = *__julec_range_begin;
			_iter_begin_5142283328:;
			{
				if (_127ed52e0_p->_method_is_self()) {
					goto _iter_next_5142283328;
				}
				jule::Str _9417_pk = _127ed52e0_p->_field_kind->_field_kind->_method_to_str();
				{
					auto &__julec_range_expr = (*this)._field_generics;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_1275d7180_GenericDecl> _127ed52e0_g = *__julec_range_begin;
						_iter_begin_5142288624:;
						{
							if (_9417_pk.find(_127ed52e0_g->_field_ident) != -1LL) {
								return true;
							}
						}
						_iter_next_5142288624:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _127ed52e0_g = *__julec_range_begin; goto _iter_begin_5142288624; }
						_iter_end_5142288624:;
					}
				}
			}
			_iter_next_5142283328:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127ed52e0_p = *__julec_range_begin; goto _iter_begin_5142283328; }
			_iter_end_5142283328:;
		}
	}
	return false;
}



inline jule::Bool _127ed52e0_Fn::_method_result_uses_generics(void) {
	if ((*this)._method_is_void()) {
		return false;
	} else if ((!(jule::real((*this)._field_result->_field_kind))) || (!(jule::real((*this)._field_result->_field_kind->_field_kind)))) {
		return false;
	}
	jule::Str _11313_rk = (*this)._field_result->_field_kind->_field_kind->_method_to_str();
	{
		auto &__julec_range_expr = (*this)._field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1275d7180_GenericDecl> _127ed52e0_g = *__julec_range_begin;
			_iter_begin_5142301344:;
			{
				if (_11313_rk.find(_127ed52e0_g->_field_ident) != -1LL) {
					return true;
				}
			}
			_iter_next_5142301344:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127ed52e0_g = *__julec_range_begin; goto _iter_begin_5142301344; }
			_iter_end_5142301344:;
		}
	}
	return false;
}



inline jule::Ref<_127ed52e0_FnIns> _127ed52e0_Fn::_method_instance_force(void) {
	jule::Ref<_127ed52e0_FnIns> _12617_ins = jule::new_struct<_127ed52e0_FnIns>(new( std::nothrow ) _127ed52e0_FnIns(jule::Ref<_127b2e960_StructIns>(),this->self,jule::Slice<jule::Ref<_1304dc9b0_TypeKind>>(),jule::Slice<jule::Ref<_127ed52e0_ParamIns>>(),jule::Ref<_1304dc9b0_TypeKind>(),jule::new_struct<_1300a11b0_Scope>(new( std::nothrow ) _1300a11b0_Scope()),jule::Fn<jule::Ref<_13064b610_Data>(jule::Ref<_13064b610_Eval>,jule::Ref<_1275d7180_FnCallExpr>,jule::Ref<_13064b610_Data>)>(),jule::Bool(),jule::Bool()));
	_12617_ins->_field_params=jule::Slice<jule::Ref<_127ed52e0_ParamIns>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(this->self->_field_params.len())));
	{
		auto &__julec_range_expr = this->self->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _127ed52e0_i = 0;
			jule::Ref<_127ed52e0_Param> _127ed52e0_p = *__julec_range_begin;
			_iter_begin_5142313424:;
			{
				_12617_ins->_field_params[static_cast<jule::Int>(_127ed52e0_i)]=_127ed52e0_p->_method_instance();
			}
			_iter_next_5142313424:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_127ed52e0_i; _127ed52e0_p = *__julec_range_begin; goto _iter_begin_5142313424; }
			_iter_end_5142313424:;
		}
	}
	if (jule::real(_12617_ins->_field_decl->_field_result)) {
		_12617_ins->_field_result=_12617_ins->_field_decl->_field_result->_field_kind->_field_kind;
	}
	return _12617_ins;
}



inline jule::Ref<_127ed52e0_FnIns> _127ed52e0_Fn::_method_instance(void) {
	if ((this->self->_field_generics.len() == 0LL) && (this->self->_field_instances.len() == 1LL)) {
		return this->self->_field_instances[static_cast<jule::Int>(0LL)];
	}
	return this->self->_method_instance_force();
}



inline std::tuple<jule::Bool,jule::Int> _127ed52e0_Fn::_method_append_instance(jule::Ref<_127ed52e0_FnIns> _15238_ins) {
	if ((*this)._field_generics.len() == 0LL) {
		if ((*this)._field_instances.len() == 1LL) {
			return std::make_tuple(false,0LL);
		}
		(*this)._field_instances=append((*this)._field_instances,jule::Slice<jule::Ref<_127ed52e0_FnIns>>({_15238_ins}));
		return std::make_tuple(true,-1LL);
	}
	if ((*this)._field_instances.len() == 0LL) {
		(*this)._field_instances=append((*this)._field_instances,jule::Slice<jule::Ref<_127ed52e0_FnIns>>({_15238_ins}));
		return std::make_tuple(true,-1LL);
	}
	{
		auto &__julec_range_expr = (*this)._field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _127ed52e0_j = 0;
			jule::Ref<_127ed52e0_FnIns> _127ed52e0_ains = *__julec_range_begin;
			_iter_begin_5142339952:;
			{
				{
					auto &__julec_range_expr = _127ed52e0_ains->_field_generics;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Int _127ed52e0_i = 0;
						jule::Ref<_1304dc9b0_TypeKind> _127ed52e0_ag = *__julec_range_begin;
						_iter_begin_5142342880:;
						{
							if (_127ed52e0_ag->_method_equals(_15238_ins->_field_generics[static_cast<jule::Int>(_127ed52e0_i)])) {
								return std::make_tuple(false,_127ed52e0_j);
							}
						}
						_iter_next_5142342880:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { ++_127ed52e0_i; _127ed52e0_ag = *__julec_range_begin; goto _iter_begin_5142342880; }
						_iter_end_5142342880:;
					}
				}
			}
			_iter_next_5142339952:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_127ed52e0_j; _127ed52e0_ains = *__julec_range_begin; goto _iter_begin_5142339952; }
			_iter_end_5142339952:;
		}
	}
	(*this)._field_instances=append((*this)._field_instances,jule::Slice<jule::Ref<_127ed52e0_FnIns>>({_15238_ins}));
	return std::make_tuple(true,-1LL);
}







std::ostream &operator<<(std::ostream &_Stream, const _127ed52e0_Fn &_Src) {
	_Stream << "Fn{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params << ", ";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_127ed52e0_ParamIns> _127ed52e0_Param::_method_instance(void) {
	return jule::new_struct<_127ed52e0_ParamIns>(new( std::nothrow ) _127ed52e0_ParamIns(this->self,jule::Ref<_1304dc9b0_TypeKind>()));
}



inline jule::Bool _127ed52e0_Param::_method_is_self(void) {
	return ((*this)._field_ident == jule::Str("&self", 5)) || ((*this)._field_ident == jule::Str("self", 4));
}



inline jule::Bool _127ed52e0_Param::_method_is_ref(void) {
	return ((*this)._field_ident != jule::Str("", 0)) && ((*this)._field_ident[static_cast<jule::Int>(0LL)] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, const _127ed52e0_Param &_Src) {
	_Stream << "Param{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_127b2e960_FieldIns> _127b2e960_Field::_method_instance(void) {
	return jule::new_struct<_127b2e960_FieldIns>(new( std::nothrow ) _127b2e960_FieldIns(this->self,this->self->_field_kind->_field_kind));
}







std::ostream &operator<<(std::ostream &_Stream, const _127b2e960_Field &_Src) {
	_Stream << "Field{";
	_Stream << "owner:" << _Src._field_owner << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _127c1fad0_AssignInfo &_Src) {
	_Stream << "AssignInfo{";
	_Stream << "l:" << _Src._field_l << ", ";
	_Stream << "r:" << _Src._field_r << ", ";
	_Stream << "setter:" << _Src._field_setter << ", ";
	_Stream << "ok:" << _Src._field_ok;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1275d7180_Impl::_method_is_trait_impl(void) {
	return (*this)._field_base._field_id != 0LLU;
}



inline jule::Bool _1275d7180_Impl::_method_is_struct_impl(void) {
	return (*this)._field_base._field_id == 0LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_Impl &_Src) {
	_Stream << "Impl{";
	_Stream << "base:" << _Src._field_base << ", ";
	_Stream << "dest:" << _Src._field_dest << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_TraitDecl &_Src) {
	_Stream << "TraitDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "methods:" << _Src._field_methods;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_StructDecl &_Src) {
	_Stream << "StructDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_FieldDecl &_Src) {
	_Stream << "FieldDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1275d7180_EnumDecl::_method_default_typed(void) {
	return (!(jule::real((*this)._field_kind)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_EnumDecl &_Src) {
	_Stream << "EnumDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "items:" << _Src._field_items << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1275d7180_EnumItemDecl::_method_auto_expr(void) {
	return (!(jule::real((*this)._field_expr)));
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_EnumItemDecl &_Src) {
	_Stream << "EnumItemDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_UseDecl &_Src) {
	_Stream << "UseDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "link_path:" << _Src._field_link_path << ", ";
	_Stream << "full:" << _Src._field_full << ", ";
	_Stream << "selected:" << _Src._field_selected << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "std:" << _Src._field_std;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_Case &_Src) {
	_Stream << "Case{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "exprs:" << _Src._field_exprs;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_TypeAliasDecl &_Src) {
	_Stream << "TypeAliasDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_Else &_Src) {
	_Stream << "Else{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_If &_Src) {
	_Stream << "If{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "scope:" << _Src._field_scope;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_ContSt &_Src) {
	_Stream << "ContSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_BreakSt &_Src) {
	_Stream << "BreakSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_VarDecl &_Src) {
	_Stream << "VarDecl{";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "constant:" << _Src._field_constant << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_FnDecl &_Src) {
	_Stream << "FnDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "global:" << _Src._field_global << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "statically:" << _Src._field_statically << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc_comments:" << _Src._field_doc_comments << ", ";
	_Stream << "scope:" << _Src._field_scope << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "result:" << _Src._field_result << ", ";
	_Stream << "params:" << _Src._field_params;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1275d7180_ParamDecl::_method_is_self(void) {
	return (*this)._field_ident.has_suffix(jule::Str("self", 4));
}



inline jule::Bool _1275d7180_ParamDecl::_method_is_ref(void) {
	return ((*this)._field_ident != jule::Str("", 0)) && ((*this)._field_ident[static_cast<jule::Int>(0LL)] == '&');
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_ParamDecl &_Src) {
	_Stream << "ParamDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "variadic:" << _Src._field_variadic << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "kind:" << _Src._field_kind << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_AssignLeft &_Src) {
	_Stream << "AssignLeft{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "mutable:" << _Src._field_mutable << ", ";
	_Stream << "reference:" << _Src._field_reference << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "expr:" << _Src._field_expr;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_GotoSt &_Src) {
	_Stream << "GotoSt{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "label:" << _Src._field_label;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_GenericDecl &_Src) {
	_Stream << "GenericDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_FnCallExpr &_Src) {
	_Stream << "FnCallExpr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "expr:" << _Src._field_expr << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "args:" << _Src._field_args << ", ";
	_Stream << "concurrent:" << _Src._field_concurrent;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1275d7180_Expr::_method_is_fn_call(void) {
	if ((*this)._field_kind == nullptr) {
		return false;
	}
	{
		auto &_match_expr{ (*this)._field_kind };
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_FnCallExpr>>())) { goto _case_end_5370271840; }
		_case_begin_5370271840:;
		{
			return true;
		}
		goto _match_end_5370270960;
		_case_end_5370271840:;
		_case_begin_5370270464:;
		{
			return false;
		}
		goto _match_end_5370270960;
		_case_end_5370270464:;
		_match_end_5370270960:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_Expr &_Src) {
	_Stream << "Expr{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1275d7180_IdentTypeDecl::_method_is_prim(void) {
	return (*this)._field_token._field_id == 1LLU;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_IdentTypeDecl &_Src) {
	_Stream << "IdentTypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "generics:" << _Src._field_generics;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_TypeDecl &_Src) {
	_Stream << "TypeDecl{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "kind:" << _Src._field_kind;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_Directive &_Src) {
	_Stream << "Directive{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "tag:" << _Src._field_tag << ", ";
	_Stream << "args:" << _Src._field_args;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1275d7180_Comment::_method_is_directive(void) {
	return (*this)._field_text.has_prefix(jule::Str("jule:", 5));
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_Comment &_Src) {
	_Stream << "Comment{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "text:" << _Src._field_text;
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _1275d7180_Node::_method_is_decl(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_EnumDecl>>() || _match_expr.type_is<jule::Ref<_1275d7180_FnDecl>>() || _match_expr.type_is<jule::Ref<_1275d7180_StructDecl>>() || _match_expr.type_is<jule::Ref<_1275d7180_TraitDecl>>() || _match_expr.type_is<jule::Ref<_1275d7180_TypeAliasDecl>>() || _match_expr.type_is<jule::Ref<_1275d7180_FieldDecl>>() || _match_expr.type_is<jule::Ref<_1275d7180_UseDecl>>() || _match_expr.type_is<jule::Ref<_1275d7180_VarDecl>>() || _match_expr.type_is<jule::Ref<_1275d7180_TypeDecl>>())) { goto _case_end_5370227456; }
		_case_begin_5370227456:;
		{
			return true;
		}
		goto _match_end_5370225584;
		_case_end_5370227456:;
		_case_begin_5370226448:;
		{
			return false;
		}
		goto _match_end_5370225584;
		_case_end_5370226448:;
		_match_end_5370225584:;
	}
}



inline jule::Bool _1275d7180_Node::_method_is_comment(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_Comment>>() || _match_expr.type_is<jule::Ref<_1275d7180_CommentGroup>>())) { goto _case_end_5370244752; }
		_case_begin_5370244752:;
		{
			return true;
		}
		goto _match_end_5370241744;
		_case_end_5370244752:;
		_case_begin_5370243744:;
		{
			return false;
		}
		goto _match_end_5370241744;
		_case_end_5370243744:;
		_match_end_5370241744:;
	}
}



inline jule::Bool _1275d7180_Node::_method_is_impl(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_Impl>>())) { goto _case_end_5370248848; }
		_case_begin_5370248848:;
		{
			return true;
		}
		goto _match_end_5370246976;
		_case_end_5370248848:;
		_case_begin_5370247840:;
		{
			return false;
		}
		goto _match_end_5370246976;
		_case_end_5370247840:;
		_match_end_5370246976:;
	}
}



inline jule::Bool _1275d7180_Node::_method_is_use_decl(void) {
	{
		auto &_match_expr{ (*this)._field_data };
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_UseDecl>>())) { goto _case_end_5370252624; }
		_case_begin_5370252624:;
		{
			return true;
		}
		goto _match_end_5370249536;
		_case_end_5370252624:;
		_case_begin_5370251616:;
		{
			return false;
		}
		goto _match_end_5370249536;
		_case_end_5370251616:;
		_match_end_5370249536:;
	}
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d7180_Node &_Src) {
	_Stream << "Node{";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "data:" << _Src._field_data;
	_Stream << "}";
	return _Stream;
}



inline _127ab7fa0_Vector_0 _127ab7fa0_Vector_0::_static_method_new(jule::Int _4319_cap) {
	_127ab7fa0_Vector_0 _4417_vec = _127ab7fa0_Vector_0();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _127ab7fa0_Vector_0::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return _5413_t * 2LL;
}



inline void _127ab7fa0_Vector_0::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<_127941de0_Token>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<_127941de0_Token>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<_127941de0_Token>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _127ab7fa0_Vector_0::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _127ab7fa0_Vector_0::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _127ab7fa0_Vector_0::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _127ab7fa0_Vector_0::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _127ab7fa0_Vector_0::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline _127941de0_Token _127ab7fa0_Vector_0::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<_127941de0_Token>((*this)._field__buffer.heap,_11525_i);
}



inline void _127ab7fa0_Vector_0::_method_set(jule::Int _12326_i,_127941de0_Token _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<_127941de0_Token>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _127ab7fa0_Vector_0::_method_push(_127941de0_Token _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	{
		__jule_std_vector_heap_assign<_127941de0_Token>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _127ab7fa0_Vector_0::_method_push_front(_127941de0_Token _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5124425504:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5124425504; }
	{
		{
			__jule_std_vector_heap_move<_127941de0_Token>((*this)._field__buffer.heap,_15217_i,_15217_i + 1LL);
		}
	}
	_iter_next_5124425504:;
	(_15217_i)--;
	goto _iter_begin_5124425504;
	_iter_end_5124425504:;
	{
		__jule_std_vector_heap_assign<_127941de0_Token>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _127ab7fa0_Vector_0::_method_append(jule::Slice<_127941de0_Token> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<_127941de0_Token>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(_127941de0_Token) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<_127941de0_Token>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _127ab7fa0_Vector_0::_method_merge(_127ab7fa0_Vector_0 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<_127941de0_Token>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(_127941de0_Token) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _127ab7fa0_Vector_0::_method_merge_front(_127ab7fa0_Vector_0 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5124468176:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5124468176; }
	{
		{
			__jule_std_vector_heap_move<_127941de0_Token>((*this)._field__buffer.heap,_20517_i,_20517_i + _19738_vec._field__buffer.len);
		}
	}
	_iter_next_5124468176:;
	(_20517_i)--;
	goto _iter_begin_5124468176;
	_iter_end_5124468176:;
	{
		__jule_std_vector_copy_range<_127941de0_Token>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _127ab7fa0_Vector_0::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5124491872:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5124491872; }
	{
		{
			__jule_std_vector_heap_move<_127941de0_Token>((*this)._field__buffer.heap,_23917_i,_23917_i - _22347_n);
		}
	}
	_iter_next_5124491872:;
	(_23917_i)++;
	goto _iter_begin_5124491872;
	_iter_end_5124491872:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _127ab7fa0_Vector_0::_method_insert(jule::Int _24829_i,_127941de0_Token _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5124505520:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5124505520; }
	{
		{
			__jule_std_vector_heap_move<_127941de0_Token>((*this)._field__buffer.heap,_26117_j,_26117_j + 1LL);
		}
	}
	_iter_next_5124505520:;
	(_26117_j)--;
	goto _iter_begin_5124505520;
	_iter_end_5124505520:;
	{
		__jule_std_vector_heap_assign<_127941de0_Token>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _127ab7fa0_Vector_0 _127ab7fa0_Vector_0::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _127ab7fa0_Vector_0::_static_method_new(0LL);
	}
	_127ab7fa0_Vector_0 _29317_vec = _127ab7fa0_Vector_0::_static_method_new(_27240_end - _27228_start);
	{
		__jule_std_vector_copy_range<_127941de0_Token>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(_127941de0_Token) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _127ab7fa0_Vector_0 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _127ab7fa0_Vector_1 _127ab7fa0_Vector_1::_static_method_new(jule::Int _4319_cap) {
	_127ab7fa0_Vector_1 _4417_vec = _127ab7fa0_Vector_1();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _127ab7fa0_Vector_1::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return _5413_t * 2LL;
}



inline void _127ab7fa0_Vector_1::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_1275d7180_Directive>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_1275d7180_Directive>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_1275d7180_Directive>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _127ab7fa0_Vector_1::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _127ab7fa0_Vector_1::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _127ab7fa0_Vector_1::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _127ab7fa0_Vector_1::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _127ab7fa0_Vector_1::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_1275d7180_Directive> _127ab7fa0_Vector_1::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_1275d7180_Directive>>((*this)._field__buffer.heap,_11525_i);
}



inline void _127ab7fa0_Vector_1::_method_set(jule::Int _12326_i,jule::Ref<_1275d7180_Directive> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_1275d7180_Directive>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _127ab7fa0_Vector_1::_method_push(jule::Ref<_1275d7180_Directive> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_1275d7180_Directive>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _127ab7fa0_Vector_1::_method_push_front(jule::Ref<_1275d7180_Directive> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5369575904:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5369575904; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1275d7180_Directive>>((*this)._field__buffer.heap,_15217_i,_15217_i + 1LL);
		}
	}
	_iter_next_5369575904:;
	(_15217_i)--;
	goto _iter_begin_5369575904;
	_iter_end_5369575904:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_1275d7180_Directive>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _127ab7fa0_Vector_1::_method_append(jule::Slice<jule::Ref<_1275d7180_Directive>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_1275d7180_Directive>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1275d7180_Directive>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_1275d7180_Directive>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _127ab7fa0_Vector_1::_method_merge(_127ab7fa0_Vector_1 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_1275d7180_Directive>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1275d7180_Directive>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _127ab7fa0_Vector_1::_method_merge_front(_127ab7fa0_Vector_1 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5369619392:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5369619392; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1275d7180_Directive>>((*this)._field__buffer.heap,_20517_i,_20517_i + _19738_vec._field__buffer.len);
		}
	}
	_iter_next_5369619392:;
	(_20517_i)--;
	goto _iter_begin_5369619392;
	_iter_end_5369619392:;
	{
		__jule_std_vector_copy_range<jule::Ref<_1275d7180_Directive>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _127ab7fa0_Vector_1::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5369642944:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5369642944; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1275d7180_Directive>>((*this)._field__buffer.heap,_23917_i,_23917_i - _22347_n);
		}
	}
	_iter_next_5369642944:;
	(_23917_i)++;
	goto _iter_begin_5369642944;
	_iter_end_5369642944:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _127ab7fa0_Vector_1::_method_insert(jule::Int _24829_i,jule::Ref<_1275d7180_Directive> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5369656592:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5369656592; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1275d7180_Directive>>((*this)._field__buffer.heap,_26117_j,_26117_j + 1LL);
		}
	}
	_iter_next_5369656592:;
	(_26117_j)--;
	goto _iter_begin_5369656592;
	_iter_end_5369656592:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_1275d7180_Directive>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _127ab7fa0_Vector_1 _127ab7fa0_Vector_1::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _127ab7fa0_Vector_1::_static_method_new(0LL);
	}
	_127ab7fa0_Vector_1 _29317_vec = _127ab7fa0_Vector_1::_static_method_new(_27240_end - _27228_start);
	{
		__jule_std_vector_copy_range<jule::Ref<_1275d7180_Directive>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1275d7180_Directive>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _127ab7fa0_Vector_1 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _127ab7fa0_Vector_2 _127ab7fa0_Vector_2::_static_method_new(jule::Int _4319_cap) {
	_127ab7fa0_Vector_2 _4417_vec = _127ab7fa0_Vector_2();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _127ab7fa0_Vector_2::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return _5413_t * 2LL;
}



inline void _127ab7fa0_Vector_2::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_1275d7180_UseDecl>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_1275d7180_UseDecl>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_1275d7180_UseDecl>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _127ab7fa0_Vector_2::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _127ab7fa0_Vector_2::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _127ab7fa0_Vector_2::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _127ab7fa0_Vector_2::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _127ab7fa0_Vector_2::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_1275d7180_UseDecl> _127ab7fa0_Vector_2::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_1275d7180_UseDecl>>((*this)._field__buffer.heap,_11525_i);
}



inline void _127ab7fa0_Vector_2::_method_set(jule::Int _12326_i,jule::Ref<_1275d7180_UseDecl> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_1275d7180_UseDecl>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _127ab7fa0_Vector_2::_method_push(jule::Ref<_1275d7180_UseDecl> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_1275d7180_UseDecl>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _127ab7fa0_Vector_2::_method_push_front(jule::Ref<_1275d7180_UseDecl> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5125481616:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5125481616; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1275d7180_UseDecl>>((*this)._field__buffer.heap,_15217_i,_15217_i + 1LL);
		}
	}
	_iter_next_5125481616:;
	(_15217_i)--;
	goto _iter_begin_5125481616;
	_iter_end_5125481616:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_1275d7180_UseDecl>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _127ab7fa0_Vector_2::_method_append(jule::Slice<jule::Ref<_1275d7180_UseDecl>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_1275d7180_UseDecl>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1275d7180_UseDecl>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_1275d7180_UseDecl>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _127ab7fa0_Vector_2::_method_merge(_127ab7fa0_Vector_2 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_1275d7180_UseDecl>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1275d7180_UseDecl>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _127ab7fa0_Vector_2::_method_merge_front(_127ab7fa0_Vector_2 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5125524496:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5125524496; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1275d7180_UseDecl>>((*this)._field__buffer.heap,_20517_i,_20517_i + _19738_vec._field__buffer.len);
		}
	}
	_iter_next_5125524496:;
	(_20517_i)--;
	goto _iter_begin_5125524496;
	_iter_end_5125524496:;
	{
		__jule_std_vector_copy_range<jule::Ref<_1275d7180_UseDecl>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _127ab7fa0_Vector_2::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5125548048:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5125548048; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1275d7180_UseDecl>>((*this)._field__buffer.heap,_23917_i,_23917_i - _22347_n);
		}
	}
	_iter_next_5125548048:;
	(_23917_i)++;
	goto _iter_begin_5125548048;
	_iter_end_5125548048:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _127ab7fa0_Vector_2::_method_insert(jule::Int _24829_i,jule::Ref<_1275d7180_UseDecl> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5125561696:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5125561696; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1275d7180_UseDecl>>((*this)._field__buffer.heap,_26117_j,_26117_j + 1LL);
		}
	}
	_iter_next_5125561696:;
	(_26117_j)--;
	goto _iter_begin_5125561696;
	_iter_end_5125561696:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_1275d7180_UseDecl>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _127ab7fa0_Vector_2 _127ab7fa0_Vector_2::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _127ab7fa0_Vector_2::_static_method_new(0LL);
	}
	_127ab7fa0_Vector_2 _29317_vec = _127ab7fa0_Vector_2::_static_method_new(_27240_end - _27228_start);
	{
		__jule_std_vector_copy_range<jule::Ref<_1275d7180_UseDecl>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1275d7180_UseDecl>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _127ab7fa0_Vector_2 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _127ab7fa0_Vector_3 _127ab7fa0_Vector_3::_static_method_new(jule::Int _4319_cap) {
	_127ab7fa0_Vector_3 _4417_vec = _127ab7fa0_Vector_3();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _127ab7fa0_Vector_3::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return _5413_t * 2LL;
}



inline void _127ab7fa0_Vector_3::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_1275d7180_Impl>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_1275d7180_Impl>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_1275d7180_Impl>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _127ab7fa0_Vector_3::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _127ab7fa0_Vector_3::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _127ab7fa0_Vector_3::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _127ab7fa0_Vector_3::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _127ab7fa0_Vector_3::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_1275d7180_Impl> _127ab7fa0_Vector_3::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_1275d7180_Impl>>((*this)._field__buffer.heap,_11525_i);
}



inline void _127ab7fa0_Vector_3::_method_set(jule::Int _12326_i,jule::Ref<_1275d7180_Impl> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_1275d7180_Impl>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _127ab7fa0_Vector_3::_method_push(jule::Ref<_1275d7180_Impl> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_1275d7180_Impl>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _127ab7fa0_Vector_3::_method_push_front(jule::Ref<_1275d7180_Impl> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5125702368:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5125702368; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1275d7180_Impl>>((*this)._field__buffer.heap,_15217_i,_15217_i + 1LL);
		}
	}
	_iter_next_5125702368:;
	(_15217_i)--;
	goto _iter_begin_5125702368;
	_iter_end_5125702368:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_1275d7180_Impl>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _127ab7fa0_Vector_3::_method_append(jule::Slice<jule::Ref<_1275d7180_Impl>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_1275d7180_Impl>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1275d7180_Impl>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_1275d7180_Impl>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _127ab7fa0_Vector_3::_method_merge(_127ab7fa0_Vector_3 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_1275d7180_Impl>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1275d7180_Impl>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _127ab7fa0_Vector_3::_method_merge_front(_127ab7fa0_Vector_3 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5125744896:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5125744896; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1275d7180_Impl>>((*this)._field__buffer.heap,_20517_i,_20517_i + _19738_vec._field__buffer.len);
		}
	}
	_iter_next_5125744896:;
	(_20517_i)--;
	goto _iter_begin_5125744896;
	_iter_end_5125744896:;
	{
		__jule_std_vector_copy_range<jule::Ref<_1275d7180_Impl>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _127ab7fa0_Vector_3::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5125768448:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5125768448; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1275d7180_Impl>>((*this)._field__buffer.heap,_23917_i,_23917_i - _22347_n);
		}
	}
	_iter_next_5125768448:;
	(_23917_i)++;
	goto _iter_begin_5125768448;
	_iter_end_5125768448:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _127ab7fa0_Vector_3::_method_insert(jule::Int _24829_i,jule::Ref<_1275d7180_Impl> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5125788432:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5125788432; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1275d7180_Impl>>((*this)._field__buffer.heap,_26117_j,_26117_j + 1LL);
		}
	}
	_iter_next_5125788432:;
	(_26117_j)--;
	goto _iter_begin_5125788432;
	_iter_end_5125788432:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_1275d7180_Impl>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _127ab7fa0_Vector_3 _127ab7fa0_Vector_3::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _127ab7fa0_Vector_3::_static_method_new(0LL);
	}
	_127ab7fa0_Vector_3 _29317_vec = _127ab7fa0_Vector_3::_static_method_new(_27240_end - _27228_start);
	{
		__jule_std_vector_copy_range<jule::Ref<_1275d7180_Impl>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1275d7180_Impl>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _127ab7fa0_Vector_3 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _127ab7fa0_Vector_4 _127ab7fa0_Vector_4::_static_method_new(jule::Int _4319_cap) {
	_127ab7fa0_Vector_4 _4417_vec = _127ab7fa0_Vector_4();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _127ab7fa0_Vector_4::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return _5413_t * 2LL;
}



inline void _127ab7fa0_Vector_4::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_1275d7180_Comment>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_1275d7180_Comment>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_1275d7180_Comment>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _127ab7fa0_Vector_4::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _127ab7fa0_Vector_4::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _127ab7fa0_Vector_4::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _127ab7fa0_Vector_4::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _127ab7fa0_Vector_4::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_1275d7180_Comment> _127ab7fa0_Vector_4::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_1275d7180_Comment>>((*this)._field__buffer.heap,_11525_i);
}



inline void _127ab7fa0_Vector_4::_method_set(jule::Int _12326_i,jule::Ref<_1275d7180_Comment> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_1275d7180_Comment>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _127ab7fa0_Vector_4::_method_push(jule::Ref<_1275d7180_Comment> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_1275d7180_Comment>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _127ab7fa0_Vector_4::_method_push_front(jule::Ref<_1275d7180_Comment> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5124533808:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5124533808; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1275d7180_Comment>>((*this)._field__buffer.heap,_15217_i,_15217_i + 1LL);
		}
	}
	_iter_next_5124533808:;
	(_15217_i)--;
	goto _iter_begin_5124533808;
	_iter_end_5124533808:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_1275d7180_Comment>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _127ab7fa0_Vector_4::_method_append(jule::Slice<jule::Ref<_1275d7180_Comment>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_1275d7180_Comment>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1275d7180_Comment>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_1275d7180_Comment>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _127ab7fa0_Vector_4::_method_merge(_127ab7fa0_Vector_4 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_1275d7180_Comment>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1275d7180_Comment>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _127ab7fa0_Vector_4::_method_merge_front(_127ab7fa0_Vector_4 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5369881120:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5369881120; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1275d7180_Comment>>((*this)._field__buffer.heap,_20517_i,_20517_i + _19738_vec._field__buffer.len);
		}
	}
	_iter_next_5369881120:;
	(_20517_i)--;
	goto _iter_begin_5369881120;
	_iter_end_5369881120:;
	{
		__jule_std_vector_copy_range<jule::Ref<_1275d7180_Comment>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _127ab7fa0_Vector_4::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5369903232:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5369903232; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1275d7180_Comment>>((*this)._field__buffer.heap,_23917_i,_23917_i - _22347_n);
		}
	}
	_iter_next_5369903232:;
	(_23917_i)++;
	goto _iter_begin_5369903232;
	_iter_end_5369903232:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _127ab7fa0_Vector_4::_method_insert(jule::Int _24829_i,jule::Ref<_1275d7180_Comment> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5369916880:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5369916880; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1275d7180_Comment>>((*this)._field__buffer.heap,_26117_j,_26117_j + 1LL);
		}
	}
	_iter_next_5369916880:;
	(_26117_j)--;
	goto _iter_begin_5369916880;
	_iter_end_5369916880:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_1275d7180_Comment>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _127ab7fa0_Vector_4 _127ab7fa0_Vector_4::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _127ab7fa0_Vector_4::_static_method_new(0LL);
	}
	_127ab7fa0_Vector_4 _29317_vec = _127ab7fa0_Vector_4::_static_method_new(_27240_end - _27228_start);
	{
		__jule_std_vector_copy_range<jule::Ref<_1275d7180_Comment>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1275d7180_Comment>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _127ab7fa0_Vector_4 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _127ab7fa0_Vector_5 _127ab7fa0_Vector_5::_static_method_new(jule::Int _4319_cap) {
	_127ab7fa0_Vector_5 _4417_vec = _127ab7fa0_Vector_5();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _127ab7fa0_Vector_5::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return _5413_t * 2LL;
}



inline void _127ab7fa0_Vector_5::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<_1275d7180_Node>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<_1275d7180_Node>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<_1275d7180_Node>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _127ab7fa0_Vector_5::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _127ab7fa0_Vector_5::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _127ab7fa0_Vector_5::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _127ab7fa0_Vector_5::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _127ab7fa0_Vector_5::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline _1275d7180_Node _127ab7fa0_Vector_5::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<_1275d7180_Node>((*this)._field__buffer.heap,_11525_i);
}



inline void _127ab7fa0_Vector_5::_method_set(jule::Int _12326_i,_1275d7180_Node _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<_1275d7180_Node>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _127ab7fa0_Vector_5::_method_push(_1275d7180_Node _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	{
		__jule_std_vector_heap_assign<_1275d7180_Node>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _127ab7fa0_Vector_5::_method_push_front(_1275d7180_Node _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5370041792:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5370041792; }
	{
		{
			__jule_std_vector_heap_move<_1275d7180_Node>((*this)._field__buffer.heap,_15217_i,_15217_i + 1LL);
		}
	}
	_iter_next_5370041792:;
	(_15217_i)--;
	goto _iter_begin_5370041792;
	_iter_end_5370041792:;
	{
		__jule_std_vector_heap_assign<_1275d7180_Node>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _127ab7fa0_Vector_5::_method_append(jule::Slice<_1275d7180_Node> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<_1275d7180_Node>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(_1275d7180_Node) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<_1275d7180_Node>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _127ab7fa0_Vector_5::_method_merge(_127ab7fa0_Vector_5 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<_1275d7180_Node>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(_1275d7180_Node) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _127ab7fa0_Vector_5::_method_merge_front(_127ab7fa0_Vector_5 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5370085440:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5370085440; }
	{
		{
			__jule_std_vector_heap_move<_1275d7180_Node>((*this)._field__buffer.heap,_20517_i,_20517_i + _19738_vec._field__buffer.len);
		}
	}
	_iter_next_5370085440:;
	(_20517_i)--;
	goto _iter_begin_5370085440;
	_iter_end_5370085440:;
	{
		__jule_std_vector_copy_range<_1275d7180_Node>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _127ab7fa0_Vector_5::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5370108992:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5370108992; }
	{
		{
			__jule_std_vector_heap_move<_1275d7180_Node>((*this)._field__buffer.heap,_23917_i,_23917_i - _22347_n);
		}
	}
	_iter_next_5370108992:;
	(_23917_i)++;
	goto _iter_begin_5370108992;
	_iter_end_5370108992:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _127ab7fa0_Vector_5::_method_insert(jule::Int _24829_i,_1275d7180_Node _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5370122640:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5370122640; }
	{
		{
			__jule_std_vector_heap_move<_1275d7180_Node>((*this)._field__buffer.heap,_26117_j,_26117_j + 1LL);
		}
	}
	_iter_next_5370122640:;
	(_26117_j)--;
	goto _iter_begin_5370122640;
	_iter_end_5370122640:;
	{
		__jule_std_vector_heap_assign<_1275d7180_Node>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _127ab7fa0_Vector_5 _127ab7fa0_Vector_5::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _127ab7fa0_Vector_5::_static_method_new(0LL);
	}
	_127ab7fa0_Vector_5 _29317_vec = _127ab7fa0_Vector_5::_static_method_new(_27240_end - _27228_start);
	{
		__jule_std_vector_copy_range<_1275d7180_Node>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(_1275d7180_Node) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _127ab7fa0_Vector_5 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _127ab7fa0_Vector_6 _127ab7fa0_Vector_6::_static_method_new(jule::Int _4319_cap) {
	_127ab7fa0_Vector_6 _4417_vec = _127ab7fa0_Vector_6();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _127ab7fa0_Vector_6::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return _5413_t * 2LL;
}



inline void _127ab7fa0_Vector_6::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<_127ff3480_Pass>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<_127ff3480_Pass>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<_127ff3480_Pass>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _127ab7fa0_Vector_6::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _127ab7fa0_Vector_6::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _127ab7fa0_Vector_6::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _127ab7fa0_Vector_6::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _127ab7fa0_Vector_6::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline _127ff3480_Pass _127ab7fa0_Vector_6::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<_127ff3480_Pass>((*this)._field__buffer.heap,_11525_i);
}



inline void _127ab7fa0_Vector_6::_method_set(jule::Int _12326_i,_127ff3480_Pass _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<_127ff3480_Pass>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _127ab7fa0_Vector_6::_method_push(_127ff3480_Pass _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	{
		__jule_std_vector_heap_assign<_127ff3480_Pass>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _127ab7fa0_Vector_6::_method_push_front(_127ff3480_Pass _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5129367232:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5129367232; }
	{
		{
			__jule_std_vector_heap_move<_127ff3480_Pass>((*this)._field__buffer.heap,_15217_i,_15217_i + 1LL);
		}
	}
	_iter_next_5129367232:;
	(_15217_i)--;
	goto _iter_begin_5129367232;
	_iter_end_5129367232:;
	{
		__jule_std_vector_heap_assign<_127ff3480_Pass>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _127ab7fa0_Vector_6::_method_append(jule::Slice<_127ff3480_Pass> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<_127ff3480_Pass>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(_127ff3480_Pass) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<_127ff3480_Pass>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _127ab7fa0_Vector_6::_method_merge(_127ab7fa0_Vector_6 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<_127ff3480_Pass>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(_127ff3480_Pass) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _127ab7fa0_Vector_6::_method_merge_front(_127ab7fa0_Vector_6 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5129411392:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5129411392; }
	{
		{
			__jule_std_vector_heap_move<_127ff3480_Pass>((*this)._field__buffer.heap,_20517_i,_20517_i + _19738_vec._field__buffer.len);
		}
	}
	_iter_next_5129411392:;
	(_20517_i)--;
	goto _iter_begin_5129411392;
	_iter_end_5129411392:;
	{
		__jule_std_vector_copy_range<_127ff3480_Pass>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _127ab7fa0_Vector_6::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5129434944:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5129434944; }
	{
		{
			__jule_std_vector_heap_move<_127ff3480_Pass>((*this)._field__buffer.heap,_23917_i,_23917_i - _22347_n);
		}
	}
	_iter_next_5129434944:;
	(_23917_i)++;
	goto _iter_begin_5129434944;
	_iter_end_5129434944:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _127ab7fa0_Vector_6::_method_insert(jule::Int _24829_i,_127ff3480_Pass _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5129448592:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5129448592; }
	{
		{
			__jule_std_vector_heap_move<_127ff3480_Pass>((*this)._field__buffer.heap,_26117_j,_26117_j + 1LL);
		}
	}
	_iter_next_5129448592:;
	(_26117_j)--;
	goto _iter_begin_5129448592;
	_iter_end_5129448592:;
	{
		__jule_std_vector_heap_assign<_127ff3480_Pass>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _127ab7fa0_Vector_6 _127ab7fa0_Vector_6::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _127ab7fa0_Vector_6::_static_method_new(0LL);
	}
	_127ab7fa0_Vector_6 _29317_vec = _127ab7fa0_Vector_6::_static_method_new(_27240_end - _27228_start);
	{
		__jule_std_vector_copy_range<_127ff3480_Pass>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(_127ff3480_Pass) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _127ab7fa0_Vector_6 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _127ab7fa0_Vector_7 _127ab7fa0_Vector_7::_static_method_new(jule::Int _4319_cap) {
	_127ab7fa0_Vector_7 _4417_vec = _127ab7fa0_Vector_7();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _127ab7fa0_Vector_7::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return _5413_t * 2LL;
}



inline void _127ab7fa0_Vector_7::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_1300a4650_ImportInfo>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_1300a4650_ImportInfo>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_1300a4650_ImportInfo>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _127ab7fa0_Vector_7::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _127ab7fa0_Vector_7::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _127ab7fa0_Vector_7::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _127ab7fa0_Vector_7::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _127ab7fa0_Vector_7::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_1300a4650_ImportInfo> _127ab7fa0_Vector_7::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_1300a4650_ImportInfo>>((*this)._field__buffer.heap,_11525_i);
}



inline void _127ab7fa0_Vector_7::_method_set(jule::Int _12326_i,jule::Ref<_1300a4650_ImportInfo> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_1300a4650_ImportInfo>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _127ab7fa0_Vector_7::_method_push(jule::Ref<_1300a4650_ImportInfo> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_1300a4650_ImportInfo>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _127ab7fa0_Vector_7::_method_push_front(jule::Ref<_1300a4650_ImportInfo> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5129585968:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5129585968; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1300a4650_ImportInfo>>((*this)._field__buffer.heap,_15217_i,_15217_i + 1LL);
		}
	}
	_iter_next_5129585968:;
	(_15217_i)--;
	goto _iter_begin_5129585968;
	_iter_end_5129585968:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_1300a4650_ImportInfo>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _127ab7fa0_Vector_7::_method_append(jule::Slice<jule::Ref<_1300a4650_ImportInfo>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_1300a4650_ImportInfo>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1300a4650_ImportInfo>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_1300a4650_ImportInfo>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _127ab7fa0_Vector_7::_method_merge(_127ab7fa0_Vector_7 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_1300a4650_ImportInfo>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1300a4650_ImportInfo>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _127ab7fa0_Vector_7::_method_merge_front(_127ab7fa0_Vector_7 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5128243936:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5128243936; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1300a4650_ImportInfo>>((*this)._field__buffer.heap,_20517_i,_20517_i + _19738_vec._field__buffer.len);
		}
	}
	_iter_next_5128243936:;
	(_20517_i)--;
	goto _iter_begin_5128243936;
	_iter_end_5128243936:;
	{
		__jule_std_vector_copy_range<jule::Ref<_1300a4650_ImportInfo>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _127ab7fa0_Vector_7::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5128266128:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5128266128; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1300a4650_ImportInfo>>((*this)._field__buffer.heap,_23917_i,_23917_i - _22347_n);
		}
	}
	_iter_next_5128266128:;
	(_23917_i)++;
	goto _iter_begin_5128266128;
	_iter_end_5128266128:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _127ab7fa0_Vector_7::_method_insert(jule::Int _24829_i,jule::Ref<_1300a4650_ImportInfo> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5128279776:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5128279776; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1300a4650_ImportInfo>>((*this)._field__buffer.heap,_26117_j,_26117_j + 1LL);
		}
	}
	_iter_next_5128279776:;
	(_26117_j)--;
	goto _iter_begin_5128279776;
	_iter_end_5128279776:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_1300a4650_ImportInfo>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _127ab7fa0_Vector_7 _127ab7fa0_Vector_7::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _127ab7fa0_Vector_7::_static_method_new(0LL);
	}
	_127ab7fa0_Vector_7 _29317_vec = _127ab7fa0_Vector_7::_static_method_new(_27240_end - _27228_start);
	{
		__jule_std_vector_copy_range<jule::Ref<_1300a4650_ImportInfo>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1300a4650_ImportInfo>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _127ab7fa0_Vector_7 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _127ab7fa0_Vector_8 _127ab7fa0_Vector_8::_static_method_new(jule::Int _4319_cap) {
	_127ab7fa0_Vector_8 _4417_vec = _127ab7fa0_Vector_8();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _127ab7fa0_Vector_8::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return _5413_t * 2LL;
}



inline void _127ab7fa0_Vector_8::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Any>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Any>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Any>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _127ab7fa0_Vector_8::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _127ab7fa0_Vector_8::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _127ab7fa0_Vector_8::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _127ab7fa0_Vector_8::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _127ab7fa0_Vector_8::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Any _127ab7fa0_Vector_8::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Any>((*this)._field__buffer.heap,_11525_i);
}



inline void _127ab7fa0_Vector_8::_method_set(jule::Int _12326_i,jule::Any _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Any>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _127ab7fa0_Vector_8::_method_push(jule::Any _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	{
		__jule_std_vector_heap_assign<jule::Any>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _127ab7fa0_Vector_8::_method_push_front(jule::Any _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5128440448:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5128440448; }
	{
		{
			__jule_std_vector_heap_move<jule::Any>((*this)._field__buffer.heap,_15217_i,_15217_i + 1LL);
		}
	}
	_iter_next_5128440448:;
	(_15217_i)--;
	goto _iter_begin_5128440448;
	_iter_end_5128440448:;
	{
		__jule_std_vector_heap_assign<jule::Any>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _127ab7fa0_Vector_8::_method_append(jule::Slice<jule::Any> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Any>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Any) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Any>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _127ab7fa0_Vector_8::_method_merge(_127ab7fa0_Vector_8 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Any>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Any) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _127ab7fa0_Vector_8::_method_merge_front(_127ab7fa0_Vector_8 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5128482880:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5128482880; }
	{
		{
			__jule_std_vector_heap_move<jule::Any>((*this)._field__buffer.heap,_20517_i,_20517_i + _19738_vec._field__buffer.len);
		}
	}
	_iter_next_5128482880:;
	(_20517_i)--;
	goto _iter_begin_5128482880;
	_iter_end_5128482880:;
	{
		__jule_std_vector_copy_range<jule::Any>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _127ab7fa0_Vector_8::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5128506432:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5128506432; }
	{
		{
			__jule_std_vector_heap_move<jule::Any>((*this)._field__buffer.heap,_23917_i,_23917_i - _22347_n);
		}
	}
	_iter_next_5128506432:;
	(_23917_i)++;
	goto _iter_begin_5128506432;
	_iter_end_5128506432:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _127ab7fa0_Vector_8::_method_insert(jule::Int _24829_i,jule::Any _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5128520080:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5128520080; }
	{
		{
			__jule_std_vector_heap_move<jule::Any>((*this)._field__buffer.heap,_26117_j,_26117_j + 1LL);
		}
	}
	_iter_next_5128520080:;
	(_26117_j)--;
	goto _iter_begin_5128520080;
	_iter_end_5128520080:;
	{
		__jule_std_vector_heap_assign<jule::Any>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _127ab7fa0_Vector_8 _127ab7fa0_Vector_8::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _127ab7fa0_Vector_8::_static_method_new(0LL);
	}
	_127ab7fa0_Vector_8 _29317_vec = _127ab7fa0_Vector_8::_static_method_new(_27240_end - _27228_start);
	{
		__jule_std_vector_copy_range<jule::Any>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Any) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _127ab7fa0_Vector_8 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _127ab7fa0_Vector_9 _127ab7fa0_Vector_9::_static_method_new(jule::Int _4319_cap) {
	_127ab7fa0_Vector_9 _4417_vec = _127ab7fa0_Vector_9();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _127ab7fa0_Vector_9::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return _5413_t * 2LL;
}



inline void _127ab7fa0_Vector_9::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_1303533b0_Var>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_1303533b0_Var>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_1303533b0_Var>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _127ab7fa0_Vector_9::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _127ab7fa0_Vector_9::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _127ab7fa0_Vector_9::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _127ab7fa0_Vector_9::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _127ab7fa0_Vector_9::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_1303533b0_Var> _127ab7fa0_Vector_9::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_1303533b0_Var>>((*this)._field__buffer.heap,_11525_i);
}



inline void _127ab7fa0_Vector_9::_method_set(jule::Int _12326_i,jule::Ref<_1303533b0_Var> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_1303533b0_Var>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _127ab7fa0_Vector_9::_method_push(jule::Ref<_1303533b0_Var> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_1303533b0_Var>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _127ab7fa0_Vector_9::_method_push_front(jule::Ref<_1303533b0_Var> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5129698672:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5129698672; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1303533b0_Var>>((*this)._field__buffer.heap,_15217_i,_15217_i + 1LL);
		}
	}
	_iter_next_5129698672:;
	(_15217_i)--;
	goto _iter_begin_5129698672;
	_iter_end_5129698672:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_1303533b0_Var>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _127ab7fa0_Vector_9::_method_append(jule::Slice<jule::Ref<_1303533b0_Var>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_1303533b0_Var>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1303533b0_Var>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_1303533b0_Var>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _127ab7fa0_Vector_9::_method_merge(_127ab7fa0_Vector_9 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_1303533b0_Var>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1303533b0_Var>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _127ab7fa0_Vector_9::_method_merge_front(_127ab7fa0_Vector_9 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5129741104:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5129741104; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1303533b0_Var>>((*this)._field__buffer.heap,_20517_i,_20517_i + _19738_vec._field__buffer.len);
		}
	}
	_iter_next_5129741104:;
	(_20517_i)--;
	goto _iter_begin_5129741104;
	_iter_end_5129741104:;
	{
		__jule_std_vector_copy_range<jule::Ref<_1303533b0_Var>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _127ab7fa0_Vector_9::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5129764656:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5129764656; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1303533b0_Var>>((*this)._field__buffer.heap,_23917_i,_23917_i - _22347_n);
		}
	}
	_iter_next_5129764656:;
	(_23917_i)++;
	goto _iter_begin_5129764656;
	_iter_end_5129764656:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _127ab7fa0_Vector_9::_method_insert(jule::Int _24829_i,jule::Ref<_1303533b0_Var> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5129778304:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5129778304; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1303533b0_Var>>((*this)._field__buffer.heap,_26117_j,_26117_j + 1LL);
		}
	}
	_iter_next_5129778304:;
	(_26117_j)--;
	goto _iter_begin_5129778304;
	_iter_end_5129778304:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_1303533b0_Var>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _127ab7fa0_Vector_9 _127ab7fa0_Vector_9::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _127ab7fa0_Vector_9::_static_method_new(0LL);
	}
	_127ab7fa0_Vector_9 _29317_vec = _127ab7fa0_Vector_9::_static_method_new(_27240_end - _27228_start);
	{
		__jule_std_vector_copy_range<jule::Ref<_1303533b0_Var>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1303533b0_Var>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _127ab7fa0_Vector_9 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _127ab7fa0_Vector_10 _127ab7fa0_Vector_10::_static_method_new(jule::Int _4319_cap) {
	_127ab7fa0_Vector_10 _4417_vec = _127ab7fa0_Vector_10();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _127ab7fa0_Vector_10::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return _5413_t * 2LL;
}



inline void _127ab7fa0_Vector_10::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_1304dc9b0_TypeAlias>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_1304dc9b0_TypeAlias>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_1304dc9b0_TypeAlias>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _127ab7fa0_Vector_10::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _127ab7fa0_Vector_10::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _127ab7fa0_Vector_10::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _127ab7fa0_Vector_10::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _127ab7fa0_Vector_10::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_1304dc9b0_TypeAlias> _127ab7fa0_Vector_10::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_1304dc9b0_TypeAlias>>((*this)._field__buffer.heap,_11525_i);
}



inline void _127ab7fa0_Vector_10::_method_set(jule::Int _12326_i,jule::Ref<_1304dc9b0_TypeAlias> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_1304dc9b0_TypeAlias>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _127ab7fa0_Vector_10::_method_push(jule::Ref<_1304dc9b0_TypeAlias> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_1304dc9b0_TypeAlias>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _127ab7fa0_Vector_10::_method_push_front(jule::Ref<_1304dc9b0_TypeAlias> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5129903376:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5129903376; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1304dc9b0_TypeAlias>>((*this)._field__buffer.heap,_15217_i,_15217_i + 1LL);
		}
	}
	_iter_next_5129903376:;
	(_15217_i)--;
	goto _iter_begin_5129903376;
	_iter_end_5129903376:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_1304dc9b0_TypeAlias>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _127ab7fa0_Vector_10::_method_append(jule::Slice<jule::Ref<_1304dc9b0_TypeAlias>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_1304dc9b0_TypeAlias>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1304dc9b0_TypeAlias>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_1304dc9b0_TypeAlias>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _127ab7fa0_Vector_10::_method_merge(_127ab7fa0_Vector_10 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_1304dc9b0_TypeAlias>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1304dc9b0_TypeAlias>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _127ab7fa0_Vector_10::_method_merge_front(_127ab7fa0_Vector_10 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5129948848:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5129948848; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1304dc9b0_TypeAlias>>((*this)._field__buffer.heap,_20517_i,_20517_i + _19738_vec._field__buffer.len);
		}
	}
	_iter_next_5129948848:;
	(_20517_i)--;
	goto _iter_begin_5129948848;
	_iter_end_5129948848:;
	{
		__jule_std_vector_copy_range<jule::Ref<_1304dc9b0_TypeAlias>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _127ab7fa0_Vector_10::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5129970464:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5129970464; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1304dc9b0_TypeAlias>>((*this)._field__buffer.heap,_23917_i,_23917_i - _22347_n);
		}
	}
	_iter_next_5129970464:;
	(_23917_i)++;
	goto _iter_begin_5129970464;
	_iter_end_5129970464:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _127ab7fa0_Vector_10::_method_insert(jule::Int _24829_i,jule::Ref<_1304dc9b0_TypeAlias> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5129984112:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5129984112; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_1304dc9b0_TypeAlias>>((*this)._field__buffer.heap,_26117_j,_26117_j + 1LL);
		}
	}
	_iter_next_5129984112:;
	(_26117_j)--;
	goto _iter_begin_5129984112;
	_iter_end_5129984112:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_1304dc9b0_TypeAlias>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _127ab7fa0_Vector_10 _127ab7fa0_Vector_10::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _127ab7fa0_Vector_10::_static_method_new(0LL);
	}
	_127ab7fa0_Vector_10 _29317_vec = _127ab7fa0_Vector_10::_static_method_new(_27240_end - _27228_start);
	{
		__jule_std_vector_copy_range<jule::Ref<_1304dc9b0_TypeAlias>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_1304dc9b0_TypeAlias>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _127ab7fa0_Vector_10 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _127ab7fa0_Vector_11 _127ab7fa0_Vector_11::_static_method_new(jule::Int _4319_cap) {
	_127ab7fa0_Vector_11 _4417_vec = _127ab7fa0_Vector_11();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _127ab7fa0_Vector_11::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return _5413_t * 2LL;
}



inline void _127ab7fa0_Vector_11::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_127ed52e0_Fn>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_127ed52e0_Fn>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_127ed52e0_Fn>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _127ab7fa0_Vector_11::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _127ab7fa0_Vector_11::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _127ab7fa0_Vector_11::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _127ab7fa0_Vector_11::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _127ab7fa0_Vector_11::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_127ed52e0_Fn> _127ab7fa0_Vector_11::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_127ed52e0_Fn>>((*this)._field__buffer.heap,_11525_i);
}



inline void _127ab7fa0_Vector_11::_method_set(jule::Int _12326_i,jule::Ref<_127ed52e0_Fn> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_127ed52e0_Fn>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _127ab7fa0_Vector_11::_method_push(jule::Ref<_127ed52e0_Fn> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_127ed52e0_Fn>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _127ab7fa0_Vector_11::_method_push_front(jule::Ref<_127ed52e0_Fn> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5130158784:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5130158784; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_127ed52e0_Fn>>((*this)._field__buffer.heap,_15217_i,_15217_i + 1LL);
		}
	}
	_iter_next_5130158784:;
	(_15217_i)--;
	goto _iter_begin_5130158784;
	_iter_end_5130158784:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_127ed52e0_Fn>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _127ab7fa0_Vector_11::_method_append(jule::Slice<jule::Ref<_127ed52e0_Fn>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_127ed52e0_Fn>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_127ed52e0_Fn>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_127ed52e0_Fn>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _127ab7fa0_Vector_11::_method_merge(_127ab7fa0_Vector_11 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_127ed52e0_Fn>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_127ed52e0_Fn>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _127ab7fa0_Vector_11::_method_merge_front(_127ab7fa0_Vector_11 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5130201216:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5130201216; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_127ed52e0_Fn>>((*this)._field__buffer.heap,_20517_i,_20517_i + _19738_vec._field__buffer.len);
		}
	}
	_iter_next_5130201216:;
	(_20517_i)--;
	goto _iter_begin_5130201216;
	_iter_end_5130201216:;
	{
		__jule_std_vector_copy_range<jule::Ref<_127ed52e0_Fn>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _127ab7fa0_Vector_11::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5130224768:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5130224768; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_127ed52e0_Fn>>((*this)._field__buffer.heap,_23917_i,_23917_i - _22347_n);
		}
	}
	_iter_next_5130224768:;
	(_23917_i)++;
	goto _iter_begin_5130224768;
	_iter_end_5130224768:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _127ab7fa0_Vector_11::_method_insert(jule::Int _24829_i,jule::Ref<_127ed52e0_Fn> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5130238416:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5130238416; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_127ed52e0_Fn>>((*this)._field__buffer.heap,_26117_j,_26117_j + 1LL);
		}
	}
	_iter_next_5130238416:;
	(_26117_j)--;
	goto _iter_begin_5130238416;
	_iter_end_5130238416:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_127ed52e0_Fn>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _127ab7fa0_Vector_11 _127ab7fa0_Vector_11::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _127ab7fa0_Vector_11::_static_method_new(0LL);
	}
	_127ab7fa0_Vector_11 _29317_vec = _127ab7fa0_Vector_11::_static_method_new(_27240_end - _27228_start);
	{
		__jule_std_vector_copy_range<jule::Ref<_127ed52e0_Fn>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_127ed52e0_Fn>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _127ab7fa0_Vector_11 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _127ab7fa0_Vector_12 _127ab7fa0_Vector_12::_static_method_new(jule::Int _4319_cap) {
	_127ab7fa0_Vector_12 _4417_vec = _127ab7fa0_Vector_12();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _127ab7fa0_Vector_12::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return _5413_t * 2LL;
}



inline void _127ab7fa0_Vector_12::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_127b2e960_Struct>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_127b2e960_Struct>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_127b2e960_Struct>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _127ab7fa0_Vector_12::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _127ab7fa0_Vector_12::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _127ab7fa0_Vector_12::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _127ab7fa0_Vector_12::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _127ab7fa0_Vector_12::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_127b2e960_Struct> _127ab7fa0_Vector_12::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_127b2e960_Struct>>((*this)._field__buffer.heap,_11525_i);
}



inline void _127ab7fa0_Vector_12::_method_set(jule::Int _12326_i,jule::Ref<_127b2e960_Struct> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_127b2e960_Struct>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _127ab7fa0_Vector_12::_method_push(jule::Ref<_127b2e960_Struct> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_127b2e960_Struct>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _127ab7fa0_Vector_12::_method_push_front(jule::Ref<_127b2e960_Struct> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5130366064:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5130366064; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_127b2e960_Struct>>((*this)._field__buffer.heap,_15217_i,_15217_i + 1LL);
		}
	}
	_iter_next_5130366064:;
	(_15217_i)--;
	goto _iter_begin_5130366064;
	_iter_end_5130366064:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_127b2e960_Struct>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _127ab7fa0_Vector_12::_method_append(jule::Slice<jule::Ref<_127b2e960_Struct>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_127b2e960_Struct>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_127b2e960_Struct>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_127b2e960_Struct>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _127ab7fa0_Vector_12::_method_merge(_127ab7fa0_Vector_12 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_127b2e960_Struct>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_127b2e960_Struct>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _127ab7fa0_Vector_12::_method_merge_front(_127ab7fa0_Vector_12 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5130403024:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5130403024; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_127b2e960_Struct>>((*this)._field__buffer.heap,_20517_i,_20517_i + _19738_vec._field__buffer.len);
		}
	}
	_iter_next_5130403024:;
	(_20517_i)--;
	goto _iter_begin_5130403024;
	_iter_end_5130403024:;
	{
		__jule_std_vector_copy_range<jule::Ref<_127b2e960_Struct>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _127ab7fa0_Vector_12::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5130430032:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5130430032; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_127b2e960_Struct>>((*this)._field__buffer.heap,_23917_i,_23917_i - _22347_n);
		}
	}
	_iter_next_5130430032:;
	(_23917_i)++;
	goto _iter_begin_5130430032;
	_iter_end_5130430032:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _127ab7fa0_Vector_12::_method_insert(jule::Int _24829_i,jule::Ref<_127b2e960_Struct> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5130442048:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5130442048; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_127b2e960_Struct>>((*this)._field__buffer.heap,_26117_j,_26117_j + 1LL);
		}
	}
	_iter_next_5130442048:;
	(_26117_j)--;
	goto _iter_begin_5130442048;
	_iter_end_5130442048:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_127b2e960_Struct>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _127ab7fa0_Vector_12 _127ab7fa0_Vector_12::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _127ab7fa0_Vector_12::_static_method_new(0LL);
	}
	_127ab7fa0_Vector_12 _29317_vec = _127ab7fa0_Vector_12::_static_method_new(_27240_end - _27228_start);
	{
		__jule_std_vector_copy_range<jule::Ref<_127b2e960_Struct>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_127b2e960_Struct>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _127ab7fa0_Vector_12 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _127ab7fa0_Vector_13 _127ab7fa0_Vector_13::_static_method_new(jule::Int _4319_cap) {
	_127ab7fa0_Vector_13 _4417_vec = _127ab7fa0_Vector_13();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _127ab7fa0_Vector_13::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return _5413_t * 2LL;
}



inline void _127ab7fa0_Vector_13::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_130099320_Trait>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_130099320_Trait>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_130099320_Trait>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _127ab7fa0_Vector_13::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _127ab7fa0_Vector_13::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _127ab7fa0_Vector_13::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _127ab7fa0_Vector_13::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _127ab7fa0_Vector_13::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_130099320_Trait> _127ab7fa0_Vector_13::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_130099320_Trait>>((*this)._field__buffer.heap,_11525_i);
}



inline void _127ab7fa0_Vector_13::_method_set(jule::Int _12326_i,jule::Ref<_130099320_Trait> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_130099320_Trait>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _127ab7fa0_Vector_13::_method_push(jule::Ref<_130099320_Trait> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_130099320_Trait>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _127ab7fa0_Vector_13::_method_push_front(jule::Ref<_130099320_Trait> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5130564080:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5130564080; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_130099320_Trait>>((*this)._field__buffer.heap,_15217_i,_15217_i + 1LL);
		}
	}
	_iter_next_5130564080:;
	(_15217_i)--;
	goto _iter_begin_5130564080;
	_iter_end_5130564080:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_130099320_Trait>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _127ab7fa0_Vector_13::_method_append(jule::Slice<jule::Ref<_130099320_Trait>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_130099320_Trait>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_130099320_Trait>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_130099320_Trait>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _127ab7fa0_Vector_13::_method_merge(_127ab7fa0_Vector_13 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_130099320_Trait>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_130099320_Trait>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _127ab7fa0_Vector_13::_method_merge_front(_127ab7fa0_Vector_13 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5130606512:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5130606512; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_130099320_Trait>>((*this)._field__buffer.heap,_20517_i,_20517_i + _19738_vec._field__buffer.len);
		}
	}
	_iter_next_5130606512:;
	(_20517_i)--;
	goto _iter_begin_5130606512;
	_iter_end_5130606512:;
	{
		__jule_std_vector_copy_range<jule::Ref<_130099320_Trait>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _127ab7fa0_Vector_13::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5130630064:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5130630064; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_130099320_Trait>>((*this)._field__buffer.heap,_23917_i,_23917_i - _22347_n);
		}
	}
	_iter_next_5130630064:;
	(_23917_i)++;
	goto _iter_begin_5130630064;
	_iter_end_5130630064:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _127ab7fa0_Vector_13::_method_insert(jule::Int _24829_i,jule::Ref<_130099320_Trait> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5130643712:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5130643712; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_130099320_Trait>>((*this)._field__buffer.heap,_26117_j,_26117_j + 1LL);
		}
	}
	_iter_next_5130643712:;
	(_26117_j)--;
	goto _iter_begin_5130643712;
	_iter_end_5130643712:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_130099320_Trait>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _127ab7fa0_Vector_13 _127ab7fa0_Vector_13::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _127ab7fa0_Vector_13::_static_method_new(0LL);
	}
	_127ab7fa0_Vector_13 _29317_vec = _127ab7fa0_Vector_13::_static_method_new(_27240_end - _27228_start);
	{
		__jule_std_vector_copy_range<jule::Ref<_130099320_Trait>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_130099320_Trait>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _127ab7fa0_Vector_13 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _127ab7fa0_Vector_14 _127ab7fa0_Vector_14::_static_method_new(jule::Int _4319_cap) {
	_127ab7fa0_Vector_14 _4417_vec = _127ab7fa0_Vector_14();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _127ab7fa0_Vector_14::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return _5413_t * 2LL;
}



inline void _127ab7fa0_Vector_14::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_13009ed30_Enum>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_13009ed30_Enum>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_13009ed30_Enum>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _127ab7fa0_Vector_14::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _127ab7fa0_Vector_14::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _127ab7fa0_Vector_14::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _127ab7fa0_Vector_14::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _127ab7fa0_Vector_14::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_13009ed30_Enum> _127ab7fa0_Vector_14::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_13009ed30_Enum>>((*this)._field__buffer.heap,_11525_i);
}



inline void _127ab7fa0_Vector_14::_method_set(jule::Int _12326_i,jule::Ref<_13009ed30_Enum> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_13009ed30_Enum>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _127ab7fa0_Vector_14::_method_push(jule::Ref<_13009ed30_Enum> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_13009ed30_Enum>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _127ab7fa0_Vector_14::_method_push_front(jule::Ref<_13009ed30_Enum> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5130791680:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5130791680; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_13009ed30_Enum>>((*this)._field__buffer.heap,_15217_i,_15217_i + 1LL);
		}
	}
	_iter_next_5130791680:;
	(_15217_i)--;
	goto _iter_begin_5130791680;
	_iter_end_5130791680:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_13009ed30_Enum>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _127ab7fa0_Vector_14::_method_append(jule::Slice<jule::Ref<_13009ed30_Enum>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_13009ed30_Enum>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_13009ed30_Enum>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_13009ed30_Enum>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _127ab7fa0_Vector_14::_method_merge(_127ab7fa0_Vector_14 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_13009ed30_Enum>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_13009ed30_Enum>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _127ab7fa0_Vector_14::_method_merge_front(_127ab7fa0_Vector_14 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5130835136:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5130835136; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_13009ed30_Enum>>((*this)._field__buffer.heap,_20517_i,_20517_i + _19738_vec._field__buffer.len);
		}
	}
	_iter_next_5130835136:;
	(_20517_i)--;
	goto _iter_begin_5130835136;
	_iter_end_5130835136:;
	{
		__jule_std_vector_copy_range<jule::Ref<_13009ed30_Enum>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _127ab7fa0_Vector_14::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5130858688:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5130858688; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_13009ed30_Enum>>((*this)._field__buffer.heap,_23917_i,_23917_i - _22347_n);
		}
	}
	_iter_next_5130858688:;
	(_23917_i)++;
	goto _iter_begin_5130858688;
	_iter_end_5130858688:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _127ab7fa0_Vector_14::_method_insert(jule::Int _24829_i,jule::Ref<_13009ed30_Enum> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5130872336:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5130872336; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_13009ed30_Enum>>((*this)._field__buffer.heap,_26117_j,_26117_j + 1LL);
		}
	}
	_iter_next_5130872336:;
	(_26117_j)--;
	goto _iter_begin_5130872336;
	_iter_end_5130872336:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_13009ed30_Enum>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _127ab7fa0_Vector_14 _127ab7fa0_Vector_14::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _127ab7fa0_Vector_14::_static_method_new(0LL);
	}
	_127ab7fa0_Vector_14 _29317_vec = _127ab7fa0_Vector_14::_static_method_new(_27240_end - _27228_start);
	{
		__jule_std_vector_copy_range<jule::Ref<_13009ed30_Enum>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_13009ed30_Enum>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _127ab7fa0_Vector_14 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}

inline _127ab7fa0_Vector_15 _127ab7fa0_Vector_15::_static_method_new(jule::Int _4319_cap) {
	_127ab7fa0_Vector_15 _4417_vec = _127ab7fa0_Vector_15();
	if (_4319_cap != 0LL) {
		_4417_vec._method_resize_alloc(_4319_cap);
	}
	return _4417_vec;
}



inline jule::Int _127ab7fa0_Vector_15::_method_calc_grow(jule::Int _5324_delta) {
	jule::Int _5413_t = (*this)._field__buffer.len + _5324_delta;
	return _5413_t * 2LL;
}



inline void _127ab7fa0_Vector_15::_method_resize_alloc(jule::Int _5831_n) {
	void* _5917_new_heap = __jule_std_vector_alloc<jule::Ref<_12791ab70_Impl>>(_5831_n);
	if (_5917_new_heap == nullptr) {
		jule::panic(jule::Str("Vector[T].resize_alloc: heap reallocation failed", 48));
	}
	if ((*this)._field__buffer.heap == nullptr) {
		(*this)._field__buffer.heap=_5917_new_heap;
		(*this)._field__buffer.cap=_5831_n;
		return;
	}
	{
		if ((*this)._field__buffer.len > 0LL) {
			__jule_std_vector_copy_range<jule::Ref<_12791ab70_Impl>>(_5917_new_heap,(*this)._field__buffer.heap,(*this)._field__buffer.len);
		}
		__jule_std_vector_dealloc<jule::Ref<_12791ab70_Impl>>((*this)._field__buffer.heap);
		(*this)._field__buffer.heap=_5917_new_heap;
	}
	(*this)._field__buffer.cap=_5831_n;
}



inline void _127ab7fa0_Vector_15::_method_review_allocation(jule::Int _8336_delta) {
	if (((*this)._field__buffer.len + _8336_delta) > (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(static_cast<jule::Int>((*this)._method_calc_grow(_8336_delta)));
	}
}



inline jule::Int _127ab7fa0_Vector_15::_method_len(void) {
	return (*this)._field__buffer.len;
}



inline jule::Int _127ab7fa0_Vector_15::_method_cap(void) {
	return (*this)._field__buffer.cap;
}



inline void _127ab7fa0_Vector_15::_method_dealloc(void) {
	(*this)._field__buffer.drop();
}



inline void _127ab7fa0_Vector_15::_method_set_len(jule::Int _10330_n) {
	if (_10330_n < 0LL) {
		(*this)._field__buffer.len=0LL;
		return;
	}
	if (_10330_n >= (*this)._field__buffer.len) {
		return;
	}
	(*this)._field__buffer.len=_10330_n;
}



inline jule::Ref<_12791ab70_Impl> _127ab7fa0_Vector_15::_method_at(jule::Int _11525_i) {
	if ((_11525_i < 0LL) || (_11525_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].at: out of range", 26));
	}
	return __jule_std_vector_deref<jule::Ref<_12791ab70_Impl>>((*this)._field__buffer.heap,_11525_i);
}



inline void _127ab7fa0_Vector_15::_method_set(jule::Int _12326_i,jule::Ref<_12791ab70_Impl> _12338_item) {
	if ((_12326_i < 0LL) || (_12326_i >= (*this)._field__buffer.len)) {
		jule::panic(jule::Str("Vector[T].set: out of range", 27));
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_12791ab70_Impl>>((*this)._field__buffer.heap,_12326_i,_12338_item);
	}
}



inline void _127ab7fa0_Vector_15::_method_push(jule::Ref<_12791ab70_Impl> _13131_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	{
		__jule_std_vector_heap_assign<jule::Ref<_12791ab70_Impl>>((*this)._field__buffer.heap,(*this)._field__buffer.len,_13131_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _127ab7fa0_Vector_15::_method_push_front(jule::Ref<_12791ab70_Impl> _14637_item) {
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _15217_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5131002192:;
	if (!(_15217_i >= 0LL)) { goto _iter_end_5131002192; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_12791ab70_Impl>>((*this)._field__buffer.heap,_15217_i,_15217_i + 1LL);
		}
	}
	_iter_next_5131002192:;
	(_15217_i)--;
	goto _iter_begin_5131002192;
	_iter_end_5131002192:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_12791ab70_Impl>>((*this)._field__buffer.heap,0LL,_14637_item);
	}
	((*this)._field__buffer.len)++;
}



inline void _127ab7fa0_Vector_15::_method_append(jule::Slice<jule::Ref<_12791ab70_Impl>> _16333_items) {
	if (_16333_items.len() == 0LL) {
		return;
	}
	(*this)._method_review_allocation(static_cast<jule::I64>(_16333_items.len()));
	{
		__jule_std_vector_copy_range<jule::Ref<_12791ab70_Impl>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_12791ab70_Impl>) * (*this)._field__buffer.len))),__jule_get_pointer_of_slice<jule::Ref<_12791ab70_Impl>>(_16333_items),static_cast<jule::I64>(_16333_items.len()));
	}
	(*this)._field__buffer.len+=static_cast<jule::I64>(_16333_items.len());
}



inline void _127ab7fa0_Vector_15::_method_merge(_127ab7fa0_Vector_15 _18032_vec) {
	if (_18032_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_18032_vec._field__buffer.len);
	{
		__jule_std_vector_copy_range<jule::Ref<_12791ab70_Impl>>(((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_12791ab70_Impl>) * (*this)._field__buffer.len))),_18032_vec._field__buffer.heap,_18032_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_18032_vec._field__buffer.len;
}



inline void _127ab7fa0_Vector_15::_method_merge_front(_127ab7fa0_Vector_15 _19738_vec) {
	if (_19738_vec._field__buffer.len == 0LL) {
		return;
	}
	(*this)._method_review_allocation(_19738_vec._field__buffer.len);
	jule::Int _20517_i = (*this)._field__buffer.len - 1LL;
	_iter_begin_5131045776:;
	if (!(_20517_i >= 0LL)) { goto _iter_end_5131045776; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_12791ab70_Impl>>((*this)._field__buffer.heap,_20517_i,_20517_i + _19738_vec._field__buffer.len);
		}
	}
	_iter_next_5131045776:;
	(_20517_i)--;
	goto _iter_begin_5131045776;
	_iter_end_5131045776:;
	{
		__jule_std_vector_copy_range<jule::Ref<_12791ab70_Impl>>((*this)._field__buffer.heap,_19738_vec._field__buffer.heap,_19738_vec._field__buffer.len);
	}
	(*this)._field__buffer.len+=_19738_vec._field__buffer.len;
}



inline void _127ab7fa0_Vector_15::_method_remove_range(jule::Int _22335_start,jule::Int _22347_n) {
	if (_22347_n < 1LL) {
		return;
	}
	if (_22335_start < -1LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at negative index", 57));
	}
	if (_22335_start >= (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].remove_range: removing starts at out of range", 55));
	}
	if ((((*this)._field__buffer.len - _22335_start) - _22347_n) < 0LL) {
		jule::panic(jule::Str("Vector[T].remove_range: removing continues at out of range ", 59));
	}
	jule::Int _23917_i = _22335_start + _22347_n;
	_iter_begin_5131069328:;
	if (!(_23917_i < (*this)._field__buffer.len)) { goto _iter_end_5131069328; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_12791ab70_Impl>>((*this)._field__buffer.heap,_23917_i,_23917_i - _22347_n);
		}
	}
	_iter_next_5131069328:;
	(_23917_i)++;
	goto _iter_begin_5131069328;
	_iter_end_5131069328:;
	(*this)._field__buffer.len-=_22347_n;
}



inline void _127ab7fa0_Vector_15::_method_insert(jule::Int _24829_i,jule::Ref<_12791ab70_Impl> _24841_item) {
	if (_24829_i < 0LL) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at negative index", 52));
	}
	if (_24829_i > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].insert: insertion starts at out of range", 50));
	}
	if ((*this)._field__buffer.len >= (*this)._field__buffer.cap) {
		(*this)._method_resize_alloc(((*this)._field__buffer.cap * 2LL) + 1LL);
	}
	jule::Int _26117_j = (*this)._field__buffer.len - 1LL;
	_iter_begin_5131082976:;
	if (!(_26117_j >= _24829_i)) { goto _iter_end_5131082976; }
	{
		{
			__jule_std_vector_heap_move<jule::Ref<_12791ab70_Impl>>((*this)._field__buffer.heap,_26117_j,_26117_j + 1LL);
		}
	}
	_iter_next_5131082976:;
	(_26117_j)--;
	goto _iter_begin_5131082976;
	_iter_end_5131082976:;
	{
		__jule_std_vector_heap_assign<jule::Ref<_12791ab70_Impl>>((*this)._field__buffer.heap,_24829_i,_24841_item);
	}
	((*this)._field__buffer.len)++;
}



inline _127ab7fa0_Vector_15 _127ab7fa0_Vector_15::_method_slice(jule::Int _27228_start,jule::Int _27240_end) {
	if (_27228_start < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at negative index", 49));
	}
	if (_27228_start > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing starts at out of range", 47));
	}
	if (_27240_end > (*this)._field__buffer.len) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at out of range", 45));
	}
	if (_27240_end < 0LL) {
		jule::panic(jule::Str("Vector[T].slice: slicing ends at negative index", 47));
	}
	if (_27228_start > _27240_end) {
		jule::panic(jule::Str("Vector[T].slice: start point < end point", 40));
	}
	if (_27228_start == _27240_end) {
		return _127ab7fa0_Vector_15::_static_method_new(0LL);
	}
	_127ab7fa0_Vector_15 _29317_vec = _127ab7fa0_Vector_15::_static_method_new(_27240_end - _27228_start);
	{
		__jule_std_vector_copy_range<jule::Ref<_12791ab70_Impl>>(_29317_vec._field__buffer.heap,((void*)(((jule::Uintptr)((*this)._field__buffer.heap)) + (sizeof(jule::Ref<_12791ab70_Impl>) * _27228_start))),_29317_vec._field__buffer.cap);
	}
	_29317_vec._field__buffer.len=_29317_vec._field__buffer.cap;
	return _29317_vec;
}







std::ostream &operator<<(std::ostream &_Stream, const _127ab7fa0_Vector_15 &_Src) {
	_Stream << "Vector{";
	_Stream << "_buffer: cpp._field__buffer";
	_Stream << "}";
	return _Stream;
}



inline jule::Bool _126f67810_File::_method_is_ok(void) {
	jule::Int _1817_err;
	std::tie(std::ignore,_1817_err) = _136e09ef0_stat((*this)._field__path);
	return _1817_err == 0LLU;
}



inline jule::Str _126f67810_File::_method_path(void) {
	return (*this)._field__path;
}



inline jule::Str _126f67810_File::_method_dir(void) {
	return _136ec98d0_dir((*this)._field__path);
}



inline jule::Str _126f67810_File::_method_name(void) {
	return _136ec98d0_base((*this)._field__path);
}



inline jule::Uintptr _126f67810_File::_method_addr(void) {
	return ((jule::Uintptr)((&((*this)))));
}



inline _127ab7fa0_Vector_0 _126f67810_File::_method_tokens(void) {
	return (*this)._field__tokens;
}







std::ostream &operator<<(std::ostream &_Stream, const _126f67810_File &_Src) {
	_Stream << "File{";
	_Stream << "_path:" << _Src._field__path << ", ";
	_Stream << "_tokens:" << _Src._field__tokens;
	_Stream << "}";
	return _Stream;
}



inline void _127774a70_Lex::_method_push_err(jule::Str _39927_key,jule::Slice<jule::Any> _39937_args) {
	(*this)._field_errors=append((*this)._field_errors,jule::Slice<_136e99d00_Log>({_127774a70_make_err((*this)._field_row,(*this)._field_column,(*this)._field_file,_39927_key,_39937_args)}));
}



inline void _127774a70_Lex::_method_push_err_tok(_127941de0_Token _40431_token,jule::Str _40445_key) {
	(*this)._field_errors=append((*this)._field_errors,jule::Slice<_136e99d00_Log>({_127774a70_make_err(_40431_token._field_row,_40431_token._field_column,(*this)._field_file,_40445_key,jule::Slice<jule::Any>({}))}));
}



inline void _127774a70_Lex::_method_lex(void) {
	(*this)._field_errors=nullptr;
	(*this)._method_new_line();
	_iter_begin_5369238768:;
	if (!((*this)._field_pos < (*this)._field_data.len())) { goto _iter_end_5369238768; }
	{
		_127941de0_Token _41421_token = (*this)._method_token();
		(*this)._field_first_token_of_line=false;
		if (_41421_token._field_id != 0LLU) {
			(*this)._field_tokens._method_push(_41421_token);
		}
	}
	_iter_next_5369238768:;
	goto _iter_begin_5369238768;
	_iter_end_5369238768:;
	(*this)._field_data=nullptr;
}



inline jule::Str _127774a70_Lex::_method_id(jule::Slice<jule::U8> _42521_ln) {
	if (_42521_ln.len() == 0LL) {
		return jule::Str("", 0);
	}
	if ((_42521_ln[static_cast<jule::Int>(0LL)] != '_') && (!(_127941de0_is_letter(static_cast<jule::I32>(_42521_ln[static_cast<jule::Int>(0LL)]))))) {
		return jule::Str("", 0);
	}
	{
		auto &__julec_range_expr = _42521_ln;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _127774a70_i = 0;
			jule::U8 _127774a70_r = *__julec_range_begin;
			_iter_begin_5369252656:;
			{
				if (((_127774a70_r != '_') && (!(_127941de0_is_decimal(static_cast<jule::U8>(_127774a70_r))))) && (!(_127941de0_is_letter(_127774a70_r)))) {
					return static_cast<jule::Str>(_42521_ln.slice(0LL,static_cast<jule::Int>(_127774a70_i)));
				}
				((*this)._field_pos)++;
			}
			_iter_next_5369252656:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_127774a70_i; _127774a70_r = *__julec_range_begin; goto _iter_begin_5369252656; }
			_iter_end_5369252656:;
		}
	}
	return static_cast<jule::Str>(_42521_ln);
}



inline jule::Slice<jule::U8> _127774a70_Lex::_method_resume(void) {
	jule::Int _44617_i = (*this)._field_pos;
	_iter_begin_5369263456:;
	if (!(_44617_i < (*this)._field_data.len())) { goto _iter_end_5369263456; }
	{
		jule::I32 _44817_r = static_cast<jule::I32>((*this)._field_data[static_cast<jule::Int>(_44617_i)]);
		if (_127941de0_is_space(_44817_r)) {
			((*this)._field_pos)++;
			{
				auto &_match_expr{ _44817_r };
				if (!(('\n') == _match_expr)) { goto _case_end_5369269808; }
				_case_begin_5369269808:;
				{
					(*this)._method_new_line();
				}
				goto _match_end_5369268240;
				_case_end_5369269808:;
				if (!(('\t') == _match_expr)) { goto _case_end_5369270480; }
				_case_begin_5369270480:;
				{
					(*this)._field_column+=4LL;
				}
				goto _match_end_5369268240;
				_case_end_5369270480:;
				_case_begin_5369268912:;
				{
					((*this)._field_column)++;
				}
				goto _match_end_5369268240;
				_case_end_5369268912:;
				_match_end_5369268240:;
			}
			goto _iter_next_5369263456;
		}
		jule::Int _45921_j = _44617_i;
		_iter_begin_5369267248:;
		if (!(_45921_j < (*this)._field_data.len())) { goto _iter_end_5369267248; }
		{
			jule::U8 _46121_r = (*this)._field_data[static_cast<jule::Int>(_45921_j)];
			if (_46121_r == '\n') {
				goto _iter_end_5369267248;
			}
		}
		_iter_next_5369267248:;
		(_45921_j)++;
		goto _iter_begin_5369267248;
		_iter_end_5369267248:;
		return (*this)._field_data.slice(static_cast<jule::Int>(_44617_i),static_cast<jule::Int>(_45921_j));
	}
	_iter_next_5369263456:;
	(_44617_i)++;
	goto _iter_begin_5369263456;
	_iter_end_5369263456:;
	return nullptr;
}



inline void _127774a70_Lex::_method_lex_line_comment(_127941de0_Token& _47240_token) {
	jule::Int _47313_start = (*this)._field_pos;
	(*this)._field_pos+=2LL;
	_iter_begin_5369283024:;
	if (!((*this)._field_pos < (*this)._field_data.len())) { goto _iter_end_5369283024; }
	{
		jule::U8 _47717_r = (*this)._field_data[static_cast<jule::Int>((*this)._field_pos)];
		if ((_47717_r == '\n') || (_47717_r == '\r')) {
			if ((*this)._field_first_token_of_line) {
				_47240_token._field_id=18LLU;
				_47240_token._field_kind=static_cast<jule::Str>((*this)._field_data.slice(static_cast<jule::Int>(_47313_start),static_cast<jule::Int>((*this)._field_pos)));
			}
			return;
		}
	}
	_iter_next_5369283024:;
	((*this)._field_pos)++;
	goto _iter_begin_5369283024;
	_iter_end_5369283024:;
	if ((*this)._field_first_token_of_line) {
		_47240_token._field_id=18LLU;
		_47240_token._field_kind=static_cast<jule::Str>((*this)._field_data.slice(static_cast<jule::Int>(_47313_start)));
	}
}



inline void _127774a70_Lex::_method_lex_range_comment(void) {
	(*this)._field_pos+=2LL;
	_iter_begin_5369299856:;
	if (!((*this)._field_pos < (*this)._field_data.len())) { goto _iter_end_5369299856; }
	{
		jule::U8 _49617_r = (*this)._field_data[static_cast<jule::Int>((*this)._field_pos)];
		if (_49617_r == '\r') {
			goto _iter_next_5369299856;
		}
		if (_49617_r == '\n') {
			(*this)._method_new_line();
			goto _iter_next_5369299856;
		}
		(*this)._field_column+=1LL;
		if (((((*this)._field_pos + 1LL) < (*this)._field_data.len()) && (_49617_r == '*')) && ((*this)._field_data[static_cast<jule::Int>((*this)._field_pos + 1LL)] == '/')) {
			(*this)._field_column+=2LL;
			(*this)._field_pos+=2LL;
			return;
		}
	}
	_iter_next_5369299856:;
	((*this)._field_pos)++;
	goto _iter_begin_5369299856;
	_iter_end_5369299856:;
	(*this)._method_push_err(jule::Str("missing_block_comment", 21),jule::Slice<jule::Any>({}));
}



inline jule::Str _127774a70_Lex::_method_num(jule::Slice<jule::U8> _51522_txt) {
	jule::Str _51537_lit = jule::Str();
	_51537_lit=_127774a70_hex_num(_51522_txt);
	if (_51537_lit != jule::Str("", 0)) {
		goto _julec_label_end;
	}
	_51537_lit=_127774a70_octal_num(_51522_txt);
	if (_51537_lit != jule::Str("", 0)) {
		goto _julec_label_end;
	}
	_51537_lit=_127774a70_binary_num(_51522_txt);
	if (_51537_lit != jule::Str("", 0)) {
		goto _julec_label_end;
	}
	_51537_lit=_127774a70_common_num(_51522_txt);
	_julec_label_end:;
	(*this)._field_pos+=static_cast<jule::I64>(_51537_lit.len());
	return _51537_lit;
}



inline jule::Str _127774a70_Lex::_method_escape_seq(jule::Slice<jule::U8> _53429_txt) {
	jule::Str _53517_seq = jule::Str("", 0);
	if (_53429_txt.len() < 2LL) {
		goto _julec_label_end;
	}
	{
		auto &_match_expr{ _53429_txt[static_cast<jule::Int>(1LL)] };
		if (!(('\\') == _match_expr || ('\'') == _match_expr || ('\"') == _match_expr || ('a') == _match_expr || ('b') == _match_expr || ('f') == _match_expr || ('n') == _match_expr || ('r') == _match_expr || ('t') == _match_expr || ('v') == _match_expr)) { goto _case_end_5369337872; }
		_case_begin_5369337872:;
		{
			(*this)._field_pos+=2LL;
			return static_cast<jule::Str>(_53429_txt.slice(0LL,static_cast<jule::Int>(2LL)));
		}
		goto _match_end_5369335648;
		_case_end_5369337872:;
		if (!(('U') == _match_expr)) { goto _case_end_5369337184; }
		_case_begin_5369337184:;
		{
			_53517_seq=_127774a70_big_unicode_point_escape(_53429_txt);
		}
		goto _match_end_5369335648;
		_case_end_5369337184:;
		if (!(('u') == _match_expr)) { goto _case_end_5369337616; }
		_case_begin_5369337616:;
		{
			_53517_seq=_127774a70_little_unicode_point_escape(_53429_txt);
		}
		goto _match_end_5369335648;
		_case_end_5369337616:;
		if (!(('x') == _match_expr)) { goto _case_end_5369336288; }
		_case_begin_5369336288:;
		{
			_53517_seq=_127774a70_hex_byte_escape(_53429_txt);
		}
		goto _match_end_5369335648;
		_case_end_5369336288:;
		_case_begin_5369334928:;
		{
			_53517_seq=_127774a70_byte_escape(_53429_txt);
		}
		goto _match_end_5369335648;
		_case_end_5369334928:;
		_match_end_5369335648:;
	}
	_julec_label_end:;
	if (_53517_seq == jule::Str("", 0)) {
		((*this)._field_pos)++;
		(*this)._method_push_err(jule::Str("invalid_escape_sequence", 23),jule::Slice<jule::Any>({}));
		return jule::Str("", 0);
	}
	(*this)._field_pos+=static_cast<jule::I64>(_53517_seq.len());
	return _53517_seq;
}



inline jule::Str _127774a70_Lex::_method_get_rune(jule::Slice<jule::U8> _56827_txt,jule::Bool _56840_raw) {
	if ((!(_56840_raw)) && (_56827_txt[static_cast<jule::Int>(0LL)] == '\\')) {
		return (*this)._method_escape_seq(_56827_txt);
	}
	jule::I32 _57314_r;
	jule::Int _57317_n;
	std::tie(_57314_r,_57317_n) = _1275d1920_decode_rune(_56827_txt);
	(*this)._field_pos+=_57317_n;
	return static_cast<jule::Str>(_57314_r);
}



inline jule::Str _127774a70_Lex::_method_lex_rune(jule::Slice<jule::U8> _57827_txt) {
	jule::Str _57917_run = jule::Str("'", 1);
	((*this)._field_column)++;
	jule::Int _58117_n = 0LL;
	jule::Int _58217_i = 1LL;
	_iter_begin_5369361728:;
	if (!(_58217_i < _57827_txt.len())) { goto _iter_end_5369361728; }
	{
		if (_57827_txt[static_cast<jule::Int>(_58217_i)] == '\r') {
			goto _iter_next_5369361728;
		}
		if (_57827_txt[static_cast<jule::Int>(_58217_i)] == '\n') {
			(*this)._method_push_err(jule::Str("missing_rune_end", 16),jule::Slice<jule::Any>({}));
			((*this)._field_pos)++;
			(*this)._method_new_line();
			return jule::Str("", 0);
		}
		jule::Str _59417_r = (*this)._method_get_rune(_57827_txt.slice(static_cast<jule::Int>(_58217_i)),false);
		_57917_run+=_59417_r;
		jule::I64 _59617_length = _59417_r.len();
		(*this)._field_column+=_59617_length;
		if (_59417_r == jule::Str("'", 1)) {
			((*this)._field_pos)++;
			goto _iter_end_5369361728;
		}
		if (_59617_length > 1LL) {
			_58217_i+=_59617_length - 1LL;
		}
		(_58117_n)++;
	}
	_iter_next_5369361728:;
	(_58217_i)++;
	goto _iter_begin_5369361728;
	_iter_end_5369361728:;
	if (_58117_n == 0LL) {
		(*this)._method_push_err(jule::Str("rune_empty", 10),jule::Slice<jule::Any>({}));
	} else if (_58117_n > 1LL) {
		(*this)._method_push_err(jule::Str("rune_overflow", 13),jule::Slice<jule::Any>({}));
	}
	return _57917_run;
}



inline jule::Str _127774a70_Lex::_method_lex_str(void) {
	jule::Str _61817_s = jule::Str("", 0);
	jule::U8 _61913_mark = (*this)._field_data[static_cast<jule::Int>((*this)._field_pos)];
	((*this)._field_pos)++;
	jule::Bool _62113_raw = _61913_mark == '`';
	_61817_s+=static_cast<jule::Str>(_61913_mark);
	((*this)._field_column)++;
	_iter_begin_5369394032:;
	if (!((*this)._field_pos < (*this)._field_data.len())) { goto _iter_end_5369394032; }
	{
		jule::U8 _62617_ch = (*this)._field_data[static_cast<jule::Int>((*this)._field_pos)];
		if (_62617_ch == '\r') {
			goto _iter_next_5369394032;
		}
		if (_62617_ch == '\n') {
			(*this)._method_new_line();
			if ((!(_62113_raw))) {
				(*this)._method_push_err(jule::Str("missing_string_end", 18),jule::Slice<jule::Any>({}));
				((*this)._field_pos)++;
				return jule::Str("", 0);
			}
		}
		jule::Str _63817_r = (*this)._method_get_rune((*this)._field_data.slice(static_cast<jule::Int>((*this)._field_pos)),_62113_raw);
		_61817_s+=_63817_r;
		(*this)._field_column+=static_cast<jule::I64>(_63817_r.len());
		if (_62617_ch == _61913_mark) {
			goto _iter_end_5369394032;
		}
	}
	_iter_next_5369394032:;
	goto _iter_begin_5369394032;
	_iter_end_5369394032:;
	return _61817_s;
}



inline void _127774a70_Lex::_method_new_line(void) {
	(*this)._field_first_token_of_line=true;
	((*this)._field_row)++;
	(*this)._field_column=1LL;
}



inline jule::Bool _127774a70_Lex::_method_is_op(jule::Slice<jule::U8> _65524_txt,jule::Str _65537_kind,jule::Uint _65548_id,_127941de0_Token& _65566_t) {
	if ((!(_127774a70_bytes_has_prefix(_65524_txt,_65537_kind)))) {
		return false;
	}
	_65566_t._field_kind=_65537_kind;
	_65566_t._field_id=_65548_id;
	(*this)._field_pos+=static_cast<jule::I64>(_65537_kind.len());
	return true;
}



inline jule::Bool _127774a70_Lex::_method_lex_basic_ops(jule::Slice<jule::U8> _66632_txt,_127941de0_Token& _66650_tok) {
	{
		auto &__julec_range_expr = _127774a70_BASIC_OPS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_127774a70_KindPair _127774a70_pair = *__julec_range_begin;
			_iter_begin_5369425408:;
			{
				if ((*this)._method_is_op(_66632_txt,_127774a70_pair._field_kind,_127774a70_pair._field_id,_66650_tok)) {
					return true;
				}
			}
			_iter_next_5369425408:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127774a70_pair = *__julec_range_begin; goto _iter_begin_5369425408; }
			_iter_end_5369425408:;
		}
	}
	return false;
}



inline jule::Bool _127774a70_Lex::_method_lex_id(jule::Slice<jule::U8> _67625_txt,_127941de0_Token& _67643_t) {
	jule::Str _67713_lex = (*this)._method_id(_67625_txt);
	if (_67713_lex == jule::Str("", 0)) {
		return false;
	}
	_67643_t._field_kind=_67713_lex;
	_67643_t._field_id=2LLU;
	return true;
}



inline jule::Bool _127774a70_Lex::_method_lex_num(jule::Slice<jule::U8> _68726_txt,_127941de0_Token& _68744_t) {
	jule::Str _68813_lex = (*this)._method_num(_68726_txt);
	if (_68813_lex == jule::Str("", 0)) {
		return false;
	}
	_68744_t._field_kind=_68813_lex;
	_68744_t._field_id=6LLU;
	return true;
}



inline _127941de0_Token _127774a70_Lex::_method_token(void) {
	_127941de0_Token _70017_t = _127941de0_Token((*this)._field_file,jule::Int(),jule::Int(),jule::Str(),0LLU);
	jule::Slice<jule::U8> _70213_txt = (*this)._method_resume();
	if (_70213_txt == nullptr) {
		return _70017_t;
	}
	_70017_t._field_column=(*this)._field_column;
	_70017_t._field_row=(*this)._field_row;
	{
		if (!(((*this)._method_lex_num(_70213_txt,_70017_t)))) { goto _case_end_5369451552; }
		goto _match_end_5369450928;
		_case_end_5369451552:;
		if (!((_70213_txt[static_cast<jule::Int>(0LL)] == '\''))) { goto _case_end_5369451664; }
		_case_begin_5369451664:;
		{
			_70017_t._field_kind=(*this)._method_lex_rune(_70213_txt);
			_70017_t._field_id=6LLU;
			return _70017_t;
		}
		goto _match_end_5369450928;
		_case_end_5369451664:;
		if (!(((_70213_txt[static_cast<jule::Int>(0LL)] == '\"') || (_70213_txt[static_cast<jule::Int>(0LL)] == '`')))) { goto _case_end_5369451776; }
		_case_begin_5369451776:;
		{
			_70017_t._field_kind=(*this)._method_lex_str();
			_70017_t._field_id=6LLU;
			return _70017_t;
		}
		goto _match_end_5369450928;
		_case_end_5369451776:;
		if (!((_127774a70_bytes_has_prefix(_70213_txt,jule::Str("//", 2))))) { goto _case_end_5369457424; }
		_case_begin_5369457424:;
		{
			(*this)._method_lex_line_comment(_70017_t);
			return _70017_t;
		}
		goto _match_end_5369450928;
		_case_end_5369457424:;
		if (!((_127774a70_bytes_has_prefix(_70213_txt,jule::Str("/*", 2))))) { goto _case_end_5369457536; }
		_case_begin_5369457536:;
		{
			(*this)._method_lex_range_comment();
			return _70017_t;
		}
		goto _match_end_5369450928;
		_case_end_5369457536:;
		if (!(((*this)._method_is_op(_70213_txt,jule::Str("(", 1),3LLU,_70017_t)) || ((*this)._method_is_op(_70213_txt,jule::Str(")", 1),3LLU,_70017_t)) || ((*this)._method_is_op(_70213_txt,jule::Str("{", 1),3LLU,_70017_t)) || ((*this)._method_is_op(_70213_txt,jule::Str("}", 1),3LLU,_70017_t)) || ((*this)._method_is_op(_70213_txt,jule::Str("[", 1),3LLU,_70017_t)) || ((*this)._method_is_op(_70213_txt,jule::Str("]", 1),3LLU,_70017_t)) || ((*this)._method_lex_basic_ops(_70213_txt,_70017_t)))) { goto _case_end_5369457648; }
		goto _match_end_5369450928;
		_case_end_5369457648:;
		if (!(((*this)._method_lex_id(_70213_txt,_70017_t)))) { goto _case_end_5369457760; }
		_case_begin_5369457760:;
		{
			{
				auto &__julec_range_expr = _127774a70_KEYWORDS;
				if (__julec_range_expr.begin() != __julec_range_expr.end()) {
					auto __julec_range_begin = __julec_range_expr.begin();
					const auto __julec_range_end = __julec_range_expr.end();
					_127774a70_KindPair _127774a70_pair = *__julec_range_begin;
					_iter_begin_5369478912:;
					{
						if (_127774a70_pair._field_kind == _70017_t._field_kind) {
							_70017_t._field_id=_127774a70_pair._field_id;
							goto _iter_end_5369478912;
						}
					}
					_iter_next_5369478912:;
					++__julec_range_begin;
					if (__julec_range_begin != __julec_range_end) { _127774a70_pair = *__julec_range_begin; goto _iter_begin_5369478912; }
					_iter_end_5369478912:;
				}
			}
		}
		goto _match_end_5369450928;
		_case_end_5369457760:;
		_case_begin_5369451104:;
		{
			jule::I32 _75218_r;
			jule::Int _75221_sz;
			std::tie(_75218_r,_75221_sz) = _1275d1920_decode_rune(_70213_txt);
			(*this)._method_push_err(jule::Str("invalid_token", 13),jule::Slice<jule::Any>({jule::Any(_75218_r)}));
			(*this)._field_column+=_75221_sz;
			(*this)._field_pos+=_75221_sz;
			return _70017_t;
		}
		goto _match_end_5369450928;
		_case_end_5369451104:;
		_match_end_5369450928:;
	}
	(*this)._field_column+=static_cast<jule::I64>(_70017_t._field_kind.len());
	return _70017_t;
}







std::ostream &operator<<(std::ostream &_Stream, const _127774a70_Lex &_Src) {
	_Stream << "Lex{";
	_Stream << "first_token_of_line:" << _Src._field_first_token_of_line << ", ";
	_Stream << "tokens:" << _Src._field_tokens << ", ";
	_Stream << "data:" << _Src._field_data << ", ";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "pos:" << _Src._field_pos << ", ";
	_Stream << "column:" << _Src._field_column << ", ";
	_Stream << "row:" << _Src._field_row << ", ";
	_Stream << "errors:" << _Src._field_errors;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1275d0e60_Ast &_Src) {
	_Stream << "Ast{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "top_directives:" << _Src._field_top_directives << ", ";
	_Stream << "use_decls:" << _Src._field_use_decls << ", ";
	_Stream << "impls:" << _Src._field_impls << ", ";
	_Stream << "comments:" << _Src._field_comments << ", ";
	_Stream << "decls:" << _Src._field_decls;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_127b2e960_StructIns> _127b2e960_Struct::_method_instance(void) {
	if ((this->self->_field_generics.len() == 0LL) && (this->self->_field_instances.len() == 1LL)) {
		return this->self->_field_instances[static_cast<jule::Int>(0LL)];
	}
	jule::Ref<_127b2e960_StructIns> _6817_ins = jule::new_struct<_127b2e960_StructIns>(new( std::nothrow ) _127b2e960_StructIns(jule::Bool(),this->self,jule::Slice<jule::Ref<_1304dc9b0_TypeKind>>(),jule::Slice<jule::Ref<_127b2e960_FieldIns>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(this->self->_field_fields.len()))),jule::Slice<jule::Ref<_127ed52e0_Fn>>::alloc(static_cast<jule::Int>(static_cast<jule::Int>(this->self->_field_methods._method_len()))),jule::Bool()));
	{
		auto &__julec_range_expr = this->self->_field_fields;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _127b2e960_i = 0;
			jule::Ref<_127b2e960_Field> _127b2e960_f = *__julec_range_begin;
			_iter_begin_5370723264:;
			{
				_6817_ins->_field_fields[static_cast<jule::Int>(_127b2e960_i)]=_127b2e960_f->_method_instance();
				if (jule::real(_127b2e960_f->_field_kind->_field_kind) && _1304dc9b0_is_mut(_127b2e960_f->_field_kind->_field_kind)) {
					_6817_ins->_field_has_mut=true;
				}
			}
			_iter_next_5370723264:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_127b2e960_i; _127b2e960_f = *__julec_range_begin; goto _iter_begin_5370723264; }
			_iter_end_5370723264:;
		}
	}
	jule::Int _8117_i = 0LL;
	_iter_begin_5370717696:;
	if (!(_8117_i < this->self->_field_methods._method_len())) { goto _iter_end_5370717696; }
	{
		jule::Ref<_127ed52e0_Fn> _8321_f = this->self->_field_methods._method_at(_8117_i);
		jule::Ref<_127ed52e0_Fn> _8421_fins = jule::new_struct<_127ed52e0_Fn>(new( std::nothrow ) _127ed52e0_Fn(_8321_f->_field_sema,_8321_f->_field_token,_8321_f->_field_global,_8321_f->_field_unsafety,_8321_f->_field_public,_8321_f->_field_cpp_linked,_8321_f->_field_statically,_8321_f->_field_ident,_8321_f->_field_directives,_8321_f->_field_doc,_8321_f->_field_scope,_8321_f->_field_generics,_8321_f->_field_result,_8321_f->_field_params,_8321_f->_field_owner,_8321_f->_field_references,nullptr));
		_6817_ins->_field_methods[static_cast<jule::Int>(_8117_i)]=_8421_fins;
	}
	_iter_next_5370717696:;
	(_8117_i)++;
	goto _iter_begin_5370717696;
	_iter_end_5370717696:;
	return _6817_ins;
}



inline jule::Ref<_127b2e960_StructIns> _127b2e960_Struct::_method_append_instance(jule::Ref<_127b2e960_StructIns> _11138_ins) {
	if (((*this)._field_generics.len() == 0LL) && ((*this)._field_instances.len() == 1LL)) {
		return (*this)._field_instances[static_cast<jule::Int>(0LL)];
	}
	{
		auto &__julec_range_expr = (*this)._field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127b2e960_StructIns> _127b2e960_ains = *__julec_range_begin;
			_iter_begin_5370750656:;
			{
				{
					auto &__julec_range_expr = _127b2e960_ains->_field_generics;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Int _127b2e960_i = 0;
						jule::Ref<_1304dc9b0_TypeKind> _127b2e960_ag = *__julec_range_begin;
						_iter_begin_5370752912:;
						{
							if (_127b2e960_ag->_method_equals(_11138_ins->_field_generics[static_cast<jule::Int>(_127b2e960_i)])) {
								return _127b2e960_ains;
							}
						}
						_iter_next_5370752912:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { ++_127b2e960_i; _127b2e960_ag = *__julec_range_begin; goto _iter_begin_5370752912; }
						_iter_end_5370752912:;
					}
				}
			}
			_iter_next_5370750656:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127b2e960_ains = *__julec_range_begin; goto _iter_begin_5370750656; }
			_iter_end_5370750656:;
		}
	}
	(*this)._field_instances=append((*this)._field_instances,jule::Slice<jule::Ref<_127b2e960_StructIns>>({_11138_ins}));
	return jule::new_ref<_127b2e960_StructIns>();
}



inline jule::Ref<_127ed52e0_Fn> _127b2e960_Struct::_method_find_method(jule::Str _13234_ident,jule::Bool _13246_statically) {
	jule::Int _13317_i = 0LL;
	_iter_begin_5370763792:;
	if (!(_13317_i < (*this)._field_methods._method_len())) { goto _iter_end_5370763792; }
	{
		jule::Ref<_127ed52e0_Fn> _13521_f = (*this)._field_methods._method_at(_13317_i);
		if ((_13521_f->_field_statically == _13246_statically) && (_13521_f->_field_ident == _13234_ident)) {
			return _13521_f;
		}
	}
	_iter_next_5370763792:;
	(_13317_i)++;
	goto _iter_begin_5370763792;
	_iter_end_5370763792:;
	return jule::new_ref<_127ed52e0_Fn>();
}



inline jule::Ref<_127b2e960_Field> _127b2e960_Struct::_method_find_field(jule::Str _14533_ident) {
	{
		auto &__julec_range_expr = (*this)._field_fields;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127b2e960_Field> _127b2e960_f = *__julec_range_begin;
			_iter_begin_5370772912:;
			{
				if (_127b2e960_f->_field_ident == _14533_ident) {
					return _127b2e960_f;
				}
			}
			_iter_next_5370772912:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127b2e960_f = *__julec_range_begin; goto _iter_begin_5370772912; }
			_iter_end_5370772912:;
		}
	}
	return jule::new_ref<_127b2e960_Field>();
}



inline jule::Bool _127b2e960_Struct::_method_is_implements(jule::Ref<_130099320_Trait> _15532_t) {
	{
		auto &__julec_range_expr = (*this)._field_implements;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_130099320_Trait> _127b2e960_it = *__julec_range_begin;
			_iter_begin_5370777984:;
			{
				if ((_15532_t).alloc == (_127b2e960_it).alloc) {
					return true;
				}
			}
			_iter_next_5370777984:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127b2e960_it = *__julec_range_begin; goto _iter_begin_5370777984; }
			_iter_end_5370777984:;
		}
	}
	return false;
}



inline jule::Bool _127b2e960_Struct::_method_is_derives(jule::Str _16529_ident) {
	{
		auto &__julec_range_expr = (*this)._field_directives;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1275d7180_Directive> _127b2e960_d = *__julec_range_begin;
			_iter_begin_5370782320:;
			{
				if (_127b2e960_d->_field_tag == jule::Str("derive", 6)) {
					if ((_127b2e960_d->_field_args.len() == 1LL) && (_127b2e960_d->_field_args[static_cast<jule::Int>(0LL)] == _16529_ident)) {
						return true;
					}
				}
			}
			_iter_next_5370782320:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127b2e960_d = *__julec_range_begin; goto _iter_begin_5370782320; }
			_iter_end_5370782320:;
		}
	}
	return false;
}



inline jule::Bool _127b2e960_Struct::_method_is_uses(jule::Ref<_127b2e960_Struct> _17726_s) {
	{
		auto &__julec_range_expr = (*this)._field_uses;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127b2e960_Struct> _127b2e960_u = *__julec_range_begin;
			_iter_begin_5370790048:;
			{
				_iter_begin_5370791920:;
				if (!((_17726_s).alloc == (_127b2e960_u).alloc)) { goto _iter_end_5370791920; }
				{
					return true;
				}
				_iter_next_5370791920:;
				goto _iter_begin_5370791920;
				_iter_end_5370791920:;
			}
			_iter_next_5370790048:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127b2e960_u = *__julec_range_begin; goto _iter_begin_5370790048; }
			_iter_end_5370790048:;
		}
	}
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _127b2e960_Struct &_Src) {
	_Stream << "Struct{";
	_Stream << "sema:" << _Src._field_sema << ", ";
	_Stream << "depends:" << _Src._field_depends << ", ";
	_Stream << "uses:" << _Src._field_uses << ", ";
	_Stream << "token:" << _Src._field_token << ", ";
	_Stream << "ident:" << _Src._field_ident << ", ";
	_Stream << "fields:" << _Src._field_fields << ", ";
	_Stream << "methods:" << _Src._field_methods << ", ";
	_Stream << "public:" << _Src._field_public << ", ";
	_Stream << "cpp_linked:" << _Src._field_cpp_linked << ", ";
	_Stream << "directives:" << _Src._field_directives << ", ";
	_Stream << "doc:" << _Src._field_doc << ", ";
	_Stream << "generics:" << _Src._field_generics << ", ";
	_Stream << "implements:" << _Src._field_implements << ", ";
	_Stream << "references:" << _Src._field_references << ", ";
	_Stream << "instances:" << _Src._field_instances;
	_Stream << "}";
	return _Stream;
}



inline jule::Int _127ff3480_ReferenceStack::_method_len(void) {
	return (*this)._field_buffer._method_len();
}



inline jule::Any _127ff3480_ReferenceStack::_method_at(jule::Int _5125_i) {
	return (*this)._field_buffer._method_at(_5125_i);
}



inline void _127ff3480_ReferenceStack::_method_push(jule::Any _5631_ref) {
	(*this)._field_buffer._method_push(_5631_ref);
}



inline void _127ff3480_ReferenceStack::_method_remove(jule::Int _6129_i) {
	(*this)._field_buffer._method_remove_range(_6129_i,1LL);
}



inline jule::Bool _127ff3480_ReferenceStack::_method_exist_0(jule::Ref<_1303533b0_Var> _6627_t) {
	jule::Int _6717_i = 0LL;
	_iter_begin_5146096000:;
	if (!(_6717_i < (*this)._method_len())) { goto _iter_end_5146096000; }
	{
		jule::Any _6917_ref = (&((*this)._field_buffer))->_method_at(_6717_i);
		{
			auto &_match_expr{ _6917_ref };
			if (!(_match_expr.type_is<jule::Ref<_1303533b0_Var>>())) { goto _case_end_5146100528; }
			_case_begin_5146100528:;
			{
				if ((_6917_ref.operator jule::Ref<_1303533b0_Var>()).alloc == (_6627_t).alloc) {
					return true;
				}
			}
			goto _match_end_5146099872;
			_case_end_5146100528:;
			_match_end_5146099872:;
		}
	}
	_iter_next_5146096000:;
	(_6717_i)++;
	goto _iter_begin_5146096000;
	_iter_end_5146096000:;
	return false;
}

inline jule::Bool _127ff3480_ReferenceStack::_method_exist_1(jule::Ref<_127ed52e0_Fn> _6627_t) {
	jule::Int _6717_i = 0LL;
	_iter_begin_5146113072:;
	if (!(_6717_i < (*this)._method_len())) { goto _iter_end_5146113072; }
	{
		jule::Any _6917_ref = (&((*this)._field_buffer))->_method_at(_6717_i);
		{
			auto &_match_expr{ _6917_ref };
			if (!(_match_expr.type_is<jule::Ref<_127ed52e0_Fn>>())) { goto _case_end_5146117408; }
			_case_begin_5146117408:;
			{
				if ((_6917_ref.operator jule::Ref<_127ed52e0_Fn>()).alloc == (_6627_t).alloc) {
					return true;
				}
			}
			goto _match_end_5146115104;
			_case_end_5146117408:;
			_match_end_5146115104:;
		}
	}
	_iter_next_5146113072:;
	(_6717_i)++;
	goto _iter_begin_5146113072;
	_iter_end_5146113072:;
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _127ff3480_ReferenceStack &_Src) {
	_Stream << "ReferenceStack{";
	_Stream << "buffer:" << _Src._field_buffer;
	_Stream << "}";
	return _Stream;
}







std::ostream &operator<<(std::ostream &_Stream, const _1300a11b0_Scope &_Src) {
	_Stream << "Scope{";
	_Stream << "parent:" << _Src._field_parent << ", ";
	_Stream << "unsafety:" << _Src._field_unsafety << ", ";
	_Stream << "deferred:" << _Src._field_deferred << ", ";
	_Stream << "stmts:" << _Src._field_stmts;
	_Stream << "}";
	return _Stream;
}



inline jule::Ref<_1300a4650_ImportInfo> _13032dc50_SymbolTable::_method_find_package(jule::Str _2631_ident) {
	jule::Int _2717_i = 0LL;
	_iter_begin_5145751056:;
	if (!(_2717_i < (*this)._field_imports._method_len())) { goto _iter_end_5145751056; }
	{
		jule::Ref<_1300a4650_ImportInfo> _2921_pkg = (*this)._field_imports._method_at(_2717_i);
		if (_2921_pkg->_field_ident == _2631_ident) {
			return _2921_pkg;
		}
	}
	_iter_next_5145751056:;
	(_2717_i)++;
	goto _iter_begin_5145751056;
	_iter_end_5145751056:;
	return jule::new_ref<_1300a4650_ImportInfo>();
}



inline jule::Ref<_1300a4650_ImportInfo> _13032dc50_SymbolTable::_method_select_package(jule::Fn<jule::Bool(jule::Ref<_1300a4650_ImportInfo>)> _4033_selector) {
	if (_4033_selector == nullptr) {
		return jule::new_ref<_1300a4650_ImportInfo>();
	}
	jule::Int _4517_i = 0LL;
	_iter_begin_5145760384:;
	if (!(_4517_i < (*this)._field_imports._method_len())) { goto _iter_end_5145760384; }
	{
		jule::Ref<_1300a4650_ImportInfo> _4721_pkg = (*this)._field_imports._method_at(_4517_i);
		if (_4033_selector(_4721_pkg)) {
			return _4721_pkg;
		}
	}
	_iter_next_5145760384:;
	(_4517_i)++;
	goto _iter_begin_5145760384;
	_iter_end_5145760384:;
	return jule::new_ref<_1300a4650_ImportInfo>();
}



inline jule::Ref<_1303533b0_Var> _13032dc50_SymbolTable::_method_find_var(jule::Str _5727_ident,jule::Bool _5739_cpp_linked) {
	return (*this)._method___find_var(_5727_ident,_5739_cpp_linked,false);
}



inline jule::Ref<_1304dc9b0_TypeAlias> _13032dc50_SymbolTable::_method_find_type_alias(jule::Str _6334_ident,jule::Bool _6346_cpp_linked) {
	return (*this)._method___find_type_alias(_6334_ident,_6346_cpp_linked,false);
}



inline jule::Ref<_127b2e960_Struct> _13032dc50_SymbolTable::_method_find_struct(jule::Str _6930_ident,jule::Bool _6942_cpp_linked) {
	jule::Int _7017_i = 0LL;
	_iter_begin_5145774352:;
	if (!(_7017_i < (*this)._field_structs._method_len())) { goto _iter_end_5145774352; }
	{
		jule::Ref<_127b2e960_Struct> _7221_s = (*this)._field_structs._method_at(_7017_i);
		if ((_7221_s->_field_ident == _6930_ident) && (_7221_s->_field_cpp_linked == _6942_cpp_linked)) {
			return _7221_s;
		}
	}
	_iter_next_5145774352:;
	(_7017_i)++;
	goto _iter_begin_5145774352;
	_iter_end_5145774352:;
	return jule::new_ref<_127b2e960_Struct>();
}



inline jule::Ref<_127ed52e0_Fn> _13032dc50_SymbolTable::_method_find_fn(jule::Str _8226_ident,jule::Bool _8238_cpp_linked) {
	jule::Int _8317_i = 0LL;
	_iter_begin_5145783088:;
	if (!(_8317_i < (*this)._field_funcs._method_len())) { goto _iter_end_5145783088; }
	{
		jule::Ref<_127ed52e0_Fn> _8521_f = (*this)._field_funcs._method_at(_8317_i);
		if ((_8521_f->_field_ident == _8226_ident) && (_8521_f->_field_cpp_linked == _8238_cpp_linked)) {
			return _8521_f;
		}
	}
	_iter_next_5145783088:;
	(_8317_i)++;
	goto _iter_begin_5145783088;
	_iter_end_5145783088:;
	return jule::new_ref<_127ed52e0_Fn>();
}



inline jule::Ref<_130099320_Trait> _13032dc50_SymbolTable::_method_find_trait(jule::Str _9529_ident) {
	jule::Int _9617_i = 0LL;
	_iter_begin_5145790064:;
	if (!(_9617_i < (*this)._field_traits._method_len())) { goto _iter_end_5145790064; }
	{
		jule::Ref<_130099320_Trait> _9821_t = (*this)._field_traits._method_at(_9617_i);
		if (_9821_t->_field_ident == _9529_ident) {
			return _9821_t;
		}
	}
	_iter_next_5145790064:;
	(_9617_i)++;
	goto _iter_begin_5145790064;
	_iter_end_5145790064:;
	return jule::new_ref<_130099320_Trait>();
}



inline jule::Ref<_13009ed30_Enum> _13032dc50_SymbolTable::_method_find_enum(jule::Str _10828_ident) {
	jule::Int _10917_i = 0LL;
	_iter_begin_5145797472:;
	if (!(_10917_i < (*this)._field_enums._method_len())) { goto _iter_end_5145797472; }
	{
		jule::Ref<_13009ed30_Enum> _11121_e = (*this)._field_enums._method_at(_10917_i);
		if (_11121_e->_field_ident == _10828_ident) {
			return _11121_e;
		}
	}
	_iter_next_5145797472:;
	(_10917_i)++;
	goto _iter_begin_5145797472;
	_iter_end_5145797472:;
	return jule::new_ref<_13009ed30_Enum>();
}



inline jule::Ref<_1303533b0_Var> _13032dc50_SymbolTable::_method___find_var(jule::Str _12129_ident,jule::Bool _12141_cpp_linked,jule::Bool _12159_reverse) {
	if (_12159_reverse) {
		jule::Int _12321_i = (*this)._field_vars._method_len() - 1LL;
		_iter_begin_5145809904:;
		if (!(_12321_i >= 0LL)) { goto _iter_end_5145809904; }
		{
			jule::Ref<_1303533b0_Var> _12525_v = (*this)._field_vars._method_at(_12321_i);
			if ((_12525_v->_field_ident == _12129_ident) && (_12525_v->_field_cpp_linked == _12141_cpp_linked)) {
				return _12525_v;
			}
		}
		_iter_next_5145809904:;
		(_12321_i)--;
		goto _iter_begin_5145809904;
		_iter_end_5145809904:;
	} else {
		jule::Int _13121_i = 0LL;
		_iter_begin_5145807504:;
		if (!(_13121_i < (*this)._field_vars._method_len())) { goto _iter_end_5145807504; }
		{
			jule::Ref<_1303533b0_Var> _13325_v = (*this)._field_vars._method_at(_13121_i);
			if ((_13325_v->_field_ident == _12129_ident) && (_13325_v->_field_cpp_linked == _12141_cpp_linked)) {
				return _13325_v;
			}
		}
		_iter_next_5145807504:;
		(_13121_i)++;
		goto _iter_begin_5145807504;
		_iter_end_5145807504:;
	}
	return jule::new_ref<_1303533b0_Var>();
}



inline jule::Ref<_1304dc9b0_TypeAlias> _13032dc50_SymbolTable::_method___find_type_alias(jule::Str _14236_ident,jule::Bool _14248_cpp_linked,jule::Bool _14266_reverse) {
	if (_14266_reverse) {
		jule::Int _14421_i = (*this)._field_type_aliases._method_len() - 1LL;
		_iter_begin_5145826432:;
		if (!(_14421_i >= 0LL)) { goto _iter_end_5145826432; }
		{
			jule::Ref<_1304dc9b0_TypeAlias> _14625_ta = (*this)._field_type_aliases._method_at(_14421_i);
			if ((_14625_ta->_field_ident == _14236_ident) && (_14625_ta->_field_cpp_linked == _14248_cpp_linked)) {
				return _14625_ta;
			}
		}
		_iter_next_5145826432:;
		(_14421_i)--;
		goto _iter_begin_5145826432;
		_iter_end_5145826432:;
	} else {
		jule::Int _15221_i = 0LL;
		_iter_begin_5145824032:;
		if (!(_15221_i < (*this)._field_type_aliases._method_len())) { goto _iter_end_5145824032; }
		{
			jule::Ref<_1304dc9b0_TypeAlias> _15425_ta = (*this)._field_type_aliases._method_at(_15221_i);
			if ((_15425_ta->_field_ident == _14236_ident) && (_15425_ta->_field_cpp_linked == _14248_cpp_linked)) {
				return _15425_ta;
			}
		}
		_iter_next_5145824032:;
		(_15221_i)++;
		goto _iter_begin_5145824032;
		_iter_end_5145824032:;
	}
	return jule::new_ref<_1304dc9b0_TypeAlias>();
}



inline jule::Any _13032dc50_SymbolTable::_method_def_by_ident(jule::Str _16531_ident,jule::Bool _16543_cpp_linked) {
	jule::Int _16617_i = 0LL;
	_iter_begin_5145839632:;
	if (!(_16617_i < (*this)._field_vars._method_len())) { goto _iter_end_5145839632; }
	{
		jule::Ref<_1303533b0_Var> _16821_v = (*this)._field_vars._method_at(_16617_i);
		if ((_16821_v->_field_ident == _16531_ident) && (_16821_v->_field_cpp_linked == _16543_cpp_linked)) {
			return _16821_v;
		}
	}
	_iter_next_5145839632:;
	(_16617_i)++;
	goto _iter_begin_5145839632;
	_iter_end_5145839632:;
	_16617_i=0LL;
	_iter_begin_5145844752:;
	if (!(_16617_i < (*this)._field_type_aliases._method_len())) { goto _iter_end_5145844752; }
	{
		jule::Ref<_1304dc9b0_TypeAlias> _17621_ta = (*this)._field_type_aliases._method_at(_16617_i);
		if ((_17621_ta->_field_ident == _16531_ident) && (_17621_ta->_field_cpp_linked == _16543_cpp_linked)) {
			return _17621_ta;
		}
	}
	_iter_next_5145844752:;
	(_16617_i)++;
	goto _iter_begin_5145844752;
	_iter_end_5145844752:;
	_16617_i=0LL;
	_iter_begin_5145851920:;
	if (!(_16617_i < (*this)._field_structs._method_len())) { goto _iter_end_5145851920; }
	{
		jule::Ref<_127b2e960_Struct> _18421_s = (*this)._field_structs._method_at(_16617_i);
		if ((_18421_s->_field_ident == _16531_ident) && (_18421_s->_field_cpp_linked == _16543_cpp_linked)) {
			return _18421_s;
		}
	}
	_iter_next_5145851920:;
	(_16617_i)++;
	goto _iter_begin_5145851920;
	_iter_end_5145851920:;
	_16617_i=0LL;
	_iter_begin_5145857296:;
	if (!(_16617_i < (*this)._field_funcs._method_len())) { goto _iter_end_5145857296; }
	{
		jule::Ref<_127ed52e0_Fn> _19221_f = (*this)._field_funcs._method_at(_16617_i);
		if ((_19221_f->_field_ident == _16531_ident) && (_19221_f->_field_cpp_linked == _16543_cpp_linked)) {
			return _19221_f;
		}
	}
	_iter_next_5145857296:;
	(_16617_i)++;
	goto _iter_begin_5145857296;
	_iter_end_5145857296:;
	if (_16543_cpp_linked) {
		return nullptr;
	}
	_16617_i=0LL;
	_iter_begin_5145863248:;
	if (!(_16617_i < (*this)._field_traits._method_len())) { goto _iter_end_5145863248; }
	{
		jule::Ref<_130099320_Trait> _20421_t = (*this)._field_traits._method_at(_16617_i);
		if (_20421_t->_field_ident == _16531_ident) {
			return _20421_t;
		}
	}
	_iter_next_5145863248:;
	(_16617_i)++;
	goto _iter_begin_5145863248;
	_iter_end_5145863248:;
	_16617_i=0LL;
	_iter_begin_5145868272:;
	if (!(_16617_i < (*this)._field_enums._method_len())) { goto _iter_end_5145868272; }
	{
		jule::Ref<_13009ed30_Enum> _21221_e = (*this)._field_enums._method_at(_16617_i);
		if (_21221_e->_field_ident == _16531_ident) {
			return _21221_e;
		}
	}
	_iter_next_5145868272:;
	(_16617_i)++;
	goto _iter_begin_5145868272;
	_iter_end_5145868272:;
	return nullptr;
}



inline jule::Bool _13032dc50_SymbolTable::_method_is_duplicated_ident(jule::Uintptr _22434_itself,jule::Str _22451_ident,jule::Bool _22463_cpp_linked) {
	jule::Int _22517_i = 0LL;
	_iter_begin_5145875536:;
	if (!(_22517_i < (*this)._field_vars._method_len())) { goto _iter_end_5145875536; }
	{
		jule::Ref<_1303533b0_Var> _22717_v = (&((*this)._field_vars))->_method_at(_22517_i);
		if (((((jule::Uintptr)((_22717_v).alloc)) != _22434_itself) && (_22717_v->_field_ident == _22451_ident)) && (_22717_v->_field_cpp_linked == _22463_cpp_linked)) {
			return true;
		}
	}
	_iter_next_5145875536:;
	(_22517_i)++;
	goto _iter_begin_5145875536;
	_iter_end_5145875536:;
	_22517_i=0LL;
	_iter_begin_5145881696:;
	if (!(_22517_i < (*this)._field_type_aliases._method_len())) { goto _iter_end_5145881696; }
	{
		jule::Ref<_1304dc9b0_TypeAlias> _23517_ta = (&((*this)._field_type_aliases))->_method_at(_22517_i);
		if (((((jule::Uintptr)((_23517_ta).alloc)) != _22434_itself) && (_23517_ta->_field_ident == _22451_ident)) && (_23517_ta->_field_cpp_linked == _22463_cpp_linked)) {
			return true;
		}
	}
	_iter_next_5145881696:;
	(_22517_i)++;
	goto _iter_begin_5145881696;
	_iter_end_5145881696:;
	_22517_i=0LL;
	_iter_begin_5145891072:;
	if (!(_22517_i < (*this)._field_structs._method_len())) { goto _iter_end_5145891072; }
	{
		jule::Ref<_127b2e960_Struct> _24317_s = (&((*this)._field_structs))->_method_at(_22517_i);
		if (((((jule::Uintptr)((_24317_s).alloc)) != _22434_itself) && (_24317_s->_field_ident == _22451_ident)) && (_24317_s->_field_cpp_linked == _22463_cpp_linked)) {
			return true;
		}
	}
	_iter_next_5145891072:;
	(_22517_i)++;
	goto _iter_begin_5145891072;
	_iter_end_5145891072:;
	_22517_i=0LL;
	_iter_begin_5145898032:;
	if (!(_22517_i < (*this)._field_funcs._method_len())) { goto _iter_end_5145898032; }
	{
		jule::Ref<_127ed52e0_Fn> _25117_f = (&((*this)._field_funcs))->_method_at(_22517_i);
		if (((((jule::Uintptr)((_25117_f).alloc)) != _22434_itself) && (_25117_f->_field_ident == _22451_ident)) && (_25117_f->_field_cpp_linked == _22463_cpp_linked)) {
			return true;
		}
	}
	_iter_next_5145898032:;
	(_22517_i)++;
	goto _iter_begin_5145898032;
	_iter_end_5145898032:;
	if (_22463_cpp_linked) {
		return false;
	}
	_22517_i=0LL;
	_iter_begin_5145905664:;
	if (!(_22517_i < (*this)._field_traits._method_len())) { goto _iter_end_5145905664; }
	{
		jule::Ref<_130099320_Trait> _26317_t = (&((*this)._field_traits))->_method_at(_22517_i);
		if ((((jule::Uintptr)((_26317_t).alloc)) != _22434_itself) && (_26317_t->_field_ident == _22451_ident)) {
			return true;
		}
	}
	_iter_next_5145905664:;
	(_22517_i)++;
	goto _iter_begin_5145905664;
	_iter_end_5145905664:;
	_22517_i=0LL;
	_iter_begin_5145912080:;
	if (!(_22517_i < (*this)._field_enums._method_len())) { goto _iter_end_5145912080; }
	{
		jule::Ref<_13009ed30_Enum> _27117_e = (&((*this)._field_enums))->_method_at(_22517_i);
		if ((((jule::Uintptr)((_27117_e).alloc)) != _22434_itself) && (_27117_e->_field_ident == _22451_ident)) {
			return true;
		}
	}
	_iter_next_5145912080:;
	(_22517_i)++;
	goto _iter_begin_5145912080;
	_iter_end_5145912080:;
	return false;
}







std::ostream &operator<<(std::ostream &_Stream, const _13032dc50_SymbolTable &_Src) {
	_Stream << "SymbolTable{";
	_Stream << "file:" << _Src._field_file << ", ";
	_Stream << "passes:" << _Src._field_passes << ", ";
	_Stream << "imports:" << _Src._field_imports << ", ";
	_Stream << "vars:" << _Src._field_vars << ", ";
	_Stream << "type_aliases:" << _Src._field_type_aliases << ", ";
	_Stream << "structs:" << _Src._field_structs << ", ";
	_Stream << "funcs:" << _Src._field_funcs << ", ";
	_Stream << "traits:" << _Src._field_traits << ", ";
	_Stream << "enums:" << _Src._field_enums << ", ";
	_Stream << "impls:" << _Src._field_impls;
	_Stream << "}";
	return _Stream;
}



inline jule::Int _136f077b0_get_last_errno(void) {
	return errno;
}



inline jule::Str _136f04ed0_byte_ptr_to_str(jule::U8* _4531_s) {
	if (_4531_s == nullptr) {
		return jule::Str("", 0);
	}
	return __jule_str_from_byte_ptr(_4531_s);
}



inline jule::Int _136f04ed0_stat(jule::U8* _5320_path,struct stat* _5337_stat) {
	return __jule_stat(((char*)(_5320_path)),_5337_stat);
}



inline jule::Int _136f04ed0_open(jule::U8* _5820_path,jule::Int _5833_flag,jule::Int _5844_mode) {
	return open(((char*)(_5820_path)),_5833_flag,_5844_mode);
}



inline jule::U8* _136f04ed0_getcwd(jule::U8* _6422_buff,jule::Uint _6435_bufflen) {
	return ((jule::U8*)(getcwd(((char*)(_6422_buff)),_6435_bufflen)));
}



inline DIR* _136f04ed0_opendir(jule::U8* _6923_path) {
	return opendir(((char*)(_6923_path)));
}



inline struct dirent* _136f04ed0_readdir(DIR* _7227_dir) {
	return readdir(_7227_dir);
}



inline jule::Int _136f04ed0_closedir(DIR* _7528_dir) {
	return closedir(_7528_dir);
}



inline jule::I64 _126e418f0_seek(jule::Int _2613_handle,jule::I64 _2626_offset,jule::Int _2639_origin) {
	return lseek(_2613_handle,_2626_offset,_2639_origin);
}



inline jule::Int _126e418f0_read(jule::Int _3120_handle,void* _3137_buff,jule::Uint _3152_n) {
	return read(_3120_handle,_3137_buff,_3152_n);
}



inline jule::Int _126e418f0_close(jule::Int _3614_handle) {
	return close(_3614_handle);
}



inline jule::Int _126e418f0_write(jule::Int _3921_handle,void* _3934_buff,jule::Uint _3949_n) {
	return write(_3921_handle,_3934_buff,_3949_n);
}



inline void _126e418f0_exit(jule::Int _4413_code) {
	exit(_4413_code);
}



inline void _136f32ab0_free(void* _2924_ptr) {
	free(_2924_ptr);
}



inline jule::Int _126e1ee50_get_last_os_error(void) {
	jule::Int _319_err = _136f077b0_get_last_errno();
	{
		auto &_match_expr{ _319_err };
		if (!((13LL) == _match_expr)) { goto _case_end_5116695776; }
		_case_begin_5116695776:;
		{
			return 1LLU;
		}
		goto _match_end_4965419440;
		_case_end_5116695776:;
		if (!((5LL) == _match_expr)) { goto _case_end_5116802432; }
		_case_begin_5116802432:;
		{
			return 2LLU;
		}
		goto _match_end_4965419440;
		_case_end_5116802432:;
		if (!((40LL) == _match_expr)) { goto _case_end_5116647328; }
		_case_begin_5116647328:;
		{
			return 3LLU;
		}
		goto _match_end_4965419440;
		_case_end_5116647328:;
		if (!((36LL) == _match_expr)) { goto _case_end_5116377824; }
		_case_begin_5116377824:;
		{
			return 4LLU;
		}
		goto _match_end_4965419440;
		_case_end_5116377824:;
		if (!((2LL) == _match_expr)) { goto _case_end_4966047168; }
		_case_begin_4966047168:;
		{
			return 5LLU;
		}
		goto _match_end_4965419440;
		_case_end_4966047168:;
		if (!((20LL) == _match_expr)) { goto _case_end_5115950768; }
		_case_begin_5115950768:;
		{
			return 6LLU;
		}
		goto _match_end_4965419440;
		_case_end_5115950768:;
		if (!((12LL) == _match_expr)) { goto _case_end_5115812400; }
		_case_begin_5115812400:;
		{
			return 7LLU;
		}
		goto _match_end_4965419440;
		_case_end_5115812400:;
		_case_begin_5117238000:;
		{
			return 0LLU;
		}
		goto _match_end_4965419440;
		_case_end_5117238000:;
		_match_end_4965419440:;
	}
}



inline std::tuple<jule::Str,jule::Int> _126e23f30_working_dir(void) {
	return _126e25940___getwd();
}



inline void _126e23f30_init(void) {
	{
		(*((&(_126e23f30_ARGS))))=__jule_get_command_line_args();
		(*((&(_126e23f30_ENV))))=__jule_get_environment_variables();
	}
}



inline std::tuple<jule::Str,jule::Int> _126e25940___getwd(void) {
	jule::U8* _1513_buff = _136f04ed0_getcwd(nullptr,0LLU);
	if (_1513_buff == nullptr) {
		return std::make_tuple(jule::Str("", 0),_126e1ee50_get_last_os_error());
	}
	jule::Str _199_pwd = _136f04ed0_byte_ptr_to_str(_1513_buff);
	{
		_136f32ab0_free(_1513_buff);
	}
	return std::make_tuple(_199_pwd,0LLU);
}



inline jule::Str _136ec98d0_clean(jule::Str _10718_path) {
	jule::Str _1089_original_path = _10718_path;
	jule::Int _1099_vol_len = _136ec9750_volume_name_len(_10718_path);
	_10718_path=_10718_path.slice(static_cast<jule::Int>(_1099_vol_len));
	if (_10718_path == jule::Str("", 0)) {
		if (((_1099_vol_len > 1LL) && _136ec9750_is_path_sep(_1089_original_path[static_cast<jule::Int>(0LL)])) && _136ec9750_is_path_sep(_1089_original_path[static_cast<jule::Int>(1LL)])) {
			return _136ec98d0_from_slash(_1089_original_path);
		}
		return _1089_original_path + jule::Str(".", 1);
	}
	jule::Bool _1189_rooted = _136ec9750_is_path_sep(_10718_path[static_cast<jule::Int>(0LL)]);
	jule::I64 _1259_n = _10718_path.len();
	_136ec98d0_LazyBuff _12613_out = _136ec98d0_LazyBuff(_10718_path,jule::Slice<jule::U8>(),jule::Int(),_1089_original_path,_1099_vol_len);
	jule::Int _13114_r = 0LL;
	jule::Int _13121_dotdot = 0LL;
	std::tie(_13114_r,_13121_dotdot) = std::make_tuple(0LL,0LL);
	if (_1189_rooted) {
		_12613_out._method_append(47LLU);
		std::tie(_13114_r,_13121_dotdot) = std::make_tuple(1LL,1LL);
	}
	_iter_begin_5117796960:;
	if (!(_13114_r < _1259_n)) { goto _iter_end_5117796960; }
	{
		{
			if (!((_136ec9750_is_path_sep(_10718_path[static_cast<jule::Int>(_13114_r)])))) { goto _case_end_5117816448; }
			_case_begin_5117816448:;
			{
				(_13114_r)++;
			}
			goto _match_end_5117798528;
			_case_end_5117816448:;
			if (!(((_10718_path[static_cast<jule::Int>(_13114_r)] == '.') && (((_13114_r + 1LL) == _1259_n) || _136ec9750_is_path_sep(_10718_path[static_cast<jule::Int>(_13114_r + 1LL)]))))) { goto _case_end_5117817520; }
			_case_begin_5117817520:;
			{
				(_13114_r)++;
			}
			goto _match_end_5117798528;
			_case_end_5117817520:;
			if (!((((_10718_path[static_cast<jule::Int>(_13114_r)] == '.') && (_10718_path[static_cast<jule::Int>(_13114_r + 1LL)] == '.')) && (((_13114_r + 2LL) == _1259_n) || _136ec9750_is_path_sep(_10718_path[static_cast<jule::Int>(_13114_r + 2LL)]))))) { goto _case_end_5117814208; }
			_case_begin_5117814208:;
			{
				_13114_r+=2LL;
				{
					if (!((_12613_out._field_w > _13121_dotdot))) { goto _case_end_5117827968; }
					_case_begin_5117827968:;
					{
						(_12613_out._field_w)--;
						_iter_begin_5117828800:;
						if (!((_12613_out._field_w > _13121_dotdot) && (!(_136ec9750_is_path_sep(static_cast<jule::U8>(_12613_out._method_index(_12613_out._field_w))))))) { goto _iter_end_5117828800; }
						{
							(_12613_out._field_w)--;
						}
						_iter_next_5117828800:;
						goto _iter_begin_5117828800;
						_iter_end_5117828800:;
					}
					goto _match_end_5117823296;
					_case_end_5117827968:;
					if (!(((!(_1189_rooted))))) { goto _case_end_5117828080; }
					_case_begin_5117828080:;
					{
						if (_12613_out._field_w > 0LL) {
							_12613_out._method_append(47LLU);
						}
						_12613_out._method_append('.');
						_12613_out._method_append('.');
						_13121_dotdot=_12613_out._field_w;
					}
					goto _match_end_5117823296;
					_case_end_5117828080:;
					_match_end_5117823296:;
				}
			}
			goto _match_end_5117798528;
			_case_end_5117814208:;
			_case_begin_5117798720:;
			{
				if ((_1189_rooted && (_12613_out._field_w != 1LL)) || ((!(_1189_rooted)) && (_12613_out._field_w != 0LL))) {
					_12613_out._method_append(47LLU);
				}
				if (((false && (_12613_out._field_w == 0LL)) && (_12613_out._field_vol_len == 0LL)) && (_13114_r != 0LL)) {
					jule::Int _17425_i = _13114_r;
					_iter_begin_5117805312:;
					if (!((_17425_i < _1259_n) && (!(_136ec9750_is_path_sep(_10718_path[static_cast<jule::Int>(_17425_i)]))))) { goto _iter_end_5117805312; }
					{
						if (_10718_path[static_cast<jule::Int>(_17425_i)] == ':') {
							_12613_out._method_append('.');
							_12613_out._method_append(47LLU);
							goto _iter_end_5117805312;
						}
					}
					_iter_next_5117805312:;
					(_17425_i)++;
					goto _iter_begin_5117805312;
					_iter_end_5117805312:;
				}
				_iter_begin_5117812352:;
				if (!((_13114_r < _1259_n) && (!(_136ec9750_is_path_sep(_10718_path[static_cast<jule::Int>(_13114_r)]))))) { goto _iter_end_5117812352; }
				{
					_12613_out._method_append(_10718_path[static_cast<jule::Int>(_13114_r)]);
				}
				_iter_next_5117812352:;
				(_13114_r)++;
				goto _iter_begin_5117812352;
				_iter_end_5117812352:;
			}
			goto _match_end_5117798528;
			_case_end_5117798720:;
			_match_end_5117798528:;
		}
	}
	_iter_next_5117796960:;
	goto _iter_begin_5117796960;
	_iter_end_5117796960:;
	if (_12613_out._field_w == 0LL) {
		_12613_out._method_append('.');
	}
	return _136ec98d0_from_slash(_12613_out._method_string());
}



inline jule::Str _136ec98d0_from_slash(jule::Str _21019_path) {
	if (true) {
		return _21019_path;
	}
	return _21019_path.replace(jule::Str("/", 1),static_cast<jule::Str>(47LL),-1LL);
}



inline jule::Str _136ec98d0_join(jule::Slice<jule::Str> _22413_elem) {
	return _136ec9750___join(_22413_elem);
}



inline jule::Str _136ec98d0_ext(jule::Str _22912_path) {
	jule::I64 _23013_i = _22912_path.len() - 1LL;
	_iter_begin_5117853744:;
	if (!((_23013_i >= 0LL) && (!(_136ec9750_is_path_sep(_22912_path[static_cast<jule::Int>(_23013_i)]))))) { goto _iter_end_5117853744; }
	{
		if (_22912_path[static_cast<jule::Int>(_23013_i)] == '.') {
			return _22912_path.slice(static_cast<jule::Int>(_23013_i));
		}
	}
	_iter_next_5117853744:;
	(_23013_i)--;
	goto _iter_begin_5117853744;
	_iter_end_5117853744:;
	return jule::Str("", 0);
}



inline std::tuple<jule::Str,jule::Bool> _136ec98d0_abs(jule::Str _24412_path) {
	jule::Bool _24430_ok = jule::Bool();
	return _136ec9750___abs(_24412_path);
}



inline jule::Str _136ec98d0_base(jule::Str _25017_path) {
	if (_25017_path == jule::Str("", 0)) {
		return jule::Str(".", 1);
	}
	_iter_begin_5117864736:;
	if (!((_25017_path.len() > 0LL) && _136ec9750_is_path_sep(_25017_path[static_cast<jule::Int>(_25017_path.len() - 1LL)]))) { goto _iter_end_5117864736; }
	{
		_25017_path=_25017_path.slice(static_cast<jule::Int>(0LL),static_cast<jule::Int>(_25017_path.len() - 1LL));
	}
	_iter_next_5117864736:;
	goto _iter_begin_5117864736;
	_iter_end_5117864736:;
	_25017_path=_25017_path.slice(static_cast<jule::Int>(_136ec98d0_volume_name(_25017_path).len()));
	jule::I64 _26113_i = _25017_path.len() - 1LL;
	_iter_begin_5117863712:;
	if (!((_26113_i >= 0LL) && (!(_136ec9750_is_path_sep(_25017_path[static_cast<jule::Int>(_26113_i)]))))) { goto _iter_end_5117863712; }
	{
		(_26113_i)--;
	}
	_iter_next_5117863712:;
	goto _iter_begin_5117863712;
	_iter_end_5117863712:;
	if (_26113_i >= 0LL) {
		_25017_path=_25017_path.slice(static_cast<jule::Int>(_26113_i + 1LL));
	}
	if (_25017_path == jule::Str("", 0)) {
		return static_cast<jule::Str>(47LL);
	}
	return _25017_path;
}



inline jule::Str _136ec98d0_dir(jule::Str _28112_path) {
	jule::Str _2829_vol = _136ec98d0_volume_name(_28112_path);
	jule::I64 _28313_i = _28112_path.len() - 1LL;
	_iter_begin_5117880688:;
	if (!((_28313_i >= _2829_vol.len()) && (!(_136ec9750_is_path_sep(_28112_path[static_cast<jule::Int>(_28313_i)]))))) { goto _iter_end_5117880688; }
	{
		(_28313_i)--;
	}
	_iter_next_5117880688:;
	goto _iter_begin_5117880688;
	_iter_end_5117880688:;
	jule::Str _2879_dir = _136ec98d0_clean(_28112_path.slice(static_cast<jule::Int>(_2829_vol.len()),static_cast<jule::Int>(_28313_i + 1LL)));
	if ((_2879_dir == jule::Str(".", 1)) && (_2829_vol.len() > 2LL)) {
		return _2829_vol;
	}
	return _2829_vol + _2879_dir;
}



inline jule::Str _136ec98d0_volume_name(jule::Str _29920_path) {
	return _136ec98d0_from_slash(_29920_path.slice(0LL,static_cast<jule::Int>(_136ec9750_volume_name_len(_29920_path))));
}



inline jule::Bool _136ec9750_is_path_sep(jule::U8 _4720_c) {
	return 47LL == _4720_c;
}



inline jule::Bool _136ec9750_is_abs(jule::Str _5215_path) {
	return _5215_path.has_prefix(jule::Str("/", 1));
}



inline jule::Int _136ec9750_volume_name_len(jule::Str _5620_path) {
	return 0LL;
}



inline std::tuple<jule::Str,jule::Bool> _136ec9750___abs(jule::Str _5810_path) {
	jule::Bool _5828_ok = jule::Bool();
	if (_136ec9750_is_abs(_5810_path)) {
		_5828_ok = true;
		return std::make_tuple(_136ec98d0_clean(_5810_path),_5828_ok);
	}
	jule::Str _6210_wd;
	jule::Int _6214_err;
	std::tie(_6210_wd,_6214_err) = _126e23f30_working_dir();
	if (_6214_err != 0LLU) {
		_5828_ok = false;
		return std::make_tuple(jule::Str("", 0),_5828_ok);
	}
	_5828_ok = true;
	return std::make_tuple(_136ec9750___join(jule::Slice<jule::Str>({_6210_wd,_5810_path})),_5828_ok);
}



inline jule::Str _136ec9750_str_join(jule::Slice<jule::Str> _6913_elems,jule::Str _6927_sep) {
	{
		auto _match_expr{ _6913_elems.len() };
		if (!((0LL) == _match_expr)) { goto _case_end_5117908768; }
		_case_begin_5117908768:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_5117908208;
		_case_end_5117908768:;
		if (!((1LL) == _match_expr)) { goto _case_end_5117909216; }
		_case_begin_5117909216:;
		{
			return _6913_elems[static_cast<jule::Int>(0LL)];
		}
		goto _match_end_5117908208;
		_case_end_5117909216:;
		_match_end_5117908208:;
	}
	jule::Str _7513_s = _6913_elems[static_cast<jule::Int>(0LL)];
	{
		auto __julec_range_expr = _6913_elems.slice(static_cast<jule::Int>(1LL));
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _136ec9750_elem = *__julec_range_begin;
			_iter_begin_5117913632:;
			{
				_7513_s+=_6927_sep + _136ec9750_elem;
			}
			_iter_next_5117913632:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _136ec9750_elem = *__julec_range_begin; goto _iter_begin_5117913632; }
			_iter_end_5117913632:;
		}
	}
	return _7513_s;
}



inline jule::Str _136ec9750___join(jule::Slice<jule::Str> _8211_elem) {
	{
		auto &__julec_range_expr = _8211_elem;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _136ec9750_i = 0;
			jule::Str _136ec9750_e = *__julec_range_begin;
			_iter_begin_5117915136:;
			{
				if (_136ec9750_e != jule::Str("", 0)) {
					return _136ec98d0_clean(_136ec9750_str_join(_8211_elem.slice(static_cast<jule::Int>(_136ec9750_i)),static_cast<jule::Str>(47LL)));
				}
			}
			_iter_next_5117915136:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_136ec9750_i; _136ec9750_e = *__julec_range_begin; goto _iter_begin_5117915136; }
			_iter_end_5117915136:;
		}
	}
	return jule::Str("", 0);
}



inline jule::Int _1278411a0_leading_zeros64(jule::U64 _6124_x) {
	return 64LL - _1278411a0_len64(_6124_x);
}



inline jule::Int _1278411a0_trailing_zeros(jule::Uint _8323_x) {
	if (false) {
		return _1278411a0_trailing_zeros32(static_cast<jule::U32>(_8323_x));
	}
	return _1278411a0_trailing_zeros64(static_cast<jule::U64>(_8323_x));
}



inline jule::Int _1278411a0_trailing_zeros32(jule::U32 _10525_x) {
	if (_10525_x == 0LL) {
		return 32LL;
	}
	return static_cast<jule::Int>(_1278411a0_DE_BRUIJN32_TAB[static_cast<jule::Int>(((_10525_x & (-(_10525_x))) * 125613361LL) >> 27LL)]);
}



inline jule::Int _1278411a0_trailing_zeros64(jule::U64 _11425_x) {
	if (_11425_x == 0LL) {
		return 64LL;
	}
	return static_cast<jule::Int>(_1278411a0_DE_BRUIJN64_TAB[static_cast<jule::Int>(((_11425_x & (-(_11425_x))) * 285870213051353865LL) >> 58LL)]);
}



inline jule::Int _1278411a0_len32(jule::U32 _35218_x) {
	jule::Int _35228_n = jule::Int();
	if (_35218_x >= 65536LL) {
		_35218_x>>=16LL;
		_35228_n=16LL;
	}
	if (_35218_x >= 256LL) {
		_35218_x>>=8LL;
		_35228_n+=8LL;
	}
	_35228_n = _35228_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_35218_x)]);
	return _35228_n;
}



inline jule::Int _1278411a0_len64(jule::U64 _36618_x) {
	jule::Int _36628_n = jule::Int();
	if (_36618_x >= 4294967296LL) {
		_36618_x>>=32LL;
		_36628_n=32LL;
	}
	if (_36618_x >= 65536LL) {
		_36618_x>>=16LL;
		_36628_n+=16LL;
	}
	if (_36618_x >= 256LL) {
		_36618_x>>=8LL;
		_36628_n+=8LL;
	}
	_36628_n = _36628_n + static_cast<jule::Int>(jule::Str("\x00\1\2\2\3\3\3\3\4\4\4\4\4\4\4\4\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\5\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\6\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\a\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b\b", 256)[static_cast<jule::Int>(_36618_x)]);
	return _36628_n;
}



inline std::tuple<jule::U64,jule::U64> _1278411a0_add64(jule::U64 _41514_x,jule::U64 _41522_y,jule::U64 _41530_carry) {
	jule::U64 _41554_carryout = jule::U64();
	jule::U64 _41544_sum = jule::U64();
	_41544_sum=(_41514_x + _41522_y) + _41530_carry;
	_41554_carryout=((_41514_x & _41522_y) | ((_41514_x | _41522_y) & (~(_41544_sum)))) >> 63LL;
	return std::make_tuple(_41544_sum,_41554_carryout);
}



inline std::tuple<jule::U64,jule::U64> _1278411a0_mul64(jule::U64 _49914_x,jule::U64 _49922_y) {
	jule::U64 _49941_lo = jule::U64();
	jule::U64 _49932_hi = jule::U64();
	
	jule::U64 _5019_x0 = _49914_x & 4294967295LL;
	jule::U64 _5029_x1 = _49914_x >> 32LL;
	jule::U64 _5039_y0 = _49922_y & 4294967295LL;
	jule::U64 _5049_y1 = _49922_y >> 32LL;
	jule::U64 _5059_w0 = _5019_x0 * _5039_y0;
	jule::U64 _5069_t = (_5029_x1 * _5039_y0) + (_5059_w0 >> 32LL);
	jule::U64 _50713_w1 = _5069_t & 4294967295LL;
	jule::U64 _5089_w2 = _5069_t >> 32LL;
	_50713_w1+=_5019_x0 * _5049_y1;
	_49932_hi=((_5029_x1 * _5049_y1) + _5089_w2) + (_50713_w1 >> 32LL);
	_49941_lo=_49914_x * _49922_y;
	return std::make_tuple(_49932_hi,_49941_lo);
}



inline jule::U32 _136ef8580_f32_bits(jule::F32 _4117_f) {
	return (*(((jule::U32*)((&(_4117_f))))));
}



inline jule::F32 _136ef8580_f32_from_bits(jule::U32 _4722_b) {
	return (*(((jule::F32*)((&(_4722_b))))));
}



inline jule::U64 _136ef8580_f64_bits(jule::F64 _5217_f) {
	return (*(((jule::U64*)((&(_5217_f))))));
}



inline jule::F64 _136ef8580_f64_from_bits(jule::U64 _5822_b) {
	return (*(((jule::F64*)((&(_5822_b))))));
}



inline jule::F64 _12723d9f0_nan(void) {
	return _136ef8580_f64_from_bits(9221120237041090561LLU);
}



inline jule::Bool _12723d9f0_is_nan(jule::F64 _5215_f) {
	return _5215_f != _5215_f;
}



inline jule::F64 _12723d9f0_inf(jule::Int _6112_sign) {
	if (_6112_sign >= 0LL) {
		return _136ef8580_f64_from_bits(9218868437227405312LLU);
	}
	return _136ef8580_f64_from_bits(18442240474082181120LLU);
}



inline jule::Bool _12723d9f0_is_inf(jule::F64 _7215_f,jule::Int _7223_sign) {
	return ((_7223_sign >= 0LL) && (_7215_f > jule::MAX_F64)) || ((_7223_sign <= 0LL) && (_7215_f < jule::MIN_F64));
}



inline jule::F64 _1272f1720_abs(jule::F64 _4312_x) {
	return _136ef8580_f64_from_bits(static_cast<jule::U64>(_136ef8580_f64_bits(_4312_x) & 9223372036854775807LLU));
}



inline std::tuple<jule::F64,jule::F64> _136ef5550_modf(jule::F64 _4413_f) {
	jule::F64 _4437_frac = jule::F64();
	jule::F64 _4423_integer = jule::F64();
	
	jule::F64 _469_abs_f = _1272f1720_abs(_4413_f);
	jule::F64 _4713_i = 0e+00;
	if (_469_abs_f > 4.503599627370496e+15) {
		_4713_i=_4413_f;
	} else {
		_4713_i=_469_abs_f + 4.503599627370496e+15;
		_4713_i-=4.503599627370496e+15;
		_iter_begin_5119588336:;
		if (!(_4713_i > _469_abs_f)) { goto _iter_end_5119588336; }
		{
			(_4713_i)--;
		}
		_iter_next_5119588336:;
		goto _iter_begin_5119588336;
		_iter_end_5119588336:;
		if (_4413_f < 0e+00) {
			_4713_i=static_cast<jule::F64>((-(_4713_i)));
		}
	}
	_4423_integer = _4713_i;
	_4437_frac = _4413_f - _4713_i;
	return std::make_tuple(_4423_integer,_4437_frac);
}



inline jule::Str _136f888c0_fmt_float(jule::F64 _7818_f,jule::U8 _7826_fmt,jule::Int _7837_prec,jule::Int _7848_bit_size) {
	return static_cast<jule::Str>(_136f888c0_generic_ftoa(nullptr,_7818_f,_7826_fmt,_7837_prec,_7848_bit_size));
}



inline jule::Slice<jule::U8> _136f888c0_generic_ftoa(jule::Slice<jule::U8> _8221_dst,jule::F64 _8234_val,jule::U8 _8244_fmt,jule::Int _8259_prec,jule::Int _8270_bit_size) {
	jule::U64 _8313_bits = 0LLU;
	_136f888c0_FloatInfo* _8413_flt = nullptr;
	{
		auto &_match_expr{ _8270_bit_size };
		if (!((32LL) == _match_expr)) { goto _case_end_5121596208; }
		_case_begin_5121596208:;
		{
			_8313_bits=static_cast<jule::U64>(_136ef8580_f32_bits(static_cast<jule::F32>(_8234_val)));
			_8413_flt=(&(_136f888c0_F32_INFO));
		}
		goto _match_end_5121594656;
		_case_end_5121596208:;
		if (!((64LL) == _match_expr)) { goto _case_end_5121596320; }
		_case_begin_5121596320:;
		{
			_8313_bits=static_cast<jule::U64>(_136ef8580_f64_bits(_8234_val));
			_8413_flt=(&(_136f888c0_F64_INFO));
		}
		goto _match_end_5121594656;
		_case_end_5121596320:;
		_case_begin_5121595232:;
		{
			jule::panic(jule::Str("std::conv: illegal bit_size", 27));
		}
		goto _match_end_5121594656;
		_case_end_5121595232:;
		_match_end_5121594656:;
	}
	jule::Bool _969_neg = (_8313_bits >> (_8413_flt->_field_expbits + _8413_flt->_field_mantbits)) != 0LL;
	jule::Int _9713_exp = static_cast<jule::Int>(_8313_bits >> _8413_flt->_field_mantbits) & ((1LL << _8413_flt->_field_expbits) - 1LL);
	jule::U64 _9813_mant = _8313_bits & ((static_cast<jule::U64>(1LLU) << _8413_flt->_field_mantbits) - 1LL);
	{
		auto &_match_expr{ _9713_exp };
		if (!(((1LL << _8413_flt->_field_expbits) - 1LL) == _match_expr)) { goto _case_end_5121610640; }
		_case_begin_5121610640:;
		{
			jule::Str _10317_s = jule::Str("", 0);
			{
				if (!((_9813_mant != 0LL))) { goto _case_end_5121616976; }
				_case_begin_5121616976:;
				{
					_10317_s=jule::Str("nan", 3);
				}
				goto _match_end_5121614592;
				_case_end_5121616976:;
				if (!((_969_neg))) { goto _case_end_5121615968; }
				_case_begin_5121615968:;
				{
					_10317_s=jule::Str("-inf", 4);
				}
				goto _match_end_5121614592;
				_case_end_5121615968:;
				_case_begin_5121614848:;
				{
					_10317_s=jule::Str("+inf", 4);
				}
				goto _match_end_5121614592;
				_case_end_5121614848:;
				_match_end_5121614592:;
			}
			return append(_8221_dst,static_cast<jule::Slice<jule::U8>>(_10317_s));
		}
		goto _match_end_5121603856;
		_case_end_5121610640:;
		if (!((0LL) == _match_expr)) { goto _case_end_5121609840; }
		_case_begin_5121609840:;
		{
			(_9713_exp)++;
		}
		goto _match_end_5121603856;
		_case_end_5121609840:;
		_case_begin_5121608848:;
		{
			_9813_mant|=static_cast<jule::Uint>(static_cast<jule::U64>(1LLU) << _8413_flt->_field_mantbits);
		}
		goto _match_end_5121603856;
		_case_end_5121608848:;
		_match_end_5121603856:;
	}
	_9713_exp+=_8413_flt->_field_bias;
	if (_8244_fmt == 'b') {
		return _136f888c0_fmt_b(_8221_dst,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	if ((_8244_fmt == 'x') || (_8244_fmt == 'X')) {
		return _136f888c0_fmt_x(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	if (false) {
		return _136f888c0_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	_136f888c0_DecimalSlice _13413_digs = _136f888c0_DecimalSlice();
	jule::Bool _13513_ok = false;
	jule::Bool _1379_shortest = _8259_prec < 0LL;
	if (_1379_shortest) {
		jule::Array<jule::U8,32> _14013_buf = jule::Array<jule::U8,32>({});
		_13413_digs._field_d=_14013_buf.slice(0LL);
		_126e27830_ryu_ftoa_shortest(_13413_digs,_9813_mant,_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits),(*(_8413_flt)));
		_13513_ok=true;
		{
			auto &_match_expr{ _8244_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_5121636608; }
			_case_begin_5121636608:;
			{
				_8259_prec=static_cast<jule::Int>(_136f888c0_max(_13413_digs._field_nd - 1LL,0LL));
			}
			goto _match_end_5121634800;
			_case_end_5121636608:;
			if (!(('f') == _match_expr)) { goto _case_end_5121636720; }
			_case_begin_5121636720:;
			{
				_8259_prec=static_cast<jule::Int>(_136f888c0_max(_13413_digs._field_nd - _13413_digs._field_dp,0LL));
			}
			goto _match_end_5121634800;
			_case_end_5121636720:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_5121637568; }
			_case_begin_5121637568:;
			{
				_8259_prec=_13413_digs._field_nd;
			}
			goto _match_end_5121634800;
			_case_end_5121637568:;
			_match_end_5121634800:;
		}
	} else if (_8244_fmt != 'f') {
		jule::Int _15517_digits = _8259_prec;
		{
			auto &_match_expr{ _8244_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_5121644912; }
			_case_begin_5121644912:;
			{
				(_15517_digits)++;
			}
			goto _match_end_5121643008;
			_case_end_5121644912:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_5121645696; }
			_case_begin_5121645696:;
			{
				if (_8259_prec == 0LL) {
					_8259_prec=1LL;
				}
				_15517_digits=_8259_prec;
			}
			goto _match_end_5121643008;
			_case_end_5121645696:;
			_case_begin_5121644112:;
			{
				_15517_digits=1LL;
			}
			goto _match_end_5121643008;
			_case_end_5121644112:;
			_match_end_5121643008:;
		}
		jule::Array<jule::U8,24> _16813_buf = jule::Array<jule::U8,24>({});
		if ((_8270_bit_size == 32LL) && (_15517_digits <= 9LL)) {
			_13413_digs._field_d=_16813_buf.slice(0LL);
			_126e27830_ryu_ftoa_fixed32(_13413_digs,static_cast<jule::U32>(_9813_mant),_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits),_15517_digits);
			_13513_ok=true;
		} else if (_15517_digits <= 18LL) {
			_13413_digs._field_d=_16813_buf.slice(0LL);
			_126e27830_ryu_ftoa_fixed64(_13413_digs,_9813_mant,_9713_exp - static_cast<jule::Int>(_8413_flt->_field_mantbits),_15517_digits);
			_13513_ok=true;
		}
	}
	if ((!(_13513_ok))) {
		return _136f888c0_big_ftoa(_8221_dst,_8259_prec,_8244_fmt,_969_neg,_9813_mant,_9713_exp,(*(_8413_flt)));
	}
	return _136f888c0_fmt_digits(_8221_dst,_1379_shortest,_969_neg,_13413_digs,_8259_prec,_8244_fmt);
}



inline jule::Slice<jule::U8> _136f888c0_big_ftoa(jule::Slice<jule::U8> _18617_dst,jule::Int _18634_prec,jule::U8 _18645_fmt,jule::Bool _18656_neg,jule::U64 _18713_mant,jule::Int _18724_exp,_136f888c0_FloatInfo& _18735_flt) {
	_126f5c9e0_Decimal _18813_d = _126f5c9e0_Decimal();
	_18813_d._method_assign(_18713_mant);
	_18813_d._method_shift(_18724_exp - static_cast<jule::Int>(_18735_flt._field_mantbits));
	_136f888c0_DecimalSlice _19113_digs = _136f888c0_DecimalSlice();
	jule::Bool _1929_shortest = _18634_prec < 0LL;
	if (_1929_shortest) {
		_136f888c0_round_shortest(_18813_d,_18713_mant,_18724_exp,_18735_flt);
		_19113_digs=_136f888c0_DecimalSlice(_18813_d._field_d.slice(0LL),_18813_d._field_nd,_18813_d._field_dp,jule::Bool());
		{
			auto &_match_expr{ _18645_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_5121673648; }
			_case_begin_5121673648:;
			{
				_18634_prec=_19113_digs._field_nd - 1LL;
			}
			goto _match_end_5121675040;
			_case_end_5121673648:;
			if (!(('f') == _match_expr)) { goto _case_end_5121678816; }
			_case_begin_5121678816:;
			{
				_18634_prec=static_cast<jule::Int>(_136f888c0_max(_19113_digs._field_nd - _19113_digs._field_dp,0LL));
			}
			goto _match_end_5121675040;
			_case_end_5121678816:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_5121678928; }
			_case_begin_5121678928:;
			{
				_18634_prec=_19113_digs._field_nd;
			}
			goto _match_end_5121675040;
			_case_end_5121678928:;
			_match_end_5121675040:;
		}
	} else {
		{
			auto &_match_expr{ _18645_fmt };
			if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_5121679648; }
			_case_begin_5121679648:;
			{
				_18813_d._method_round(_18634_prec + 1LL);
			}
			goto _match_end_5121683904;
			_case_end_5121679648:;
			if (!(('f') == _match_expr)) { goto _case_end_5121679760; }
			_case_begin_5121679760:;
			{
				_18813_d._method_round(_18813_d._field_dp + _18634_prec);
			}
			goto _match_end_5121683904;
			_case_end_5121679760:;
			if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_5121679872; }
			_case_begin_5121679872:;
			{
				if (_18634_prec == 0LL) {
					_18634_prec=1LL;
				}
				_18813_d._method_round(_18634_prec);
			}
			goto _match_end_5121683904;
			_case_end_5121679872:;
			_match_end_5121683904:;
		}
		_19113_digs=_136f888c0_DecimalSlice(_18813_d._field_d.slice(0LL),_18813_d._field_nd,_18813_d._field_dp,jule::Bool());
	}
	return _136f888c0_fmt_digits(_18617_dst,_1929_shortest,_18656_neg,_19113_digs,_18634_prec,_18645_fmt);
}



inline jule::Slice<jule::U8> _136f888c0_fmt_digits(jule::Slice<jule::U8> _22319_dst,jule::Bool _22332_shortest,jule::Bool _22348_neg,_136f888c0_DecimalSlice _22413_digs,jule::Int _22437_prec,jule::U8 _22448_fmt) {
	{
		auto &_match_expr{ _22448_fmt };
		if (!(('e') == _match_expr || ('E') == _match_expr)) { goto _case_end_5121698448; }
		_case_begin_5121698448:;
		{
			return _136f888c0_fmt_e(_22319_dst,_22348_neg,_22413_digs,_22437_prec,_22448_fmt);
		}
		goto _match_end_5121697856;
		_case_end_5121698448:;
		if (!(('f') == _match_expr)) { goto _case_end_5121698560; }
		_case_begin_5121698560:;
		{
			return _136f888c0_fmt_f(_22319_dst,_22348_neg,_22413_digs,_22437_prec);
		}
		goto _match_end_5121697856;
		_case_end_5121698560:;
		if (!(('g') == _match_expr || ('G') == _match_expr)) { goto _case_end_5121698672; }
		_case_begin_5121698672:;
		{
			jule::Int _23217_eprec = _22437_prec;
			if ((_23217_eprec > _22413_digs._field_nd) && (_22413_digs._field_nd >= _22413_digs._field_dp)) {
				_23217_eprec=_22413_digs._field_nd;
			}
			if (_22332_shortest) {
				_23217_eprec=6LL;
			}
			jule::Int _24213_exp = _22413_digs._field_dp - 1LL;
			if ((_24213_exp < -4LL) || (_24213_exp >= _23217_eprec)) {
				if (_22437_prec > _22413_digs._field_nd) {
					_22437_prec=_22413_digs._field_nd;
				}
				return _136f888c0_fmt_e(_22319_dst,_22348_neg,_22413_digs,_22437_prec - 1LL,(_22448_fmt + 'e') - 'g');
			}
			if (_22437_prec > _22413_digs._field_dp) {
				_22437_prec=_22413_digs._field_nd;
			}
			return _136f888c0_fmt_f(_22319_dst,_22348_neg,_22413_digs,static_cast<jule::Int>(_136f888c0_max(_22437_prec - _22413_digs._field_dp,0LL)));
		}
		goto _match_end_5121697856;
		_case_end_5121698672:;
		_match_end_5121697856:;
	}
	return append(_22319_dst,jule::Slice<jule::U8>({'%',_22448_fmt}));
}



inline void _136f888c0_round_shortest(_126f5c9e0_Decimal& _26124_d,jule::U64 _26136_mant,jule::Int _26147_exp,_136f888c0_FloatInfo& _26158_flt) {
	if (_26136_mant == 0LL) {
		_26124_d._field_nd=0LL;
		return;
	}
	jule::Int _2829_minexp = _26158_flt._field_bias + 1LL;
	if ((_26147_exp > _2829_minexp) && ((332LL * (_26124_d._field_dp - _26124_d._field_nd)) >= (100LL * (_26147_exp - static_cast<jule::Int>(_26158_flt._field_mantbits))))) {
		return;
	}
	_126f5c9e0_Decimal _29113_upper = _126f5c9e0_Decimal();
	_29113_upper._method_assign((_26136_mant * 2LL) + 1LL);
	_29113_upper._method_shift((_26147_exp - static_cast<jule::Int>(_26158_flt._field_mantbits)) - 1LL);
	jule::U64 _30113_mantlo = 0LLU;
	jule::Int _30213_explo = 0LL;
	if ((_26136_mant > (1LL << _26158_flt._field_mantbits)) || (_26147_exp == _2829_minexp)) {
		_30113_mantlo=_26136_mant - 1LL;
		_30213_explo=_26147_exp;
	} else {
		_30113_mantlo=(_26136_mant * 2LL) - 1LL;
		_30213_explo=_26147_exp - 1LL;
	}
	_126f5c9e0_Decimal _31013_lower = _126f5c9e0_Decimal();
	_31013_lower._method_assign((_30113_mantlo * 2LL) + 1LL);
	_31013_lower._method_shift((_30213_explo - static_cast<jule::Int>(_26158_flt._field_mantbits)) - 1LL);
	jule::Bool _3179_inclusive = (_26136_mant % 2LL) == 0LL;
	jule::U8 _33013_upperdelta = 0LLU;
	jule::Int _33413_ui = 0LL;
	_iter_begin_5121745424:;
	{
		jule::Int _33913_mi = (_33413_ui - _29113_upper._field_dp) + _26124_d._field_dp;
		if (_33913_mi >= _26124_d._field_nd) {
			goto _iter_end_5121745424;
		}
		jule::Int _34313_li = (_33413_ui - _29113_upper._field_dp) + _31013_lower._field_dp;
		jule::U8 _34417_l = static_cast<jule::U8>(48LLU);
		if ((_34313_li >= 0LL) && (_34313_li < _31013_lower._field_nd)) {
			_34417_l=_31013_lower._field_d[static_cast<jule::Int>(_34313_li)];
		}
		jule::U8 _34817_m = static_cast<jule::U8>(48LLU);
		if (_33913_mi >= 0LL) {
			_34817_m=_26124_d._field_d[static_cast<jule::Int>(_33913_mi)];
		}
		jule::U8 _35217_u = static_cast<jule::U8>(48LLU);
		if (_33413_ui < _29113_upper._field_nd) {
			_35217_u=_29113_upper._field_d[static_cast<jule::Int>(_33413_ui)];
		}
		jule::Bool _36013_okdown = (_34417_l != _34817_m) || (_3179_inclusive && ((_34313_li + 1LL) == _31013_lower._field_nd));
		{
			if (!(((_33013_upperdelta == 0LL) && ((_34817_m + 1LL) < _35217_u)))) { goto _case_end_5121767552; }
			_case_begin_5121767552:;
			{
				_33013_upperdelta=2LL;
			}
			goto _match_end_5121768624;
			_case_end_5121767552:;
			if (!(((_33013_upperdelta == 0LL) && (_34817_m != _35217_u)))) { goto _case_end_5121767664; }
			_case_begin_5121767664:;
			{
				_33013_upperdelta=1LL;
			}
			goto _match_end_5121768624;
			_case_end_5121767664:;
			if (!(((_33013_upperdelta == 1LL) && ((_34817_m != '9') || (_35217_u != '0'))))) { goto _case_end_5121767776; }
			_case_begin_5121767776:;
			{
				_33013_upperdelta=2LL;
			}
			goto _match_end_5121768624;
			_case_end_5121767776:;
			_match_end_5121768624:;
		}
		jule::Bool _38113_okup = (_33013_upperdelta > 0LL) && ((_3179_inclusive || (_33013_upperdelta > 1LL)) || ((_33413_ui + 1LL) < _29113_upper._field_nd));
		{
			if (!((_36013_okdown && _38113_okup))) { goto _case_end_5121777696; }
			_case_begin_5121777696:;
			{
				_26124_d._method_round(_33913_mi + 1LL);
				return;
			}
			goto _match_end_5121774048;
			_case_end_5121777696:;
			if (!((_36013_okdown))) { goto _case_end_5121777808; }
			_case_begin_5121777808:;
			{
				_26124_d._method_round_down(_33913_mi + 1LL);
				return;
			}
			goto _match_end_5121774048;
			_case_end_5121777808:;
			if (!((_38113_okup))) { goto _case_end_5121778256; }
			_case_begin_5121778256:;
			{
				_26124_d._method_round_up(_33913_mi + 1LL);
				return;
			}
			goto _match_end_5121774048;
			_case_end_5121778256:;
			_match_end_5121774048:;
		}
	}
	_iter_next_5121745424:;
	(_33413_ui)++;
	goto _iter_begin_5121745424;
	_iter_end_5121745424:;
}



inline jule::Slice<jule::U8> _136f888c0_fmt_e(jule::Slice<jule::U8> _40014_dst,jule::Bool _40027_neg,_136f888c0_DecimalSlice _40038_d,jule::Int _40055_prec,jule::U8 _40066_fmt) {
	if (_40027_neg) {
		_40014_dst=append(_40014_dst,jule::Slice<jule::U8>({'-'}));
	}
	jule::U8 _40713_ch = '0';
	if (_40038_d._field_nd != 0LL) {
		_40713_ch=_40038_d._field_d[static_cast<jule::Int>(0LL)];
	}
	_40014_dst=append(_40014_dst,jule::Slice<jule::U8>({_40713_ch}));
	if (_40055_prec > 0LL) {
		_40014_dst=append(_40014_dst,jule::Slice<jule::U8>({'.'}));
		jule::Int _41617_i = 1LL;
		jule::Int _41713_m = _136f888c0_min(_40038_d._field_nd,_40055_prec + 1LL);
		if (_41617_i < _41713_m) {
			_40014_dst=append(_40014_dst,_40038_d._field_d.slice(static_cast<jule::Int>(_41617_i),static_cast<jule::Int>(_41713_m)));
			_41617_i=_41713_m;
		}
		_iter_begin_5121806656:;
		if (!(_41617_i <= _40055_prec)) { goto _iter_end_5121806656; }
		{
			_40014_dst=append(_40014_dst,jule::Slice<jule::U8>({'0'}));
		}
		_iter_next_5121806656:;
		(_41617_i)++;
		goto _iter_begin_5121806656;
		_iter_end_5121806656:;
	}
	_40014_dst=append(_40014_dst,jule::Slice<jule::U8>({_40066_fmt}));
	jule::Int _42913_exp = _40038_d._field_dp - 1LL;
	if (_40038_d._field_nd == 0LL) {
		_42913_exp=0LL;
	}
	if (_42913_exp < 0LL) {
		_40713_ch='-';
		_42913_exp=static_cast<jule::Int>((-(_42913_exp)));
	} else {
		_40713_ch='+';
	}
	_40014_dst=append(_40014_dst,jule::Slice<jule::U8>({_40713_ch}));
	{
		if (!((_42913_exp < 10LL))) { goto _case_end_5121824384; }
		_case_begin_5121824384:;
		{
			_40014_dst=append(_40014_dst,jule::Slice<jule::U8>({'0',static_cast<jule::U8>(static_cast<jule::U8>(_42913_exp) + '0')}));
		}
		goto _match_end_5121819536;
		_case_end_5121824384:;
		if (!((_42913_exp < 100LL))) { goto _case_end_5121823104; }
		_case_begin_5121823104:;
		{
			_40014_dst=append(_40014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_42913_exp,10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(_42913_exp % 10LL) + '0')}));
		}
		goto _match_end_5121819536;
		_case_end_5121823104:;
		_case_begin_5121818000:;
		{
			_40014_dst=append(_40014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_42913_exp,100LL)) + '0'),static_cast<jule::U8>((static_cast<jule::U8>(jule::div(_42913_exp,10LL)) % 10LL) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(_42913_exp % 10LL) + '0')}));
		}
		goto _match_end_5121819536;
		_case_end_5121818000:;
		_match_end_5121819536:;
	}
	return _40014_dst;
}



inline jule::Slice<jule::U8> _136f888c0_fmt_f(jule::Slice<jule::U8> _45514_dst,jule::Bool _45527_neg,_136f888c0_DecimalSlice _45538_d,jule::Int _45555_prec) {
	if (_45527_neg) {
		_45514_dst=append(_45514_dst,jule::Slice<jule::U8>({'-'}));
	}
	if (_45538_d._field_dp > 0LL) {
		jule::Int _46317_m = _136f888c0_min(_45538_d._field_nd,_45538_d._field_dp);
		_45514_dst=append(_45514_dst,_45538_d._field_d.slice(0LL,static_cast<jule::Int>(_46317_m)));
		_iter_begin_5121845248:;
		if (!(_46317_m < _45538_d._field_dp)) { goto _iter_end_5121845248; }
		{
			_45514_dst=append(_45514_dst,jule::Slice<jule::U8>({'0'}));
		}
		_iter_next_5121845248:;
		(_46317_m)++;
		goto _iter_begin_5121845248;
		_iter_end_5121845248:;
	} else {
		_45514_dst=append(_45514_dst,jule::Slice<jule::U8>({'0'}));
	}
	if (_45555_prec > 0LL) {
		_45514_dst=append(_45514_dst,jule::Slice<jule::U8>({'.'}));
		jule::Int _47417_i = 0LL;
		_iter_begin_5121853424:;
		if (!(_47417_i < _45555_prec)) { goto _iter_end_5121853424; }
		{
			jule::U8 _47621_ch = static_cast<jule::U8>(48LLU);
			jule::Int _47717_j = _45538_d._field_dp + _47417_i;
			if ((0LL <= _47717_j) && (_47717_j < _45538_d._field_nd)) {
				_47621_ch=_45538_d._field_d[static_cast<jule::Int>(_47717_j)];
			}
			_45514_dst=append(_45514_dst,jule::Slice<jule::U8>({_47621_ch}));
		}
		_iter_next_5121853424:;
		(_47417_i)++;
		goto _iter_begin_5121853424;
		_iter_end_5121853424:;
	}
	return _45514_dst;
}



inline jule::Slice<jule::U8> _136f888c0_fmt_b(jule::Slice<jule::U8> _48814_dst,jule::Bool _48827_neg,jule::U64 _48838_mant,jule::Int _48853_exp,_136f888c0_FloatInfo& _48864_flt) {
	if (_48827_neg) {
		_48814_dst=append(_48814_dst,jule::Slice<jule::U8>({'-'}));
	}
	std::tie(_48814_dst,std::ignore) = _127164920_fmt_bits(_48814_dst,_48838_mant,10LL,false,true);
	_48814_dst=append(_48814_dst,jule::Slice<jule::U8>({'p'}));
	_48853_exp-=static_cast<jule::Int>(_48864_flt._field_mantbits);
	if (_48853_exp >= 0LL) {
		_48814_dst=append(_48814_dst,jule::Slice<jule::U8>({'+'}));
	}
	std::tie(_48814_dst,std::ignore) = _127164920_fmt_bits(_48814_dst,static_cast<jule::U64>(_48853_exp),10LL,_48853_exp < 0LL,true);
	return _48814_dst;
}



inline jule::Slice<jule::U8> _136f888c0_fmt_x(jule::Slice<jule::U8> _51014_dst,jule::Int _51027_prec,jule::U8 _51038_fmt,jule::Bool _51049_neg,jule::U64 _51113_mant,jule::Int _51128_exp,_136f888c0_FloatInfo& _51139_flt) {
	if (_51113_mant == 0LL) {
		_51128_exp=0LL;
	}
	_51113_mant<<=static_cast<jule::Uint>(60LL - _51139_flt._field_mantbits);
	_iter_begin_5121886112:;
	if (!((_51113_mant != 0LL) && ((_51113_mant & 1152921504606846976LL) == 0LL))) { goto _iter_end_5121886112; }
	{
		_51113_mant<<=1LL;
		(_51128_exp)--;
	}
	_iter_next_5121886112:;
	goto _iter_begin_5121886112;
	_iter_end_5121886112:;
	if ((_51027_prec >= 0LL) && (_51027_prec < 15LL)) {
		jule::Uint _52513_shift = static_cast<jule::Uint>(_51027_prec * 4LL);
		jule::U64 _52613_extra = (_51113_mant << _52513_shift) & 1152921504606846976LL;
		_51113_mant>>=static_cast<jule::Uint>(60LL - _52513_shift);
		if ((_52613_extra | (_51113_mant & 1LL)) > 576460752303423488LL) {
			(_51113_mant)++;
		}
		_51113_mant<<=static_cast<jule::Uint>(60LL - _52513_shift);
		if ((_51113_mant & 2305843009213693952LL) != 0LL) {
			_51113_mant>>=1LL;
			(_51128_exp)++;
		}
	}
	jule::Str _53913_hex = jule::Str("0123456789abcdef", 16);
	if (_51038_fmt == 'X') {
		_53913_hex=jule::Str("0123456789ABCDEF", 16);
	}
	if (_51049_neg) {
		_51014_dst=append(_51014_dst,jule::Slice<jule::U8>({'-'}));
	}
	_51014_dst=append(_51014_dst,jule::Slice<jule::U8>({'0',_51038_fmt,static_cast<jule::U8>('0' + static_cast<jule::U8>((_51113_mant >> 60LL) & 1LL))}));
	_51113_mant<<=4LL;
	if ((_51027_prec < 0LL) && (_51113_mant != 0LL)) {
		_51014_dst=append(_51014_dst,jule::Slice<jule::U8>({'.'}));
		_iter_begin_5121912384:;
		if (!(_51113_mant != 0LL)) { goto _iter_end_5121912384; }
		{
			_51014_dst=append(_51014_dst,jule::Slice<jule::U8>({_53913_hex[static_cast<jule::Int>((_51113_mant >> 60LL) & 15LL)]}));
			_51113_mant<<=4LL;
		}
		_iter_next_5121912384:;
		goto _iter_begin_5121912384;
		_iter_end_5121912384:;
	} else if (_51027_prec > 0LL) {
		_51014_dst=append(_51014_dst,jule::Slice<jule::U8>({'.'}));
		jule::Int _56017_i = 0LL;
		_iter_begin_5121916976:;
		if (!(_56017_i < _51027_prec)) { goto _iter_end_5121916976; }
		{
			_51014_dst=append(_51014_dst,jule::Slice<jule::U8>({_53913_hex[static_cast<jule::Int>((_51113_mant >> 60LL) & 15LL)]}));
			_51113_mant<<=4LL;
		}
		_iter_next_5121916976:;
		(_56017_i)++;
		goto _iter_begin_5121916976;
		_iter_end_5121916976:;
	}
	jule::U8 _56813_ch = static_cast<jule::U8>(80LLU);
	if (_51038_fmt == _126edcdf0_lower(_51038_fmt)) {
		_56813_ch='p';
	}
	_51014_dst=append(_51014_dst,jule::Slice<jule::U8>({_56813_ch}));
	if (_51128_exp < 0LL) {
		_56813_ch='-';
		_51128_exp=static_cast<jule::Int>((-(_51128_exp)));
	} else {
		_56813_ch='+';
	}
	_51014_dst=append(_51014_dst,jule::Slice<jule::U8>({_56813_ch}));
	{
		if (!((_51128_exp < 100LL))) { goto _case_end_5121941136; }
		_case_begin_5121941136:;
		{
			_51014_dst=append(_51014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_51128_exp,10LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(_51128_exp % 10LL) + '0')}));
		}
		goto _match_end_5121930208;
		_case_end_5121941136:;
		if (!((_51128_exp < 1000LL))) { goto _case_end_5121936384; }
		_case_begin_5121936384:;
		{
			_51014_dst=append(_51014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_51128_exp,100LL)) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_51128_exp,10LL) % 10LL) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(_51128_exp % 10LL) + '0')}));
		}
		goto _match_end_5121930208;
		_case_end_5121936384:;
		_case_begin_5121900608:;
		{
			_51014_dst=append(_51014_dst,jule::Slice<jule::U8>({static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_51128_exp,1000LL)) + '0'),static_cast<jule::U8>((static_cast<jule::U8>(jule::div(_51128_exp,100LL)) % 10LL) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(jule::div(_51128_exp,10LL) % 10LL) + '0'),static_cast<jule::U8>(static_cast<jule::U8>(_51128_exp % 10LL) + '0')}));
		}
		goto _match_end_5121930208;
		_case_end_5121900608:;
		_match_end_5121930208:;
	}
	return _51014_dst;
}



inline jule::Int _136f888c0_min(jule::Int _5938_a,jule::Int _59316_b) {
	if (_5938_a < _59316_b) {
		return _5938_a;
	}
	return _59316_b;
}



inline jule::Int _136f888c0_max(jule::Int _6008_a,jule::Int _60016_b) {
	if (_6008_a > _60016_b) {
		return _6008_a;
	}
	return _60016_b;
}



inline jule::U8 _126edcdf0_lower(jule::U8 _4910_c) {
	return _4910_c | 32LL;
}



inline std::tuple<jule::U64,jule::Int> _126edcdf0_parse_uint(jule::Str _5423_s,jule::Int _5435_base,jule::Int _5450_bit_size) {
	if (_5423_s == jule::Str("", 0)) {
		return std::make_tuple(0LL,2LLU);
	}
	{
		if (!(((2LL <= _5435_base) && (_5435_base <= 36LL)))) { goto _case_end_5121966960; }
		goto _match_end_5121962256;
		_case_end_5121966960:;
		if (!((_5435_base == 0LL))) { goto _case_end_5121965824; }
		_case_begin_5121965824:;
		{
			_5435_base=10LL;
			if (_5423_s[static_cast<jule::Int>(0LL)] == '0') {
				{
					if (!(((_5423_s.len() >= 3LL) && (_126edcdf0_lower(_5423_s[static_cast<jule::Int>(1LL)]) == 'b')))) { goto _case_end_5121972224; }
					_case_begin_5121972224:;
					{
						_5435_base=2LL;
						_5423_s=_5423_s.slice(static_cast<jule::Int>(2LL));
					}
					goto _match_end_5121970736;
					_case_end_5121972224:;
					if (!(((_5423_s.len() >= 3LL) && (_126edcdf0_lower(_5423_s[static_cast<jule::Int>(1LL)]) == 'o')))) { goto _case_end_5121974144; }
					_case_begin_5121974144:;
					{
						_5435_base=8LL;
						_5423_s=_5423_s.slice(static_cast<jule::Int>(2LL));
					}
					goto _match_end_5121970736;
					_case_end_5121974144:;
					if (!(((_5423_s.len() >= 3LL) && (_126edcdf0_lower(_5423_s[static_cast<jule::Int>(1LL)]) == 'x')))) { goto _case_end_5121972576; }
					_case_begin_5121972576:;
					{
						_5435_base=16LL;
						_5423_s=_5423_s.slice(static_cast<jule::Int>(2LL));
					}
					goto _match_end_5121970736;
					_case_end_5121972576:;
					_case_begin_5121970928:;
					{
						_5435_base=8LL;
						_5423_s=_5423_s.slice(static_cast<jule::Int>(1LL));
					}
					goto _match_end_5121970736;
					_case_end_5121970928:;
					_match_end_5121970736:;
				}
			}
		}
		goto _match_end_5121962256;
		_case_end_5121965824:;
		_case_begin_5121962512:;
		{
			return std::make_tuple(0LL,3LLU);
		}
		goto _match_end_5121962256;
		_case_end_5121962512:;
		_match_end_5121962256:;
	}
	if (_5450_bit_size == 0LL) {
		_5450_bit_size=64LL;
	} else if ((_5450_bit_size < 0LL) || (_5450_bit_size > 64LL)) {
		return std::make_tuple(0LL,4LLU);
	}
	jule::U64 _9313_cutoff = 0LLU;
	{
		auto &_match_expr{ _5435_base };
		if (!((10LL) == _match_expr)) { goto _case_end_5121992016; }
		_case_begin_5121992016:;
		{
			_9313_cutoff=1.8446744073709553e+18;
		}
		goto _match_end_5121988352;
		_case_end_5121992016:;
		if (!((16LL) == _match_expr)) { goto _case_end_5121993552; }
		_case_begin_5121993552:;
		{
			_9313_cutoff=1.152921504606847e+18;
		}
		goto _match_end_5121988352;
		_case_end_5121993552:;
		_case_begin_5121990544:;
		{
			_9313_cutoff=static_cast<jule::U64>(jule::div(jule::MAX_U64,static_cast<jule::U64>(_5435_base)) + 1LL);
		}
		goto _match_end_5121988352;
		_case_end_5121990544:;
		_match_end_5121988352:;
	}
	jule::U64 _10013_max_val = 0LLU;
	{
		auto &_match_expr{ _5450_bit_size };
		if (!((32LL) == _match_expr)) { goto _case_end_5121996432; }
		_case_begin_5121996432:;
		{
			_10013_max_val=4294967295LLU;
		}
		goto _match_end_5121994240;
		_case_end_5121996432:;
		if (!((64LL) == _match_expr)) { goto _case_end_5121996544; }
		_case_begin_5121996544:;
		{
			_10013_max_val=jule::MAX_U64;
		}
		goto _match_end_5121994240;
		_case_end_5121996544:;
		_match_end_5121994240:;
	}
	jule::U64 _11213_n = 0LLU;
	{
		auto &__julec_range_expr = _5423_s;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::U8 _126edcdf0_c = *__julec_range_begin;
			_iter_begin_5121990320:;
			{
				jule::U8 _11417_d = 0LLU;
				{
					if (!((('0' <= _126edcdf0_c) && (_126edcdf0_c <= '9')))) { goto _case_end_5122005568; }
					_case_begin_5122005568:;
					{
						_11417_d=_126edcdf0_c - '0';
					}
					goto _match_end_5122003136;
					_case_end_5122005568:;
					if (!((('a' <= _126edcdf0_lower(_126edcdf0_c)) && (_126edcdf0_lower(_126edcdf0_c) <= 'z')))) { goto _case_end_5122004432; }
					_case_begin_5122004432:;
					{
						_11417_d=static_cast<jule::U8>((_126edcdf0_lower(_126edcdf0_c) - 'a') + 10LL);
					}
					goto _match_end_5122003136;
					_case_end_5122004432:;
					_case_begin_5122003392:;
					{
						return std::make_tuple(0LL,2LLU);
					}
					goto _match_end_5122003136;
					_case_end_5122003392:;
					_match_end_5122003136:;
				}
				if (_11417_d >= static_cast<jule::U8>(_5435_base)) {
					return std::make_tuple(0LL,2LLU);
				}
				if (_11213_n >= _9313_cutoff) {
					return std::make_tuple(_10013_max_val,1LLU);
				}
				_11213_n*=static_cast<jule::U64>(_5435_base);
				jule::U64 _13413_n1 = _11213_n + static_cast<jule::U64>(_11417_d);
				if ((_13413_n1 < _11213_n) || (_13413_n1 > _10013_max_val)) {
					return std::make_tuple(_10013_max_val,1LLU);
				}
				_11213_n=_13413_n1;
			}
			_iter_next_5121990320:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _126edcdf0_c = *__julec_range_begin; goto _iter_begin_5121990320; }
			_iter_end_5121990320:;
		}
	}
	return std::make_tuple(_11213_n,0LLU);
}



inline std::tuple<jule::I64,jule::Int> _126edcdf0_parse_int(jule::Str _16522_s,jule::Int _16530_base,jule::Int _16545_bit_size) {
	jule::Int _16570_err = 0LLU;
	jule::I64 _16562_i = jule::I64();
	if (_16522_s == jule::Str("", 0)) {
		_16562_i = 0LL;
		_16570_err = 2LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	jule::Bool _17113_neg = false;
	if (_16522_s[static_cast<jule::Int>(0LL)] == '+') {
		_16522_s=_16522_s.slice(static_cast<jule::Int>(1LL));
	} else if (_16522_s[static_cast<jule::Int>(0LL)] == '-') {
		_17113_neg=true;
		_16522_s=_16522_s.slice(static_cast<jule::Int>(1LL));
	}
	jule::Uint _18013_un = 0LLU;
	std::tie(_18013_un,_16570_err) = _126edcdf0_parse_uint(_16522_s,_16530_base,_16545_bit_size);
	if ((_16570_err != 0LLU) && (_16570_err != 1LLU)) {
		_16562_i = 0LL;
		_16570_err = _16570_err;
		return std::make_tuple(_16562_i,_16570_err);
	}
	if (_16545_bit_size == 0LL) {
		_16545_bit_size=64LL;
	}
	jule::U64 _1909_cutoff = static_cast<jule::U64>(1LL << static_cast<jule::Uint>(_16545_bit_size - 1LL));
	if ((!(_17113_neg)) && (_18013_un >= _1909_cutoff)) {
		_16562_i = static_cast<jule::I64>(_1909_cutoff - 1LL);
		_16570_err = 1LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	if (_17113_neg && (_18013_un > _1909_cutoff)) {
		_16562_i = (-(static_cast<jule::I64>(_1909_cutoff)));
		_16570_err = 1LLU;
		return std::make_tuple(_16562_i,_16570_err);
	}
	jule::I64 _19713_n = static_cast<jule::I64>(_18013_un);
	if (_17113_neg) {
		_19713_n=static_cast<jule::I64>((-(_19713_n)));
	}
	_16562_i = _19713_n;
	_16570_err = 0LLU;
	return std::make_tuple(_16562_i,_16570_err);
}



inline std::tuple<jule::F64,jule::Bool> _136f32260_eisel_lemire64(jule::U64 _4123_man,jule::Int _4133_exp10,jule::Bool _4145_neg) {
	jule::Bool _4166_ok = jule::Bool();
	jule::F64 _4158_f = jule::F64();
	if (_4123_man == 0LL) {
		if (_4145_neg) {
			_4158_f=static_cast<jule::F64>(_136ef8580_f64_from_bits(9223372036854775808LLU));
		}
		_4158_f = _4158_f;
		_4166_ok = true;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	if ((_4133_exp10 < -348LL) || (347LL < _4133_exp10)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::Int _579_clz = _1278411a0_leading_zeros64(_4123_man);
	_4123_man<<=static_cast<jule::Uint>(_579_clz);
	
	jule::U64 _6013_ret_exp2 = static_cast<jule::U64>((((217706LL * _4133_exp10) >> 16LL) + 64LL) + 1023LL) - static_cast<jule::U64>(_579_clz);
	jule::U64 _6314_x_hi;
	jule::U64 _6324_x_lo;
	std::tie(_6314_x_hi,_6324_x_lo) = _1278411a0_mul64(_4123_man,_136f32260_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_4133_exp10 - -348LL)][static_cast<jule::Int>(1LL)]);
	if (((_6314_x_hi & 511LL) == 511LL) && ((_6324_x_lo + _4123_man) < _4123_man)) {
		jule::U64 _6714_y_hi;
		jule::U64 _6720_y_lo;
		std::tie(_6714_y_hi,_6720_y_lo) = _1278411a0_mul64(_4123_man,_136f32260_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_4133_exp10 - -348LL)][static_cast<jule::Int>(0LL)]);
		jule::U64 _6818_merged_hi = _6314_x_hi;
		jule::U64 _6829_merged_lo = _6324_x_lo + _6714_y_hi;
		std::tie(_6818_merged_hi,_6829_merged_lo) = std::make_tuple(_6314_x_hi,_6324_x_lo + _6714_y_hi);
		if (_6829_merged_lo < _6324_x_lo) {
			(_6818_merged_hi)++;
		}
		if ((((_6818_merged_hi & 511LL) == 511LL) && ((_6829_merged_lo + 1LL) == 0LL)) && ((_6720_y_lo + _4123_man) < _4123_man)) {
			_4158_f = 0LL;
			_4166_ok = false;
			return std::make_tuple(_4158_f,_4166_ok);
		}
		std::tie(_6314_x_hi,_6324_x_lo) = std::make_tuple(_6818_merged_hi,_6829_merged_lo);
	}
	jule::U64 _799_msb = _6314_x_hi >> 63LL;
	jule::U64 _8013_ret_mantissa = _6314_x_hi >> (_799_msb + 9LL);
	_6013_ret_exp2-=static_cast<jule::U64>(1LL ^ _799_msb);
	if (((_6324_x_lo == 0LL) && ((_6314_x_hi & 511LL) == 0LL)) && ((_8013_ret_mantissa & 3LL) == 1LL)) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	_8013_ret_mantissa+=_8013_ret_mantissa & 1LL;
	_8013_ret_mantissa>>=1LL;
	if ((_8013_ret_mantissa >> 53LL) > 0LL) {
		_8013_ret_mantissa>>=1LL;
		_6013_ret_exp2+=1LL;
	}
	if ((_6013_ret_exp2 - 1LL) >= 2046LL) {
		_4158_f = 0LL;
		_4166_ok = false;
		return std::make_tuple(_4158_f,_4166_ok);
	}
	jule::U64 _10313_ret_bits = (_6013_ret_exp2 << 52LL) | (_8013_ret_mantissa & 4503599627370495LL);
	if (_4145_neg) {
		_10313_ret_bits|=9223372036854775808LLU;
	}
	_4158_f = _136ef8580_f64_from_bits(_10313_ret_bits);
	_4166_ok = true;
	return std::make_tuple(_4158_f,_4166_ok);
}



inline std::tuple<jule::F32,jule::Bool> _136f32260_eisel_lemire32(jule::U64 _11023_man,jule::Int _11033_exp10,jule::Bool _11045_neg) {
	jule::Bool _11066_ok = jule::Bool();
	jule::F32 _11058_f = jule::F32();
	if (_11023_man == 0LL) {
		if (_11045_neg) {
			_11058_f=static_cast<jule::F32>(_136ef8580_f32_from_bits(2147483648LLU));
		}
		_11058_f = _11058_f;
		_11066_ok = true;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	if ((_11033_exp10 < -348LL) || (347LL < _11033_exp10)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::Int _1329_clz = _1278411a0_leading_zeros64(_11023_man);
	_11023_man<<=static_cast<jule::Uint>(_1329_clz);
	
	jule::U64 _13513_ret_exp2 = static_cast<jule::U64>((((217706LL * _11033_exp10) >> 16LL) + 64LL) + 127LL) - static_cast<jule::U64>(_1329_clz);
	jule::U64 _13814_x_hi;
	jule::U64 _13824_x_lo;
	std::tie(_13814_x_hi,_13824_x_lo) = _1278411a0_mul64(_11023_man,_136f32260_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_11033_exp10 - -348LL)][static_cast<jule::Int>(1LL)]);
	if (((_13814_x_hi & 274877906943LL) == 274877906943LL) && ((_13824_x_lo + _11023_man) < _11023_man)) {
		jule::U64 _14214_y_hi;
		jule::U64 _14220_y_lo;
		std::tie(_14214_y_hi,_14220_y_lo) = _1278411a0_mul64(_11023_man,_136f32260_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_11033_exp10 - -348LL)][static_cast<jule::Int>(0LL)]);
		jule::U64 _14318_merged_hi = _13814_x_hi;
		jule::U64 _14329_merged_lo = _13824_x_lo + _14214_y_hi;
		std::tie(_14318_merged_hi,_14329_merged_lo) = std::make_tuple(_13814_x_hi,_13824_x_lo + _14214_y_hi);
		if (_14329_merged_lo < _13824_x_lo) {
			(_14318_merged_hi)++;
		}
		if ((((_14318_merged_hi & 274877906943LL) == 274877906943LL) && ((_14329_merged_lo + 1LL) == 0LL)) && ((_14220_y_lo + _11023_man) < _11023_man)) {
			_11058_f = 0LL;
			_11066_ok = false;
			return std::make_tuple(_11058_f,_11066_ok);
		}
		std::tie(_13814_x_hi,_13824_x_lo) = std::make_tuple(_14318_merged_hi,_14329_merged_lo);
	}
	jule::U64 _1549_msb = _13814_x_hi >> 63LL;
	jule::U64 _15513_ret_mantissa = _13814_x_hi >> (_1549_msb + 38LL);
	_13513_ret_exp2-=static_cast<jule::U64>(1LL ^ _1549_msb);
	if (((_13824_x_lo == 0LL) && ((_13814_x_hi & 274877906943LL) == 0LL)) && ((_15513_ret_mantissa & 3LL) == 1LL)) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	_15513_ret_mantissa+=_15513_ret_mantissa & 1LL;
	_15513_ret_mantissa>>=1LL;
	if ((_15513_ret_mantissa >> 24LL) > 0LL) {
		_15513_ret_mantissa>>=1LL;
		_13513_ret_exp2+=1LL;
	}
	if ((_13513_ret_exp2 - 1LL) >= 254LL) {
		_11058_f = 0LL;
		_11066_ok = false;
		return std::make_tuple(_11058_f,_11066_ok);
	}
	jule::U64 _17813_ret_bits = (_13513_ret_exp2 << 23LL) | (_15513_ret_mantissa & 8388607LL);
	if (_11045_neg) {
		_17813_ret_bits|=2147483648LL;
	}
	_11058_f = _136ef8580_f32_from_bits(static_cast<jule::U32>(_17813_ret_bits));
	_11066_ok = true;
	return std::make_tuple(_11058_f,_11066_ok);
}



inline jule::Int _136fb03b0_common_prefix_len_ignore_case(jule::Str _4534_s,jule::Str _4542_prefix) {
	jule::I64 _4613_n = _4542_prefix.len();
	if (_4613_n > _4534_s.len()) {
		_4613_n=static_cast<jule::I64>(_4534_s.len());
	}
	jule::Int _5013_i = 0LL;
	_iter_begin_5122155216:;
	if (!(_5013_i < _4613_n)) { goto _iter_end_5122155216; }
	{
		jule::U8 _5217_c = _4534_s[static_cast<jule::Int>(_5013_i)];
		if (('A' <= _5217_c) && (_5217_c <= 'Z')) {
			_5217_c+=32LL;
		}
		if (_5217_c != _4542_prefix[static_cast<jule::Int>(_5013_i)]) {
			return _5013_i;
		}
	}
	_iter_next_5122155216:;
	(_5013_i)++;
	goto _iter_begin_5122155216;
	_iter_end_5122155216:;
	return _4613_n;
}



inline std::tuple<jule::F64,jule::Int,jule::Bool> _136fb03b0_special(jule::Str _6816_s) {
	jule::Bool _6842_ok = jule::Bool();
	jule::Int _6834_n = jule::Int();
	jule::F64 _6826_f = jule::F64();
	if (_6816_s == jule::Str("", 0)) {
		_6826_f = 0LL;
		_6834_n = 0LL;
		_6842_ok = false;
		return std::make_tuple(_6826_f,_6834_n,_6842_ok);
	}
	jule::Int _7213_sign = 1LL;
	jule::Int _7313_nsign = 0LL;
	{
		auto &_match_expr{ _6816_s[static_cast<jule::Int>(0LL)] };
		if (!(('+') == _match_expr || ('-') == _match_expr)) { goto _case_end_5122170656; }
		_case_begin_5122170656:;
		{
			if (_6816_s[static_cast<jule::Int>(0LL)] == '-') {
				_7213_sign=-1LL;
			}
			_7313_nsign=1LL;
			_6816_s=_6816_s.slice(static_cast<jule::Int>(1LL));
			goto _case_begin_5122171824;
		}
		goto _match_end_5122169088;
		_case_end_5122170656:;
		if (!(('i') == _match_expr || ('I') == _match_expr)) { goto _case_end_5122171824; }
		_case_begin_5122171824:;
		{
			jule::Int _8317_case_n = _136fb03b0_common_prefix_len_ignore_case(_6816_s,jule::Str("infinity", 8));
			if ((3LL < _8317_case_n) && (_8317_case_n < 8LL)) {
				_8317_case_n=3LL;
			}
			if ((_8317_case_n == 3LL) || (_8317_case_n == 8LL)) {
				_6826_f = _12723d9f0_inf(_7213_sign);
				_6834_n = _7313_nsign + _6834_n;
				_6842_ok = true;
				return std::make_tuple(_6826_f,_6834_n,_6842_ok);
			}
		}
		goto _match_end_5122169088;
		_case_end_5122171824:;
		if (!(('n') == _match_expr || ('N') == _match_expr)) { goto _case_end_5122171936; }
		_case_begin_5122171936:;
		{
			if (_136fb03b0_common_prefix_len_ignore_case(_6816_s,jule::Str("nan", 3)) == 3LL) {
				_6826_f = _12723d9f0_nan();
				_6834_n = 3LL;
				_6842_ok = true;
				return std::make_tuple(_6826_f,_6834_n,_6842_ok);
			}
		}
		goto _match_end_5122169088;
		_case_end_5122171936:;
		_match_end_5122169088:;
	}
	_6826_f = 0LL;
	_6834_n = 0LL;
	_6842_ok = false;
	return std::make_tuple(_6826_f,_6834_n,_6842_ok);
}



inline std::tuple<jule::U64,jule::Int,jule::Bool,jule::Bool,jule::Bool,jule::Int,jule::Bool> _136fb03b0_read_float(jule::Str _10315_s) {
	jule::Bool _10457_ok = jule::Bool();
	jule::Int _10449_i = jule::Int();
	jule::Bool _10438_hex = jule::Bool();
	jule::Bool _10425_trunc = jule::Bool();
	jule::Bool _10350_neg = jule::Bool();
	jule::Int _10340_exp = jule::Int();
	jule::U64 _10325_mantissa = jule::U64();
	if (_10449_i >= _10315_s.len()) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	{
		if (!((_10315_s[static_cast<jule::Int>(_10449_i)] == '+'))) { goto _case_end_5122193728; }
		_case_begin_5122193728:;
		{
			(_10449_i)++;
		}
		goto _match_end_5122194656;
		_case_end_5122193728:;
		if (!((_10315_s[static_cast<jule::Int>(_10449_i)] == '-'))) { goto _case_end_5122193840; }
		_case_begin_5122193840:;
		{
			_10350_neg=true;
			(_10449_i)++;
		}
		goto _match_end_5122194656;
		_case_end_5122193840:;
		_match_end_5122194656:;
	}
	jule::U64 _11813_base = 10LLU;
	jule::Int _11913_max_mant_digits = 19LL;
	jule::U8 _12013_exp_char = 'e';
	if ((((_10449_i + 2LL) < _10315_s.len()) && (_10315_s[static_cast<jule::Int>(_10449_i)] == '0')) && (_126edcdf0_lower(_10315_s[static_cast<jule::Int>(_10449_i + 1LL)]) == 'x')) {
		_11813_base=16LL;
		_11913_max_mant_digits=16LL;
		_10449_i+=2LL;
		_12013_exp_char='p';
		_10438_hex=true;
	}
	jule::Bool _12813_sawdot = false;
	jule::Bool _12913_sawdigits = false;
	jule::Int _13013_nd = 0LL;
	jule::Int _13113_nd_mant = 0LL;
	jule::Int _13213_dp = 0LL;
	_iter_begin_5122212992:;
	if (!(_10449_i < _10315_s.len())) { goto _iter_end_5122212992; }
	{
		jule::U8 _13413_c = _10315_s[static_cast<jule::Int>(_10449_i)];
		{
			if (!((_13413_c == '.'))) { goto _case_end_5122217456; }
			_case_begin_5122217456:;
			{
				if (_12813_sawdot) {
					goto _julec_label_loop_end;
				}
				_12813_sawdot=true;
				_13213_dp=_13013_nd;
				goto _iter_next_5122212992;
			}
			goto _match_end_5122216912;
			_case_end_5122217456:;
			if (!((('0' <= _13413_c) && (_13413_c <= '9')))) { goto _case_end_5122217568; }
			_case_begin_5122217568:;
			{
				_12913_sawdigits=true;
				if ((_13413_c == '0') && (_13013_nd == 0LL)) {
					(_13213_dp)--;
					goto _iter_next_5122212992;
				}
				(_13013_nd)++;
				if (_13113_nd_mant < _11913_max_mant_digits) {
					_10325_mantissa*=_11813_base;
					_10325_mantissa+=static_cast<jule::U64>(_13413_c - '0');
					(_13113_nd_mant)++;
				} else if (_13413_c != '0') {
					_10425_trunc=true;
				}
				goto _iter_next_5122212992;
			}
			goto _match_end_5122216912;
			_case_end_5122217568:;
			if (!((((_11813_base == 16LL) && ('a' <= _126edcdf0_lower(_13413_c))) && (_126edcdf0_lower(_13413_c) <= 'f')))) { goto _case_end_5122217680; }
			_case_begin_5122217680:;
			{
				_12913_sawdigits=true;
				(_13013_nd)++;
				if (_13113_nd_mant < _11913_max_mant_digits) {
					_10325_mantissa*=16LL;
					_10325_mantissa+=static_cast<jule::U64>((_126edcdf0_lower(_13413_c) - 'a') + 10LL);
					(_13113_nd_mant)++;
				} else {
					_10425_trunc=true;
				}
				goto _iter_next_5122212992;
			}
			goto _match_end_5122216912;
			_case_end_5122217680:;
			_match_end_5122216912:;
		}
		goto _iter_end_5122212992;
	}
	_iter_next_5122212992:;
	(_10449_i)++;
	goto _iter_begin_5122212992;
	_iter_end_5122212992:;
	_julec_label_loop_end:;
	if ((!(_12913_sawdigits))) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if ((!(_12813_sawdot))) {
		_13213_dp=_13013_nd;
	}
	if (_11813_base == 16LL) {
		_13213_dp*=4LL;
		_13113_nd_mant*=4LL;
	}
	if ((_10449_i < _10315_s.len()) && (_126edcdf0_lower(_10315_s[static_cast<jule::Int>(_10449_i)]) == _12013_exp_char)) {
		(_10449_i)++;
		if (_10449_i >= _10315_s.len()) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::Int _19517_esign = 1LL;
		if (_10315_s[static_cast<jule::Int>(_10449_i)] == '+') {
			(_10449_i)++;
		} else if (_10315_s[static_cast<jule::Int>(_10449_i)] == '-') {
			(_10449_i)++;
			_19517_esign=-1LL;
		}
		if (((_10449_i >= _10315_s.len()) || (_10315_s[static_cast<jule::Int>(_10449_i)] < '0')) || (_10315_s[static_cast<jule::Int>(_10449_i)] > '9')) {
			return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
		}
		jule::Int _20517_e = 0LL;
		_iter_begin_5122248336:;
		if (!((_10449_i < _10315_s.len()) && (('0' <= _10315_s[static_cast<jule::Int>(_10449_i)]) && (_10315_s[static_cast<jule::Int>(_10449_i)] <= '9')))) { goto _iter_end_5122248336; }
		{
			if (_20517_e < 10000LL) {
				_20517_e=((_20517_e * 10LL) + static_cast<jule::Int>(_10315_s[static_cast<jule::Int>(_10449_i)])) - '0';
			}
		}
		_iter_next_5122248336:;
		(_10449_i)++;
		goto _iter_begin_5122248336;
		_iter_end_5122248336:;
		_13213_dp+=_20517_e * _19517_esign;
	} else if (_11813_base == 16LL) {
		return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
	}
	if (_10325_mantissa != 0LL) {
		_10340_exp=_13213_dp - _13113_nd_mant;
	}
	_10457_ok=true;
	return std::make_tuple(_10325_mantissa,_10340_exp,_10350_neg,_10425_trunc,_10438_hex,_10449_i,_10457_ok);
}



inline std::tuple<jule::F64,jule::Bool> _136fb03b0_atof64exact(jule::U64 _47216_mantissa,jule::Int _47235_exp,jule::Bool _47245_neg) {
	jule::Bool _47266_ok = jule::Bool();
	jule::F64 _47258_f = jule::F64();
	if ((_47216_mantissa >> _136f888c0_F64_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_47258_f,_47266_ok);
	}
	_47258_f=static_cast<jule::F64>(_47216_mantissa);
	if (_47245_neg) {
		_47258_f=static_cast<jule::F64>((-(_47258_f)));
	}
	{
		if (!((_47235_exp == 0LL))) { goto _case_end_5122289824; }
		_case_begin_5122289824:;
		{
			_47258_f = _47258_f;
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_5122289456;
		_case_end_5122289824:;
		if (!(((_47235_exp > 0LL) && (_47235_exp <= 37LL)))) { goto _case_end_5122289936; }
		_case_begin_5122289936:;
		{
			if (_47235_exp > 22LL) {
				_47258_f*=_136fb03b0_F64_POW10[static_cast<jule::Int>(_47235_exp - 22LL)];
				_47235_exp=22LL;
			}
			if ((_47258_f > 1e+15) || (_47258_f < -1000000000000000LL)) {
				return std::make_tuple(_47258_f,_47266_ok);
			}
			_47258_f = _47258_f * _136fb03b0_F64_POW10[static_cast<jule::Int>(_47235_exp)];
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_5122289456;
		_case_end_5122289936:;
		if (!(((_47235_exp < 0LL) && (_47235_exp >= -22LL)))) { goto _case_end_5122290048; }
		_case_begin_5122290048:;
		{
			_47258_f = jule::div(_47258_f,_136fb03b0_F64_POW10[static_cast<jule::Int>((-(_47235_exp)))]);
			_47266_ok = true;
			return std::make_tuple(_47258_f,_47266_ok);
		}
		goto _match_end_5122289456;
		_case_end_5122290048:;
		_match_end_5122289456:;
	}
	return std::make_tuple(_47258_f,_47266_ok);
}



inline std::tuple<jule::F32,jule::Bool> _136fb03b0_atof32exact(jule::U64 _50616_mantissa,jule::Int _50635_exp,jule::Bool _50649_neg) {
	jule::Bool _50670_ok = jule::Bool();
	jule::F32 _50662_f = jule::F32();
	if ((_50616_mantissa >> _136f888c0_F32_INFO._field_mantbits) != 0LL) {
		return std::make_tuple(_50662_f,_50670_ok);
	}
	_50662_f=static_cast<jule::F32>(_50616_mantissa);
	if (_50649_neg) {
		_50662_f=static_cast<jule::F32>((-(_50662_f)));
	}
	{
		if (!((_50635_exp == 0LL))) { goto _case_end_5122326736; }
		_case_begin_5122326736:;
		{
			_50662_f = _50662_f;
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_5122326368;
		_case_end_5122326736:;
		if (!(((_50635_exp > 0LL) && (_50635_exp <= 17LL)))) { goto _case_end_5122326848; }
		_case_begin_5122326848:;
		{
			if (_50635_exp > 10LL) {
				_50662_f*=_136fb03b0_F32_POW10[static_cast<jule::Int>(_50635_exp - 10LL)];
				_50635_exp=10LL;
			}
			if ((_50662_f > 1e+07) || (_50662_f < -10000000LL)) {
				return std::make_tuple(_50662_f,_50670_ok);
			}
			_50662_f = _50662_f * _136fb03b0_F32_POW10[static_cast<jule::Int>(_50635_exp)];
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_5122326368;
		_case_end_5122326848:;
		if (!(((_50635_exp < 0LL) && (_50635_exp >= -10LL)))) { goto _case_end_5122326960; }
		_case_begin_5122326960:;
		{
			_50662_f = jule::div(_50662_f,_136fb03b0_F32_POW10[static_cast<jule::Int>((-(_50635_exp)))]);
			_50670_ok = true;
			return std::make_tuple(_50662_f,_50670_ok);
		}
		goto _match_end_5122326368;
		_case_end_5122326960:;
		_match_end_5122326368:;
	}
	return std::make_tuple(_50662_f,_50670_ok);
}



inline std::tuple<jule::F64,jule::Int> _136fb03b0_atof_hex(jule::Str _54213_s,_136f888c0_FloatInfo& _54222_flt,jule::U64 _54242_mantissa,jule::Int _54261_exp,jule::Bool _54271_neg,jule::Bool _54282_trunc) {
	jule::Int _5439_max_exp = ((1LL << _54222_flt._field_expbits) + _54222_flt._field_bias) - 2LL;
	jule::Int _5449_min_exp = _54222_flt._field_bias + 1LL;
	_54261_exp+=static_cast<jule::Int>(_54222_flt._field_mantbits);
	_iter_begin_5122348768:;
	if (!((_54242_mantissa != 0LL) && ((_54242_mantissa >> (_54222_flt._field_mantbits + 2LL)) == 0LL))) { goto _iter_end_5122348768; }
	{
		_54242_mantissa<<=1LL;
		(_54261_exp)--;
	}
	_iter_next_5122348768:;
	goto _iter_begin_5122348768;
	_iter_end_5122348768:;
	if (_54282_trunc) {
		_54242_mantissa|=1LL;
	}
	_iter_begin_5122352912:;
	if (!((_54242_mantissa >> ((1LL + _54222_flt._field_mantbits) + 2LL)) != 0LL)) { goto _iter_end_5122352912; }
	{
		_54242_mantissa=(_54242_mantissa >> 1LL) | (_54242_mantissa & 1LL);
		(_54261_exp)++;
	}
	_iter_next_5122352912:;
	goto _iter_begin_5122352912;
	_iter_end_5122352912:;
	_iter_begin_5122351392:;
	if (!((_54242_mantissa > 1LL) && (_54261_exp < (_5449_min_exp - 2LL)))) { goto _iter_end_5122351392; }
	{
		_54242_mantissa=(_54242_mantissa >> 1LL) | (_54242_mantissa & 1LL);
		(_54261_exp)++;
	}
	_iter_next_5122351392:;
	goto _iter_begin_5122351392;
	_iter_end_5122351392:;
	jule::U64 _57413_round = _54242_mantissa & 3LL;
	_54242_mantissa>>=2LL;
	_57413_round|=_54242_mantissa & 1LL;
	_54261_exp+=2LL;
	if (_57413_round == 3LL) {
		(_54242_mantissa)++;
		if (_54242_mantissa == (1LL << (1LL + _54222_flt._field_mantbits))) {
			_54242_mantissa>>=1LL;
			(_54261_exp)++;
		}
	}
	if ((_54242_mantissa >> _54222_flt._field_mantbits) == 0LL) {
		_54261_exp=_54222_flt._field_bias;
	}
	jule::Int _58913_err = 0LLU;
	if (_54261_exp > _5439_max_exp) {
		_54242_mantissa=static_cast<jule::U64>(1LL << _54222_flt._field_mantbits);
		_54261_exp=_5439_max_exp + 1LL;
		_58913_err=1LLU;
	}
	jule::U64 _59613_bits = _54242_mantissa & ((1LL << _54222_flt._field_mantbits) - 1LL);
	_59613_bits|=static_cast<jule::U64>(static_cast<jule::U64>((_54261_exp - _54222_flt._field_bias) & ((1LL << _54222_flt._field_expbits) - 1LL)) << _54222_flt._field_mantbits);
	if (_54271_neg) {
		_59613_bits|=static_cast<jule::Int>((1LL << _54222_flt._field_mantbits) << _54222_flt._field_expbits);
	}
	if (_54222_flt == _136f888c0_F32_INFO) {
		return std::make_tuple(static_cast<jule::F64>(_136ef8580_f32_from_bits(static_cast<jule::U32>(_59613_bits))),_58913_err);
	}
	return std::make_tuple(_136ef8580_f64_from_bits(_59613_bits),_58913_err);
}



inline std::tuple<jule::F32,jule::Int,jule::Int> _136fb03b0_atof32(jule::Str _60711_s) {
	jule::Int _60745_err = 0LLU;
	jule::Int _60733_n = jule::Int();
	jule::F32 _60721_f = jule::F32();
	{
		jule::F64 _60914_val;
		jule::Int _60919__n;
		jule::Bool _60923_ok;
		std::tie(_60914_val,_60919__n,_60923_ok) = _136fb03b0_special(_60711_s);
		if (_60923_ok) {
			_60721_f = static_cast<jule::F32>(_60914_val);
			_60733_n = _60919__n;
			_60745_err = 0LLU;
			return std::make_tuple(_60721_f,_60733_n,_60745_err);
		}
	}
	jule::U64 _61510_mantissa;
	jule::Int _61520_exp;
	jule::Bool _61525_neg;
	jule::Bool _61530_trunc;
	jule::Bool _61537_hex;
	jule::Int _61542__n;
	jule::Bool _61550_ok;
	std::tie(_61510_mantissa,_61520_exp,_61525_neg,_61530_trunc,_61537_hex,_61542__n,_61550_ok) = _136fb03b0_read_float(_60711_s);
	_60733_n=_61542__n;
	if ((!(_61550_ok))) {
		_60721_f = 0LL;
		_60733_n = _60733_n;
		_60745_err = 2LLU;
		return std::make_tuple(_60721_f,_60733_n,_60745_err);
	}
	if (_61537_hex) {
		jule::F64 _62217_ff = 0e+00;
		std::tie(_62217_ff,_60745_err) = _136fb03b0_atof_hex(_60711_s.slice(0LL,static_cast<jule::Int>(_60733_n)),_136f888c0_F32_INFO,_61510_mantissa,_61520_exp,_61525_neg,_61530_trunc);
		_60721_f = static_cast<jule::F32>(_62217_ff);
		_60733_n = _60733_n;
		_60745_err = _60745_err;
		return std::make_tuple(_60721_f,_60733_n,_60745_err);
	}
	if (true) {
		if ((!(_61530_trunc))) {
			std::tie(_60721_f,_61550_ok) = _136fb03b0_atof32exact(_61510_mantissa,_61520_exp,_61525_neg);
			if (_61550_ok) {
				_60721_f = _60721_f;
				_60733_n = _60733_n;
				_60745_err = 0LLU;
				return std::make_tuple(_60721_f,_60733_n,_60745_err);
			}
		}
		std::tie(_60721_f,_61550_ok) = _136f32260_eisel_lemire32(_61510_mantissa,_61520_exp,_61525_neg);
		if (_61550_ok) {
			if ((!(_61530_trunc))) {
				_60721_f = _60721_f;
				_60733_n = _60733_n;
				_60745_err = 0LLU;
				return std::make_tuple(_60721_f,_60733_n,_60745_err);
			}
			jule::F32 _64421_f_up = 0e+00;
			std::tie(_64421_f_up,_61550_ok) = _136f32260_eisel_lemire32(_61510_mantissa + 1LL,_61520_exp,_61525_neg);
			if (_61550_ok && (_60721_f == _64421_f_up)) {
				_60721_f = _60721_f;
				_60733_n = _60733_n;
				_60745_err = 0LLU;
				return std::make_tuple(_60721_f,_60733_n,_60745_err);
			}
		}
	}
	_126f5c9e0_Decimal _65313_d = _126f5c9e0_Decimal();
	if ((!(_65313_d._method_set(_60711_s.slice(0LL,static_cast<jule::Int>(_60733_n)))))) {
		_60721_f = 0LL;
		_60733_n = _60733_n;
		_60745_err = 2LLU;
		return std::make_tuple(_60721_f,_60733_n,_60745_err);
	}
	jule::U64 _65710_b;
	jule::Bool _65713_ovf;
	std::tie(_65710_b,_65713_ovf) = _65313_d._method_float_bits(_136f888c0_F32_INFO);
	_60721_f=static_cast<jule::F32>(_136ef8580_f32_from_bits(static_cast<jule::U32>(_65710_b)));
	if (_65713_ovf) {
		_60745_err=1LLU;
	}
	_60721_f = _60721_f;
	_60733_n = _60733_n;
	_60745_err = _60745_err;
	return std::make_tuple(_60721_f,_60733_n,_60745_err);
}



inline std::tuple<jule::F64,jule::Int,jule::Int> _136fb03b0_atof64(jule::Str _66511_s) {
	jule::Int _66545_err = 0LLU;
	jule::Int _66537_n = jule::Int();
	jule::F64 _66525_f = jule::F64();
	{
		jule::F64 _66714_val;
		jule::Int _66719__n;
		jule::Bool _66723_ok;
		std::tie(_66714_val,_66719__n,_66723_ok) = _136fb03b0_special(_66511_s);
		if (_66723_ok) {
			_66525_f = _66714_val;
			_66537_n = _66719__n;
			_66545_err = 0LLU;
			return std::make_tuple(_66525_f,_66537_n,_66545_err);
		}
	}
	jule::U64 _67310_mantissa;
	jule::Int _67320_exp;
	jule::Bool _67325_neg;
	jule::Bool _67330_trunc;
	jule::Bool _67337_hex;
	jule::Int _67342__n;
	jule::Bool _67350_ok;
	std::tie(_67310_mantissa,_67320_exp,_67325_neg,_67330_trunc,_67337_hex,_67342__n,_67350_ok) = _136fb03b0_read_float(_66511_s);
	_66537_n=_67342__n;
	if ((!(_67350_ok))) {
		_66525_f = 0LL;
		_66537_n = _66537_n;
		_66545_err = 2LLU;
		return std::make_tuple(_66525_f,_66537_n,_66545_err);
	}
	if (_67337_hex) {
		std::tie(_66525_f,_66545_err) = _136fb03b0_atof_hex(_66511_s.slice(0LL,static_cast<jule::Int>(_66537_n)),_136f888c0_F64_INFO,_67310_mantissa,_67320_exp,_67325_neg,_67330_trunc);
		_66525_f = _66525_f;
		_66537_n = _66537_n;
		_66545_err = _66545_err;
		return std::make_tuple(_66525_f,_66537_n,_66545_err);
	}
	if (true) {
		if ((!(_67330_trunc))) {
			std::tie(_66525_f,_67350_ok) = _136fb03b0_atof64exact(_67310_mantissa,_67320_exp,_67325_neg);
			if (_67350_ok) {
				_66525_f = _66525_f;
				_66537_n = _66537_n;
				_66545_err = 0LLU;
				return std::make_tuple(_66525_f,_66537_n,_66545_err);
			}
		}
		std::tie(_66525_f,_67350_ok) = _136f32260_eisel_lemire64(_67310_mantissa,_67320_exp,_67325_neg);
		if (_67350_ok) {
			if ((!(_67330_trunc))) {
				_66525_f = _66525_f;
				_66537_n = _66537_n;
				_66545_err = 0LLU;
				return std::make_tuple(_66525_f,_66537_n,_66545_err);
			}
			jule::F64 _70121_f_up = 0e+00;
			std::tie(_70121_f_up,_67350_ok) = _136f32260_eisel_lemire64(_67310_mantissa + 1LL,_67320_exp,_67325_neg);
			if (_67350_ok && (_66525_f == _70121_f_up)) {
				_66525_f = _66525_f;
				_66537_n = _66537_n;
				_66545_err = 0LLU;
				return std::make_tuple(_66525_f,_66537_n,_66545_err);
			}
		}
	}
	_126f5c9e0_Decimal _71013_d = _126f5c9e0_Decimal();
	if ((!(_71013_d._method_set(_66511_s.slice(0LL,static_cast<jule::Int>(_66537_n)))))) {
		_66525_f = 0LL;
		_66537_n = _66537_n;
		_66545_err = 2LLU;
		return std::make_tuple(_66525_f,_66537_n,_66545_err);
	}
	jule::U64 _71410_b;
	jule::Bool _71413_ovf;
	std::tie(_71410_b,_71413_ovf) = _71013_d._method_float_bits(_136f888c0_F64_INFO);
	_66525_f=static_cast<jule::F64>(_136ef8580_f64_from_bits(_71410_b));
	if (_71413_ovf) {
		_66545_err=1LLU;
	}
	_66525_f = _66525_f;
	_66537_n = _66537_n;
	_66545_err = _66545_err;
	return std::make_tuple(_66525_f,_66537_n,_66545_err);
}



inline std::tuple<jule::F64,jule::Int,jule::Int> _136fb03b0_parse_float_prefix(jule::Str _72223_s,jule::Int _72231_bit_size) {
	if (_72231_bit_size == 32LL) {
		jule::F32 _72414_f;
		jule::Int _72417_n;
		jule::Int _72420_err;
		std::tie(_72414_f,_72417_n,_72420_err) = _136fb03b0_atof32(_72223_s);
		return std::make_tuple(static_cast<jule::F64>(_72414_f),_72417_n,_72420_err);
	}
	return _136fb03b0_atof64(_72223_s);
}



inline std::tuple<jule::F64,jule::Int> _136fb03b0_parse_float(jule::Str _75420_s,jule::Int _75428_bit_size) {
	jule::F64 _75510_f;
	jule::Int _75513_n;
	jule::Int _75516_err;
	std::tie(_75510_f,_75513_n,_75516_err) = _136fb03b0_parse_float_prefix(_75420_s,_75428_bit_size);
	if ((_75513_n != _75420_s.len()) && ((_75516_err == 0LLU) || (_75516_err != 2LLU))) {
		return std::make_tuple(0LL,2LLU);
	}
	return std::make_tuple(_75510_f,_75516_err);
}



inline void _126e27830_ryu_ftoa_fixed32(_136f888c0_DecimalSlice& _4926_d,jule::U32 _4947_mant,jule::Int _4958_exp,jule::Int _4968_prec) {
	if (_4968_prec < 0LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with negative prec", 42));
	}
	if (_4968_prec > 9LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed32 called with prec > 9", 37));
	}
	if (_4947_mant == 0LL) {
		std::tie(_4926_d._field_nd,_4926_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::Int _6213_e2 = _4958_exp;
	jule::Int _639_b = _1278411a0_len32(_4947_mant);
	if (_639_b < 25LL) {
		_4947_mant<<=static_cast<jule::Uint>(25LL - _639_b);
		_6213_e2+=static_cast<jule::Int>(static_cast<jule::Int>(_639_b) - 25LL);
	}
	jule::Int _749_q = ((-(_126e27830_mul_by_log2_log10(_6213_e2 + 24LL))) + _4968_prec) - 1LL;
	jule::Bool _7913_exact = (_749_q <= 27LL) && (_749_q >= 0LL);
	jule::U32 _8114_di;
	jule::Int _8118_dexp2;
	jule::Bool _8129_d0;
	std::tie(_8114_di,_8118_dexp2,_8129_d0) = _126e27830_mult64bit_pow10(_4947_mant,_6213_e2,_749_q);
	if (_8118_dexp2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult64bit_pow10", 49));
	}
	if (((_749_q < 0LL) && (_749_q >= -10LL)) && _126e27830_divisible_by_pow5(static_cast<jule::U64>(_4947_mant),static_cast<jule::Int>((-(_749_q))))) {
		_7913_exact=true;
		_8129_d0=true;
	}
	jule::Uint _949_extra = static_cast<jule::Uint>((-(_8118_dexp2)));
	jule::U32 _959_extra_mask = static_cast<jule::U32>((1LL << _949_extra) - 1LL);
	jule::U32 _9713_dfrac = 0LLU;
	std::tie(_8114_di,_9713_dfrac) = std::make_tuple(_8114_di >> _949_extra,_8114_di & _959_extra_mask);
	jule::Bool _9913_round_up = false;
	if (_7913_exact) {
		_9913_round_up=((_9713_dfrac > (1LL << (_949_extra - 1LL))) || ((_9713_dfrac == (1LL << (_949_extra - 1LL))) && (!(_8129_d0)))) || (((_9713_dfrac == (1LL << (_949_extra - 1LL))) && _8129_d0) && ((_8114_di & 1LL) == 1LL));
	} else {
		_9913_round_up=(_9713_dfrac >> (_949_extra - 1LL)) == 1LL;
	}
	if (_9713_dfrac != 0LL) {
		_8129_d0=false;
	}
	_126e27830_format_decimal(_4926_d,static_cast<jule::U64>(_8114_di),(!(_8129_d0)),_9913_round_up,_4968_prec);
	_4926_d._field_dp-=_749_q;
}



inline void _126e27830_ryu_ftoa_fixed64(_136f888c0_DecimalSlice& _12326_d,jule::U64 _12347_mant,jule::Int _12358_exp,jule::Int _12368_prec) {
	if (_12368_prec > 18LL) {
		jule::panic(jule::Str("ryu_ftoa_fixed64 called with prec > 18", 38));
	}
	if (_12347_mant == 0LL) {
		std::tie(_12326_d._field_nd,_12326_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	jule::Int _13313_e2 = _12358_exp;
	jule::Int _1349_b = _1278411a0_len64(_12347_mant);
	if (_1349_b < 55LL) {
		_12347_mant=_12347_mant << static_cast<jule::Uint>(55LL - _1349_b);
		_13313_e2+=static_cast<jule::Int>(static_cast<jule::Int>(_1349_b) - 55LL);
	}
	jule::Int _1489_q = ((-(_126e27830_mul_by_log2_log10(_13313_e2 + 54LL))) + _12368_prec) - 1LL;
	jule::Bool _15313_exact = (_1489_q <= 55LL) && (_1489_q >= 0LL);
	jule::U64 _15514_di;
	jule::Int _15518_dexp2;
	jule::Bool _15529_d0;
	std::tie(_15514_di,_15518_dexp2,_15529_d0) = _126e27830_mult128bit_pow10(_12347_mant,_13313_e2,_1489_q);
	if (_15518_dexp2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50));
	}
	if (((_1489_q < 0LL) && (_1489_q >= -22LL)) && _126e27830_divisible_by_pow5(_12347_mant,static_cast<jule::Int>((-(_1489_q))))) {
		_15313_exact=true;
		_15529_d0=true;
	}
	jule::Uint _1689_extra = static_cast<jule::Uint>((-(_15518_dexp2)));
	jule::U64 _1699_extra_mask = static_cast<jule::U64>((1LL << _1689_extra) - 1LL);
	jule::U64 _17113_dfrac = 0LLU;
	std::tie(_15514_di,_17113_dfrac) = std::make_tuple(_15514_di >> _1689_extra,_15514_di & _1699_extra_mask);
	jule::Bool _17313_round_up = false;
	if (_15313_exact) {
		_17313_round_up=((_17113_dfrac > (1LL << (_1689_extra - 1LL))) || ((_17113_dfrac == (1LL << (_1689_extra - 1LL))) && (!(_15529_d0)))) || (((_17113_dfrac == (1LL << (_1689_extra - 1LL))) && _15529_d0) && ((_15514_di & 1LL) == 1LL));
	} else {
		_17313_round_up=(_17113_dfrac >> (_1689_extra - 1LL)) == 1LL;
	}
	if (_17113_dfrac != 0LL) {
		_15529_d0=false;
	}
	_126e27830_format_decimal(_12326_d,_15514_di,(!(_15529_d0)),_17313_round_up,_12368_prec);
	_12326_d._field_dp-=_1489_q;
}



inline void _126e27830_format_decimal(_136f888c0_DecimalSlice& _20424_d,jule::U64 _20445_m,jule::Bool _20457_trunc,jule::Bool _20474_round_up,jule::Int _20490_prec) {
	jule::U64 _2059_max = _126e27830_U64_POW10[static_cast<jule::Int>(_20490_prec)];
	jule::Int _20613_trimmed = 0LL;
	_iter_begin_5122579456:;
	if (!(_20445_m >= _2059_max)) { goto _iter_end_5122579456; }
	{
		jule::U64 _20814_a = jule::div(_20445_m,10LL);
		jule::U64 _20817_b = _20445_m % 10LL;
		std::tie(_20814_a,_20817_b) = std::make_tuple(jule::div(_20445_m,10LL),_20445_m % 10LL);
		_20445_m=_20814_a;
		(_20613_trimmed)++;
		if (_20817_b > 5LL) {
			_20474_round_up=true;
		} else if (_20817_b < 5LL) {
			_20474_round_up=false;
		} else {
			_20474_round_up=_20457_trunc || ((_20445_m & 1LL) == 1LL);
		}
		if (_20817_b != 0LL) {
			_20457_trunc=true;
		}
	}
	_iter_next_5122579456:;
	goto _iter_begin_5122579456;
	_iter_end_5122579456:;
	if (_20474_round_up) {
		(_20445_m)++;
	}
	if (_20445_m >= _2059_max) {
		_20445_m/=10LL;
		(_20613_trimmed)++;
	}
	jule::Uint _23313_n = static_cast<jule::Uint>(_20490_prec);
	_20424_d._field_nd=static_cast<jule::Int>(_20490_prec);
	jule::U64 _23513_v = _20445_m;
	_iter_begin_5122593232:;
	if (!(_23513_v >= 100LL)) { goto _iter_end_5122593232; }
	{
		jule::U64 _23717_v1 = 0LLU;
		jule::U64 _23817_v2 = 0LLU;
		if ((_23513_v >> 32LL) == 0LL) {
			std::tie(_23717_v1,_23817_v2) = std::make_tuple(static_cast<jule::U64>(jule::div(static_cast<jule::U32>(_23513_v),100LL)),static_cast<jule::U64>(static_cast<jule::U32>(_23513_v) % 100LL));
		} else {
			std::tie(_23717_v1,_23817_v2) = std::make_tuple(jule::div(_23513_v,100LL),_23513_v % 100LL);
		}
		_23313_n-=2LL;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23817_v2) + 1LL)]);
		_20424_d._field_d[static_cast<jule::Int>(_23313_n + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23817_v2) + 0LL)]);
		_23513_v=_23717_v1;
	}
	_iter_next_5122593232:;
	goto _iter_begin_5122593232;
	_iter_end_5122593232:;
	if (_23513_v > 0LL) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _23513_v) + 1LL)]);
	}
	if (_23513_v >= 10LL) {
		(_23313_n)--;
		_20424_d._field_d[static_cast<jule::Int>(_23313_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(2LL * _23513_v)]);
	}
	_iter_begin_5122619408:;
	if (!(_20424_d._field_d[static_cast<jule::Int>(_20424_d._field_nd - 1LL)] == '0')) { goto _iter_end_5122619408; }
	{
		(_20424_d._field_nd)--;
		(_20613_trimmed)++;
	}
	_iter_next_5122619408:;
	goto _iter_begin_5122619408;
	_iter_end_5122619408:;
	_20424_d._field_dp=_20424_d._field_nd + _20613_trimmed;
}



inline void _126e27830_ryu_ftoa_shortest(_136f888c0_DecimalSlice& _26527_d,jule::U64 _26548_mant,jule::Int _26559_exp,_136f888c0_FloatInfo& _26570_flt) {
	if (_26548_mant == 0LL) {
		std::tie(_26527_d._field_nd,_26527_d._field_dp) = std::make_tuple(0LL,0LL);
		return;
	}
	if ((_26559_exp <= 0LL) && (_1278411a0_trailing_zeros64(_26548_mant) >= (-(_26559_exp)))) {
		_26548_mant>>=static_cast<jule::Uint>((-(_26559_exp)));
		_126e27830_ryu_digits(_26527_d,_26548_mant,_26548_mant,_26548_mant,true,false);
		return;
	}
	jule::U64 _27710_ml;
	jule::U64 _27714_mc;
	jule::U64 _27718_mu;
	jule::Int _27726_e2;
	std::tie(_27710_ml,_27714_mc,_27718_mu,_27726_e2) = _126e27830_compute_bounds(_26548_mant,_26559_exp,_26570_flt);
	if (_27726_e2 == 0LL) {
		_126e27830_ryu_digits(_26527_d,_27710_ml,_27714_mc,_27718_mu,true,false);
		return;
	}
	jule::Int _2839_q = _126e27830_mul_by_log2_log10(static_cast<jule::Int>((-(_27726_e2)))) + 1LL;
	jule::U64 _28713_dl = 0LLU;
	jule::U64 _28813_dc = 0LLU;
	jule::U64 _28913_du = 0LLU;
	jule::Bool _29013_dl0 = false;
	jule::Bool _29113_dc0 = false;
	jule::Bool _29213_du0 = false;
	if (_26570_flt == _136f888c0_F32_INFO) {
		jule::U32 _29417_dl32 = 0LLU;
		jule::U32 _29517_dc32 = 0LLU;
		jule::U32 _29617_du32 = 0LLU;
		std::tie(_29417_dl32,std::ignore,_29013_dl0) = _126e27830_mult64bit_pow10(static_cast<jule::U32>(_27710_ml),_27726_e2,_2839_q);
		std::tie(_29517_dc32,std::ignore,_29113_dc0) = _126e27830_mult64bit_pow10(static_cast<jule::U32>(_27714_mc),_27726_e2,_2839_q);
		std::tie(_29617_du32,_27726_e2,_29213_du0) = _126e27830_mult64bit_pow10(static_cast<jule::U32>(_27718_mu),_27726_e2,_2839_q);
		std::tie(_28713_dl,_28813_dc,_28913_du) = std::make_tuple(static_cast<jule::U64>(_29417_dl32),static_cast<jule::U64>(_29517_dc32),static_cast<jule::U64>(_29617_du32));
	} else {
		std::tie(_28713_dl,std::ignore,_29013_dl0) = _126e27830_mult128bit_pow10(_27710_ml,_27726_e2,_2839_q);
		std::tie(_28813_dc,std::ignore,_29113_dc0) = _126e27830_mult128bit_pow10(_27714_mc,_27726_e2,_2839_q);
		std::tie(_28913_du,_27726_e2,_29213_du0) = _126e27830_mult128bit_pow10(_27718_mu,_27726_e2,_2839_q);
	}
	if (_27726_e2 >= 0LL) {
		jule::panic(jule::Str("not enough significant bits after mult128bit_pow10", 50));
	}
	if (_2839_q > 55LL) {
		std::tie(_29013_dl0,_29113_dc0,_29213_du0) = std::make_tuple(false,false,false);
	}
	if ((_2839_q < 0LL) && (_2839_q >= -24LL)) {
		if (_126e27830_divisible_by_pow5(_27710_ml,static_cast<jule::Int>((-(_2839_q))))) {
			_29013_dl0=true;
		}
		if (_126e27830_divisible_by_pow5(_27714_mc,static_cast<jule::Int>((-(_2839_q))))) {
			_29113_dc0=true;
		}
		if (_126e27830_divisible_by_pow5(_27718_mu,static_cast<jule::Int>((-(_2839_q))))) {
			_29213_du0=true;
		}
	}
	jule::Uint _3299_extra = static_cast<jule::Uint>((-(_27726_e2)));
	jule::U64 _3309_extra_mask = static_cast<jule::U64>((1LL << _3299_extra) - 1LL);
	jule::U64 _33213_fracl = 0LLU;
	std::tie(_28713_dl,_33213_fracl) = std::make_tuple(_28713_dl >> _3299_extra,_28713_dl & _3309_extra_mask);
	jule::U64 _33413_fracc = 0LLU;
	std::tie(_28813_dc,_33413_fracc) = std::make_tuple(_28813_dc >> _3299_extra,_28813_dc & _3309_extra_mask);
	jule::U64 _33613_fracu = 0LLU;
	std::tie(_28913_du,_33613_fracu) = std::make_tuple(_28913_du >> _3299_extra,_28913_du & _3309_extra_mask);
	jule::Bool _34213_uok = (!(_29213_du0)) || (_33613_fracu > 0LL);
	if (_29213_du0 && (_33613_fracu == 0LL)) {
		_34213_uok=(_26548_mant & 1LL) == 0LL;
	}
	if ((!(_34213_uok))) {
		(_28913_du)--;
	}
	jule::Bool _35113_cup = false;
	if (_29113_dc0) {
		_35113_cup=(_33413_fracc > (1LL << (_3299_extra - 1LL))) || ((_33413_fracc == (1LL << (_3299_extra - 1LL))) && ((_28813_dc & 1LL) == 1LL));
	} else {
		_35113_cup=(_33413_fracc >> (_3299_extra - 1LL)) == 1LL;
	}
	jule::Bool _3679_lok = (_29013_dl0 && (_33213_fracl == 0LL)) && ((_26548_mant & 1LL) == 0LL);
	if ((!(_3679_lok))) {
		(_28713_dl)++;
	}
	jule::Bool _3729_c0 = _29113_dc0 && (_33413_fracc == 0LL);
	_126e27830_ryu_digits(_26527_d,_28713_dl,_28813_dc,_28913_du,_3729_c0,_35113_cup);
	_26527_d._field_dp-=_2839_q;
}



inline jule::Int _126e27830_mul_by_log2_log10(jule::Int _38322_x) {
	return (_38322_x * 78913LL) >> 18LL;
}



inline jule::Int _126e27830_mul_by_log10_log2(jule::Int _39322_x) {
	return (_39322_x * 108853LL) >> 15LL;
}



inline std::tuple<jule::U64,jule::U64,jule::U64,jule::Int> _126e27830_compute_bounds(jule::U64 _40119_mant,jule::Int _40130_exp,_136f888c0_FloatInfo& _40218_flt) {
	jule::Int _40274_e2 = jule::Int();
	jule::U64 _40262_upper = jule::U64();
	jule::U64 _40248_central = jule::U64();
	jule::U64 _40236_lower = jule::U64();
	if ((_40119_mant != (1LL << _40218_flt._field_mantbits)) || (_40130_exp == ((_40218_flt._field_bias + 1LL) - static_cast<jule::Int>(_40218_flt._field_mantbits)))) {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>((2LL * _40119_mant) - 1LL),static_cast<jule::U64>(2LL * _40119_mant),static_cast<jule::U64>((2LL * _40119_mant) + 1LL));
		_40274_e2=_40130_exp - 1LL;
	} else {
		std::tie(_40236_lower,_40248_central,_40262_upper) = std::make_tuple(static_cast<jule::U64>((4LL * _40119_mant) - 1LL),static_cast<jule::U64>(4LL * _40119_mant),static_cast<jule::U64>((4LL * _40119_mant) + 2LL));
		_40274_e2=_40130_exp - 2LL;
	}
	return std::make_tuple(_40236_lower,_40248_central,_40262_upper,_40274_e2);
}



inline void _126e27830_ryu_digits(_136f888c0_DecimalSlice& _41520_d,jule::U64 _41537_lower,jule::U64 _41549_central,jule::U64 _41563_upper,jule::Bool _41579_c0,jule::Bool _41593_cup) {
	jule::U32 _41614_lhi;
	jule::U32 _41619_llo;
	std::tie(_41614_lhi,_41619_llo) = _126e27830_divmod1e9(_41537_lower);
	jule::U32 _41710_chi;
	jule::U32 _41715_clo;
	std::tie(_41710_chi,_41715_clo) = _126e27830_divmod1e9(_41549_central);
	jule::U32 _41810_uhi;
	jule::U32 _41815_ulo;
	std::tie(_41810_uhi,_41815_ulo) = _126e27830_divmod1e9(_41563_upper);
	if (_41810_uhi == 0LL) {
		_126e27830_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,8LL);
	} else if (_41614_lhi < _41810_uhi) {
		if (_41619_llo != 0LL) {
			(_41614_lhi)++;
		}
		_41579_c0=_41579_c0 && (_41715_clo == 0LL);
		_41593_cup=(_41715_clo > 5e+08) || ((_41715_clo == 5e+08) && _41593_cup);
		_126e27830_ryu_digits32(_41520_d,_41614_lhi,_41710_chi,_41810_uhi,_41579_c0,_41593_cup,8LL);
		_41520_d._field_dp+=9LL;
	} else {
		_41520_d._field_nd=0LL;
		jule::Uint _43417_n = static_cast<jule::Uint>(9LLU);
		jule::U32 _43517_v = _41710_chi;
		_iter_begin_5122743344:;
		if (!(_43517_v > 0LL)) { goto _iter_end_5122743344; }
		{
			jule::U32 _43718_v1 = jule::div(_43517_v,10LL);
			jule::U32 _43722_v2 = _43517_v % 10LL;
			std::tie(_43718_v1,_43722_v2) = std::make_tuple(jule::div(_43517_v,10LL),_43517_v % 10LL);
			_43517_v=_43718_v1;
			(_43417_n)--;
			_41520_d._field_d[static_cast<jule::Int>(_43417_n)]=static_cast<jule::U8>(_43722_v2 + '0');
		}
		_iter_next_5122743344:;
		goto _iter_begin_5122743344;
		_iter_end_5122743344:;
		_41520_d._field_d=_41520_d._field_d.slice(static_cast<jule::Int>(_43417_n));
		_41520_d._field_nd=static_cast<jule::Int>(9LL - _43417_n);
		_126e27830_ryu_digits32(_41520_d,_41619_llo,_41715_clo,_41815_ulo,_41579_c0,_41593_cup,_41520_d._field_nd + 8LL);
	}
	_iter_begin_5122751392:;
	if (!((_41520_d._field_nd > 0LL) && (_41520_d._field_d[static_cast<jule::Int>(_41520_d._field_nd - 1LL)] == '0'))) { goto _iter_end_5122751392; }
	{
		(_41520_d._field_nd)--;
	}
	_iter_next_5122751392:;
	goto _iter_begin_5122751392;
	_iter_end_5122751392:;
	_iter_begin_5122754752:;
	if (!((_41520_d._field_nd > 0LL) && (_41520_d._field_d[static_cast<jule::Int>(0LL)] == '0'))) { goto _iter_end_5122754752; }
	{
		(_41520_d._field_nd)--;
		(_41520_d._field_dp)--;
		_41520_d._field_d=_41520_d._field_d.slice(static_cast<jule::Int>(1LL));
	}
	_iter_next_5122754752:;
	goto _iter_begin_5122754752;
	_iter_end_5122754752:;
}



inline void _126e27830_ryu_digits32(_136f888c0_DecimalSlice& _46022_d,jule::U32 _46043_lower,jule::U32 _46059_central,jule::U32 _46121_upper,jule::Bool _46137_c0,jule::Bool _46151_cup,jule::Int _46166_endindex) {
	if (_46121_upper == 0LL) {
		_46022_d._field_dp=_46166_endindex + 1LL;
		return;
	}
	jule::Int _46613_trimmed = 0LL;
	jule::Int _46913_c_next_digit = 0LL;
	_iter_begin_5122768944:;
	if (!(_46121_upper > 0LL)) { goto _iter_end_5122768944; }
	{
		jule::U32 _47613_l = jule::div(_46043_lower + 9LL,10LL);
		jule::U32 _47718_c = jule::div(_46059_central,10LL);
		jule::U32 _47725_cdigit = _46059_central % 10LL;
		std::tie(_47718_c,_47725_cdigit) = std::make_tuple(jule::div(_46059_central,10LL),_46059_central % 10LL);
		jule::U32 _47813_u = jule::div(_46121_upper,10LL);
		if (_47613_l > _47813_u) {
			goto _iter_end_5122768944;
		}
		if ((_47613_l == (_47718_c + 1LL)) && (_47718_c < _47813_u)) {
			(_47718_c)++;
			_47725_cdigit=0LL;
			_46151_cup=false;
		}
		(_46613_trimmed)++;
		_46137_c0=_46137_c0 && (_46913_c_next_digit == 0LL);
		_46913_c_next_digit=static_cast<jule::Int>(_47725_cdigit);
		std::tie(_46043_lower,_46059_central,_46121_upper) = std::make_tuple(_47613_l,_47718_c,_47813_u);
	}
	_iter_next_5122768944:;
	goto _iter_begin_5122768944;
	_iter_end_5122768944:;
	if (_46613_trimmed > 0LL) {
		_46151_cup=((_46913_c_next_digit > 5LL) || ((_46913_c_next_digit == 5LL) && (!(_46137_c0)))) || (((_46913_c_next_digit == 5LL) && _46137_c0) && ((_46059_central & 1LL) == 1LL));
	}
	if ((_46059_central < _46121_upper) && _46151_cup) {
		(_46059_central)++;
	}
	_46166_endindex-=_46613_trimmed;
	jule::U32 _51713_v = _46059_central;
	jule::Int _51813_n = _46166_endindex;
	_iter_begin_5122770432:;
	if (!(_51813_n > _46022_d._field_nd)) { goto _iter_end_5122770432; }
	{
		jule::U32 _52014_v1 = jule::div(_51713_v,100LL);
		jule::U32 _52018_v2 = _51713_v % 100LL;
		std::tie(_52014_v1,_52018_v2) = std::make_tuple(jule::div(_51713_v,100LL),_51713_v % 100LL);
		_46022_d._field_d[static_cast<jule::Int>(_51813_n)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _52018_v2) + 1LL)]);
		_46022_d._field_d[static_cast<jule::Int>(_51813_n - 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((2LL * _52018_v2) + 0LL)]);
		_51813_n-=2LL;
		_51713_v=_52014_v1;
	}
	_iter_next_5122770432:;
	goto _iter_begin_5122770432;
	_iter_end_5122770432:;
	if (_51813_n == _46022_d._field_nd) {
		_46022_d._field_d[static_cast<jule::Int>(_51813_n)]=static_cast<jule::U8>(_51713_v + '0');
	}
	_46022_d._field_nd=_46166_endindex + 1LL;
	_46022_d._field_dp=_46022_d._field_nd + _46613_trimmed;
}



inline std::tuple<jule::U32,jule::Int,jule::Bool> _126e27830_mult64bit_pow10(jule::U32 _54220_m,jule::Int _54232_e2,jule::Int _54241_q) {
	jule::Bool _54273_exact = jule::Bool();
	jule::Int _54262_resE = jule::Int();
	jule::U32 _54251_resM = jule::U32();
	if (_54241_q == 0LL) {
		_54251_resM = _54220_m << 6LL;
		_54262_resE = _54232_e2 - 6LL;
		_54273_exact = true;
		return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
	}
	if ((_54241_q < -348LL) || (347LL < _54241_q)) {
		jule::panic(jule::Str("mult64bit_pow10: power of 10 is out of range", 44));
	}
	jule::U64 _55113_pow = _136f32260_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_54241_q - -348LL)][static_cast<jule::Int>(1LL)];
	if (_54241_q < 0LL) {
		_55113_pow+=1LL;
	}
	jule::U64 _55610_hi;
	jule::U64 _55614_lo;
	std::tie(_55610_hi,_55614_lo) = _1278411a0_mul64(static_cast<jule::U64>(_54220_m),_55113_pow);
	_54232_e2+=static_cast<jule::Int>((_126e27830_mul_by_log10_log2(_54241_q) - 63LL) + 57LL);
	_54251_resM = static_cast<jule::U32>((_55610_hi << 7LL) | (_55614_lo >> 57LL));
	_54262_resE = _54232_e2;
	_54273_exact = (_55614_lo << 7LL) == 0LL;
	return std::make_tuple(_54251_resM,_54262_resE,_54273_exact);
}



inline std::tuple<jule::U64,jule::Int,jule::Bool> _126e27830_mult128bit_pow10(jule::U64 _57021_m,jule::Int _57033_e2,jule::Int _57042_q) {
	jule::Bool _57074_exact = jule::Bool();
	jule::Int _57063_resE = jule::Int();
	jule::U64 _57052_resM = jule::U64();
	if (_57042_q == 0LL) {
		_57052_resM = _57021_m << 8LL;
		_57063_resE = _57033_e2 - 8LL;
		_57074_exact = true;
		return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
	}
	if ((_57042_q < -348LL) || (347LL < _57042_q)) {
		jule::panic(jule::Str("mult128bit_pow10: power of 10 is out of range", 45));
	}
	jule::Array<jule::U64,2> _57913_pow = _136f32260_DETAILED_POWS_OF_TEN[static_cast<jule::Int>(_57042_q - -348LL)];
	if (_57042_q < 0LL) {
		_57913_pow[static_cast<jule::Int>(0LL)]+=1LL;
	}
	_57033_e2+=static_cast<jule::Int>((_126e27830_mul_by_log10_log2(_57042_q) - 127LL) + 119LL);
	jule::U64 _58710_l1;
	jule::U64 _58714_l0;
	std::tie(_58710_l1,_58714_l0) = _1278411a0_mul64(_57021_m,_57913_pow[static_cast<jule::Int>(0LL)]);
	jule::U64 _58814_h1;
	jule::U64 _58818_h0;
	std::tie(_58814_h1,_58818_h0) = _1278411a0_mul64(_57021_m,_57913_pow[static_cast<jule::Int>(1LL)]);
	jule::U64 _58910_mid;
	jule::U64 _58915_carry;
	std::tie(_58910_mid,_58915_carry) = _1278411a0_add64(_58710_l1,_58818_h0,0LLU);
	_58814_h1+=_58915_carry;
	_57052_resM = (_58814_h1 << 9LL) | (_58910_mid >> 55LL);
	_57063_resE = _57033_e2;
	_57074_exact = ((_58910_mid << 9LL) == 0LL) && (_58714_l0 == 0LL);
	return std::make_tuple(_57052_resM,_57063_resE,_57074_exact);
}



inline jule::Bool _126e27830_divisible_by_pow5(jule::U64 _59426_m,jule::Int _59434_k) {
	if (_59426_m == 0LL) {
		return true;
	}
	jule::Int _59813_i = 0LL;
	_iter_begin_5122856752:;
	if (!(_59813_i < _59434_k)) { goto _iter_end_5122856752; }
	{
		if ((_59426_m % 5LL) != 0LL) {
			return false;
		}
		_59426_m/=5LL;
	}
	_iter_next_5122856752:;
	(_59813_i)++;
	goto _iter_begin_5122856752;
	_iter_end_5122856752:;
	return true;
}



inline std::tuple<jule::U32,jule::U32> _126e27830_divmod1e9(jule::U64 _61014_x) {
	if (true) {
		return std::make_tuple(static_cast<jule::U32>(jule::div(_61014_x,1e+09)),static_cast<jule::U32>(_61014_x % 1000000000LL));
	}
	jule::U64 _61510_hi;
	std::tie(_61510_hi,std::ignore) = _1278411a0_mul64(_61014_x >> 1LL,9903520314283042200LLU);
	jule::U64 _6169_q = _61510_hi >> 28LL;
	return std::make_tuple(static_cast<jule::U32>(_6169_q),static_cast<jule::U32>(_61014_x - (_6169_q * 1e+09)));
}



inline void _126f5c9e0_trim(_126f5c9e0_Decimal& _27514_a) {
	_iter_begin_5122873280:;
	if (!((_27514_a._field_nd > 0LL) && (_27514_a._field_d[static_cast<jule::Int>(_27514_a._field_nd - 1LL)] == '0'))) { goto _iter_end_5122873280; }
	{
		(_27514_a._field_nd)--;
	}
	_iter_next_5122873280:;
	goto _iter_begin_5122873280;
	_iter_end_5122873280:;
	if (_27514_a._field_nd == 0LL) {
		_27514_a._field_dp=0LL;
	}
}



inline void _126f5c9e0_right_shift(_126f5c9e0_Decimal& _28521_a,jule::Uint _28533_k) {
	jule::Int _28613_r = 0LL;
	jule::Int _28713_w = 0LL;
	jule::Uint _29013_n = 0LLU;
	_iter_begin_5122878336:;
	if (!((_29013_n >> _28533_k) == 0LL)) { goto _iter_end_5122878336; }
	{
		if (_28613_r >= _28521_a._field_nd) {
			if (_29013_n == 0LL) {
				_28521_a._field_nd=0LL;
				return;
			}
			_iter_begin_5122887728:;
			if (!((_29013_n >> _28533_k) == 0LL)) { goto _iter_end_5122887728; }
			{
				_29013_n=_29013_n * 10LL;
				(_28613_r)++;
			}
			_iter_next_5122887728:;
			goto _iter_begin_5122887728;
			_iter_end_5122887728:;
			goto _iter_end_5122878336;
		}
		jule::Uint _30413_c = static_cast<jule::Uint>(_28521_a._field_d[static_cast<jule::Int>(_28613_r)]);
		_29013_n=((_29013_n * 10LL) + _30413_c) - '0';
	}
	_iter_next_5122878336:;
	(_28613_r)++;
	goto _iter_begin_5122878336;
	_iter_end_5122878336:;
	_28521_a._field_dp-=_28613_r - 1LL;
	jule::Uint _3099_mask = static_cast<jule::Uint>(static_cast<jule::Uint>(1LL << _28533_k) - 1LL);
	_iter_begin_5122883520:;
	if (!(_28613_r < _28521_a._field_nd)) { goto _iter_end_5122883520; }
	{
		jule::Uint _31313_c = static_cast<jule::Uint>(_28521_a._field_d[static_cast<jule::Int>(_28613_r)]);
		jule::Uint _31413_dig = _29013_n >> _28533_k;
		_29013_n&=_3099_mask;
		_28521_a._field_d[static_cast<jule::Int>(_28713_w)]=static_cast<jule::U8>(_31413_dig + '0');
		(_28713_w)++;
		_29013_n=((_29013_n * 10LL) + _31313_c) - '0';
	}
	_iter_next_5122883520:;
	(_28613_r)++;
	goto _iter_begin_5122883520;
	_iter_end_5122883520:;
	_iter_begin_5122901456:;
	if (!(_29013_n > 0LL)) { goto _iter_end_5122901456; }
	{
		jule::Uint _32313_dig = _29013_n >> _28533_k;
		_29013_n&=_3099_mask;
		if (_28713_w < 800LL) {
			_28521_a._field_d[static_cast<jule::Int>(_28713_w)]=static_cast<jule::U8>(_32313_dig + '0');
			(_28713_w)++;
		} else if (_32313_dig > 0LL) {
			_28521_a._field_trunc=true;
		}
		_29013_n=_29013_n * 10LL;
	}
	_iter_next_5122901456:;
	goto _iter_begin_5122901456;
	_iter_end_5122901456:;
	_28521_a._field_nd=_28713_w;
	_126f5c9e0_trim(_28521_a);
}



inline jule::Bool _126f5c9e0_prefix_is_less_than(jule::Slice<jule::U8> _33924_b,jule::Str _33935_s) {
	jule::Int _34013_i = 0LL;
	_iter_begin_5122913024:;
	if (!(_34013_i < _33935_s.len())) { goto _iter_end_5122913024; }
	{
		if (_34013_i >= _33924_b.len()) {
			return true;
		}
		if (_33924_b[static_cast<jule::Int>(_34013_i)] != _33935_s[static_cast<jule::Int>(_34013_i)]) {
			return _33924_b[static_cast<jule::Int>(_34013_i)] < _33935_s[static_cast<jule::Int>(_34013_i)];
		}
	}
	_iter_next_5122913024:;
	(_34013_i)++;
	goto _iter_begin_5122913024;
	_iter_end_5122913024:;
	return false;
}



inline void _126f5c9e0_left_shift(_126f5c9e0_Decimal& _35320_a,jule::Uint _35332_k) {
	jule::Int _35413_delta = _126f5c9e0_LEFTCHEATS[static_cast<jule::Int>(_35332_k)]._field_delta;
	if (_126f5c9e0_prefix_is_less_than(_35320_a._field_d.slice(static_cast<jule::Int>(0LL),static_cast<jule::Int>(_35320_a._field_nd)),_126f5c9e0_LEFTCHEATS[static_cast<jule::Int>(_35332_k)]._field_cutoff)) {
		(_35413_delta)--;
	}
	jule::Int _35913_r = _35320_a._field_nd;
	jule::Int _36013_w = _35320_a._field_nd + _35413_delta;
	jule::Uint _36313_n = 0LLU;
	(_35913_r)--;
	_iter_begin_5122931680:;
	if (!(_35913_r >= 0LL)) { goto _iter_end_5122931680; }
	{
		_36313_n+=static_cast<jule::Uint>((static_cast<jule::Uint>(_35320_a._field_d[static_cast<jule::Int>(_35913_r)]) - '0') << _35332_k);
		jule::Uint _36713_quo = jule::div(_36313_n,10LL);
		jule::Uint _36813_rem = _36313_n - (10LL * _36713_quo);
		(_36013_w)--;
		if (_36013_w < 800LL) {
			_35320_a._field_d[static_cast<jule::Int>(_36013_w)]=static_cast<jule::U8>(_36813_rem + '0');
		} else if (_36813_rem != 0LL) {
			_35320_a._field_trunc=true;
		}
		_36313_n=_36713_quo;
	}
	_iter_next_5122931680:;
	(_35913_r)--;
	goto _iter_begin_5122931680;
	_iter_end_5122931680:;
	_iter_begin_5122929840:;
	if (!(_36313_n > 0LL)) { goto _iter_end_5122929840; }
	{
		jule::Uint _38013_quo = jule::div(_36313_n,10LL);
		jule::Uint _38113_rem = _36313_n - (10LL * _38013_quo);
		(_36013_w)--;
		if (_36013_w < 800LL) {
			_35320_a._field_d[static_cast<jule::Int>(_36013_w)]=static_cast<jule::U8>(_38113_rem + '0');
		} else if (_38113_rem != 0LL) {
			_35320_a._field_trunc=true;
		}
		_36313_n=_38013_quo;
	}
	_iter_next_5122929840:;
	goto _iter_begin_5122929840;
	_iter_end_5122929840:;
	_35320_a._field_nd+=_35413_delta;
	if (_35320_a._field_nd >= 800LL) {
		_35320_a._field_nd=800LL;
	}
	_35320_a._field_dp+=_35413_delta;
	_126f5c9e0_trim(_35320_a);
}



inline jule::Bool _126f5c9e0_should_round_up(_126f5c9e0_Decimal& _40021_a,jule::Int _40033_nd) {
	if ((_40033_nd < 0LL) || (_40033_nd >= _40021_a._field_nd)) {
		return false;
	}
	if ((_40021_a._field_d[static_cast<jule::Int>(_40033_nd)] == '5') && ((_40033_nd + 1LL) == _40021_a._field_nd)) {
		if (_40021_a._field_trunc) {
			return true;
		}
		return (_40033_nd > 0LL) && (((_40021_a._field_d[static_cast<jule::Int>(_40033_nd - 1LL)] - '0') % 2LL) != 0LL);
	}
	return _40021_a._field_d[static_cast<jule::Int>(_40033_nd)] >= '5';
}



inline jule::Str _127164920_fmt_uint(jule::U64 _6217_i,jule::Int _6225_base) {
	if ((true && (_6217_i < 100LL)) && (_6225_base == 10LL)) {
		return _127164920_small(static_cast<jule::Int>(_6217_i));
	}
	jule::Str _6613_s;
	std::tie(std::ignore,_6613_s) = _127164920_fmt_bits(nullptr,_6217_i,_6225_base,false,false);
	return _6613_s;
}



inline jule::Str _127164920_fmt_int(jule::I64 _7316_i,jule::Int _7324_base) {
	if (((true && (0LL <= _7316_i)) && (_7316_i < 100LL)) && (_7324_base == 10LL)) {
		return _127164920_small(static_cast<jule::Int>(_7316_i));
	}
	jule::Str _7713_s;
	std::tie(std::ignore,_7713_s) = _127164920_fmt_bits(nullptr,static_cast<jule::U64>(_7316_i),_7324_base,_7316_i < 0LL,false);
	return _7713_s;
}



inline jule::Str _127164920_itoa(jule::Int _8213_i) {
	return _127164920_fmt_int(static_cast<jule::I64>(_8213_i),10LL);
}



inline jule::Str _127164920_small(jule::Int _8510_i) {
	if (_8510_i < 10LL) {
		return jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).slice(static_cast<jule::Int>(_8510_i),static_cast<jule::Int>(_8510_i + 1LL));
	}
	return jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200).slice(static_cast<jule::Int>(_8510_i * 2LL),static_cast<jule::Int>((_8510_i * 2LL) + 2LL));
}



inline jule::Bool _127164920_is_power_of_two(jule::Int _9220_x) {
	return (_9220_x & (_9220_x - 1LL)) == 0LL;
}



inline std::tuple<jule::Slice<jule::U8>,jule::Str> _127164920_fmt_bits(jule::Slice<jule::U8> _9917_dst,jule::U64 _9934_u,jule::Int _9942_base,jule::Bool _9953_neg,jule::Bool _9964_append_) {
	jule::Str _9992_s = jule::Str();
	jule::Slice<jule::U8> _9981_d = jule::Slice<jule::U8>();
	if ((_9942_base < 2LL) || (_9942_base > jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36).len())) {
		jule::panic(jule::Str("std::conv: illegal base", 23));
	}
	jule::Array<jule::U8,65> _10513_a = jule::Array<jule::U8,65>({});
	jule::Int _10613_i = 65LL;
	if (_9953_neg) {
		_9934_u=static_cast<jule::U64>((-(_9934_u)));
	}
	if (_9942_base == 10LL) {
		if (false) {
			_iter_begin_5123001456:;
			if (!(_9934_u >= 1e+09)) { goto _iter_end_5123001456; }
			{
				jule::U64 _12521_q = jule::div(_9934_u,1e+09);
				jule::Uint _12625_us = static_cast<jule::Uint>(_9934_u - (_12521_q * 1e+09));
				jule::Int _12725_j = 4LL;
				_iter_begin_5123004624:;
				if (!(_12725_j > 0LL)) { goto _iter_end_5123004624; }
				{
					jule::Uint _12925_is = (_12625_us % 100LL) * 2LL;
					_12625_us/=100LL;
					_10613_i-=2LL;
					_10513_a[static_cast<jule::Int>(_10613_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_12925_is + 1LL)]);
					_10513_a[static_cast<jule::Int>(_10613_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_12925_is + 0LL)]);
				}
				_iter_next_5123004624:;
				(_12725_j)--;
				goto _iter_begin_5123004624;
				_iter_end_5123004624:;
				(_10613_i)--;
				_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>((_12625_us * 2LL) + 1LL)]);
				_9934_u=_12521_q;
			}
			_iter_next_5123001456:;
			goto _iter_begin_5123001456;
			_iter_end_5123001456:;
		}
		jule::Uint _14717_us = static_cast<jule::Uint>(_9934_u);
		_iter_begin_5123000768:;
		if (!(_14717_us >= 100LL)) { goto _iter_end_5123000768; }
		{
			jule::Uint _14917_is = (_14717_us % 100LL) * 2LL;
			_14717_us/=100LL;
			_10613_i-=2LL;
			_10513_a[static_cast<jule::Int>(_10613_i + 1LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_14917_is + 1LL)]);
			_10513_a[static_cast<jule::Int>(_10613_i + 0LL)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_14917_is + 0LL)]);
		}
		_iter_next_5123000768:;
		goto _iter_begin_5123000768;
		_iter_end_5123000768:;
		jule::Uint _15713_is = _14717_us * 2LL;
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_15713_is + 1LL)]);
		if (_14717_us >= 10LL) {
			(_10613_i)--;
			_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("00010203040506070809101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899", 200)[static_cast<jule::Int>(_15713_is)]);
		}
	} else if (_127164920_is_power_of_two(_9942_base)) {
		jule::Uint _17213_shift = static_cast<jule::Uint>(_1278411a0_trailing_zeros(static_cast<jule::Uint>(_9942_base))) & 7LL;
		jule::U64 _17313_b = static_cast<jule::U64>(_9942_base);
		jule::Uint _17413_m = static_cast<jule::Uint>(_9942_base) - 1LL;
		_iter_begin_5123040464:;
		if (!(_9934_u >= _17313_b)) { goto _iter_end_5123040464; }
		{
			(_10613_i)--;
			_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u) & _17413_m)]);
			_9934_u>>=_17213_shift;
		}
		_iter_next_5123040464:;
		goto _iter_begin_5123040464;
		_iter_end_5123040464:;
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u))]);
	} else {
		jule::U64 _18513_b = static_cast<jule::U64>(_9942_base);
		_iter_begin_5123049696:;
		if (!(_9934_u >= _18513_b)) { goto _iter_end_5123049696; }
		{
			(_10613_i)--;
			jule::U64 _19117_q = jule::div(_9934_u,_18513_b);
			_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u - (_19117_q * _18513_b)))]);
			_9934_u=_19117_q;
		}
		_iter_next_5123049696:;
		goto _iter_begin_5123049696;
		_iter_end_5123049696:;
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]=static_cast<jule::U8>(jule::Str("0123456789abcdefghijklmnopqrstuvwxyz", 36)[static_cast<jule::Int>(static_cast<jule::Uint>(_9934_u))]);
	}
	if (_9953_neg) {
		(_10613_i)--;
		_10513_a[static_cast<jule::Int>(_10613_i)]='-';
	}
	if (_9964_append_) {
		_9981_d=append(_9917_dst,_10513_a.slice(static_cast<jule::Int>(_10613_i)));
		return std::make_tuple(_9981_d,_9992_s);
	}
	_9992_s=static_cast<jule::Str>(_10513_a.slice(static_cast<jule::Int>(_10613_i)));
	return std::make_tuple(_9981_d,_9992_s);
}



inline void _126ef0cf0_exit(jule::Int _1313_code) {
	_126e418f0_exit(_1313_code);
}



inline jule::Str _126ef0cf0_executable(void) {
	return __jule_executable();
}



inline jule::Bool _136f04bd0_is_std_header_path(jule::Str _2627_p) {
	return (_2627_p[static_cast<jule::Int>(0LL)] == '<') && (_2627_p[static_cast<jule::Int>(_2627_p.len() - 1LL)] == '>');
}



inline jule::Bool _136f04bd0_is_valid_header_ext(jule::Str _3128_ext) {
	{
		auto &__julec_range_expr = _136f04bd0_CPP_HEADER_EXTS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _136f04bd0_valid_ext = *__julec_range_begin;
			_iter_begin_5123422384:;
			{
				if (_3128_ext == _136f04bd0_valid_ext) {
					return true;
				}
			}
			_iter_next_5123422384:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _136f04bd0_valid_ext = *__julec_range_begin; goto _iter_begin_5123422384; }
			_iter_end_5123422384:;
		}
	}
	return false;
}



inline jule::Bool _136f04bd0_is_valid_cpp_ext(jule::Str _4225_ext) {
	{
		auto &__julec_range_expr = _136f04bd0_CPP_EXTS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _136f04bd0_e = *__julec_range_begin;
			_iter_begin_5123421168:;
			{
				if (_4225_ext == _136f04bd0_e) {
					return true;
				}
			}
			_iter_next_5123421168:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _136f04bd0_e = *__julec_range_begin; goto _iter_begin_5123421168; }
			_iter_end_5123421168:;
		}
	}
	{
		auto &__julec_range_expr = _136f04bd0_OBJECTIVE_CPP_EXTS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _136f04bd0_e = *__julec_range_begin;
			_iter_begin_5123431568:;
			{
				if (_4225_ext == _136f04bd0_e) {
					return true;
				}
			}
			_iter_next_5123431568:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _136f04bd0_e = *__julec_range_begin; goto _iter_begin_5123431568; }
			_iter_end_5123431568:;
		}
	}
	return false;
}



inline std::tuple<jule::Bool,jule::Bool> _136e67690_check_os(jule::Str _713_arg) {
	jule::Bool _735_exist = jule::Bool();
	jule::Bool _725_ok = jule::Bool();
	_725_ok=false;
	_735_exist=true;
	{
		auto &_match_expr{ _713_arg };
		if (!((jule::Str("windows", 7)) == _match_expr)) { goto _case_end_5123439184; }
		_case_begin_5123439184:;
		{
			_725_ok=_136ea8e10_is_windows(_136e9f470_OS);
		}
		goto _match_end_5123436080;
		_case_end_5123439184:;
		if (!((jule::Str("darwin", 6)) == _match_expr)) { goto _case_end_5123437824; }
		_case_begin_5123437824:;
		{
			_725_ok=_136ea8e10_is_darwin(_136e9f470_OS);
		}
		goto _match_end_5123436080;
		_case_end_5123437824:;
		if (!((jule::Str("linux", 5)) == _match_expr)) { goto _case_end_5123437936; }
		_case_begin_5123437936:;
		{
			_725_ok=_136ea8e10_is_linux(_136e9f470_OS);
		}
		goto _match_end_5123436080;
		_case_end_5123437936:;
		if (!((jule::Str("unix", 4)) == _match_expr)) { goto _case_end_5123438048; }
		_case_begin_5123438048:;
		{
			_725_ok=_136ea8e10_is_unix(_136e9f470_OS);
		}
		goto _match_end_5123436080;
		_case_end_5123438048:;
		_case_begin_5123436512:;
		{
			_725_ok=true;
			_735_exist=false;
		}
		goto _match_end_5123436080;
		_case_end_5123436512:;
		_match_end_5123436080:;
	}
	return std::make_tuple(_725_ok,_735_exist);
}



inline std::tuple<jule::Bool,jule::Bool> _136e67690_check_arch(jule::Str _2415_arg) {
	jule::Bool _2437_exist = jule::Bool();
	jule::Bool _2427_ok = jule::Bool();
	_2427_ok=false;
	_2437_exist=true;
	{
		auto &_match_expr{ _2415_arg };
		if (!((jule::Str("i386", 4)) == _match_expr)) { goto _case_end_5123448704; }
		_case_begin_5123448704:;
		{
			_2427_ok=_136ea8e10_is_i386(_136e9f470_ARCH);
		}
		goto _match_end_5123445600;
		_case_end_5123448704:;
		if (!((jule::Str("amd64", 5)) == _match_expr)) { goto _case_end_5123447344; }
		_case_begin_5123447344:;
		{
			_2427_ok=_136ea8e10_is_amd64(_136e9f470_ARCH);
		}
		goto _match_end_5123445600;
		_case_end_5123447344:;
		if (!((jule::Str("arm", 3)) == _match_expr)) { goto _case_end_5123447456; }
		_case_begin_5123447456:;
		{
			_2427_ok=_136ea8e10_is_arm(_136e9f470_ARCH);
		}
		goto _match_end_5123445600;
		_case_end_5123447456:;
		if (!((jule::Str("arm64", 5)) == _match_expr)) { goto _case_end_5123447568; }
		_case_begin_5123447568:;
		{
			_2427_ok=_136ea8e10_is_arm64(_136e9f470_ARCH);
		}
		goto _match_end_5123445600;
		_case_end_5123447568:;
		if (!((jule::Str("64bit", 5)) == _match_expr)) { goto _case_end_5123448000; }
		_case_begin_5123448000:;
		{
			_2427_ok=_136ea8e10_is_64bit(_136e9f470_ARCH);
		}
		goto _match_end_5123445600;
		_case_end_5123448000:;
		if (!((jule::Str("32bit", 5)) == _match_expr)) { goto _case_end_5123448112; }
		_case_begin_5123448112:;
		{
			_2427_ok=_136ea8e10_is_32bit(_136e9f470_ARCH);
		}
		goto _match_end_5123445600;
		_case_end_5123448112:;
		_case_begin_5123446032:;
		{
			_2427_ok=true;
			_2437_exist=false;
		}
		goto _match_end_5123445600;
		_case_end_5123446032:;
		_match_end_5123445600:;
	}
	return std::make_tuple(_2427_ok,_2437_exist);
}



inline jule::Bool _136e67690_is_pass_file_annotation(jule::Str _4436_p) {
	_4436_p=_136ec98d0_base(_4436_p);
	jule::I64 _469_n = _4436_p.len();
	_4436_p=_4436_p.slice(0LL,static_cast<jule::Int>(_469_n - _136ec98d0_ext(_4436_p).len()));
	jule::Str _5213_a1 = jule::Str("", 0);
	jule::Str _5513_a2 = jule::Str("", 0);
	jule::Int _5813_i = _4436_p.rfind(jule::Str("_", 1));
	if (_5813_i == -1LL) {
		jule::Bool _6118_ok;
		jule::Bool _6126_exist;
		std::tie(_6118_ok,_6126_exist) = _136e67690_check_os(_4436_p);
		if (_6126_exist) {
			return _6118_ok;
		}
		std::tie(_6118_ok,_6126_exist) = _136e67690_check_arch(_4436_p);
		return (!(_6126_exist)) || _6118_ok;
	}
	if ((_5813_i + 1LL) >= _469_n) {
		return true;
	}
	_5213_a1=_4436_p.slice(static_cast<jule::Int>(_5813_i + 1LL));
	_4436_p=_4436_p.slice(0LL,static_cast<jule::Int>(_5813_i));
	_5813_i=static_cast<jule::Int>(_4436_p.rfind(jule::Str("_", 1)));
	if (_5813_i != -1LL) {
		_5513_a2=_4436_p.slice(static_cast<jule::Int>(_5813_i + 1LL));
	}
	if (_5513_a2 == jule::Str("", 0)) {
		jule::Bool _8218_ok;
		jule::Bool _8226_exist;
		std::tie(_8218_ok,_8226_exist) = _136e67690_check_os(_5213_a1);
		if (_8226_exist) {
			return _8218_ok;
		}
		std::tie(_8218_ok,_8226_exist) = _136e67690_check_arch(_5213_a1);
		return (!(_8226_exist)) || _8218_ok;
	}
	jule::Bool _9014_ok;
	jule::Bool _9022_exist;
	std::tie(_9014_ok,_9022_exist) = _136e67690_check_arch(_5213_a1);
	if (_9022_exist) {
		if ((!(_9014_ok))) {
			return false;
		}
		jule::Bool _9514_ok;
		jule::Bool _9518_exist;
		std::tie(_9514_ok,_9518_exist) = _136e67690_check_os(_5513_a2);
		return (!(_9518_exist)) || _9514_ok;
	}
	std::tie(_9014_ok,_9022_exist) = _136e67690_check_os(_5213_a1);
	return (!(_9022_exist)) || _9014_ok;
}



inline jule::Str _136e8b750_errorf(jule::Str _20115_key,jule::Slice<jule::Any> _20125_args) {
	jule::Str _2029_fmt = _136e8b750_ERRORS[_20115_key];
	return _136e8b750_apply_fmt(_2029_fmt,_20125_args);
}



inline jule::Str _136e8b750_arg_to_str(jule::Any _20615_arg) {
	{
		auto &_match_expr{ _20615_arg };
		if (!(_match_expr.type_is<jule::Str>())) { goto _case_end_5123494576; }
		_case_begin_5123494576:;
		{
			return _20615_arg.operator jule::Str();
		}
		goto _match_end_5123492384;
		_case_end_5123494576:;
		if (!(_match_expr.type_is<jule::U8>())) { goto _case_end_5123494688; }
		_case_begin_5123494688:;
		{
			return static_cast<jule::Str>(_20615_arg.operator jule::U8());
		}
		goto _match_end_5123492384;
		_case_end_5123494688:;
		if (!(_match_expr.type_is<jule::I32>())) { goto _case_end_5123494800; }
		_case_begin_5123494800:;
		{
			return static_cast<jule::Str>(_20615_arg.operator jule::I32());
		}
		goto _match_end_5123492384;
		_case_end_5123494800:;
		_case_begin_5123492208:;
		{
			return jule::Str("<fmt?>", 6);
		}
		goto _match_end_5123492384;
		_case_end_5123492208:;
		_match_end_5123492384:;
	}
}



inline jule::Int _136e8b750_find_next_fmt(jule::Str _21518_fmt) {
	{
		auto &__julec_range_expr = _21518_fmt;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _136e8b750_i = 0;
			jule::U8 _136e8b750_b = *__julec_range_begin;
			_iter_begin_5123493392:;
			{
				if (_136e8b750_b == '@') {
					return _136e8b750_i;
				}
			}
			_iter_next_5123493392:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_136e8b750_i; _136e8b750_b = *__julec_range_begin; goto _iter_begin_5123493392; }
			_iter_end_5123493392:;
		}
	}
	return -1LL;
}



inline jule::Str _136e8b750_apply_fmt(jule::Str _22418_fmt,jule::Slice<jule::Any> _22428_args) {
	jule::Str _22513_s = jule::Str("", 0);
	{
		auto &__julec_range_expr = _22428_args;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _136e8b750_arg = *__julec_range_begin;
			_iter_begin_5123505552:;
			{
				jule::Int _22813_i = _136e8b750_find_next_fmt(_22418_fmt);
				if (_22813_i == -1LL) {
					goto _iter_end_5123505552;
				}
				_22513_s+=_22418_fmt.slice(0LL,static_cast<jule::Int>(_22813_i));
				_22513_s+=_136e8b750_arg_to_str(_136e8b750_arg);
				_22418_fmt=_22418_fmt.slice(static_cast<jule::Int>(_22813_i + 1LL));
			}
			_iter_next_5123505552:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _136e8b750_arg = *__julec_range_begin; goto _iter_begin_5123505552; }
			_iter_end_5123505552:;
		}
	}
	_22513_s+=_22418_fmt;
	return _22513_s;
}



inline jule::Bool _136e9f3c0_is_top_directive(jule::Str _3225_directive) {
	return _3225_directive == jule::Str("pass", 4);
}



inline jule::Bool _136ea8e10_is_windows(jule::Str _5419_os) {
	return _5419_os == jule::Str("windows", 7);
}



inline jule::Bool _136ea8e10_is_darwin(jule::Str _5618_os) {
	return _5618_os == jule::Str("darwin", 6);
}



inline jule::Bool _136ea8e10_is_linux(jule::Str _5817_os) {
	return _5817_os == jule::Str("linux", 5);
}



inline jule::Bool _136ea8e10_is_i386(jule::Str _6016_arch) {
	return _6016_arch == jule::Str("i386", 4);
}



inline jule::Bool _136ea8e10_is_amd64(jule::Str _6217_arch) {
	return _6217_arch == jule::Str("amd64", 5);
}



inline jule::Bool _136ea8e10_is_arm(jule::Str _6415_arch) {
	return _6415_arch == jule::Str("arm", 3);
}



inline jule::Bool _136ea8e10_is_arm64(jule::Str _6617_arch) {
	return _6617_arch == jule::Str("arm64", 5);
}



inline jule::Bool _136ea8e10_is_unix(jule::Str _6816_os) {
	return _136ea8e10_is_darwin(_6816_os) || _136ea8e10_is_linux(_6816_os);
}



inline jule::Bool _136ea8e10_is_32bit(jule::Str _7017_arch) {
	return _136ea8e10_is_i386(_7017_arch) || _136ea8e10_is_arm(_7017_arch);
}



inline jule::Bool _136ea8e10_is_64bit(jule::Str _7217_arch) {
	return _136ea8e10_is_amd64(_7217_arch) || _136ea8e10_is_arm64(_7217_arch);
}



inline void _136e9f470_exit_err(jule::Str _2513_msg) {
	
	jule::outln(_2513_msg);
	_126ef0cf0_exit(1LL);
}



inline void _136e9f470_init(void) {
	jule::Str _3313_path = _126ef0cf0_executable();
	if (_3313_path == jule::Str("", 0)) {
		_136e9f470_exit_err(jule::Str("std::jule::build: executable file cannot found", 46));
	}
	jule::Str _3810_pwd;
	jule::Int _3815_err;
	std::tie(_3810_pwd,_3815_err) = _126e23f30_working_dir();
	if (_3815_err != 0LLU) {
		_136e9f470_exit_err(jule::Str("std::jule::build: working directory path cannot found", 53));
	}
	jule::Str _439_path_exec = _136ec98d0_dir(_3313_path);
	_3313_path=_136ec98d0_join(jule::Slice<jule::Str>({_439_path_exec,jule::Str("..", 2)}));
	{
		(*((&(_136e9f470_PATH_WD))))=_3810_pwd;
		(*((&(_136e9f470_PATH_EXEC))))=_439_path_exec;
		(*((&(_136e9f470_PATH_STDLIB))))=_136ec98d0_join(jule::Slice<jule::Str>({_3313_path,jule::Str("std", 3)}));
		(*((&(_136e9f470_PATH_API))))=_136ec98d0_join(jule::Slice<jule::Str>({_136e9f470_PATH_EXEC,jule::Str("..", 2)}));
		(*((&(_136e9f470_PATH_API))))=_136ec98d0_join(jule::Slice<jule::Str>({_136e9f470_PATH_API,jule::Str("api", 3)}));
		(*((&(_136e9f470_PATH_API))))=_136ec98d0_join(jule::Slice<jule::Str>({_136e9f470_PATH_API,jule::Str("jule.hpp", 8)}));
	}
}



inline jule::Int _127627350_get_last_fs_error(void) {
	jule::Int _709_err = _136f077b0_get_last_errno();
	{
		auto &_match_expr{ _709_err };
		if (!((13LL) == _match_expr)) { goto _case_end_5123604848; }
		_case_begin_5123604848:;
		{
			return 1LLU;
		}
		goto _match_end_5123602832;
		_case_end_5123604848:;
		if (!((5LL) == _match_expr)) { goto _case_end_5123604352; }
		_case_begin_5123604352:;
		{
			return 2LLU;
		}
		goto _match_end_5123602832;
		_case_end_5123604352:;
		if (!((40LL) == _match_expr)) { goto _case_end_5123605088; }
		_case_begin_5123605088:;
		{
			return 3LLU;
		}
		goto _match_end_5123602832;
		_case_end_5123605088:;
		if (!((36LL) == _match_expr)) { goto _case_end_5123605200; }
		_case_begin_5123605200:;
		{
			return 4LLU;
		}
		goto _match_end_5123602832;
		_case_end_5123605200:;
		if (!((2LL) == _match_expr)) { goto _case_end_5123604496; }
		_case_begin_5123604496:;
		{
			return 5LLU;
		}
		goto _match_end_5123602832;
		_case_end_5123604496:;
		if (!((20LL) == _match_expr)) { goto _case_end_5123604608; }
		_case_begin_5123604608:;
		{
			return 6LLU;
		}
		goto _match_end_5123602832;
		_case_end_5123604608:;
		if (!((75LL) == _match_expr)) { goto _case_end_5123604720; }
		_case_begin_5123604720:;
		{
			return 7LLU;
		}
		goto _match_end_5123602832;
		_case_end_5123604720:;
		if (!((9LL) == _match_expr)) { goto _case_end_5123603712; }
		_case_begin_5123603712:;
		{
			return 8LLU;
		}
		goto _match_end_5123602832;
		_case_end_5123603712:;
		if (!((24LL) == _match_expr)) { goto _case_end_5123603824; }
		_case_begin_5123603824:;
		{
			return 9LLU;
		}
		goto _match_end_5123602832;
		_case_end_5123603824:;
		if (!((23LL) == _match_expr)) { goto _case_end_5123603936; }
		_case_begin_5123603936:;
		{
			return 10LLU;
		}
		goto _match_end_5123602832;
		_case_end_5123603936:;
		if (!((12LL) == _match_expr)) { goto _case_end_5123605856; }
		_case_begin_5123605856:;
		{
			return 11LLU;
		}
		goto _match_end_5123602832;
		_case_end_5123605856:;
		if (!((17LL) == _match_expr)) { goto _case_end_5123605968; }
		_case_begin_5123605968:;
		{
			return 12LLU;
		}
		goto _match_end_5123602832;
		_case_end_5123605968:;
		if (!((4LL) == _match_expr)) { goto _case_end_5123606080; }
		_case_begin_5123606080:;
		{
			return 13LLU;
		}
		goto _match_end_5123602832;
		_case_end_5123606080:;
		if (!((22LL) == _match_expr)) { goto _case_end_5123606192; }
		_case_begin_5123606192:;
		{
			return 14LLU;
		}
		goto _match_end_5123602832;
		_case_end_5123606192:;
		if (!((21LL) == _match_expr)) { goto _case_end_5123606304; }
		_case_begin_5123606304:;
		{
			return 15LLU;
		}
		goto _match_end_5123602832;
		_case_end_5123606304:;
		if (!((63LL) == _match_expr)) { goto _case_end_5123606416; }
		_case_begin_5123606416:;
		{
			return 16LLU;
		}
		goto _match_end_5123602832;
		_case_end_5123606416:;
		if (!((28LL) == _match_expr)) { goto _case_end_5123606528; }
		_case_begin_5123606528:;
		{
			return 17LLU;
		}
		goto _match_end_5123602832;
		_case_end_5123606528:;
		if (!((6LL) == _match_expr)) { goto _case_end_5123606640; }
		_case_begin_5123606640:;
		{
			return 18LLU;
		}
		goto _match_end_5123602832;
		_case_end_5123606640:;
		if (!((30LL) == _match_expr)) { goto _case_end_5123606752; }
		_case_begin_5123606752:;
		{
			return 19LLU;
		}
		goto _match_end_5123602832;
		_case_end_5123606752:;
		if (!((11LL) == _match_expr)) { goto _case_end_5123606880; }
		_case_begin_5123606880:;
		{
			return 20LLU;
		}
		goto _match_end_5123602832;
		_case_end_5123606880:;
		if (!((26LL) == _match_expr)) { goto _case_end_5123607008; }
		_case_begin_5123607008:;
		{
			return 21LLU;
		}
		goto _match_end_5123602832;
		_case_end_5123607008:;
		if (!((27LL) == _match_expr)) { goto _case_end_5123607136; }
		_case_begin_5123607136:;
		{
			return 22LLU;
		}
		goto _match_end_5123602832;
		_case_end_5123607136:;
		if (!((32LL) == _match_expr)) { goto _case_end_5123607264; }
		_case_begin_5123607264:;
		{
			return 23LLU;
		}
		goto _match_end_5123602832;
		_case_end_5123607264:;
		if (!((34LL) == _match_expr)) { goto _case_end_5123607392; }
		_case_begin_5123607392:;
		{
			return 24LLU;
		}
		goto _match_end_5123602832;
		_case_end_5123607392:;
		if (!((29LL) == _match_expr)) { goto _case_end_5123607520; }
		_case_begin_5123607520:;
		{
			return 25LLU;
		}
		goto _match_end_5123602832;
		_case_end_5123607520:;
		if (!((105LL) == _match_expr)) { goto _case_end_5123607648; }
		_case_begin_5123607648:;
		{
			return 26LLU;
		}
		goto _match_end_5123602832;
		_case_end_5123607648:;
		if (!((74LL) == _match_expr)) { goto _case_end_5123607776; }
		_case_begin_5123607776:;
		{
			return 27LLU;
		}
		goto _match_end_5123602832;
		_case_end_5123607776:;
		_case_begin_5123603408:;
		{
			return 0LLU;
		}
		goto _match_end_5123602832;
		_case_end_5123603408:;
		_match_end_5123602832:;
	}
}



inline std::tuple<jule::Ref<_1275c8a10_File>,jule::Int> _12786c730_open(jule::Str _1713_path,jule::Int _1724_flag,jule::Int _1737_mode) {
	jule::Int _189_handle = _136f04ed0_open((&(_1713_path[static_cast<jule::Int>(0LL)])),static_cast<jule::Int>(_1724_flag),_1737_mode);
	if (_189_handle == -1LL) {
		return std::make_tuple(jule::new_ref<_1275c8a10_File>(),_127627350_get_last_fs_error());
	}
	return std::make_tuple(jule::new_struct<_1275c8a10_File>(new( std::nothrow ) _1275c8a10_File(_189_handle)),0LLU);
}



inline std::tuple<jule::Ref<_1275e3c20_Status>,jule::Int> _136e09ef0_stat(jule::Str _1113_path) {
	jule::Int _1138_err = 0LLU;
	jule::Ref<_1275e3c20_Status> _1126_s = jule::Ref<_1275e3c20_Status>();
	struct stat _1213_handle = (struct stat){};
	jule::Int _139_code = _136f04ed0_stat((&(_1113_path[static_cast<jule::Int>(0LL)])),(&(_1213_handle)));
	if (_139_code != -1LL) {
		_1138_err=0LLU;
		_1126_s=jule::new_struct<_1275e3c20_Status>(new( std::nothrow ) _1275e3c20_Status(static_cast<jule::Uint>(_1213_handle.st_mode),static_cast<jule::Uint>(_1213_handle.st_size)));
	} else {
		_1138_err=_127627350_get_last_fs_error();
	}
	return std::make_tuple(_1126_s,_1138_err);
}



inline std::tuple<jule::Slice<jule::U8>,jule::Int> _1275c8a10_read_file(jule::Str _12118_path) {
	jule::Ref<_1275e3c20_Status> _12210_s;
	jule::Int _12217_err;
	std::tie(_12210_s,_12217_err) = _136e09ef0_stat(_12118_path);
	if (_12217_err != 0LLU) {
		return std::make_tuple(nullptr,_12217_err);
	}
	if ((!(_12210_s->_method_is_reg()))) {
		return std::make_tuple(nullptr,15LLU);
	}
	if (_12210_s->_field_size == 0LL) {
		return std::make_tuple(jule::Slice<jule::U8>::alloc(static_cast<jule::Int>(0LL)),0LLU);
	}
	jule::Ref<_1275c8a10_File> _13514_f;
	std::tie(_13514_f,_12217_err) = _12786c730_open(_12118_path,0LL,0LL);
	if (_12217_err != 0LLU) {
		return std::make_tuple(nullptr,_12217_err);
	}
	__JULE_DEFER({
		_13514_f->_method_close();
	});
	jule::Slice<jule::U8> _14113_buff = jule::Slice<jule::U8>::alloc(static_cast<jule::Int>(_12210_s->_field_size));
	jule::Int _14210_n;
	std::tie(_14210_n,_12217_err) = _13514_f->_method_read(_14113_buff);
	if (_12217_err != 0LLU) {
		return std::make_tuple(nullptr,_12217_err);
	}
	return std::make_tuple(_14113_buff.slice(0LL,static_cast<jule::Int>(_14210_n)),0LLU);
}



inline std::tuple<jule::Slice<jule::Ref<_127281550_DirEntry>>,jule::Int> _12721daf0_read_dir(jule::Str _2017_path) {
	jule::Int _2052_err = 0LLU;
	jule::Slice<jule::Ref<_127281550_DirEntry>> _2030_dirents = jule::Slice<jule::Ref<_127281550_DirEntry>>();
	DIR* _2113_dir = _136f04ed0_opendir((&(_2017_path[static_cast<jule::Int>(0LL)])));
	if (_2113_dir == nullptr) {
		_2052_err=_127627350_get_last_fs_error();
		return std::make_tuple(_2030_dirents,_2052_err);
	}
	_iter_begin_5123677536:;
	{
		struct dirent* _2713_dirent = _136f04ed0_readdir(_2113_dir);
		if (_2713_dirent == nullptr) {
			goto _iter_end_5123677536;
		}
		jule::Str _3113_name = _136f04ed0_byte_ptr_to_str(((jule::U8*)(_2713_dirent->d_name)));
		jule::Ref<_1275e3c20_Status> _3214_stat;
		jule::Int _3220_serr;
		std::tie(_3214_stat,_3220_serr) = _136e09ef0_stat(_136ec98d0_join(jule::Slice<jule::Str>({_2017_path,_3113_name})));
		if (_3220_serr != 0LLU) {
			_2052_err=_3220_serr;
			_2030_dirents=nullptr;
			goto _iter_end_5123677536;
		}
		_2030_dirents=append(_2030_dirents,jule::Slice<jule::Ref<_127281550_DirEntry>>({jule::new_struct<_127281550_DirEntry>(new( std::nothrow ) _127281550_DirEntry(_3113_name,_3214_stat))}));
	}
	_iter_next_5123677536:;
	goto _iter_begin_5123677536;
	_iter_end_5123677536:;
	_136f04ed0_closedir(_2113_dir);
	return std::make_tuple(_2030_dirents,_2052_err);
}



inline std::tuple<jule::I32,jule::Int> _1275d1920_decode_rune(jule::Slice<jule::U8> _18220_p) {
	jule::Int _18242_size = jule::Int();
	jule::I32 _18233_r = jule::I32();
	if (_18220_p.len() < 1LL) {
		_18233_r = 65533LL;
		_18242_size = 0LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _1869_p0 = _18220_p[static_cast<jule::Int>(0LL)];
	jule::U8 _1879_x = _1275d1920_FIRST[static_cast<jule::Int>(_1869_p0)];
	if (_1879_x >= 240LL) {
		jule::I32 _19213_mask = (_1879_x << 31LL) >> 31LL;
		_18233_r = (static_cast<jule::I32>(_18220_p[static_cast<jule::Int>(0LL)]) & (~(_19213_mask))) | (65533LL & _19213_mask);
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::Int _1959_sz = static_cast<jule::Int>(_1879_x & 7LL);
	_1275d1920_accept_range _1969_accept = _1275d1920_ACCEPT_RANGES[static_cast<jule::Int>(_1879_x >> 4LL)];
	if (_18220_p.len() < _1959_sz) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2009_b1 = _18220_p[static_cast<jule::Int>(1LL)];
	if ((_2009_b1 < _1969_accept._field_lo) || (_1969_accept._field_hi < _2009_b1)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if (_1959_sz <= 2LL) {
		_18233_r = (static_cast<jule::I32>(_1869_p0 & 31LL) << 6LL) | static_cast<jule::I32>(_2009_b1 & 63LL);
		_18242_size = 2LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2079_b2 = _18220_p[static_cast<jule::Int>(2LL)];
	if ((_2079_b2 < 128LL) || (191LL < _2079_b2)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	if (_1959_sz <= 3LL) {
		_18233_r = ((static_cast<jule::I32>(_1869_p0 & 15LL) << 12LL) | (static_cast<jule::I32>(_2009_b1 & 63LL) << 6LL)) | static_cast<jule::I32>(_2079_b2 & 63LL);
		_18242_size = 3LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	jule::U8 _2149_b3 = _18220_p[static_cast<jule::Int>(3LL)];
	if ((_2149_b3 < 128LL) || (191LL < _2149_b3)) {
		_18233_r = 65533LL;
		_18242_size = 1LL;
		return std::make_tuple(_18233_r,_18242_size);
	}
	_18233_r = (((static_cast<jule::I32>(_1869_p0 & 7LL) << 18LL) | (static_cast<jule::I32>(_2009_b1 & 63LL) << 12LL)) | (static_cast<jule::I32>(_2079_b2 & 63LL) << 6LL)) | static_cast<jule::I32>(_2149_b3 & 63LL);
	_18242_size = 4LL;
	return std::make_tuple(_18233_r,_18242_size);
}



inline std::tuple<jule::I32,jule::Int> _1275d1920_decode_rune_str(jule::Str _22924_s) {
	jule::Int _22943_size = jule::Int();
	jule::I32 _22934_r = jule::I32();
	if (_22924_s.len() < 1LL) {
		_22934_r = 65533LL;
		_22943_size = 0LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2339_s0 = _22924_s[static_cast<jule::Int>(0LL)];
	jule::U8 _2349_x = _1275d1920_FIRST[static_cast<jule::Int>(_2339_s0)];
	if (_2349_x >= 240LL) {
		jule::I32 _23913_mask = (_2349_x << 31LL) >> 31LL;
		_22934_r = (static_cast<jule::I32>(_22924_s[static_cast<jule::Int>(0LL)]) & (~(_23913_mask))) | (65533LL & _23913_mask);
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::Int _2429_sz = static_cast<jule::Int>(_2349_x & 7LL);
	_1275d1920_accept_range _2439_accept = _1275d1920_ACCEPT_RANGES[static_cast<jule::Int>(_2349_x >> 4LL)];
	if (_22924_s.len() < _2429_sz) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2479_s1 = _22924_s[static_cast<jule::Int>(1LL)];
	if ((_2479_s1 < _2439_accept._field_lo) || (_2439_accept._field_hi < _2479_s1)) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	if (_2429_sz <= 2LL) {
		_22934_r = (static_cast<jule::I32>(_2339_s0 & 31LL) << 6LL) | static_cast<jule::I32>(_2479_s1 & 63LL);
		_22943_size = 2LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2549_s2 = _22924_s[static_cast<jule::Int>(2LL)];
	if ((_2549_s2 < 128LL) || (191LL < _2549_s2)) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	if (_2429_sz <= 3LL) {
		_22934_r = ((static_cast<jule::I32>(_2339_s0 & 15LL) << 12LL) | (static_cast<jule::I32>(_2479_s1 & 63LL) << 6LL)) | static_cast<jule::I32>(_2549_s2 & 63LL);
		_22943_size = 3LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	jule::U8 _2619_s3 = _22924_s[static_cast<jule::Int>(3LL)];
	if ((_2619_s3 < 128LL) || (191LL < _2619_s3)) {
		_22934_r = 65533LL;
		_22943_size = 1LL;
		return std::make_tuple(_22934_r,_22943_size);
	}
	_22934_r = (((static_cast<jule::I32>(_2339_s0 & 7LL) << 18LL) | (static_cast<jule::I32>(_2479_s1 & 63LL) << 12LL)) | (static_cast<jule::I32>(_2549_s2 & 63LL) << 6LL)) | static_cast<jule::I32>(_2619_s3 & 63LL);
	_22943_size = 4LL;
	return std::make_tuple(_22934_r,_22943_size);
}



inline jule::Bool _127941de0_is_unary_op(jule::Str _31020_kind) {
	{
		auto &__julec_range_expr = _127941de0_UNARY_OPS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _127941de0_op = *__julec_range_begin;
			_iter_begin_5368910528:;
			{
				if (_31020_kind == _127941de0_op) {
					return true;
				}
			}
			_iter_next_5368910528:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127941de0_op = *__julec_range_begin; goto _iter_begin_5368910528; }
			_iter_end_5368910528:;
		}
	}
	return false;
}



inline jule::Bool _127941de0_is_str(jule::Str _34315_k) {
	return (_34315_k != jule::Str("", 0)) && ((_34315_k[static_cast<jule::Int>(0LL)] == '\"') || _127941de0_is_raw_str(_34315_k));
}



inline jule::Bool _127941de0_is_raw_str(jule::Str _34519_k) {
	return (_34519_k != jule::Str("", 0)) && (_34519_k[static_cast<jule::Int>(0LL)] == '`');
}



inline jule::Bool _127941de0_is_rune(jule::Str _34816_k) {
	return (_34816_k != jule::Str("", 0)) && (_34816_k[static_cast<jule::Int>(0LL)] == '\'');
}



inline jule::Bool _127941de0_is_bool(jule::Str _35216_k) {
	return (_35216_k == jule::Str("true", 4)) || (_35216_k == jule::Str("false", 5));
}



inline jule::Bool _127941de0_contains_any(jule::Str _35417_s,jule::Str _35425_bytes) {
	{
		auto &__julec_range_expr = _35425_bytes;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::U8 _127941de0_b = *__julec_range_begin;
			_iter_begin_5368932800:;
			{
				jule::Int _35613_i = _35417_s.find(static_cast<jule::Str>(_127941de0_b));
				if (_35613_i >= 0LL) {
					return true;
				}
			}
			_iter_next_5368932800:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127941de0_b = *__julec_range_begin; goto _iter_begin_5368932800; }
			_iter_end_5368932800:;
		}
	}
	return false;
}



inline jule::Bool _127941de0_is_float(jule::Str _36617_k) {
	if (_36617_k.has_prefix(jule::Str("0x", 2))) {
		return _127941de0_contains_any(_36617_k,jule::Str(".pP", 3));
	}
	return _127941de0_contains_any(_36617_k,jule::Str(".eE", 3));
}



inline jule::Bool _127941de0_is_num(jule::Str _37515_k) {
	if (_37515_k == jule::Str("", 0)) {
		return false;
	}
	jule::U8 _3809_b = _37515_k[static_cast<jule::Int>(0LL)];
	return (_3809_b == '.') || (('0' <= _3809_b) && (_3809_b <= '9'));
}



inline jule::Bool _127941de0_is_ignore_ident(jule::Str _39024_ident) {
	return _39024_ident == jule::Str("_", 1);
}



inline jule::Bool _127941de0_is_anon_ident(jule::Str _39222_ident) {
	return _39222_ident == jule::Str("<anonymous>", 11);
}



inline jule::Bool _127941de0_is_space(jule::I32 _40617_r) {
	{
		auto &__julec_range_expr = _127941de0_SPACES;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::I32 _127941de0_cr = *__julec_range_begin;
			_iter_begin_5368957952:;
			{
				if (_40617_r == _127941de0_cr) {
					return true;
				}
			}
			_iter_next_5368957952:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127941de0_cr = *__julec_range_begin; goto _iter_begin_5368957952; }
			_iter_end_5368957952:;
		}
	}
	return false;
}



inline jule::Bool _127941de0_is_letter(jule::I32 _41718_r) {
	return (('a' <= _41718_r) && (_41718_r <= 'z')) || (('A' <= _41718_r) && (_41718_r <= 'Z'));
}



inline jule::Bool _127941de0_is_ident_rune(jule::Str _42322_s) {
	if (_42322_s == jule::Str("", 0)) {
		return false;
	}
	if (_42322_s[static_cast<jule::Int>(0LL)] != '_') {
		jule::I32 _42914_r;
		std::tie(_42914_r,std::ignore) = _1275d1920_decode_rune_str(_42322_s);
		if ((!(_127941de0_is_letter(_42914_r)))) {
			return false;
		}
	}
	return true;
}



inline jule::Bool _127941de0_is_decimal(jule::U8 _43919_b) {
	return ('0' <= _43919_b) && (_43919_b <= '9');
}



inline jule::Bool _127941de0_is_binary(jule::U8 _44118_b) {
	return (_44118_b == '0') || (_44118_b == '1');
}



inline jule::Bool _127941de0_is_octal(jule::U8 _44317_b) {
	return ('0' <= _44317_b) && (_44317_b <= '7');
}



inline jule::Bool _127941de0_is_hex(jule::U8 _44615_b) {
	{
		if (!((('0' <= _44615_b) && (_44615_b <= '9')))) { goto _case_end_5368975504; }
		_case_begin_5368975504:;
		{
			return true;
		}
		goto _match_end_5368973744;
		_case_end_5368975504:;
		if (!((('a' <= _44615_b) && (_44615_b <= 'f')))) { goto _case_end_5368975616; }
		_case_begin_5368975616:;
		{
			return true;
		}
		goto _match_end_5368973744;
		_case_end_5368975616:;
		if (!((('A' <= _44615_b) && (_44615_b <= 'F')))) { goto _case_end_5368975728; }
		_case_begin_5368975728:;
		{
			return true;
		}
		goto _match_end_5368973744;
		_case_end_5368975728:;
		_case_begin_5368973952:;
		{
			return false;
		}
		goto _match_end_5368973744;
		_case_end_5368973952:;
		_match_end_5368973744:;
	}
}



inline jule::Bool _127941de0_is_assign(jule::Uint _45818_id) {
	return ((((((_45818_id == 2LLU) || (_45818_id == 31LLU)) || (_45818_id == 34LLU)) || (_45818_id == 20LLU)) || (_45818_id == 28LLU)) || (_45818_id == 3LLU)) || (_45818_id == 7LLU);
}



inline jule::Bool _127941de0_is_postfix_op(jule::Str _47122_kind) {
	{
		auto &__julec_range_expr = _127941de0_POSTFIX_OPS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _127941de0_op = *__julec_range_begin;
			_iter_begin_5368984752:;
			{
				if (_47122_kind == _127941de0_op) {
					return true;
				}
			}
			_iter_next_5368984752:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127941de0_op = *__julec_range_begin; goto _iter_begin_5368984752; }
			_iter_end_5368984752:;
		}
	}
	return false;
}



inline jule::Bool _127941de0_is_assign_op(jule::Str _48221_kind) {
	if (_127941de0_is_postfix_op(_48221_kind)) {
		return true;
	}
	{
		auto &__julec_range_expr = _127941de0_ASSING_OPS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _127941de0_op = *__julec_range_begin;
			_iter_begin_5368990224:;
			{
				if (_48221_kind == _127941de0_op) {
					return true;
				}
			}
			_iter_next_5368990224:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127941de0_op = *__julec_range_begin; goto _iter_begin_5368990224; }
			_iter_end_5368990224:;
		}
	}
	return false;
}



inline jule::Ref<_126f67810_File> _126f67810_new_file_set(jule::Str _4021_path) {
	return jule::new_struct<_126f67810_File>(new( std::nothrow ) _126f67810_File(_4021_path,_127ab7fa0_Vector_0()));
}



inline _136e99d00_Log _127774a70_make_err(jule::Int _10413_row,jule::Int _10423_col,jule::Ref<_126f67810_File> _10433_f,jule::Str _10443_key,jule::Slice<jule::Any> _10453_args) {
	return _136e99d00_Log(1LLU,_10413_row,_10423_col,_10433_f->_method_path(),_136e8b750_errorf(_10443_key,_10453_args));
}



inline jule::Bool _127774a70_bytes_has_prefix(jule::Slice<jule::U8> _11421_bytes,jule::Str _11436_prefix) {
	if (_11421_bytes.len() < _11436_prefix.len()) {
		return false;
	}
	{
		auto &__julec_range_expr = _11436_prefix;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _127774a70_i = 0;
			_iter_begin_5369001856:;
			{
				if (_11421_bytes[static_cast<jule::Int>(_127774a70_i)] != _11436_prefix[static_cast<jule::Int>(_127774a70_i)]) {
					return false;
				}
			}
			_iter_next_5369001856:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_127774a70_i; goto _iter_begin_5369001856; }
			_iter_end_5369001856:;
		}
	}
	return true;
}



inline jule::Str _127774a70_float_fmt_e(jule::Slice<jule::U8> _12616_txt,jule::Int _12633_i) {
	jule::Str _12643_lit = jule::Str();
	(_12633_i)++;
	if (_12633_i >= _12616_txt.len()) {
		return _12643_lit;
	}
	jule::U8 _1329_b = _12616_txt[static_cast<jule::Int>(_12633_i)];
	if ((_1329_b == '+') || (_1329_b == '-')) {
		(_12633_i)++;
		if (_12633_i >= _12616_txt.len()) {
			return _12643_lit;
		}
	}
	jule::Int _1409_first = _12633_i;
	_iter_begin_5369012800:;
	if (!(_12633_i < _12616_txt.len())) { goto _iter_end_5369012800; }
	{
		jule::U8 _14213_b = _12616_txt[static_cast<jule::Int>(_12633_i)];
		if ((!(_127941de0_is_decimal(_14213_b)))) {
			goto _iter_end_5369012800;
		}
	}
	_iter_next_5369012800:;
	(_12633_i)++;
	goto _iter_begin_5369012800;
	_iter_end_5369012800:;
	if (_12633_i == _1409_first) {
		_12643_lit = jule::Str("", 0);
		return _12643_lit;
	}
	_12643_lit = static_cast<jule::Str>(_12616_txt.slice(0LL,static_cast<jule::Int>(_12633_i)));
	return _12643_lit;
}



inline jule::Str _127774a70_float_fmt_p(jule::Slice<jule::U8> _15416_txt,jule::Int _15429_i) {
	return _127774a70_float_fmt_e(_15416_txt,_15429_i);
}



inline jule::Str _127774a70_float_fmt_dotnp(jule::Slice<jule::U8> _15620_txt,jule::Int _15637_i) {
	if (_15620_txt[static_cast<jule::Int>(_15637_i)] != '.') {
		return jule::Str("", 0);
	}
	(_15637_i)++;
	_julec_label_loop:;
	_iter_begin_5369025760:;
	if (!(_15637_i < _15620_txt.len())) { goto _iter_end_5369025760; }
	{
		jule::U8 _16413_b = _15620_txt[static_cast<jule::Int>(_15637_i)];
		{
			if (!((_127941de0_is_decimal(_16413_b)))) { goto _case_end_5369031264; }
			_case_begin_5369031264:;
			{
				goto _iter_next_5369025760;
			}
			goto _match_end_5369030704;
			_case_end_5369031264:;
			if (!((_127774a70_is_float_fmt_p(_16413_b,_15637_i)))) { goto _case_end_5369031376; }
			_case_begin_5369031376:;
			{
				return _127774a70_float_fmt_p(_15620_txt,_15637_i);
			}
			goto _match_end_5369030704;
			_case_end_5369031376:;
			_case_begin_5369030960:;
			{
				goto _iter_end_5369025760;
			}
			goto _match_end_5369030704;
			_case_end_5369030960:;
			_match_end_5369030704:;
		}
	}
	_iter_next_5369025760:;
	(_15637_i)++;
	goto _iter_begin_5369025760;
	_iter_end_5369025760:;
	return jule::Str("", 0);
}



inline jule::Str _127774a70_float_fmt_dotfp(jule::Slice<jule::U8> _17420_txt,jule::Int _17437_i) {
	_17437_i+=2LL;
	return _127774a70_float_fmt_e(_17420_txt,_17437_i);
}



inline jule::Str _127774a70_float_fmt_dotp(jule::Slice<jule::U8> _18119_txt,jule::Int _18136_i) {
	(_18136_i)++;
	return _127774a70_float_fmt_e(_18119_txt,_18136_i);
}



inline jule::Str _127774a70_float_num(jule::Slice<jule::U8> _18814_txt,jule::Int _18831_i) {
	jule::Str _18841_lit = jule::Str();
	(_18831_i)++;
	_iter_begin_5369042848:;
	if (!(_18831_i < _18814_txt.len())) { goto _iter_end_5369042848; }
	{
		jule::U8 _19113_b = _18814_txt[static_cast<jule::Int>(_18831_i)];
		if ((_18831_i > 1LL) && ((_19113_b == 'e') || (_19113_b == 'E'))) {
			_18841_lit = _127774a70_float_fmt_e(_18814_txt,_18831_i);
			return _18841_lit;
		}
		if ((!(_127941de0_is_decimal(_19113_b)))) {
			goto _iter_end_5369042848;
		}
	}
	_iter_next_5369042848:;
	(_18831_i)++;
	goto _iter_begin_5369042848;
	_iter_end_5369042848:;
	if (_18831_i == 1LL) {
		return _18841_lit;
	}
	_18841_lit = static_cast<jule::Str>(_18814_txt.slice(0LL,static_cast<jule::Int>(_18831_i)));
	return _18841_lit;
}



inline jule::Str _127774a70_common_num(jule::Slice<jule::U8> _20615_txt) {
	jule::Str _20630_lit = jule::Str();
	jule::Int _20713_i = 0LL;
	_julec_label_loop:;
	_iter_begin_5369054128:;
	if (!(_20713_i < _20615_txt.len())) { goto _iter_end_5369054128; }
	{
		jule::U8 _21013_b = _20615_txt[static_cast<jule::Int>(_20713_i)];
		{
			if (!((_21013_b == '.'))) { goto _case_end_5369057456; }
			_case_begin_5369057456:;
			{
				_20630_lit = _127774a70_float_num(_20615_txt,_20713_i);
				return _20630_lit;
			}
			goto _match_end_5369057136;
			_case_end_5369057456:;
			if (!((_127774a70_is_float_fmt_e(_21013_b,_20713_i)))) { goto _case_end_5369057568; }
			_case_begin_5369057568:;
			{
				_20630_lit = _127774a70_float_fmt_e(_20615_txt,_20713_i);
				return _20630_lit;
			}
			goto _match_end_5369057136;
			_case_end_5369057568:;
			if (!(((!(_127941de0_is_decimal(_21013_b)))))) { goto _case_end_5369057680; }
			_case_begin_5369057680:;
			{
				goto _iter_end_5369054128;
			}
			goto _match_end_5369057136;
			_case_end_5369057680:;
			_match_end_5369057136:;
		}
	}
	_iter_next_5369054128:;
	(_20713_i)++;
	goto _iter_begin_5369054128;
	_iter_end_5369054128:;
	if (_20713_i == 0LL) {
		return _20630_lit;
	}
	_20630_lit = static_cast<jule::Str>(_20615_txt.slice(0LL,static_cast<jule::Int>(_20713_i)));
	return _20630_lit;
}



inline jule::Str _127774a70_binary_num(jule::Slice<jule::U8> _22415_txt) {
	jule::Str _22430_lit = jule::Str();
	if ((!(_127774a70_bytes_has_prefix(_22415_txt,jule::Str("0b", 2))))) {
		_22430_lit = jule::Str("", 0);
		return _22430_lit;
	}
	if (_22415_txt.len() < 2LL) {
		return _22430_lit;
	}
	
	jule::Int _23313_i = 2LL;
	_iter_begin_5369066688:;
	if (!(_23313_i < _22415_txt.len())) { goto _iter_end_5369066688; }
	{
		if ((!(_127941de0_is_binary(_22415_txt[static_cast<jule::Int>(_23313_i)])))) {
			goto _iter_end_5369066688;
		}
	}
	_iter_next_5369066688:;
	(_23313_i)++;
	goto _iter_begin_5369066688;
	_iter_end_5369066688:;
	if (_23313_i == 2LL) {
		return _22430_lit;
	}
	_22430_lit = static_cast<jule::Str>(_22415_txt.slice(0LL,static_cast<jule::Int>(_23313_i)));
	return _22430_lit;
}



inline jule::Bool _127774a70_is_float_fmt_e(jule::U8 _24619_b,jule::Int _24628_i) {
	return (_24628_i > 0LL) && ((_24619_b == 'e') || (_24619_b == 'E'));
}



inline jule::Bool _127774a70_is_float_fmt_p(jule::U8 _24719_b,jule::Int _24728_i) {
	return (_24728_i > 0LL) && ((_24719_b == 'p') || (_24719_b == 'P'));
}



inline jule::Bool _127774a70_is_float_fmt_dotnp(jule::Slice<jule::U8> _24923_txt,jule::Int _24940_i) {
	if (_24923_txt[static_cast<jule::Int>(_24940_i)] != '.') {
		return false;
	}
	(_24940_i)++;
	_julec_label_loop:;
	_iter_begin_5369085088:;
	if (!(_24940_i < _24923_txt.len())) { goto _iter_end_5369085088; }
	{
		jule::U8 _25713_b = _24923_txt[static_cast<jule::Int>(_24940_i)];
		{
			if (!((_127941de0_is_decimal(_25713_b)))) { goto _case_end_5369089776; }
			_case_begin_5369089776:;
			{
				goto _iter_next_5369085088;
			}
			goto _match_end_5369089216;
			_case_end_5369089776:;
			if (!((_127774a70_is_float_fmt_p(_25713_b,_24940_i)))) { goto _case_end_5369089888; }
			_case_begin_5369089888:;
			{
				return true;
			}
			goto _match_end_5369089216;
			_case_end_5369089888:;
			_case_begin_5369089472:;
			{
				goto _iter_end_5369085088;
			}
			goto _match_end_5369089216;
			_case_end_5369089472:;
			_match_end_5369089216:;
		}
	}
	_iter_next_5369085088:;
	(_24940_i)++;
	goto _iter_begin_5369085088;
	_iter_end_5369085088:;
	return false;
}



inline jule::Bool _127774a70_is_float_fmt_dotp(jule::Slice<jule::U8> _26822_txt,jule::Int _26835_i) {
	{
		if (!((_26822_txt.len() < 3LL))) { goto _case_end_5369096064; }
		_case_begin_5369096064:;
		{
			goto _case_begin_5369096176;
		}
		goto _match_end_5369095552;
		_case_end_5369096064:;
		if (!((_26822_txt[static_cast<jule::Int>(_26835_i)] != '.'))) { goto _case_end_5369096176; }
		_case_begin_5369096176:;
		{
			goto _case_begin_5369096288;
		}
		goto _match_end_5369095552;
		_case_end_5369096176:;
		if (!(((_26822_txt[static_cast<jule::Int>(_26835_i + 1LL)] != 'p') && (_26822_txt[static_cast<jule::Int>(_26835_i + 1LL)] != 'P')))) { goto _case_end_5369096288; }
		_case_begin_5369096288:;
		{
			return false;
		}
		goto _match_end_5369095552;
		_case_end_5369096288:;
		_case_begin_5369095760:;
		{
			return true;
		}
		goto _match_end_5369095552;
		_case_end_5369095760:;
		_match_end_5369095552:;
	}
}



inline jule::Bool _127774a70_is_float_fmt_dotfp(jule::Slice<jule::U8> _27723_txt,jule::Int _27736_i) {
	{
		if (!((_27723_txt.len() < 4LL))) { goto _case_end_5369104480; }
		_case_begin_5369104480:;
		{
			goto _case_begin_5369104592;
		}
		goto _match_end_5369103968;
		_case_end_5369104480:;
		if (!((_27723_txt[static_cast<jule::Int>(_27736_i)] != '.'))) { goto _case_end_5369104592; }
		_case_begin_5369104592:;
		{
			goto _case_begin_5369104704;
		}
		goto _match_end_5369103968;
		_case_end_5369104592:;
		if (!(((_27723_txt[static_cast<jule::Int>(_27736_i + 1LL)] != 'f') && (_27723_txt[static_cast<jule::Int>(_27736_i + 1LL)] != 'F')))) { goto _case_end_5369104704; }
		_case_begin_5369104704:;
		{
			goto _case_begin_5369105536;
		}
		goto _match_end_5369103968;
		_case_end_5369104704:;
		if (!(((_27723_txt[static_cast<jule::Int>(_27736_i + 2LL)] != 'p') && (_27723_txt[static_cast<jule::Int>(_27736_i + 1LL)] != 'P')))) { goto _case_end_5369105536; }
		_case_begin_5369105536:;
		{
			return false;
		}
		goto _match_end_5369103968;
		_case_end_5369105536:;
		_case_begin_5369104176:;
		{
			return true;
		}
		goto _match_end_5369103968;
		_case_end_5369104176:;
		_match_end_5369103968:;
	}
}



inline jule::Str _127774a70_octal_num(jule::Slice<jule::U8> _28714_txt) {
	jule::Str _28729_lit = jule::Str();
	if (_28714_txt[static_cast<jule::Int>(0LL)] != '0') {
		_28729_lit = jule::Str("", 0);
		return _28729_lit;
	}
	if (_28714_txt.len() < 2LL) {
		return _28729_lit;
	}
	
	jule::Int _29613_i = 1LL;
	_iter_begin_5369116176:;
	if (!(_29613_i < _28714_txt.len())) { goto _iter_end_5369116176; }
	{
		jule::U8 _29813_b = _28714_txt[static_cast<jule::Int>(_29613_i)];
		if (_127774a70_is_float_fmt_e(_29813_b,_29613_i)) {
			_28729_lit = _127774a70_float_fmt_e(_28714_txt,_29613_i);
			return _28729_lit;
		}
		if ((!(_127941de0_is_octal(_29813_b)))) {
			goto _iter_end_5369116176;
		}
	}
	_iter_next_5369116176:;
	(_29613_i)++;
	goto _iter_begin_5369116176;
	_iter_end_5369116176:;
	if (_29613_i == 1LL) {
		return _28729_lit;
	}
	_28729_lit = static_cast<jule::Str>(_28714_txt.slice(0LL,static_cast<jule::Int>(_29613_i)));
	return _28729_lit;
}



inline jule::Str _127774a70_hex_num(jule::Slice<jule::U8> _31312_txt) {
	jule::Str _31327_lit = jule::Str();
	if (_31312_txt.len() < 3LL) {
		return _31327_lit;
	}
	if ((_31312_txt[static_cast<jule::Int>(0LL)] != '0') || ((_31312_txt[static_cast<jule::Int>(1LL)] != 'x') && (_31312_txt[static_cast<jule::Int>(1LL)] != 'X'))) {
		return _31327_lit;
	}
	
	jule::Int _32213_i = 2LL;
	_julec_label_loop:;
	_iter_begin_5369138128:;
	if (!(_32213_i < _31312_txt.len())) { goto _iter_end_5369138128; }
	{
		jule::U8 _32513_b = _31312_txt[static_cast<jule::Int>(_32213_i)];
		{
			if (!((_127774a70_is_float_fmt_dotp(_31312_txt,_32213_i)))) { goto _case_end_5369141504; }
			_case_begin_5369141504:;
			{
				_31327_lit = _127774a70_float_fmt_dotp(_31312_txt,_32213_i);
				return _31327_lit;
			}
			goto _match_end_5369141152;
			_case_end_5369141504:;
			if (!((_127774a70_is_float_fmt_dotfp(_31312_txt,_32213_i)))) { goto _case_end_5369141616; }
			_case_begin_5369141616:;
			{
				_31327_lit = _127774a70_float_fmt_dotfp(_31312_txt,_32213_i);
				return _31327_lit;
			}
			goto _match_end_5369141152;
			_case_end_5369141616:;
			if (!((_127774a70_is_float_fmt_p(_32513_b,_32213_i)))) { goto _case_end_5369141728; }
			_case_begin_5369141728:;
			{
				_31327_lit = _127774a70_float_fmt_p(_31312_txt,_32213_i);
				return _31327_lit;
			}
			goto _match_end_5369141152;
			_case_end_5369141728:;
			if (!((_127774a70_is_float_fmt_dotnp(_31312_txt,_32213_i)))) { goto _case_end_5369141840; }
			_case_begin_5369141840:;
			{
				_31327_lit = _127774a70_float_fmt_dotnp(_31312_txt,_32213_i);
				return _31327_lit;
			}
			goto _match_end_5369141152;
			_case_end_5369141840:;
			if (!(((!(_127941de0_is_hex(_32513_b)))))) { goto _case_end_5369141952; }
			_case_begin_5369141952:;
			{
				goto _iter_end_5369138128;
			}
			goto _match_end_5369141152;
			_case_end_5369141952:;
			_match_end_5369141152:;
		}
	}
	_iter_next_5369138128:;
	(_32213_i)++;
	goto _iter_begin_5369138128;
	_iter_end_5369138128:;
	if (_32213_i == 2LL) {
		return _31327_lit;
	}
	_31327_lit = static_cast<jule::Str>(_31312_txt.slice(0LL,static_cast<jule::Int>(_32213_i)));
	return _31327_lit;
}



inline jule::Str _127774a70_hex_escape(jule::Slice<jule::U8> _35015_txt,jule::Int _35028_n) {
	jule::Str _35038_seq = jule::Str();
	if (_35015_txt.len() < _35028_n) {
		return _35038_seq;
	}
	
	jule::Int _35613_i = 2LL;
	_iter_begin_5369156816:;
	if (!(_35613_i < _35028_n)) { goto _iter_end_5369156816; }
	{
		if ((!(_127941de0_is_hex(_35015_txt[static_cast<jule::Int>(_35613_i)])))) {
			return _35038_seq;
		}
	}
	_iter_next_5369156816:;
	(_35613_i)++;
	goto _iter_begin_5369156816;
	_iter_end_5369156816:;
	_35038_seq=static_cast<jule::Str>(_35015_txt.slice(0LL,static_cast<jule::Int>(_35028_n)));
	return _35038_seq;
}



inline jule::Str _127774a70_big_unicode_point_escape(jule::Slice<jule::U8> _36829_txt) {
	return _127774a70_hex_escape(_36829_txt,10LL);
}



inline jule::Str _127774a70_little_unicode_point_escape(jule::Slice<jule::U8> _37132_txt) {
	return _127774a70_hex_escape(_37132_txt,6LL);
}



inline jule::Str _127774a70_hex_byte_escape(jule::Slice<jule::U8> _37420_txt) {
	return _127774a70_hex_escape(_37420_txt,4LL);
}



inline jule::Str _127774a70_byte_escape(jule::Slice<jule::U8> _37716_txt) {
	jule::Str _37731_seq = jule::Str();
	if (_37716_txt.len() < 4LL) {
		return _37731_seq;
	}
	if (((!(_127941de0_is_octal(_37716_txt[static_cast<jule::Int>(1LL)]))) || (!(_127941de0_is_octal(_37716_txt[static_cast<jule::Int>(2LL)])))) || (!(_127941de0_is_octal(_37716_txt[static_cast<jule::Int>(3LL)])))) {
		return _37731_seq;
	}
	_37731_seq = static_cast<jule::Str>(_37716_txt.slice(0LL,static_cast<jule::Int>(4LL)));
	return _37731_seq;
}



inline jule::Slice<_136e99d00_Log> _127774a70_lex(jule::Ref<_126f67810_File> _76716_f,jule::Slice<jule::U8> _76726_text) {
	if ((!(jule::real(_76716_f)))) {
		return nullptr;
	}
	_127774a70_Lex _77213_lex = _127774a70_Lex(jule::Bool(),_127ab7fa0_Vector_0(),_76726_text,_76716_f,0LL,jule::Int(),-1LL,jule::Slice<_136e99d00_Log>());
	_77213_lex._method_new_line();
	_77213_lex._method_lex();
	if (_77213_lex._field_errors.len() > 0LL) {
		return _77213_lex._field_errors;
	}
	_76716_f->_field__tokens=_77213_lex._field_tokens;
	return nullptr;
}



inline jule::Ref<_127b065b0_FileInfo> _127b065b0_parse_file(jule::Ref<_126f67810_File> _2223_f) {
	if ((!(jule::real(_2223_f)))) {
		return jule::new_ref<_127b065b0_FileInfo>();
	}
	jule::Ref<_127b065b0_FileInfo> _2713_finf = jule::new_struct<_127b065b0_FileInfo>(new( std::nothrow ) _127b065b0_FileInfo());
	std::tie(_2713_finf->_field_ast,_2713_finf->_field_errors) = _127b065b0_parse_fileset(_2223_f);
	if (_2713_finf->_field_errors != nullptr) {
		jule::drop(_2713_finf->_field_ast);
	}
	return _2713_finf;
}



inline std::tuple<jule::Ref<_1275d0e60_Ast>,jule::Slice<_136e99d00_Log>> _127b065b0_parse_fileset(jule::Ref<_126f67810_File> _5722_f) {
	jule::Ref<_127b060e0_Parser> _5813_p = jule::new_struct<_127b060e0_Parser>(new( std::nothrow ) _127b060e0_Parser());
	_5813_p->_method_parse(_5722_f);
	return std::make_tuple(_5813_p->_field_ast,_5813_p->_field_errors);
}



inline jule::Ref<_1275d7180_ScopeTree> _127b06690_new_scope(void) {
	return jule::new_struct<_1275d7180_ScopeTree>(new( std::nothrow ) _1275d7180_ScopeTree());
}



inline std::tuple<jule::Bool,jule::Bool> _127b06690_is_st(_127941de0_Token _4210_current,_127941de0_Token _4226_prev) {
	jule::Bool _4251_terminated = jule::Bool();
	jule::Bool _4241_ok = jule::Bool();
	_4241_ok=(_4210_current._field_id == 5LLU) || (_4226_prev._field_row < _4210_current._field_row);
	_4251_terminated=_4210_current._field_id == 5LLU;
	return std::make_tuple(_4241_ok,_4251_terminated);
}



inline std::tuple<jule::Int,jule::Bool> _127b06690_next_st_pos(jule::Slice<_127941de0_Token> _4916_tokens,jule::Int _4933_start) {
	jule::Int _5013_brace_n = 0LL;
	jule::Int _5113_i = _4933_start;
	_iter_begin_5370458368:;
	if (!(_5113_i < _4916_tokens.len())) { goto _iter_end_5370458368; }
	{
		jule::Bool _5317_ok = false;
		jule::Bool _5417_terminated = false;
		_127941de0_Token _5513_tok = _4916_tokens[static_cast<jule::Int>(_5113_i)];
		if (_5513_tok._field_id == 3LLU) {
			{
				auto &_match_expr{ _5513_tok._field_kind };
				if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_5370472608; }
				_case_begin_5370472608:;
				{
					if ((_5013_brace_n == 0LL) && (_5113_i > _4933_start)) {
						std::tie(_5317_ok,_5417_terminated) = _127b06690_is_st(_5513_tok,_4916_tokens[static_cast<jule::Int>(_5113_i - 1LL)]);
						if (_5317_ok) {
							goto _julec_label_return;
						}
					}
					(_5013_brace_n)++;
					goto _iter_next_5370458368;
				}
				goto _match_end_5370463472;
				_case_end_5370472608:;
				_case_begin_5370465632:;
				{
					(_5013_brace_n)--;
					if ((_5013_brace_n == 0LL) && ((_5113_i + 1LL) < _4916_tokens.len())) {
						std::tie(_5317_ok,_5417_terminated) = _127b06690_is_st(_4916_tokens[static_cast<jule::Int>(_5113_i + 1LL)],_5513_tok);
						if (_5317_ok) {
							(_5113_i)++;
							goto _julec_label_return;
						}
					}
					goto _iter_next_5370458368;
				}
				goto _match_end_5370463472;
				_case_end_5370465632:;
				_match_end_5370463472:;
			}
		}
		if (_5013_brace_n != 0LL) {
			goto _iter_next_5370458368;
		} else if (_5113_i > _4933_start) {
			std::tie(_5317_ok,_5417_terminated) = _127b06690_is_st(_5513_tok,_4916_tokens[static_cast<jule::Int>(_5113_i - 1LL)]);
		} else {
			std::tie(_5317_ok,_5417_terminated) = _127b06690_is_st(_5513_tok,_5513_tok);
		}
		if ((!(_5317_ok))) {
			goto _iter_next_5370458368;
		}
		_julec_label_return:;
		if (_5417_terminated) {
			(_5113_i)++;
		}
		return std::make_tuple(_5113_i,_5417_terminated);
	}
	_iter_next_5370458368:;
	(_5113_i)++;
	goto _iter_begin_5370458368;
	_iter_end_5370458368:;
	return std::make_tuple(_5113_i,false);
}



inline std::tuple<jule::Slice<_127941de0_Token>,jule::Bool> _127b06690_skip_st(jule::Int& _10517_i,jule::Slice<_127941de0_Token> _10529_tokens) {
	jule::Int _1069_start = _10517_i;
	jule::Bool _10713_terminated = false;
	std::tie(_10517_i,_10713_terminated) = _127b06690_next_st_pos(_10529_tokens,_1069_start);
	jule::Slice<_127941de0_Token> _10913_st_tokens = _10529_tokens.slice(static_cast<jule::Int>(_1069_start),static_cast<jule::Int>(_10517_i));
	if (_10713_terminated) {
		if (_10913_st_tokens.len() == 1LL) {
			return _127b06690_skip_st(_10517_i,_10529_tokens);
		}
		_10913_st_tokens=_10913_st_tokens.slice(0LL,static_cast<jule::Int>(_10913_st_tokens.len() - 1LL));
	}
	return std::make_tuple(_10913_st_tokens,_10713_terminated);
}



inline jule::Slice<jule::Ref<_127b06690_Stmt>> _127b06690_split_stms(jule::Slice<_127941de0_Token> _12619_tokens) {
	jule::Slice<jule::Ref<_127b06690_Stmt>> _12713_stms = nullptr;
	jule::Int _12813_pos = 0LL;
	_iter_begin_5370504736:;
	if (!(_12813_pos < _12619_tokens.len())) { goto _iter_end_5370504736; }
	{
		jule::Slice<_127941de0_Token> _13018_tokens;
		jule::Bool _13026_terminated;
		std::tie(_13018_tokens,_13026_terminated) = _127b06690_skip_st(_12813_pos,_12619_tokens);
		_12713_stms=append(_12713_stms,jule::Slice<jule::Ref<_127b06690_Stmt>>({jule::new_struct<_127b06690_Stmt>(new( std::nothrow ) _127b06690_Stmt(_13018_tokens,_13026_terminated))}));
	}
	_iter_next_5370504736:;
	goto _iter_begin_5370504736;
	_iter_end_5370504736:;
	return _12713_stms;
}



inline jule::Slice<_127941de0_Token> _127b10a80_is_fn_call(jule::Slice<_127941de0_Token> _3819_tokens) {
	{
		auto &_match_expr{ _3819_tokens[static_cast<jule::Int>(0LL)]._field_id };
		if (!((3LLU) == _match_expr || (2LLU) == _match_expr || (1LLU) == _match_expr)) { goto _case_end_5370517088; }
		goto _match_end_5370511296;
		_case_end_5370517088:;
		_case_begin_5370512816:;
		{
			_127941de0_Token _4613_tok = _3819_tokens[static_cast<jule::Int>(_3819_tokens.len() - 1LL)];
			if ((_4613_tok._field_id != 3LLU) && (_4613_tok._field_kind != jule::Str(")", 1))) {
				return nullptr;
			}
		}
		goto _match_end_5370511296;
		_case_end_5370512816:;
		_match_end_5370511296:;
	}
	_127941de0_Token _519_tok = _3819_tokens[static_cast<jule::Int>(_3819_tokens.len() - 1LL)];
	if ((_519_tok._field_id != 3LLU) || (_519_tok._field_kind != jule::Str(")", 1))) {
		return nullptr;
	}
	jule::Int _5513_brace_n = 0LL;
	jule::I64 _5813_i = _3819_tokens.len() - 1LL;
	_iter_begin_5370524816:;
	if (!(_5813_i >= 1LL)) { goto _iter_end_5370524816; }
	{
		_127941de0_Token _6013_tok = _3819_tokens[static_cast<jule::Int>(_5813_i)];
		if (_6013_tok._field_id == 3LLU) {
			{
				auto &_match_expr{ _6013_tok._field_kind };
				if (!((jule::Str(")", 1)) == _match_expr)) { goto _case_end_5370529952; }
				_case_begin_5370529952:;
				{
					(_5513_brace_n)++;
				}
				goto _match_end_5370528992;
				_case_end_5370529952:;
				if (!((jule::Str("(", 1)) == _match_expr)) { goto _case_end_5370530064; }
				_case_begin_5370530064:;
				{
					(_5513_brace_n)--;
				}
				goto _match_end_5370528992;
				_case_end_5370530064:;
				_match_end_5370528992:;
			}
			if (_5513_brace_n == 0LL) {
				return _3819_tokens.slice(0LL,static_cast<jule::Int>(_5813_i));
			}
		}
	}
	_iter_next_5370524816:;
	(_5813_i)--;
	goto _iter_begin_5370524816;
	_iter_end_5370524816:;
	return nullptr;
}



inline jule::Ref<_127b10a80_CallData> _127b10a80_get_call_data(jule::Slice<_127941de0_Token> _8022_tokens) {
	jule::Ref<_127b10a80_CallData> _8113_data = jule::new_struct<_127b10a80_CallData>(new( std::nothrow ) _127b10a80_CallData());
	std::tie(_8113_data->_field_expr_tokens,_8113_data->_field_args_tokens) = _127b060e0_range_last(_8022_tokens);
	if (_8113_data->_field_expr_tokens.len() == 0LL) {
		return _8113_data;
	}
	_127941de0_Token _889_token = _8113_data->_field_expr_tokens[static_cast<jule::Int>(_8113_data->_field_expr_tokens.len() - 1LL)];
	if ((_889_token._field_id == 3LLU) && (_889_token._field_kind == jule::Str("]", 1))) {
		std::tie(_8113_data->_field_expr_tokens,_8113_data->_field_generics_tokens) = _127b060e0_range_last(_8113_data->_field_expr_tokens);
	}
	return _8113_data;
}



inline jule::Slice<_127941de0_Token> _127b10a80_get_block_expr(jule::Slice<_127941de0_Token> _9623_tokens) {
	jule::Int _9713_brace_n = 0LL;
	{
		auto &__julec_range_expr = _9623_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _127b10a80_i = 0;
			_127941de0_Token _127b10a80_tok = *__julec_range_begin;
			_iter_begin_5370546704:;
			{
				if (_127b10a80_tok._field_id == 3LLU) {
					{
						auto &_match_expr{ _127b10a80_tok._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr)) { goto _case_end_5370552000; }
						_case_begin_5370552000:;
						{
							if (_9713_brace_n > 0LL) {
								(_9713_brace_n)++;
								goto _match_end_5370549968;
							}
							return _9623_tokens.slice(0LL,static_cast<jule::Int>(_127b10a80_i));
						}
						goto _match_end_5370549968;
						_case_end_5370552000:;
						if (!((jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_5370552240; }
						_case_begin_5370552240:;
						{
							(_9713_brace_n)++;
						}
						goto _match_end_5370549968;
						_case_end_5370552240:;
						_case_begin_5370550880:;
						{
							(_9713_brace_n)--;
						}
						goto _match_end_5370549968;
						_case_end_5370550880:;
						_match_end_5370549968:;
					}
				}
			}
			_iter_next_5370546704:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_127b10a80_i; _127b10a80_tok = *__julec_range_begin; goto _iter_begin_5370546704; }
			_iter_end_5370546704:;
		}
	}
	return nullptr;
}



inline std::tuple<jule::Slice<_127941de0_Token>,jule::Slice<_127941de0_Token>> _127b10a80_split_colon(jule::Slice<_127941de0_Token> _12220_tokens) {
	jule::Int _12313_range_n = 0LL;
	{
		auto &__julec_range_expr = _12220_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _127b10a80_i = 0;
			_127941de0_Token _127b10a80_token = *__julec_range_begin;
			_iter_begin_5370556608:;
			{
				{
					auto &_match_expr{ _127b10a80_token._field_id };
					if (!((3LLU) == _match_expr)) { goto _case_end_5370559808; }
					_case_begin_5370559808:;
					{
						{
							auto &_match_expr{ _127b10a80_token._field_kind };
							if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_5370562976; }
							_case_begin_5370562976:;
							{
								(_12313_range_n)++;
								goto _iter_next_5370556608;
							}
							goto _match_end_5370560096;
							_case_end_5370562976:;
							_case_begin_5370561904:;
							{
								(_12313_range_n)--;
							}
							goto _match_end_5370560096;
							_case_end_5370561904:;
							_match_end_5370560096:;
						}
					}
					goto _match_end_5370558896;
					_case_end_5370559808:;
					if (!((11LLU) == _match_expr)) { goto _case_end_5370559920; }
					_case_begin_5370559920:;
					{
						if (_12313_range_n < 1LL) {
							jule::Slice<_127941de0_Token> _14025_l = _12220_tokens.slice(0LL,static_cast<jule::Int>(_127b10a80_i));
							jule::Slice<_127941de0_Token> _14125_r = _12220_tokens.slice(static_cast<jule::Int>(_127b10a80_i + 1LL));
							return std::make_tuple(_14025_l,_14125_r);
						}
					}
					goto _match_end_5370558896;
					_case_end_5370559920:;
					_match_end_5370558896:;
				}
			}
			_iter_next_5370556608:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_127b10a80_i; _127b10a80_token = *__julec_range_begin; goto _iter_begin_5370556608; }
			_iter_end_5370556608:;
		}
	}
	return std::make_tuple(nullptr,nullptr);
}



inline jule::Slice<_127941de0_Token> _127b10a80_eliminate_comments(jule::Slice<_127941de0_Token> _18027_tokens) {
	jule::Slice<_127941de0_Token> _18113_cutted = nullptr;
	{
		auto &__julec_range_expr = _18027_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_127941de0_Token _127b10a80_token = *__julec_range_begin;
			_iter_begin_5370572848:;
			{
				if (_127b10a80_token._field_id != 18LLU) {
					_18113_cutted=append(_18113_cutted,jule::Slice<_127941de0_Token>({_127b10a80_token}));
				}
			}
			_iter_next_5370572848:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127b10a80_token = *__julec_range_begin; goto _iter_begin_5370572848; }
			_iter_end_5370572848:;
		}
	}
	return _18113_cutted;
}



inline jule::Int _127b10a80_find_lowest_prec_op(jule::Slice<_127941de0_Token> _19224_tokens) {
	_127b10a80_Precedencer _19313_prec = _127b10a80_Precedencer();
	jule::Int _19413_brace_n = 0LL;
	{
		auto &__julec_range_expr = _19224_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _127b10a80_i = 0;
			_127941de0_Token _127b10a80_token = *__julec_range_begin;
			_iter_begin_5370582528:;
			{
				{
					if (!((_127b10a80_token._field_id == 3LLU))) { goto _case_end_5370585040; }
					_case_begin_5370585040:;
					{
						{
							auto &_match_expr{ _127b10a80_token._field_kind };
							if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr)) { goto _case_end_5370589040; }
							_case_begin_5370589040:;
							{
								(_19413_brace_n)++;
							}
							goto _match_end_5370586448;
							_case_end_5370589040:;
							_case_begin_5370587056:;
							{
								(_19413_brace_n)--;
							}
							goto _match_end_5370586448;
							_case_end_5370587056:;
							_match_end_5370586448:;
						}
						goto _iter_next_5370582528;
					}
					goto _match_end_5370584768;
					_case_end_5370585040:;
					if (!((_127b10a80_i == 0LL))) { goto _case_end_5370585152; }
					_case_begin_5370585152:;
					{
						goto _iter_next_5370582528;
					}
					goto _match_end_5370584768;
					_case_end_5370585152:;
					if (!((_127b10a80_token._field_id != 7LLU))) { goto _case_end_5370585264; }
					_case_begin_5370585264:;
					{
						goto _iter_next_5370582528;
					}
					goto _match_end_5370584768;
					_case_end_5370585264:;
					if (!((_19413_brace_n > 0LL))) { goto _case_end_5370585392; }
					_case_begin_5370585392:;
					{
						goto _iter_next_5370582528;
					}
					goto _match_end_5370584768;
					_case_end_5370585392:;
					_match_end_5370584768:;
				}
				_127941de0_Token _21913_left = _19224_tokens[static_cast<jule::Int>(_127b10a80_i - 1LL)];
				if ((_21913_left._field_id == 7LLU) || (_21913_left._field_id == 11LLU)) {
					goto _iter_next_5370582528;
				}
				if (((_127b10a80_i > 1LL) && (_21913_left._field_id == 3LLU)) && (_21913_left._field_kind == jule::Str("]", 1))) {
					_127941de0_Token _22717_lleft = _19224_tokens[static_cast<jule::Int>(_127b10a80_i - 2LL)];
					if ((_22717_lleft._field_id == 3LLU) && (_22717_lleft._field_kind == jule::Str("[", 1))) {
						if ((_127b10a80_token._field_kind == jule::Str("&", 1)) || (_127b10a80_token._field_kind == jule::Str("*", 1))) {
							goto _iter_next_5370582528;
						}
					}
				}
				jule::Int _23613_p = _127b10a80_token._method_prec();
				if (_23613_p != -1LL) {
					_19313_prec._method_set(_23613_p,jule::Any(_127b10a80_i));
				}
			}
			_iter_next_5370582528:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_127b10a80_i; _127b10a80_token = *__julec_range_begin; goto _iter_begin_5370582528; }
			_iter_end_5370582528:;
		}
	}
	jule::Any _2429_data = _19313_prec._method_get_lower();
	if (_2429_data == nullptr) {
		return -1LL;
	}
	return _2429_data.operator jule::Int();
}



inline jule::Ref<_1275d7180_IdentExpr> _127b10a80_build_ident_expr(_127941de0_Token _24925_token) {
	return jule::new_struct<_1275d7180_IdentExpr>(new( std::nothrow ) _1275d7180_IdentExpr(_24925_token,_24925_token._field_kind,false));
}



inline std::tuple<jule::Slice<_127941de0_Token>,jule::Int> _127b10a80_get_range_expr_tokens(jule::Slice<_127941de0_Token> _25730_tokens) {
	jule::Int _25813_range_n = 0LL;
	jule::I64 _25913_i = _25730_tokens.len() - 1LL;
	_iter_begin_5370618736:;
	if (!(_25913_i >= 0LL)) { goto _iter_end_5370618736; }
	{
		_127941de0_Token _26113_tok = _25730_tokens[static_cast<jule::Int>(_25913_i)];
		if (_26113_tok._field_id == 3LLU) {
			{
				auto &_match_expr{ _26113_tok._field_kind };
				if (!((jule::Str("}", 1)) == _match_expr || (jule::Str("]", 1)) == _match_expr || (jule::Str(")", 1)) == _match_expr)) { goto _case_end_5370624112; }
				_case_begin_5370624112:;
				{
					(_25813_range_n)++;
				}
				goto _match_end_5370622080;
				_case_end_5370624112:;
				_case_begin_5370622992:;
				{
					(_25813_range_n)--;
				}
				goto _match_end_5370622080;
				_case_end_5370622992:;
				_match_end_5370622080:;
			}
		}
		if (_25813_range_n == 0LL) {
			return std::make_tuple(_25730_tokens.slice(0LL,static_cast<jule::Int>(_25913_i)),_25813_range_n);
		}
	}
	_iter_next_5370618736:;
	(_25913_i)--;
	goto _iter_begin_5370618736;
	_iter_end_5370618736:;
	return std::make_tuple(nullptr,_25813_range_n);
}



inline jule::Bool _127c1fad0_check_assign_tokens(jule::Slice<_127941de0_Token> _1624_tokens) {
	if ((_1624_tokens.len() == 0LL) || (!(_127941de0_is_assign(_1624_tokens[static_cast<jule::Int>(0LL)]._field_id)))) {
		return false;
	}
	jule::Int _2113_brace_n = 0LL;
	{
		auto &__julec_range_expr = _1624_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_127941de0_Token _127c1fad0_t = *__julec_range_begin;
			_iter_begin_5370633280:;
			{
				if (_127c1fad0_t._field_id == 3LLU) {
					{
						auto &_match_expr{ _127c1fad0_t._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_5370637856; }
						_case_begin_5370637856:;
						{
							(_2113_brace_n)++;
						}
						goto _match_end_5370635824;
						_case_end_5370637856:;
						_case_begin_5370636736:;
						{
							(_2113_brace_n)--;
						}
						goto _match_end_5370635824;
						_case_end_5370636736:;
						_match_end_5370635824:;
					}
				}
				if (_2113_brace_n < 0LL) {
					return false;
				} else if (_2113_brace_n > 0LL) {
					goto _iter_next_5370633280;
				} else if ((_127c1fad0_t._field_id == 7LLU) && _127941de0_is_assign_op(_127c1fad0_t._field_kind)) {
					return true;
				}
			}
			_iter_next_5370633280:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127c1fad0_t = *__julec_range_begin; goto _iter_begin_5370633280; }
			_iter_end_5370633280:;
		}
	}
	return false;
}



inline _136e99d00_Log _127b060e0_make_err(jule::Int _5513_row,jule::Int _5523_col,jule::Ref<_126f67810_File> _5533_f,jule::Str _5543_key,jule::Slice<jule::Any> _5553_args) {
	return _136e99d00_Log(1LLU,_5513_row,_5523_col,_5533_f->_method_path(),_136e8b750_errorf(_5543_key,_5553_args));
}



inline jule::Slice<_127941de0_Token> _127b060e0_range(jule::Int& _7415_i,jule::Str _7423_open,jule::Str _7440_close,jule::Slice<_127941de0_Token> _7462_tokens) {
	if (_7415_i >= _7462_tokens.len()) {
		return nullptr;
	}
	_127941de0_Token _799_tok = _7462_tokens[static_cast<jule::Int>(_7415_i)];
	if ((_799_tok._field_id != 3LLU) || (_799_tok._field_kind != _7423_open)) {
		return nullptr;
	}
	(_7415_i)++;
	jule::Int _8513_range_n = 1LL;
	jule::Int _869_start = _7415_i;
	_iter_begin_5370658896:;
	if (!((_8513_range_n != 0LL) && (_7415_i < _7462_tokens.len()))) { goto _iter_end_5370658896; }
	{
		_127941de0_Token _8813_token = _7462_tokens[static_cast<jule::Int>(_7415_i)];
		if (_8813_token._field_id == 3LLU) {
			{
				auto &_match_expr{ _8813_token._field_kind };
				if (!((_7423_open) == _match_expr)) { goto _case_end_5370663984; }
				_case_begin_5370663984:;
				{
					(_8513_range_n)++;
				}
				goto _match_end_5370663024;
				_case_end_5370663984:;
				if (!((_7440_close) == _match_expr)) { goto _case_end_5370664096; }
				_case_begin_5370664096:;
				{
					(_8513_range_n)--;
				}
				goto _match_end_5370663024;
				_case_end_5370664096:;
				_match_end_5370663024:;
			}
		}
	}
	_iter_next_5370658896:;
	(_7415_i)++;
	goto _iter_begin_5370658896;
	_iter_end_5370658896:;
	return _7462_tokens.slice(static_cast<jule::Int>(_869_start),static_cast<jule::Int>(_7415_i - 1LL));
}



inline std::tuple<jule::Slice<_127941de0_Token>,jule::Slice<_127941de0_Token>> _127b060e0_range_last(jule::Slice<_127941de0_Token> _10719_tokens) {
	jule::Slice<_127941de0_Token> _10755_cut = jule::Slice<_127941de0_Token>();
	jule::Slice<_127941de0_Token> _10738_cutted = jule::Slice<_127941de0_Token>();
	if (_10719_tokens.len() == 0LL) {
		_10738_cutted = _10719_tokens;
		_10755_cut = nullptr;
		return std::make_tuple(_10738_cutted,_10755_cut);
	} else if (_10719_tokens[static_cast<jule::Int>(_10719_tokens.len() - 1LL)]._field_id != 3LLU) {
		_10738_cutted = _10719_tokens;
		_10755_cut = nullptr;
		return std::make_tuple(_10738_cutted,_10755_cut);
	}
	jule::Int _11413_brace_n = 0LL;
	jule::I64 _11513_i = _10719_tokens.len() - 1LL;
	_iter_begin_5370668816:;
	if (!(_11513_i >= 0LL)) { goto _iter_end_5370668816; }
	{
		_127941de0_Token _11713_token = _10719_tokens[static_cast<jule::Int>(_11513_i)];
		if (_11713_token._field_id == 3LLU) {
			{
				auto &_match_expr{ _11713_token._field_kind };
				if (!((jule::Str("}", 1)) == _match_expr || (jule::Str("]", 1)) == _match_expr || (jule::Str(")", 1)) == _match_expr)) { goto _case_end_5370683280; }
				_case_begin_5370683280:;
				{
					(_11413_brace_n)++;
					goto _iter_next_5370668816;
				}
				goto _match_end_5370681248;
				_case_end_5370683280:;
				_case_begin_5370682160:;
				{
					(_11413_brace_n)--;
				}
				goto _match_end_5370681248;
				_case_end_5370682160:;
				_match_end_5370681248:;
			}
		}
		if (_11413_brace_n == 0LL) {
			_10738_cutted = _10719_tokens.slice(0LL,static_cast<jule::Int>(_11513_i));
			_10755_cut = _10719_tokens.slice(static_cast<jule::Int>(_11513_i));
			return std::make_tuple(_10738_cutted,_10755_cut);
		}
	}
	_iter_next_5370668816:;
	(_11513_i)--;
	goto _iter_begin_5370668816;
	_iter_end_5370668816:;
	_10738_cutted = _10719_tokens;
	_10755_cut = nullptr;
	return std::make_tuple(_10738_cutted,_10755_cut);
}



inline std::tuple<jule::Slice<jule::Slice<_127941de0_Token>>,jule::Slice<_136e99d00_Log>> _127b060e0_parts(jule::Slice<_127941de0_Token> _14514_tokens,jule::Uint _14531_id,jule::Bool _14544_expr_must) {
	if (_14514_tokens.len() == 0LL) {
		return std::make_tuple(nullptr,nullptr);
	}
	jule::Slice<jule::Slice<_127941de0_Token>> _15013_parts = nullptr;
	jule::Slice<_136e99d00_Log> _15113_errors = nullptr;
	jule::Int _15313_range_n = 0LL;
	jule::Int _15413_last = 0LL;
	{
		auto &__julec_range_expr = _14514_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _127b060e0_i = 0;
			_127941de0_Token _127b060e0_token = *__julec_range_begin;
			_iter_begin_5370699408:;
			{
				if (_127b060e0_token._field_id == 3LLU) {
					{
						auto &_match_expr{ _127b060e0_token._field_kind };
						if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_5370704160; }
						_case_begin_5370704160:;
						{
							(_15313_range_n)++;
							goto _iter_next_5370699408;
						}
						goto _match_end_5370702128;
						_case_end_5370704160:;
						_case_begin_5370703040:;
						{
							(_15313_range_n)--;
						}
						goto _match_end_5370702128;
						_case_end_5370703040:;
						_match_end_5370702128:;
					}
				}
				if (_15313_range_n > 0LL) {
					goto _iter_next_5370699408;
				}
				if (_127b060e0_token._field_id == _14531_id) {
					if (_14544_expr_must && ((_127b060e0_i - _15413_last) <= 0LL)) {
						_136e99d00_Log _17421_err = _127b060e0_make_err(_127b060e0_token._field_row,_127b060e0_token._field_column,_127b060e0_token._field_file,jule::Str("missing_expr", 12),jule::Slice<jule::Any>({}));
						_15113_errors=append(_15113_errors,jule::Slice<_136e99d00_Log>({_17421_err}));
					}
					_15013_parts=append(_15013_parts,jule::Slice<jule::Slice<_127941de0_Token>>({_14514_tokens.slice(static_cast<jule::Int>(_15413_last),static_cast<jule::Int>(_127b060e0_i))}));
					_15413_last=_127b060e0_i + 1LL;
				}
			}
			_iter_next_5370699408:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_127b060e0_i; _127b060e0_token = *__julec_range_begin; goto _iter_begin_5370699408; }
			_iter_end_5370699408:;
		}
	}
	if (_15413_last < _14514_tokens.len()) {
		_15013_parts=append(_15013_parts,jule::Slice<jule::Slice<_127941de0_Token>>({_14514_tokens.slice(static_cast<jule::Int>(_15413_last))}));
	} else if ((!(_14544_expr_must))) {
		_15013_parts=append(_15013_parts,jule::Slice<jule::Slice<_127941de0_Token>>({jule::Slice<_127941de0_Token>({})}));
	}
	return std::make_tuple(_15013_parts,_15113_errors);
}



inline _136e99d00_Log _127b060e0_compiler_err(_127941de0_Token _19117_token,jule::Str _19131_key,jule::Slice<jule::Any> _19141_args) {
	return _136e99d00_Log(1LLU,_19117_token._field_row,_19117_token._field_column,_19117_token._field_file->_method_path(),_136e8b750_errorf(_19131_key,_19141_args));
}



inline jule::Ref<_1275d7180_Comment> _127b060e0_build_comment(_127941de0_Token _20122_token) {
	_20122_token._field_kind=_20122_token._field_kind.slice(static_cast<jule::Int>(2LL)).trim(jule::Str(" \n\r\t\v", 5));
	return jule::new_struct<_1275d7180_Comment>(new( std::nothrow ) _1275d7180_Comment(_20122_token,_20122_token._field_kind));
}



inline jule::Str _127b060e0_tokstoa(jule::Slice<_127941de0_Token> _21012_tokens) {
	jule::Str _21113_s = jule::Str("", 0);
	{
		auto &__julec_range_expr = _21012_tokens;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_127941de0_Token _127b060e0_token = *__julec_range_begin;
			_iter_begin_5124589776:;
			{
				_21113_s+=_127b060e0_token._field_kind;
			}
			_iter_next_5124589776:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127b060e0_token = *__julec_range_begin; goto _iter_begin_5124589776; }
			_iter_end_5124589776:;
		}
	}
	return _21113_s;
}



inline jule::Ref<_1275d7180_TypeDecl> _127b2c380_build_void_type(void) {
	return jule::new_struct<_1275d7180_TypeDecl>(new( std::nothrow ) _1275d7180_TypeDecl());
}



inline jule::Ref<_1275d7180_TypeDecl> _127b2c380_build_prim_type(_127941de0_Token _1924_token) {
	return jule::new_struct<_1275d7180_TypeDecl>(new( std::nothrow ) _1275d7180_TypeDecl(_1924_token,jule::new_struct<_1275d7180_IdentTypeDecl>(new( std::nothrow ) _1275d7180_IdentTypeDecl(_1924_token,_1924_token._field_kind,false,nullptr))));
}



inline std::tuple<jule::Slice<_127941de0_Token>,jule::Int> _127b2c380_split_map_range(jule::Slice<_127941de0_Token> _3424_tokens,jule::Int& _3446_i) {
	jule::Int _3479_colon = jule::Int();
	jule::Slice<_127941de0_Token> _3456_range_tokens = jule::Slice<_127941de0_Token>();
	_3479_colon=-1LL;
	jule::Int _3613_range_n = 0LL;
	jule::Int _379_start = _3446_i;
	_iter_begin_5124599632:;
	if (!(_3446_i < _3424_tokens.len())) { goto _iter_end_5124599632; }
	{
		_127941de0_Token _3913_token = _3424_tokens[static_cast<jule::Int>(_3446_i)];
		if (_3913_token._field_id == 3LLU) {
			{
				auto &_match_expr{ _3913_token._field_kind };
				if (!((jule::Str("{", 1)) == _match_expr || (jule::Str("[", 1)) == _match_expr || (jule::Str("(", 1)) == _match_expr)) { goto _case_end_5124605568; }
				_case_begin_5124605568:;
				{
					(_3613_range_n)++;
					goto _iter_next_5124599632;
				}
				goto _match_end_5124603536;
				_case_end_5124605568:;
				_case_begin_5124604448:;
				{
					(_3613_range_n)--;
				}
				goto _match_end_5124603536;
				_case_end_5124604448:;
				_match_end_5124603536:;
			}
		}
		if (_3613_range_n == 0LL) {
			if ((_379_start + 1LL) > _3446_i) {
				return std::make_tuple(_3456_range_tokens,_3479_colon);
			}
			_3456_range_tokens=_3424_tokens.slice(static_cast<jule::Int>(_379_start + 1LL),static_cast<jule::Int>(_3446_i));
			goto _iter_end_5124599632;
		} else if (_3613_range_n != 1LL) {
			goto _iter_next_5124599632;
		}
		if ((_3479_colon == -1LL) && (_3913_token._field_id == 11LLU)) {
			_3479_colon=(_3446_i - _379_start) - 1LL;
		}
	}
	_iter_next_5124599632:;
	(_3446_i)++;
	goto _iter_begin_5124599632;
	_iter_end_5124599632:;
	return std::make_tuple(_3456_range_tokens,_3479_colon);
}



inline jule::Ref<_130c83140_Const> _130c83140_new_i64(jule::I64 _1216_x) {
	return jule::new_struct<_130c83140_Const>(new( std::nothrow ) _130c83140_Const(_1216_x));
}



inline jule::Ref<_130c83140_Const> _130c83140_new_u64(jule::U64 _1416_x) {
	return jule::new_struct<_130c83140_Const>(new( std::nothrow ) _130c83140_Const(_1416_x));
}



inline jule::Ref<_130c83140_Const> _130c83140_new_bool(jule::Bool _1617_x) {
	return jule::new_struct<_130c83140_Const>(new( std::nothrow ) _130c83140_Const(_1617_x));
}



inline jule::Ref<_130c83140_Const> _130c83140_new_str(jule::Str _1816_x) {
	return jule::new_struct<_130c83140_Const>(new( std::nothrow ) _130c83140_Const(_1816_x));
}



inline jule::Ref<_130c83140_Const> _130c83140_new_f64(jule::F64 _2016_x) {
	return jule::new_struct<_130c83140_Const>(new( std::nothrow ) _130c83140_Const(_2016_x));
}



inline jule::Ref<_130c83140_Const> _130c83140_new_nil(void) {
	return jule::new_struct<_130c83140_Const>(new( std::nothrow ) _130c83140_Const(nullptr));
}



inline void _130c83140_lshift_unsig(_130c83140_Const& _53022_c,_130c83140_Const& _53033_x) {
	jule::U64 _5319_l = _53022_c._method_as_u64();
	jule::U64 _5329_r = _53033_x._method_as_u64();
	_53022_c._method_set_u64(_5319_l << _5329_r);
}



inline void _130c83140_rshift_unsig(_130c83140_Const& _53622_c,_130c83140_Const& _53633_x) {
	jule::U64 _5379_l = _53622_c._method_as_u64();
	jule::U64 _5389_r = _53633_x._method_as_u64();
	_53622_c._method_set_u64(_5379_l >> _5389_r);
}



inline jule::Str _130cb2be0_real_kind_of(jule::Str _4121_kind) {
	{
		auto &_match_expr{ _4121_kind };
		if (!((jule::Str("int", 3)) == _match_expr)) { goto _case_end_5128863904; }
		_case_begin_5128863904:;
		{
			return _130cb2be0_SYS_INT;
		}
		goto _match_end_5128844304;
		_case_end_5128863904:;
		if (!((jule::Str("uint", 4)) == _match_expr || (jule::Str("uintptr", 7)) == _match_expr)) { goto _case_end_5128861536; }
		_case_begin_5128861536:;
		{
			return _130cb2be0_SYS_UINT;
		}
		goto _match_end_5128844304;
		_case_end_5128861536:;
		_case_begin_5128858800:;
		{
			return _4121_kind;
		}
		goto _match_end_5128844304;
		_case_end_5128858800:;
		_match_end_5128844304:;
	}
}



inline jule::Int _130cb2be0_bitsize_of(jule::Str _5719_k) {
	{
		auto &_match_expr{ _5719_k };
		if (!((jule::Str("i8", 2)) == _match_expr || (jule::Str("u8", 2)) == _match_expr)) { goto _case_end_5128867584; }
		_case_begin_5128867584:;
		{
			return 8LL;
		}
		goto _match_end_5128865456;
		_case_end_5128867584:;
		if (!((jule::Str("i16", 3)) == _match_expr || (jule::Str("u16", 3)) == _match_expr)) { goto _case_end_5128866608; }
		_case_begin_5128866608:;
		{
			return 16LL;
		}
		goto _match_end_5128865456;
		_case_end_5128866608:;
		if (!((jule::Str("i32", 3)) == _match_expr || (jule::Str("u32", 3)) == _match_expr || (jule::Str("f32", 3)) == _match_expr)) { goto _case_end_5128866720; }
		_case_begin_5128866720:;
		{
			return 32LL;
		}
		goto _match_end_5128865456;
		_case_end_5128866720:;
		if (!((jule::Str("i64", 3)) == _match_expr || (jule::Str("u64", 3)) == _match_expr || (jule::Str("f64", 3)) == _match_expr)) { goto _case_end_5128866832; }
		_case_begin_5128866832:;
		{
			return 64LL;
		}
		goto _match_end_5128865456;
		_case_end_5128866832:;
		if (!((jule::Str("uint", 4)) == _match_expr || (jule::Str("int", 3)) == _match_expr)) { goto _case_end_5128867888; }
		_case_begin_5128867888:;
		{
			return 64LL;
		}
		goto _match_end_5128865456;
		_case_end_5128867888:;
		_case_begin_5128865968:;
		{
			return -1LL;
		}
		goto _match_end_5128865456;
		_case_end_5128865968:;
		_match_end_5128865456:;
	}
}



inline jule::Str _130cb2be0_int_from_bits(jule::U64 _8922_bits) {
	{
		auto &_match_expr{ _8922_bits };
		if (!((8LL) == _match_expr)) { goto _case_end_5128875104; }
		_case_begin_5128875104:;
		{
			return jule::Str("i8", 2);
		}
		goto _match_end_5128872960;
		_case_end_5128875104:;
		if (!((16LL) == _match_expr)) { goto _case_end_5128875216; }
		_case_begin_5128875216:;
		{
			return jule::Str("i16", 3);
		}
		goto _match_end_5128872960;
		_case_end_5128875216:;
		if (!((32LL) == _match_expr)) { goto _case_end_5128874208; }
		_case_begin_5128874208:;
		{
			return jule::Str("i32", 3);
		}
		goto _match_end_5128872960;
		_case_end_5128874208:;
		if (!((64LL) == _match_expr)) { goto _case_end_5128874320; }
		_case_begin_5128874320:;
		{
			return jule::Str("i64", 3);
		}
		goto _match_end_5128872960;
		_case_end_5128874320:;
		_case_begin_5128872800:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_5128872960;
		_case_end_5128872800:;
		_match_end_5128872960:;
	}
}



inline jule::Str _130cb2be0_uint_from_bits(jule::U64 _10223_bits) {
	{
		auto &_match_expr{ _10223_bits };
		if (!((8LL) == _match_expr)) { goto _case_end_5128879648; }
		_case_begin_5128879648:;
		{
			return jule::Str("u8", 2);
		}
		goto _match_end_5128876864;
		_case_end_5128879648:;
		if (!((16LL) == _match_expr)) { goto _case_end_5128879760; }
		_case_begin_5128879760:;
		{
			return jule::Str("u16", 3);
		}
		goto _match_end_5128876864;
		_case_end_5128879760:;
		if (!((32LL) == _match_expr)) { goto _case_end_5128879872; }
		_case_begin_5128879872:;
		{
			return jule::Str("u32", 3);
		}
		goto _match_end_5128876864;
		_case_end_5128879872:;
		if (!((64LL) == _match_expr)) { goto _case_end_5128880224; }
		_case_begin_5128880224:;
		{
			return jule::Str("u64", 3);
		}
		goto _match_end_5128876864;
		_case_end_5128880224:;
		_case_begin_5128876144:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_5128876864;
		_case_end_5128876144:;
		_match_end_5128876864:;
	}
}



inline jule::Str _130cb2be0_float_from_bits(jule::U64 _11624_bits) {
	{
		auto &_match_expr{ _11624_bits };
		if (!((32LL) == _match_expr)) { goto _case_end_5128881344; }
		_case_begin_5128881344:;
		{
			return jule::Str("f32", 3);
		}
		goto _match_end_5128881888;
		_case_end_5128881344:;
		if (!((64LL) == _match_expr)) { goto _case_end_5128885344; }
		_case_begin_5128885344:;
		{
			return jule::Str("f64", 3);
		}
		goto _match_end_5128881888;
		_case_end_5128885344:;
		_case_begin_5128884112:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_5128881888;
		_case_end_5128884112:;
		_match_end_5128881888:;
	}
}



inline jule::Bool _130cb2be0_check_bit_float(jule::Str _14124_val,jule::Int _14134_bit) {
	jule::Int _14213_err;
	std::tie(std::ignore,_14213_err) = _136fb03b0_parse_float(_14124_val,_14134_bit);
	return _14213_err == 0LLU;
}



inline jule::U64 _130cb2be0_bitsize_of_float(jule::F64 _15125_x) {
	{
		if (!(((-3.4028234663852886e+38 <= _15125_x) && (_15125_x <= 3.4028234663852886e+38)))) { goto _case_end_5128910704; }
		_case_begin_5128910704:;
		{
			return 32LL;
		}
		goto _match_end_5128908832;
		_case_end_5128910704:;
		_case_begin_5128909696:;
		{
			return 64LL;
		}
		goto _match_end_5128908832;
		_case_end_5128909696:;
		_match_end_5128908832:;
	}
}



inline jule::U64 _130cb2be0_bitsize_of_int(jule::I64 _16523_x) {
	{
		if (!(((-128LL <= _16523_x) && (_16523_x <= 127LL)))) { goto _case_end_5128914864; }
		_case_begin_5128914864:;
		{
			return 8LL;
		}
		goto _match_end_5128913120;
		_case_end_5128914864:;
		if (!(((-32768LL <= _16523_x) && (_16523_x <= 32767LL)))) { goto _case_end_5128914560; }
		_case_begin_5128914560:;
		{
			return 16LL;
		}
		goto _match_end_5128913120;
		_case_end_5128914560:;
		if (!(((-2147483648LL <= _16523_x) && (_16523_x <= 2147483647LL)))) { goto _case_end_5128915072; }
		_case_begin_5128915072:;
		{
			return 32LL;
		}
		goto _match_end_5128913120;
		_case_end_5128915072:;
		_case_begin_5128913328:;
		{
			return 64LL;
		}
		goto _match_end_5128913120;
		_case_end_5128913328:;
		_match_end_5128913120:;
	}
}



inline jule::U64 _130cb2be0_bitsize_of_uint(jule::U64 _18124_x) {
	{
		if (!((_18124_x <= 255LL))) { goto _case_end_5128922064; }
		_case_begin_5128922064:;
		{
			return 8LL;
		}
		goto _match_end_5128920320;
		_case_end_5128922064:;
		if (!((_18124_x <= 65535LL))) { goto _case_end_5128921760; }
		_case_begin_5128921760:;
		{
			return 16LL;
		}
		goto _match_end_5128920320;
		_case_end_5128921760:;
		if (!((_18124_x <= 4294967295LL))) { goto _case_end_5128922272; }
		_case_begin_5128922272:;
		{
			return 32LL;
		}
		goto _match_end_5128920320;
		_case_end_5128922272:;
		_case_begin_5128920528:;
		{
			return 64LL;
		}
		goto _match_end_5128920320;
		_case_end_5128920528:;
		_match_end_5128920320:;
	}
}



inline void _130cb2be0_init(void) {
	{
		if (!((32LL) == 64LL)) { goto _case_end_5128925328; }
		_case_begin_5128925328:;
		{
			{
				(*((&(_130cb2be0_SYS_INT))))=jule::Str("i32", 3);
				(*((&(_130cb2be0_SYS_UINT))))=jule::Str("u32", 3);
			}
		}
		goto _match_end_5128923744;
		_case_end_5128925328:;
		if (!((64LL) == 64LL)) { goto _case_end_5128925440; }
		_case_begin_5128925440:;
		{
			{
				(*((&(_130cb2be0_SYS_INT))))=jule::Str("i64", 3);
				(*((&(_130cb2be0_SYS_UINT))))=jule::Str("u64", 3);
			}
		}
		goto _match_end_5128923744;
		_case_end_5128925440:;
		_match_end_5128923744:;
	}
}



inline jule::F64 _130cde370_min_of(jule::Str _4319_k) {
	_4319_k=_130cb2be0_real_kind_of(_4319_k);
	{
		auto &_match_expr{ _4319_k };
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_5128932832; }
		_case_begin_5128932832:;
		{
			return -128LL;
		}
		goto _match_end_5128928048;
		_case_end_5128932832:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_5128933312; }
		_case_begin_5128933312:;
		{
			return -32768LL;
		}
		goto _match_end_5128928048;
		_case_end_5128933312:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_5128933424; }
		_case_begin_5128933424:;
		{
			return -2147483648LL;
		}
		goto _match_end_5128928048;
		_case_end_5128933424:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_5128933536; }
		_case_begin_5128933536:;
		{
			return jule::MIN_I64;
		}
		goto _match_end_5128928048;
		_case_end_5128933536:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_5128932160; }
		_case_begin_5128932160:;
		{
			return -3.4028234663852886e+38;
		}
		goto _match_end_5128928048;
		_case_end_5128932160:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_5128932272; }
		_case_begin_5128932272:;
		{
			return jule::MIN_F64;
		}
		goto _match_end_5128928048;
		_case_end_5128932272:;
		_case_begin_5128927008:;
		{
			return 0LL;
		}
		goto _match_end_5128928048;
		_case_end_5128927008:;
		_match_end_5128928048:;
	}
}



inline jule::F64 _130cde370_max_of(jule::Str _5819_k) {
	_5819_k=_130cb2be0_real_kind_of(_5819_k);
	{
		auto &_match_expr{ _5819_k };
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_5128941184; }
		_case_begin_5128941184:;
		{
			return 127LL;
		}
		goto _match_end_5128939680;
		_case_end_5128941184:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_5128941360; }
		_case_begin_5128941360:;
		{
			return 32767LL;
		}
		goto _match_end_5128939680;
		_case_end_5128941360:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_5128941472; }
		_case_begin_5128941472:;
		{
			return 2147483647LL;
		}
		goto _match_end_5128939680;
		_case_end_5128941472:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_5128941584; }
		_case_begin_5128941584:;
		{
			return jule::MAX_I64;
		}
		goto _match_end_5128939680;
		_case_end_5128941584:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_5128940240; }
		_case_begin_5128940240:;
		{
			return 255LL;
		}
		goto _match_end_5128939680;
		_case_end_5128940240:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_5128940352; }
		_case_begin_5128940352:;
		{
			return 65535LL;
		}
		goto _match_end_5128939680;
		_case_end_5128940352:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_5128940464; }
		_case_begin_5128940464:;
		{
			return 4294967295LL;
		}
		goto _match_end_5128939680;
		_case_end_5128940464:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_5128941744; }
		_case_begin_5128941744:;
		{
			return jule::MAX_U64;
		}
		goto _match_end_5128939680;
		_case_end_5128941744:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_5128941856; }
		_case_begin_5128941856:;
		{
			return 3.4028234663852886e+38;
		}
		goto _match_end_5128939680;
		_case_end_5128941856:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_5128941968; }
		_case_begin_5128941968:;
		{
			return jule::MAX_F64;
		}
		goto _match_end_5128939680;
		_case_end_5128941968:;
		_case_begin_5128939904:;
		{
			return 0LL;
		}
		goto _match_end_5128939680;
		_case_end_5128939904:;
		_match_end_5128939680:;
	}
}



inline jule::Bool _130d2a0a0_is_i8_compatible(jule::Str _629_k) {
	_629_k=_130cb2be0_real_kind_of(_629_k);
	return _629_k == jule::Str("i8", 2);
}



inline jule::Bool _130d2a0a0_is_i16_compatible(jule::Str _1230_k) {
	_1230_k=_130cb2be0_real_kind_of(_1230_k);
	return ((_1230_k == jule::Str("i8", 2)) || (_1230_k == jule::Str("i16", 3))) || (_1230_k == jule::Str("u8", 2));
}



inline jule::Bool _130d2a0a0_is_i32_compatible(jule::Str _2230_k) {
	_2230_k=_130cb2be0_real_kind_of(_2230_k);
	return ((((_2230_k == jule::Str("i8", 2)) || (_2230_k == jule::Str("i16", 3))) || (_2230_k == jule::Str("i32", 3))) || (_2230_k == jule::Str("u8", 2))) || (_2230_k == jule::Str("u16", 3));
}



inline jule::Bool _130d2a0a0_is_i64_compatible(jule::Str _3430_k) {
	_3430_k=_130cb2be0_real_kind_of(_3430_k);
	return ((((((_3430_k == jule::Str("i8", 2)) || (_3430_k == jule::Str("i16", 3))) || (_3430_k == jule::Str("i32", 3))) || (_3430_k == jule::Str("i64", 3))) || (_3430_k == jule::Str("u8", 2))) || (_3430_k == jule::Str("u16", 3))) || (_3430_k == jule::Str("u32", 3));
}



inline jule::Bool _130d2a0a0_is_u8_compatible(jule::Str _4829_k) {
	_4829_k=_130cb2be0_real_kind_of(_4829_k);
	return _4829_k == jule::Str("u8", 2);
}



inline jule::Bool _130d2a0a0_is_u16_compatible(jule::Str _5430_k) {
	_5430_k=_130cb2be0_real_kind_of(_5430_k);
	return (_5430_k == jule::Str("u8", 2)) || (_5430_k == jule::Str("u16", 3));
}



inline jule::Bool _130d2a0a0_is_u32_compatible(jule::Str _6030_k) {
	_6030_k=_130cb2be0_real_kind_of(_6030_k);
	return ((_6030_k == jule::Str("u8", 2)) || (_6030_k == jule::Str("u16", 3))) || (_6030_k == jule::Str("u32", 3));
}



inline jule::Bool _130d2a0a0_is_u64_compatible(jule::Str _7030_k) {
	_7030_k=_130cb2be0_real_kind_of(_7030_k);
	return (((_7030_k == jule::Str("u8", 2)) || (_7030_k == jule::Str("u16", 3))) || (_7030_k == jule::Str("u32", 3))) || (_7030_k == jule::Str("u64", 3));
}



inline jule::Bool _130d2a0a0_is_f32_compatible(jule::Str _8130_k) {
	_8130_k=_130cb2be0_real_kind_of(_8130_k);
	return ((((((((_8130_k == jule::Str("f32", 3)) || (_8130_k == jule::Str("i8", 2))) || (_8130_k == jule::Str("i16", 3))) || (_8130_k == jule::Str("i32", 3))) || (_8130_k == jule::Str("i64", 3))) || (_8130_k == jule::Str("u8", 2))) || (_8130_k == jule::Str("u16", 3))) || (_8130_k == jule::Str("u32", 3))) || (_8130_k == jule::Str("u64", 3));
}



inline jule::Bool _130d2a0a0_is_f64_compatible(jule::Str _9730_k) {
	_9730_k=_130cb2be0_real_kind_of(_9730_k);
	return (((((((((_9730_k == jule::Str("f64", 3)) || (_9730_k == jule::Str("f32", 3))) || (_9730_k == jule::Str("i8", 2))) || (_9730_k == jule::Str("i16", 3))) || (_9730_k == jule::Str("i32", 3))) || (_9730_k == jule::Str("i64", 3))) || (_9730_k == jule::Str("u8", 2))) || (_9730_k == jule::Str("u16", 3))) || (_9730_k == jule::Str("u32", 3))) || (_9730_k == jule::Str("u64", 3));
}



inline jule::Bool _130d2a0a0_types_are_compatible(jule::Str _11633_k1,jule::Str _11642_k2) {
	_11633_k1=_130cb2be0_real_kind_of(_11633_k1);
	{
		auto &_match_expr{ _11633_k1 };
		if (!((jule::Str("any", 3)) == _match_expr)) { goto _case_end_5128991520; }
		_case_begin_5128991520:;
		{
			return true;
		}
		goto _match_end_5128988928;
		_case_end_5128991520:;
		if (!((jule::Str("i8", 2)) == _match_expr)) { goto _case_end_5128991024; }
		_case_begin_5128991024:;
		{
			return _130d2a0a0_is_i8_compatible(_11642_k2);
		}
		goto _match_end_5128988928;
		_case_end_5128991024:;
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_5128991136; }
		_case_begin_5128991136:;
		{
			return _130d2a0a0_is_i16_compatible(_11642_k2);
		}
		goto _match_end_5128988928;
		_case_end_5128991136:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_5128991248; }
		_case_begin_5128991248:;
		{
			return _130d2a0a0_is_i32_compatible(_11642_k2);
		}
		goto _match_end_5128988928;
		_case_end_5128991248:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_5128992096; }
		_case_begin_5128992096:;
		{
			return _130d2a0a0_is_i64_compatible(_11642_k2);
		}
		goto _match_end_5128988928;
		_case_end_5128992096:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_5128992208; }
		_case_begin_5128992208:;
		{
			return _130d2a0a0_is_u8_compatible(_11642_k2);
		}
		goto _match_end_5128988928;
		_case_end_5128992208:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_5128992320; }
		_case_begin_5128992320:;
		{
			return _130d2a0a0_is_u16_compatible(_11642_k2);
		}
		goto _match_end_5128988928;
		_case_end_5128992320:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_5128992432; }
		_case_begin_5128992432:;
		{
			return _130d2a0a0_is_u32_compatible(_11642_k2);
		}
		goto _match_end_5128988928;
		_case_end_5128992432:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_5128992640; }
		_case_begin_5128992640:;
		{
			return _130d2a0a0_is_u64_compatible(_11642_k2);
		}
		goto _match_end_5128988928;
		_case_end_5128992640:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_5128992752; }
		_case_begin_5128992752:;
		{
			return _130d2a0a0_is_f32_compatible(_11642_k2);
		}
		goto _match_end_5128988928;
		_case_end_5128992752:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_5128992864; }
		_case_begin_5128992864:;
		{
			return _130d2a0a0_is_f64_compatible(_11642_k2);
		}
		goto _match_end_5128988928;
		_case_end_5128992864:;
		if (!((jule::Str("bool", 4)) == _match_expr)) { goto _case_end_5128992976; }
		_case_begin_5128992976:;
		{
			return _11642_k2 == jule::Str("bool", 4);
		}
		goto _match_end_5128988928;
		_case_end_5128992976:;
		if (!((jule::Str("str", 3)) == _match_expr)) { goto _case_end_5128993088; }
		_case_begin_5128993088:;
		{
			return _11642_k2 == jule::Str("str", 3);
		}
		goto _match_end_5128988928;
		_case_end_5128993088:;
		_case_begin_5128990624:;
		{
			return false;
		}
		goto _match_end_5128988928;
		_case_end_5128990624:;
		_match_end_5128988928:;
	}
}



inline jule::Bool _130d2a0a0_is_i16_greater(jule::Str _13727_k) {
	_13727_k=_130cb2be0_real_kind_of(_13727_k);
	return _13727_k == jule::Str("u8", 2);
}



inline jule::Bool _130d2a0a0_is_i32_greater(jule::Str _14327_k) {
	_14327_k=_130cb2be0_real_kind_of(_14327_k);
	return (_14327_k == jule::Str("i8", 2)) || (_14327_k == jule::Str("i16", 3));
}



inline jule::Bool _130d2a0a0_is_i64_greater(jule::Str _14927_k) {
	_14927_k=_130cb2be0_real_kind_of(_14927_k);
	return ((_14927_k == jule::Str("i8", 2)) || (_14927_k == jule::Str("i16", 3))) || (_14927_k == jule::Str("i32", 3));
}



inline jule::Bool _130d2a0a0_is_u8_greater(jule::Str _15926_k) {
	_15926_k=_130cb2be0_real_kind_of(_15926_k);
	return _15926_k == jule::Str("i8", 2);
}



inline jule::Bool _130d2a0a0_is_u16_greater(jule::Str _16527_k) {
	_16527_k=_130cb2be0_real_kind_of(_16527_k);
	return ((_16527_k == jule::Str("u8", 2)) || (_16527_k == jule::Str("i8", 2))) || (_16527_k == jule::Str("i16", 3));
}



inline jule::Bool _130d2a0a0_is_u32_greater(jule::Str _17527_k) {
	_17527_k=_130cb2be0_real_kind_of(_17527_k);
	return ((((_17527_k == jule::Str("u8", 2)) || (_17527_k == jule::Str("u16", 3))) || (_17527_k == jule::Str("i8", 2))) || (_17527_k == jule::Str("i16", 3))) || (_17527_k == jule::Str("i32", 3));
}



inline jule::Bool _130d2a0a0_is_u64_greater(jule::Str _18727_k) {
	_18727_k=_130cb2be0_real_kind_of(_18727_k);
	return ((((((_18727_k == jule::Str("u8", 2)) || (_18727_k == jule::Str("u16", 3))) || (_18727_k == jule::Str("u32", 3))) || (_18727_k == jule::Str("i8", 2))) || (_18727_k == jule::Str("i16", 3))) || (_18727_k == jule::Str("i32", 3))) || (_18727_k == jule::Str("i64", 3));
}



inline jule::Bool _130d2a0a0_is_f32_greater(jule::Str _20123_k) {
	return _20123_k != jule::Str("f64", 3);
}



inline jule::Bool _130d2a0a0_is_f64_greater(jule::Str _20323_k) {
	return true;
}



inline jule::Bool _130d2a0a0_is_greater(jule::Str _20623_k1,jule::Str _20632_k2) {
	_20623_k1=_130cb2be0_real_kind_of(_20623_k1);
	{
		auto &_match_expr{ _20623_k1 };
		if (!((jule::Str("i16", 3)) == _match_expr)) { goto _case_end_5129032560; }
		_case_begin_5129032560:;
		{
			return _130d2a0a0_is_i16_greater(_20632_k2);
		}
		goto _match_end_5129030496;
		_case_end_5129032560:;
		if (!((jule::Str("i32", 3)) == _match_expr)) { goto _case_end_5129032032; }
		_case_begin_5129032032:;
		{
			return _130d2a0a0_is_i32_greater(_20632_k2);
		}
		goto _match_end_5129030496;
		_case_end_5129032032:;
		if (!((jule::Str("i64", 3)) == _match_expr)) { goto _case_end_5129032144; }
		_case_begin_5129032144:;
		{
			return _130d2a0a0_is_i64_greater(_20632_k2);
		}
		goto _match_end_5129030496;
		_case_end_5129032144:;
		if (!((jule::Str("u16", 3)) == _match_expr)) { goto _case_end_5129032256; }
		_case_begin_5129032256:;
		{
			return _130d2a0a0_is_u16_greater(_20632_k2);
		}
		goto _match_end_5129030496;
		_case_end_5129032256:;
		if (!((jule::Str("u8", 2)) == _match_expr)) { goto _case_end_5129033136; }
		_case_begin_5129033136:;
		{
			return _130d2a0a0_is_u8_greater(_20632_k2);
		}
		goto _match_end_5129030496;
		_case_end_5129033136:;
		if (!((jule::Str("u32", 3)) == _match_expr)) { goto _case_end_5129033248; }
		_case_begin_5129033248:;
		{
			return _130d2a0a0_is_u32_greater(_20632_k2);
		}
		goto _match_end_5129030496;
		_case_end_5129033248:;
		if (!((jule::Str("u64", 3)) == _match_expr)) { goto _case_end_5129033360; }
		_case_begin_5129033360:;
		{
			return _130d2a0a0_is_u64_greater(_20632_k2);
		}
		goto _match_end_5129030496;
		_case_end_5129033360:;
		if (!((jule::Str("f32", 3)) == _match_expr)) { goto _case_end_5129033472; }
		_case_begin_5129033472:;
		{
			return _130d2a0a0_is_f32_greater(_20632_k2);
		}
		goto _match_end_5129030496;
		_case_end_5129033472:;
		if (!((jule::Str("f64", 3)) == _match_expr)) { goto _case_end_5129033680; }
		_case_begin_5129033680:;
		{
			return _130d2a0a0_is_f64_greater(_20632_k2);
		}
		goto _match_end_5129030496;
		_case_end_5129033680:;
		if (!((jule::Str("any", 3)) == _match_expr)) { goto _case_end_5129033792; }
		_case_begin_5129033792:;
		{
			return true;
		}
		goto _match_end_5129030496;
		_case_end_5129033792:;
		_case_begin_5129031632:;
		{
			return false;
		}
		goto _match_end_5129030496;
		_case_end_5129031632:;
		_match_end_5129030496:;
	}
}



inline jule::Bool _130d7f700_is_sig_int(jule::Str _2723_k) {
	_2723_k=_130cb2be0_real_kind_of(_2723_k);
	return (((_2723_k == jule::Str("i8", 2)) || (_2723_k == jule::Str("i16", 3))) || (_2723_k == jule::Str("i32", 3))) || (_2723_k == jule::Str("i64", 3));
}



inline jule::Bool _130d7f700_is_unsig_int(jule::Str _3825_k) {
	_3825_k=_130cb2be0_real_kind_of(_3825_k);
	return (((_3825_k == jule::Str("u8", 2)) || (_3825_k == jule::Str("u16", 3))) || (_3825_k == jule::Str("u32", 3))) || (_3825_k == jule::Str("u64", 3));
}



inline jule::Bool _130d7f700_is_int(jule::Str _4915_k) {
	return _130d7f700_is_sig_int(_4915_k) || _130d7f700_is_unsig_int(_4915_k);
}



inline jule::Bool _130d7f700_is_float(jule::Str _5417_k) {
	return (_5417_k == jule::Str("f32", 3)) || (_5417_k == jule::Str("f64", 3));
}



inline jule::Bool _130d7f700_is_num(jule::Str _5915_k) {
	return _130d7f700_is_int(_5915_k) || _130d7f700_is_float(_5915_k);
}



inline std::tuple<jule::Str,jule::Bool> _130df9c40_is_byte_lit(jule::Str _1524_kind) {
	if (_1524_kind.len() < 3LL) {
		return std::make_tuple(jule::Str("", 0),false);
	}
	_1524_kind=_1524_kind.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(_1524_kind.len() - 1LL));
	jule::Bool _2113_is_byte = false;
	{
		if (!(((_1524_kind.len() == 1LL) && (_1524_kind[static_cast<jule::Int>(0LL)] <= 255LL)))) { goto _case_end_5129077872; }
		_case_begin_5129077872:;
		{
			_2113_is_byte=true;
		}
		goto _match_end_5129077424;
		_case_end_5129077872:;
		if (!(((_1524_kind[static_cast<jule::Int>(0LL)] == '\\') && (_1524_kind[static_cast<jule::Int>(1LL)] == 'x')))) { goto _case_end_5129077984; }
		_case_begin_5129077984:;
		{
			_2113_is_byte=true;
		}
		goto _match_end_5129077424;
		_case_end_5129077984:;
		if (!((((_1524_kind[static_cast<jule::Int>(0LL)] == '\\') && (_1524_kind[static_cast<jule::Int>(1LL)] >= '0')) && (_1524_kind[static_cast<jule::Int>(1LL)] <= '7')))) { goto _case_end_5129078096; }
		_case_begin_5129078096:;
		{
			_2113_is_byte=true;
		}
		goto _match_end_5129077424;
		_case_end_5129078096:;
		_match_end_5129077424:;
	}
	return std::make_tuple(_1524_kind,_2113_is_byte);
}



inline jule::I32 _130df9c40_to_rune(jule::Slice<jule::U8> _4016_bytes) {
	if (_4016_bytes.len() == 0LL) {
		return 0LL;
	}
	jule::I32 _4513_r = 0LL;
	if ((_4016_bytes[static_cast<jule::Int>(0LL)] == '\\') && (_4016_bytes.len() > 1LL)) {
		jule::Int _4717_i = 0LL;
		_4513_r=static_cast<jule::I32>(_130df9c40_rune_from_esq_seq(_4016_bytes,_4717_i));
	} else {
		std::tie(_4513_r,std::ignore) = _1275d1920_decode_rune(_4016_bytes);
	}
	return _4513_r;
}



inline jule::Str _130df9c40_to_raw_str(jule::Slice<jule::U8> _5919_bytes) {
	return static_cast<jule::Str>(_5919_bytes);
}



inline jule::Str _130df9c40_to_str(jule::Slice<jule::U8> _6415_bytes) {
	if (_6415_bytes.len() == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _6913_s = jule::Str("", 0);
	jule::Int _7013_i = 0LL;
	_iter_begin_5129104000:;
	if (!(_7013_i < _6415_bytes.len())) { goto _iter_end_5129104000; }
	{
		jule::U8 _7213_b = _6415_bytes[static_cast<jule::Int>(_7013_i)];
		if (_7213_b == '\\') {
			_6913_s+=_130df9c40_str_esq_seq(_6415_bytes,_7013_i);
		} else {
			jule::I32 _7618_r;
			jule::Int _7621_size;
			std::tie(_7618_r,_7621_size) = _1275d1920_decode_rune(_6415_bytes.slice(static_cast<jule::Int>(_7013_i)));
			_7013_i+=_7621_size;
			_6913_s+=static_cast<jule::Str>(_7618_r);
		}
	}
	_iter_next_5129104000:;
	goto _iter_begin_5129104000;
	_iter_end_5129104000:;
	return _6913_s;
}



inline std::tuple<jule::U8,jule::Bool> _130df9c40_try_btoa_common_esq(jule::Slice<jule::U8> _8424_bytes) {
	jule::Bool _8452_ok = jule::Bool();
	jule::U8 _8441_seq = jule::U8();
	if ((_8424_bytes.len() < 2LL) || (_8424_bytes[static_cast<jule::Int>(0LL)] != '\\')) {
		return std::make_tuple(_8441_seq,_8452_ok);
	}
	{
		auto &_match_expr{ _8424_bytes[static_cast<jule::Int>(1LL)] };
		if (!(('\\') == _match_expr)) { goto _case_end_5129118336; }
		_case_begin_5129118336:;
		{
			_8441_seq='\\';
		}
		goto _match_end_5129115184;
		_case_end_5129118336:;
		if (!(('\'') == _match_expr)) { goto _case_end_5129118448; }
		_case_begin_5129118448:;
		{
			_8441_seq='\'';
		}
		goto _match_end_5129115184;
		_case_end_5129118448:;
		if (!(('\"') == _match_expr)) { goto _case_end_5129118560; }
		_case_begin_5129118560:;
		{
			_8441_seq='\"';
		}
		goto _match_end_5129115184;
		_case_end_5129118560:;
		if (!(('a') == _match_expr)) { goto _case_end_5129118672; }
		_case_begin_5129118672:;
		{
			_8441_seq='\a';
		}
		goto _match_end_5129115184;
		_case_end_5129118672:;
		if (!(('b') == _match_expr)) { goto _case_end_5129118784; }
		_case_begin_5129118784:;
		{
			_8441_seq='\b';
		}
		goto _match_end_5129115184;
		_case_end_5129118784:;
		if (!(('f') == _match_expr)) { goto _case_end_5129118896; }
		_case_begin_5129118896:;
		{
			_8441_seq='\f';
		}
		goto _match_end_5129115184;
		_case_end_5129118896:;
		if (!(('n') == _match_expr)) { goto _case_end_5129119008; }
		_case_begin_5129119008:;
		{
			_8441_seq='\n';
		}
		goto _match_end_5129115184;
		_case_end_5129119008:;
		if (!(('r') == _match_expr)) { goto _case_end_5129119120; }
		_case_begin_5129119120:;
		{
			_8441_seq='\r';
		}
		goto _match_end_5129115184;
		_case_end_5129119120:;
		if (!(('t') == _match_expr)) { goto _case_end_5129119232; }
		_case_begin_5129119232:;
		{
			_8441_seq='\t';
		}
		goto _match_end_5129115184;
		_case_end_5129119232:;
		if (!(('v') == _match_expr)) { goto _case_end_5129119344; }
		_case_begin_5129119344:;
		{
			_8441_seq='\v';
		}
		goto _match_end_5129115184;
		_case_end_5129119344:;
		_match_end_5129115184:;
	}
	_8452_ok=_8441_seq != 0LL;
	return std::make_tuple(_8441_seq,_8452_ok);
}



inline jule::I32 _130df9c40_rune_from_esq_seq(jule::Slice<jule::U8> _10622_bytes,jule::Int& _10642_i) {
	jule::U8 _10710_b;
	jule::Bool _10713_ok;
	std::tie(_10710_b,_10713_ok) = _130df9c40_try_btoa_common_esq(_10622_bytes.slice(static_cast<jule::Int>(_10642_i)));
	(_10642_i)++;
	if (_10713_ok) {
		(_10642_i)++;
		return static_cast<jule::I32>(_10710_b);
	}
	{
		auto &_match_expr{ _10622_bytes[static_cast<jule::Int>(_10642_i)] };
		if (!(('u') == _match_expr)) { goto _case_end_5129140480; }
		_case_begin_5129140480:;
		{
			
			jule::U64 _11714_rc;
			std::tie(_11714_rc,std::ignore) = _126edcdf0_parse_uint(static_cast<jule::Str>(_10622_bytes.slice(static_cast<jule::Int>(_10642_i + 1LL),static_cast<jule::Int>(_10642_i + 5LL))),16LL,64LL);
			_10642_i+=5LL;
			jule::I32 _11913_r = static_cast<jule::I32>(_11714_rc);
			return _11913_r;
		}
		goto _match_end_5129132176;
		_case_end_5129140480:;
		if (!(('U') == _match_expr)) { goto _case_end_5129137952; }
		_case_begin_5129137952:;
		{
			
			jule::U64 _12414_rc;
			std::tie(_12414_rc,std::ignore) = _126edcdf0_parse_uint(static_cast<jule::Str>(_10622_bytes.slice(static_cast<jule::Int>(_10642_i + 1LL),static_cast<jule::Int>(_10642_i + 9LL))),16LL,64LL);
			_10642_i+=9LL;
			jule::I32 _12613_r = static_cast<jule::I32>(_12414_rc);
			return _12613_r;
		}
		goto _match_end_5129132176;
		_case_end_5129137952:;
		if (!(('x') == _match_expr)) { goto _case_end_5129142448; }
		_case_begin_5129142448:;
		{
			
			jule::Slice<jule::U8> _13113_seq = _10622_bytes.slice(static_cast<jule::Int>(_10642_i + 1LL),static_cast<jule::Int>(_10642_i + 3LL));
			_10642_i+=3LL;
			jule::U64 _13314_b;
			std::tie(_13314_b,std::ignore) = _126edcdf0_parse_uint(static_cast<jule::Str>(_13113_seq),16LL,64LL);
			return static_cast<jule::I32>(_13314_b);
		}
		goto _match_end_5129132176;
		_case_end_5129142448:;
		_case_begin_5129133120:;
		{
			
			jule::Slice<jule::U8> _13813_seq = _10622_bytes.slice(static_cast<jule::Int>(_10642_i),static_cast<jule::Int>(_10642_i + 3LL));
			_10642_i+=3LL;
			jule::U64 _14014_b;
			std::tie(_14014_b,std::ignore) = _126edcdf0_parse_uint(static_cast<jule::Str>(_13813_seq.slice(static_cast<jule::Int>(1LL))),8LL,64LL);
			return static_cast<jule::I32>(_14014_b);
		}
		goto _match_end_5129132176;
		_case_end_5129133120:;
		_match_end_5129132176:;
	}
}



inline jule::Str _130df9c40_str_esq_seq(jule::Slice<jule::U8> _14516_bytes,jule::Int& _14536_i) {
	jule::I32 _1469_r = _130df9c40_rune_from_esq_seq(_14516_bytes,_14536_i);
	if (_1469_r <= 255LL) {
		return static_cast<jule::Str>(_1469_r);
	}
	return _130df9c40_to_str(static_cast<jule::Slice<jule::U8>>(static_cast<jule::Str>(_1469_r)));
}



inline jule::Ref<_127ff3480_ReferenceStack> _127ff3480_new_reference_stack(void) {
	return jule::new_struct<_127ff3480_ReferenceStack>(new( std::nothrow ) _127ff3480_ReferenceStack());
}



inline jule::Str _127ff3480_str_repeat(jule::Str _9115_sub,jule::Int _9129_n) {
	if (_9129_n == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _9613_s = jule::Str("", 0);
	_iter_begin_5131533152:;
	if (!(_9129_n > 0LL)) { goto _iter_end_5131533152; }
	{
		_9613_s+=_9115_sub;
	}
	_iter_next_5131533152:;
	(_9129_n)--;
	goto _iter_begin_5131533152;
	_iter_end_5131533152:;
	return _9613_s;
}



inline jule::Str _127ff3480_build_doc(jule::Ref<_1275d7180_CommentGroup> _10318_cg) {
	if ((!(jule::real(_10318_cg)))) {
		return jule::Str("", 0);
	}
	jule::Str _10813_doc = jule::Str("", 0);
	{
		auto &__julec_range_expr = _10318_cg->_field_comments;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1275d7180_Comment> _127ff3480_c = *__julec_range_begin;
			_iter_begin_5131538208:;
			{
				_10813_doc+=_127ff3480_c->_field_text;
				_10813_doc+=jule::Str(" ", 1);
			}
			_iter_next_5131538208:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127ff3480_c = *__julec_range_begin; goto _iter_begin_5131538208; }
			_iter_end_5131538208:;
		}
	}
	return _10813_doc;
}



inline jule::Ref<_1304dc9b0_TypeSymbol> _127ff3480_build_type(jule::Ref<_1275d7180_TypeDecl> _11619_t) {
	if ((!(jule::real(_11619_t)))) {
		return jule::new_ref<_1304dc9b0_TypeSymbol>();
	}
	return jule::new_struct<_1304dc9b0_TypeSymbol>(new( std::nothrow ) _1304dc9b0_TypeSymbol(_11619_t,jule::Ref<_1304dc9b0_TypeKind>()));
}



inline jule::Ref<_13064b610_Value> _127ff3480_build_expr(jule::Ref<_1275d7180_Expr> _12519_expr) {
	if ((!(jule::real(_12519_expr)))) {
		return jule::new_ref<_13064b610_Value>();
	}
	return jule::new_struct<_13064b610_Value>(new( std::nothrow ) _13064b610_Value(_12519_expr,jule::Ref<_13064b610_Data>()));
}



inline jule::Ref<_1304dc9b0_TypeAlias> _127ff3480_build_type_alias(jule::Ref<_1275d7180_TypeAliasDecl> _13525_decl) {
	return jule::new_struct<_1304dc9b0_TypeAlias>(new( std::nothrow ) _1304dc9b0_TypeAlias(_13525_decl->_field_scope,_13525_decl->_field_public,_13525_decl->_field_cpp_linked,jule::Bool(),_13525_decl->_field_token,_13525_decl->_field_ident,_127ff3480_build_type(_13525_decl->_field_kind),_127ff3480_build_doc(_13525_decl->_field_doc_comments),jule::Slice<jule::Any>()));
}



inline jule::Ref<_127b2e960_Field> _127ff3480_build_field(jule::Ref<_1275d7180_FieldDecl> _14720_decl) {
	return jule::new_struct<_127b2e960_Field>(new( std::nothrow ) _127b2e960_Field(jule::Ref<_127b2e960_Struct>(),_14720_decl->_field_token,_14720_decl->_field_public,_14720_decl->_field_mutable,_14720_decl->_field_ident,_127ff3480_build_type(_14720_decl->_field_kind)));
}



inline jule::Slice<jule::Ref<_127b2e960_Field>> _127ff3480_build_fields(jule::Slice<jule::Ref<_1275d7180_FieldDecl>> _15721_decls) {
	jule::Slice<jule::Ref<_127b2e960_Field>> _15813_fields = jule::Slice<jule::Ref<_127b2e960_Field>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_15721_decls.len())));
	{
		auto &__julec_range_expr = _15721_decls;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _127ff3480_i = 0;
			jule::Ref<_1275d7180_FieldDecl> _127ff3480_decl = *__julec_range_begin;
			_iter_begin_5131557488:;
			{
				_15813_fields[static_cast<jule::Int>(_127ff3480_i)]=_127ff3480_build_field(_127ff3480_decl);
			}
			_iter_next_5131557488:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_127ff3480_i; _127ff3480_decl = *__julec_range_begin; goto _iter_begin_5131557488; }
			_iter_end_5131557488:;
		}
	}
	return _15813_fields;
}



inline jule::Ref<_127b2e960_Struct> _127ff3480_build_struct(jule::Ref<_1275d7180_StructDecl> _16521_decl) {
	return jule::new_struct<_127b2e960_Struct>(new( std::nothrow ) _127b2e960_Struct(jule::Ref<_1300a20d0_Sema>(),jule::Slice<jule::Ref<_127b2e960_Struct>>(),jule::Slice<jule::Ref<_127b2e960_Struct>>(),_16521_decl->_field_token,_16521_decl->_field_ident,_127ff3480_build_fields(_16521_decl->_field_fields),_127ab7fa0_Vector_11(),_16521_decl->_field_public,_16521_decl->_field_cpp_linked,_16521_decl->_field_directives,_127ff3480_build_doc(_16521_decl->_field_doc_comments),_16521_decl->_field_generics,jule::Slice<jule::Ref<_130099320_Trait>>(),_127ff3480_new_reference_stack(),jule::Slice<jule::Ref<_127b2e960_StructIns>>()));
}



inline jule::Ref<_127ed52e0_Param> _127ff3480_build_param(jule::Ref<_1275d7180_ParamDecl> _17920_decl) {
	return jule::new_struct<_127ed52e0_Param>(new( std::nothrow ) _127ed52e0_Param(_17920_decl->_field_token,_17920_decl->_field_mutable,_17920_decl->_field_variadic,_17920_decl->_field_reference,_127ff3480_build_type(_17920_decl->_field_kind),_17920_decl->_field_ident));
}



inline jule::Slice<jule::Ref<_127ed52e0_Param>> _127ff3480_build_params(jule::Slice<jule::Ref<_1275d7180_ParamDecl>> _19021_decls) {
	jule::Slice<jule::Ref<_127ed52e0_Param>> _19113_params = jule::Slice<jule::Ref<_127ed52e0_Param>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_19021_decls.len())));
	{
		auto &__julec_range_expr = _19021_decls;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _127ff3480_i = 0;
			jule::Ref<_1275d7180_ParamDecl> _127ff3480_decl = *__julec_range_begin;
			_iter_begin_5131572656:;
			{
				_19113_params[static_cast<jule::Int>(_127ff3480_i)]=_127ff3480_build_param(_127ff3480_decl);
			}
			_iter_next_5131572656:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_127ff3480_i; _127ff3480_decl = *__julec_range_begin; goto _iter_begin_5131572656; }
			_iter_end_5131572656:;
		}
	}
	return _19113_params;
}



inline jule::Ref<_127ed52e0_RetType> _127ff3480_build_ret_type(jule::Ref<_1275d7180_RetTypeDecl> _19823_decl) {
	if ((_19823_decl->_field_idents == nullptr) && (!(jule::real(_19823_decl->_field_kind)))) {
		return jule::new_ref<_127ed52e0_RetType>();
	}
	return jule::new_struct<_127ed52e0_RetType>(new( std::nothrow ) _127ed52e0_RetType(_127ff3480_build_type(_19823_decl->_field_kind),_19823_decl->_field_idents));
}



inline jule::Ref<_127ed52e0_Fn> _127ff3480_build_fn(jule::Ref<_1275d7180_FnDecl> _20817_decl) {
	return jule::new_struct<_127ed52e0_Fn>(new( std::nothrow ) _127ed52e0_Fn(jule::Ref<_1300a20d0_Sema>(),_20817_decl->_field_token,_20817_decl->_field_global,_20817_decl->_field_unsafety,_20817_decl->_field_public,_20817_decl->_field_cpp_linked,_20817_decl->_field_statically,_20817_decl->_field_ident,_20817_decl->_field_directives,_127ff3480_build_doc(_20817_decl->_field_doc_comments),_20817_decl->_field_scope,_20817_decl->_field_generics,_127ff3480_build_ret_type(_20817_decl->_field_result),_127ff3480_build_params(_20817_decl->_field_params),jule::Ref<_127b2e960_Struct>(),_127ff3480_new_reference_stack(),jule::Slice<jule::Ref<_127ed52e0_FnIns>>()));
}



inline jule::Slice<jule::Ref<_127ed52e0_Fn>> _127ff3480_build_methods(jule::Slice<jule::Ref<_1275d7180_FnDecl>> _22722_decls) {
	jule::Slice<jule::Ref<_127ed52e0_Fn>> _22813_methods = jule::Slice<jule::Ref<_127ed52e0_Fn>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_22722_decls.len())));
	{
		auto &__julec_range_expr = _22722_decls;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _127ff3480_i = 0;
			jule::Ref<_1275d7180_FnDecl> _127ff3480_decl = *__julec_range_begin;
			_iter_begin_5131592032:;
			{
				_22813_methods[static_cast<jule::Int>(_127ff3480_i)]=_127ff3480_build_fn(_127ff3480_decl);
			}
			_iter_next_5131592032:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_127ff3480_i; _127ff3480_decl = *__julec_range_begin; goto _iter_begin_5131592032; }
			_iter_end_5131592032:;
		}
	}
	return _22813_methods;
}



inline jule::Ref<_130099320_Trait> _127ff3480_build_trait(jule::Ref<_1275d7180_TraitDecl> _23520_decl) {
	return jule::new_struct<_130099320_Trait>(new( std::nothrow ) _130099320_Trait(_23520_decl->_field_token,_23520_decl->_field_ident,_23520_decl->_field_public,_127ff3480_build_doc(_23520_decl->_field_doc_comments),_127ff3480_build_methods(_23520_decl->_field_methods),jule::Slice<jule::Ref<_127b2e960_Struct>>()));
}



inline jule::Ref<_13009ed30_EnumItem> _127ff3480_build_enum_item(jule::Ref<_1275d7180_EnumItemDecl> _24524_decl) {
	return jule::new_struct<_13009ed30_EnumItem>(new( std::nothrow ) _13009ed30_EnumItem(_24524_decl->_field_token,_24524_decl->_field_ident,_127ff3480_build_expr(_24524_decl->_field_expr)));
}



inline jule::Slice<jule::Ref<_13009ed30_EnumItem>> _127ff3480_build_enum_items(jule::Slice<jule::Ref<_1275d7180_EnumItemDecl>> _25325_decls) {
	jule::Slice<jule::Ref<_13009ed30_EnumItem>> _25413_items = jule::Slice<jule::Ref<_13009ed30_EnumItem>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_25325_decls.len())));
	{
		auto &__julec_range_expr = _25325_decls;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _127ff3480_i = 0;
			jule::Ref<_1275d7180_EnumItemDecl> _127ff3480_decl = *__julec_range_begin;
			_iter_begin_5131605648:;
			{
				_25413_items[static_cast<jule::Int>(_127ff3480_i)]=_127ff3480_build_enum_item(_127ff3480_decl);
			}
			_iter_next_5131605648:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_127ff3480_i; _127ff3480_decl = *__julec_range_begin; goto _iter_begin_5131605648; }
			_iter_end_5131605648:;
		}
	}
	return _25413_items;
}



inline jule::Ref<_13009ed30_Enum> _127ff3480_build_enum(jule::Ref<_1275d7180_EnumDecl> _26119_decl) {
	return jule::new_struct<_13009ed30_Enum>(new( std::nothrow ) _13009ed30_Enum(_26119_decl->_field_token,_26119_decl->_field_public,_26119_decl->_field_ident,_127ff3480_build_type(_26119_decl->_field_kind),_127ff3480_build_enum_items(_26119_decl->_field_items),_127ff3480_build_doc(_26119_decl->_field_doc_comments)));
}



inline jule::Ref<_1303533b0_Var> _127ff3480_build_var(jule::Ref<_1275d7180_VarDecl> _27218_decl) {
	return jule::new_struct<_1303533b0_Var>(new( std::nothrow ) _1303533b0_Var(_27218_decl->_field_scope,_27218_decl->_field_token,_27218_decl->_field_ident,_27218_decl->_field_cpp_linked,_27218_decl->_field_constant,_27218_decl->_field_mutable,_27218_decl->_field_public,jule::Bool(),_27218_decl->_field_statically,_27218_decl->_field_reference,_127ff3480_build_doc(_27218_decl->_field_doc_comments),_127ff3480_build_type(_27218_decl->_field_kind),_127ff3480_build_expr(_27218_decl->_field_expr),_127ff3480_new_reference_stack(),jule::Slice<jule::Ref<_1303533b0_Var>>()));
}



inline jule::Ref<_12791ab70_Impl> _127ff3480_build_impl(jule::Ref<_1275d7180_Impl> _29019_decl) {
	return jule::new_struct<_12791ab70_Impl>(new( std::nothrow ) _12791ab70_Impl(_29019_decl->_field_base,_29019_decl->_field_dest,_127ff3480_build_methods(_29019_decl->_field_methods)));
}



inline jule::Ref<_1300a11b0_ScopeChecker> _1300a11b0_new_scope_checker_base(jule::Ref<_1300a20d0_Sema> _3831_s,jule::Ref<_127ed52e0_FnIns> _3845_owner) {
	return jule::new_struct<_1300a11b0_ScopeChecker>(new( std::nothrow ) _1300a11b0_ScopeChecker(_3831_s,_3845_owner,jule::Ref<_1300a11b0_ScopeChecker>(),jule::Int(),jule::new_struct<_13032dc50_SymbolTable>(new( std::nothrow ) _13032dc50_SymbolTable()),jule::Ref<_1300a11b0_Scope>(),jule::Ref<_1275d7180_ScopeTree>(),jule::Uintptr(),jule::Uintptr(),jule::Ref<jule::Slice<jule::Ref<_1300a11b0_ScopeLabel>>>(),jule::Ref<jule::Slice<jule::Ref<_1300a11b0_ScopeGoto>>>(),jule::Int()));
}



inline jule::Ref<_1300a11b0_ScopeChecker> _1300a11b0_new_scope_checker(jule::Ref<_1300a20d0_Sema> _4626_s,jule::Ref<_127ed52e0_FnIns> _4640_owner) {
	jule::Ref<_1300a11b0_ScopeChecker> _4713_base = _1300a11b0_new_scope_checker_base(_4626_s,_4640_owner);
	_4713_base->_field_labels=jule::new_ref<jule::Slice<jule::Ref<_1300a11b0_ScopeLabel>>>(nullptr);
	_4713_base->_field_gotos=jule::new_ref<jule::Slice<jule::Ref<_1300a11b0_ScopeGoto>>>(nullptr);
	return _4713_base;
}



inline jule::Ref<_1300a11b0_ScopeLabel> _1300a11b0_find_label_parent(jule::Str _5622_ident,jule::Ref<_1300a11b0_ScopeChecker> _5638_scope) {
	jule::Ref<_1300a11b0_ScopeLabel> _5713_label = _5638_scope->_method_find_label_scope(_5622_ident);
	_iter_begin_5131636256:;
	if (!((!(jule::real(_5713_label))))) { goto _iter_end_5131636256; }
	{
		if ((!(jule::real(_5638_scope->_field_parent))) || jule::real(_5638_scope->_field_owner)) {
			return jule::new_ref<_1300a11b0_ScopeLabel>();
		}
		_5638_scope=_5638_scope->_field_parent;
		_5713_label=_5638_scope->_method_find_label_scope(_5622_ident);
	}
	_iter_next_5131636256:;
	goto _iter_begin_5131636256;
	_iter_end_5131636256:;
	return _5713_label;
}



inline jule::Int _1300a11b0_count_match_type(jule::Ref<_1300a11b0_Match> _7021_m,jule::Ref<_1304dc9b0_TypeKind> _7032_t) {
	jule::Int _7113_n = 0LL;
	jule::Str _729_kind = _7032_t->_method_to_str();
	_julec_label_loop:;
	{
		auto &__julec_range_expr = _7021_m->_field_cases;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1300a11b0_Case> _1300a11b0_c = *__julec_range_begin;
			_iter_begin_5131646960:;
			{
				if ((!(jule::real(_1300a11b0_c)))) {
					goto _iter_next_5131646960;
				}
				{
					auto &__julec_range_expr = _1300a11b0_c->_field_exprs;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Any _1300a11b0_expr = *__julec_range_begin;
						_iter_begin_5131649984:;
						{
							if (_1300a11b0_expr == nullptr) {
								goto _iter_end_5131646960;
							}
							if (_729_kind == _1300a11b0_expr.operator jule::Ref<_1304dc9b0_TypeKind>()->_method_to_str()) {
								(_7113_n)++;
							}
						}
						_iter_next_5131649984:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _1300a11b0_expr = *__julec_range_begin; goto _iter_begin_5131649984; }
						_iter_end_5131649984:;
					}
				}
			}
			_iter_next_5131646960:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a11b0_c = *__julec_range_begin; goto _iter_begin_5131646960; }
			_iter_end_5131646960:;
		}
	}
	return _7113_n;
}



inline jule::Slice<jule::Ref<_13064b610_Data>> _1300a11b0_get_datas_from_tuple_data(jule::Ref<_13064b610_Data> _9434_d) {
	if (jule::real(_9434_d->_field_kind->_method_tup())) {
		{
			auto &_match_expr{ _9434_d->_field_model };
			if (!(_match_expr.type_is<jule::Ref<_1279cf930_TupleExprModel>>())) { goto _case_end_5131668256; }
			_case_begin_5131668256:;
			{
				return _9434_d->_field_model.operator jule::Ref<_1279cf930_TupleExprModel>()->_field_datas;
			}
			goto _match_end_5131656048;
			_case_end_5131668256:;
			_case_begin_5131656864:;
			{
				jule::Ref<_1304dc9b0_Tuple> _10121_t = _9434_d->_field_kind->_method_tup();
				jule::Slice<jule::Ref<_13064b610_Data>> _10221_r = jule::Slice<jule::Ref<_13064b610_Data>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_10121_t->_field_types.len())));
				{
					auto &__julec_range_expr = _10121_t->_field_types;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Int _1300a11b0_i = 0;
						jule::Ref<_1304dc9b0_TypeKind> _1300a11b0_kind = *__julec_range_begin;
						_iter_begin_5131665440:;
						{
							_10221_r[static_cast<jule::Int>(_1300a11b0_i)]=jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(_1300a11b0_kind,jule::Ref<_1304dc9b0_TypeKind>(),true,jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_130c83140_Const>()));
						}
						_iter_next_5131665440:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { ++_1300a11b0_i; _1300a11b0_kind = *__julec_range_begin; goto _iter_begin_5131665440; }
						_iter_end_5131665440:;
					}
				}
				return _10221_r;
			}
			goto _match_end_5131656048;
			_case_end_5131656864:;
			_match_end_5131656048:;
		}
	} else {
		return jule::Slice<jule::Ref<_13064b610_Data>>({_9434_d});
	}
}



inline jule::Slice<jule::Any> _1300a11b0_get_expr_models(jule::Any _11624_m) {
	{
		auto &_match_expr{ _11624_m };
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_TupleExpr>>())) { goto _case_end_5369731616; }
		_case_begin_5369731616:;
		{
			return _11624_m.operator jule::Ref<_1275d7180_TupleExpr>()->_field_expr;
		}
		goto _match_end_5131655696;
		_case_end_5369731616:;
		_case_begin_5131655840:;
		{
			return jule::Slice<jule::Any>({_11624_m});
		}
		goto _match_end_5131655696;
		_case_end_5131655840:;
		_match_end_5131655696:;
	}
}



inline jule::Bool _1300a11b0_check_mut(jule::Ref<_1300a20d0_Sema> _12318_s,jule::Ref<_13064b610_Data> _12328_left,jule::Ref<_13064b610_Data> _12345_right,_127941de0_Token _12359_error_token) {
	jule::Bool _12381_ok = jule::Bool();
	{
		if (!(((!(_12328_left->_field_mutable))))) { goto _case_end_5126350096; }
		_case_begin_5126350096:;
		{
			_12318_s->_method_push_err(_12359_error_token,jule::Str("assignment_to_non_mut", 21),jule::Slice<jule::Any>({}));
			_12381_ok = false;
			return _12381_ok;
		}
		goto _match_end_5126120560;
		_case_end_5126350096:;
		if (!(((jule::real(_12345_right) && (!(_12345_right->_field_mutable))) && _1304dc9b0_is_mut(_12345_right->_field_kind)))) { goto _case_end_5369705424; }
		_case_begin_5369705424:;
		{
			_12318_s->_method_push_err(_12359_error_token,jule::Str("assignment_non_mut_to_mut", 25),jule::Slice<jule::Any>({}));
			_12381_ok = false;
			return _12381_ok;
		}
		goto _match_end_5126120560;
		_case_end_5369705424:;
		_case_begin_5126350592:;
		{
			_12381_ok = true;
			return _12381_ok;
		}
		goto _match_end_5126120560;
		_case_end_5126350592:;
		_match_end_5126120560:;
	}
}



inline jule::Bool _1300a11b0_check_assign(jule::Ref<_1300a20d0_Sema> _13821_s,jule::Ref<_13064b610_Data> _13835_left,jule::Ref<_13064b610_Data> _13852_right,_127941de0_Token _13866_error_token) {
	jule::Bool _13888_ok = jule::Bool();
	jule::Ref<_127ed52e0_FnIns> _1399_f = _13835_left->_field_kind->_method_fnc();
	if ((jule::real(_1399_f) && jule::real(_1399_f->_field_decl)) && _1399_f->_field_decl->_field_global) {
		_13821_s->_method_push_err(_13866_error_token,jule::Str("assign_type_not_support_value", 29),jule::Slice<jule::Any>({}));
		_13888_ok = false;
		return _13888_ok;
	}
	{
		if (!(((!(_13835_left->_field_lvalue))))) { goto _case_end_5126363936; }
		_case_begin_5126363936:;
		{
			_13821_s->_method_push_err(_13866_error_token,jule::Str("assign_require_lvalue", 21),jule::Slice<jule::Any>({}));
			_13888_ok = false;
			return _13888_ok;
		}
		goto _match_end_5126359392;
		_case_end_5126363936:;
		if (!((_13835_left->_method_is_const()))) { goto _case_end_5126364048; }
		_case_begin_5126364048:;
		{
			_13821_s->_method_push_err(_13866_error_token,jule::Str("assign_const", 12),jule::Slice<jule::Any>({}));
			_13888_ok = false;
			return _13888_ok;
		}
		goto _match_end_5126359392;
		_case_end_5126364048:;
		if (!(((!(_1300a11b0_check_mut(_13821_s,_13835_left,_13852_right,_13866_error_token)))))) { goto _case_end_5126364160; }
		_case_begin_5126364160:;
		{
			_13888_ok = false;
			return _13888_ok;
		}
		goto _match_end_5126359392;
		_case_end_5126364160:;
		_case_begin_5126363632:;
		{
			_13888_ok = true;
			return _13888_ok;
		}
		goto _match_end_5126359392;
		_case_end_5126363632:;
		_match_end_5126359392:;
	}
}



inline jule::Bool _1300a11b0_is_valid_ast_st_for_next_st(jule::Any _16236_n) {
	{
		auto &_match_expr{ _16236_n };
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_AssignSt>>())) { goto _case_end_5126374176; }
		_case_begin_5126374176:;
		{
			return (!(_16236_n.operator jule::Ref<_1275d7180_AssignSt>()->_field_declarative));
		}
		goto _match_end_5126356432;
		_case_end_5126374176:;
		if (!(_match_expr.type_is<jule::Ref<_1275d7180_FnCallExpr>>() || _match_expr.type_is<jule::Ref<_1275d7180_Expr>>())) { goto _case_end_5126373504; }
		_case_begin_5126373504:;
		{
			return true;
		}
		goto _match_end_5126356432;
		_case_end_5126373504:;
		_case_begin_5126372752:;
		{
			return false;
		}
		goto _match_end_5126356432;
		_case_end_5126372752:;
		_match_end_5126356432:;
	}
}



inline jule::Bool _1300a11b0_is_valid_st_for_next_st(jule::Any _17628_st) {
	{
		auto &_match_expr{ _17628_st };
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_FnCallExprModel>>() || _match_expr.type_is<jule::Ref<_1300a11b0_Postfix>>() || _match_expr.type_is<jule::Ref<_1300a11b0_Assign>>() || _match_expr.type_is<jule::Ref<_1300a11b0_MultiAssign>>())) { goto _case_end_5126379120; }
		_case_begin_5126379120:;
		{
			return true;
		}
		goto _match_end_5126377472;
		_case_end_5126379120:;
		if (!(_match_expr.type_is<jule::Ref<_13064b610_Data>>())) { goto _case_end_5126378448; }
		_case_begin_5126378448:;
		{
			{
				auto &_match_expr{ _17628_st.operator jule::Ref<_13064b610_Data>()->_field_model };
				if (!(_match_expr.type_is<jule::Ref<_1279cf930_FnCallExprModel>>())) { goto _case_end_5126388624; }
				_case_begin_5126388624:;
				{
					return true;
				}
				goto _match_end_5126385920;
				_case_end_5126388624:;
				_case_begin_5126387616:;
				{
					return false;
				}
				goto _match_end_5126385920;
				_case_end_5126387616:;
				_match_end_5126385920:;
			}
		}
		goto _match_end_5126377472;
		_case_end_5126378448:;
		_case_begin_5126377696:;
		{
			return false;
		}
		goto _match_end_5126377472;
		_case_end_5126377696:;
		_match_end_5126377472:;
	}
}



inline jule::Bool _1300a11b0_st_is_def(jule::Any _19514_st) {
	{
		auto &_match_expr{ _19514_st };
		if (!(_match_expr.type_is<jule::Ref<_1303533b0_Var>>())) { goto _case_end_5126390720; }
		_case_begin_5126390720:;
		{
			return true;
		}
		goto _match_end_5126386416;
		_case_end_5126390720:;
		_case_begin_5126388896:;
		{
			return false;
		}
		goto _match_end_5126386416;
		_case_end_5126388896:;
		_match_end_5126386416:;
	}
}



inline jule::Ref<_1303533b0_Var> _1300a4650_find_var_in_package(jule::Slice<jule::Ref<_13032dc50_SymbolTable>> _2728_files,jule::Str _2751_ident,jule::Bool _2763_cpp_linked) {
	{
		auto &__julec_range_expr = _2728_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13032dc50_SymbolTable> _1300a4650_f = *__julec_range_begin;
			_iter_begin_5126393952:;
			{
				jule::Ref<_1303533b0_Var> _2917_v = _1300a4650_f->_method_find_var(_2751_ident,_2763_cpp_linked);
				if (jule::real(_2917_v)) {
					return _2917_v;
				}
			}
			_iter_next_5126393952:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a4650_f = *__julec_range_begin; goto _iter_begin_5126393952; }
			_iter_end_5126393952:;
		}
	}
	return jule::new_ref<_1303533b0_Var>();
}



inline jule::Ref<_1304dc9b0_TypeAlias> _1300a4650_find_type_alias_in_package(jule::Slice<jule::Ref<_13032dc50_SymbolTable>> _3935_files,jule::Str _3958_ident,jule::Bool _3970_cpp_linked) {
	{
		auto &__julec_range_expr = _3935_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13032dc50_SymbolTable> _1300a4650_f = *__julec_range_begin;
			_iter_begin_5126401312:;
			{
				jule::Ref<_1304dc9b0_TypeAlias> _4117_ta = _1300a4650_f->_method_find_type_alias(_3958_ident,_3970_cpp_linked);
				if (jule::real(_4117_ta)) {
					return _4117_ta;
				}
			}
			_iter_next_5126401312:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a4650_f = *__julec_range_begin; goto _iter_begin_5126401312; }
			_iter_end_5126401312:;
		}
	}
	return jule::new_ref<_1304dc9b0_TypeAlias>();
}



inline jule::Ref<_127b2e960_Struct> _1300a4650_find_struct_in_package(jule::Slice<jule::Ref<_13032dc50_SymbolTable>> _5131_files,jule::Str _5154_ident,jule::Bool _5166_cpp_linked) {
	{
		auto &__julec_range_expr = _5131_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13032dc50_SymbolTable> _1300a4650_f = *__julec_range_begin;
			_iter_begin_5126408704:;
			{
				jule::Ref<_127b2e960_Struct> _5317_s = _1300a4650_f->_method_find_struct(_5154_ident,_5166_cpp_linked);
				if (jule::real(_5317_s)) {
					return _5317_s;
				}
			}
			_iter_next_5126408704:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a4650_f = *__julec_range_begin; goto _iter_begin_5126408704; }
			_iter_end_5126408704:;
		}
	}
	return jule::new_ref<_127b2e960_Struct>();
}



inline jule::Ref<_127ed52e0_Fn> _1300a4650_find_fn_in_package(jule::Slice<jule::Ref<_13032dc50_SymbolTable>> _6327_files,jule::Str _6350_ident,jule::Bool _6362_cpp_linked) {
	{
		auto &__julec_range_expr = _6327_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13032dc50_SymbolTable> _1300a4650_file = *__julec_range_begin;
			_iter_begin_5126416096:;
			{
				jule::Ref<_127ed52e0_Fn> _6517_f = _1300a4650_file->_method_find_fn(_6350_ident,_6362_cpp_linked);
				if (jule::real(_6517_f)) {
					return _6517_f;
				}
			}
			_iter_next_5126416096:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a4650_file = *__julec_range_begin; goto _iter_begin_5126416096; }
			_iter_end_5126416096:;
		}
	}
	return jule::new_ref<_127ed52e0_Fn>();
}



inline jule::Ref<_130099320_Trait> _1300a4650_find_trait_in_package(jule::Slice<jule::Ref<_13032dc50_SymbolTable>> _7530_files,jule::Str _7553_ident) {
	{
		auto &__julec_range_expr = _7530_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13032dc50_SymbolTable> _1300a4650_f = *__julec_range_begin;
			_iter_begin_5126420848:;
			{
				jule::Ref<_130099320_Trait> _7717_t = _1300a4650_f->_method_find_trait(_7553_ident);
				if (jule::real(_7717_t)) {
					return _7717_t;
				}
			}
			_iter_next_5126420848:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a4650_f = *__julec_range_begin; goto _iter_begin_5126420848; }
			_iter_end_5126420848:;
		}
	}
	return jule::new_ref<_130099320_Trait>();
}



inline jule::Ref<_13009ed30_Enum> _1300a4650_find_enum_in_package(jule::Slice<jule::Ref<_13032dc50_SymbolTable>> _8729_files,jule::Str _8752_ident) {
	{
		auto &__julec_range_expr = _8729_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13032dc50_SymbolTable> _1300a4650_f = *__julec_range_begin;
			_iter_begin_5126427296:;
			{
				jule::Ref<_13009ed30_Enum> _8917_e = _1300a4650_f->_method_find_enum(_8752_ident);
				if (jule::real(_8917_e)) {
					return _8917_e;
				}
			}
			_iter_next_5126427296:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a4650_f = *__julec_range_begin; goto _iter_begin_5126427296; }
			_iter_end_5126427296:;
		}
	}
	return jule::new_ref<_13009ed30_Enum>();
}



inline _136e99d00_Log _1300a20d0_compiler_err(_127941de0_Token _1617_token,jule::Str _1631_key,jule::Slice<jule::Any> _1641_args) {
	return _136e99d00_Log(1LLU,_1617_token._field_row,_1617_token._field_column,_1617_token._field_file->_method_path(),_136e8b750_errorf(_1631_key,_1641_args));
}



inline jule::Bool _1300a20d0_imp_is_lookupable(jule::Ref<_1300a4650_ImportInfo> _2622_i,jule::Str _2638_ident) {
	if (_2622_i->_field_cpp_linked) {
		return false;
	}
	if ((!(_2622_i->_field_import_all))) {
		if (_2622_i->_field_selected.len() > 0LL) {
			return _2622_i->_method_exist_ident(_2638_ident);
		}
	}
	return _2622_i->_field_import_all;
}



inline jule::Slice<jule::Ref<_1303533b0_Var>> _1300a20d0_build_ret_vars(jule::Ref<_127ed52e0_FnIns> _3923_f) {
	if (_3923_f->_field_decl->_method_is_void() || (!(jule::real(_3923_f->_field_result)))) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1303533b0_Var>> _4413_vars = nullptr;
	jule::Slice<jule::Ref<_1304dc9b0_TypeKind>> _4513_types = _13032cf90_get_fn_result_types(_3923_f);
	{
		auto &__julec_range_expr = _3923_f->_field_decl->_field_result->_field_idents;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1300a20d0_i = 0;
			_127941de0_Token _1300a20d0_ident = *__julec_range_begin;
			_iter_begin_5126454544:;
			{
				if (_127941de0_is_ignore_ident(_1300a20d0_ident._field_kind)) {
					goto _iter_next_5126454544;
				}
				jule::Ref<_1303533b0_Var> _5117_v = jule::new_struct<_1303533b0_Var>(new( std::nothrow ) _1303533b0_Var(_3923_f->_field_decl->_field_scope,_1300a20d0_ident,_1300a20d0_ident._field_kind,jule::Bool(),jule::Bool(),true,jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_1304dc9b0_TypeSymbol>(new( std::nothrow ) _1304dc9b0_TypeSymbol(jule::Ref<_1275d7180_TypeDecl>(),_4513_types[static_cast<jule::Int>(_1300a20d0_i)])),jule::new_struct<_13064b610_Value>(new( std::nothrow ) _13064b610_Value(jule::Ref<_1275d7180_Expr>(),jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data()))),jule::Ref<_127ff3480_ReferenceStack>(),jule::Slice<jule::Ref<_1303533b0_Var>>()));
				_4413_vars=append(_4413_vars,jule::Slice<jule::Ref<_1303533b0_Var>>({_5117_v}));
			}
			_iter_next_5126454544:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1300a20d0_i; _1300a20d0_ident = *__julec_range_begin; goto _iter_begin_5126454544; }
			_iter_end_5126454544:;
		}
	}
	return _4413_vars;
}



inline jule::Slice<jule::Ref<_1303533b0_Var>> _1300a20d0_build_param_vars(jule::Ref<_127ed52e0_FnIns> _6825_f) {
	if (_6825_f->_field_params.len() == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1303533b0_Var>> _7313_vars = jule::Slice<jule::Ref<_1303533b0_Var>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_6825_f->_field_params.len())));
	{
		auto &__julec_range_expr = _6825_f->_field_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1300a20d0_i = 0;
			jule::Ref<_127ed52e0_ParamIns> _1300a20d0_p = *__julec_range_begin;
			_iter_begin_5126472640:;
			{
				jule::Ref<_1303533b0_Var> _7517_v = jule::new_struct<_1303533b0_Var>(new( std::nothrow ) _1303533b0_Var(_6825_f->_field_decl->_field_scope,_1300a20d0_p->_field_decl->_field_token,_1300a20d0_p->_field_decl->_field_ident,jule::Bool(),jule::Bool(),_1300a20d0_p->_field_decl->_field_mutable,jule::Bool(),true,jule::Bool(),jule::Bool(),jule::Str(),jule::new_struct<_1304dc9b0_TypeSymbol>(new( std::nothrow ) _1304dc9b0_TypeSymbol()),jule::new_struct<_13064b610_Value>(new( std::nothrow ) _13064b610_Value(jule::Ref<_1275d7180_Expr>(),jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data()))),jule::Ref<_127ff3480_ReferenceStack>(),jule::Slice<jule::Ref<_1303533b0_Var>>()));
				{
					if (!((_1300a20d0_p->_field_decl->_method_is_self()))) { goto _case_end_5126481952; }
					_case_begin_5126481952:;
					{
						_7517_v->_field_kind->_field_kind=jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_6825_f->_field_owner));
						if (_1300a20d0_p->_field_decl->_method_is_ref()) {
							_7517_v->_field_ident=_7517_v->_field_ident.slice(static_cast<jule::Int>(1LL));
							_7517_v->_field_kind->_field_kind->_field_kind=jule::new_struct<_1304dc9b0_Ref>(new( std::nothrow ) _1304dc9b0_Ref(_7517_v->_field_kind->_field_kind->_method_clone()));
						}
					}
					goto _match_end_5126480496;
					_case_end_5126481952:;
					if (!((_1300a20d0_p->_field_decl->_field_variadic))) { goto _case_end_5126482944; }
					_case_begin_5126482944:;
					{
						_7517_v->_field_kind->_field_kind=jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_1304dc9b0_Slc>(new( std::nothrow ) _1304dc9b0_Slc(_1300a20d0_p->_field_kind->_method_clone()))));
					}
					goto _match_end_5126480496;
					_case_end_5126482944:;
					_case_begin_5126480768:;
					{
						_7517_v->_field_kind->_field_kind=_1300a20d0_p->_field_kind->_method_clone();
					}
					goto _match_end_5126480496;
					_case_end_5126480768:;
					_match_end_5126480496:;
				}
				_7313_vars[static_cast<jule::Int>(_1300a20d0_i)]=_7517_v;
			}
			_iter_next_5126472640:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1300a20d0_i; _1300a20d0_p = *__julec_range_begin; goto _iter_begin_5126472640; }
			_iter_end_5126472640:;
		}
	}
	return _7313_vars;
}



inline jule::Slice<jule::Ref<_1304dc9b0_TypeAlias>> _1300a20d0_build_generic_type_aliases(jule::Ref<_127ed52e0_FnIns> _11535_f) {
	jule::I64 _11613_size = _11535_f->_field_generics.len();
	if (jule::real(_11535_f->_field_decl->_field_owner)) {
		_11613_size+=static_cast<jule::I64>(_11535_f->_field_decl->_field_owner->_field_generics.len());
	}
	if (_11613_size == 0LL) {
		return nullptr;
	}
	jule::Slice<jule::Ref<_1304dc9b0_TypeAlias>> _12513_aliases = jule::Slice<jule::Ref<_1304dc9b0_TypeAlias>>::alloc(static_cast<jule::Int>(_11613_size));
	{
		auto &__julec_range_expr = _11535_f->_field_generics;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _1300a20d0_i = 0;
			jule::Ref<_1304dc9b0_TypeKind> _1300a20d0_g = *__julec_range_begin;
			_iter_begin_5131768592:;
			{
				jule::Ref<_1275d7180_GenericDecl> _12817_decl = _11535_f->_field_decl->_field_generics[static_cast<jule::Int>(_1300a20d0_i)];
				_12513_aliases[static_cast<jule::Int>(_1300a20d0_i)]=jule::new_struct<_1304dc9b0_TypeAlias>(new( std::nothrow ) _1304dc9b0_TypeAlias(_11535_f->_field_decl->_field_scope,jule::Bool(),jule::Bool(),true,_12817_decl->_field_token,_12817_decl->_field_ident,jule::new_struct<_1304dc9b0_TypeSymbol>(new( std::nothrow ) _1304dc9b0_TypeSymbol(jule::Ref<_1275d7180_TypeDecl>(),_1300a20d0_g)),jule::Str(),jule::Slice<jule::Any>()));
			}
			_iter_next_5131768592:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_1300a20d0_i; _1300a20d0_g = *__julec_range_begin; goto _iter_begin_5131768592; }
			_iter_end_5131768592:;
		}
	}
	if (jule::real(_11535_f->_field_decl->_field_owner)) {
		jule::Ref<_127b2e960_StructIns> _13917_owner = _11535_f->_field_owner;
		{
			auto &__julec_range_expr = _13917_owner->_field_generics;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Int _1300a20d0_i = 0;
				jule::Ref<_1304dc9b0_TypeKind> _1300a20d0_g = *__julec_range_begin;
				_iter_begin_5131779008:;
				{
					jule::Ref<_1275d7180_GenericDecl> _14121_decl = _13917_owner->_field_decl->_field_generics[static_cast<jule::Int>(_1300a20d0_i)];
					_12513_aliases[static_cast<jule::Int>(_11535_f->_field_generics.len() + _1300a20d0_i)]=jule::new_struct<_1304dc9b0_TypeAlias>(new( std::nothrow ) _1304dc9b0_TypeAlias(_11535_f->_field_decl->_field_scope,jule::Bool(),jule::Bool(),true,_14121_decl->_field_token,_14121_decl->_field_ident,jule::new_struct<_1304dc9b0_TypeSymbol>(new( std::nothrow ) _1304dc9b0_TypeSymbol(jule::Ref<_1275d7180_TypeDecl>(),_1300a20d0_g)),jule::Str(),jule::Slice<jule::Any>()));
				}
				_iter_next_5131779008:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { ++_1300a20d0_i; _1300a20d0_g = *__julec_range_begin; goto _iter_begin_5131779008; }
				_iter_end_5131779008:;
			}
		}
	}
	return _12513_aliases;
}



inline jule::Ref<_13032dc50_SymbolTable> _1300a20d0_find_file(jule::Slice<jule::Ref<_13032dc50_SymbolTable>> _15518_files,jule::Ref<_126f67810_File> _15541_handler) {
	{
		auto &__julec_range_expr = _15518_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13032dc50_SymbolTable> _1300a20d0_fl = *__julec_range_begin;
			_iter_begin_5131788672:;
			{
				if ((_1300a20d0_fl->_field_file).alloc == (_15541_handler).alloc) {
					return _1300a20d0_fl;
				}
			}
			_iter_next_5131788672:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a20d0_fl = *__julec_range_begin; goto _iter_begin_5131788672; }
			_iter_end_5131788672:;
		}
	}
	return jule::new_ref<_13032dc50_SymbolTable>();
}



inline std::tuple<jule::Bool,jule::Bool> _1300a20d0_conditional_has_ret(jule::Ref<_1300a11b0_Conditional> _16428_c) {
	jule::Bool _16457_breaking = jule::Bool();
	jule::Bool _16447_ok = jule::Bool();
	jule::Bool _16513_breaked = false;
	{
		auto &__julec_range_expr = _16428_c->_field_elifs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1300a11b0_If> _1300a20d0_elif = *__julec_range_begin;
			_iter_begin_5131795008:;
			{
				if ((!(jule::real(_1300a20d0_elif)))) {
					_16447_ok = false;
					_16457_breaking = false;
					return std::make_tuple(_16447_ok,_16457_breaking);
				}
				std::tie(_16447_ok,std::ignore,_16457_breaking) = _1300a20d0___has_ret(_1300a20d0_elif->_field_scope);
				_16513_breaked=_16513_breaked || _16457_breaking;
				if ((!(_16447_ok))) {
					_16447_ok = false;
					_16457_breaking = _16513_breaked;
					return std::make_tuple(_16447_ok,_16457_breaking);
				}
			}
			_iter_next_5131795008:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a20d0_elif = *__julec_range_begin; goto _iter_begin_5131795008; }
			_iter_end_5131795008:;
		}
	}
	if ((!(jule::real(_16428_c->_field_default)))) {
		_16447_ok = false;
		_16457_breaking = _16513_breaked;
		return std::make_tuple(_16447_ok,_16457_breaking);
	}
	std::tie(_16447_ok,std::ignore,_16457_breaking) = _1300a20d0___has_ret(_16428_c->_field_default->_field_scope);
	_16513_breaked=_16513_breaked || _16457_breaking;
	_16447_ok = _16447_ok;
	_16457_breaking = _16513_breaked;
	return std::make_tuple(_16447_ok,_16457_breaking);
}



inline jule::Bool _1300a20d0_match_has_ret(jule::Ref<_1300a11b0_Match> _18622_m) {
	if ((!(jule::real(_18622_m->_field_default)))) {
		return false;
	}
	jule::Bool _19113_ok = true;
	jule::Bool _19213_falled = false;
	jule::Bool _19313_breaked = false;
	{
		auto &__julec_range_expr = _18622_m->_field_cases;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1300a11b0_Case> _1300a20d0_c = *__julec_range_begin;
			_iter_begin_5131812480:;
			{
				if ((!(jule::real(_1300a20d0_c)))) {
					return false;
				}
				std::tie(_19113_ok,_19213_falled,_19313_breaked) = _1300a20d0___has_ret(_1300a20d0_c->_field_scope);
				if (((!(_19113_ok)) && (!(_19213_falled))) || _19313_breaked) {
					return false;
				}
				{
					if (!(((!(_19113_ok))))) { goto _case_end_5131818976; }
					_case_begin_5131818976:;
					{
						if ((!(_19213_falled))) {
							return false;
						}
						goto _case_begin_5131819088;
					}
					goto _match_end_5131818176;
					_case_end_5131818976:;
					if (!((_19213_falled))) { goto _case_end_5131819088; }
					_case_begin_5131819088:;
					{
						if ((!(jule::real(_1300a20d0_c->_field_next)))) {
							return false;
						}
						goto _iter_next_5131812480;
					}
					goto _match_end_5131818176;
					_case_end_5131819088:;
					_match_end_5131818176:;
				}
				_19213_falled=false;
			}
			_iter_next_5131812480:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1300a20d0_c = *__julec_range_begin; goto _iter_begin_5131812480; }
			_iter_end_5131812480:;
		}
	}
	return _1300a20d0_has_ret(_18622_m->_field_default->_field_scope);
}



inline std::tuple<jule::Bool,jule::Bool,jule::Bool> _1300a20d0___has_ret(jule::Ref<_1300a11b0_Scope> _22218_s) {
	jule::Bool _22255_breaked = jule::Bool();
	jule::Bool _22241_falled = jule::Bool();
	jule::Bool _22231_ok = jule::Bool();
	if ((!(jule::real(_22218_s)))) {
		_22231_ok = false;
		_22241_falled = false;
		_22255_breaked = false;
		return std::make_tuple(_22231_ok,_22241_falled,_22255_breaked);
	}
	jule::Int _22713_i = 0LL;
	_iter_begin_5131827632:;
	if (!(_22713_i < _22218_s->_field_stmts._method_len())) { goto _iter_end_5131827632; }
	{
		jule::Any _22917_st = _22218_s->_field_stmts._method_at(_22713_i);
		{
			auto &_match_expr{ _22917_st };
			if (!(_match_expr.type_is<jule::Ref<_1300a11b0_FallSt>>())) { goto _case_end_5131834512; }
			_case_begin_5131834512:;
			{
				_22241_falled=true;
			}
			goto _match_end_5131833248;
			_case_end_5131834512:;
			if (!(_match_expr.type_is<jule::Ref<_1300a11b0_BreakSt>>())) { goto _case_end_5131834624; }
			_case_begin_5131834624:;
			{
				_22231_ok = false;
				_22241_falled = false;
				_22255_breaked = true;
				return std::make_tuple(_22231_ok,_22241_falled,_22255_breaked);
			}
			goto _match_end_5131833248;
			_case_end_5131834624:;
			if (!(_match_expr.type_is<jule::Ref<_1300a11b0_RetSt>>())) { goto _case_end_5131834736; }
			_case_begin_5131834736:;
			{
				_22231_ok = true;
				_22241_falled = _22241_falled;
				_22255_breaked = _22255_breaked;
				return std::make_tuple(_22231_ok,_22241_falled,_22255_breaked);
			}
			goto _match_end_5131833248;
			_case_end_5131834736:;
			if (!(_match_expr.type_is<jule::Ref<_1300a11b0_Scope>>())) { goto _case_end_5131834848; }
			_case_begin_5131834848:;
			{
				jule::Bool _24117_ok = _1300a20d0_has_ret(_22917_st.operator jule::Ref<_1300a11b0_Scope>());
				if (_24117_ok) {
					_22231_ok = true;
					_22241_falled = false;
					_22255_breaked = false;
					return std::make_tuple(_22231_ok,_22241_falled,_22255_breaked);
				}
			}
			goto _match_end_5131833248;
			_case_end_5131834848:;
			if (!(_match_expr.type_is<jule::Ref<_1300a11b0_Recover>>())) { goto _case_end_5131834960; }
			_case_begin_5131834960:;
			{
				jule::Bool _24718_ok;
				jule::Bool _24722_falled;
				jule::Bool _24730_breaked;
				std::tie(_24718_ok,_24722_falled,_24730_breaked) = _1300a20d0___has_ret(_22917_st.operator jule::Ref<_1300a11b0_Recover>()->_field_scope);
				if (_24718_ok) {
					_22231_ok = true;
					_22241_falled = _24722_falled;
					_22255_breaked = _24730_breaked;
					return std::make_tuple(_22231_ok,_22241_falled,_22255_breaked);
				}
			}
			goto _match_end_5131833248;
			_case_end_5131834960:;
			if (!(_match_expr.type_is<jule::Ref<_1300a11b0_Conditional>>())) { goto _case_end_5131835072; }
			_case_begin_5131835072:;
			{
				jule::Bool _25318_ok;
				jule::Bool _25322_breaking;
				std::tie(_25318_ok,_25322_breaking) = _1300a20d0_conditional_has_ret(_22917_st.operator jule::Ref<_1300a11b0_Conditional>());
				if (_25318_ok) {
					_22231_ok = true;
					_22241_falled = false;
					_22255_breaked = false;
					return std::make_tuple(_22231_ok,_22241_falled,_22255_breaked);
				}
				if (_25322_breaking) {
					_22231_ok = false;
					_22241_falled = false;
					_22255_breaked = _22255_breaked;
					return std::make_tuple(_22231_ok,_22241_falled,_22255_breaked);
				}
			}
			goto _match_end_5131833248;
			_case_end_5131835072:;
			if (!(_match_expr.type_is<jule::Ref<_1300a11b0_Match>>())) { goto _case_end_5131835184; }
			_case_begin_5131835184:;
			{
				jule::Bool _26317_ok = _1300a20d0_match_has_ret(_22917_st.operator jule::Ref<_1300a11b0_Match>());
				if (_26317_ok) {
					_22231_ok = true;
					_22241_falled = false;
					_22255_breaked = false;
					return std::make_tuple(_22231_ok,_22241_falled,_22255_breaked);
				}
			}
			goto _match_end_5131833248;
			_case_end_5131835184:;
			_match_end_5131833248:;
		}
	}
	_iter_next_5131827632:;
	(_22713_i)++;
	goto _iter_begin_5131827632;
	_iter_end_5131827632:;
	_22231_ok = false;
	_22241_falled = _22241_falled;
	_22255_breaked = _22255_breaked;
	return std::make_tuple(_22231_ok,_22241_falled,_22255_breaked);
}



inline jule::Bool _1300a20d0_has_ret(jule::Ref<_1300a11b0_Scope> _27316_s) {
	jule::Bool _27410_ok;
	std::tie(_27410_ok,std::ignore,std::ignore) = _1300a20d0___has_ret(_27316_s);
	return _27410_ok;
}



inline jule::Slice<jule::Ref<_1304dc9b0_TypeKind>> _13032cf90_get_fn_result_types(jule::Ref<_127ed52e0_FnIns> _3528_f) {
	{
		if (!((_3528_f->_field_decl->_method_is_void() || (!(jule::real(_3528_f->_field_result)))))) { goto _case_end_5131875424; }
		_case_begin_5131875424:;
		{
			return nullptr;
		}
		goto _match_end_5131873600;
		_case_end_5131875424:;
		if (!(((!(jule::real(_3528_f->_field_result->_method_tup())))))) { goto _case_end_5131874896; }
		_case_begin_5131874896:;
		{
			return jule::Slice<jule::Ref<_1304dc9b0_TypeKind>>({_3528_f->_field_result});
		}
		goto _match_end_5131873600;
		_case_end_5131874896:;
		_case_begin_5131873808:;
		{
			return _3528_f->_field_result->_method_tup()->_field_types;
		}
		goto _match_end_5131873600;
		_case_end_5131873808:;
		_match_end_5131873600:;
	}
}



inline jule::Bool _13032cf90_trait_has_reference_receiver(jule::Ref<_130099320_Trait> _4833_t) {
	{
		auto &__julec_range_expr = _4833_t->_field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127ed52e0_Fn> _13032cf90_f = *__julec_range_begin;
			_iter_begin_5131873024:;
			{
				if (_13032cf90_f->_field_statically) {
					goto _iter_next_5131873024;
				}
				jule::Ref<_127ed52e0_Param> _5513_p = _13032cf90_f->_field_params[static_cast<jule::Int>(0LL)];
				if (_5513_p->_method_is_ref() && _5513_p->_method_is_self()) {
					return true;
				}
			}
			_iter_next_5131873024:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13032cf90_f = *__julec_range_begin; goto _iter_begin_5131873024; }
			_iter_end_5131873024:;
		}
	}
	return false;
}



inline jule::Bool _13032cf90_float_assignable(jule::Str _6321_kind,jule::Ref<_13064b610_Data> _6332_d) {
	jule::Str _649_value = _136f888c0_fmt_float(static_cast<jule::F64>(_6332_d->_field_constant->_method_read_f64()),'e',-1LL,64LL);
	return _130cb2be0_check_bit_float(_649_value,static_cast<jule::Int>(_130cb2be0_bitsize_of(_6321_kind)));
}



inline jule::Bool _13032cf90_sig_assignable(jule::Str _6819_kind,jule::Ref<_13064b610_Data> _6830_d) {
	jule::F64 _699_min = _130cde370_min_of(_6819_kind);
	jule::F64 _709_max = _130cde370_max_of(_6819_kind);
	{
		if (!((_6830_d->_field_constant->_method_is_f64()))) { goto _case_end_5131898672; }
		_case_begin_5131898672:;
		{
			jule::F64 _7413_x = static_cast<jule::F64>(_6830_d->_field_constant->_method_read_f64());
			jule::F64 _7514_i;
			jule::F64 _7517_frac;
			std::tie(_7514_i,_7517_frac) = _136ef5550_modf(_7413_x);
			if (_7517_frac != 0LL) {
				return false;
			}
			return (_7514_i >= _699_min) && (_7514_i <= _709_max);
		}
		goto _match_end_5131898400;
		_case_end_5131898672:;
		if (!((_6830_d->_field_constant->_method_is_u64()))) { goto _case_end_5131898784; }
		_case_begin_5131898784:;
		{
			jule::F64 _8213_x = static_cast<jule::F64>(_6830_d->_field_constant->_method_read_u64());
			if (_8213_x <= _709_max) {
				return true;
			}
		}
		goto _match_end_5131898400;
		_case_end_5131898784:;
		if (!((_6830_d->_field_constant->_method_is_i64()))) { goto _case_end_5131898896; }
		_case_begin_5131898896:;
		{
			jule::F64 _8813_x = static_cast<jule::F64>(_6830_d->_field_constant->_method_read_i64());
			return (_699_min <= _8813_x) && (_8813_x <= _709_max);
		}
		goto _match_end_5131898400;
		_case_end_5131898896:;
		_match_end_5131898400:;
	}
	return false;
}



inline jule::Bool _13032cf90_unsig_assignable(jule::Str _9521_kind,jule::Ref<_13064b610_Data> _9532_d) {
	jule::F64 _969_max = _130cde370_max_of(_9521_kind);
	{
		if (!((_9532_d->_field_constant->_method_is_f64()))) { goto _case_end_5131919328; }
		_case_begin_5131919328:;
		{
			jule::F64 _10013_x = _9532_d->_field_constant->_method_read_f64();
			if (_10013_x < 0LL) {
				return false;
			}
			jule::F64 _10514_i;
			jule::F64 _10517_frac;
			std::tie(_10514_i,_10517_frac) = _136ef5550_modf(_10013_x);
			if (_10517_frac != 0LL) {
				return false;
			}
			return _10514_i <= _969_max;
		}
		goto _match_end_5131919008;
		_case_end_5131919328:;
		if (!((_9532_d->_field_constant->_method_is_u64()))) { goto _case_end_5131919440; }
		_case_begin_5131919440:;
		{
			jule::F64 _11213_x = static_cast<jule::F64>(_9532_d->_field_constant->_method_read_u64());
			if (_11213_x <= _969_max) {
				return true;
			}
		}
		goto _match_end_5131919008;
		_case_end_5131919440:;
		if (!((_9532_d->_field_constant->_method_is_i64()))) { goto _case_end_5131919552; }
		_case_begin_5131919552:;
		{
			jule::F64 _11813_x = static_cast<jule::F64>(_9532_d->_field_constant->_method_read_i64());
			return (0LL <= _11813_x) && (_11813_x <= _969_max);
		}
		goto _match_end_5131919008;
		_case_end_5131919552:;
		_match_end_5131919008:;
	}
	return false;
}



inline jule::Bool _13032cf90_int_assignable(jule::Str _12519_kind,jule::Ref<_13064b610_Data> _12530_d) {
	{
		if (!((_130d7f700_is_sig_int(_12519_kind)))) { goto _case_end_5131938400; }
		_case_begin_5131938400:;
		{
			return _13032cf90_sig_assignable(_12519_kind,_12530_d);
		}
		goto _match_end_5131937104;
		_case_end_5131938400:;
		if (!((_130d7f700_is_unsig_int(_12519_kind)))) { goto _case_end_5131937616; }
		_case_begin_5131937616:;
		{
			return _13032cf90_unsig_assignable(_12519_kind,_12530_d);
		}
		goto _match_end_5131937104;
		_case_end_5131937616:;
		_case_begin_5131937312:;
		{
			return false;
		}
		goto _match_end_5131937104;
		_case_end_5131937312:;
		_match_end_5131937104:;
	}
}



inline jule::Any _13064b610_find_builtins_import(jule::Str _8625_ident,jule::Ref<_1300a4650_ImportInfo> _8637_imp) {
	return _130b8f5f0_find_package_builtin_def(_8637_imp->_field_link_path,_8625_ident);
}



inline jule::Any _13064b610_find_builtins_sema(jule::Str _9023_ident,jule::Ref<_1300a20d0_Sema> _9039_s) {
	jule::Int _9113_i = 0LL;
	_iter_begin_5131945056:;
	if (!(_9113_i < _9039_s->_field_file->_field_imports._method_len())) { goto _iter_end_5131945056; }
	{
		jule::Ref<_1300a4650_ImportInfo> _9317_imp = _9039_s->_field_file->_field_imports._method_at(_9113_i);
		if (_9317_imp->_field_import_all || _9317_imp->_method_exist_ident(_9023_ident)) {
			jule::Any _9521_def = _13064b610_find_builtins_import(_9023_ident,_9317_imp);
			if (_9521_def != nullptr) {
				return _9521_def;
			}
		}
	}
	_iter_next_5131945056:;
	(_9113_i)++;
	goto _iter_begin_5131945056;
	_iter_end_5131945056:;
	return nullptr;
}



inline jule::Bool _13064b610_is_ok_for_shifting(jule::Ref<_13064b610_Data> _10427_d) {
	jule::Ref<_1304dc9b0_Prim> _1059_prim = _10427_d->_field_kind->_method_prim();
	if ((!(jule::real(_1059_prim))) || (!(_130d7f700_is_int(_1059_prim->_method_to_str())))) {
		return false;
	}
	if ((!(_10427_d->_method_is_const()))) {
		return true;
	}
	{
		if (!((_10427_d->_field_constant->_method_is_i64()))) { goto _case_end_5131963696; }
		_case_begin_5131963696:;
		{
			return _10427_d->_field_constant->_method_read_i64() >= 0LL;
		}
		goto _match_end_5131962352;
		_case_end_5131963696:;
		if (!((_10427_d->_field_constant->_method_is_u64()))) { goto _case_end_5131962992; }
		_case_begin_5131962992:;
		{
			return true;
		}
		goto _match_end_5131962352;
		_case_end_5131962992:;
		_case_begin_5131954144:;
		{
			return false;
		}
		goto _match_end_5131962352;
		_case_end_5131954144:;
		_match_end_5131962352:;
	}
}



inline jule::Bool _13064b610_is_instanced_struct(jule::Ref<_127b2e960_StructIns> _12124_s) {
	return _12124_s->_field_decl->_field_generics.len() == _12124_s->_field_generics.len();
}



inline void _13064b610_normalize_bitsize(jule::Ref<_13064b610_Data> _12526_d) {
	if ((!(_12526_d->_method_is_const()))) {
		return;
	}
	jule::Str _13013_kind = jule::Str("", 0);
	{
		if (!((_12526_d->_field_constant->_method_is_f64()))) { goto _case_end_5131974480; }
		_case_begin_5131974480:;
		{
			jule::F64 _13313_x = _12526_d->_field_constant->_method_read_f64();
			_13013_kind=_130cb2be0_float_from_bits(static_cast<jule::U64>(_130cb2be0_bitsize_of_float(_13313_x)));
		}
		goto _match_end_5131973168;
		_case_end_5131974480:;
		if (!((_12526_d->_field_constant->_method_is_i64()))) { goto _case_end_5131973632; }
		_case_begin_5131973632:;
		{
			jule::I64 _13713_x = _12526_d->_field_constant->_method_read_i64();
			_13013_kind=_130cb2be0_int_from_bits(static_cast<jule::U64>(_130cb2be0_bitsize_of_int(_13713_x)));
		}
		goto _match_end_5131973168;
		_case_end_5131973632:;
		if (!((_12526_d->_field_constant->_method_is_u64()))) { goto _case_end_5131973744; }
		_case_begin_5131973744:;
		{
			jule::U64 _14113_x = _12526_d->_field_constant->_method_read_u64();
			_13013_kind=_130cb2be0_uint_from_bits(static_cast<jule::U64>(_130cb2be0_bitsize_of_uint(_14113_x)));
		}
		goto _match_end_5131973168;
		_case_end_5131973744:;
		_case_begin_5131973328:;
		{
			return;
		}
		goto _match_end_5131973168;
		_case_end_5131973328:;
		_match_end_5131973168:;
	}
	if (jule::real(_12526_d->_field_kind->_method_enm())) {
		return;
	}
	_12526_d->_field_kind->_field_kind=_1304dc9b0_build_prim_type(_13013_kind);
}



inline void _13064b610_normalize_type(jule::Ref<_13064b610_Data> _15623_d) {
	{
		if (!((_13032cf90_int_assignable(jule::Str("int", 3),_15623_d)))) { goto _case_end_5131991744; }
		_case_begin_5131991744:;
		{
			_15623_d->_field_kind->_field_kind=_1304dc9b0_build_prim_type(jule::Str("int", 3));
			_15623_d->_field_constant->_method_set_i64(static_cast<jule::I64>(_15623_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_5131991488;
		_case_end_5131991744:;
		if (!((_13032cf90_int_assignable(jule::Str("uint", 4),_15623_d)))) { goto _case_end_5131991856; }
		_case_begin_5131991856:;
		{
			_15623_d->_field_kind->_field_kind=_1304dc9b0_build_prim_type(jule::Str("uint", 4));
			_15623_d->_field_constant->_method_set_u64(static_cast<jule::U64>(_15623_d->_field_constant->_method_as_f64()));
		}
		goto _match_end_5131991488;
		_case_end_5131991856:;
		_match_end_5131991488:;
	}
}



inline void _13064b610_apply_cast_kind_model(jule::Ref<_13064b610_Data> _16830_d) {
	_16830_d->_field_model=jule::Any(jule::new_struct<_1279cf930_CastingExprModel>(new( std::nothrow ) _1279cf930_CastingExprModel(_16830_d->_field_model,_16830_d->_field_cast_kind,_16830_d->_field_kind)));
}



inline void _13064b610_apply_cast_kind(jule::Ref<_13064b610_Data> _17624_d) {
	if ((!(jule::real(_17624_d->_field_cast_kind)))) {
		return;
	}
	_13064b610_apply_cast_kind_model(_17624_d);
	_17624_d->_field_kind=_17624_d->_field_cast_kind;
	jule::drop(_17624_d->_field_cast_kind);
}



inline jule::Ref<_13064b610_Data> _13064b610_build_void_data(void) {
	return jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("void", 4)))),jule::Ref<_1304dc9b0_TypeKind>(),false,jule::Bool(),false,jule::Bool(),jule::Bool(),jule::Any(),false,jule::Ref<_130c83140_Const>()));
}



inline jule::Str _13064b610_kind_by_bitsize(jule::Any _19720_expr) {
	{
		auto &_match_expr{ _19720_expr };
		if (!(_match_expr.type_is<jule::F64>())) { goto _case_end_5132017280; }
		_case_begin_5132017280:;
		{
			jule::F64 _20013_x = _19720_expr.operator jule::F64();
			return _130cb2be0_float_from_bits(static_cast<jule::U64>(_130cb2be0_bitsize_of_float(_20013_x)));
		}
		goto _match_end_5132011328;
		_case_end_5132017280:;
		if (!(_match_expr.type_is<jule::I64>())) { goto _case_end_5132017392; }
		_case_begin_5132017392:;
		{
			jule::I64 _20413_x = _19720_expr.operator jule::I64();
			return _130cb2be0_int_from_bits(static_cast<jule::U64>(_130cb2be0_bitsize_of_int(_20413_x)));
		}
		goto _match_end_5132011328;
		_case_end_5132017392:;
		if (!(_match_expr.type_is<jule::U64>())) { goto _case_end_5132016368; }
		_case_begin_5132016368:;
		{
			jule::U64 _20813_x = _19720_expr.operator jule::U64();
			return _130cb2be0_uint_from_bits(static_cast<jule::U64>(_130cb2be0_bitsize_of_uint(_20813_x)));
		}
		goto _match_end_5132011328;
		_case_end_5132016368:;
		_case_begin_5132015104:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_5132011328;
		_case_end_5132015104:;
		_match_end_5132011328:;
	}
}



inline jule::Str _13064b610_check_data_for_integer_indexing(jule::Ref<_13064b610_Data> _21640_d) {
	jule::Str _21652_err_key = jule::Str();
	if ((!(jule::real(_21640_d)))) {
		_21652_err_key = jule::Str("", 0);
		return _21652_err_key;
	}
	jule::Ref<_1304dc9b0_TypeKind> _22113_kind = _21640_d->_field_kind;
	if (jule::real(_22113_kind->_method_ref())) {
		_22113_kind=_22113_kind->_method_ref()->_field_elem;
	}
	{
		if (!(((!(jule::real(_22113_kind->_method_prim())))))) { goto _case_end_5132037872; }
		_case_begin_5132037872:;
		{
			_21652_err_key = jule::Str("invalid_expr", 12);
			return _21652_err_key;
		}
		goto _match_end_5132030784;
		_case_end_5132037872:;
		if (!(((!(_130d7f700_is_int(_22113_kind->_method_prim()->_method_to_str())))))) { goto _case_end_5132033472; }
		_case_begin_5132033472:;
		{
			_21652_err_key = jule::Str("invalid_expr", 12);
			return _21652_err_key;
		}
		goto _match_end_5132030784;
		_case_end_5132033472:;
		if (!((_21640_d->_method_is_const() && (_21640_d->_field_constant->_method_as_i64() < 0LL)))) { goto _case_end_5132033584; }
		_case_begin_5132033584:;
		{
			_21652_err_key = jule::Str("overflow_limits", 15);
			return _21652_err_key;
		}
		goto _match_end_5132030784;
		_case_end_5132033584:;
		_case_begin_5132033168:;
		{
			_21640_d->_field_cast_kind=jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("int", 3))));
			_13064b610_apply_cast_kind(_21640_d);
			_21652_err_key = jule::Str("", 0);
			return _21652_err_key;
		}
		goto _match_end_5132030784;
		_case_end_5132033168:;
		_match_end_5132030784:;
	}
}



inline jule::Bool _1304dc9b0_can_get_ptr(jule::Ref<_13064b610_Data> _44520_d) {
	if ((!(_44520_d->_field_lvalue)) || _44520_d->_method_is_const()) {
		return false;
	}
	{
		if (!((jule::real(_44520_d->_field_kind->_method_fnc()) || jule::real(_44520_d->_field_kind->_method_enm())))) { goto _case_end_5132047232; }
		_case_begin_5132047232:;
		{
			return false;
		}
		goto _match_end_5132045392;
		_case_end_5132047232:;
		_case_begin_5132046192:;
		{
			return true;
		}
		goto _match_end_5132045392;
		_case_end_5132046192:;
		_match_end_5132045392:;
	}
}



inline jule::Bool _1304dc9b0_is_lvalue(jule::Ref<_1304dc9b0_TypeKind> _45918_t) {
	return ((jule::real(_45918_t->_method_ref()) || jule::real(_45918_t->_method_ptr())) || jule::real(_45918_t->_method_slc())) || jule::real(_45918_t->_method_map());
}



inline jule::Bool _1304dc9b0_is_mut(jule::Ref<_1304dc9b0_TypeKind> _46315_t) {
	if (jule::real(_46315_t->_method_strct())) {
		return _46315_t->_method_strct()->_field_has_mut;
	}
	if (jule::real(_46315_t->_method_prim())) {
		jule::Ref<_1304dc9b0_Prim> _46813_p = _46315_t->_method_prim();
		return _46813_p->_method_is_any();
	}
	return (jule::real(_46315_t->_method_slc()) || jule::real(_46315_t->_method_ptr())) || jule::real(_46315_t->_method_ref());
}



inline jule::Bool _1304dc9b0_supports_cloning(jule::Ref<_1304dc9b0_TypeKind> _47425_k) {
	{
		if (!((jule::real(_47425_k->_method_prim())))) { goto _case_end_5132072624; }
		_case_begin_5132072624:;
		{
			return (!(_47425_k->_method_prim()->_method_is_any()));
		}
		goto _match_end_5132071328;
		_case_end_5132072624:;
		if (!((jule::real(_47425_k->_method_enm())))) { goto _case_end_5132072000; }
		_case_begin_5132072000:;
		{
			return true;
		}
		goto _match_end_5132071328;
		_case_end_5132072000:;
		if (!((jule::real(_47425_k->_method_fnc())))) { goto _case_end_5132072112; }
		_case_begin_5132072112:;
		{
			return true;
		}
		goto _match_end_5132071328;
		_case_end_5132072112:;
		if (!((jule::real(_47425_k->_method_ptr())))) { goto _case_end_5132072896; }
		_case_begin_5132072896:;
		{
			return true;
		}
		goto _match_end_5132071328;
		_case_end_5132072896:;
		if (!((jule::real(_47425_k->_method_slc())))) { goto _case_end_5132073008; }
		_case_begin_5132073008:;
		{
			return _1304dc9b0_supports_cloning(_47425_k->_method_slc()->_field_elem);
		}
		goto _match_end_5132071328;
		_case_end_5132073008:;
		if (!((jule::real(_47425_k->_method_map())))) { goto _case_end_5132073120; }
		_case_begin_5132073120:;
		{
			return _1304dc9b0_supports_cloning(_47425_k->_method_map()->_field_key) && _1304dc9b0_supports_cloning(_47425_k->_method_map()->_field_val);
		}
		goto _match_end_5132071328;
		_case_end_5132073120:;
		if (!((jule::real(_47425_k->_method_arr())))) { goto _case_end_5132073232; }
		_case_begin_5132073232:;
		{
			return _1304dc9b0_supports_cloning(_47425_k->_method_arr()->_field_elem);
		}
		goto _match_end_5132071328;
		_case_end_5132073232:;
		if (!((jule::real(_47425_k->_method_ref())))) { goto _case_end_5132073344; }
		_case_begin_5132073344:;
		{
			return _1304dc9b0_supports_cloning(_47425_k->_method_ref()->_field_elem);
		}
		goto _match_end_5132071328;
		_case_end_5132073344:;
		if (!((jule::real(_47425_k->_method_strct())))) { goto _case_end_5132073456; }
		_case_begin_5132073456:;
		{
			jule::Ref<_127b2e960_StructIns> _50117_s = _47425_k->_method_strct();
			if ((!(_50117_s->_field_has_mut))) {
				return true;
			}
			if (((!(jule::real(_50117_s->_field_decl))) || _50117_s->_field_decl->_field_cpp_linked) || (!(_50117_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
				return false;
			}
			return true;
		}
		goto _match_end_5132071328;
		_case_end_5132073456:;
		_case_begin_5132071536:;
		{
			return false;
		}
		goto _match_end_5132071328;
		_case_end_5132071536:;
		_match_end_5132071328:;
	}
}



inline jule::Bool _1304dc9b0_is_nil_compatible(jule::Ref<_1304dc9b0_TypeKind> _51526_t) {
	jule::Ref<_1304dc9b0_Prim> _5169_prim = _51526_t->_method_prim();
	if (jule::real(_5169_prim) && _5169_prim->_method_is_any()) {
		return true;
	}
	return ((((_51526_t->_method_is_nil() || jule::real(_51526_t->_method_fnc())) || jule::real(_51526_t->_method_ptr())) || jule::real(_51526_t->_method_trt())) || jule::real(_51526_t->_method_slc())) || jule::real(_51526_t->_method_map());
}



inline jule::Bool _1304dc9b0_is_valid_for_ref(jule::Ref<_1304dc9b0_TypeKind> _53125_t) {
	jule::Ref<_127b2e960_StructIns> _53213_s = _53125_t->_method_strct();
	if ((jule::real(_53213_s) && jule::real(_53213_s->_field_decl)) && _53213_s->_field_decl->_field_cpp_linked) {
		return false;
	}
	return (!(((jule::real(_53125_t->_method_enm()) || jule::real(_53125_t->_method_ptr())) || jule::real(_53125_t->_method_ref())) || jule::real(_53125_t->_method_arr())));
}



inline jule::Bool _1304dc9b0_is_variadicable(jule::Ref<_1304dc9b0_TypeKind> _53924_tk) {
	return jule::real(_53924_tk->_method_slc());
}



inline jule::Str _1304dc9b0_build_link_path_by_tokens(jule::Slice<_127941de0_Token> _54130_tokens) {
	jule::Str _54213_s = _54130_tokens[static_cast<jule::Int>(0LL)]._field_kind;
	{
		auto __julec_range_expr = _54130_tokens.slice(static_cast<jule::Int>(1LL));
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_127941de0_Token _1304dc9b0_token = *__julec_range_begin;
			_iter_begin_5131677024:;
			{
				_54213_s+=jule::Str("::", 2);
				_54213_s+=_1304dc9b0_token._field_kind;
			}
			_iter_next_5131677024:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1304dc9b0_token = *__julec_range_begin; goto _iter_begin_5131677024; }
			_iter_end_5131677024:;
		}
	}
	return _54213_s;
}



inline jule::Ref<_1304dc9b0_Prim> _1304dc9b0_build_prim_type(jule::Str _55020_kind) {
	return jule::new_struct<_1304dc9b0_Prim>(new( std::nothrow ) _1304dc9b0_Prim(_55020_kind));
}



inline jule::Bool _1304dc9b0_is_prim(jule::Str _55712_kind) {
	return (((((((((((((((_55712_kind == jule::Str("i8", 2)) || (_55712_kind == jule::Str("i16", 3))) || (_55712_kind == jule::Str("i32", 3))) || (_55712_kind == jule::Str("i64", 3))) || (_55712_kind == jule::Str("u8", 2))) || (_55712_kind == jule::Str("u16", 3))) || (_55712_kind == jule::Str("u32", 3))) || (_55712_kind == jule::Str("u64", 3))) || (_55712_kind == jule::Str("f32", 3))) || (_55712_kind == jule::Str("f64", 3))) || (_55712_kind == jule::Str("int", 3))) || (_55712_kind == jule::Str("uint", 4))) || (_55712_kind == jule::Str("uintptr", 7))) || (_55712_kind == jule::Str("bool", 4))) || (_55712_kind == jule::Str("str", 3))) || (_55712_kind == jule::Str("any", 3));
}



inline std::tuple<jule::Ref<_13032dc50_SymbolTable>,jule::Slice<_136e99d00_Log>> _13064d450_build_symbols(jule::Ref<_1275d0e60_Ast> _922_ast,jule::Trait<_1300a4650_Importer> _937_importer,jule::Ref<_127ff3480_SymbolBuilder> _961_owner) {
	jule::Ref<_127ff3480_SymbolBuilder> _1013_sb = jule::new_struct<_127ff3480_SymbolBuilder>(new( std::nothrow ) _127ff3480_SymbolBuilder(_961_owner,_937_importer,jule::Slice<_136e99d00_Log>(),_922_ast,jule::Ref<_13032dc50_SymbolTable>()));
	_1013_sb->_method_build();
	if (_1013_sb->_field_errors.len() == 0LL) {
		return std::make_tuple(_1013_sb->_field_table,nullptr);
	}
	return std::make_tuple(jule::new_ref<_13032dc50_SymbolTable>(),_1013_sb->_field_errors);
}



inline std::tuple<jule::Ref<_1300a4650_Package>,jule::Slice<_136e99d00_Log>> _13064d450___analyze_package(jule::Slice<jule::Ref<_1275d0e60_Ast>> _2326_files,jule::Trait<_1300a4650_Importer> _2345_importer) {
	jule::Slice<jule::Ref<_13032dc50_SymbolTable>> _2513_tables = jule::Slice<jule::Ref<_13032dc50_SymbolTable>>::alloc(static_cast<jule::Int>(static_cast<jule::I64>(_2326_files.len())));
	{
		auto &__julec_range_expr = _2326_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _13064d450_i = 0;
			jule::Ref<_1275d0e60_Ast> _13064d450_f = *__julec_range_begin;
			_iter_begin_5131704464:;
			{
				jule::Ref<_13032dc50_SymbolTable> _2718_table;
				jule::Slice<_136e99d00_Log> _2729_errors;
				std::tie(_2718_table,_2729_errors) = _13064d450_build_symbols(_13064d450_f,_2345_importer,jule::new_ref<_127ff3480_SymbolBuilder>());
				if (_2729_errors.len() > 0LL) {
					return std::make_tuple(jule::new_ref<_1300a4650_Package>(),_2729_errors);
				}
				_2513_tables[static_cast<jule::Int>(_13064d450_i)]=_2718_table;
			}
			_iter_next_5131704464:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_13064d450_i; _13064d450_f = *__julec_range_begin; goto _iter_begin_5131704464; }
			_iter_end_5131704464:;
		}
	}
	jule::Ref<_1300a20d0_Sema> _3413_sema = jule::new_struct<_1300a20d0_Sema>(new( std::nothrow ) _1300a20d0_Sema());
	_3413_sema->_method_check(_2513_tables);
	if (_3413_sema->_field_errors.len() > 0LL) {
		return std::make_tuple(jule::new_ref<_1300a4650_Package>(),_3413_sema->_field_errors);
	}
	jule::Ref<_1300a4650_Package> _4013_pkg = jule::new_struct<_1300a4650_Package>(new( std::nothrow ) _1300a4650_Package(_3413_sema->_field_files));
	return std::make_tuple(_4013_pkg,nullptr);
}



inline std::tuple<jule::Ref<_1300a4650_Package>,jule::Slice<_136e99d00_Log>> _13064d450_analyze_package(jule::Slice<jule::Ref<_1275d0e60_Ast>> _6428_files,jule::Trait<_1300a4650_Importer> _6447_importer) {
	if (_6428_files.len() == 0LL) {
		return std::make_tuple(jule::new_ref<_1300a4650_Package>(),nullptr);
	}
	return _13064d450___analyze_package(_6428_files,_6447_importer);
}



inline void _130b8f5f0_init(void) {
	_130b8f5f0_BUILTIN_FN_OUT->_field_caller=_130b8f5f0_builtin_caller_out;
	_130b8f5f0_BUILTIN_FN_OUTLN->_field_caller=_130b8f5f0_builtin_caller_outln;
	_130b8f5f0_BUILTIN_FN_NEW->_field_caller=_130b8f5f0_builtin_caller_new;
	_130b8f5f0_BUILTIN_FN_REAL->_field_caller=_130b8f5f0_builtin_caller_real;
	_130b8f5f0_BUILTIN_FN_DROP->_field_caller=_130b8f5f0_builtin_caller_drop;
	_130b8f5f0_BUILTIN_FN_PANIC->_field_caller=_130b8f5f0_builtin_caller_panic;
	_130b8f5f0_BUILTIN_FN_MAKE->_field_caller=_130b8f5f0_builtin_caller_make;
	_130b8f5f0_BUILTIN_FN_APPEND->_field_caller=_130b8f5f0_builtin_caller_append;
	_130b8f5f0_BUILTIN_FN_COPY->_field_caller=_130b8f5f0_builtin_caller_copy;
	_130b8f5f0_BUILTIN_FN_RECOVER->_field_caller=_130b8f5f0_builtin_caller_recover;
	_130b8f5f0_BUILTIN_FN_CLONE->_field_caller=_130b8f5f0_builtin_caller_clone;
	_130b8f5f0_BUILTIN_FN_STD_MEM_SIZE_OF->_field_caller=_130b8f5f0_builtin_caller_std_mem_size_of;
	_130b8f5f0_BUILTIN_FN_STD_MEM_ALIGN_OF->_field_caller=_130b8f5f0_builtin_caller_std_mem_align_of;
	jule::Ref<_127ed52e0_Fn> _9113_error_method = _130b8f5f0_BUILTIN_TRAIT_ERROR->_method_find_method(jule::Str("error", 5));
	jule::Ref<_127ed52e0_FnIns> _9213_error_method_ins = _9113_error_method->_method_instance();
	_9213_error_method_ins->_field_result=jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("str", 3))));
	_9213_error_method_ins->_field_caller=_130b8f5f0_builtin_caller_common;
	_9113_error_method->_method_append_instance(_9213_error_method_ins);
}



inline jule::Ref<_127ed52e0_FnIns> _130b8f5f0_find_builtin_fn(jule::Str _9820_ident) {
	{
		auto &_match_expr{ _9820_ident };
		if (!((jule::Str("out", 3)) == _match_expr)) { goto _case_end_5132823632; }
		_case_begin_5132823632:;
		{
			return _130b8f5f0_BUILTIN_FN_OUT;
		}
		goto _match_end_5132822064;
		_case_end_5132823632:;
		if (!((jule::Str("outln", 5)) == _match_expr)) { goto _case_end_5132824112; }
		_case_begin_5132824112:;
		{
			return _130b8f5f0_BUILTIN_FN_OUTLN;
		}
		goto _match_end_5132822064;
		_case_end_5132824112:;
		if (!((jule::Str("new", 3)) == _match_expr)) { goto _case_end_5132824224; }
		_case_begin_5132824224:;
		{
			return _130b8f5f0_BUILTIN_FN_NEW;
		}
		goto _match_end_5132822064;
		_case_end_5132824224:;
		if (!((jule::Str("real", 4)) == _match_expr)) { goto _case_end_5132823856; }
		_case_begin_5132823856:;
		{
			return _130b8f5f0_BUILTIN_FN_REAL;
		}
		goto _match_end_5132822064;
		_case_end_5132823856:;
		if (!((jule::Str("drop", 4)) == _match_expr)) { goto _case_end_5132823968; }
		_case_begin_5132823968:;
		{
			return _130b8f5f0_BUILTIN_FN_DROP;
		}
		goto _match_end_5132822064;
		_case_end_5132823968:;
		if (!((jule::Str("panic", 5)) == _match_expr)) { goto _case_end_5132822992; }
		_case_begin_5132822992:;
		{
			return _130b8f5f0_BUILTIN_FN_PANIC;
		}
		goto _match_end_5132822064;
		_case_end_5132822992:;
		if (!((jule::Str("make", 4)) == _match_expr)) { goto _case_end_5132823104; }
		_case_begin_5132823104:;
		{
			return _130b8f5f0_BUILTIN_FN_MAKE;
		}
		goto _match_end_5132822064;
		_case_end_5132823104:;
		if (!((jule::Str("append", 6)) == _match_expr)) { goto _case_end_5132823232; }
		_case_begin_5132823232:;
		{
			return _130b8f5f0_BUILTIN_FN_APPEND;
		}
		goto _match_end_5132822064;
		_case_end_5132823232:;
		if (!((jule::Str("copy", 4)) == _match_expr)) { goto _case_end_5132824432; }
		_case_begin_5132824432:;
		{
			return _130b8f5f0_BUILTIN_FN_COPY;
		}
		goto _match_end_5132822064;
		_case_end_5132824432:;
		if (!((jule::Str("recover", 7)) == _match_expr)) { goto _case_end_5132824544; }
		_case_begin_5132824544:;
		{
			return _130b8f5f0_BUILTIN_FN_RECOVER;
		}
		goto _match_end_5132822064;
		_case_end_5132824544:;
		if (!((jule::Str("clone", 5)) == _match_expr)) { goto _case_end_5132824656; }
		_case_begin_5132824656:;
		{
			return _130b8f5f0_BUILTIN_FN_CLONE;
		}
		goto _match_end_5132822064;
		_case_end_5132824656:;
		_case_begin_5132822160:;
		{
			return jule::new_ref<_127ed52e0_FnIns>();
		}
		goto _match_end_5132822064;
		_case_end_5132822160:;
		_match_end_5132822064:;
	}
}



inline jule::Ref<_1304dc9b0_TypeAlias> _130b8f5f0_find_builtin_type_alias(jule::Str _11528_ident) {
	{
		auto &_match_expr{ _11528_ident };
		if (!((jule::Str("byte", 4)) == _match_expr)) { goto _case_end_5132834464; }
		_case_begin_5132834464:;
		{
			return _130b8f5f0_BUILTIN_TYPE_ALIAS_BYTE;
		}
		goto _match_end_5132832768;
		_case_end_5132834464:;
		if (!((jule::Str("rune", 4)) == _match_expr)) { goto _case_end_5132834720; }
		_case_begin_5132834720:;
		{
			return _130b8f5f0_BUILTIN_TYPE_ALIAS_RUNE;
		}
		goto _match_end_5132832768;
		_case_end_5132834720:;
		_case_begin_5132832896:;
		{
			return jule::new_ref<_1304dc9b0_TypeAlias>();
		}
		goto _match_end_5132832768;
		_case_end_5132832896:;
		_match_end_5132832768:;
	}
}



inline jule::Ref<_130099320_Trait> _130b8f5f0_find_builtin_trait(jule::Str _12323_ident) {
	{
		auto &_match_expr{ _12323_ident };
		if (!((jule::Str("Error", 5)) == _match_expr)) { goto _case_end_5132837952; }
		_case_begin_5132837952:;
		{
			return _130b8f5f0_BUILTIN_TRAIT_ERROR;
		}
		goto _match_end_5132833856;
		_case_end_5132837952:;
		_case_begin_5132836976:;
		{
			return jule::new_ref<_130099320_Trait>();
		}
		goto _match_end_5132833856;
		_case_end_5132836976:;
		_match_end_5132833856:;
	}
}



inline jule::Any _130b8f5f0_find_builtin_def(jule::Str _13021_ident) {
	jule::Ref<_127ed52e0_FnIns> _13113_f = _130b8f5f0_find_builtin_fn(_13021_ident);
	if (jule::real(_13113_f)) {
		return _13113_f;
	}
	jule::Ref<_1304dc9b0_TypeAlias> _13613_ta = _130b8f5f0_find_builtin_type_alias(_13021_ident);
	if (jule::real(_13613_ta)) {
		return _13613_ta;
	}
	jule::Ref<_130099320_Trait> _14113_t = _130b8f5f0_find_builtin_trait(_13021_ident);
	if (jule::real(_14113_t)) {
		return _14113_t;
	}
	return nullptr;
}



inline jule::Any _130b8f5f0_find_builtin_def_std_mem(jule::Str _14929_ident) {
	{
		auto &_match_expr{ _14929_ident };
		if (!((jule::Str("size_of", 7)) == _match_expr)) { goto _case_end_5132847840; }
		_case_begin_5132847840:;
		{
			return _130b8f5f0_BUILTIN_FN_STD_MEM_SIZE_OF;
		}
		goto _match_end_5132844944;
		_case_end_5132847840:;
		if (!((jule::Str("align_of", 8)) == _match_expr)) { goto _case_end_5132848016; }
		_case_begin_5132848016:;
		{
			return _130b8f5f0_BUILTIN_FN_STD_MEM_ALIGN_OF;
		}
		goto _match_end_5132844944;
		_case_end_5132848016:;
		_case_begin_5132845600:;
		{
			return nullptr;
		}
		goto _match_end_5132844944;
		_case_end_5132845600:;
		_match_end_5132844944:;
	}
}



inline jule::Any _130b8f5f0_find_package_builtin_def(jule::Str _15729_link_path,jule::Str _15745_ident) {
	{
		auto &_match_expr{ _15729_link_path };
		if (!((jule::Str("std::mem", 8)) == _match_expr)) { goto _case_end_5132851904; }
		_case_begin_5132851904:;
		{
			return _130b8f5f0_find_builtin_def_std_mem(_15745_ident);
		}
		goto _match_end_5132850320;
		_case_end_5132851904:;
		_case_begin_5132850464:;
		{
			return nullptr;
		}
		goto _match_end_5132850320;
		_case_end_5132850464:;
		_match_end_5132850320:;
	}
}



inline jule::Ref<_13064b610_Data> _130b8f5f0_builtin_caller_common_plain(jule::Ref<_13064b610_Eval> _16436_e,jule::Ref<_1275d7180_FnCallExpr> _16450_fc,jule::Ref<_13064b610_Data> _16471_d) {
	jule::Ref<_127ed52e0_FnIns> _16513_f = _16471_d->_field_kind->_method_fnc();
	_13032cf90_FnCallArgChecker _16713_fcac = _13032cf90_FnCallArgChecker(_16436_e,_16450_fc->_field_args,_16450_fc->_field_token,_16513_f,false,jule::Slice<jule::Any>());
	_16713_fcac._method_check();
	jule::Ref<_1279cf930_FnCallExprModel> _17613_model = jule::new_struct<_1279cf930_FnCallExprModel>(new( std::nothrow ) _1279cf930_FnCallExprModel(_16513_f,_16450_fc->_field_concurrent,_16471_d->_field_model,_16713_fcac._field_arg_models));
	if ((!(jule::real(_16513_f->_field_result)))) {
		_16471_d=_13064b610_build_void_data();
	} else {
		_16471_d=jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(_16513_f->_field_result,jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_130c83140_Const>()));
	}
	_16471_d->_field_model=jule::Any(_17613_model);
	return _16471_d;
}



inline jule::Ref<_13064b610_Data> _130b8f5f0_builtin_caller_common(jule::Ref<_13064b610_Eval> _19530_e,jule::Ref<_1275d7180_FnCallExpr> _19544_fc,jule::Ref<_13064b610_Data> _19565_d) {
	if (_19544_fc->_field_generics.len() > 0LL) {
		_19530_e->_method_push_err(_19544_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	return _130b8f5f0_builtin_caller_common_plain(_19530_e,_19544_fc,_19565_d);
}



inline jule::Ref<_13064b610_Data> _130b8f5f0_builtin_caller_common_mut(jule::Ref<_13064b610_Eval> _20334_e,jule::Ref<_1275d7180_FnCallExpr> _20348_fc,jule::Ref<_13064b610_Data> _20369_d) {
	if ((!(_20369_d->_field_mutable))) {
		_20334_e->_method_push_err(_20348_fc->_field_token,jule::Str("mutable_operation_on_immutable", 30),jule::Slice<jule::Any>({}));
	}
	return _130b8f5f0_builtin_caller_common(_20334_e,_20348_fc,_20369_d);
}



inline jule::Ref<_13064b610_Data> _130b8f5f0_builtin_caller_out(jule::Ref<_13064b610_Eval> _21027_e,jule::Ref<_1275d7180_FnCallExpr> _21041_fc,jule::Ref<_13064b610_Data> ) {
	if (_21041_fc->_field_generics.len() > 0LL) {
		_21027_e->_method_push_err(_21041_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	if (_21041_fc->_field_args.len() < 1LL) {
		_21027_e->_method_push_err(_21041_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("v", 1))}));
		return jule::new_ref<_13064b610_Data>();
	}
	if (_21041_fc->_field_args.len() > 1LL) {
		_21027_e->_method_push_err(_21041_fc->_field_args[static_cast<jule::Int>(1LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_13064b610_Data> _22213_expr = _21027_e->_method_eval_expr(_21041_fc->_field_args[static_cast<jule::Int>(0LL)]);
	if ((!(jule::real(_22213_expr)))) {
		return jule::new_ref<_13064b610_Data>();
	}
	if (_22213_expr->_method_is_void() || jule::real(_22213_expr->_field_kind->_method_fnc())) {
		_21027_e->_method_push_err(_21041_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("invalid_expr", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_13064b610_Data>();
	}
	jule::Ref<_13064b610_Data> _23213_d = _13064b610_build_void_data();
	_23213_d->_field_model=jule::Any(jule::new_struct<_1279cf930_BuiltinOutCallExprModel>(new( std::nothrow ) _1279cf930_BuiltinOutCallExprModel(_22213_expr->_field_model)));
	return _23213_d;
}



inline jule::Ref<_13064b610_Data> _130b8f5f0_builtin_caller_outln(jule::Ref<_13064b610_Eval> _23729_e,jule::Ref<_1275d7180_FnCallExpr> _23743_fc,jule::Ref<_13064b610_Data> ) {
	jule::Ref<_13064b610_Data> _23813_d = _130b8f5f0_builtin_caller_out(_23729_e,_23743_fc,jule::new_ref<_13064b610_Data>());
	if ((!(jule::real(_23813_d)))) {
		return jule::new_ref<_13064b610_Data>();
	}
	_23813_d->_field_model=jule::Any(jule::new_struct<_1279cf930_BuiltinOutlnCallExprModel>(new( std::nothrow ) _1279cf930_BuiltinOutlnCallExprModel(_23813_d->_field_model.operator jule::Ref<_1279cf930_BuiltinOutCallExprModel>()->_field_expr)));
	return _23813_d;
}



inline jule::Ref<_13064b610_Data> _130b8f5f0_builtin_caller_new(jule::Ref<_13064b610_Eval> _24927_e,jule::Ref<_1275d7180_FnCallExpr> _24941_fc,jule::Ref<_13064b610_Data> _24962_d) {
	if (_24941_fc->_field_generics.len() > 0LL) {
		_24927_e->_method_push_err(_24941_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	if (_24941_fc->_field_args.len() < 1LL) {
		_24927_e->_method_push_err(_24941_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("type", 4))}));
		return jule::new_ref<_13064b610_Data>();
	}
	if (_24941_fc->_field_args.len() > 2LL) {
		_24927_e->_method_push_err(_24941_fc->_field_args[static_cast<jule::Int>(2LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_13064b610_Data> _26113_t = _24927_e->_method_eval_expr_kind(_24941_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_kind);
	if ((!(jule::real(_26113_t)))) {
		return jule::new_ref<_13064b610_Data>();
	}
	if ((!(_26113_t->_field_decl))) {
		_24927_e->_method_push_err(_24941_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("invalid_type", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_13064b610_Data>();
	}
	if ((!(_1304dc9b0_is_valid_for_ref(_26113_t->_field_kind)))) {
		jule::Ref<_127b2e960_StructIns> _27217_s = _26113_t->_field_kind->_method_strct();
		if ((jule::real(_27217_s) && jule::real(_27217_s->_field_decl)) && _27217_s->_field_decl->_field_cpp_linked) {
			_24927_e->_method_push_err(_24941_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("cpp_linked_struct_for_ref", 25),jule::Slice<jule::Any>({}));
		} else {
			_24927_e->_method_push_err(_24941_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("invalid_type", 12),jule::Slice<jule::Any>({}));
		}
		return jule::new_ref<_13064b610_Data>();
	}
	_24962_d->_field_kind=jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),jule::new_struct<_1304dc9b0_Ref>(new( std::nothrow ) _1304dc9b0_Ref(_26113_t->_field_kind->_method_clone()))));
	if (_24941_fc->_field_args.len() == 2LL) {
		jule::Ref<_13064b610_Data> _28417_init = _24927_e->_field_s->_method_evalp(_24941_fc->_field_args[static_cast<jule::Int>(1LL)],_24927_e->_field_lookup,_26113_t->_field_kind);
		if (jule::real(_28417_init)) {
			_26113_t->_field_mutable=true;
			_1300a11b0_check_mut(_24927_e->_field_s,_26113_t,_28417_init,_24941_fc->_field_args[static_cast<jule::Int>(1LL)]->_field_token);
			_24927_e->_field_s->_method_check_assign_type(_26113_t->_field_kind,_28417_init,_24941_fc->_field_args[static_cast<jule::Int>(1LL)]->_field_token,false);
			if (jule::real(_28417_init->_field_kind->_method_ref())) {
				_28417_init->_field_model=jule::Any(jule::new_struct<_1279cf930_ExplicitDerefExprModel>(new( std::nothrow ) _1279cf930_ExplicitDerefExprModel(_28417_init->_field_model)));
			}
			_24962_d->_field_model=jule::Any(jule::new_struct<_1279cf930_BuiltinNewCallExprModel>(new( std::nothrow ) _1279cf930_BuiltinNewCallExprModel(_26113_t->_field_kind,_28417_init->_field_model)));
		}
	} else {
		_24962_d->_field_model=jule::Any(jule::new_struct<_1279cf930_BuiltinNewCallExprModel>(new( std::nothrow ) _1279cf930_BuiltinNewCallExprModel(_26113_t->_field_kind,jule::Any())));
	}
	return _24962_d;
}



inline jule::Ref<_13064b610_Data> _130b8f5f0_builtin_caller_real(jule::Ref<_13064b610_Eval> _30828_e,jule::Ref<_1275d7180_FnCallExpr> _30842_fc,jule::Ref<_13064b610_Data> _30863_d) {
	if (_30842_fc->_field_generics.len() > 0LL) {
		_30828_e->_method_push_err(_30842_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	if (_30842_fc->_field_args.len() < 1LL) {
		_30828_e->_method_push_err(_30842_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("ref", 3))}));
		return jule::new_ref<_13064b610_Data>();
	}
	if (_30842_fc->_field_args.len() > 1LL) {
		_30828_e->_method_push_err(_30842_fc->_field_args[static_cast<jule::Int>(1LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_13064b610_Data> _32013_ref = _30828_e->_method_eval_expr(_30842_fc->_field_args[static_cast<jule::Int>(0LL)]);
	if ((!(jule::real(_32013_ref)))) {
		return jule::new_ref<_13064b610_Data>();
	}
	if ((!(jule::real(_32013_ref->_field_kind->_method_ref())))) {
		_30828_e->_method_push_err(_30842_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("invalid_expr", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_13064b610_Data>();
	}
	_30863_d->_field_kind=_130b8f5f0_BUILTIN_FN_REAL->_field_result;
	_30863_d->_field_model=jule::Any(jule::new_struct<_1279cf930_BuiltinRealCallExprModel>(new( std::nothrow ) _1279cf930_BuiltinRealCallExprModel(_32013_ref->_field_model)));
	return _30863_d;
}



inline jule::Ref<_13064b610_Data> _130b8f5f0_builtin_caller_drop(jule::Ref<_13064b610_Eval> _33528_e,jule::Ref<_1275d7180_FnCallExpr> _33542_fc,jule::Ref<_13064b610_Data> ) {
	if (_33542_fc->_field_generics.len() > 0LL) {
		_33528_e->_method_push_err(_33542_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	if (_33542_fc->_field_args.len() < 1LL) {
		_33528_e->_method_push_err(_33542_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("ref", 3))}));
		return jule::new_ref<_13064b610_Data>();
	}
	if (_33542_fc->_field_args.len() > 1LL) {
		_33528_e->_method_push_err(_33542_fc->_field_args[static_cast<jule::Int>(2LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_13064b610_Data> _34713_ref = _33528_e->_method_eval_expr(_33542_fc->_field_args[static_cast<jule::Int>(0LL)]);
	if ((!(jule::real(_34713_ref)))) {
		return jule::new_ref<_13064b610_Data>();
	}
	if ((!(jule::real(_34713_ref->_field_kind->_method_ref())))) {
		_33528_e->_method_push_err(_33542_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("invalid_expr", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_13064b610_Data>();
	}
	_1300a11b0_check_mut(_33528_e->_field_s,_34713_ref,jule::new_ref<_13064b610_Data>(),_33542_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token);
	jule::Ref<_13064b610_Data> _35913_d = _13064b610_build_void_data();
	_35913_d->_field_model=jule::Any(jule::new_struct<_1279cf930_BuiltinDropCallExprModel>(new( std::nothrow ) _1279cf930_BuiltinDropCallExprModel(_34713_ref->_field_model)));
	return _35913_d;
}



inline jule::Ref<_13064b610_Data> _130b8f5f0_builtin_caller_panic(jule::Ref<_13064b610_Eval> _36429_e,jule::Ref<_1275d7180_FnCallExpr> _36443_fc,jule::Ref<_13064b610_Data> ) {
	if (_36443_fc->_field_generics.len() > 0LL) {
		_36429_e->_method_push_err(_36443_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	if (_36443_fc->_field_args.len() < 1LL) {
		_36429_e->_method_push_err(_36443_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("error", 5))}));
		return jule::new_ref<_13064b610_Data>();
	}
	if (_36443_fc->_field_args.len() > 1LL) {
		_36429_e->_method_push_err(_36443_fc->_field_args[static_cast<jule::Int>(2LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_13064b610_Data> _37613_expr = _36429_e->_method_eval_expr(_36443_fc->_field_args[static_cast<jule::Int>(0LL)]);
	if ((!(jule::real(_37613_expr)))) {
		return jule::new_ref<_13064b610_Data>();
	}
	if (jule::real(_37613_expr->_field_kind->_method_strct())) {
		jule::Ref<_127b2e960_StructIns> _38213_s = _37613_expr->_field_kind->_method_strct();
		if (_38213_s->_field_decl->_method_is_implements(_130b8f5f0_BUILTIN_TRAIT_ERROR)) {
			_37613_expr->_field_cast_kind=jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_130b8f5f0_BUILTIN_TRAIT_ERROR));
			_13064b610_apply_cast_kind(_37613_expr);
		}
	}
	jule::Ref<_13064b610_Data> _39113_d = _13064b610_build_void_data();
	_39113_d->_field_model=jule::Any(jule::new_struct<_1279cf930_BuiltinPanicCallExprModel>(new( std::nothrow ) _1279cf930_BuiltinPanicCallExprModel(_37613_expr->_field_model)));
	return _39113_d;
}



inline jule::Ref<_13064b610_Data> _130b8f5f0_builtin_caller_make(jule::Ref<_13064b610_Eval> _39628_e,jule::Ref<_1275d7180_FnCallExpr> _39642_fc,jule::Ref<_13064b610_Data> _39663_d) {
	if (_39642_fc->_field_generics.len() > 0LL) {
		_39628_e->_method_push_err(_39642_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	if (_39642_fc->_field_args.len() < 2LL) {
		if (_39642_fc->_field_args.len() == 1LL) {
			_39628_e->_method_push_err(_39642_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("size", 4))}));
			return jule::new_ref<_13064b610_Data>();
		}
		_39628_e->_method_push_err(_39642_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("type, size", 10))}));
		return jule::new_ref<_13064b610_Data>();
	}
	if (_39642_fc->_field_args.len() > 3LL) {
		_39628_e->_method_push_err(_39642_fc->_field_args[static_cast<jule::Int>(3LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_13064b610_Data> _41213_t = _39628_e->_method_eval_expr_kind(_39642_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_kind);
	if ((!(jule::real(_41213_t)))) {
		return jule::new_ref<_13064b610_Data>();
	}
	if ((!(_41213_t->_field_decl)) || (!(jule::real(_41213_t->_field_kind->_method_slc())))) {
		_39628_e->_method_push_err(_39642_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("invalid_type", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_13064b610_Data>();
	}
	_39663_d->_field_kind=_41213_t->_field_kind;
	jule::Ref<_13064b610_Data> _42413_len = _39628_e->_field_s->_method_evalp(_39642_fc->_field_args[static_cast<jule::Int>(1LL)],_39628_e->_field_lookup,_41213_t->_field_kind);
	if ((!(jule::real(_42413_len)))) {
		return _39663_d;
	}
	_39628_e->_method_check_integer_indexing_by_data(_42413_len,_39642_fc->_field_args[static_cast<jule::Int>(1LL)]->_field_token);
	if (_39642_fc->_field_args.len() == 3LL) {
		jule::Ref<_13064b610_Data> _43217_cap = _39628_e->_field_s->_method_evalp(_39642_fc->_field_args[static_cast<jule::Int>(2LL)],_39628_e->_field_lookup,_41213_t->_field_kind);
		if ((!(jule::real(_43217_cap)))) {
			return _39663_d;
		}
		_39628_e->_method_check_integer_indexing_by_data(_43217_cap,_39642_fc->_field_args[static_cast<jule::Int>(2LL)]->_field_token);
		_39663_d->_field_model=jule::Any(jule::new_struct<_1279cf930_BuiltinMakeCallExprModel>(new( std::nothrow ) _1279cf930_BuiltinMakeCallExprModel(_41213_t->_field_kind,_42413_len->_field_model,_43217_cap->_field_model)));
	} else {
		_39663_d->_field_model=jule::Any(jule::new_struct<_1279cf930_BuiltinMakeCallExprModel>(new( std::nothrow ) _1279cf930_BuiltinMakeCallExprModel(_41213_t->_field_kind,_42413_len->_field_model,jule::Any())));
	}
	return _39663_d;
}



inline jule::Ref<_13064b610_Data> _130b8f5f0_builtin_caller_append(jule::Ref<_13064b610_Eval> _45330_e,jule::Ref<_1275d7180_FnCallExpr> _45344_fc,jule::Ref<_13064b610_Data> _45365_d) {
	if (_45344_fc->_field_generics.len() > 0LL) {
		_45330_e->_method_push_err(_45344_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	if (_45344_fc->_field_args.len() < 2LL) {
		if (_45344_fc->_field_args.len() == 1LL) {
			_45330_e->_method_push_err(_45344_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return jule::new_ref<_13064b610_Data>();
		}
		_45330_e->_method_push_err(_45344_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return jule::new_ref<_13064b610_Data>();
	}
	jule::Ref<_13064b610_Data> _46613_t = _45330_e->_method_eval_expr(_45344_fc->_field_args[static_cast<jule::Int>(0LL)]);
	if ((!(jule::real(_46613_t)))) {
		return jule::new_ref<_13064b610_Data>();
	}
	jule::Bool _47113_ref = false;
	if (jule::real(_46613_t->_field_kind->_method_ref())) {
		_46613_t->_field_kind=_46613_t->_field_kind->_method_ref()->_field_elem;
		_47113_ref=true;
	}
	if ((!(jule::real(_46613_t->_field_kind->_method_slc())))) {
		_45330_e->_method_push_err(_45344_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("invalid_expr", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_13064b610_Data>();
	}
	jule::Ref<_127ed52e0_FnIns> _48213_f = jule::new_struct<_127ed52e0_FnIns>(new( std::nothrow ) _127ed52e0_FnIns(jule::Ref<_127b2e960_StructIns>(),jule::Ref<_127ed52e0_Fn>(),jule::Slice<jule::Ref<_1304dc9b0_TypeKind>>(),jule::Slice<jule::Ref<_127ed52e0_ParamIns>>({jule::new_struct<_127ed52e0_ParamIns>(new( std::nothrow ) _127ed52e0_ParamIns(jule::new_struct<_127ed52e0_Param>(new( std::nothrow ) _127ed52e0_Param(_127941de0_Token(),true,jule::Bool(),jule::Bool(),jule::Ref<_1304dc9b0_TypeSymbol>(),jule::Str())),_46613_t->_field_kind->_method_clone())),jule::new_struct<_127ed52e0_ParamIns>(new( std::nothrow ) _127ed52e0_ParamIns(jule::new_struct<_127ed52e0_Param>(new( std::nothrow ) _127ed52e0_Param(_127941de0_Token(),true,true,jule::Bool(),jule::Ref<_1304dc9b0_TypeSymbol>(),jule::Str())),_46613_t->_field_kind->_method_slc()->_field_elem->_method_clone()))}),_46613_t->_field_kind->_method_clone(),jule::Ref<_1300a11b0_Scope>(),_130b8f5f0_builtin_caller_common_plain,jule::Bool(),jule::Bool()));
	_45365_d->_field_kind=jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_48213_f));
	_45365_d->_field_model=jule::Any(jule::new_struct<_1279cf930_CommonIdentExprModel>(new( std::nothrow ) _1279cf930_CommonIdentExprModel(jule::Str("append", 6))));
	_45365_d=_130b8f5f0_builtin_caller_common_plain(_45330_e,_45344_fc,_45365_d);
	if (jule::real(_45365_d) && _47113_ref) {
		_45365_d->_field_model.operator jule::Ref<_1279cf930_FnCallExprModel>()->_field_args[static_cast<jule::Int>(0LL)]=jule::Any(jule::new_struct<_1279cf930_ExplicitDerefExprModel>(new( std::nothrow ) _1279cf930_ExplicitDerefExprModel(_46613_t->_field_model)));
	}
	return _45365_d;
}



inline jule::Ref<_13064b610_Data> _130b8f5f0_builtin_caller_copy(jule::Ref<_13064b610_Eval> _51328_e,jule::Ref<_1275d7180_FnCallExpr> _51342_fc,jule::Ref<_13064b610_Data> _51363_d) {
	if (_51342_fc->_field_generics.len() > 0LL) {
		_51328_e->_method_push_err(_51342_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	if (_51342_fc->_field_args.len() < 2LL) {
		if (_51342_fc->_field_args.len() == 1LL) {
			_51328_e->_method_push_err(_51342_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("src", 3))}));
			return jule::new_ref<_13064b610_Data>();
		}
		_51328_e->_method_push_err(_51342_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("src, values", 11))}));
		return jule::new_ref<_13064b610_Data>();
	}
	if (_51342_fc->_field_args.len() > 2LL) {
		_51328_e->_method_push_err(_51342_fc->_field_args[static_cast<jule::Int>(2LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_13064b610_Data> _52913_t = _51328_e->_method_eval_expr(_51342_fc->_field_args[static_cast<jule::Int>(0LL)]);
	if ((!(jule::real(_52913_t)))) {
		return jule::new_ref<_13064b610_Data>();
	}
	jule::Bool _53413_ref = false;
	if (jule::real(_52913_t->_field_kind->_method_ref())) {
		_52913_t->_field_kind=_52913_t->_field_kind->_method_ref()->_field_elem;
		_53413_ref=false;
	}
	if ((!(jule::real(_52913_t->_field_kind->_method_slc())))) {
		_51328_e->_method_push_err(_51342_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("invalid_expr", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_13064b610_Data>();
	}
	if ((!(_52913_t->_field_mutable))) {
		_51328_e->_method_push_err(_51342_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("mutable_operation_on_immutable", 30),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_127ed52e0_FnIns> _54913_f = jule::new_struct<_127ed52e0_FnIns>(new( std::nothrow ) _127ed52e0_FnIns(jule::Ref<_127b2e960_StructIns>(),jule::Ref<_127ed52e0_Fn>(),jule::Slice<jule::Ref<_1304dc9b0_TypeKind>>(),jule::Slice<jule::Ref<_127ed52e0_ParamIns>>({jule::new_struct<_127ed52e0_ParamIns>(new( std::nothrow ) _127ed52e0_ParamIns(jule::new_struct<_127ed52e0_Param>(new( std::nothrow ) _127ed52e0_Param()),_52913_t->_field_kind->_method_clone())),jule::new_struct<_127ed52e0_ParamIns>(new( std::nothrow ) _127ed52e0_ParamIns(jule::new_struct<_127ed52e0_Param>(new( std::nothrow ) _127ed52e0_Param(_127941de0_Token(),true,jule::Bool(),jule::Bool(),jule::Ref<_1304dc9b0_TypeSymbol>(),jule::Str())),_52913_t->_field_kind->_method_clone()))}),_130b8f5f0_BUILTIN_FN_COPY->_field_result,jule::Ref<_1300a11b0_Scope>(),_130b8f5f0_builtin_caller_common_plain,jule::Bool(),jule::Bool()));
	_51363_d->_field_kind=jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_54913_f));
	_51363_d->_field_model=jule::Any(jule::new_struct<_1279cf930_CommonIdentExprModel>(new( std::nothrow ) _1279cf930_CommonIdentExprModel(jule::Str("copy", 4))));
	_51363_d=_130b8f5f0_builtin_caller_common_plain(_51328_e,_51342_fc,_51363_d);
	if (jule::real(_51363_d) && _53413_ref) {
		_51363_d->_field_model.operator jule::Ref<_1279cf930_FnCallExprModel>()->_field_args[static_cast<jule::Int>(0LL)]=jule::Any(jule::new_struct<_1279cf930_ExplicitDerefExprModel>(new( std::nothrow ) _1279cf930_ExplicitDerefExprModel(_52913_t->_field_model)));
	}
	return _51363_d;
}



inline jule::Ref<_13064b610_Data> _130b8f5f0_builtin_caller_recover(jule::Ref<_13064b610_Eval> _57831_e,jule::Ref<_1275d7180_FnCallExpr> _57845_fc,jule::Ref<_13064b610_Data> ) {
	if (_57845_fc->_field_generics.len() > 0LL) {
		_57831_e->_method_push_err(_57845_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	
	if (_57845_fc->_field_args.len() < 1LL) {
		_57831_e->_method_push_err(_57845_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("handler", 7))}));
		return jule::new_ref<_13064b610_Data>();
	}
	if (_57845_fc->_field_args.len() > 1LL) {
		_57831_e->_method_push_err(_57845_fc->_field_args[static_cast<jule::Int>(1LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_13064b610_Data> _59213_t = _57831_e->_method_eval_expr(_57845_fc->_field_args[static_cast<jule::Int>(0LL)]);
	if ((!(jule::real(_59213_t)))) {
		return jule::new_ref<_13064b610_Data>();
	}
	if ((!(jule::real(_59213_t->_field_kind->_method_fnc())))) {
		_57831_e->_method_push_err(_57845_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("invalid_expr", 12),jule::Slice<jule::Any>({}));
		return jule::new_ref<_13064b610_Data>();
	}
	jule::Str _6029_tkind = _59213_t->_field_kind->_method_fnc()->_method_to_str();
	if (_6029_tkind != jule::Str("fn(Error)", 9)) {
		_57831_e->_method_push_err(_57845_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("incompatible_types", 18),jule::Slice<jule::Any>({jule::Any(_6029_tkind),jule::Any(jule::Str("fn(Error)", 9))}));
	}
	jule::Ref<_13064b610_Data> _60713_d = _13064b610_build_void_data();
	_60713_d->_field_kind=_59213_t->_field_kind->_method_clone();
	_60713_d->_field_model=jule::Any(jule::new_struct<_1300a11b0_Recover>(new( std::nothrow ) _1300a11b0_Recover(jule::Ref<_127ed52e0_FnIns>(),_59213_t->_field_model,jule::Ref<_1300a11b0_Scope>())));
	return _60713_d;
}



inline jule::Ref<_13064b610_Data> _130b8f5f0_builtin_caller_clone(jule::Ref<_13064b610_Eval> _61529_e,jule::Ref<_1275d7180_FnCallExpr> _61543_fc,jule::Ref<_13064b610_Data> ) {
	if (_61543_fc->_field_generics.len() > 0LL) {
		_61529_e->_method_push_err(_61543_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	if (_61543_fc->_field_args.len() < 1LL) {
		_61529_e->_method_push_err(_61543_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("expr", 4))}));
		return jule::new_ref<_13064b610_Data>();
	}
	if (_61543_fc->_field_args.len() > 1LL) {
		_61529_e->_method_push_err(_61543_fc->_field_args[static_cast<jule::Int>(1LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_13064b610_Data> _62813_d = _61529_e->_method_eval_expr_kind(_61543_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_kind);
	if ((!(jule::real(_62813_d)))) {
		return jule::new_ref<_13064b610_Data>();
	}
	jule::Fn<void(jule::Ref<_1304dc9b0_TypeKind>)> _6339_check_kind = jule::Fn<void(jule::Ref<_1304dc9b0_TypeKind>)>([=](jule::Ref<_1304dc9b0_TypeKind> _63329_k) mutable -> void {
		{
			if (!((jule::real(_63329_k->_method_slc())))) { goto _case_end_5133262016; }
			_case_begin_5133262016:;
			{
				if ((!(_1304dc9b0_supports_cloning(_63329_k->_method_slc()->_field_elem)))) {
					_61529_e->_method_push_err(_61543_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("internal_type_not_supports_clone", 32),jule::Slice<jule::Any>({jule::Any(_63329_k->_method_to_str())}));
				}
			}
			goto _match_end_5133260256;
			_case_end_5133262016:;
			if (!((jule::real(_63329_k->_method_map())))) { goto _case_end_5133261280; }
			_case_begin_5133261280:;
			{
				if ((!(_1304dc9b0_supports_cloning(_63329_k->_method_map()->_field_key))) || _1304dc9b0_supports_cloning(_63329_k->_method_map()->_field_val)) {
					_61529_e->_method_push_err(_61543_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("internal_type_not_supports_clone", 32),jule::Slice<jule::Any>({jule::Any(_63329_k->_method_to_str())}));
				}
			}
			goto _match_end_5133260256;
			_case_end_5133261280:;
			if (!((jule::real(_63329_k->_method_arr())))) { goto _case_end_5133260768; }
			_case_begin_5133260768:;
			{
				if ((!(_1304dc9b0_supports_cloning(_63329_k->_method_arr()->_field_elem)))) {
					_61529_e->_method_push_err(_61543_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("internal_type_not_supports_clone", 32),jule::Slice<jule::Any>({jule::Any(_63329_k->_method_to_str())}));
				}
			}
			goto _match_end_5133260256;
			_case_end_5133260768:;
			if (!((jule::real(_63329_k->_method_ref())))) { goto _case_end_5133260880; }
			_case_begin_5133260880:;
			{
				if ((!(_1304dc9b0_supports_cloning(_63329_k->_method_ref()->_field_elem)))) {
					_61529_e->_method_push_err(_61543_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("internal_type_not_supports_clone", 32),jule::Slice<jule::Any>({jule::Any(_63329_k->_method_to_str())}));
				}
			}
			goto _match_end_5133260256;
			_case_end_5133260880:;
			if (!((jule::real(_63329_k->_method_strct())))) { goto _case_end_5133260992; }
			_case_begin_5133260992:;
			{
				jule::Ref<_127b2e960_StructIns> _65617_s = _62813_d->_field_kind->_method_strct();
				if ((!(_65617_s->_field_has_mut))) {
					_61529_e->_method_push_err(_61543_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("clone_immut_struct", 18),jule::Slice<jule::Any>({jule::Any(_62813_d->_field_kind->_method_to_str())}));
				}
				if (((!(jule::real(_65617_s->_field_decl))) || _65617_s->_field_decl->_field_cpp_linked) || (!(_65617_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))))) {
					_61529_e->_method_push_err(_61543_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("type_is_not_derives", 19),jule::Slice<jule::Any>({jule::Any(_62813_d->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
				}
			}
			goto _match_end_5133260256;
			_case_end_5133260992:;
			_case_begin_5133260464:;
			{
				_61529_e->_method_push_err(_61543_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("type_is_not_derives", 19),jule::Slice<jule::Any>({jule::Any(_62813_d->_field_kind->_method_to_str()),jule::Any(jule::Str("Clone", 5))}));
			}
			goto _match_end_5133260256;
			_case_end_5133260464:;
			_match_end_5133260256:;
		}
	});
	{
		if (!(((!(_62813_d->_field_lvalue))))) { goto _case_end_5133307136; }
		_case_begin_5133307136:;
		{
			_61529_e->_method_push_err(_61543_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_token,jule::Str("clone_non_lvalue", 16),jule::Slice<jule::Any>({}));
		}
		goto _match_end_5133307632;
		_case_end_5133307136:;
		if (!(((!(_1304dc9b0_supports_cloning(_62813_d->_field_kind)))))) { goto _case_end_5133307248; }
		_case_begin_5133307248:;
		{
			_6339_check_kind(_62813_d->_field_kind);
		}
		goto _match_end_5133307632;
		_case_end_5133307248:;
		_match_end_5133307632:;
	}
	_62813_d->_field_mutable=true;
	_62813_d->_field_model=jule::Any(jule::new_struct<_1279cf930_BuiltinCloneCallExprModel>(new( std::nothrow ) _1279cf930_BuiltinCloneCallExprModel(_62813_d->_field_model)));
	return _62813_d;
}



inline jule::Ref<_13064b610_Data> _130b8f5f0_builtin_caller_std_mem_size_of(jule::Ref<_13064b610_Eval> _68239_e,jule::Ref<_1275d7180_FnCallExpr> _68253_fc,jule::Ref<_13064b610_Data> ) {
	if (_68253_fc->_field_generics.len() > 0LL) {
		_68239_e->_method_push_err(_68253_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_13064b610_Data> _68613_result = jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("uint", 4)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_130c83140_Const>()));
	if (_68253_fc->_field_args.len() < 1LL) {
		_68239_e->_method_push_err(_68253_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _68613_result;
	}
	if (_68253_fc->_field_args.len() > 1LL) {
		_68239_e->_method_push_err(_68253_fc->_field_args[static_cast<jule::Int>(1LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_13064b610_Data> _69813_d = _68239_e->_method_eval_expr_kind(_68253_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_kind);
	if ((!(jule::real(_69813_d)))) {
		return _68613_result;
	}
	_68613_result->_field_model=jule::Any(jule::new_struct<_1279cf930_SizeofExprModel>(new( std::nothrow ) _1279cf930_SizeofExprModel(_69813_d->_field_model)));
	return _68613_result;
}



inline jule::Ref<_13064b610_Data> _130b8f5f0_builtin_caller_std_mem_align_of(jule::Ref<_13064b610_Eval> _70740_e,jule::Ref<_1275d7180_FnCallExpr> _70754_fc,jule::Ref<_13064b610_Data> ) {
	if (_70754_fc->_field_generics.len() > 0LL) {
		_70740_e->_method_push_err(_70754_fc->_field_token,jule::Str("not_has_generics", 16),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_13064b610_Data> _71113_result = jule::new_struct<_13064b610_Data>(new( std::nothrow ) _13064b610_Data(jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_1304dc9b0_build_prim_type(jule::Str("uint", 4)))),jule::Ref<_1304dc9b0_TypeKind>(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Bool(),jule::Any(),jule::Bool(),jule::Ref<_130c83140_Const>()));
	if (_70754_fc->_field_args.len() < 1LL) {
		_70740_e->_method_push_err(_70754_fc->_field_token,jule::Str("missing_expr_for", 16),jule::Slice<jule::Any>({jule::Any(jule::Str("type|expr", 9))}));
		return _71113_result;
	}
	if (_70754_fc->_field_args.len() > 1LL) {
		_70740_e->_method_push_err(_70754_fc->_field_args[static_cast<jule::Int>(1LL)]->_field_token,jule::Str("argument_overflow", 17),jule::Slice<jule::Any>({}));
	}
	jule::Ref<_13064b610_Data> _72313_d = _70740_e->_method_eval_expr_kind(_70754_fc->_field_args[static_cast<jule::Int>(0LL)]->_field_kind);
	if ((!(jule::real(_72313_d)))) {
		return _71113_result;
	}
	_71113_result->_field_model=jule::Any(jule::new_struct<_1279cf930_AlignofExprModel>(new( std::nothrow ) _1279cf930_AlignofExprModel(_72313_d->_field_model)));
	return _71113_result;
}



inline void _1271b5120_exit_err(jule::Str _2213_msg) {
	
	jule::outln(_2213_msg);
	_126ef0cf0_exit(1LL);
}



inline jule::Slice<jule::U8> _1271b5120_read_buff(jule::Str _2914_path) {
	jule::Slice<jule::U8> _3014_buffer;
	jule::Int _3022_err;
	std::tie(_3014_buffer,_3022_err) = _1275c8a10_read_file(_2914_path);
	if (_3022_err != 0LLU) {
		_1271b5120_exit_err(jule::Str("error: file cannot read", 23));
	}
	return _3014_buffer;
}



inline _136e99d00_Log _1271b5120_flat_compiler_err(jule::Str _3722_text) {
	return _136e99d00_Log(1LLU,jule::Int(),jule::Int(),jule::Str(),_3722_text);
}



inline std::tuple<jule::Slice<jule::Ref<_127281550_DirEntry>>,jule::Str> _1271b5120_read_package_dirents(jule::Str _4425_path) {
	jule::Str _4451_err_msg = jule::Str();
	jule::Slice<jule::Ref<_127281550_DirEntry>> _4514_dirents;
	jule::Int _4523_err;
	std::tie(_4514_dirents,_4523_err) = _12721daf0_read_dir(_4425_path);
	if (_4523_err != 0LLU) {
		_4451_err_msg = jule::Str("connot read package directory: ", 31) + _4425_path;
		return std::make_tuple(nullptr,_4451_err_msg);
	}
	jule::Slice<jule::Ref<_127281550_DirEntry>> _5013_passed_dirents = nullptr;
	{
		auto &__julec_range_expr = _4514_dirents;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127281550_DirEntry> _1271b5120_dirent = *__julec_range_begin;
			_iter_begin_5150220672:;
			{
				jule::Str _5213_name = _1271b5120_dirent->_field_name;
				if ((_1271b5120_dirent->_field_stat->_method_is_dir() || (!(_5213_name.has_suffix(jule::Str(".jule", 5))))) || (!(_136e67690_is_pass_file_annotation(_5213_name)))) {
					goto _iter_next_5150220672;
				}
				_5013_passed_dirents=append(_5013_passed_dirents,jule::Slice<jule::Ref<_127281550_DirEntry>>({_1271b5120_dirent}));
			}
			_iter_next_5150220672:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _1271b5120_dirent = *__julec_range_begin; goto _iter_begin_5150220672; }
			_iter_end_5150220672:;
		}
	}
	_4451_err_msg = jule::Str("", 0);
	return std::make_tuple(_5013_passed_dirents,_4451_err_msg);
}



inline jule::Slice<jule::Str> _136f09c40_get_all_unique_passes(jule::Ref<_1300a4650_Package> _8130_pkg,jule::Slice<jule::Ref<_1300a4650_ImportInfo>> _8149_uses) {
	jule::Slice<jule::Str> _8213_passes = nullptr;
	jule::Fn<void(jule::Ref<_1300a4650_Package>)> _839_push_passes = jule::Fn<void(jule::Ref<_1300a4650_Package>)>([=](jule::Ref<_1300a4650_Package> _8330_p) mutable -> void {
		{
			auto &__julec_range_expr = _8330_p->_field_files;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_13032dc50_SymbolTable> _136f09c40_f = *__julec_range_begin;
				_iter_begin_5150290224:;
				{
					jule::Int _8521_i = 0LL;
					_julec_label_push:;
					_iter_begin_5150292960:;
					if (!(_8521_i < _136f09c40_f->_field_passes._method_len())) { goto _iter_end_5150292960; }
					{
						_127ff3480_Pass _8825_pass = _136f09c40_f->_field_passes._method_at(_8521_i);
						if (_8825_pass._field_text == jule::Str("", 0)) {
							goto _iter_next_5150292960;
						}
						{
							auto &__julec_range_expr = _8213_passes;
							if (__julec_range_expr.begin() != __julec_range_expr.end()) {
								auto __julec_range_begin = __julec_range_expr.begin();
								const auto __julec_range_end = __julec_range_expr.end();
								jule::Str _136f09c40_cpass = *__julec_range_begin;
								_iter_begin_5150297728:;
								{
									if (_136f09c40_cpass == _8825_pass._field_text) {
										goto _iter_next_5150292960;
									}
								}
								_iter_next_5150297728:;
								++__julec_range_begin;
								if (__julec_range_begin != __julec_range_end) { _136f09c40_cpass = *__julec_range_begin; goto _iter_begin_5150297728; }
								_iter_end_5150297728:;
							}
						}
						_8213_passes=append(_8213_passes,jule::Slice<jule::Str>({_8825_pass._field_text}));
					}
					_iter_next_5150292960:;
					(_8521_i)++;
					goto _iter_begin_5150292960;
					_iter_end_5150292960:;
				}
				_iter_next_5150290224:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _136f09c40_f = *__julec_range_begin; goto _iter_begin_5150290224; }
				_iter_end_5150290224:;
			}
		}
	});
	_839_push_passes(_8130_pkg);
	{
		auto &__julec_range_expr = _8149_uses;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1300a4650_ImportInfo> _136f09c40_u = *__julec_range_begin;
			_iter_begin_5150304864:;
			{
				if ((!(_136f09c40_u->_field_cpp_linked))) {
					_839_push_passes(_136f09c40_u->_field_package);
				}
			}
			_iter_next_5150304864:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _136f09c40_u = *__julec_range_begin; goto _iter_begin_5150304864; }
			_iter_end_5150304864:;
		}
	}
	return _8213_passes;
}



inline std::tuple<jule::Ref<_136f09c40_IR>,jule::Slice<_136e99d00_Log>> _136f09c40_build_ir(jule::Str _12017_path) {
	jule::Ref<_1271b5120_PlainImporter> _12113_importer = jule::new_struct<_1271b5120_PlainImporter>(new( std::nothrow ) _1271b5120_PlainImporter());
	jule::Slice<jule::Ref<_1275d0e60_Ast>> _12214_files;
	jule::Slice<_136e99d00_Log> _12225_logs;
	std::tie(_12214_files,_12225_logs) = _12113_importer->_method_import_package(_12017_path);
	if (_12225_logs.len() > 0LL) {
		return std::make_tuple(jule::new_ref<_136f09c40_IR>(),_12225_logs);
	}
	if (_12214_files.len() == 0LL) {
		return std::make_tuple(jule::new_ref<_136f09c40_IR>(),nullptr);
	}
	jule::Ref<_1300a4650_Package> _13114_pkg;
	std::tie(_13114_pkg,_12225_logs) = _13064d450_analyze_package(_12214_files,_12113_importer);
	if (_12225_logs.len() > 0LL) {
		return std::make_tuple(jule::new_ref<_136f09c40_IR>(),_12225_logs);
	}
	jule::Ref<_136f09c40_IR> _13613_ir = jule::new_struct<_136f09c40_IR>(new( std::nothrow ) _136f09c40_IR(jule::Slice<jule::Str>(),_13114_pkg,_12113_importer->_field_all_packages));
	_13613_ir->_field_passes=_136f09c40_get_all_unique_passes(_13613_ir->_field_main,_13613_ir->_field_used);
	return std::make_tuple(_13613_ir,nullptr);
}



inline jule::Bool _136f12120_is_exist_0(jule::Slice<jule::Any> _2616_arr,jule::Ref<_127ed52e0_Fn> _2628_t) {
	{
		auto &__julec_range_expr = _2616_arr;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _136f12120_ref = *__julec_range_begin;
			_iter_begin_5150403840:;
			{
				{
					auto &_match_expr{ _136f12120_ref };
					if (!(_match_expr.type_is<jule::Ref<_127ed52e0_Fn>>())) { goto _case_end_5150405552; }
					_case_begin_5150405552:;
					{
						if ((_136f12120_ref.operator jule::Ref<_127ed52e0_Fn>()).alloc == (_2628_t).alloc) {
							return true;
						}
					}
					goto _match_end_5150405456;
					_case_end_5150405552:;
					_match_end_5150405456:;
				}
			}
			_iter_next_5150403840:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _136f12120_ref = *__julec_range_begin; goto _iter_begin_5150403840; }
			_iter_end_5150403840:;
		}
	}
	return false;
}

inline jule::Bool _136f12120_is_exist_1(jule::Slice<jule::Any> _2616_arr,jule::Ref<_1303533b0_Var> _2628_t) {
	{
		auto &__julec_range_expr = _2616_arr;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _136f12120_ref = *__julec_range_begin;
			_iter_begin_5150412784:;
			{
				{
					auto &_match_expr{ _136f12120_ref };
					if (!(_match_expr.type_is<jule::Ref<_1303533b0_Var>>())) { goto _case_end_5150414496; }
					_case_begin_5150414496:;
					{
						if ((_136f12120_ref.operator jule::Ref<_1303533b0_Var>()).alloc == (_2628_t).alloc) {
							return true;
						}
					}
					goto _match_end_5150414400;
					_case_end_5150414496:;
					_match_end_5150414400:;
				}
			}
			_iter_next_5150412784:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _136f12120_ref = *__julec_range_begin; goto _iter_begin_5150412784; }
			_iter_end_5150412784:;
		}
	}
	return false;
}

inline jule::Bool _136f12120_is_exist_2(jule::Slice<jule::Any> _2616_arr,jule::Ref<_127b2e960_Struct> _2628_t) {
	{
		auto &__julec_range_expr = _2616_arr;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _136f12120_ref = *__julec_range_begin;
			_iter_begin_5150421792:;
			{
				{
					auto &_match_expr{ _136f12120_ref };
					if (!(_match_expr.type_is<jule::Ref<_127b2e960_Struct>>())) { goto _case_end_5150423504; }
					_case_begin_5150423504:;
					{
						if ((_136f12120_ref.operator jule::Ref<_127b2e960_Struct>()).alloc == (_2628_t).alloc) {
							return true;
						}
					}
					goto _match_end_5150423408;
					_case_end_5150423504:;
					_match_end_5150423408:;
				}
			}
			_iter_next_5150421792:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _136f12120_ref = *__julec_range_begin; goto _iter_begin_5150421792; }
			_iter_end_5150421792:;
		}
	}
	return false;
}

inline jule::Bool _136f12120_is_exist_3(jule::Slice<jule::Any> _2616_arr,jule::Ref<_130099320_Trait> _2628_t) {
	{
		auto &__julec_range_expr = _2616_arr;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _136f12120_ref = *__julec_range_begin;
			_iter_begin_5150430736:;
			{
				{
					auto &_match_expr{ _136f12120_ref };
					if (!(_match_expr.type_is<jule::Ref<_130099320_Trait>>())) { goto _case_end_5150432448; }
					_case_begin_5150432448:;
					{
						if ((_136f12120_ref.operator jule::Ref<_130099320_Trait>()).alloc == (_2628_t).alloc) {
							return true;
						}
					}
					goto _match_end_5150432352;
					_case_end_5150432448:;
					_match_end_5150432352:;
				}
			}
			_iter_next_5150430736:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _136f12120_ref = *__julec_range_begin; goto _iter_begin_5150430736; }
			_iter_end_5150430736:;
		}
	}
	return false;
}



inline jule::Bool _136f12120_is_exist_ref(jule::Slice<jule::Any> _3821_refs,jule::Any _3834_ref) {
	{
		auto &_match_expr{ _3834_ref };
		if (!(_match_expr.type_is<jule::Ref<_127ed52e0_Fn>>())) { goto _case_end_5150396400; }
		_case_begin_5150396400:;
		{
			return _136f12120_is_exist_0(_3821_refs,_3834_ref.operator jule::Ref<_127ed52e0_Fn>());
		}
		goto _match_end_5150394864;
		_case_end_5150396400:;
		if (!(_match_expr.type_is<jule::Ref<_1303533b0_Var>>())) { goto _case_end_5150396512; }
		_case_begin_5150396512:;
		{
			return _136f12120_is_exist_1(_3821_refs,_3834_ref.operator jule::Ref<_1303533b0_Var>());
		}
		goto _match_end_5150394864;
		_case_end_5150396512:;
		if (!(_match_expr.type_is<jule::Ref<_127b2e960_Struct>>())) { goto _case_end_5150396624; }
		_case_begin_5150396624:;
		{
			return _136f12120_is_exist_2(_3821_refs,_3834_ref.operator jule::Ref<_127b2e960_Struct>());
		}
		goto _match_end_5150394864;
		_case_end_5150396624:;
		if (!(_match_expr.type_is<jule::Ref<_130099320_Trait>>())) { goto _case_end_5150396992; }
		_case_begin_5150396992:;
		{
			return _136f12120_is_exist_3(_3821_refs,_3834_ref.operator jule::Ref<_130099320_Trait>());
		}
		goto _match_end_5150394864;
		_case_end_5150396992:;
		_case_begin_5150395024:;
		{
			return false;
		}
		goto _match_end_5150394864;
		_case_end_5150395024:;
		_match_end_5150394864:;
	}
}



inline jule::Bool _136f12120_is_dead(jule::Any _4816_ref) {
	jule::Bool _4828_dead = jule::Bool();
	if (_136f12120_is_exist_ref(_136f12120_deads,_4816_ref)) {
		_4828_dead = true;
		return _4828_dead;
	}
	if (_136f12120_is_exist_ref(_136f12120_checking,_4816_ref)) {
		_4828_dead = false;
		return _4828_dead;
	}
	jule::Any _5813_old = _136f12120_current;
	_136f12120_current=_4816_ref;
	jule::I64 _609_len = _136f12120_checking.len();
	_136f12120_checking=append(_136f12120_checking,jule::Slice<jule::Any>({_4816_ref}));
	__JULE_DEFER({
		_136f12120_current=_5813_old;
		_136f12120_drop_ref(_136f12120_checking,_609_len);
		if (_4828_dead) {
			_136f12120_deads=append(_136f12120_deads,jule::Slice<jule::Any>({_4816_ref}));
		}
	});
	{
		auto &_match_expr{ _4816_ref };
		if (!(_match_expr.type_is<jule::Ref<_127ed52e0_Fn>>())) { goto _case_end_5150445472; }
		_case_begin_5150445472:;
		{
			_4828_dead = _136f12120_is_fn_dead(_4816_ref.operator jule::Ref<_127ed52e0_Fn>());
			return _4828_dead;
		}
		goto _match_end_5150445248;
		_case_end_5150445472:;
		if (!(_match_expr.type_is<jule::Ref<_1303533b0_Var>>())) { goto _case_end_5150444048; }
		_case_begin_5150444048:;
		{
			_4828_dead = _136f12120_is_var_dead(_4816_ref.operator jule::Ref<_1303533b0_Var>());
			return _4828_dead;
		}
		goto _match_end_5150445248;
		_case_end_5150444048:;
		if (!(_match_expr.type_is<jule::Ref<_127b2e960_Struct>>())) { goto _case_end_5150444160; }
		_case_begin_5150444160:;
		{
			_4828_dead = _136f12120_is_struct_dead(_4816_ref.operator jule::Ref<_127b2e960_Struct>());
			return _4828_dead;
		}
		goto _match_end_5150445248;
		_case_end_5150444160:;
		if (!(_match_expr.type_is<jule::Ref<_130099320_Trait>>())) { goto _case_end_5150444272; }
		_case_begin_5150444272:;
		{
			_4828_dead = _136f12120_is_trait_dead(_4816_ref.operator jule::Ref<_130099320_Trait>());
			return _4828_dead;
		}
		goto _match_end_5150445248;
		_case_end_5150444272:;
		_case_begin_5150438352:;
		{
			_4828_dead = false;
			return _4828_dead;
		}
		goto _match_end_5150445248;
		_case_end_5150438352:;
		_match_end_5150445248:;
	}
}



inline void _136f12120_drop_ref(jule::Slice<jule::Any>& _7918_refs,jule::Int _7931_pos) {
	_7918_refs=_7918_refs.slice(0LL,static_cast<jule::Int>(_7931_pos));
}



inline jule::Bool _136f12120_is_all_references_are_dead_0(jule::Ref<_127ff3480_ReferenceStack> _8838_references) {
	jule::Int _8913_i = 0LL;
	_iter_begin_5150468800:;
	if (!(_8913_i < _8838_references->_method_len())) { goto _iter_end_5150468800; }
	{
		jule::Any _9117_ref = _8838_references->_method_at(_8913_i);
		{
			auto &_match_expr{ _136f12120_current };
			if (!(_match_expr.type_is<jule::Ref<_127ed52e0_Fn>>())) { goto _case_end_5150472832; }
			_case_begin_5150472832:;
			{
				{
					auto &_match_expr{ _9117_ref };
					if (!(_match_expr.type_is<jule::Ref<_127ed52e0_Fn>>())) { goto _case_end_5150474512; }
					_case_begin_5150474512:;
					{
						if ((_136f12120_current.operator jule::Ref<_127ed52e0_Fn>()).alloc == (_9117_ref.operator jule::Ref<_127ed52e0_Fn>()).alloc) {
							goto _iter_next_5150468800;
						}
					}
					goto _match_end_5150472944;
					_case_end_5150474512:;
					_match_end_5150472944:;
				}
			}
			goto _match_end_5150471920;
			_case_end_5150472832:;
			_match_end_5150471920:;
		}
		if ((!(_136f12120_is_dead(_9117_ref)))) {
			return false;
		}
	}
	_iter_next_5150468800:;
	(_8913_i)++;
	goto _iter_begin_5150468800;
	_iter_end_5150468800:;
	return true;
}

inline jule::Bool _136f12120_is_all_references_are_dead_1(jule::Ref<_127ff3480_ReferenceStack> _8838_references) {
	jule::Int _8913_i = 0LL;
	_iter_begin_5150486496:;
	if (!(_8913_i < _8838_references->_method_len())) { goto _iter_end_5150486496; }
	{
		jule::Any _9117_ref = _8838_references->_method_at(_8913_i);
		{
			auto &_match_expr{ _136f12120_current };
			if (!(_match_expr.type_is<jule::Ref<_1303533b0_Var>>())) { goto _case_end_5150490144; }
			_case_begin_5150490144:;
			{
				{
					auto &_match_expr{ _9117_ref };
					if (!(_match_expr.type_is<jule::Ref<_1303533b0_Var>>())) { goto _case_end_5150491984; }
					_case_begin_5150491984:;
					{
						if ((_136f12120_current.operator jule::Ref<_1303533b0_Var>()).alloc == (_9117_ref.operator jule::Ref<_1303533b0_Var>()).alloc) {
							goto _iter_next_5150486496;
						}
					}
					goto _match_end_5150490384;
					_case_end_5150491984:;
					_match_end_5150490384:;
				}
			}
			goto _match_end_5150489104;
			_case_end_5150490144:;
			_match_end_5150489104:;
		}
		if ((!(_136f12120_is_dead(_9117_ref)))) {
			return false;
		}
	}
	_iter_next_5150486496:;
	(_8913_i)++;
	goto _iter_begin_5150486496;
	_iter_end_5150486496:;
	return true;
}

inline jule::Bool _136f12120_is_all_references_are_dead_2(jule::Ref<_127ff3480_ReferenceStack> _8838_references) {
	jule::Int _8913_i = 0LL;
	_iter_begin_5150504976:;
	if (!(_8913_i < _8838_references->_method_len())) { goto _iter_end_5150504976; }
	{
		jule::Any _9117_ref = _8838_references->_method_at(_8913_i);
		{
			auto &_match_expr{ _136f12120_current };
			if (!(_match_expr.type_is<jule::Ref<_127b2e960_Struct>>())) { goto _case_end_5150508624; }
			_case_begin_5150508624:;
			{
				{
					auto &_match_expr{ _9117_ref };
					if (!(_match_expr.type_is<jule::Ref<_127b2e960_Struct>>())) { goto _case_end_5150510464; }
					_case_begin_5150510464:;
					{
						if ((_136f12120_current.operator jule::Ref<_127b2e960_Struct>()).alloc == (_9117_ref.operator jule::Ref<_127b2e960_Struct>()).alloc) {
							goto _iter_next_5150504976;
						}
					}
					goto _match_end_5150508864;
					_case_end_5150510464:;
					_match_end_5150508864:;
				}
			}
			goto _match_end_5150507584;
			_case_end_5150508624:;
			_match_end_5150507584:;
		}
		if ((!(_136f12120_is_dead(_9117_ref)))) {
			return false;
		}
	}
	_iter_next_5150504976:;
	(_8913_i)++;
	goto _iter_begin_5150504976;
	_iter_end_5150504976:;
	return true;
}



inline jule::Bool _136f12120_is_fn_dead(jule::Ref<_127ed52e0_Fn> _10819_f) {
	if (((((!(_10819_f->_field_global)) || _10819_f->_field_cpp_linked) || _10819_f->_method_is_entry_point()) || _10819_f->_method_is_init()) || _10819_f->_method_is_anon()) {
		return false;
	}
	if (_10819_f->_field_generics.len() > 0LL) {
		return _10819_f->_field_instances.len() == 0LL;
	}
	return _136f12120_is_all_references_are_dead_0(_10819_f->_field_references);
}



inline jule::Bool _136f12120_is_var_dead(jule::Ref<_1303533b0_Var> _12220_v) {
	if (_12220_v->_field_constant) {
		return true;
	}
	if (_12220_v->_field_cpp_linked) {
		return false;
	}
	return _136f12120_is_all_references_are_dead_1(_12220_v->_field_references);
}



inline jule::Bool _136f12120_is_struct_dead(jule::Ref<_127b2e960_Struct> _13423_s) {
	if (_13423_s->_field_cpp_linked) {
		return false;
	}
	if (_13423_s->_field_generics.len() > 0LL) {
		return _13423_s->_field_instances.len() == 0LL;
	}
	return _136f12120_is_all_references_are_dead_2(_13423_s->_field_references);
}



inline jule::Bool _136f12120_is_trait_dead(jule::Ref<_130099320_Trait> _14822_t) {
	{
		auto &__julec_range_expr = _14822_t->_field_implemented;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127b2e960_Struct> _136f12120_imp = *__julec_range_begin;
			_iter_begin_5150516000:;
			{
				if ((!(_136f12120_is_struct_dead(_136f12120_imp)))) {
					return false;
				}
			}
			_iter_next_5150516000:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _136f12120_imp = *__julec_range_begin; goto _iter_begin_5150516000; }
			_iter_end_5150516000:;
		}
	}
	return true;
}



inline void _136f12120_eliminate_dead_functions(_127ab7fa0_Vector_11& _15734_funcs) {
	jule::Int _15813_i = 0LL;
	_iter_begin_5150517104:;
	if (!(_15813_i < _15734_funcs._method_len())) { goto _iter_end_5150517104; }
	{
		jule::Ref<_127ed52e0_Fn> _16017_f = _15734_funcs._method_at(_15813_i);
		if (_136f12120_is_fn_dead(_16017_f)) {
			_15734_funcs._method_remove_range(_15813_i,1LL);
		} else {
			{
				auto &__julec_range_expr = _16017_f->_field_instances;
				if (__julec_range_expr.begin() != __julec_range_expr.end()) {
					auto __julec_range_begin = __julec_range_expr.begin();
					const auto __julec_range_end = __julec_range_expr.end();
					jule::Ref<_127ed52e0_FnIns> _136f12120_ins = *__julec_range_begin;
					_iter_begin_5150526560:;
					{
						_1275c5880_eliminate_dead_code_of_scope(_136f12120_ins->_field_scope);
					}
					_iter_next_5150526560:;
					++__julec_range_begin;
					if (__julec_range_begin != __julec_range_end) { _136f12120_ins = *__julec_range_begin; goto _iter_begin_5150526560; }
					_iter_end_5150526560:;
				}
			}
			(_15813_i)++;
		}
	}
	_iter_next_5150517104:;
	goto _iter_begin_5150517104;
	_iter_end_5150517104:;
}



inline void _136f12120_eliminate_dead_globals(jule::Ref<_1300a4650_Package> _17231_pkg) {
	{
		auto &__julec_range_expr = _17231_pkg->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13032dc50_SymbolTable> _136f12120_f = *__julec_range_begin;
			_iter_begin_5150527856:;
			{
				jule::Int _17417_i = 0LL;
				_iter_begin_5150531136:;
				if (!(_17417_i < _136f12120_f->_field_vars._method_len())) { goto _iter_end_5150531136; }
				{
					if (_136f12120_is_var_dead(_136f12120_f->_field_vars._method_at(_17417_i))) {
						_136f12120_f->_field_vars._method_remove_range(_17417_i,1LL);
					} else {
						(_17417_i)++;
					}
				}
				_iter_next_5150531136:;
				goto _iter_begin_5150531136;
				_iter_end_5150531136:;
			}
			_iter_next_5150527856:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _136f12120_f = *__julec_range_begin; goto _iter_begin_5150527856; }
			_iter_end_5150527856:;
		}
	}
}



inline void _136f12120_eliminate_dead_functions_package(jule::Ref<_1300a4650_Package> _18541_pkg) {
	{
		auto &__julec_range_expr = _18541_pkg->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13032dc50_SymbolTable> _136f12120_f = *__julec_range_begin;
			_iter_begin_5150530352:;
			{
				_136f12120_eliminate_dead_functions(_136f12120_f->_field_funcs);
			}
			_iter_next_5150530352:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _136f12120_f = *__julec_range_begin; goto _iter_begin_5150530352; }
			_iter_end_5150530352:;
		}
	}
}



inline void _136f12120_eliminate_dead_structs(jule::Ref<_1300a4650_Package> _19131_pkg) {
	{
		auto &__julec_range_expr = _19131_pkg->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13032dc50_SymbolTable> _136f12120_f = *__julec_range_begin;
			_iter_begin_5150540880:;
			{
				jule::Int _19317_i = 0LL;
				_iter_begin_5150542624:;
				if (!(_19317_i < _136f12120_f->_field_structs._method_len())) { goto _iter_end_5150542624; }
				{
					jule::Ref<_127b2e960_Struct> _19521_s = _136f12120_f->_field_structs._method_at(_19317_i);
					if (_136f12120_is_struct_dead(_19521_s)) {
						_136f12120_f->_field_structs._method_remove_range(_19317_i,1LL);
					} else {
						_136f12120_eliminate_dead_functions(_19521_s->_field_methods);
						(_19317_i)++;
					}
				}
				_iter_next_5150542624:;
				goto _iter_begin_5150542624;
				_iter_end_5150542624:;
			}
			_iter_next_5150540880:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _136f12120_f = *__julec_range_begin; goto _iter_begin_5150540880; }
			_iter_end_5150540880:;
		}
	}
}



inline void _136f12120_eliminate_dead_traits(jule::Ref<_1300a4650_Package> _21030_pkg) {
	{
		auto &__julec_range_expr = _21030_pkg->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13032dc50_SymbolTable> _136f12120_f = *__julec_range_begin;
			_iter_begin_5150541856:;
			{
				jule::Int _21217_i = 0LL;
				_iter_begin_5150552960:;
				if (!(_21217_i < _136f12120_f->_field_traits._method_len())) { goto _iter_end_5150552960; }
				{
					if (_136f12120_is_trait_dead(_136f12120_f->_field_traits._method_at(_21217_i))) {
						_136f12120_f->_field_traits._method_remove_range(_21217_i,1LL);
					} else {
						(_21217_i)++;
					}
				}
				_iter_next_5150552960:;
				goto _iter_begin_5150552960;
				_iter_end_5150552960:;
			}
			_iter_next_5150541856:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _136f12120_f = *__julec_range_begin; goto _iter_begin_5150541856; }
			_iter_end_5150541856:;
		}
	}
}



inline void _136f12120_eliminate_dead_code_package(jule::Ref<_1300a4650_Package> _22336_pkg) {
	_136f12120_eliminate_dead_globals(_22336_pkg);
	_136f12120_eliminate_dead_functions_package(_22336_pkg);
	_136f12120_eliminate_dead_structs(_22336_pkg);
	_136f12120_eliminate_dead_traits(_22336_pkg);
}



inline void _136f12120_eliminate_dead_code(jule::Ref<_136f09c40_IR> _23032_ir) {
	{
		auto &__julec_range_expr = _23032_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1300a4650_ImportInfo> _136f12120_u = *__julec_range_begin;
			_iter_begin_5150563680:;
			{
				if ((!(_136f12120_u->_field_cpp_linked))) {
					_136f12120_eliminate_dead_code_package(_136f12120_u->_field_package);
				}
			}
			_iter_next_5150563680:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _136f12120_u = *__julec_range_begin; goto _iter_begin_5150563680; }
			_iter_end_5150563680:;
		}
	}
	_136f12120_eliminate_dead_code_package(_23032_ir->_field_main);
	_136f12120_deads=nullptr;
	_136f12120_checking=nullptr;
	_136f12120_current=jule::Any(nullptr);
}



inline void _1275c5880_eliminate_dead_code_of_scope(jule::Ref<_1300a11b0_Scope> _6437_s) {
	jule::Ref<_1275c5880_ScopeDeadCode> _6513_sdc = jule::new_struct<_1275c5880_ScopeDeadCode>(new( std::nothrow ) _1275c5880_ScopeDeadCode(jule::Ref<_1275c5880_ScopeDeadCode>(),_6437_s,(&(_6437_s->_field_stmts)),jule::Int()));
	{
		_6513_sdc->_method_optimize_stmts();
	}
}



inline void _127cdea20_push_opt_level(jule::Int _2623_level) {
	{
		auto &_match_expr{ _2623_level };
		if (!((0LLU) == _match_expr)) { goto _case_end_5150632160; }
		_case_begin_5150632160:;
		{
			_127cdea20_OPTIMIZATIONS=nullptr;
		}
		goto _match_end_5150630560;
		_case_end_5150632160:;
		if (!((1LLU) == _match_expr)) { goto _case_end_5150632272; }
		_case_begin_5150632272:;
		{
			_127cdea20_OPTIMIZATIONS=append(_127cdea20_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-copy", 10),jule::Str("--opt-deadcode", 14)}));
		}
		goto _match_end_5150630560;
		_case_end_5150632272:;
		_case_begin_5150630656:;
		{
			return;
		}
		goto _match_end_5150630560;
		_case_end_5150630656:;
		_match_end_5150630560:;
	}
}



inline jule::Bool _127cdea20_is_opt_enabled(jule::Str _4223_opt) {
	{
		auto &__julec_range_expr = _127cdea20_OPTIMIZATIONS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _127cdea20_oopt = *__julec_range_begin;
			_iter_begin_5150632832:;
			{
				if (_4223_opt == _127cdea20_oopt) {
					return true;
				}
			}
			_iter_next_5150632832:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127cdea20_oopt = *__julec_range_begin; goto _iter_begin_5150632832; }
			_iter_end_5150632832:;
		}
	}
	return false;
}



inline jule::Str _127fba3d0_gen_if(jule::Ref<_1300a11b0_If> _12715_i) {
	jule::Str _12813_obj = jule::Str("if (", 4);
	_12813_obj+=_130e870c0_gen_expr(_12715_i->_field_expr);
	_12813_obj+=jule::Str(") ", 2);
	_12813_obj+=_127fba3d0_gen_scope(_12715_i->_field_scope);
	return _12813_obj;
}



inline jule::Str _127fba3d0_gen_conditional(jule::Ref<_1300a11b0_Conditional> _13524_c) {
	jule::Str _13613_obj = _127fba3d0_gen_if(_13524_c->_field_elifs[static_cast<jule::Int>(0LL)]);
	{
		auto __julec_range_expr = _13524_c->_field_elifs.slice(static_cast<jule::Int>(1LL));
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1300a11b0_If> _127fba3d0_elif = *__julec_range_begin;
			_iter_begin_5150923776:;
			{
				_13613_obj+=jule::Str(" else ", 6);
				_13613_obj+=_127fba3d0_gen_if(_127fba3d0_elif);
			}
			_iter_next_5150923776:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127fba3d0_elif = *__julec_range_begin; goto _iter_begin_5150923776; }
			_iter_end_5150923776:;
		}
	}
	if (jule::real(_13524_c->_field_default)) {
		_13613_obj+=jule::Str(" else ", 6);
		_13613_obj+=_127fba3d0_gen_scope(_13524_c->_field_default->_field_scope);
	}
	return _13613_obj;
}



inline jule::Str _127fba3d0_gen_inf_iter(jule::Ref<_1300a11b0_InfIter> _15121_it) {
	jule::Str _1529_begin = _130f5aa90_iter_begin_label_ident(((jule::Uintptr)((_15121_it).alloc)));
	jule::Str _1539_end = _130f5aa90_iter_end_label_ident(((jule::Uintptr)((_15121_it).alloc)));
	jule::Str _1549_next = _130f5aa90_iter_next_label_ident(((jule::Uintptr)((_15121_it).alloc)));
	jule::Str _1559_indent = _130f8bbe0_indent();
	jule::Str _15713_obj = _1529_begin + jule::Str(":;\n", 3);
	_15713_obj+=_1559_indent;
	_15713_obj+=_127fba3d0_gen_scope(_15121_it->_field_scope);
	_15713_obj+=jule::Str("\n", 1);
	_15713_obj+=_1559_indent;
	_15713_obj+=_1549_next + jule::Str(":;\n", 3);
	_15713_obj+=_1559_indent;
	_15713_obj+=(jule::Str("goto ", 5) + _1529_begin) + jule::Str(";\n", 2);
	_15713_obj+=_1559_indent;
	_15713_obj+=_1539_end + jule::Str(":;", 2);
	return _15713_obj;
}



inline jule::Str _127fba3d0_gen_while_iter(jule::Ref<_1300a11b0_WhileIter> _17123_it) {
	jule::Str _1729_begin = _130f5aa90_iter_begin_label_ident(((jule::Uintptr)((_17123_it).alloc)));
	jule::Str _1739_end = _130f5aa90_iter_end_label_ident(((jule::Uintptr)((_17123_it).alloc)));
	jule::Str _1749_next = _130f5aa90_iter_next_label_ident(((jule::Uintptr)((_17123_it).alloc)));
	jule::Str _1759_indent = _130f8bbe0_indent();
	jule::Str _17713_obj = _1729_begin + jule::Str(":;\n", 3);
	_17713_obj+=_1759_indent;
	if (_17123_it->_field_expr != nullptr) {
		_17713_obj+=jule::Str("if (!(", 6);
		_17713_obj+=_130e870c0_gen_expr(_17123_it->_field_expr);
		_17713_obj+=jule::Str(")) { goto ", 10);
		_17713_obj+=_1739_end;
		_17713_obj+=jule::Str("; }\n", 4);
		_17713_obj+=_1759_indent;
	}
	_17713_obj+=_127fba3d0_gen_scope(_17123_it->_field_scope);
	_17713_obj+=jule::Str("\n", 1);
	_17713_obj+=_1759_indent;
	_17713_obj+=_1749_next + jule::Str(":;\n", 3);
	_17713_obj+=_1759_indent;
	if (_17123_it->_field_next != nullptr) {
		_17713_obj+=_127fba3d0_gen_st(_17123_it->_field_next);
		_17713_obj+=jule::Str("\n", 1);
		_17713_obj+=_1759_indent;
	}
	_17713_obj+=(jule::Str("goto ", 5) + _1729_begin) + jule::Str(";\n", 2);
	_17713_obj+=_1759_indent;
	_17713_obj+=_1739_end + jule::Str(":;", 2);
	return _17713_obj;
}



inline jule::Trait<_127fba3d0_RangeSetter> _127fba3d0_get_range_setter(jule::Ref<_1300a11b0_RangeIter> _20425_it) {
	{
		if (!((jule::real(_20425_it->_field_expr->_field_kind->_method_slc())))) { goto _case_end_5150965568; }
		_case_begin_5150965568:;
		{
			return jule::new_struct<_127fba3d0_IndexRangeSetter>(new( std::nothrow ) _127fba3d0_IndexRangeSetter());
		}
		goto _match_end_5150962464;
		_case_end_5150965568:;
		if (!((jule::real(_20425_it->_field_expr->_field_kind->_method_arr())))) { goto _case_end_5150965680; }
		_case_begin_5150965680:;
		{
			return jule::new_struct<_127fba3d0_IndexRangeSetter>(new( std::nothrow ) _127fba3d0_IndexRangeSetter());
		}
		goto _match_end_5150962464;
		_case_end_5150965680:;
		if (!((jule::real(_20425_it->_field_expr->_field_kind->_method_map())))) { goto _case_end_5150965792; }
		_case_begin_5150965792:;
		{
			return jule::new_struct<_127fba3d0_MapRangeSetter>(new( std::nothrow ) _127fba3d0_MapRangeSetter());
		}
		goto _match_end_5150962464;
		_case_end_5150965792:;
		_case_begin_5150957856:;
		{
			return jule::new_struct<_127fba3d0_IndexRangeSetter>(new( std::nothrow ) _127fba3d0_IndexRangeSetter());
		}
		goto _match_end_5150962464;
		_case_end_5150957856:;
		_match_end_5150962464:;
	}
}



inline jule::Str _127fba3d0_gen_range_iter(jule::Ref<_1300a11b0_RangeIter> _21323_it) {
	_130f8bbe0_add_indent();
	jule::Str _2169_begin = _130f5aa90_iter_begin_label_ident(((jule::Uintptr)((_21323_it).alloc)));
	jule::Str _2179_end = _130f5aa90_iter_end_label_ident(((jule::Uintptr)((_21323_it).alloc)));
	jule::Str _2189_next = _130f5aa90_iter_next_label_ident(((jule::Uintptr)((_21323_it).alloc)));
	jule::Str _21913__indent = _130f8bbe0_indent();
	jule::Trait<_127fba3d0_RangeSetter> _2209_setter = _127fba3d0_get_range_setter(_21323_it);
	jule::Str _22213_obj = jule::Str("{\n", 2);
	_22213_obj+=_21913__indent;
	if (_21323_it->_field_expr->_field_lvalue && _127cdea20_is_opt_enabled(jule::Str("--opt-copy", 10))) {
		_22213_obj+=jule::Str("auto &__julec_range_expr = ", 27);
	} else {
		_22213_obj+=jule::Str("auto __julec_range_expr = ", 26);
	}
	_22213_obj+=_130e870c0_gen_expr(_21323_it->_field_expr->_field_model) + jule::Str(";\n", 2);
	_22213_obj+=_21913__indent;
	_22213_obj+=jule::Str("if (__julec_range_expr.begin() != __julec_range_expr.end()) {\n", 62);
	_130f8bbe0_add_indent();
	_21913__indent=_130f8bbe0_indent();
	_22213_obj+=_21913__indent;
	_22213_obj+=jule::Str("auto __julec_range_begin = __julec_range_expr.begin();\n", 55);
	_22213_obj+=_21913__indent;
	_22213_obj+=jule::Str("const auto __julec_range_end = __julec_range_expr.end();\n", 57);
	_22213_obj+=_21913__indent;
	_22213_obj+=_2209_setter.get()._method_setup_vars(_21323_it->_field_key_a,_21323_it->_field_key_b);
	_22213_obj+=_2169_begin + jule::Str(":;\n", 3);
	_22213_obj+=_21913__indent;
	_22213_obj+=_127fba3d0_gen_scope(_21323_it->_field_scope);
	_22213_obj+=jule::Str("\n", 1);
	_22213_obj+=_21913__indent;
	_22213_obj+=_2189_next + jule::Str(":;\n", 3);
	_22213_obj+=_21913__indent;
	_22213_obj+=_2209_setter.get()._method_next_steps(_21323_it->_field_key_a,_21323_it->_field_key_b,_2169_begin);
	_22213_obj+=_21913__indent;
	_22213_obj+=_2179_end + jule::Str(":;\n", 3);
	_130f8bbe0_done_indent();
	_21913__indent=_130f8bbe0_indent();
	_22213_obj+=_21913__indent;
	_22213_obj+=jule::Str("}\n", 2);
	_130f8bbe0_done_indent();
	_21913__indent=_130f8bbe0_indent();
	_22213_obj+=_21913__indent;
	_22213_obj+=jule::Str("}", 1);
	return _22213_obj;
}



inline jule::Str _127fba3d0_gen_cont(jule::Ref<_1300a11b0_ContSt> _26813_c) {
	return (jule::Str("goto ", 5) + _130f5aa90_iter_next_label_ident(_26813_c->_field_it)) + jule::Str(";", 1);
}



inline jule::Str _127fba3d0_gen_label(jule::Ref<_1300a11b0_Label> _27214_l) {
	return _130f5aa90_label_ident(_27214_l->_field_ident) + jule::Str(":;", 2);
}



inline jule::Str _127fba3d0_gen_goto(jule::Ref<_1300a11b0_GotoSt> _27613_gt) {
	return (jule::Str("goto ", 5) + _130f5aa90_label_ident(_27613_gt->_field_ident)) + jule::Str(";", 1);
}



inline jule::Str _127fba3d0_gen_postfix(jule::Ref<_1300a11b0_Postfix> _28020_p) {
	return (((jule::Str("(", 1) + _130e870c0_gen_expr(_28020_p->_field_expr)) + jule::Str(")", 1)) + _28020_p->_field_op) + jule::Str(";", 1);
}



inline jule::Str _127fba3d0_gen_assign(jule::Ref<_1300a11b0_Assign> _28419_a) {
	jule::Str _28513_obj = _130e870c0_gen_expr(_28419_a->_field_l);
	_28513_obj+=_28419_a->_field_op;
	_28513_obj+=_130e870c0_gen_expr(_28419_a->_field_r);
	_28513_obj+=jule::Str(";", 1);
	return _28513_obj;
}



inline jule::Str _127fba3d0_gen_multi_assign(jule::Ref<_1300a11b0_MultiAssign> _29225_a) {
	jule::Str _29313_obj = jule::Str("std::tie(", 9);
	{
		auto &__julec_range_expr = _29225_a->_field_l;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _127fba3d0_l = *__julec_range_begin;
			_iter_begin_5151023312:;
			{
				if (_127fba3d0_l == nullptr) {
					_29313_obj+=jule::Str("std::ignore,", 12);
				} else {
					_29313_obj+=_130e870c0_gen_expr(_127fba3d0_l) + jule::Str(",", 1);
				}
			}
			_iter_next_5151023312:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127fba3d0_l = *__julec_range_begin; goto _iter_begin_5151023312; }
			_iter_end_5151023312:;
		}
	}
	_29313_obj=_29313_obj.slice(0LL,static_cast<jule::Int>(_29313_obj.len() - 1LL));
	_29313_obj+=jule::Str(") = ", 4);
	_29313_obj+=_130e870c0_gen_expr(_29225_a->_field_r);
	_29313_obj+=jule::Str(";", 1);
	return _29313_obj;
}



inline jule::Str _127fba3d0_gen_case(jule::Ref<_1300a11b0_Match> _31017_m,jule::Ref<_1300a11b0_Case> _31032_c) {
	
	jule::Str _3139_end = _130f5aa90_case_end_label_ident(((jule::Uintptr)((_31032_c).alloc)));
	jule::Str _31413_obj = jule::Str("", 0);
	if (_31032_c->_field_exprs.len() > 0LL) {
		_31413_obj+=jule::Str("if (!(", 6);
		{
			auto &__julec_range_expr = _31032_c->_field_exprs;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Int _127fba3d0_i = 0;
				jule::Any _127fba3d0_expr = *__julec_range_begin;
				_iter_begin_5151037072:;
				{
					{
						if (!(((!(_31017_m->_field_type_match))))) { goto _case_end_5151042624; }
						_case_begin_5151042624:;
						{
							_31413_obj+=jule::Str("(", 1);
							_31413_obj+=_130e870c0_gen_expr(_127fba3d0_expr);
							_31413_obj+=jule::Str(")", 1);
							if (_31017_m->_field_expr->_method_is_const()) {
								if ((!(_31017_m->_field_expr->_field_constant->_method_is_bool())) || (!(_31017_m->_field_expr->_field_constant->_method_read_bool()))) {
									_31413_obj+=jule::Str(" == ", 4);
									_31413_obj+=_130e870c0_gen_expr_model(_31017_m->_field_expr->_field_model);
								}
							} else {
								_31413_obj+=jule::Str(" == ", 4);
								_31413_obj+=jule::Str("_match_expr", 11);
							}
						}
						goto _match_end_5151040560;
						_case_end_5151042624:;
						_case_begin_5151040752:;
						{
							_31413_obj+=jule::Str("_match_expr", 11);
							_31413_obj+=(jule::Str(".type_is<", 9) + _130e870c0_gen_expr(_127fba3d0_expr)) + jule::Str(">()", 3);
						}
						goto _match_end_5151040560;
						_case_end_5151040752:;
						_match_end_5151040560:;
					}
					if ((_127fba3d0_i + 1LL) < _31032_c->_field_exprs.len()) {
						_31413_obj+=jule::Str(" || ", 4);
					}
				}
				_iter_next_5151037072:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { ++_127fba3d0_i; _127fba3d0_expr = *__julec_range_begin; goto _iter_begin_5151037072; }
				_iter_end_5151037072:;
			}
		}
		_31413_obj+=jule::Str(")) { goto ", 10);
		_31413_obj+=_3139_end + jule::Str("; }\n", 4);
	}
	if (_31032_c->_field_scope->_field_stmts._method_len() > 0LL) {
		_31413_obj+=_130f8bbe0_indent();
		_31413_obj+=_130f5aa90_case_begin_label_ident(((jule::Uintptr)((_31032_c).alloc))) + jule::Str(":;\n", 3);
		_31413_obj+=_130f8bbe0_indent();
		_31413_obj+=_127fba3d0_gen_scope(_31032_c->_field_scope);
		_31413_obj+=jule::Str("\n", 1);
	}
	_31413_obj+=_130f8bbe0_indent();
	_31413_obj+=jule::Str("goto ", 5);
	_31413_obj+=_130f5aa90_match_end_label_ident(((jule::Uintptr)((_31017_m).alloc))) + jule::Str(";", 1);
	_31413_obj+=jule::Str("\n", 1);
	_31413_obj+=_130f8bbe0_indent();
	_31413_obj+=_3139_end + jule::Str(":;", 2);
	return _31413_obj;
}



inline jule::Str _127fba3d0_gen_match(jule::Ref<_1300a11b0_Match> _36518_m) {
	jule::Str _36613_obj = jule::Str("{\n", 2);
	_130f8bbe0_add_indent();
	_36613_obj+=_130f8bbe0_indent();
	if ((!(_36518_m->_field_expr->_method_is_const()))) {
		if (_36518_m->_field_expr->_field_lvalue && _127cdea20_is_opt_enabled(jule::Str("--opt-copy", 10))) {
			_36613_obj+=jule::Str("auto &_match_expr{ ", 19);
		} else {
			_36613_obj+=jule::Str("auto _match_expr{ ", 18);
		}
		_36613_obj+=_130e870c0_gen_expr(_36518_m->_field_expr->_field_model);
		_36613_obj+=jule::Str(" };\n", 4);
		_36613_obj+=_130f8bbe0_indent();
	}
	if (_36518_m->_field_cases.len() > 0LL) {
		_36613_obj+=_127fba3d0_gen_case(_36518_m,_36518_m->_field_cases[static_cast<jule::Int>(0LL)]);
		{
			auto __julec_range_expr = _36518_m->_field_cases.slice(static_cast<jule::Int>(1LL));
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_1300a11b0_Case> _127fba3d0_c = *__julec_range_begin;
				_iter_begin_5151078608:;
				{
					_36613_obj+=jule::Str("\n", 1);
					_36613_obj+=_130f8bbe0_indent();
					_36613_obj+=_127fba3d0_gen_case(_36518_m,_127fba3d0_c);
				}
				_iter_next_5151078608:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _127fba3d0_c = *__julec_range_begin; goto _iter_begin_5151078608; }
				_iter_end_5151078608:;
			}
		}
	}
	if (jule::real(_36518_m->_field_default)) {
		_36613_obj+=jule::Str("\n", 1);
		_36613_obj+=_127fba3d0_gen_case(_36518_m,_36518_m->_field_default);
	}
	_36613_obj+=jule::Str("\n", 1);
	_36613_obj+=_130f8bbe0_indent();
	_36613_obj+=_130f5aa90_match_end_label_ident(((jule::Uintptr)((_36518_m).alloc))) + jule::Str(":;", 2);
	_36613_obj+=jule::Str("\n", 1);
	_130f8bbe0_done_indent();
	_36613_obj+=_130f8bbe0_indent();
	_36613_obj+=jule::Str("}", 1);
	return _36613_obj;
}



inline jule::Str _127fba3d0_gen_fall_st(jule::Ref<_1300a11b0_FallSt> _41116_f) {
	return (jule::Str("goto ", 5) + _130f5aa90_case_begin_label_ident(_41116_f->_field_dest_case)) + jule::Str(";", 1);
}



inline jule::Str _127fba3d0_gen_break_st(jule::Ref<_1300a11b0_BreakSt> _41517_b) {
	jule::Str _41613_obj = jule::Str("goto ", 5);
	if (_41517_b->_field_it != 0LL) {
		_41613_obj+=_130f5aa90_iter_end_label_ident(_41517_b->_field_it);
	} else {
		_41613_obj+=_130f5aa90_match_end_label_ident(_41517_b->_field_mtch);
	}
	_41613_obj+=jule::Str(";", 1);
	return _41613_obj;
}



inline jule::Str _127fba3d0_gen_ret_vars(jule::Ref<_1300a11b0_RetSt> _42721_r) {
	jule::Str _42813_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _42721_r->_field_vars;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1303533b0_Var> _127fba3d0_v = *__julec_range_begin;
			_iter_begin_5151099616:;
			{
				if (_127941de0_is_ignore_ident(_127fba3d0_v->_field_ident)) {
					_42813_obj+=_130e870c0_get_init_expr(_127fba3d0_v->_field_kind->_field_kind);
				} else {
					_42813_obj+=_130f5aa90_var_out_ident(_127fba3d0_v);
				}
				_42813_obj+=jule::Str(",", 1);
			}
			_iter_next_5151099616:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _127fba3d0_v = *__julec_range_begin; goto _iter_begin_5151099616; }
			_iter_end_5151099616:;
		}
	}
	_42813_obj=_42813_obj.slice(0LL,static_cast<jule::Int>(_42813_obj.len() - 1LL));
	if (_42721_r->_field_vars.len() > 1LL) {
		_42813_obj=(jule::Str("return std::make_tuple(", 23) + _42813_obj) + jule::Str(")", 1);
	} else {
		_42813_obj=jule::Str("return ", 7) + _42813_obj;
	}
	_42813_obj+=jule::Str(";", 1);
	return _42813_obj;
}



inline jule::Str _127fba3d0_gen_ret_expr_tuple(jule::Ref<_1300a11b0_RetSt> _45127_r) {
	{
		auto &_match_expr{ _45127_r->_field_expr };
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_FnCallExprModel>>())) { goto _case_end_5151111072; }
		_case_begin_5151111072:;
		{
			return (jule::Str("return ", 7) + _130e870c0_gen_expr_model(_45127_r->_field_expr)) + jule::Str(";", 1);
		}
		goto _match_end_5151109856;
		_case_end_5151111072:;
		_match_end_5151109856:;
	}
	jule::Slice<jule::Ref<_13064b610_Data>> _45713_datas = _45127_r->_field_expr.operator jule::Ref<_1279cf930_TupleExprModel>()->_field_datas;
	jule::Str _45813_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _45127_r->_field_vars;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _127fba3d0_i = 0;
			jule::Ref<_1303533b0_Var> _127fba3d0_v = *__julec_range_begin;
			_iter_begin_5151117088:;
			{
				if ((!(_127941de0_is_ignore_ident(_127fba3d0_v->_field_ident)))) {
					jule::Str _46217_ident = _130f5aa90_var_out_ident(_127fba3d0_v);
					_45813_obj+=((_46217_ident + jule::Str(" = ", 3)) + _130e870c0_gen_expr(_45713_datas[static_cast<jule::Int>(_127fba3d0_i)]->_field_model)) + jule::Str(";\n", 2);
					_45813_obj+=_130f8bbe0_indent();
				}
			}
			_iter_next_5151117088:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_127fba3d0_i; _127fba3d0_v = *__julec_range_begin; goto _iter_begin_5151117088; }
			_iter_end_5151117088:;
		}
	}
	_45813_obj+=jule::Str("return std::make_tuple(", 23);
	{
		auto &__julec_range_expr = _45713_datas;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _127fba3d0_i = 0;
			jule::Ref<_13064b610_Data> _127fba3d0_d = *__julec_range_begin;
			_iter_begin_5151118560:;
			{
				jule::Ref<_1303533b0_Var> _47017_v = _45127_r->_field_vars[static_cast<jule::Int>(_127fba3d0_i)];
				if (_127941de0_is_ignore_ident(_47017_v->_field_ident)) {
					_45813_obj+=_130e870c0_gen_expr(_127fba3d0_d->_field_model);
				} else {
					_45813_obj+=_130f5aa90_var_out_ident(_47017_v);
				}
				_45813_obj+=jule::Str(",", 1);
			}
			_iter_next_5151118560:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_127fba3d0_i; _127fba3d0_d = *__julec_range_begin; goto _iter_begin_5151118560; }
			_iter_end_5151118560:;
		}
	}
	_45813_obj=_45813_obj.slice(0LL,static_cast<jule::Int>(_45813_obj.len() - 1LL));
	_45813_obj+=jule::Str(");", 2);
	return _45813_obj;
}



inline jule::Str _127fba3d0_gen_ret_expr(jule::Ref<_1300a11b0_RetSt> _48521_r) {
	if (_48521_r->_field_vars.len() == 0LL) {
		return (jule::Str("return ", 7) + _130e870c0_gen_expr(_48521_r->_field_expr)) + jule::Str(";", 1);
	}
	if (_48521_r->_field_vars.len() > 1LL) {
		return _127fba3d0_gen_ret_expr_tuple(_48521_r);
	}
	if ((!(_127941de0_is_ignore_ident(_48521_r->_field_vars[static_cast<jule::Int>(0LL)]->_field_ident)))) {
		jule::Str _49513_ident = _130f5aa90_var_out_ident(_48521_r->_field_vars[static_cast<jule::Int>(0LL)]);
		jule::Str _49617_obj = ((_49513_ident + jule::Str(" = ", 3)) + _130e870c0_gen_expr(_48521_r->_field_expr)) + jule::Str(";\n", 2);
		_49617_obj+=_130f8bbe0_indent();
		_49617_obj+=(jule::Str("return ", 7) + _49513_ident) + jule::Str(";", 1);
		return _49617_obj;
	}
	return (jule::Str("return ", 7) + _130e870c0_gen_expr(_48521_r->_field_expr)) + jule::Str(";", 1);
}



inline jule::Str _127fba3d0_gen_ret_st(jule::Ref<_1300a11b0_RetSt> _50519_r) {
	if ((_50519_r->_field_expr == nullptr) && (_50519_r->_field_vars.len() == 0LL)) {
		return jule::Str("return;", 7);
	}
	if (_50519_r->_field_expr == nullptr) {
		return _127fba3d0_gen_ret_vars(_50519_r);
	}
	return _127fba3d0_gen_ret_expr(_50519_r);
}



inline jule::Str _127fba3d0_gen_recover(jule::Ref<_1300a11b0_Recover> _51720_r) {
	jule::Str _51813_obj = jule::Str("try ", 4);
	_51813_obj+=_127fba3d0_gen_scope(_51720_r->_field_scope);
	_51813_obj+=jule::Str(" catch(jule::Exception e) ", 26);
	if (_51720_r->_field_handler->_method_is_anon()) {
		jule::Ref<_127ed52e0_Param> _52913_handler_param = _51720_r->_field_handler->_field_decl->_field_params[static_cast<jule::Int>(0LL)];
		if ((!(_127941de0_is_ignore_ident(_52913_handler_param->_field_ident))) && (!(_127941de0_is_anon_ident(_52913_handler_param->_field_ident)))) {
			_130f8bbe0_add_indent();
			_51813_obj+=jule::Str("{\n", 2);
			_51813_obj+=_130f8bbe0_indent();
			_51813_obj+=jule::Str("jule::Trait<jule::Error> ", 25);
			_51813_obj+=_130f5aa90_param_out_ident(_52913_handler_param);
			_51813_obj+=jule::Str("{ jule::exception_to_error(e) };\n", 33);
			_51813_obj+=_130f8bbe0_indent();
			_51813_obj+=_127fba3d0_gen_scope(_51720_r->_field_handler->_field_scope);
			_130f8bbe0_done_indent();
			_51813_obj+=jule::Str("\n", 1);
			_51813_obj+=_130f8bbe0_indent();
			_51813_obj+=jule::Str("}", 1);
		} else {
			_51813_obj+=_127fba3d0_gen_scope(_51720_r->_field_handler->_field_scope);
		}
	} else {
		_51813_obj+=jule::Str("{ ", 2);
		_51813_obj+=_130e870c0_gen_expr(_51720_r->_field_handler_expr);
		_51813_obj+=jule::Str("(jule::exception_to_error(e)); }", 32);
	}
	return _51813_obj;
}



inline jule::Str _127fba3d0_gen_data_expr(jule::Ref<_13064b610_Data> _55822_d) {
	return _130e870c0_gen_expr(_55822_d->_field_model) + jule::Str(";", 1);
}



inline jule::Str _127fba3d0_gen_st(jule::Any _56315_st) {
	{
		auto &_match_expr{ _56315_st };
		if (!(_match_expr.type_is<jule::Ref<_1300a11b0_Scope>>())) { goto _case_end_5151179376; }
		_case_begin_5151179376:;
		{
			return _127fba3d0_gen_scope(_56315_st.operator jule::Ref<_1300a11b0_Scope>());
		}
		goto _match_end_5151177728;
		_case_end_5151179376:;
		if (!(_match_expr.type_is<jule::Ref<_1303533b0_Var>>())) { goto _case_end_5151179488; }
		_case_begin_5151179488:;
		{
			return _130f8bbe0_gen_var(_56315_st.operator jule::Ref<_1303533b0_Var>());
		}
		goto _match_end_5151177728;
		_case_end_5151179488:;
		if (!(_match_expr.type_is<jule::Ref<_13064b610_Data>>())) { goto _case_end_5151179600; }
		_case_begin_5151179600:;
		{
			return _127fba3d0_gen_data_expr(_56315_st.operator jule::Ref<_13064b610_Data>());
		}
		goto _match_end_5151177728;
		_case_end_5151179600:;
		if (!(_match_expr.type_is<jule::Ref<_1300a11b0_Conditional>>())) { goto _case_end_5151179712; }
		_case_begin_5151179712:;
		{
			return _127fba3d0_gen_conditional(_56315_st.operator jule::Ref<_1300a11b0_Conditional>());
		}
		goto _match_end_5151177728;
		_case_end_5151179712:;
		if (!(_match_expr.type_is<jule::Ref<_1300a11b0_InfIter>>())) { goto _case_end_5151179824; }
		_case_begin_5151179824:;
		{
			return _127fba3d0_gen_inf_iter(_56315_st.operator jule::Ref<_1300a11b0_InfIter>());
		}
		goto _match_end_5151177728;
		_case_end_5151179824:;
		if (!(_match_expr.type_is<jule::Ref<_1300a11b0_WhileIter>>())) { goto _case_end_5151179936; }
		_case_begin_5151179936:;
		{
			return _127fba3d0_gen_while_iter(_56315_st.operator jule::Ref<_1300a11b0_WhileIter>());
		}
		goto _match_end_5151177728;
		_case_end_5151179936:;
		if (!(_match_expr.type_is<jule::Ref<_1300a11b0_RangeIter>>())) { goto _case_end_5151180048; }
		_case_begin_5151180048:;
		{
			return _127fba3d0_gen_range_iter(_56315_st.operator jule::Ref<_1300a11b0_RangeIter>());
		}
		goto _match_end_5151177728;
		_case_end_5151180048:;
		if (!(_match_expr.type_is<jule::Ref<_1300a11b0_ContSt>>())) { goto _case_end_5151180208; }
		_case_begin_5151180208:;
		{
			return _127fba3d0_gen_cont(_56315_st.operator jule::Ref<_1300a11b0_ContSt>());
		}
		goto _match_end_5151177728;
		_case_end_5151180208:;
		if (!(_match_expr.type_is<jule::Ref<_1300a11b0_Label>>())) { goto _case_end_5151180320; }
		_case_begin_5151180320:;
		{
			return _127fba3d0_gen_label(_56315_st.operator jule::Ref<_1300a11b0_Label>());
		}
		goto _match_end_5151177728;
		_case_end_5151180320:;
		if (!(_match_expr.type_is<jule::Ref<_1300a11b0_GotoSt>>())) { goto _case_end_5151180432; }
		_case_begin_5151180432:;
		{
			return _127fba3d0_gen_goto(_56315_st.operator jule::Ref<_1300a11b0_GotoSt>());
		}
		goto _match_end_5151177728;
		_case_end_5151180432:;
		if (!(_match_expr.type_is<jule::Ref<_1300a11b0_Postfix>>())) { goto _case_end_5151180544; }
		_case_begin_5151180544:;
		{
			return _127fba3d0_gen_postfix(_56315_st.operator jule::Ref<_1300a11b0_Postfix>());
		}
		goto _match_end_5151177728;
		_case_end_5151180544:;
		if (!(_match_expr.type_is<jule::Ref<_1300a11b0_Assign>>())) { goto _case_end_5151180656; }
		_case_begin_5151180656:;
		{
			return _127fba3d0_gen_assign(_56315_st.operator jule::Ref<_1300a11b0_Assign>());
		}
		goto _match_end_5151177728;
		_case_end_5151180656:;
		if (!(_match_expr.type_is<jule::Ref<_1300a11b0_MultiAssign>>())) { goto _case_end_5151180768; }
		_case_begin_5151180768:;
		{
			return _127fba3d0_gen_multi_assign(_56315_st.operator jule::Ref<_1300a11b0_MultiAssign>());
		}
		goto _match_end_5151177728;
		_case_end_5151180768:;
		if (!(_match_expr.type_is<jule::Ref<_1300a11b0_Match>>())) { goto _case_end_5151180880; }
		_case_begin_5151180880:;
		{
			return _127fba3d0_gen_match(_56315_st.operator jule::Ref<_1300a11b0_Match>());
		}
		goto _match_end_5151177728;
		_case_end_5151180880:;
		if (!(_match_expr.type_is<jule::Ref<_1300a11b0_FallSt>>())) { goto _case_end_5151180992; }
		_case_begin_5151180992:;
		{
			return _127fba3d0_gen_fall_st(_56315_st.operator jule::Ref<_1300a11b0_FallSt>());
		}
		goto _match_end_5151177728;
		_case_end_5151180992:;
		if (!(_match_expr.type_is<jule::Ref<_1300a11b0_BreakSt>>())) { goto _case_end_5151181104; }
		_case_begin_5151181104:;
		{
			return _127fba3d0_gen_break_st(_56315_st.operator jule::Ref<_1300a11b0_BreakSt>());
		}
		goto _match_end_5151177728;
		_case_end_5151181104:;
		if (!(_match_expr.type_is<jule::Ref<_1300a11b0_RetSt>>())) { goto _case_end_5151181216; }
		_case_begin_5151181216:;
		{
			return _127fba3d0_gen_ret_st(_56315_st.operator jule::Ref<_1300a11b0_RetSt>());
		}
		goto _match_end_5151177728;
		_case_end_5151181216:;
		if (!(_match_expr.type_is<jule::Ref<_1300a11b0_Recover>>())) { goto _case_end_5151181328; }
		_case_begin_5151181328:;
		{
			return _127fba3d0_gen_recover(_56315_st.operator jule::Ref<_1300a11b0_Recover>());
		}
		goto _match_end_5151177728;
		_case_end_5151181328:;
		_case_begin_5151178128:;
		{
			return jule::Str("<unimplemented_stmt>", 20);
		}
		goto _match_end_5151177728;
		_case_end_5151178128:;
		_match_end_5151177728:;
	}
}



inline jule::Str _127fba3d0_gen_scope(jule::Ref<_1300a11b0_Scope> _58818_s) {
	jule::Str _58913_obj = jule::Str("{\n", 2);
	_130f8bbe0_add_indent();
	jule::Int _59213_i = 0LL;
	_iter_begin_5151215888:;
	if (!(_59213_i < _58818_s->_field_stmts._method_len())) { goto _iter_end_5151215888; }
	{
		jule::Any _59417_st = _58818_s->_field_stmts._method_at(_59213_i);
		_58913_obj+=_130f8bbe0_indent();
		_58913_obj+=_127fba3d0_gen_st(_59417_st);
		_58913_obj+=jule::Str("\n", 1);
	}
	_iter_next_5151215888:;
	(_59213_i)++;
	goto _iter_begin_5151215888;
	_iter_end_5151215888:;
	_130f8bbe0_done_indent();
	_58913_obj+=_130f8bbe0_indent();
	_58913_obj+=jule::Str("}", 1);
	if (_58818_s->_field_deferred) {
		_58913_obj=(jule::Str("__JULE_DEFER(", 13) + _58913_obj) + jule::Str(");", 2);
	}
	return _58913_obj;
}



inline jule::Str _127fba3d0_gen_fn_scope(jule::Ref<_127ed52e0_FnIns> _61221_f) {
	if (jule::real(_61221_f->_field_owner)) {
		return _127fba3d0_gen_method_scope(_61221_f);
	}
	return _127fba3d0_gen_scope(_61221_f->_field_scope);
}



inline jule::Str _127fba3d0_gen_method_scope(jule::Ref<_127ed52e0_FnIns> _62125_f) {
	return _127fba3d0_gen_scope(_62125_f->_field_scope);
}



inline jule::Str _130e870c0_get_accessor(jule::Ref<_1304dc9b0_TypeKind> _7321_t) {
	if (jule::real(_7321_t->_method_ref()) || jule::real(_7321_t->_method_ptr())) {
		return jule::Str("->", 2);
	}
	return jule::Str(".", 1);
}



inline jule::Str _130e870c0_decompose_common_esq(jule::U8 _8025_b) {
	{
		auto &_match_expr{ _8025_b };
		if (!(('\\') == _match_expr)) { goto _case_end_5151234656; }
		_case_begin_5151234656:;
		{
			return jule::Str("\\\\", 2);
		}
		goto _match_end_5151232672;
		_case_end_5151234656:;
		if (!(('\'') == _match_expr)) { goto _case_end_5151234208; }
		_case_begin_5151234208:;
		{
			return jule::Str("'", 1);
		}
		goto _match_end_5151232672;
		_case_end_5151234208:;
		if (!(('\"') == _match_expr)) { goto _case_end_5151234320; }
		_case_begin_5151234320:;
		{
			return jule::Str("\\\"", 2);
		}
		goto _match_end_5151232672;
		_case_end_5151234320:;
		if (!(('\a') == _match_expr)) { goto _case_end_5151234960; }
		_case_begin_5151234960:;
		{
			return jule::Str("\\a", 2);
		}
		goto _match_end_5151232672;
		_case_end_5151234960:;
		if (!(('\b') == _match_expr)) { goto _case_end_5151235072; }
		_case_begin_5151235072:;
		{
			return jule::Str("\\b", 2);
		}
		goto _match_end_5151232672;
		_case_end_5151235072:;
		if (!(('\f') == _match_expr)) { goto _case_end_5151235184; }
		_case_begin_5151235184:;
		{
			return jule::Str("\\f", 2);
		}
		goto _match_end_5151232672;
		_case_end_5151235184:;
		if (!(('\n') == _match_expr)) { goto _case_end_5151235296; }
		_case_begin_5151235296:;
		{
			return jule::Str("\\n", 2);
		}
		goto _match_end_5151232672;
		_case_end_5151235296:;
		if (!(('\r') == _match_expr)) { goto _case_end_5151235408; }
		_case_begin_5151235408:;
		{
			return jule::Str("\\r", 2);
		}
		goto _match_end_5151232672;
		_case_end_5151235408:;
		if (!(('\t') == _match_expr)) { goto _case_end_5151235520; }
		_case_begin_5151235520:;
		{
			return jule::Str("\\t", 2);
		}
		goto _match_end_5151232672;
		_case_end_5151235520:;
		if (!(('\v') == _match_expr)) { goto _case_end_5151235648; }
		_case_begin_5151235648:;
		{
			return jule::Str("\\v", 2);
		}
		goto _match_end_5151232672;
		_case_end_5151235648:;
		_case_begin_5151232768:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_5151232672;
		_case_end_5151232768:;
		_match_end_5151232672:;
	}
}



inline jule::Str _130e870c0_sbtoa(jule::U8 _9610_b) {
	if (_9610_b == 0LL) {
		return jule::Str("\\x00", 4);
	}
	if (_9610_b <= 127LL) {
		jule::Str _10213_seq = _130e870c0_decompose_common_esq(_9610_b);
		if (_10213_seq != jule::Str("", 0)) {
			return _10213_seq;
		}
		if ((32LL <= _9610_b) && (_9610_b <= 126LL)) {
			return static_cast<jule::Str>(_9610_b);
		}
	}
	jule::Str _1129_seq = _127164920_fmt_uint(static_cast<jule::U64>(_9610_b),8LL);
	if (_1129_seq.len() == 2LL) {
		return jule::Str("\\0", 2) + _1129_seq;
	}
	return jule::Str("\\", 1) + _1129_seq;
}



inline jule::Str _130e870c0_get_str_model(jule::Ref<_130c83140_Const> _11918_c) {
	jule::Str _1209_content = _11918_c->_method_read_str();
	jule::Slice<jule::U8> _1219_bytes = static_cast<jule::Slice<jule::U8>>(_1209_content);
	jule::Str _1229_len = _127164920_fmt_int(static_cast<jule::I64>(_1219_bytes.len()),10LL);
	jule::Str _12413_lit = jule::Str("", 0);
	{
		auto &__julec_range_expr = _1219_bytes;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::U8 _130e870c0_b = *__julec_range_begin;
			_iter_begin_5151260208:;
			{
				_12413_lit+=_130e870c0_sbtoa(_130e870c0_b);
			}
			_iter_next_5151260208:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _130e870c0_b = *__julec_range_begin; goto _iter_begin_5151260208; }
			_iter_end_5151260208:;
		}
	}
	return ((((_130f5aa90_as_jt(jule::Str("str", 3)) + jule::Str("(\"", 2)) + _12413_lit) + jule::Str("\", ", 3)) + _1229_len) + jule::Str(")", 1);
}



inline jule::Str _130e870c0_get_bool_model(jule::Ref<_130c83140_Const> _13219_c) {
	if (_13219_c->_method_read_bool()) {
		return jule::Str("true", 4);
	}
	return jule::Str("false", 5);
}



inline jule::Str _130e870c0_get_nil_model(void) {
	return jule::Str("nullptr", 7);
}



inline jule::Str _130e870c0_gen_float_special_cases(jule::F64 _14128_x) {
	{
		if (!((_12723d9f0_is_nan(_14128_x)))) { goto _case_end_5151268192; }
		_case_begin_5151268192:;
		{
			return jule::Str("NAN", 3);
		}
		goto _match_end_5151267680;
		_case_end_5151268192:;
		if (!((_12723d9f0_is_inf(_14128_x,1LL)))) { goto _case_end_5151268304; }
		_case_begin_5151268304:;
		{
			return jule::Str("INFINITY", 8);
		}
		goto _match_end_5151267680;
		_case_end_5151268304:;
		if (!((_12723d9f0_is_inf(_14128_x,-1LL)))) { goto _case_end_5151268416; }
		_case_begin_5151268416:;
		{
			return jule::Str("-INFINITY", 9);
		}
		goto _match_end_5151267680;
		_case_end_5151268416:;
		_case_begin_5151267888:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_5151267680;
		_case_end_5151267888:;
		_match_end_5151267680:;
	}
}



inline jule::Str _130e870c0_get_f32_model(jule::Ref<_130c83140_Const> _15018_c) {
	jule::F64 _1519_x = _15018_c->_method_as_f64();
	jule::Str _1549_f = _130e870c0_gen_float_special_cases(_1519_x);
	if (_1549_f != jule::Str("", 0)) {
		return _1549_f;
	}
	{
		if (!((_1519_x == 3.4028234663852886e+38))) { goto _case_end_5151276080; }
		_case_begin_5151276080:;
		{
			return jule::Str("jule::MAX_F32", 13);
		}
		goto _match_end_5151275648;
		_case_end_5151276080:;
		if (!((_1519_x == -3.4028234663852886e+38))) { goto _case_end_5151276192; }
		_case_begin_5151276192:;
		{
			return jule::Str("jule::MIN_F32", 13);
		}
		goto _match_end_5151275648;
		_case_end_5151276192:;
		_match_end_5151275648:;
	}
	return _136f888c0_fmt_float(_1519_x,'e',-1LL,32LL) + jule::Str("f", 1);
}



inline jule::Str _130e870c0_get_f64_model(jule::Ref<_130c83140_Const> _16718_c) {
	jule::F64 _1689_x = _16718_c->_method_as_f64();
	jule::Str _1719_f = _130e870c0_gen_float_special_cases(_1689_x);
	if (_1719_f != jule::Str("", 0)) {
		return _1719_f;
	}
	{
		if (!((_1689_x == jule::MAX_F64))) { goto _case_end_5151286992; }
		_case_begin_5151286992:;
		{
			return jule::Str("jule::MAX_F64", 13);
		}
		goto _match_end_5151288416;
		_case_end_5151286992:;
		if (!((_1689_x == jule::MIN_F64))) { goto _case_end_5151287104; }
		_case_begin_5151287104:;
		{
			return jule::Str("jule::MIN_F64", 13);
		}
		goto _match_end_5151288416;
		_case_end_5151287104:;
		_match_end_5151288416:;
	}
	return _136f888c0_fmt_float(_1689_x,'e',-1LL,64LL);
}



inline jule::Str _130e870c0_get_float_model(jule::Ref<_13064b610_Data> _18424_d) {
	{
		if (!((_18424_d->_field_kind->_method_prim()->_method_is_f32()))) { goto _case_end_5151293696; }
		_case_begin_5151293696:;
		{
			return _130e870c0_get_f32_model(_18424_d->_field_constant);
		}
		goto _match_end_5151292480;
		_case_end_5151293696:;
		_case_begin_5151292608:;
		{
			return _130e870c0_get_f64_model(_18424_d->_field_constant);
		}
		goto _match_end_5151292480;
		_case_end_5151292608:;
		_match_end_5151292480:;
	}
}



inline jule::Str _130e870c0_i64toa(jule::I64 _19111_x) {
	{
		if (!((_19111_x == jule::MAX_I64))) { goto _case_end_5151296240; }
		_case_begin_5151296240:;
		{
			return jule::Str("jule::MAX_I64", 13);
		}
		goto _match_end_5151295984;
		_case_end_5151296240:;
		if (!((_19111_x == jule::MIN_I64))) { goto _case_end_5151297952; }
		_case_begin_5151297952:;
		{
			return jule::Str("jule::MIN_I64", 13);
		}
		goto _match_end_5151295984;
		_case_end_5151297952:;
		_match_end_5151295984:;
	}
	jule::Str _1979_fmt = _127164920_fmt_int(_19111_x,10LL);
	if (_136ea8e10_is_64bit(jule::Str("arm64", 5))) {
		return _1979_fmt + jule::Str("LL", 2);
	}
	return _1979_fmt + jule::Str("L", 1);
}



inline jule::Str _130e870c0_get_i64_model(jule::Ref<_130c83140_Const> _20418_c) {
	return _130e870c0_i64toa(static_cast<jule::I64>(_20418_c->_method_read_i64()));
}



inline jule::Str _130e870c0_get_u64_model(jule::Ref<_130c83140_Const> _20818_c) {
	jule::U64 _2099_x = _20818_c->_method_read_u64();
	{
		if (!((_2099_x == jule::MAX_U64))) { goto _case_end_5151308272; }
		_case_begin_5151308272:;
		{
			return jule::Str("jule::MAX_U64", 13);
		}
		goto _match_end_5151308016;
		_case_end_5151308272:;
		_match_end_5151308016:;
	}
	jule::Str _2169_fmt = _127164920_fmt_uint(_2099_x,10LL);
	if (_136ea8e10_is_64bit(jule::Str("arm64", 5))) {
		return _2169_fmt + jule::Str("LLU", 3);
	}
	return _2169_fmt + jule::Str("LU", 2);
}



inline jule::Str _130e870c0_gen_const_expr(jule::Ref<_13064b610_Data> _22323_d) {
	{
		if (!((_22323_d->_field_constant->_method_is_str()))) { goto _case_end_5151314640; }
		_case_begin_5151314640:;
		{
			return _130e870c0_get_str_model(_22323_d->_field_constant);
		}
		goto _match_end_5151311648;
		_case_end_5151314640:;
		if (!((_22323_d->_field_constant->_method_is_bool()))) { goto _case_end_5151314752; }
		_case_begin_5151314752:;
		{
			return _130e870c0_get_bool_model(_22323_d->_field_constant);
		}
		goto _match_end_5151311648;
		_case_end_5151314752:;
		if (!((_22323_d->_field_constant->_method_is_f64()))) { goto _case_end_5151314864; }
		_case_begin_5151314864:;
		{
			return _130e870c0_get_float_model(_22323_d);
		}
		goto _match_end_5151311648;
		_case_end_5151314864:;
		if (!((_22323_d->_field_constant->_method_is_i64()))) { goto _case_end_5151315728; }
		_case_begin_5151315728:;
		{
			return _130e870c0_get_i64_model(_22323_d->_field_constant);
		}
		goto _match_end_5151311648;
		_case_end_5151315728:;
		if (!((_22323_d->_field_constant->_method_is_u64()))) { goto _case_end_5151315840; }
		_case_begin_5151315840:;
		{
			return _130e870c0_get_u64_model(_22323_d->_field_constant);
		}
		goto _match_end_5151311648;
		_case_end_5151315840:;
		if (!((_22323_d->_field_constant->_method_is_nil()))) { goto _case_end_5151315952; }
		_case_begin_5151315952:;
		{
			return _130e870c0_get_nil_model();
		}
		goto _match_end_5151311648;
		_case_end_5151315952:;
		_case_begin_5151314336:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_5151311648;
		_case_end_5151314336:;
		_match_end_5151311648:;
	}
}



inline jule::Str _130e870c0_gen_const_expr_model(jule::Ref<_130c83140_Const> _23525_m) {
	{
		if (!((_23525_m->_method_is_str()))) { goto _case_end_5151330368; }
		_case_begin_5151330368:;
		{
			return _130e870c0_get_str_model(_23525_m);
		}
		goto _match_end_5151329760;
		_case_end_5151330368:;
		if (!((_23525_m->_method_is_bool()))) { goto _case_end_5151330480; }
		_case_begin_5151330480:;
		{
			return _130e870c0_get_bool_model(_23525_m);
		}
		goto _match_end_5151329760;
		_case_end_5151330480:;
		if (!((_23525_m->_method_is_f64()))) { goto _case_end_5151330592; }
		_case_begin_5151330592:;
		{
			return _130e870c0_get_f64_model(_23525_m);
		}
		goto _match_end_5151329760;
		_case_end_5151330592:;
		if (!((_23525_m->_method_is_i64()))) { goto _case_end_5151331360; }
		_case_begin_5151331360:;
		{
			return _130e870c0_get_i64_model(_23525_m);
		}
		goto _match_end_5151329760;
		_case_end_5151331360:;
		if (!((_23525_m->_method_is_u64()))) { goto _case_end_5151331472; }
		_case_begin_5151331472:;
		{
			return _130e870c0_get_u64_model(_23525_m);
		}
		goto _match_end_5151329760;
		_case_end_5151331472:;
		if (!((_23525_m->_method_is_nil()))) { goto _case_end_5151331584; }
		_case_begin_5151331584:;
		{
			return _130e870c0_get_nil_model();
		}
		goto _match_end_5151329760;
		_case_end_5151331584:;
		_case_begin_5151329968:;
		{
			return jule::Str("", 0);
		}
		goto _match_end_5151329760;
		_case_end_5151329968:;
		_match_end_5151329760:;
	}
}



inline jule::Str _130e870c0_gen_binop_expr_model(jule::Ref<_1279cf930_BinopExprModel> _24729_m) {
	{
		auto &_match_expr{ _24729_m->_field_op };
		if (!((jule::Str("/", 1)) == _match_expr)) { goto _case_end_5151347568; }
		_case_begin_5151347568:;
		{
			jule::Str _25017_obj = jule::Str("jule::div(", 10);
			_25017_obj+=_130e870c0_gen_expr(_24729_m->_field_left);
			_25017_obj+=jule::Str(",", 1);
			_25017_obj+=_130e870c0_gen_expr(_24729_m->_field_right);
			_25017_obj+=jule::Str(")", 1);
			return _25017_obj;
		}
		goto _match_end_5151332784;
		_case_end_5151347568:;
		_case_begin_5151340240:;
		{
			jule::Str _25817_obj = jule::Str("(", 1);
			_25817_obj+=_130e870c0_gen_expr_model(_24729_m->_field_left);
			_25817_obj+=jule::Str(" ", 1);
			_25817_obj+=_24729_m->_field_op;
			_25817_obj+=jule::Str(" ", 1);
			_25817_obj+=_130e870c0_gen_expr_model(_24729_m->_field_right);
			_25817_obj+=jule::Str(")", 1);
			return _25817_obj;
		}
		goto _match_end_5151332784;
		_case_end_5151340240:;
		_match_end_5151332784:;
	}
}



inline jule::Str _130e870c0_gen_var_expr_model(jule::Ref<_1303533b0_Var> _26927_m) {
	return _130f5aa90_var_out_ident(_26927_m);
}



inline jule::Str _130e870c0_gen_struct_expr_model(jule::Ref<_127b2e960_Struct> _27326_m) {
	return _13023c2e0_gen_struct_kind(_27326_m);
}



inline jule::Str _130e870c0_gen_struct_ins_expr_model(jule::Ref<_127b2e960_StructIns> _27734_m) {
	return _13023c2e0_gen_struct_kind_ins(_27734_m);
}



inline jule::Str _130e870c0_gen_unary_expr_model(jule::Ref<_1279cf930_UnaryExprModel> _28129_m) {
	{
		auto &_match_expr{ _28129_m->_field_op };
		if (!((jule::Str("^", 1)) == _match_expr)) { goto _case_end_5151359632; }
		_case_begin_5151359632:;
		{
			return (jule::Str("(~(", 3) + _130e870c0_gen_expr(_28129_m->_field_expr)) + jule::Str("))", 2);
		}
		goto _match_end_5151355072;
		_case_end_5151359632:;
		_case_begin_5151356624:;
		{
			return (((jule::Str("(", 1) + _28129_m->_field_op) + jule::Str("(", 1)) + _130e870c0_gen_expr(_28129_m->_field_expr)) + jule::Str("))", 2);
		}
		goto _match_end_5151355072;
		_case_end_5151356624:;
		_match_end_5151355072:;
	}
}



inline jule::Str _130e870c0_gen_get_ref_ptr_expr_model(jule::Ref<_1279cf930_GetRefPtrExprModel> _28835_m) {
	return (jule::Str("(", 1) + _130e870c0_gen_expr(_28835_m->_field_expr)) + jule::Str(").alloc", 7);
}



inline jule::Str _130e870c0_gen_cpp_struct_lit_expr_model(jule::Ref<_1279cf930_StructLitExprModel> _29238_m) {
	jule::Str _29313_obj = jule::Str("(", 1) + _130f5aa90_struct_ins_out_ident(_29238_m->_field_strct);
	_29313_obj+=jule::Str("){", 2);
	if (_29238_m->_field_args.len() > 0LL) {
		_julec_label_iter:;
		{
			auto &__julec_range_expr = _29238_m->_field_strct->_field_fields;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_127b2e960_FieldIns> _130e870c0_f = *__julec_range_begin;
				_iter_begin_5151368896:;
				{
					if (_29238_m->_field_strct->_field_decl->_field_cpp_linked) {
						{
							auto &__julec_range_expr = _29238_m->_field_args;
							if (__julec_range_expr.begin() != __julec_range_expr.end()) {
								auto __julec_range_begin = __julec_range_expr.begin();
								const auto __julec_range_end = __julec_range_expr.end();
								jule::Ref<_1279cf930_StructArgExprModel> _130e870c0_arg = *__julec_range_begin;
								_iter_begin_5151371952:;
								{
									if (_130e870c0_arg->_field_field == _130e870c0_f) {
										_29313_obj+=jule::Str(".", 1);
										_29313_obj+=_130f5aa90_field_out_ident(_130e870c0_f->_field_decl);
										_29313_obj+=jule::Str("=", 1);
										_29313_obj+=_130e870c0_gen_expr(_130e870c0_arg->_field_expr) + jule::Str(",", 1);
										goto _iter_next_5151368896;
									}
								}
								_iter_next_5151371952:;
								++__julec_range_begin;
								if (__julec_range_begin != __julec_range_end) { _130e870c0_arg = *__julec_range_begin; goto _iter_begin_5151371952; }
								_iter_end_5151371952:;
							}
						}
						goto _iter_next_5151368896;
					}
					_29313_obj+=_130f5aa90_field_out_ident(_130e870c0_f->_field_decl) + jule::Str(": ", 2);
					{
						auto &__julec_range_expr = _29238_m->_field_args;
						if (__julec_range_expr.begin() != __julec_range_expr.end()) {
							auto __julec_range_begin = __julec_range_expr.begin();
							const auto __julec_range_end = __julec_range_expr.end();
							jule::Ref<_1279cf930_StructArgExprModel> _130e870c0_arg = *__julec_range_begin;
							_iter_begin_5151379664:;
							{
								if (_130e870c0_arg->_field_field == _130e870c0_f) {
									_29313_obj+=_130e870c0_gen_expr(_130e870c0_arg->_field_expr) + jule::Str(",", 1);
									goto _iter_next_5151368896;
								}
							}
							_iter_next_5151379664:;
							++__julec_range_begin;
							if (__julec_range_begin != __julec_range_end) { _130e870c0_arg = *__julec_range_begin; goto _iter_begin_5151379664; }
							_iter_end_5151379664:;
						}
					}
					_29313_obj+=_130e870c0_get_init_expr(_130e870c0_f->_field_kind) + jule::Str(",", 1);
				}
				_iter_next_5151368896:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _130e870c0_f = *__julec_range_begin; goto _iter_begin_5151368896; }
				_iter_end_5151368896:;
			}
		}
		_29313_obj=_29313_obj.slice(0LL,static_cast<jule::Int>(_29313_obj.len() - 1LL));
	}
	_29313_obj+=jule::Str("}", 1);
	return _29313_obj;
}



inline jule::Str _130e870c0_gen_struct_lit_expr_model(jule::Ref<_1279cf930_StructLitExprModel> _32634_m) {
	if (_32634_m->_field_strct->_field_decl->_field_cpp_linked) {
		return _130e870c0_gen_cpp_struct_lit_expr_model(_32634_m);
	}
	jule::Str _33113_obj = _130f5aa90_struct_ins_out_ident(_32634_m->_field_strct);
	_33113_obj+=jule::Str("(", 1);
	if (_32634_m->_field_args.len() > 0LL) {
		_julec_label_iter:;
		{
			auto &__julec_range_expr = _32634_m->_field_strct->_field_fields;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_127b2e960_FieldIns> _130e870c0_f = *__julec_range_begin;
				_iter_begin_5151394992:;
				{
					{
						auto &__julec_range_expr = _32634_m->_field_args;
						if (__julec_range_expr.begin() != __julec_range_expr.end()) {
							auto __julec_range_begin = __julec_range_expr.begin();
							const auto __julec_range_end = __julec_range_expr.end();
							jule::Ref<_1279cf930_StructArgExprModel> _130e870c0_arg = *__julec_range_begin;
							_iter_begin_5151397040:;
							{
								if (_130e870c0_arg->_field_field == _130e870c0_f) {
									_33113_obj+=_130e870c0_gen_expr(_130e870c0_arg->_field_expr) + jule::Str(",", 1);
									goto _iter_next_5151394992;
								}
							}
							_iter_next_5151397040:;
							++__julec_range_begin;
							if (__julec_range_begin != __julec_range_end) { _130e870c0_arg = *__julec_range_begin; goto _iter_begin_5151397040; }
							_iter_end_5151397040:;
						}
					}
					_33113_obj+=_130e870c0_get_init_expr(_130e870c0_f->_field_kind) + jule::Str(",", 1);
				}
				_iter_next_5151394992:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _130e870c0_f = *__julec_range_begin; goto _iter_begin_5151394992; }
				_iter_end_5151394992:;
			}
		}
		_33113_obj=_33113_obj.slice(0LL,static_cast<jule::Int>(_33113_obj.len() - 1LL));
	}
	_33113_obj+=jule::Str(")", 1);
	return _33113_obj;
}



inline jule::Str _130e870c0_gen_alloc_struct_lit_expr_model(jule::Ref<_1279cf930_AllocStructLitExprModel> _35040_m) {
	jule::Str _35113_obj = jule::Str("jule::new_struct<", 17);
	_35113_obj+=_130f5aa90_struct_out_ident(_35040_m->_field_lit->_field_strct->_field_decl);
	_35113_obj+=jule::Str(">(new( std::nothrow ) ", 22);
	_35113_obj+=_130e870c0_gen_struct_lit_expr_model(_35040_m->_field_lit);
	_35113_obj+=jule::Str(")", 1);
	return _35113_obj;
}



inline jule::Str _130e870c0_gen_casting_expr_model(jule::Ref<_1279cf930_CastingExprModel> _35931_m) {
	jule::Str _36013_obj = jule::Str("", 0);
	{
		if (!((jule::real(_35931_m->_field_kind->_method_prim()) && _35931_m->_field_kind->_method_prim()->_method_is_any()))) { goto _case_end_5151415760; }
		_case_begin_5151415760:;
		{
			_36013_obj+=_13023c2e0_gen_type_kind(_35931_m->_field_kind);
			_36013_obj+=jule::Str("(", 1);
			_36013_obj+=_130e870c0_gen_expr_model(_35931_m->_field_expr);
			_36013_obj+=jule::Str(")", 1);
		}
		goto _match_end_5151412368;
		_case_end_5151415760:;
		if (!((jule::real(_35931_m->_field_expr_kind->_method_ptr())) || (jule::real(_35931_m->_field_kind->_method_ptr())))) { goto _case_end_5151417504; }
		_case_begin_5151417504:;
		{
			_36013_obj+=jule::Str("((", 2);
			_36013_obj+=_13023c2e0_gen_type_kind(_35931_m->_field_kind);
			_36013_obj+=jule::Str(")(", 2);
			_36013_obj+=_130e870c0_gen_expr(_35931_m->_field_expr);
			_36013_obj+=jule::Str("))", 2);
		}
		goto _match_end_5151412368;
		_case_end_5151417504:;
		if (!((jule::real(_35931_m->_field_expr_kind->_method_trt())) || (jule::real(_35931_m->_field_expr_kind->_method_prim()) && _35931_m->_field_expr_kind->_method_prim()->_method_is_any()))) { goto _case_end_5151414736; }
		_case_begin_5151414736:;
		{
			_36013_obj+=_130e870c0_gen_expr_model(_35931_m->_field_expr);
			_36013_obj+=_130e870c0_get_accessor(_35931_m->_field_expr_kind);
			_36013_obj+=jule::Str("operator ", 9);
			_36013_obj+=_13023c2e0_gen_type_kind(_35931_m->_field_kind);
			_36013_obj+=jule::Str("()", 2);
		}
		goto _match_end_5151412368;
		_case_end_5151414736:;
		_case_begin_5151412624:;
		{
			_36013_obj+=jule::Str("static_cast<", 12);
			_36013_obj+=_13023c2e0_gen_type_kind(_35931_m->_field_kind);
			_36013_obj+=jule::Str(">(", 2);
			_36013_obj+=_130e870c0_gen_expr(_35931_m->_field_expr);
			_36013_obj+=jule::Str(")", 1);
		}
		goto _match_end_5151412368;
		_case_end_5151412624:;
		_match_end_5151412368:;
	}
	return _36013_obj;
}



inline jule::Str _130e870c0_gen_arg_expr_models(jule::Slice<jule::Any> _39428_models) {
	if (_39428_models.len() == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _39913_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _39428_models;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Any _130e870c0_m = *__julec_range_begin;
			_iter_begin_5151437440:;
			{
				_39913_obj+=_130e870c0_gen_expr(_130e870c0_m) + jule::Str(",", 1);
			}
			_iter_next_5151437440:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _130e870c0_m = *__julec_range_begin; goto _iter_begin_5151437440; }
			_iter_end_5151437440:;
		}
	}
	_39913_obj=_39913_obj.slice(0LL,static_cast<jule::Int>(_39913_obj.len() - 1LL));
	return _39913_obj;
}



inline jule::Str _130e870c0_gen_fn_call_expr_model(jule::Ref<_1279cf930_FnCallExprModel> _40731_m) {
	jule::Str _40813_obj = _130e870c0_gen_expr_model(_40731_m->_field_expr);
	if ((!(_40731_m->_field_func->_method_is_builtin()))) {
		if (_40731_m->_field_func->_field_decl->_field_cpp_linked && (_40731_m->_field_func->_field_generics.len() > 0LL)) {
			if ((!(_13023c2e0_has_directive(_40731_m->_field_func->_field_decl->_field_directives,jule::Str("cdef", 4))))) {
				_40813_obj+=jule::Str("<", 1);
				{
					auto &__julec_range_expr = _40731_m->_field_func->_field_generics;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_1304dc9b0_TypeKind> _130e870c0_g = *__julec_range_begin;
						_iter_begin_5151447264:;
						{
							_40813_obj+=_13023c2e0_gen_type_kind(_130e870c0_g) + jule::Str(",", 1);
						}
						_iter_next_5151447264:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _130e870c0_g = *__julec_range_begin; goto _iter_begin_5151447264; }
						_iter_end_5151447264:;
					}
				}
				_40813_obj=_40813_obj.slice(0LL,static_cast<jule::Int>(_40813_obj.len() - 1LL));
				_40813_obj+=jule::Str(">", 1);
			}
		}
	}
	_40813_obj+=jule::Str("(", 1);
	_40813_obj+=_130e870c0_gen_arg_expr_models(_40731_m->_field_args);
	_40813_obj+=jule::Str(")", 1);
	if (_40731_m->_field_is_co) {
		_40813_obj=(jule::Str("__JULE_CO(", 10) + _40813_obj) + jule::Str(")", 1);
	}
	return _40813_obj;
}



inline jule::Str _130e870c0_gen_slice_expr_model(jule::Ref<_1279cf930_SliceExprModel> _43229_m) {
	jule::Str _43313_obj = _13023c2e0_as_slice_kind(_43229_m->_field_elem_kind);
	_43313_obj+=jule::Str("({", 2);
	_43313_obj+=_130e870c0_gen_arg_expr_models(_43229_m->_field_elems);
	_43313_obj+=jule::Str("})", 2);
	return _43313_obj;
}



inline jule::Str _130e870c0_gen_indexing_expr_model(jule::Ref<_1279cf930_IndexigExprModel> _44032_m) {
	jule::Str _44113_obj = _130e870c0_gen_expr_model(_44032_m->_field_expr);
	_44113_obj+=jule::Str("[", 1);
	_44113_obj+=_130e870c0_gen_expr(_44032_m->_field_index);
	_44113_obj+=jule::Str("]", 1);
	return _44113_obj;
}



inline jule::Str _130e870c0_gen_anon_fn_expr_model(jule::Ref<_1279cf930_AnonFnExprModel> _44831_m) {
	jule::Str _44913_obj = _13023c2e0_gen_fn_kind(_44831_m->_field_func);
	_44913_obj+=jule::Str("([=]", 4);
	_44913_obj+=_130f8bbe0_gen_params_ins(_44831_m->_field_func->_field_params);
	_44913_obj+=jule::Str(" mutable -> ", 12);
	_44913_obj+=_130f8bbe0_gen_fn_ins_result(_44831_m->_field_func);
	_44913_obj+=jule::Str(" ", 1);
	_44913_obj+=_127fba3d0_gen_fn_scope(_44831_m->_field_func);
	_44913_obj+=jule::Str(")", 1);
	return _44913_obj;
}



inline jule::Str _130e870c0_gen_map_expr_model(jule::Ref<_1279cf930_MapExprModel> _46527_m) {
	jule::Str _46613_obj = _130f5aa90_as_jt(jule::Str("map", 3));
	_46613_obj+=jule::Str("<", 1);
	_46613_obj+=_13023c2e0_gen_type_kind(_46527_m->_field_key_kind);
	_46613_obj+=jule::Str(",", 1);
	_46613_obj+=_13023c2e0_gen_type_kind(_46527_m->_field_val_kind);
	_46613_obj+=jule::Str(">({", 3);
	if (_46527_m->_field_entries.len() > 0LL) {
		{
			auto &__julec_range_expr = _46527_m->_field_entries;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_1279cf930_KeyValPairExprModel> _130e870c0_pair = *__julec_range_begin;
				_iter_begin_5151480832:;
				{
					jule::Str _47421_pair_obj = jule::Str("{", 1);
					_47421_pair_obj+=_130e870c0_gen_expr(_130e870c0_pair->_field_key);
					_47421_pair_obj+=jule::Str(",", 1);
					_47421_pair_obj+=_130e870c0_gen_expr(_130e870c0_pair->_field_val);
					_47421_pair_obj+=jule::Str("}", 1);
					_46613_obj+=_47421_pair_obj;
					_46613_obj+=jule::Str(",", 1);
				}
				_iter_next_5151480832:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _130e870c0_pair = *__julec_range_begin; goto _iter_begin_5151480832; }
				_iter_end_5151480832:;
			}
		}
		_46613_obj=_46613_obj.slice(0LL,static_cast<jule::Int>(_46613_obj.len() - 1LL));
	}
	_46613_obj+=jule::Str("})", 2);
	return _46613_obj;
}



inline jule::Str _130e870c0_gen_slicing_expr_model(jule::Ref<_1279cf930_SlicingExprModel> _48831_m) {
	jule::Str _48913_obj = _130e870c0_gen_expr_model(_48831_m->_field_expr);
	_48913_obj+=jule::Str(".slice(", 7);
	_48913_obj+=_130e870c0_gen_expr(_48831_m->_field_left);
	if (_48831_m->_field_right != nullptr) {
		_48913_obj+=jule::Str(",", 1);
		_48913_obj+=_130e870c0_gen_expr(_48831_m->_field_right);
	}
	_48913_obj+=jule::Str(")", 1);
	return _48913_obj;
}



inline jule::Str _130e870c0_gen_trait_sub_ident_expr_model(jule::Ref<_1279cf930_TraitSubIdentExprModel> _50039_m) {
	jule::Str _50113_obj = _130e870c0_gen_expr_model(_50039_m->_field_expr);
	_50113_obj+=jule::Str(".get()._method_", 15);
	_50113_obj+=_50039_m->_field_ident;
	return _50113_obj;
}



inline jule::Str _130e870c0_gen_struct_sub_ident_expr_model(jule::Ref<_1279cf930_StructSubIdentExprModel> _50740_m) {
	jule::Str _50813_obj = _130e870c0_gen_expr_model(_50740_m->_field_expr);
	_50813_obj+=_130e870c0_get_accessor(_50740_m->_field_expr_kind);
	if (jule::real(_50740_m->_field_field)) {
		_50813_obj+=_130f5aa90_field_out_ident(_50740_m->_field_field->_field_decl);
	} else {
		_50813_obj+=_130f5aa90_fn_ins_out_ident(_50740_m->_field_method);
	}
	return _50813_obj;
}



inline jule::Str _130e870c0_gen_common_ident_expr_model(jule::Ref<_1279cf930_CommonIdentExprModel> _51832_m) {
	return _51832_m->_field_ident;
}



inline jule::Str _130e870c0_gen_common_sub_ident_expr_model(jule::Ref<_1279cf930_CommonSubIdentExprModel> _52240_m) {
	jule::Str _52313_obj = _130e870c0_gen_expr_model(_52240_m->_field_expr);
	_52313_obj+=_130e870c0_get_accessor(_52240_m->_field_expr_kind);
	_52313_obj+=_52240_m->_field_ident;
	return _52313_obj;
}



inline jule::Str _130e870c0_gen_array_expr_model(jule::Ref<_1279cf930_ArrayExprModel> _52929_m) {
	jule::Str _53013_obj = _13023c2e0_gen_array_kind(_52929_m->_field_kind);
	_53013_obj+=jule::Str("({", 2);
	_53013_obj+=_130e870c0_gen_arg_expr_models(_52929_m->_field_elems);
	_53013_obj+=jule::Str("})", 2);
	return _53013_obj;
}



inline jule::Str _130e870c0_gen_fn_ins_expr_model(jule::Ref<_127ed52e0_FnIns> _53726_m) {
	return _130f5aa90_fn_ins_out_ident(_53726_m);
}



inline jule::Str _130e870c0_gen_tuple_expr_model(jule::Ref<_1279cf930_TupleExprModel> _54129_m) {
	jule::Str _54213_obj = jule::Str("std::make_tuple(", 16);
	{
		auto &__julec_range_expr = _54129_m->_field_datas;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13064b610_Data> _130e870c0_d = *__julec_range_begin;
			_iter_begin_5151519104:;
			{
				_54213_obj+=_130e870c0_gen_expr(_130e870c0_d->_field_model) + jule::Str(",", 1);
			}
			_iter_next_5151519104:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _130e870c0_d = *__julec_range_begin; goto _iter_begin_5151519104; }
			_iter_end_5151519104:;
		}
	}
	_54213_obj=_54213_obj.slice(0LL,static_cast<jule::Int>(_54213_obj.len() - 1LL));
	_54213_obj+=jule::Str(")", 1);
	return _54213_obj;
}



inline jule::Str _130e870c0_gen_builtin_new_call_expr_model(jule::Ref<_1279cf930_BuiltinNewCallExprModel> _55140_m) {
	jule::Str _55213_obj = jule::Str("jule::new_ref<", 14);
	_55213_obj+=_13023c2e0_gen_type_kind(_55140_m->_field_kind);
	_55213_obj+=jule::Str(">(", 2);
	if (_55140_m->_field_init != nullptr) {
		_55213_obj+=_130e870c0_gen_expr(_55140_m->_field_init);
	}
	_55213_obj+=jule::Str(")", 1);
	return _55213_obj;
}



inline jule::Str _130e870c0_gen_builtin_out_call_expr_model(jule::Ref<_1279cf930_BuiltinOutCallExprModel> _56240_m) {
	jule::Str _56313_obj = jule::Str("jule::out(", 10);
	_56313_obj+=_130e870c0_gen_expr(_56240_m->_field_expr);
	_56313_obj+=jule::Str(")", 1);
	return _56313_obj;
}



inline jule::Str _130e870c0_gen_builtin_outln_call_expr_model(jule::Ref<_1279cf930_BuiltinOutlnCallExprModel> _56942_m) {
	jule::Str _57013_obj = jule::Str("jule::outln(", 12);
	_57013_obj+=_130e870c0_gen_expr(_56942_m->_field_expr);
	_57013_obj+=jule::Str(")", 1);
	return _57013_obj;
}



inline jule::Str _130e870c0_gen_builtin_real_call_expr_model(jule::Ref<_1279cf930_BuiltinRealCallExprModel> _57641_m) {
	jule::Str _57713_obj = jule::Str("jule::real(", 11);
	_57713_obj+=_130e870c0_gen_expr(_57641_m->_field_expr);
	_57713_obj+=jule::Str(")", 1);
	return _57713_obj;
}



inline jule::Str _130e870c0_gen_builtin_drop_call_expr_model(jule::Ref<_1279cf930_BuiltinDropCallExprModel> _58341_m) {
	jule::Str _58413_obj = jule::Str("jule::drop(", 11);
	_58413_obj+=_130e870c0_gen_expr(_58341_m->_field_expr);
	_58413_obj+=jule::Str(")", 1);
	return _58413_obj;
}



inline jule::Str _130e870c0_gen_builtin_panic_call_expr_model(jule::Ref<_1279cf930_BuiltinPanicCallExprModel> _59042_m) {
	jule::Str _59113_obj = jule::Str("jule::panic(", 12);
	_59113_obj+=_130e870c0_gen_expr(_59042_m->_field_expr);
	_59113_obj+=jule::Str(")", 1);
	return _59113_obj;
}



inline jule::Str _130e870c0_gen_builtin_make_call_expr_model(jule::Ref<_1279cf930_BuiltinMakeCallExprModel> _59741_m) {
	jule::Str _59813_obj = jule::Str("", 0);
	if (_59741_m->_field_len != nullptr) {
		_59813_obj+=_130e870c0_gen_expr(_59741_m->_field_len);
	} else {
		_59813_obj+=jule::Str("0", 1);
	}
	if (_59741_m->_field_cap != nullptr) {
		_59813_obj+=jule::Str(",", 1) + _130e870c0_gen_expr(_59741_m->_field_cap);
	}
	if (jule::real(_59741_m->_field_kind->_method_slc()->_field_elem->_method_enm())) {
		_59813_obj+=jule::Str(",", 1);
		_59813_obj+=_130e870c0_get_init_expr(_59741_m->_field_kind->_method_slc()->_field_elem);
		if (_59741_m->_field_cap != nullptr) {
			_59813_obj=(_13023c2e0_gen_type_kind(_59741_m->_field_kind) + jule::Str("::alloc(", 8)) + _59813_obj;
		} else {
			_59813_obj=(_13023c2e0_gen_type_kind(_59741_m->_field_kind) + jule::Str("::alloc_def(", 12)) + _59813_obj;
		}
	} else {
		_59813_obj=(_13023c2e0_gen_type_kind(_59741_m->_field_kind) + jule::Str("::alloc(", 8)) + _59813_obj;
	}
	_59813_obj+=jule::Str(")", 1);
	return _59813_obj;
}



inline jule::Str _130e870c0_gen_builtin_clone_call_expr_model(jule::Ref<_1279cf930_BuiltinCloneCallExprModel> _62442_m) {
	jule::Str _62513_obj = jule::Str("jule::clone(", 12);
	_62513_obj+=_130e870c0_gen_expr_model(_62442_m->_field_expr);
	_62513_obj+=jule::Str(")", 1);
	return _62513_obj;
}



inline jule::Str _130e870c0_gen_sizeof_expr_model(jule::Ref<_1279cf930_SizeofExprModel> _63130_m) {
	jule::Str _63213_obj = jule::Str("sizeof(", 7);
	_63213_obj+=_130e870c0_gen_expr(_63130_m->_field_expr);
	_63213_obj+=jule::Str(")", 1);
	return _63213_obj;
}



inline jule::Str _130e870c0_gen_alignof_expr_model(jule::Ref<_1279cf930_AlignofExprModel> _63831_m) {
	jule::Str _63913_obj = jule::Str("alignof(", 8);
	_63913_obj+=_130e870c0_gen_expr(_63831_m->_field_expr);
	_63913_obj+=jule::Str(")", 1);
	return _63913_obj;
}



inline jule::Str _130e870c0_gen_rune_expr_model(jule::Ref<_1279cf930_RuneExprModel> _64524_m) {
	if (_64524_m->_field_code <= 127LL) {
		jule::Str _64717_b = _130e870c0_sbtoa(static_cast<jule::U8>(_64524_m->_field_code));
		if (_64717_b == jule::Str("'", 1)) {
			_64717_b=jule::Str("\\'", 2);
		}
		return (jule::Str("'", 1) + _64717_b) + jule::Str("'", 1);
	}
	return _130e870c0_i64toa(static_cast<jule::I64>(_64524_m->_field_code));
}



inline jule::Str _130e870c0_gen_builtin_error_trait_sub_ident_expr_model(jule::Ref<_1279cf930_BuiltinErrorTraitSubIdentExprModel> _65653_m) {
	jule::Str _65713_obj = _130e870c0_gen_expr_model(_65653_m->_field_expr);
	_65713_obj+=jule::Str(".get().", 7);
	_65713_obj+=_65653_m->_field_ident;
	return _65713_obj;
}



inline jule::Str _130e870c0_gen_explicit_deref_expr_model(jule::Ref<_1279cf930_ExplicitDerefExprModel> _66338_m) {
	jule::Str _66413_obj = _130e870c0_gen_expr_model(_66338_m->_field_expr);
	_66413_obj+=jule::Str(".get()", 6);
	return _66413_obj;
}



inline jule::Str _130e870c0_gen_struct_static_ident_expr_model(jule::Ref<_1279cf930_StructStaticIdentExprModel> _66943_m) {
	jule::Str _67013_obj = _130f5aa90_struct_ins_out_ident(_66943_m->_field_structure);
	_67013_obj+=jule::Str("::", 2);
	_67013_obj+=_130f5aa90_fn_ins_out_ident(_66943_m->_field_method);
	return _67013_obj;
}



inline jule::Str _130e870c0_gen_expr_model(jule::Any _67623_m) {
	{
		auto &_match_expr{ _67623_m };
		if (!(_match_expr.type_is<jule::Ref<_1304dc9b0_TypeKind>>())) { goto _case_end_5151592496; }
		_case_begin_5151592496:;
		{
			return _13023c2e0_gen_type_kind(_67623_m.operator jule::Ref<_1304dc9b0_TypeKind>());
		}
		goto _match_end_5151589712;
		_case_end_5151592496:;
		if (!(_match_expr.type_is<jule::Ref<_130c83140_Const>>())) { goto _case_end_5151591888; }
		_case_begin_5151591888:;
		{
			return _130e870c0_gen_const_expr_model(_67623_m.operator jule::Ref<_130c83140_Const>());
		}
		goto _match_end_5151589712;
		_case_end_5151591888:;
		if (!(_match_expr.type_is<jule::Ref<_1303533b0_Var>>())) { goto _case_end_5151592000; }
		_case_begin_5151592000:;
		{
			return _130e870c0_gen_var_expr_model(_67623_m.operator jule::Ref<_1303533b0_Var>());
		}
		goto _match_end_5151589712;
		_case_end_5151592000:;
		if (!(_match_expr.type_is<jule::Ref<_130099320_Trait>>())) { goto _case_end_5151592112; }
		_case_begin_5151592112:;
		{
			return _130f5aa90_trait_out_ident(_67623_m.operator jule::Ref<_130099320_Trait>());
		}
		goto _match_end_5151589712;
		_case_end_5151592112:;
		if (!(_match_expr.type_is<jule::Ref<_127b2e960_Struct>>())) { goto _case_end_5151593696; }
		_case_begin_5151593696:;
		{
			return _130e870c0_gen_struct_expr_model(_67623_m.operator jule::Ref<_127b2e960_Struct>());
		}
		goto _match_end_5151589712;
		_case_end_5151593696:;
		if (!(_match_expr.type_is<jule::Ref<_127b2e960_StructIns>>())) { goto _case_end_5151593808; }
		_case_begin_5151593808:;
		{
			return _130e870c0_gen_struct_ins_expr_model(_67623_m.operator jule::Ref<_127b2e960_StructIns>());
		}
		goto _match_end_5151589712;
		_case_end_5151593808:;
		if (!(_match_expr.type_is<jule::Ref<_127ed52e0_FnIns>>())) { goto _case_end_5151593920; }
		_case_begin_5151593920:;
		{
			return _130e870c0_gen_fn_ins_expr_model(_67623_m.operator jule::Ref<_127ed52e0_FnIns>());
		}
		goto _match_end_5151589712;
		_case_end_5151593920:;
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_BinopExprModel>>())) { goto _case_end_5151594032; }
		_case_begin_5151594032:;
		{
			return _130e870c0_gen_binop_expr_model(_67623_m.operator jule::Ref<_1279cf930_BinopExprModel>());
		}
		goto _match_end_5151589712;
		_case_end_5151594032:;
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_UnaryExprModel>>())) { goto _case_end_5151594144; }
		_case_begin_5151594144:;
		{
			return _130e870c0_gen_unary_expr_model(_67623_m.operator jule::Ref<_1279cf930_UnaryExprModel>());
		}
		goto _match_end_5151589712;
		_case_end_5151594144:;
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_GetRefPtrExprModel>>())) { goto _case_end_5151594256; }
		_case_begin_5151594256:;
		{
			return _130e870c0_gen_get_ref_ptr_expr_model(_67623_m.operator jule::Ref<_1279cf930_GetRefPtrExprModel>());
		}
		goto _match_end_5151589712;
		_case_end_5151594256:;
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_StructLitExprModel>>())) { goto _case_end_5151594368; }
		_case_begin_5151594368:;
		{
			return _130e870c0_gen_struct_lit_expr_model(_67623_m.operator jule::Ref<_1279cf930_StructLitExprModel>());
		}
		goto _match_end_5151589712;
		_case_end_5151594368:;
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_AllocStructLitExprModel>>())) { goto _case_end_5151594480; }
		_case_begin_5151594480:;
		{
			return _130e870c0_gen_alloc_struct_lit_expr_model(_67623_m.operator jule::Ref<_1279cf930_AllocStructLitExprModel>());
		}
		goto _match_end_5151589712;
		_case_end_5151594480:;
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_CastingExprModel>>())) { goto _case_end_5151594592; }
		_case_begin_5151594592:;
		{
			return _130e870c0_gen_casting_expr_model(_67623_m.operator jule::Ref<_1279cf930_CastingExprModel>());
		}
		goto _match_end_5151589712;
		_case_end_5151594592:;
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_FnCallExprModel>>())) { goto _case_end_5151594704; }
		_case_begin_5151594704:;
		{
			return _130e870c0_gen_fn_call_expr_model(_67623_m.operator jule::Ref<_1279cf930_FnCallExprModel>());
		}
		goto _match_end_5151589712;
		_case_end_5151594704:;
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_SliceExprModel>>())) { goto _case_end_5151594816; }
		_case_begin_5151594816:;
		{
			return _130e870c0_gen_slice_expr_model(_67623_m.operator jule::Ref<_1279cf930_SliceExprModel>());
		}
		goto _match_end_5151589712;
		_case_end_5151594816:;
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_ArrayExprModel>>())) { goto _case_end_5151594928; }
		_case_begin_5151594928:;
		{
			return _130e870c0_gen_array_expr_model(_67623_m.operator jule::Ref<_1279cf930_ArrayExprModel>());
		}
		goto _match_end_5151589712;
		_case_end_5151594928:;
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_IndexigExprModel>>())) { goto _case_end_5151595040; }
		_case_begin_5151595040:;
		{
			return _130e870c0_gen_indexing_expr_model(_67623_m.operator jule::Ref<_1279cf930_IndexigExprModel>());
		}
		goto _match_end_5151589712;
		_case_end_5151595040:;
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_AnonFnExprModel>>())) { goto _case_end_5151595152; }
		_case_begin_5151595152:;
		{
			return _130e870c0_gen_anon_fn_expr_model(_67623_m.operator jule::Ref<_1279cf930_AnonFnExprModel>());
		}
		goto _match_end_5151589712;
		_case_end_5151595152:;
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_MapExprModel>>())) { goto _case_end_5151595264; }
		_case_begin_5151595264:;
		{
			return _130e870c0_gen_map_expr_model(_67623_m.operator jule::Ref<_1279cf930_MapExprModel>());
		}
		goto _match_end_5151589712;
		_case_end_5151595264:;
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_SlicingExprModel>>())) { goto _case_end_5151595376; }
		_case_begin_5151595376:;
		{
			return _130e870c0_gen_slicing_expr_model(_67623_m.operator jule::Ref<_1279cf930_SlicingExprModel>());
		}
		goto _match_end_5151589712;
		_case_end_5151595376:;
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_TraitSubIdentExprModel>>())) { goto _case_end_5151595488; }
		_case_begin_5151595488:;
		{
			return _130e870c0_gen_trait_sub_ident_expr_model(_67623_m.operator jule::Ref<_1279cf930_TraitSubIdentExprModel>());
		}
		goto _match_end_5151589712;
		_case_end_5151595488:;
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_StructSubIdentExprModel>>())) { goto _case_end_5151595600; }
		_case_begin_5151595600:;
		{
			return _130e870c0_gen_struct_sub_ident_expr_model(_67623_m.operator jule::Ref<_1279cf930_StructSubIdentExprModel>());
		}
		goto _match_end_5151589712;
		_case_end_5151595600:;
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_CommonIdentExprModel>>())) { goto _case_end_5151595712; }
		_case_begin_5151595712:;
		{
			return _130e870c0_gen_common_ident_expr_model(_67623_m.operator jule::Ref<_1279cf930_CommonIdentExprModel>());
		}
		goto _match_end_5151589712;
		_case_end_5151595712:;
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_CommonSubIdentExprModel>>())) { goto _case_end_5151595824; }
		_case_begin_5151595824:;
		{
			return _130e870c0_gen_common_sub_ident_expr_model(_67623_m.operator jule::Ref<_1279cf930_CommonSubIdentExprModel>());
		}
		goto _match_end_5151589712;
		_case_end_5151595824:;
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_TupleExprModel>>())) { goto _case_end_5151595936; }
		_case_begin_5151595936:;
		{
			return _130e870c0_gen_tuple_expr_model(_67623_m.operator jule::Ref<_1279cf930_TupleExprModel>());
		}
		goto _match_end_5151589712;
		_case_end_5151595936:;
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_BuiltinOutCallExprModel>>())) { goto _case_end_5151596048; }
		_case_begin_5151596048:;
		{
			return _130e870c0_gen_builtin_out_call_expr_model(_67623_m.operator jule::Ref<_1279cf930_BuiltinOutCallExprModel>());
		}
		goto _match_end_5151589712;
		_case_end_5151596048:;
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_BuiltinOutlnCallExprModel>>())) { goto _case_end_5151596160; }
		_case_begin_5151596160:;
		{
			return _130e870c0_gen_builtin_outln_call_expr_model(_67623_m.operator jule::Ref<_1279cf930_BuiltinOutlnCallExprModel>());
		}
		goto _match_end_5151589712;
		_case_end_5151596160:;
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_BuiltinNewCallExprModel>>())) { goto _case_end_5151596288; }
		_case_begin_5151596288:;
		{
			return _130e870c0_gen_builtin_new_call_expr_model(_67623_m.operator jule::Ref<_1279cf930_BuiltinNewCallExprModel>());
		}
		goto _match_end_5151589712;
		_case_end_5151596288:;
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_BuiltinRealCallExprModel>>())) { goto _case_end_5151596416; }
		_case_begin_5151596416:;
		{
			return _130e870c0_gen_builtin_real_call_expr_model(_67623_m.operator jule::Ref<_1279cf930_BuiltinRealCallExprModel>());
		}
		goto _match_end_5151589712;
		_case_end_5151596416:;
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_BuiltinDropCallExprModel>>())) { goto _case_end_5151596544; }
		_case_begin_5151596544:;
		{
			return _130e870c0_gen_builtin_drop_call_expr_model(_67623_m.operator jule::Ref<_1279cf930_BuiltinDropCallExprModel>());
		}
		goto _match_end_5151589712;
		_case_end_5151596544:;
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_BuiltinPanicCallExprModel>>())) { goto _case_end_5151596672; }
		_case_begin_5151596672:;
		{
			return _130e870c0_gen_builtin_panic_call_expr_model(_67623_m.operator jule::Ref<_1279cf930_BuiltinPanicCallExprModel>());
		}
		goto _match_end_5151589712;
		_case_end_5151596672:;
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_BuiltinMakeCallExprModel>>())) { goto _case_end_5151596800; }
		_case_begin_5151596800:;
		{
			return _130e870c0_gen_builtin_make_call_expr_model(_67623_m.operator jule::Ref<_1279cf930_BuiltinMakeCallExprModel>());
		}
		goto _match_end_5151589712;
		_case_end_5151596800:;
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_BuiltinCloneCallExprModel>>())) { goto _case_end_5151596928; }
		_case_begin_5151596928:;
		{
			return _130e870c0_gen_builtin_clone_call_expr_model(_67623_m.operator jule::Ref<_1279cf930_BuiltinCloneCallExprModel>());
		}
		goto _match_end_5151589712;
		_case_end_5151596928:;
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_SizeofExprModel>>())) { goto _case_end_5151597056; }
		_case_begin_5151597056:;
		{
			return _130e870c0_gen_sizeof_expr_model(_67623_m.operator jule::Ref<_1279cf930_SizeofExprModel>());
		}
		goto _match_end_5151589712;
		_case_end_5151597056:;
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_AlignofExprModel>>())) { goto _case_end_5151597184; }
		_case_begin_5151597184:;
		{
			return _130e870c0_gen_alignof_expr_model(_67623_m.operator jule::Ref<_1279cf930_AlignofExprModel>());
		}
		goto _match_end_5151589712;
		_case_end_5151597184:;
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_RuneExprModel>>())) { goto _case_end_5151597312; }
		_case_begin_5151597312:;
		{
			return _130e870c0_gen_rune_expr_model(_67623_m.operator jule::Ref<_1279cf930_RuneExprModel>());
		}
		goto _match_end_5151589712;
		_case_end_5151597312:;
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_BuiltinErrorTraitSubIdentExprModel>>())) { goto _case_end_5151597440; }
		_case_begin_5151597440:;
		{
			return _130e870c0_gen_builtin_error_trait_sub_ident_expr_model(_67623_m.operator jule::Ref<_1279cf930_BuiltinErrorTraitSubIdentExprModel>());
		}
		goto _match_end_5151589712;
		_case_end_5151597440:;
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_ExplicitDerefExprModel>>())) { goto _case_end_5151597568; }
		_case_begin_5151597568:;
		{
			return _130e870c0_gen_explicit_deref_expr_model(_67623_m.operator jule::Ref<_1279cf930_ExplicitDerefExprModel>());
		}
		goto _match_end_5151589712;
		_case_end_5151597568:;
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_StructStaticIdentExprModel>>())) { goto _case_end_5151597696; }
		_case_begin_5151597696:;
		{
			return _130e870c0_gen_struct_static_ident_expr_model(_67623_m.operator jule::Ref<_1279cf930_StructStaticIdentExprModel>());
		}
		goto _match_end_5151589712;
		_case_end_5151597696:;
		_case_begin_5151591520:;
		{
			return jule::Str("<unimplemented_expression_model>", 32);
		}
		goto _match_end_5151589712;
		_case_end_5151591520:;
		_match_end_5151589712:;
	}
}



inline jule::Str _130e870c0_gen_expr(jule::Any _80017_e) {
	jule::Str _80113_obj = _130e870c0_gen_expr_model(_80017_e);
	if (_80113_obj[static_cast<jule::Int>(0LL)] != '(') {
		return _80113_obj;
	}
	{
		auto &_match_expr{ _80017_e };
		if (!(_match_expr.type_is<jule::Ref<_1279cf930_BinopExprModel>>())) { goto _case_end_5151683344; }
		_case_begin_5151683344:;
		{
			_80113_obj=_80113_obj.slice(static_cast<jule::Int>(1LL),static_cast<jule::Int>(_80113_obj.len() - 1LL));
		}
		goto _match_end_5151685776;
		_case_end_5151683344:;
		_match_end_5151685776:;
	}
	return _80113_obj;
}



inline jule::Str _130e870c0_gen_val(jule::Ref<_13064b610_Value> _81316_v) {
	if (_81316_v->_field_data->_method_is_const()) {
		return _130e870c0_gen_const_expr(_81316_v->_field_data);
	}
	return _130e870c0_gen_expr(_81316_v->_field_data->_field_model);
}



inline jule::Str _130e870c0_get_init_expr(jule::Ref<_1304dc9b0_TypeKind> _82022_t) {
	if (jule::real(_82022_t->_method_ptr())) {
		return jule::Str("nullptr", 7);
	}
	jule::Ref<_13009ed30_Enum> _82513_enm = _82022_t->_method_enm();
	if ((!(jule::real(_82513_enm)))) {
		return _13023c2e0_gen_type_kind(_82022_t) + jule::Str("()", 2);
	}
	return _130e870c0_gen_val(_82513_enm->_field_items[static_cast<jule::Int>(0LL)]->_field_value);
}



inline jule::Str _130f583a0_get_derive_fn_decl_clone(jule::Ref<_127b2e960_Struct> _729_s) {
	jule::Str _813_obj = _13023c2e0_gen_struct_kind(_729_s);
	_813_obj+=jule::Str(" clone(void) const ", 19);
	return _813_obj;
}



inline jule::Str _130f583a0_get_derive_fn_def_clone(jule::Ref<_127b2e960_Struct> _1328_s) {
	jule::Str _1413_obj = _13023c2e0_gen_struct_kind(_1328_s);
	_1413_obj+=(jule::Str(" ", 1) + _1413_obj) + jule::Str("::clone(void) const ", 20);
	return _1413_obj;
}



inline jule::Str _130f5aa90_as_ident(jule::Str _2513_ident) {
	return jule::Str("_", 1) + _2513_ident;
}



inline jule::Str _130f5aa90_as_jt(jule::Str _2810_id) {
	jule::Slice<jule::I32> _2913_ident = static_cast<jule::Slice<jule::I32>>(_2810_id);
	if ((97LL <= _2913_ident[static_cast<jule::Int>(0LL)]) && (_2913_ident[static_cast<jule::Int>(0LL)] <= 122LL)) {
		_2913_ident[static_cast<jule::Int>(0LL)]-=32LL;
	}
	return jule::Str("jule::", 6) + static_cast<jule::Str>(_2913_ident);
}



inline jule::Str _130f5aa90_get_ptr_as_ident(jule::Uintptr _3721_ptr) {
	jule::Str _3813_addr = jule::Str("_", 1) + _127164920_fmt_uint(static_cast<jule::U64>(_3721_ptr),16LL);
	{
		auto &__julec_range_expr = _3813_addr;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _130f5aa90_i = 0;
			jule::U8 _130f5aa90_r = *__julec_range_begin;
			_iter_begin_5151718416:;
			{
				if (_130f5aa90_r != '0') {
					_3813_addr=_3813_addr.slice(static_cast<jule::Int>(_130f5aa90_i));
					goto _iter_end_5151718416;
				}
			}
			_iter_next_5151718416:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_130f5aa90_i; _130f5aa90_r = *__julec_range_begin; goto _iter_begin_5151718416; }
			_iter_end_5151718416:;
		}
	}
	return _3813_addr;
}



inline jule::Str _130f5aa90_as_out_ident(jule::Str _5317_ident,jule::Uintptr _5329_ptr) {
	if (_5329_ptr != 0LL) {
		return (_130f5aa90_get_ptr_as_ident(_5329_ptr) + jule::Str("_", 1)) + _5317_ident;
	}
	return _130f5aa90_as_ident(_5317_ident);
}



inline jule::Str _130f5aa90_as_local_ident(jule::Int _6619_row,jule::Int _6629_col,jule::Str _6643_ident) {
	_6643_ident=((_127164920_itoa(_6619_row) + _127164920_itoa(_6629_col)) + jule::Str("_", 1)) + _6643_ident;
	return _130f5aa90_as_ident(_6643_ident);
}



inline jule::Str _130f5aa90_fn_out_ident(jule::Ref<_127ed52e0_Fn> _7217_f) {
	{
		if (!((_7217_f->_field_cpp_linked))) { goto _case_end_5151733024; }
		_case_begin_5151733024:;
		{
			return _7217_f->_field_ident;
		}
		goto _match_end_5151731456;
		_case_end_5151733024:;
		if (!((_7217_f->_field_ident == jule::Str("main", 4)))) { goto _case_end_5151732736; }
		_case_begin_5151732736:;
		{
			return jule::Str("entry_point", 11);
		}
		goto _match_end_5151731456;
		_case_end_5151732736:;
		if (!((_7217_f->_method_is_method()))) { goto _case_end_5151731952; }
		_case_begin_5151731952:;
		{
			if (_7217_f->_field_statically) {
				return jule::Str("_static_method_", 15) + _7217_f->_field_ident;
			}
			return jule::Str("_method_", 8) + _7217_f->_field_ident;
		}
		goto _match_end_5151731456;
		_case_end_5151731952:;
		_case_begin_5151731648:;
		{
			return _130f5aa90_as_out_ident(_7217_f->_field_ident,static_cast<jule::Uintptr>(_7217_f->_field_token._field_file->_method_addr()));
		}
		goto _match_end_5151731456;
		_case_end_5151731648:;
		_match_end_5151731456:;
	}
}



inline jule::Str _130f5aa90_fn_ins_out_ident(jule::Ref<_127ed52e0_FnIns> _9221_f) {
	if (_9221_f->_method_is_builtin()) {
		return jule::Str("jule::", 6) + _9221_f->_field_decl->_field_ident;
	}
	if (_9221_f->_field_decl->_field_cpp_linked || (_9221_f->_field_generics.len() == 0LL)) {
		return _130f5aa90_fn_out_ident(_9221_f->_field_decl);
	}
	{
		auto &__julec_range_expr = _9221_f->_field_decl->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _130f5aa90_i = 0;
			jule::Ref<_127ed52e0_FnIns> _130f5aa90_ins = *__julec_range_begin;
			_iter_begin_5151745856:;
			{
				jule::Ref<_1304dc9b0_TypeKind> _10213_kind = jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_130f5aa90_ins));
				if (_9221_f->_method_equals(_10213_kind)) {
					return (_130f5aa90_fn_out_ident(_9221_f->_field_decl) + jule::Str("_", 1)) + _127164920_itoa(_130f5aa90_i);
				}
			}
			_iter_next_5151745856:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_130f5aa90_i; _130f5aa90_ins = *__julec_range_begin; goto _iter_begin_5151745856; }
			_iter_end_5151745856:;
		}
	}
	return jule::Str("__?__", 5);
}



inline jule::Str _130f5aa90_trait_out_ident(jule::Ref<_130099320_Trait> _11220_t) {
	if (_11220_t->_method_is_builtin()) {
		return jule::Str("jule::", 6) + _11220_t->_field_ident;
	}
	return _130f5aa90_as_out_ident(_11220_t->_field_ident,static_cast<jule::Uintptr>(_11220_t->_field_token._field_file->_method_addr()));
}



inline jule::Str _130f5aa90_param_out_ident(jule::Ref<_127ed52e0_Param> _12020_p) {
	if (_127941de0_is_anon_ident(_12020_p->_field_ident) || _127941de0_is_ignore_ident(_12020_p->_field_ident)) {
		return jule::Str("", 0);
	}
	return _130f5aa90_as_local_ident(_12020_p->_field_token._field_row,_12020_p->_field_token._field_column,_12020_p->_field_ident);
}



inline jule::Str _130f5aa90_struct_out_ident(jule::Ref<_127b2e960_Struct> _12821_s) {
	if (_12821_s->_field_cpp_linked) {
		if (_13023c2e0_has_directive(_12821_s->_field_directives,jule::Str("typedef", 7))) {
			return _12821_s->_field_ident;
		}
		return jule::Str("struct ", 7) + _12821_s->_field_ident;
	}
	return _130f5aa90_as_out_ident(_12821_s->_field_ident,static_cast<jule::Uintptr>(_12821_s->_field_token._field_file->_method_addr()));
}



inline jule::Str _130f5aa90_struct_ins_out_ident(jule::Ref<_127b2e960_StructIns> _13925_s) {
	if (_13925_s->_field_decl->_field_cpp_linked || (_13925_s->_field_generics.len() == 0LL)) {
		return _130f5aa90_struct_out_ident(_13925_s->_field_decl);
	}
	{
		auto &__julec_range_expr = _13925_s->_field_decl->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _130f5aa90_i = 0;
			jule::Ref<_127b2e960_StructIns> _130f5aa90_ins = *__julec_range_begin;
			_iter_begin_5151773120:;
			{
				jule::Ref<_1304dc9b0_TypeKind> _14513_kind = jule::new_struct<_1304dc9b0_TypeKind>(new( std::nothrow ) _1304dc9b0_TypeKind(jule::Bool(),jule::Str(),_130f5aa90_ins));
				if (_13925_s->_method_equals(_14513_kind)) {
					return (_130f5aa90_struct_out_ident(_13925_s->_field_decl) + jule::Str("_", 1)) + _127164920_itoa(_130f5aa90_i);
				}
			}
			_iter_next_5151773120:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_130f5aa90_i; _130f5aa90_ins = *__julec_range_begin; goto _iter_begin_5151773120; }
			_iter_end_5151773120:;
		}
	}
	return jule::Str("__?__", 5);
}



inline jule::Str _130f5aa90_field_out_ident(jule::Ref<_127b2e960_Field> _15520_f) {
	if (_15520_f->_field_owner->_field_cpp_linked) {
		return _15520_f->_field_ident;
	}
	return jule::Str("_field_", 7) + _15520_f->_field_ident;
}



inline jule::Str _130f5aa90_var_out_ident(jule::Ref<_1303533b0_Var> _16322_v) {
	{
		if (!((_16322_v->_field_cpp_linked))) { goto _case_end_5151786448; }
		_case_begin_5151786448:;
		{
			return _16322_v->_field_ident;
		}
		goto _match_end_5151784384;
		_case_end_5151786448:;
		if (!((_16322_v->_field_ident == jule::Str("self", 4)))) { goto _case_end_5151785680; }
		_case_begin_5151785680:;
		{
			if (jule::real(_16322_v->_field_kind->_field_kind->_method_ref())) {
				return jule::Str("this->self", 10);
			}
			return jule::Str("(*this)", 7);
		}
		goto _match_end_5151784384;
		_case_end_5151785680:;
		if (!((jule::real(_16322_v->_field_scope)))) { goto _case_end_5151784896; }
		_case_begin_5151784896:;
		{
			return _130f5aa90_as_local_ident(_16322_v->_field_token._field_row,_16322_v->_field_token._field_column,_16322_v->_field_ident);
		}
		goto _match_end_5151784384;
		_case_end_5151784896:;
		_case_begin_5151784592:;
		{
			return _130f5aa90_as_out_ident(_16322_v->_field_ident,static_cast<jule::Uintptr>(_16322_v->_field_token._field_file->_method_addr()));
		}
		goto _match_end_5151784384;
		_case_end_5151784592:;
		_match_end_5151784384:;
	}
}



inline jule::Str _130f5aa90_iter_begin_label_ident(jule::Uintptr _18327_it) {
	return jule::Str("_iter_begin_", 12) + _127164920_itoa(static_cast<jule::Int>(_18327_it));
}



inline jule::Str _130f5aa90_iter_end_label_ident(jule::Uintptr _18825_it) {
	return jule::Str("_iter_end_", 10) + _127164920_itoa(static_cast<jule::Int>(_18825_it));
}



inline jule::Str _130f5aa90_iter_next_label_ident(jule::Uintptr _19326_it) {
	return jule::Str("_iter_next_", 11) + _127164920_itoa(static_cast<jule::Int>(_19326_it));
}



inline jule::Str _130f5aa90_label_ident(jule::Str _19816_ident) {
	return jule::Str("_julec_label_", 13) + _19816_ident;
}



inline jule::Str _130f5aa90_match_end_label_ident(jule::Uintptr _20326_m) {
	return jule::Str("_match_end_", 11) + _127164920_itoa(static_cast<jule::Int>(_20326_m));
}



inline jule::Str _130f5aa90_case_begin_label_ident(jule::Uintptr _20827_c) {
	return jule::Str("_case_begin_", 12) + _127164920_itoa(static_cast<jule::Int>(_20827_c));
}



inline jule::Str _130f5aa90_case_end_label_ident(jule::Uintptr _21325_c) {
	return jule::Str("_case_end_", 10) + _127164920_itoa(static_cast<jule::Int>(_21325_c));
}



inline jule::Bool _13023c2e0_has_directive(jule::Slice<jule::Ref<_1275d7180_Directive>> _2518_directives,jule::Str _2560_tag) {
	{
		auto &__julec_range_expr = _2518_directives;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1275d7180_Directive> _13023c2e0_dr = *__julec_range_begin;
			_iter_begin_5151809728:;
			{
				if (_13023c2e0_dr->_field_tag == _2560_tag) {
					return true;
				}
			}
			_iter_next_5151809728:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13023c2e0_dr = *__julec_range_begin; goto _iter_begin_5151809728; }
			_iter_end_5151809728:;
		}
	}
	return false;
}



inline jule::Str _13023c2e0_gen_prim_kind(jule::Ref<_1304dc9b0_Prim> _3518_p) {
	return _130f5aa90_as_jt(_3518_p->_method_to_str());
}



inline jule::Str _13023c2e0_gen_tuple_kind(jule::Ref<_1304dc9b0_Tuple> _4023_t) {
	jule::Str _4113_obj = jule::Str("std::tuple<", 11);
	{
		auto &__julec_range_expr = _4023_t->_field_types;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1304dc9b0_TypeKind> _13023c2e0_t = *__julec_range_begin;
			_iter_begin_5151818096:;
			{
				_4113_obj+=_13023c2e0_gen_type_kind(_13023c2e0_t) + jule::Str(",", 1);
			}
			_iter_next_5151818096:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _13023c2e0_t = *__julec_range_begin; goto _iter_begin_5151818096; }
			_iter_end_5151818096:;
		}
	}
	_4113_obj=_4113_obj.slice(0LL,static_cast<jule::Int>(_4113_obj.len() - 1LL));
	return _4113_obj + jule::Str(">", 1);
}



inline jule::Str _13023c2e0_as_ref_kind(jule::Str _5016_elem) {
	jule::Str _519_ref = _130f5aa90_as_jt(jule::Str("ref", 3));
	return ((_519_ref + jule::Str("<", 1)) + _5016_elem) + jule::Str(">", 1);
}



inline jule::Str _13023c2e0_gen_ref_kind(jule::Ref<_1304dc9b0_Ref> _5621_r) {
	jule::Str _579_elem = _13023c2e0_gen_type_kind(_5621_r->_field_elem);
	return _13023c2e0_as_ref_kind(_579_elem);
}



inline jule::Str _13023c2e0_gen_ptr_kind(jule::Ref<_1304dc9b0_Ptr> _6221_p) {
	
	if (_6221_p->_method_is_unsafe()) {
		return jule::Str("void*", 5);
	}
	jule::Str _689_elem = _13023c2e0_gen_type_kind(_6221_p->_field_elem);
	return _689_elem + jule::Str("*", 1);
}



inline jule::Str _13023c2e0_gen_enum_kind(jule::Ref<_13009ed30_Enum> _7322_e) {
	return _13023c2e0_gen_type_kind(_7322_e->_field_kind->_field_kind);
}



inline jule::Str _13023c2e0_as_slice_kind(jule::Ref<_1304dc9b0_TypeKind> _7722_elem) {
	jule::Str _789_elem_s = _13023c2e0_gen_type_kind(_7722_elem);
	jule::Str _799_slc = _130f5aa90_as_jt(jule::Str("slice", 5));
	return ((_799_slc + jule::Str("<", 1)) + _789_elem_s) + jule::Str(">", 1);
}



inline jule::Str _13023c2e0_gen_slice_kind(jule::Ref<_1304dc9b0_Slc> _8423_s) {
	return _13023c2e0_as_slice_kind(_8423_s->_field_elem);
}



inline jule::Str _13023c2e0_gen_map_kind(jule::Ref<_1304dc9b0_Map> _8921_m) {
	jule::Str _909_key = _13023c2e0_gen_type_kind(_8921_m->_field_key);
	jule::Str _919_val = _13023c2e0_gen_type_kind(_8921_m->_field_val);
	jule::Str _929__map = _130f5aa90_as_jt(jule::Str("map", 3));
	return ((((_929__map + jule::Str("<", 1)) + _909_key) + jule::Str(",", 1)) + _919_val) + jule::Str(">", 1);
}



inline jule::Str _13023c2e0_gen_trait_kind_from_ident(jule::Str _9630_ident) {
	jule::Str _979_trt = _130f5aa90_as_jt(jule::Str("trait", 5));
	return ((_979_trt + jule::Str("<", 1)) + _9630_ident) + jule::Str(">", 1);
}



inline jule::Str _13023c2e0_gen_trait_kind(jule::Ref<_130099320_Trait> _10219_t) {
	jule::Str _1039_ident = _130f5aa90_trait_out_ident(_10219_t);
	return _13023c2e0_gen_trait_kind_from_ident(_1039_ident);
}



inline jule::Str _13023c2e0_gen_struct_kind(jule::Ref<_127b2e960_Struct> _10820_s) {
	jule::Str _10913_rep = jule::Str("", 0);
	if (_10820_s->_field_cpp_linked && (!(_13023c2e0_has_directive(_10820_s->_field_directives,jule::Str("typedef", 7))))) {
		_10913_rep+=jule::Str("struct ", 7);
	}
	_10913_rep+=_130f5aa90_struct_out_ident(_10820_s);
	return _10913_rep;
}



inline jule::Str _13023c2e0_gen_struct_kind_ins(jule::Ref<_127b2e960_StructIns> _11928_s) {
	if (_11928_s->_field_decl->_field_cpp_linked) {
		jule::Str _12117_ident = _130f5aa90_struct_ins_out_ident(_11928_s);
		if (_11928_s->_field_generics.len() > 0LL) {
			_12117_ident+=jule::Str("<", 1);
			{
				auto &__julec_range_expr = _11928_s->_field_generics;
				if (__julec_range_expr.begin() != __julec_range_expr.end()) {
					auto __julec_range_begin = __julec_range_expr.begin();
					const auto __julec_range_end = __julec_range_expr.end();
					jule::Ref<_1304dc9b0_TypeKind> _13023c2e0_g = *__julec_range_begin;
					_iter_begin_5151863840:;
					{
						_12117_ident+=_13023c2e0_gen_type_kind(_13023c2e0_g) + jule::Str(",", 1);
					}
					_iter_next_5151863840:;
					++__julec_range_begin;
					if (__julec_range_begin != __julec_range_end) { _13023c2e0_g = *__julec_range_begin; goto _iter_begin_5151863840; }
					_iter_end_5151863840:;
				}
			}
			_12117_ident=_12117_ident.slice(0LL,static_cast<jule::Int>(_12117_ident.len() - 1LL));
			_12117_ident+=jule::Str(">", 1);
		}
		return _12117_ident;
	}
	return _130f5aa90_struct_ins_out_ident(_11928_s);
}



inline jule::Str _13023c2e0_gen_array_kind(jule::Ref<_1304dc9b0_Arr> _13623_a) {
	jule::Str _1379_arr = _130f5aa90_as_jt(jule::Str("array", 5));
	jule::Str _1389_elem = _13023c2e0_gen_type_kind(_13623_a->_field_elem);
	jule::Str _1399_size = _127164920_itoa(_13623_a->_field_n);
	return ((((_1379_arr + jule::Str("<", 1)) + _1389_elem) + jule::Str(",", 1)) + _1399_size) + jule::Str(">", 1);
}



inline jule::Str _13023c2e0_gen_fn_anon_decl(jule::Ref<_127ed52e0_FnIns> _14325_f) {
	jule::Str _14413_decl = _130f8bbe0_gen_fn_ins_result(_14325_f);
	_14413_decl+=jule::Str("(", 1);
	if (_14325_f->_field_params.len() > 0LL) {
		{
			auto &__julec_range_expr = _14325_f->_field_params;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_127ed52e0_ParamIns> _13023c2e0_param = *__julec_range_begin;
				_iter_begin_5151880128:;
				{
					if (_13023c2e0_param->_field_decl->_method_is_self()) {
						goto _iter_next_5151880128;
					}
					_14413_decl+=_130f8bbe0_gen_param_ins_prototype(_13023c2e0_param);
					_14413_decl+=jule::Str(",", 1);
				}
				_iter_next_5151880128:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _13023c2e0_param = *__julec_range_begin; goto _iter_begin_5151880128; }
				_iter_end_5151880128:;
			}
		}
		_14413_decl=_14413_decl.slice(0LL,static_cast<jule::Int>(_14413_decl.len() - 1LL));
	} else {
		_14413_decl+=jule::Str("void", 4);
	}
	_14413_decl+=jule::Str(")", 1);
	return _14413_decl;
}



inline jule::Str _13023c2e0_gen_fn_kind(jule::Ref<_127ed52e0_FnIns> _16620_f) {
	jule::Str _1679_fnc = _130f5aa90_as_jt(jule::Str("fn", 2));
	jule::Str _1689_decl = _13023c2e0_gen_fn_anon_decl(_16620_f);
	return ((_1679_fnc + jule::Str("<", 1)) + _1689_decl) + jule::Str(">", 1);
}



inline jule::Str _13023c2e0_gen_type_kind(jule::Ref<_1304dc9b0_TypeKind> _17322_k) {
	{
		if (!((_17322_k->_field_cpp_linked))) { goto _case_end_5151895600; }
		_case_begin_5151895600:;
		{
			return _17322_k->_field_cpp_ident;
		}
		goto _match_end_5151892384;
		_case_end_5151895600:;
		if (!((jule::real(_17322_k->_method_prim())))) { goto _case_end_5151894992; }
		_case_begin_5151894992:;
		{
			return _13023c2e0_gen_prim_kind(_17322_k->_method_prim());
		}
		goto _match_end_5151892384;
		_case_end_5151894992:;
		if (!((jule::real(_17322_k->_method_tup())))) { goto _case_end_5151896048; }
		_case_begin_5151896048:;
		{
			return _13023c2e0_gen_tuple_kind(_17322_k->_method_tup());
		}
		goto _match_end_5151892384;
		_case_end_5151896048:;
		if (!((jule::real(_17322_k->_method_ref())))) { goto _case_end_5151896160; }
		_case_begin_5151896160:;
		{
			return _13023c2e0_gen_ref_kind(_17322_k->_method_ref());
		}
		goto _match_end_5151892384;
		_case_end_5151896160:;
		if (!((jule::real(_17322_k->_method_ptr())))) { goto _case_end_5151896272; }
		_case_begin_5151896272:;
		{
			return _13023c2e0_gen_ptr_kind(_17322_k->_method_ptr());
		}
		goto _match_end_5151892384;
		_case_end_5151896272:;
		if (!((jule::real(_17322_k->_method_enm())))) { goto _case_end_5151896384; }
		_case_begin_5151896384:;
		{
			return _13023c2e0_gen_enum_kind(_17322_k->_method_enm());
		}
		goto _match_end_5151892384;
		_case_end_5151896384:;
		if (!((jule::real(_17322_k->_method_slc())))) { goto _case_end_5151896496; }
		_case_begin_5151896496:;
		{
			return _13023c2e0_gen_slice_kind(_17322_k->_method_slc());
		}
		goto _match_end_5151892384;
		_case_end_5151896496:;
		if (!((jule::real(_17322_k->_method_map())))) { goto _case_end_5151896608; }
		_case_begin_5151896608:;
		{
			return _13023c2e0_gen_map_kind(_17322_k->_method_map());
		}
		goto _match_end_5151892384;
		_case_end_5151896608:;
		if (!((jule::real(_17322_k->_method_trt())))) { goto _case_end_5151896768; }
		_case_begin_5151896768:;
		{
			return _13023c2e0_gen_trait_kind(_17322_k->_method_trt());
		}
		goto _match_end_5151892384;
		_case_end_5151896768:;
		if (!((jule::real(_17322_k->_method_strct())))) { goto _case_end_5151896880; }
		_case_begin_5151896880:;
		{
			return _13023c2e0_gen_struct_kind_ins(_17322_k->_method_strct());
		}
		goto _match_end_5151892384;
		_case_end_5151896880:;
		if (!((jule::real(_17322_k->_method_arr())))) { goto _case_end_5151896992; }
		_case_begin_5151896992:;
		{
			return _13023c2e0_gen_array_kind(_17322_k->_method_arr());
		}
		goto _match_end_5151892384;
		_case_end_5151896992:;
		if (!((jule::real(_17322_k->_method_fnc())))) { goto _case_end_5151897104; }
		_case_begin_5151897104:;
		{
			return _13023c2e0_gen_fn_kind(_17322_k->_method_fnc());
		}
		goto _match_end_5151892384;
		_case_end_5151897104:;
		_case_begin_5151894480:;
		{
			return jule::Str("[<unimplemented_type_kind>]", 27);
		}
		goto _match_end_5151892384;
		_case_end_5151894480:;
		_match_end_5151892384:;
	}
}



inline void _130f8bbe0_add_indent(void) {
	(_130f8bbe0_INDENT)++;
}



inline void _130f8bbe0_done_indent(void) {
	(_130f8bbe0_INDENT)--;
}



inline jule::Str _130f8bbe0_indent(void) {
	
	if (_130f8bbe0_INDENT == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _7913_s = jule::Str("", 0);
	jule::Int _8013_i = 0LL;
	_iter_begin_5151921008:;
	if (!(_8013_i < _130f8bbe0_INDENT)) { goto _iter_end_5151921008; }
	{
		_7913_s+=jule::Str("\t", 1);
	}
	_iter_next_5151921008:;
	(_8013_i)++;
	goto _iter_begin_5151921008;
	_iter_end_5151921008:;
	return _7913_s;
}



inline jule::Bool _130f8bbe0_is_cpp_header_file(jule::Str _8723_path) {
	jule::Int _889_offset = _8723_path.rfind(jule::Str(".", 1));
	if (_889_offset == -1LL) {
		return false;
	}
	return _136f04bd0_is_valid_header_ext(_8723_path.slice(static_cast<jule::Int>(_889_offset)));
}



inline jule::Str _130f8bbe0_gen_links(jule::Ref<_136f09c40_IR> _9618_ir) {
	jule::Str _9713_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _9618_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1300a4650_ImportInfo> _130f8bbe0_pkg = *__julec_range_begin;
			_iter_begin_5151933872:;
			{
				{
					if (!(((!(_130f8bbe0_pkg->_field_cpp_linked))))) { goto _case_end_5151935840; }
					_case_begin_5151935840:;
					{
						goto _iter_next_5151933872;
					}
					goto _match_end_5151935600;
					_case_end_5151935840:;
					if (!((_136f04bd0_is_std_header_path(_130f8bbe0_pkg->_field_path)))) { goto _case_end_5151935952; }
					_case_begin_5151935952:;
					{
						_9713_obj+=(jule::Str("#include ", 9) + _130f8bbe0_pkg->_field_path) + jule::Str("\n", 1);
					}
					goto _match_end_5151935600;
					_case_end_5151935952:;
					_match_end_5151935600:;
				}
			}
			_iter_next_5151933872:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _130f8bbe0_pkg = *__julec_range_begin; goto _iter_begin_5151933872; }
			_iter_end_5151933872:;
		}
	}
	{
		auto &__julec_range_expr = _9618_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1300a4650_ImportInfo> _130f8bbe0_pkg = *__julec_range_begin;
			_iter_begin_5151938912:;
			{
				{
					if (!(((!(_130f8bbe0_pkg->_field_cpp_linked))))) { goto _case_end_5151942160; }
					_case_begin_5151942160:;
					{
						goto _iter_next_5151938912;
					}
					goto _match_end_5151941920;
					_case_end_5151942160:;
					if (!((_130f8bbe0_is_cpp_header_file(_130f8bbe0_pkg->_field_path)))) { goto _case_end_5151942272; }
					_case_begin_5151942272:;
					{
						_9713_obj+=(jule::Str("#include \"", 10) + _130f8bbe0_pkg->_field_path) + jule::Str("\"\n", 2);
					}
					goto _match_end_5151941920;
					_case_end_5151942272:;
					_match_end_5151941920:;
				}
			}
			_iter_next_5151938912:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _130f8bbe0_pkg = *__julec_range_begin; goto _iter_begin_5151938912; }
			_iter_end_5151938912:;
		}
	}
	return _9713_obj;
}



inline jule::Str _130f8bbe0_gen_fn_result(jule::Ref<_127ed52e0_Fn> _12122_f) {
	if (_12122_f->_method_is_void()) {
		return jule::Str("void", 4);
	}
	return _13023c2e0_gen_type_kind(_12122_f->_field_result->_field_kind->_field_kind);
}



inline jule::Str _130f8bbe0_gen_fn_ins_result(jule::Ref<_127ed52e0_FnIns> _12926_f) {
	if (_12926_f->_field_decl->_method_is_void()) {
		return jule::Str("void", 4);
	}
	return _13023c2e0_gen_type_kind(_12926_f->_field_result);
}



inline jule::Str _130f8bbe0_gen_param_prototype(jule::Ref<_127ed52e0_Param> _13728_p) {
	jule::Str _13813_obj = jule::Str("", 0);
	if (_13728_p->_field_variadic) {
		_13813_obj+=_130f5aa90_as_jt(jule::Str("slice", 5));
		_13813_obj+=jule::Str("<", 1);
		_13813_obj+=_13023c2e0_gen_type_kind(_13728_p->_field_kind->_field_kind);
		_13813_obj+=jule::Str(">", 1);
	} else {
		_13813_obj+=_13023c2e0_gen_type_kind(_13728_p->_field_kind->_field_kind);
	}
	return _13813_obj;
}



inline jule::Str _130f8bbe0_gen_param_ins(jule::Ref<_127ed52e0_ParamIns> _15122_p) {
	jule::Str _15213_obj = _130f8bbe0_gen_param_ins_prototype(_15122_p);
	_15213_obj+=jule::Str(" ", 1);
	_15213_obj+=_130f5aa90_param_out_ident(_15122_p->_field_decl);
	return _15213_obj;
}



inline jule::Str _130f8bbe0_gen_param_ins_prototype(jule::Ref<_127ed52e0_ParamIns> _15932_p) {
	jule::Str _16013_obj = jule::Str("", 0);
	if (_15932_p->_field_decl->_field_variadic) {
		_16013_obj+=_130f5aa90_as_jt(jule::Str("slice", 5));
		_16013_obj+=jule::Str("<", 1);
		_16013_obj+=_13023c2e0_gen_type_kind(_15932_p->_field_kind);
		_16013_obj+=jule::Str(">", 1);
	} else {
		_16013_obj+=_13023c2e0_gen_type_kind(_15932_p->_field_kind);
	}
	if (_15932_p->_field_decl->_field_reference) {
		_16013_obj+=jule::Str("&", 1);
	}
	return _16013_obj;
}



inline jule::Str _130f8bbe0_gen_param(jule::Ref<_127ed52e0_Param> _17818_p) {
	jule::Str _17913_obj = _130f8bbe0_gen_param_prototype(_17818_p);
	if (((_17818_p->_field_ident != jule::Str("", 0)) && (!(_127941de0_is_ignore_ident(_17818_p->_field_ident)))) && (!(_127941de0_is_anon_ident(_17818_p->_field_ident)))) {
		_17913_obj+=jule::Str(" ", 1) + _130f5aa90_param_out_ident(_17818_p);
	}
	return _17913_obj;
}



inline jule::Str _130f8bbe0_gen_params(jule::Slice<jule::Ref<_127ed52e0_Param>> _18719_params) {
	{
		if (!((_18719_params.len() == 0LL))) { goto _case_end_5151982416; }
		_case_begin_5151982416:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_5151982160;
		_case_end_5151982416:;
		if (!(((_18719_params.len() == 1LL) && _18719_params[static_cast<jule::Int>(0LL)]->_method_is_self()))) { goto _case_end_5151982528; }
		_case_begin_5151982528:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_5151982160;
		_case_end_5151982528:;
		_match_end_5151982160:;
	}
	jule::Str _19613_obj = jule::Str("(", 1);
	{
		auto &__julec_range_expr = _18719_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127ed52e0_Param> _130f8bbe0_p = *__julec_range_begin;
			_iter_begin_5151987872:;
			{
				if ((!(_130f8bbe0_p->_method_is_self()))) {
					_19613_obj+=_130f8bbe0_gen_param(_130f8bbe0_p) + jule::Str(",", 1);
				}
			}
			_iter_next_5151987872:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _130f8bbe0_p = *__julec_range_begin; goto _iter_begin_5151987872; }
			_iter_end_5151987872:;
		}
	}
	_19613_obj=_19613_obj.slice(0LL,static_cast<jule::Int>(_19613_obj.len() - 1LL));
	return _19613_obj + jule::Str(")", 1);
}



inline jule::Str _130f8bbe0_gen_params_ins(jule::Slice<jule::Ref<_127ed52e0_ParamIns>> _20823_params) {
	{
		if (!((_20823_params.len() == 0LL))) { goto _case_end_5151994720; }
		_case_begin_5151994720:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_5151994464;
		_case_end_5151994720:;
		if (!(((_20823_params.len() == 1LL) && _20823_params[static_cast<jule::Int>(0LL)]->_field_decl->_method_is_self()))) { goto _case_end_5151994832; }
		_case_begin_5151994832:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_5151994464;
		_case_end_5151994832:;
		_match_end_5151994464:;
	}
	jule::Str _21713_obj = jule::Str("(", 1);
	{
		auto &__julec_range_expr = _20823_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127ed52e0_ParamIns> _130f8bbe0_p = *__julec_range_begin;
			_iter_begin_5152000448:;
			{
				if ((!(_130f8bbe0_p->_field_decl->_method_is_self()))) {
					_21713_obj+=_130f8bbe0_gen_param_ins(_130f8bbe0_p) + jule::Str(",", 1);
				}
			}
			_iter_next_5152000448:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _130f8bbe0_p = *__julec_range_begin; goto _iter_begin_5152000448; }
			_iter_end_5152000448:;
		}
	}
	_21713_obj=_21713_obj.slice(0LL,static_cast<jule::Int>(_21713_obj.len() - 1LL));
	return _21713_obj + jule::Str(")", 1);
}



inline jule::Str _130f8bbe0_gen_params_prototypes(jule::Slice<jule::Ref<_127ed52e0_ParamIns>> _23030_params) {
	{
		if (!((_23030_params.len() == 0LL))) { goto _case_end_5152007568; }
		_case_begin_5152007568:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_5152002560;
		_case_end_5152007568:;
		if (!(((_23030_params.len() == 1LL) && _23030_params[static_cast<jule::Int>(0LL)]->_field_decl->_method_is_self()))) { goto _case_end_5152007680; }
		_case_begin_5152007680:;
		{
			return jule::Str("(void)", 6);
		}
		goto _match_end_5152002560;
		_case_end_5152007680:;
		_match_end_5152002560:;
	}
	jule::Str _23913_obj = jule::Str("(", 1);
	{
		auto &__julec_range_expr = _23030_params;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127ed52e0_ParamIns> _130f8bbe0_p = *__julec_range_begin;
			_iter_begin_5152013296:;
			{
				if ((!(_130f8bbe0_p->_field_decl->_method_is_self()))) {
					_23913_obj+=_130f8bbe0_gen_param_ins_prototype(_130f8bbe0_p) + jule::Str(",", 1);
				}
			}
			_iter_next_5152013296:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _130f8bbe0_p = *__julec_range_begin; goto _iter_begin_5152013296; }
			_iter_end_5152013296:;
		}
	}
	_23913_obj=_23913_obj.slice(0LL,static_cast<jule::Int>(_23913_obj.len() - 1LL));
	return _23913_obj + jule::Str(")", 1);
}



inline jule::Str _130f8bbe0_gen_trait(jule::Ref<_130099320_Trait> _25218_t) {
	
	jule::Str _2549_outid = _130f5aa90_trait_out_ident(_25218_t);
	jule::Str _25613_obj = jule::Str("struct ", 7);
	_25613_obj+=_2549_outid;
	_25613_obj+=jule::Str(" {\n", 3);
	_25613_obj+=jule::Str("\t", 1);
	_25613_obj+=jule::Str("virtual ~", 9);
	_25613_obj+=_2549_outid;
	_25613_obj+=jule::Str("(void) {}\n\n", 11);
	{
		auto &__julec_range_expr = _25218_t->_field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127ed52e0_Fn> _130f8bbe0_f = *__julec_range_begin;
			_iter_begin_5152024768:;
			{
				_25613_obj+=jule::Str("\t", 1);
				_25613_obj+=jule::Str("virtual ", 8);
				_25613_obj+=_130f8bbe0_gen_fn_result(_130f8bbe0_f);
				_25613_obj+=jule::Str(" _method_", 9);
				_25613_obj+=_130f8bbe0_f->_field_ident;
				_25613_obj+=_130f8bbe0_gen_params(_130f8bbe0_f->_field_params);
				_25613_obj+=jule::Str(" {", 2);
				if ((!(_130f8bbe0_f->_method_is_void()))) {
					_25613_obj+=jule::Str(" return {}; ", 12);
				}
				_25613_obj+=jule::Str("}\n", 2);
			}
			_iter_next_5152024768:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _130f8bbe0_f = *__julec_range_begin; goto _iter_begin_5152024768; }
			_iter_end_5152024768:;
		}
	}
	_25613_obj+=jule::Str("};", 2);
	return _25613_obj;
}



inline jule::Str _130f8bbe0_gen_traits_tbl(jule::Ref<_13032dc50_SymbolTable> _28123_tbl) {
	jule::Str _28213_obj = jule::Str("", 0);
	jule::Int _28313_i = 0LL;
	_iter_begin_5152036544:;
	if (!(_28313_i < _28123_tbl->_field_traits._method_len())) { goto _iter_end_5152036544; }
	{
		jule::Ref<_130099320_Trait> _28517_t = _28123_tbl->_field_traits._method_at(_28313_i);
		_28213_obj+=_130f8bbe0_gen_trait(_28517_t) + jule::Str("\n\n", 2);
	}
	_iter_next_5152036544:;
	(_28313_i)++;
	goto _iter_begin_5152036544;
	_iter_end_5152036544:;
	return _28213_obj;
}



inline jule::Str _130f8bbe0_gen_traits_pkg(jule::Ref<_1300a4650_Package> _29223_pkg) {
	jule::Str _29313_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _29223_pkg->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13032dc50_SymbolTable> _130f8bbe0_tbl = *__julec_range_begin;
			_iter_begin_5152046192:;
			{
				_29313_obj+=_130f8bbe0_gen_traits_tbl(_130f8bbe0_tbl);
			}
			_iter_next_5152046192:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _130f8bbe0_tbl = *__julec_range_begin; goto _iter_begin_5152046192; }
			_iter_end_5152046192:;
		}
	}
	return _29313_obj;
}



inline jule::Str _130f8bbe0_gen_traits(jule::Ref<_136f09c40_IR> _30119_ir) {
	jule::Str _30213_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _30119_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1300a4650_ImportInfo> _130f8bbe0_u = *__julec_range_begin;
			_iter_begin_5152050384:;
			{
				if ((!(_130f8bbe0_u->_field_cpp_linked))) {
					_30213_obj+=_130f8bbe0_gen_traits_pkg(_130f8bbe0_u->_field_package);
				}
			}
			_iter_next_5152050384:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _130f8bbe0_u = *__julec_range_begin; goto _iter_begin_5152050384; }
			_iter_end_5152050384:;
		}
	}
	_30213_obj+=_130f8bbe0_gen_traits_pkg(_30119_ir->_field_main);
	return _30213_obj;
}



inline jule::Str _130f8bbe0_gen_trait_prototype(jule::Ref<_130099320_Trait> _31324_t) {
	return (jule::Str("struct ", 7) + _130f5aa90_trait_out_ident(_31324_t)) + jule::Str(";", 1);
}



inline jule::Str _130f8bbe0_gen_trait_prototypes(jule::Ref<_1300a4650_Package> _31829_p) {
	jule::Str _31913_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _31829_p->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13032dc50_SymbolTable> _130f8bbe0_f = *__julec_range_begin;
			_iter_begin_5152058736:;
			{
				jule::Int _32117_i = 0LL;
				_iter_begin_5152060384:;
				if (!(_32117_i < _130f8bbe0_f->_field_traits._method_len())) { goto _iter_end_5152060384; }
				{
					jule::Ref<_130099320_Trait> _32317_t = _130f8bbe0_f->_field_traits._method_at(_32117_i);
					if (_32317_t->_field_token._field_id != 0LLU) {
						_31913_obj+=_130f8bbe0_gen_trait_prototype(_32317_t) + jule::Str("\n", 1);
					}
				}
				_iter_next_5152060384:;
				(_32117_i)++;
				goto _iter_begin_5152060384;
				_iter_end_5152060384:;
			}
			_iter_next_5152058736:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _130f8bbe0_f = *__julec_range_begin; goto _iter_begin_5152058736; }
			_iter_end_5152058736:;
		}
	}
	return _31913_obj;
}



inline jule::Str _130f8bbe0_gen_struct_plain_prototype(jule::Ref<_127b2e960_Struct> _33331_s) {
	jule::Str _33413_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _33331_s->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127b2e960_StructIns> _130f8bbe0_ins = *__julec_range_begin;
			_iter_begin_5152069104:;
			{
				_33413_obj+=jule::Str("\nstruct ", 8);
				_33413_obj+=_130f5aa90_struct_ins_out_ident(_130f8bbe0_ins);
				_33413_obj+=jule::Str(";", 1);
				_33413_obj+=jule::Str("\n", 1);
			}
			_iter_next_5152069104:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _130f8bbe0_ins = *__julec_range_begin; goto _iter_begin_5152069104; }
			_iter_end_5152069104:;
		}
	}
	return _33413_obj;
}



inline jule::Str _130f8bbe0_gen_struct_plain_prototypes(jule::Slice<jule::Ref<_127b2e960_Struct>> _34536_structs) {
	jule::Str _34613_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _34536_structs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127b2e960_Struct> _130f8bbe0_s = *__julec_range_begin;
			_iter_begin_5152074016:;
			{
				if ((!(_130f8bbe0_s->_field_cpp_linked)) && (_130f8bbe0_s->_field_token._field_id != 0LLU)) {
					_34613_obj+=_130f8bbe0_gen_struct_plain_prototype(_130f8bbe0_s) + jule::Str("\n", 1);
				}
			}
			_iter_next_5152074016:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _130f8bbe0_s = *__julec_range_begin; goto _iter_begin_5152074016; }
			_iter_end_5152074016:;
		}
	}
	return _34613_obj;
}



inline jule::Str _130f8bbe0_gen_struct_traits(jule::Ref<_127b2e960_Struct> _35622_s) {
	if (_35622_s->_field_implements.len() == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _36113_obj = jule::Str(": ", 2);
	{
		auto &__julec_range_expr = _35622_s->_field_implements;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_130099320_Trait> _130f8bbe0_i = *__julec_range_begin;
			_iter_begin_5152082016:;
			{
				_36113_obj+=jule::Str("public ", 7);
				_36113_obj+=_130f5aa90_trait_out_ident(_130f8bbe0_i);
				_36113_obj+=jule::Str(",", 1);
			}
			_iter_next_5152082016:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _130f8bbe0_i = *__julec_range_begin; goto _iter_begin_5152082016; }
			_iter_end_5152082016:;
		}
	}
	_36113_obj=_36113_obj.slice(0LL,static_cast<jule::Int>(_36113_obj.len() - 1LL));
	return _36113_obj;
}



inline jule::Str _130f8bbe0_gen_field_decl(jule::Ref<_127b2e960_FieldIns> _37223_f) {
	jule::Str _37313_obj = _13023c2e0_gen_type_kind(_37223_f->_field_kind) + jule::Str(" ", 1);
	_37313_obj+=_130f5aa90_field_out_ident(_37223_f->_field_decl);
	_37313_obj+=(jule::Str("{", 1) + _130e870c0_get_init_expr(_37223_f->_field_kind)) + jule::Str("}", 1);
	_37313_obj+=jule::Str(";", 1);
	return _37313_obj;
}



inline jule::Str _130f8bbe0_gen_struct_self_field_type_kind(jule::Ref<_127b2e960_StructIns> _38140_s) {
	return _13023c2e0_as_ref_kind(_13023c2e0_gen_struct_kind_ins(_38140_s));
}



inline jule::Str _130f8bbe0_gen_struct_self_field(jule::Ref<_127b2e960_StructIns> _38630_s) {
	jule::Str _38713_obj = _130f8bbe0_gen_struct_self_field_type_kind(_38630_s);
	_38713_obj+=jule::Str(" self{};", 8);
	return _38713_obj;
}



inline jule::Str _130f8bbe0_gen_struct_self_field_init_st(jule::Ref<_127b2e960_StructIns> _39238_s) {
	jule::Str _39313_obj = jule::Str("this->self = ", 13);
	_39313_obj+=_130f8bbe0_gen_struct_self_field_type_kind(_39238_s);
	_39313_obj+=jule::Str("::make(this, nullptr);", 22);
	return _39313_obj;
}



inline jule::Str _130f8bbe0_gen_struct_constructor(jule::Ref<_127b2e960_StructIns> _39931_s) {
	jule::Str _40013_obj = _130f5aa90_struct_ins_out_ident(_39931_s);
	_40013_obj+=jule::Str("(", 1);
	if (_39931_s->_field_fields.len() > 0LL) {
		{
			auto &__julec_range_expr = _39931_s->_field_fields;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_127b2e960_FieldIns> _130f8bbe0_f = *__julec_range_begin;
				_iter_begin_5152103952:;
				{
					_40013_obj+=_13023c2e0_gen_type_kind(_130f8bbe0_f->_field_kind);
					_40013_obj+=(jule::Str(" __param_", 9) + _130f8bbe0_f->_field_decl->_field_ident) + jule::Str(", ", 2);
				}
				_iter_next_5152103952:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _130f8bbe0_f = *__julec_range_begin; goto _iter_begin_5152103952; }
				_iter_end_5152103952:;
			}
		}
		_40013_obj=_40013_obj.slice(0LL,static_cast<jule::Int>(_40013_obj.len() - 2LL));
	} else {
		_40013_obj+=jule::Str("void", 4);
	}
	_40013_obj+=jule::Str(") {\n", 4);
	_130f8bbe0_add_indent();
	_40013_obj+=_130f8bbe0_indent();
	_40013_obj+=_130f8bbe0_gen_struct_self_field_init_st(_39931_s);
	_40013_obj+=jule::Str("\n", 1);
	if (_39931_s->_field_fields.len() > 0LL) {
		{
			auto &__julec_range_expr = _39931_s->_field_fields;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_127b2e960_FieldIns> _130f8bbe0_f = *__julec_range_begin;
				_iter_begin_5152111584:;
				{
					_40013_obj+=jule::Str("\n", 1);
					_40013_obj+=_130f8bbe0_indent();
					_40013_obj+=jule::Str("this->", 6);
					_40013_obj+=_130f5aa90_field_out_ident(_130f8bbe0_f->_field_decl);
					_40013_obj+=jule::Str(" = ", 3);
					_40013_obj+=jule::Str("__param_", 8) + _130f8bbe0_f->_field_decl->_field_ident;
					_40013_obj+=jule::Str(";", 1);
				}
				_iter_next_5152111584:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _130f8bbe0_f = *__julec_range_begin; goto _iter_begin_5152111584; }
				_iter_end_5152111584:;
			}
		}
	}
	_130f8bbe0_done_indent();
	_40013_obj+=(jule::Str("\n", 1) + _130f8bbe0_indent()) + jule::Str("}", 1);
	return _40013_obj;
}



inline jule::Str _130f8bbe0_gen_struct_destructor(jule::Ref<_127b2e960_StructIns> _43626_s) {
	jule::Str _43713_obj = jule::Str("~", 1);
	_43713_obj+=_130f5aa90_struct_ins_out_ident(_43626_s);
	_43713_obj+=jule::Str("(void) { /* heap allocations managed by traits or references */ this->self.ref = nullptr; }", 91);
	return _43713_obj;
}



inline jule::Str _130f8bbe0_gen_struct_operators(jule::Ref<_127b2e960_StructIns> _44329_s) {
	jule::Str _4449_out_ident = _130f5aa90_struct_ins_out_ident(_44329_s);
	jule::Str _44513_obj = jule::Str("", 0);
	_44513_obj+=_130f8bbe0_indent();
	_44513_obj+=jule::Str("inline bool operator==(const ", 29);
	_44513_obj+=_4449_out_ident;
	_44513_obj+=jule::Str(" &_Src) {", 9);
	if (_44329_s->_field_fields.len() > 0LL) {
		_130f8bbe0_add_indent();
		_44513_obj+=jule::Str("\n", 1);
		_44513_obj+=_130f8bbe0_indent();
		_44513_obj+=jule::Str("return ", 7);
		_130f8bbe0_add_indent();
		jule::Int _45717_n = 0LL;
		{
			auto &__julec_range_expr = _44329_s->_field_fields;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_127b2e960_FieldIns> _130f8bbe0_f = *__julec_range_begin;
				_iter_begin_5152135616:;
				{
					jule::Ref<_127b2e960_StructIns> _46017_strct = _130f8bbe0_f->_field_kind->_method_strct();
					if ((jule::real(_46017_strct) && jule::real(_46017_strct->_field_decl)) && _46017_strct->_field_decl->_field_cpp_linked) {
						goto _iter_next_5152135616;
					}
					(_45717_n)++;
					_44513_obj+=jule::Str("\n", 1);
					_44513_obj+=_130f8bbe0_indent();
					_44513_obj+=jule::Str("this->", 6);
					jule::Str _46917_f_ident = _130f5aa90_field_out_ident(_130f8bbe0_f->_field_decl);
					_44513_obj+=_46917_f_ident;
					_44513_obj+=jule::Str(" == _Src.", 9);
					_44513_obj+=_46917_f_ident;
					_44513_obj+=jule::Str(" &&", 3);
				}
				_iter_next_5152135616:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _130f8bbe0_f = *__julec_range_begin; goto _iter_begin_5152135616; }
				_iter_end_5152135616:;
			}
		}
		_130f8bbe0_done_indent();
		if (_45717_n > 0LL) {
			_44513_obj=_44513_obj.slice(0LL,static_cast<jule::Int>(_44513_obj.len() - 3LL));
		} else {
			_44513_obj+=jule::Str("true", 4);
		}
		_44513_obj+=jule::Str(";\n", 2);
		_130f8bbe0_done_indent();
		_44513_obj+=_130f8bbe0_indent();
		_44513_obj+=jule::Str("}", 1);
	} else {
		_44513_obj+=jule::Str(" return true; }", 15);
	}
	_44513_obj+=jule::Str("\n\n", 2);
	_44513_obj+=_130f8bbe0_indent();
	_44513_obj+=jule::Str("inline bool operator!=(const ", 29);
	_44513_obj+=_4449_out_ident;
	_44513_obj+=jule::Str(" &_Src) { return !this->operator==(_Src); }", 43);
	return _44513_obj;
}



inline jule::Str _130f8bbe0_gen_struct_derive_defs_prototypes(jule::Ref<_127b2e960_StructIns> _49638_s) {
	jule::Str _49713_obj = jule::Str("", 0);
	if (_49638_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))) {
		_49713_obj+=_130f8bbe0_indent();
		_49713_obj+=_130f583a0_get_derive_fn_decl_clone(_49638_s->_field_decl);
		_49713_obj+=jule::Str(";\n\n", 3);
	}
	return _49713_obj;
}



inline jule::Str _130f8bbe0_gen_struct_ins_prototype(jule::Ref<_127b2e960_StructIns> _50833_s) {
	jule::Str _50913_obj = jule::Str("struct ", 7);
	jule::Str _5109_out_ident = _130f5aa90_struct_ins_out_ident(_50833_s);
	_50913_obj+=_5109_out_ident;
	_50913_obj+=_130f8bbe0_gen_struct_traits(_50833_s->_field_decl);
	_50913_obj+=jule::Str(" {\n", 3);
	_130f8bbe0_add_indent();
	_50913_obj+=_130f8bbe0_indent();
	_50913_obj+=_130f8bbe0_gen_struct_self_field(_50833_s);
	_50913_obj+=jule::Str("\n\n", 2);
	if (_50833_s->_field_fields.len() > 0LL) {
		{
			auto &__julec_range_expr = _50833_s->_field_fields;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_127b2e960_FieldIns> _130f8bbe0_f = *__julec_range_begin;
				_iter_begin_5152170096:;
				{
					_50913_obj+=_130f8bbe0_indent();
					_50913_obj+=_130f8bbe0_gen_field_decl(_130f8bbe0_f);
					_50913_obj+=jule::Str("\n", 1);
				}
				_iter_next_5152170096:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _130f8bbe0_f = *__julec_range_begin; goto _iter_begin_5152170096; }
				_iter_end_5152170096:;
			}
		}
		_50913_obj+=jule::Str("\n\n", 2);
		_50913_obj+=_130f8bbe0_indent();
		_50913_obj+=_130f8bbe0_gen_struct_constructor(_50833_s);
		_50913_obj+=jule::Str("\n\n", 2);
	}
	_50913_obj+=_130f8bbe0_indent();
	_50913_obj+=_130f8bbe0_gen_struct_destructor(_50833_s);
	_50913_obj+=jule::Str("\n\n", 2);
	_50913_obj+=_130f8bbe0_indent();
	_50913_obj+=_5109_out_ident;
	_50913_obj+=jule::Str("(void) { ", 9);
	_50913_obj+=_130f8bbe0_gen_struct_self_field_init_st(_50833_s);
	_50913_obj+=jule::Str(" }\n\n", 4);
	{
		auto &__julec_range_expr = _50833_s->_field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127ed52e0_Fn> _130f8bbe0_f = *__julec_range_begin;
			_iter_begin_5152177312:;
			{
				jule::Str _54317_proto = _130f8bbe0_gen_fn_prototype(_130f8bbe0_f,true);
				if (_130f8bbe0_f->_field_statically) {
					_54317_proto=(_130f8bbe0_indent() + jule::Str("static ", 7)) + _54317_proto.trim(jule::Str("\t ", 2));
				}
				_50913_obj+=_54317_proto;
				_50913_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_5152177312:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _130f8bbe0_f = *__julec_range_begin; goto _iter_begin_5152177312; }
			_iter_end_5152177312:;
		}
	}
	_50913_obj+=_130f8bbe0_gen_struct_derive_defs_prototypes(_50833_s);
	_50913_obj+=_130f8bbe0_gen_struct_operators(_50833_s);
	_50913_obj+=jule::Str("\n", 1);
	_130f8bbe0_done_indent();
	_50913_obj+=_130f8bbe0_indent() + jule::Str("};", 2);
	return _50913_obj;
}



inline jule::Str _130f8bbe0_gen_struct_prototype(jule::Ref<_127b2e960_Struct> _56229_s) {
	jule::Str _56313_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _56229_s->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127b2e960_StructIns> _130f8bbe0_ins = *__julec_range_begin;
			_iter_begin_5152191024:;
			{
				_56313_obj+=_130f8bbe0_gen_struct_ins_prototype(_130f8bbe0_ins) + jule::Str("\n\n", 2);
			}
			_iter_next_5152191024:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _130f8bbe0_ins = *__julec_range_begin; goto _iter_begin_5152191024; }
			_iter_end_5152191024:;
		}
	}
	return _56313_obj;
}



inline jule::Str _130f8bbe0_gen_struct_prototypes(jule::Slice<jule::Ref<_127b2e960_Struct>> _57130_structs) {
	jule::Str _57213_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _57130_structs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127b2e960_Struct> _130f8bbe0_s = *__julec_range_begin;
			_iter_begin_5152194880:;
			{
				if ((!(_130f8bbe0_s->_field_cpp_linked)) && (_130f8bbe0_s->_field_token._field_id != 0LLU)) {
					_57213_obj+=_130f8bbe0_gen_struct_prototype(_130f8bbe0_s) + jule::Str("\n", 1);
				}
			}
			_iter_next_5152194880:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _130f8bbe0_s = *__julec_range_begin; goto _iter_begin_5152194880; }
			_iter_end_5152194880:;
		}
	}
	return _57213_obj;
}



inline jule::Str _130f8bbe0_gen_fn_decl_head(jule::Ref<_127ed52e0_FnIns> _58125_f,jule::Bool _58136_method) {
	jule::Str _58213_obj = jule::Str("", 0);
	if ((!(_58125_f->_field_decl->_method_is_entry_point()))) {
		_58213_obj+=jule::Str("inline ", 7);
	}
	_58213_obj+=_130f8bbe0_gen_fn_ins_result(_58125_f) + jule::Str(" ", 1);
	if ((!(_58136_method)) && jule::real(_58125_f->_field_decl->_field_owner)) {
		_58213_obj+=_130f5aa90_struct_ins_out_ident(_58125_f->_field_owner) + jule::Str("::", 2);
	}
	_58213_obj+=_130f5aa90_fn_ins_out_ident(_58125_f);
	return _58213_obj;
}



inline jule::Str _130f8bbe0_gen_fn_prototype(jule::Ref<_127ed52e0_Fn> _59825_f,jule::Bool _59833_method) {
	jule::Str _59913_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _59825_f->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127ed52e0_FnIns> _130f8bbe0_c = *__julec_range_begin;
			_iter_begin_5152211488:;
			{
				_59913_obj+=_130f8bbe0_indent();
				_59913_obj+=_130f8bbe0_gen_fn_decl_head(_130f8bbe0_c,_59833_method);
				_59913_obj+=_130f8bbe0_gen_params_prototypes(_130f8bbe0_c->_field_params);
				_59913_obj+=jule::Str(";\n", 2);
			}
			_iter_next_5152211488:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _130f8bbe0_c = *__julec_range_begin; goto _iter_begin_5152211488; }
			_iter_end_5152211488:;
		}
	}
	return _59913_obj;
}



inline jule::Str _130f8bbe0_gen_fn_prototypes(jule::Ref<_1300a4650_Package> _61026_pkg) {
	jule::Str _61113_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _61026_pkg->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13032dc50_SymbolTable> _130f8bbe0_file = *__julec_range_begin;
			_iter_begin_5152217840:;
			{
				jule::Int _61317_i = 0LL;
				_iter_begin_5152219488:;
				if (!(_61317_i < _130f8bbe0_file->_field_funcs._method_len())) { goto _iter_end_5152219488; }
				{
					jule::Ref<_127ed52e0_Fn> _61521_f = _130f8bbe0_file->_field_funcs._method_at(_61317_i);
					if ((!(_61521_f->_field_cpp_linked)) && (_61521_f->_field_token._field_id != 0LLU)) {
						_61113_obj+=_130f8bbe0_gen_fn_prototype(_61521_f,false);
					}
				}
				_iter_next_5152219488:;
				(_61317_i)++;
				goto _iter_begin_5152219488;
				_iter_end_5152219488:;
			}
			_iter_next_5152217840:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _130f8bbe0_file = *__julec_range_begin; goto _iter_begin_5152217840; }
			_iter_end_5152217840:;
		}
	}
	return _61113_obj;
}



inline jule::Str _130f8bbe0_gen_prototypes(jule::Ref<_136f09c40_IR> _62523_ir,jule::Slice<jule::Ref<_127b2e960_Struct>> _62536_structs) {
	jule::Str _62613_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _62523_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1300a4650_ImportInfo> _130f8bbe0_u = *__julec_range_begin;
			_iter_begin_5152229328:;
			{
				if ((!(_130f8bbe0_u->_field_cpp_linked))) {
					_62613_obj+=_130f8bbe0_gen_trait_prototypes(_130f8bbe0_u->_field_package);
				}
			}
			_iter_next_5152229328:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _130f8bbe0_u = *__julec_range_begin; goto _iter_begin_5152229328; }
			_iter_end_5152229328:;
		}
	}
	_62613_obj+=_130f8bbe0_gen_trait_prototypes(_62523_ir->_field_main);
	_62613_obj+=_130f8bbe0_gen_struct_plain_prototypes(_62536_structs);
	_62613_obj+=_130f8bbe0_gen_traits(_62523_ir) + jule::Str("\n", 1);
	_62613_obj+=_130f8bbe0_gen_struct_prototypes(_62536_structs);
	{
		auto &__julec_range_expr = _62523_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1300a4650_ImportInfo> _130f8bbe0_u = *__julec_range_begin;
			_iter_begin_5152236064:;
			{
				if ((!(_130f8bbe0_u->_field_cpp_linked))) {
					_62613_obj+=_130f8bbe0_gen_fn_prototypes(_130f8bbe0_u->_field_package);
				}
			}
			_iter_next_5152236064:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _130f8bbe0_u = *__julec_range_begin; goto _iter_begin_5152236064; }
			_iter_end_5152236064:;
		}
	}
	_62613_obj+=_130f8bbe0_gen_fn_prototypes(_62523_ir->_field_main);
	return _62613_obj;
}



inline jule::Str _130f8bbe0_gen_var_init_expr(jule::Ref<_1303533b0_Var> _65326_v,jule::Str _65335_init) {
	jule::Str _65413_obj = jule::Str("", 0);
	if (_65326_v->_field_statically) {
		_65413_obj+=jule::Str("static ", 7);
	}
	_65413_obj+=_13023c2e0_gen_type_kind(_65326_v->_field_kind->_field_kind) + jule::Str(" ", 1);
	if (_65326_v->_field_reference) {
		_65413_obj+=jule::Str("&", 1);
	}
	_65413_obj+=_130f5aa90_var_out_ident(_65326_v);
	if (_65335_init != jule::Str("", 0)) {
		_65413_obj+=jule::Str(" = ", 3) + _65335_init;
	}
	_65413_obj+=jule::Str(";", 1);
	return _65413_obj;
}



inline jule::Str _130f8bbe0_gen_var(jule::Ref<_1303533b0_Var> _67216_v) {
	if (_127941de0_is_ignore_ident(_67216_v->_field_ident)) {
		return jule::Str("", 0);
	}
	if (_67216_v->_field_constant) {
		return jule::Str("", 0);
	}
	if (jule::real(_67216_v->_field_value) && jule::real(_67216_v->_field_value->_field_expr)) {
		if (_67216_v->_field_value->_field_data->_field_model != nullptr) {
			return _130f8bbe0_gen_var_init_expr(_67216_v,_130e870c0_gen_val(_67216_v->_field_value));
		}
		return _130f8bbe0_gen_var_init_expr(_67216_v,jule::Str("", 0));
	}
	return _130f8bbe0_gen_var_init_expr(_67216_v,_130e870c0_get_init_expr(_67216_v->_field_kind->_field_kind));
}



inline jule::Str _130f8bbe0_gen_globals(jule::Slice<jule::Ref<_1303533b0_Var>> _69020_globals) {
	jule::Str _69113_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _69020_globals;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1303533b0_Var> _130f8bbe0_v = *__julec_range_begin;
			_iter_begin_5152261008:;
			{
				if ((!(_130f8bbe0_v->_field_constant)) && (_130f8bbe0_v->_field_token._field_id != 0LLU)) {
					_69113_obj+=_130f8bbe0_gen_var(_130f8bbe0_v) + jule::Str("\n", 1);
				}
			}
			_iter_next_5152261008:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _130f8bbe0_v = *__julec_range_begin; goto _iter_begin_5152261008; }
			_iter_end_5152261008:;
		}
	}
	return _69113_obj;
}



inline jule::Str _130f8bbe0_gen_fn(jule::Ref<_127ed52e0_Fn> _70315_f) {
	jule::Str _70413_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _70315_f->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127ed52e0_FnIns> _130f8bbe0_ins = *__julec_range_begin;
			_iter_begin_5152267728:;
			{
				_70413_obj+=_130f8bbe0_gen_fn_decl_head(_130f8bbe0_ins,false);
				_70413_obj+=_130f8bbe0_gen_params_ins(_130f8bbe0_ins->_field_params) + jule::Str(" ", 1);
				_70413_obj+=_127fba3d0_gen_fn_scope(_130f8bbe0_ins);
				_70413_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_5152267728:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _130f8bbe0_ins = *__julec_range_begin; goto _iter_begin_5152267728; }
			_iter_end_5152267728:;
		}
	}
	return _70413_obj;
}



inline jule::Str _130f8bbe0_gen_pkg_fns(jule::Ref<_1300a4650_Package> _71520_p) {
	jule::Str _71613_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _71520_p->_field_files;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_13032dc50_SymbolTable> _130f8bbe0_f = *__julec_range_begin;
			_iter_begin_5152274496:;
			{
				jule::Int _71817_i = 0LL;
				_iter_begin_5152276144:;
				if (!(_71817_i < _130f8bbe0_f->_field_funcs._method_len())) { goto _iter_end_5152276144; }
				{
					jule::Ref<_127ed52e0_Fn> _72021_f = _130f8bbe0_f->_field_funcs._method_at(_71817_i);
					if ((!(_72021_f->_field_cpp_linked)) && (_72021_f->_field_token._field_id != 0LLU)) {
						_71613_obj+=_130f8bbe0_gen_fn(_72021_f) + jule::Str("\n\n", 2);
					}
				}
				_iter_next_5152276144:;
				(_71817_i)++;
				goto _iter_begin_5152276144;
				_iter_end_5152276144:;
			}
			_iter_next_5152274496:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _130f8bbe0_f = *__julec_range_begin; goto _iter_begin_5152274496; }
			_iter_end_5152274496:;
		}
	}
	return _71613_obj;
}



inline jule::Str _130f8bbe0_gen_struct_method_defs(jule::Ref<_127b2e960_StructIns> _73031_s) {
	jule::Str _73113_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _73031_s->_field_methods;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127ed52e0_Fn> _130f8bbe0_f = *__julec_range_begin;
			_iter_begin_5152285488:;
			{
				_73113_obj+=_130f8bbe0_indent();
				_73113_obj+=_130f8bbe0_gen_fn(_130f8bbe0_f);
				_73113_obj+=jule::Str("\n\n", 2);
			}
			_iter_next_5152285488:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _130f8bbe0_f = *__julec_range_begin; goto _iter_begin_5152285488; }
			_iter_end_5152285488:;
		}
	}
	return _73113_obj;
}



inline jule::Str _130f8bbe0_gen_struct_ostream(jule::Ref<_127b2e960_StructIns> _74127_s) {
	jule::Str _74213_obj = jule::Str("", 0);
	_74213_obj+=_130f8bbe0_indent();
	_74213_obj+=jule::Str("std::ostream &operator<<(std::ostream &_Stream, const ", 54);
	_74213_obj+=_130f5aa90_struct_ins_out_ident(_74127_s);
	_74213_obj+=jule::Str(" &_Src) {\n", 10);
	_130f8bbe0_add_indent();
	_74213_obj+=_130f8bbe0_indent();
	_74213_obj+=jule::Str("_Stream << \"", 12);
	_74213_obj+=_74127_s->_field_decl->_field_ident;
	_74213_obj+=jule::Str("{\";\n", 4);
	{
		auto &__julec_range_expr = _74127_s->_field_fields;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _130f8bbe0_i = 0;
			jule::Ref<_127b2e960_FieldIns> _130f8bbe0_f = *__julec_range_begin;
			_iter_begin_5152295840:;
			{
				_74213_obj+=_130f8bbe0_indent();
				_74213_obj+=jule::Str("_Stream << \"", 12);
				_74213_obj+=_130f8bbe0_f->_field_decl->_field_ident;
				_74213_obj+=jule::Str(":", 1);
				jule::Ref<_127b2e960_StructIns> _76013_strct = _130f8bbe0_f->_field_kind->_method_strct();
				if ((jule::real(_76013_strct) && jule::real(_76013_strct->_field_decl)) && _76013_strct->_field_decl->_field_cpp_linked) {
					_74213_obj+=(jule::Str(" cpp.", 5) + _130f5aa90_field_out_ident(_130f8bbe0_f->_field_decl)) + jule::Str("\"", 1);
				} else {
					_74213_obj+=jule::Str("\" << _Src.", 10);
					_74213_obj+=_130f5aa90_field_out_ident(_130f8bbe0_f->_field_decl);
				}
				if ((_130f8bbe0_i + 1LL) < _74127_s->_field_fields.len()) {
					_74213_obj+=jule::Str(" << \", \"", 8);
				}
				_74213_obj+=jule::Str(";\n", 2);
			}
			_iter_next_5152295840:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_130f8bbe0_i; _130f8bbe0_f = *__julec_range_begin; goto _iter_begin_5152295840; }
			_iter_end_5152295840:;
		}
	}
	_74213_obj+=_130f8bbe0_indent();
	_74213_obj+=jule::Str("_Stream << \"}\";\n", 16);
	_74213_obj+=_130f8bbe0_indent();
	_74213_obj+=jule::Str("return _Stream;\n", 16);
	_130f8bbe0_done_indent();
	_74213_obj+=_130f8bbe0_indent();
	_74213_obj+=jule::Str("}", 1);
	return _74213_obj;
}



inline jule::Str _130f8bbe0_gen_struct_derive_defs(jule::Ref<_127b2e960_StructIns> _78331_s) {
	jule::Str _78413_obj = jule::Str("", 0);
	if (_78331_s->_field_decl->_method_is_derives(jule::Str("Clone", 5))) {
		_78413_obj+=_130f8bbe0_indent();
		_78413_obj+=_130f583a0_get_derive_fn_def_clone(_78331_s->_field_decl);
		_78413_obj+=jule::Str("{\n", 2);
		_130f8bbe0_add_indent();
		_78413_obj+=_130f8bbe0_indent();
		_78413_obj+=_13023c2e0_gen_struct_kind_ins(_78331_s);
		_78413_obj+=jule::Str(" clone;\n", 8);
		{
			auto &__julec_range_expr = _78331_s->_field_fields;
			if (__julec_range_expr.begin() != __julec_range_expr.end()) {
				auto __julec_range_begin = __julec_range_expr.begin();
				const auto __julec_range_end = __julec_range_expr.end();
				jule::Ref<_127b2e960_FieldIns> _130f8bbe0_f = *__julec_range_begin;
				_iter_begin_5152319984:;
				{
					jule::Str _79517_ident = _130f5aa90_field_out_ident(_130f8bbe0_f->_field_decl);
					_78413_obj+=_130f8bbe0_indent();
					_78413_obj+=jule::Str("clone.", 6);
					_78413_obj+=_79517_ident;
					_78413_obj+=jule::Str(" = jule::clone(this->", 21);
					_78413_obj+=_79517_ident;
					_78413_obj+=jule::Str(");\n", 3);
				}
				_iter_next_5152319984:;
				++__julec_range_begin;
				if (__julec_range_begin != __julec_range_end) { _130f8bbe0_f = *__julec_range_begin; goto _iter_begin_5152319984; }
				_iter_end_5152319984:;
			}
		}
		_78413_obj+=_130f8bbe0_indent();
		_78413_obj+=jule::Str("return clone;\n", 14);
		_130f8bbe0_done_indent();
		_78413_obj+=_130f8bbe0_indent();
		_78413_obj+=jule::Str("}", 1);
	}
	return _78413_obj;
}



inline jule::Str _130f8bbe0_gen_struct_ins(jule::Ref<_127b2e960_StructIns> _81523_s) {
	jule::Str _81613_obj = _130f8bbe0_gen_struct_method_defs(_81523_s);
	_81613_obj+=jule::Str("\n\n", 2);
	_81613_obj+=_130f8bbe0_gen_struct_derive_defs(_81523_s);
	_81613_obj+=jule::Str("\n\n", 2);
	_81613_obj+=_130f8bbe0_gen_struct_ostream(_81523_s);
	return _81613_obj;
}



inline jule::Str _130f8bbe0_gen_struct(jule::Ref<_127b2e960_Struct> _82519_s) {
	jule::Str _82613_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _82519_s->_field_instances;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127b2e960_StructIns> _130f8bbe0_ins = *__julec_range_begin;
			_iter_begin_5152334800:;
			{
				_82613_obj+=_130f8bbe0_gen_struct_ins(_130f8bbe0_ins) + jule::Str("\n\n", 2);
			}
			_iter_next_5152334800:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _130f8bbe0_ins = *__julec_range_begin; goto _iter_begin_5152334800; }
			_iter_end_5152334800:;
		}
	}
	return _82613_obj;
}



inline jule::Str _130f8bbe0_gen_structs(jule::Slice<jule::Ref<_127b2e960_Struct>> _83420_structs) {
	jule::Str _83513_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _83420_structs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127b2e960_Struct> _130f8bbe0_s = *__julec_range_begin;
			_iter_begin_5152338656:;
			{
				if ((!(_130f8bbe0_s->_field_cpp_linked)) && (_130f8bbe0_s->_field_token._field_id != 0LLU)) {
					_83513_obj+=_130f8bbe0_gen_struct(_130f8bbe0_s);
					_83513_obj+=jule::Str("\n\n", 2);
				}
			}
			_iter_next_5152338656:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _130f8bbe0_s = *__julec_range_begin; goto _iter_begin_5152338656; }
			_iter_end_5152338656:;
		}
	}
	return _83513_obj;
}



inline jule::Str _130f8bbe0_gen_fns(jule::Ref<_136f09c40_IR> _84616_ir) {
	jule::Str _84713_obj = jule::Str("", 0);
	{
		auto &__julec_range_expr = _84616_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1300a4650_ImportInfo> _130f8bbe0_u = *__julec_range_begin;
			_iter_begin_5152345632:;
			{
				if ((!(_130f8bbe0_u->_field_cpp_linked))) {
					_84713_obj+=_130f8bbe0_gen_pkg_fns(_130f8bbe0_u->_field_package);
				}
			}
			_iter_next_5152345632:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _130f8bbe0_u = *__julec_range_begin; goto _iter_begin_5152345632; }
			_iter_end_5152345632:;
		}
	}
	_84713_obj+=_130f8bbe0_gen_pkg_fns(_84616_ir->_field_main);
	return _84713_obj;
}



inline jule::Str _130f8bbe0_gen_init_caller(jule::Ref<_136f09c40_IR> _86024_ir) {
	
	jule::Str _86313_obj = jule::Str("void ", 5);
	_86313_obj+=jule::Str("__jule_call_initializers", 24);
	_86313_obj+=jule::Str("(void) {", 8);
	jule::Fn<void(jule::Ref<_1300a4650_Package>)> _8679_push_init = jule::Fn<void(jule::Ref<_1300a4650_Package>)>([=](jule::Ref<_1300a4650_Package> _86728_pkg) mutable -> void {
		
		jule::Ref<_127ed52e0_Fn> _86913_f = _86728_pkg->_method_find_fn(jule::Str("init", 4),false);
		if ((!(jule::real(_86913_f)))) {
			return;
		}
		_86313_obj+=(jule::Str("\n\t", 2) + _130f5aa90_fn_out_ident(_86913_f)) + jule::Str("();", 3);
	});
	{
		auto &__julec_range_expr = _86024_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1300a4650_ImportInfo> _130f8bbe0_u = *__julec_range_begin;
			_iter_begin_5152355200:;
			{
				if ((!(_130f8bbe0_u->_field_cpp_linked))) {
					_8679_push_init(_130f8bbe0_u->_field_package);
				}
			}
			_iter_next_5152355200:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _130f8bbe0_u = *__julec_range_begin; goto _iter_begin_5152355200; }
			_iter_end_5152355200:;
		}
	}
	_8679_push_init(_86024_ir->_field_main);
	_86313_obj+=jule::Str("\n}", 2);
	return _86313_obj;
}



inline void _130f8bbe0_append_standard(jule::Str& _88829_obj_code,jule::Str _88844_compiler,jule::Str _88859_compiler_cmd) {
	struct JuleCompileTime _8899_time = time_now();
	jule::Str _89113_time_str = jule::Str("", 0);
	_89113_time_str+=_127164920_itoa(_8899_time.day);
	_89113_time_str+=jule::Str("/", 1);
	_89113_time_str+=_127164920_itoa(_8899_time.month);
	_89113_time_str+=jule::Str("/", 1);
	_89113_time_str+=_127164920_itoa(_8899_time.year);
	_89113_time_str+=jule::Str(" ", 1);
	_89113_time_str+=_127164920_itoa(_8899_time.hour);
	_89113_time_str+=jule::Str(".", 1);
	_89113_time_str+=_127164920_itoa(_8899_time.minute);
	_89113_time_str+=jule::Str(" (DD/MM/YYYY) (HH.MM)", 21);
	jule::Str _90313_s = jule::Str("", 0);
	_90313_s+=jule::Str("// Auto generated by JuleC.\n", 28);
	_90313_s+=jule::Str("// JuleC version: ", 18);
	_90313_s+=jule::Str("beta 0.0.3 @master", 18);
	_90313_s+=jule::Str("\n", 1);
	_90313_s+=jule::Str("// Date: ", 9);
	_90313_s+=_89113_time_str;
	_90313_s+=jule::Str("\n//\n// Recommended Compile Command;\n// ", 39);
	_90313_s+=_88844_compiler;
	_90313_s+=jule::Str(" ", 1);
	_90313_s+=_88859_compiler_cmd;
	_90313_s+=jule::Str("\n\n#include \"", 12);
	_90313_s+=_136e9f470_PATH_API;
	_90313_s+=jule::Str("\"\n\n", 3);
	_90313_s+=_88829_obj_code;
	_90313_s+=jule::Str("\nint main(int argc, char *argv[], char *envp[]) {\n\tstd::set_terminate(&jule::terminate_handler);\n\tjule::set_sig_handler(jule::signal_handler);\n\tjule::setup_command_line_args(argc, argv);\n\tjule::setup_environment_variables(envp);\n\n\t__jule_call_initializers();\n\tentry_point();\n\n\treturn EXIT_SUCCESS;\n}", 299);
	_88829_obj_code=_90313_s;
}



inline jule::Str _130f8bbe0_gen(jule::Ref<_136f09c40_IR> _93716_ir) {
	jule::Ref<_130f8bbe0_OrderedDecls> _93813_od = jule::new_struct<_130f8bbe0_OrderedDecls>(new( std::nothrow ) _130f8bbe0_OrderedDecls());
	_93813_od->_field_structs=_93716_ir->_method_get_all_structures();
	_130f5b350_order_structures(_93813_od->_field_structs);
	_93813_od->_field_globals=_93716_ir->_method_get_all_variables();
	_130f5b350_order_variables(_93813_od->_field_globals);
	jule::Str _94513_obj = jule::Str("", 0);
	_94513_obj+=_130f8bbe0_gen_links(_93716_ir) + jule::Str("\n", 1);
	_94513_obj+=_130f8bbe0_gen_prototypes(_93716_ir,_93813_od->_field_structs) + jule::Str("\n\n", 2);
	_94513_obj+=_130f8bbe0_gen_globals(_93813_od->_field_globals) + jule::Str("\n", 1);
	_94513_obj+=_130f8bbe0_gen_structs(_93813_od->_field_structs);
	_94513_obj+=_130f8bbe0_gen_fns(_93716_ir) + jule::Str("\n", 1);
	_94513_obj+=_130f8bbe0_gen_init_caller(_93716_ir) + jule::Str("\n", 1);
	return _94513_obj;
}



inline jule::Bool _130f5b350_is_struct_ordered(jule::Slice<jule::Ref<_127b2e960_Struct>> _822_structs,jule::Ref<_127b2e960_Struct> _842_s) {
	{
		auto &__julec_range_expr = _842_s->_field_depends;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_127b2e960_Struct> _130f5b350_d = *__julec_range_begin;
			_iter_begin_5152404752:;
			{
				{
					auto &__julec_range_expr = _822_structs;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_127b2e960_Struct> _130f5b350_ss = *__julec_range_begin;
						_iter_begin_5152406208:;
						{
							if ((_130f5b350_ss).alloc == (_842_s).alloc) {
								return false;
							} else if ((_130f5b350_ss).alloc == (_130f5b350_d).alloc) {
								goto _iter_end_5152406208;
							}
						}
						_iter_next_5152406208:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _130f5b350_ss = *__julec_range_begin; goto _iter_begin_5152406208; }
						_iter_end_5152406208:;
					}
				}
			}
			_iter_next_5152404752:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _130f5b350_d = *__julec_range_begin; goto _iter_begin_5152404752; }
			_iter_end_5152404752:;
		}
	}
	return true;
}



inline void _130f5b350_order_structures(jule::Slice<jule::Ref<_127b2e960_Struct>> _2425_structs) {
	jule::I64 _259_n = _2425_structs.len();
	jule::Int _2613_i = 0LL;
	_iter_begin_5152412144:;
	if (!(_2613_i < _259_n)) { goto _iter_end_5152412144; }
	{
		jule::Bool _2817_swapped = false;
		jule::Int _3017_j = 0LL;
		_iter_begin_5152415152:;
		if (!(_3017_j < ((_259_n - _2613_i) - 1LL))) { goto _iter_end_5152415152; }
		{
			if (_2425_structs[static_cast<jule::Int>(_3017_j)]->_field_depends.len() > 1LL) {
				std::tie(_2425_structs[static_cast<jule::Int>(_3017_j)],_2425_structs[static_cast<jule::Int>(_3017_j + 1LL)]) = std::make_tuple(_2425_structs[static_cast<jule::Int>(_3017_j + 1LL)],_2425_structs[static_cast<jule::Int>(_3017_j)]);
				_2817_swapped=true;
			}
		}
		_iter_next_5152415152:;
		(_3017_j)++;
		goto _iter_begin_5152415152;
		_iter_end_5152415152:;
		if ((!(_2817_swapped))) {
			goto _iter_end_5152412144;
		}
	}
	_iter_next_5152412144:;
	(_2613_i)++;
	goto _iter_begin_5152412144;
	_iter_end_5152412144:;
	_2613_i=0LL;
	_iter_begin_5152415344:;
	if (!(_2613_i < _259_n)) { goto _iter_end_5152415344; }
	{
		jule::Bool _4517_swapped = false;
		jule::Int _4717_j = 0LL;
		_iter_begin_5152427520:;
		if (!(_4717_j < ((_259_n - _2613_i) - 1LL))) { goto _iter_end_5152427520; }
		{
			if ((!(_130f5b350_is_struct_ordered(_2425_structs,_2425_structs[static_cast<jule::Int>(_4717_j)])))) {
				std::tie(_2425_structs[static_cast<jule::Int>(_4717_j)],_2425_structs[static_cast<jule::Int>(_4717_j + 1LL)]) = std::make_tuple(_2425_structs[static_cast<jule::Int>(_4717_j + 1LL)],_2425_structs[static_cast<jule::Int>(_4717_j)]);
				_4517_swapped=true;
			}
		}
		_iter_next_5152427520:;
		(_4717_j)++;
		goto _iter_begin_5152427520;
		_iter_end_5152427520:;
		if ((!(_4517_swapped))) {
			goto _iter_end_5152415344;
		}
	}
	_iter_next_5152415344:;
	(_2613_i)++;
	goto _iter_begin_5152415344;
	_iter_end_5152415344:;
}



inline jule::Bool _130f5b350_is_var_ordered(jule::Slice<jule::Ref<_1303533b0_Var>> _6219_vars,jule::Ref<_1303533b0_Var> _6233_v) {
	{
		auto &__julec_range_expr = _6233_v->_field_depends;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1303533b0_Var> _130f5b350_d = *__julec_range_begin;
			_iter_begin_5152437952:;
			{
				{
					auto &__julec_range_expr = _6219_vars;
					if (__julec_range_expr.begin() != __julec_range_expr.end()) {
						auto __julec_range_begin = __julec_range_expr.begin();
						const auto __julec_range_end = __julec_range_expr.end();
						jule::Ref<_1303533b0_Var> _130f5b350_vv = *__julec_range_begin;
						_iter_begin_5152439376:;
						{
							if ((_130f5b350_vv).alloc == (_6233_v).alloc) {
								return false;
							} else if ((_130f5b350_vv).alloc == (_130f5b350_d).alloc) {
								goto _iter_end_5152439376;
							}
						}
						_iter_next_5152439376:;
						++__julec_range_begin;
						if (__julec_range_begin != __julec_range_end) { _130f5b350_vv = *__julec_range_begin; goto _iter_begin_5152439376; }
						_iter_end_5152439376:;
					}
				}
			}
			_iter_next_5152437952:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _130f5b350_d = *__julec_range_begin; goto _iter_begin_5152437952; }
			_iter_end_5152437952:;
		}
	}
	return true;
}



inline void _130f5b350_order_variables(jule::Slice<jule::Ref<_1303533b0_Var>> _7824_vars) {
	jule::I64 _799_n = _7824_vars.len();
	jule::Int _8013_i = 0LL;
	_iter_begin_5152445312:;
	if (!(_8013_i < _799_n)) { goto _iter_end_5152445312; }
	{
		jule::Bool _8217_swapped = false;
		jule::Int _8417_j = 0LL;
		_iter_begin_5152448320:;
		if (!(_8417_j < ((_799_n - _8013_i) - 1LL))) { goto _iter_end_5152448320; }
		{
			if ((!(_130f5b350_is_var_ordered(_7824_vars,_7824_vars[static_cast<jule::Int>(_8417_j)])))) {
				std::tie(_7824_vars[static_cast<jule::Int>(_8417_j)],_7824_vars[static_cast<jule::Int>(_8417_j + 1LL)]) = std::make_tuple(_7824_vars[static_cast<jule::Int>(_8417_j + 1LL)],_7824_vars[static_cast<jule::Int>(_8417_j)]);
				_8217_swapped=true;
			}
		}
		_iter_next_5152448320:;
		(_8417_j)++;
		goto _iter_begin_5152448320;
		_iter_end_5152448320:;
		if ((!(_8217_swapped))) {
			goto _iter_end_5152445312;
		}
	}
	_iter_next_5152445312:;
	(_8013_i)++;
	goto _iter_begin_5152445312;
	_iter_end_5152445312:;
}



inline jule::Str _136e09180_str_repeat(jule::Str _5715_sub,jule::Int _5729_n) {
	if (_5729_n == 0LL) {
		return jule::Str("", 0);
	}
	jule::Str _6213_s = jule::Str("", 0);
	_iter_begin_5152554752:;
	if (!(_5729_n > 0LL)) { goto _iter_end_5152554752; }
	{
		_6213_s+=_5715_sub;
	}
	_iter_next_5152554752:;
	(_5729_n)--;
	goto _iter_begin_5152554752;
	_iter_end_5152554752:;
	return _6213_s;
}



inline void _136e09180_print_error_message(jule::Str _6924_msg) {
	jule::outln(_6924_msg);
}



inline void _136e09180_help(void) {
	if (_126e23f30_ARGS.len() > 2LL) {
		_136e09180_print_error_message(jule::Str("invalid command: ", 17) + _126e23f30_ARGS[static_cast<jule::Int>(2LL)]);
		return;
	}
	jule::I64 _7713_max = _136e09180_HELP_MAP[static_cast<jule::Int>(0LL)][static_cast<jule::Int>(0LL)].len();
	{
		auto &__julec_range_expr = _136e09180_HELP_MAP;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Array<jule::Str,2> _136e09180_k = *__julec_range_begin;
			_iter_begin_5152564272:;
			{
				jule::I64 _7913_n = _136e09180_k[static_cast<jule::Int>(0LL)].len();
				if (_7913_n > _7713_max) {
					_7713_max=_7913_n;
				}
			}
			_iter_next_5152564272:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _136e09180_k = *__julec_range_begin; goto _iter_begin_5152564272; }
			_iter_end_5152564272:;
		}
	}
	jule::Str _8513_s = jule::Str("", 0);
	
	{
		auto &__julec_range_expr = _136e09180_HELP_MAP;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Int _136e09180_i = 0;
			jule::Array<jule::Str,2> _136e09180_part = *__julec_range_begin;
			_iter_begin_5152570416:;
			{
				_8513_s+=_136e09180_part[static_cast<jule::Int>(0LL)];
				_8513_s+=_136e09180_str_repeat(jule::Str(" ", 1),(_7713_max - _136e09180_part[static_cast<jule::Int>(0LL)].len()) + 5LL);
				_8513_s+=_136e09180_part[static_cast<jule::Int>(1LL)];
				if ((_136e09180_i + 1LL) < 3LL) {
					_8513_s+=jule::Str("\n", 1);
				}
			}
			_iter_next_5152570416:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { ++_136e09180_i; _136e09180_part = *__julec_range_begin; goto _iter_begin_5152570416; }
			_iter_end_5152570416:;
		}
	}
	jule::outln(_8513_s);
}



inline void _136e09180_version(void) {
	if (_126e23f30_ARGS.len() > 2LL) {
		_136e09180_print_error_message(jule::Str("invalid command: ", 17) + _126e23f30_ARGS[static_cast<jule::Int>(2LL)]);
		return;
	}
	jule::out(jule::Str("julec version ", 14));
	jule::outln(jule::Str("beta 0.0.3 @master", 18));
}



inline void _136e09180_tool_distos(void) {
	jule::out(jule::Str("supported operating systems:\n ", 30));
	{
		auto &__julec_range_expr = _136ea8e10_DISTOS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _136e09180_os = *__julec_range_begin;
			_iter_begin_5152584816:;
			{
				jule::out(_136e09180_os);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_5152584816:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _136e09180_os = *__julec_range_begin; goto _iter_begin_5152584816; }
			_iter_end_5152584816:;
		}
	}
	jule::outln(jule::Str("", 0));
}



inline void _136e09180_tool_distarch(void) {
	jule::out(jule::Str("supported architects:\n ", 23));
	{
		auto &__julec_range_expr = _136ea8e10_DISTARCH;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _136e09180_arch = *__julec_range_begin;
			_iter_begin_5152588720:;
			{
				jule::out(_136e09180_arch);
				jule::out(jule::Str(" ", 1));
			}
			_iter_next_5152588720:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _136e09180_arch = *__julec_range_begin; goto _iter_begin_5152588720; }
			_iter_end_5152588720:;
		}
	}
	jule::outln(jule::Str("", 0));
}



inline void _136e09180_tool(void) {
	if (_126e23f30_ARGS.len() == 2LL) {
		jule::outln(jule::Str("tool commands:\n distos     Lists all supported operating systems\n distarch   Lists all supported architects", 107));
		return;
	} else if (_126e23f30_ARGS.len() > 3LL) {
		_136e09180_print_error_message(jule::Str("invalid command: ", 17) + _126e23f30_ARGS[static_cast<jule::Int>(3LL)]);
		return;
	}
	jule::Str _1369_cmd = _126e23f30_ARGS[static_cast<jule::Int>(2LL)];
	{
		auto &_match_expr{ _1369_cmd };
		if (!((jule::Str("distos", 6)) == _match_expr)) { goto _case_end_5152599984; }
		_case_begin_5152599984:;
		{
			_136e09180_tool_distos();
		}
		goto _match_end_5152592576;
		_case_end_5152599984:;
		if (!((jule::Str("distarch", 8)) == _match_expr)) { goto _case_end_5152600848; }
		_case_begin_5152600848:;
		{
			_136e09180_tool_distarch();
		}
		goto _match_end_5152592576;
		_case_end_5152600848:;
		_case_begin_5152599200:;
		{
			_136e09180_print_error_message(jule::Str("Undefined command: ", 19) + _1369_cmd);
		}
		goto _match_end_5152592576;
		_case_end_5152599200:;
		_match_end_5152592576:;
	}
}



inline jule::Bool _136e09180_process_command(void) {
	{
		auto &_match_expr{ _126e23f30_ARGS[static_cast<jule::Int>(1LL)] };
		if (!((jule::Str("help", 4)) == _match_expr)) { goto _case_end_5152605632; }
		_case_begin_5152605632:;
		{
			_136e09180_help();
		}
		goto _match_end_5152602976;
		_case_end_5152605632:;
		if (!((jule::Str("version", 7)) == _match_expr)) { goto _case_end_5152605744; }
		_case_begin_5152605744:;
		{
			_136e09180_version();
		}
		goto _match_end_5152602976;
		_case_end_5152605744:;
		if (!((jule::Str("tool", 4)) == _match_expr)) { goto _case_end_5152604736; }
		_case_begin_5152604736:;
		{
			_136e09180_tool();
		}
		goto _match_end_5152602976;
		_case_end_5152604736:;
		_case_begin_5152599584:;
		{
			return false;
		}
		goto _match_end_5152602976;
		_case_end_5152599584:;
		_match_end_5152602976:;
	}
	return true;
}



inline void _136e09180_init(void) {
	if (false) {
		_136e09180_COMPILER=jule::Str("gcc", 3);
		_136e09180_COMPILER_PATH=jule::Str("g++", 3);
	} else {
		_136e09180_COMPILER=jule::Str("clang", 5);
		_136e09180_COMPILER_PATH=jule::Str("clang++", 7);
	}
}



inline void _136e09180_exit_err(jule::Str _16613_msg) {
	jule::outln(_16613_msg);
	_126ef0cf0_exit(1LL);
}



void entry_point(void) {
	if (_126e23f30_ARGS.len() < 2LL) {
		_126ef0cf0_exit(0LL);
	}
	if (_136e09180_process_command()) {
		return;
	}
	_14011c2a0_compile_command();
}



inline std::tuple<jule::Str,jule::Str> _14011c2a0_get_option(jule::Slice<jule::Str> _3215_args,jule::Int& _3233_i) {
	jule::Str _3253_content = jule::Str();
	jule::Str _3243_arg = jule::Str();
	_iter_begin_5152620768:;
	if (!(_3233_i < _3215_args.len())) { goto _iter_end_5152620768; }
	{
		_3243_arg=_3215_args[static_cast<jule::Int>(_3233_i)];
		jule::Int _3517_j = 0LL;
		jule::Slice<jule::I32> _3617_runes = static_cast<jule::Slice<jule::I32>>(_3243_arg);
		jule::I32 _3717_r = _3617_runes[static_cast<jule::Int>(_3517_j)];
		if (_3717_r != '-') {
			_3253_content+=_3243_arg;
			_3243_arg=jule::Str("", 0);
			goto _iter_next_5152620768;
		}
		(_3517_j)++;
		if (_3517_j >= _3617_runes.len()) {
			_136e09180_exit_err(jule::Str("undefined syntax: ", 18) + _3243_arg);
		}
		_3717_r=_3617_runes[static_cast<jule::Int>(_3517_j)];
		if (_3717_r == '-') {
			(_3517_j)++;
			if (_3517_j >= _3617_runes.len()) {
				_136e09180_exit_err(jule::Str("undefined syntax: ", 18) + _3243_arg);
			}
			_3717_r=_3617_runes[static_cast<jule::Int>(_3517_j)];
		}
		if ((!(_127941de0_is_ident_rune(static_cast<jule::Str>(_3717_r))))) {
			_136e09180_exit_err(jule::Str("undefined syntax: ", 18) + _3243_arg);
		}
		(_3517_j)++;
		_iter_begin_5152633472:;
		if (!(_3517_j < _3617_runes.len())) { goto _iter_end_5152633472; }
		{
			_3717_r=_3617_runes[static_cast<jule::Int>(_3517_j)];
			if (((((!(_127941de0_is_space(_3717_r))) && (!(_127941de0_is_letter(_3717_r)))) && (!(_127941de0_is_decimal(static_cast<jule::U8>(_3717_r))))) && (_3717_r != '_')) && (_3717_r != '-')) {
				_136e09180_exit_err(jule::Str("undefined syntax: ", 18) + static_cast<jule::Str>(_3617_runes.slice(static_cast<jule::Int>(_3517_j))));
			}
		}
		_iter_next_5152633472:;
		(_3517_j)++;
		goto _iter_begin_5152633472;
		_iter_end_5152633472:;
		goto _iter_end_5152620768;
	}
	_iter_next_5152620768:;
	(_3233_i)++;
	goto _iter_begin_5152620768;
	_iter_end_5152620768:;
	return std::make_tuple(_3243_arg,_3253_content);
}



inline jule::Str _14011c2a0_get_option_value(jule::Slice<jule::Str> _7621_args,jule::Int& _7639_i) {
	(_7639_i)++;
	if (_7639_i < _7621_args.len()) {
		jule::Str _7913_arg = _7621_args[static_cast<jule::Int>(_7639_i)];
		return _7913_arg;
	}
	return jule::Str("", 0);
}



inline void _14011c2a0_parse_out_option(jule::Slice<jule::Str> _8521_args,jule::Int& _8539_i) {
	jule::Str _869_value = _14011c2a0_get_option_value(_8521_args,_8539_i);
	if (_869_value == jule::Str("", 0)) {
		_136e09180_exit_err(jule::Str("missing option value: -o --out", 30));
	}
	_136e09180_OUT=_869_value;
}



inline void _14011c2a0_parse_opt_option(jule::Slice<jule::Str> _9321_args,jule::Int& _9339_i) {
	jule::Str _949_value = _14011c2a0_get_option_value(_9321_args,_9339_i);
	if (_949_value == jule::Str("", 0)) {
		_136e09180_exit_err(jule::Str("missing option value: --opt", 27));
	}
	{
		auto &_match_expr{ _949_value };
		if (!((jule::Str("L0", 2)) == _match_expr)) { goto _case_end_5152664112; }
		_case_begin_5152664112:;
		{
			_127cdea20_push_opt_level(0LLU);
		}
		goto _match_end_5152663520;
		_case_end_5152664112:;
		if (!((jule::Str("L1", 2)) == _match_expr)) { goto _case_end_5152664224; }
		_case_begin_5152664224:;
		{
			_127cdea20_push_opt_level(1LLU);
		}
		goto _match_end_5152663520;
		_case_end_5152664224:;
		_case_begin_5152661424:;
		{
			_136e09180_exit_err(jule::Str("invalid optimization level: ", 28) + _949_value);
		}
		goto _match_end_5152663520;
		_case_end_5152661424:;
		_match_end_5152663520:;
	}
}



inline void _14011c2a0_check_target_arch(jule::Str _10622_arch) {
	{
		auto &__julec_range_expr = _136ea8e10_DISTARCH;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _14011c2a0_distarch = *__julec_range_begin;
			_iter_begin_5152668304:;
			{
				if (_10622_arch == _14011c2a0_distarch) {
					return;
				}
			}
			_iter_next_5152668304:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _14011c2a0_distarch = *__julec_range_begin; goto _iter_begin_5152668304; }
			_iter_end_5152668304:;
		}
	}
	_136e09180_exit_err(jule::Str("unsupported/undefined architecture: ", 36) + _10622_arch);
}



inline void _14011c2a0_check_target_os(jule::Str _11620_os) {
	{
		auto &__julec_range_expr = _136ea8e10_DISTOS;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _14011c2a0_distos = *__julec_range_begin;
			_iter_begin_5152665728:;
			{
				if (_11620_os == _14011c2a0_distos) {
					return;
				}
			}
			_iter_next_5152665728:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _14011c2a0_distos = *__julec_range_begin; goto _iter_begin_5152665728; }
			_iter_end_5152665728:;
		}
	}
	_136e09180_exit_err(jule::Str("unsupported/undefined operating system: ", 40) + _11620_os);
}



inline void _14011c2a0_parse_target_option(jule::Slice<jule::Str> _12624_args,jule::Int& _12642_i) {
	jule::Str _1279_value = _14011c2a0_get_option_value(_12624_args,_12642_i);
	if (_1279_value == jule::Str("", 0)) {
		_136e09180_exit_err(jule::Str("missing option value: --target", 30));
	}
	jule::Slice<jule::Str> _1329_parts = _1279_value.split(jule::Str("-", 1),-1LL);
	if (_1329_parts.len() != 2LL) {
		_136e09180_exit_err(jule::Str("undefined platform target format: ", 34) + _1279_value);
	}
	jule::Str _13710_os = _1329_parts[static_cast<jule::Int>(0LL)];
	jule::Str _13714_arch = _1329_parts[static_cast<jule::Int>(1LL)];
	std::tie(_13710_os,_13714_arch) = std::make_tuple(_1329_parts[static_cast<jule::Int>(0LL)],_1329_parts[static_cast<jule::Int>(1LL)]);
	if (_13710_os != jule::Str("native", 6)) {
		_14011c2a0_check_target_os(_13710_os);
		_136e9f470_OS=_13710_os;
	}
	if (_13714_arch != jule::Str("native", 6)) {
		_14011c2a0_check_target_arch(_13714_arch);
		_136e9f470_ARCH=_13714_arch;
	}
}



inline void _14011c2a0_parse_compiler_option(jule::Slice<jule::Str> _15026_args,jule::Int& _15044_i) {
	jule::Str _1519_value = _14011c2a0_get_option_value(_15026_args,_15044_i);
	{
		auto &_match_expr{ _1519_value };
		if (!((jule::Str("", 0)) == _match_expr)) { goto _case_end_5152696720; }
		_case_begin_5152696720:;
		{
			_136e09180_exit_err(jule::Str("missing option value: --compiler", 32));
		}
		goto _match_end_5152694464;
		_case_end_5152696720:;
		if (!((jule::Str("clang", 5)) == _match_expr)) { goto _case_end_5152697184; }
		_case_begin_5152697184:;
		{
			_136e09180_COMPILER=jule::Str("clang", 5);
			_136e09180_COMPILER_PATH=jule::Str("clang++", 7);
		}
		goto _match_end_5152694464;
		_case_end_5152697184:;
		if (!((jule::Str("gcc", 3)) == _match_expr)) { goto _case_end_5152697296; }
		_case_begin_5152697296:;
		{
			_136e09180_COMPILER=jule::Str("gcc", 3);
			_136e09180_COMPILER_PATH=jule::Str("g++", 3);
		}
		goto _match_end_5152694464;
		_case_end_5152697296:;
		_case_begin_5152695920:;
		{
			_136e09180_exit_err(jule::Str("invalid option value for --compiler: ", 37) + _1519_value);
		}
		goto _match_end_5152694464;
		_case_end_5152695920:;
		_match_end_5152694464:;
	}
}



inline jule::Str _14011c2a0_parse_options(jule::Slice<jule::Str> _16918_args) {
	jule::Str _17013_cmd = jule::Str("", 0);
	jule::Int _17413_i = 1LL;
	_iter_begin_5152721248:;
	if (!(_17413_i < _16918_args.len())) { goto _iter_end_5152721248; }
	{
		jule::Str _17614_arg;
		jule::Str _17619_content;
		std::tie(_17614_arg,_17619_content) = _14011c2a0_get_option(_16918_args,_17413_i);
		_17013_cmd+=_17619_content;
		{
			auto &_match_expr{ _17614_arg };
			if (!((jule::Str("", 0)) == _match_expr)) { goto _case_end_5152671088; }
			goto _match_end_5152725568;
			_case_end_5152671088:;
			if (!((jule::Str("-o", 2)) == _match_expr || (jule::Str("--out", 5)) == _match_expr)) { goto _case_end_5152725696; }
			_case_begin_5152725696:;
			{
				_14011c2a0_parse_out_option(_16918_args,_17413_i);
			}
			goto _match_end_5152725568;
			_case_end_5152725696:;
			if (!((jule::Str("-t", 2)) == _match_expr || (jule::Str("--transpile", 11)) == _match_expr)) { goto _case_end_5152725808; }
			_case_begin_5152725808:;
			{
				_136e09180_MODE=1LLU;
			}
			goto _match_end_5152725568;
			_case_end_5152725808:;
			if (!((jule::Str("-c", 2)) == _match_expr || (jule::Str("--compile", 9)) == _match_expr)) { goto _case_end_5152725920; }
			_case_begin_5152725920:;
			{
				_136e09180_MODE=0LLU;
			}
			goto _match_end_5152725568;
			_case_end_5152725920:;
			if (!((jule::Str("--compiler", 10)) == _match_expr)) { goto _case_end_5152726032; }
			_case_begin_5152726032:;
			{
				_14011c2a0_parse_compiler_option(_16918_args,_17413_i);
			}
			goto _match_end_5152725568;
			_case_end_5152726032:;
			if (!((jule::Str("--opt-copy", 10)) == _match_expr)) { goto _case_end_5152728048; }
			_case_begin_5152728048:;
			{
				_127cdea20_OPTIMIZATIONS=append(_127cdea20_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-copy", 10)}));
			}
			goto _match_end_5152725568;
			_case_end_5152728048:;
			if (!((jule::Str("--opt-deadcode", 14)) == _match_expr)) { goto _case_end_5152728160; }
			_case_begin_5152728160:;
			{
				_127cdea20_OPTIMIZATIONS=append(_127cdea20_OPTIMIZATIONS,jule::Slice<jule::Str>({jule::Str("--opt-deadcode", 14)}));
			}
			goto _match_end_5152725568;
			_case_end_5152728160:;
			if (!((jule::Str("--opt", 5)) == _match_expr)) { goto _case_end_5152728272; }
			_case_begin_5152728272:;
			{
				_14011c2a0_parse_opt_option(_16918_args,_17413_i);
			}
			goto _match_end_5152725568;
			_case_end_5152728272:;
			if (!((jule::Str("--target", 8)) == _match_expr)) { goto _case_end_5152728384; }
			_case_begin_5152728384:;
			{
				_14011c2a0_parse_target_option(_16918_args,_17413_i);
			}
			goto _match_end_5152725568;
			_case_end_5152728384:;
			_case_begin_5152724784:;
			{
				_136e09180_exit_err(jule::Str("undefined option: ", 18) + _17614_arg);
			}
			goto _match_end_5152725568;
			_case_end_5152724784:;
			_match_end_5152725568:;
		}
	}
	_iter_next_5152721248:;
	(_17413_i)++;
	goto _iter_begin_5152721248;
	_iter_end_5152721248:;
	_17013_cmd=_17013_cmd.trim(jule::Str(" \t\r\n\v", 5));
	return _17013_cmd;
}



inline void _14011c2a0_write_output(jule::Str _21317_path,jule::Str _21328_content) {
	jule::Str _2149_dir = _136ec98d0_dir(_21317_path);
	jule::Int _21617_err;
	std::tie(std::ignore,_21617_err) = _136e09ef0_stat(_2149_dir);
	if (_21617_err != 0LLU) {
		jule::Bool _21813_ok = mkdir(_2149_dir);
		if ((!(_21813_ok))) {
			_136e09180_exit_err(jule::Str("a problem occurs when code generation", 37));
		}
	}
	jule::Ref<_1275c8a10_File> _22414_f;
	std::tie(_22414_f,_21617_err) = _12786c730_open(_21317_path,578LL,438LL);
	if (_21617_err != 0LLU) {
		_136e09180_exit_err(jule::Str("a problem occurs when code generation", 37));
	}
	std::tie(std::ignore,_21617_err) = _22414_f->_method_write(static_cast<jule::Slice<jule::U8>>(_21328_content));
	if (_21617_err != 0LLU) {
		_136e09180_exit_err(jule::Str("a problem occurs when code generation", 37));
	}
	_22414_f->_method_close();
}



inline void _14011c2a0_clear_objects(void) {
	rmdir(_136e09180_OUT_DIR);
}



inline void _14011c2a0_compile_ir(jule::Str _24015_compiler,jule::Str _24030_compiler_cmd) {
	jule::Int _2419_status = system((_24015_compiler + jule::Str(" ", 1)) + _24030_compiler_cmd);
	if (_2419_status != 0LL) {
		jule::out(jule::Str("external compiler failed with status code: ", 43));
		jule::outln(_2419_status);
		_136e09180_exit_err(jule::Str("", 0));
	}
	_14011c2a0_clear_objects();
}



inline void _14011c2a0_do_spell(jule::Str _25113_obj,jule::Str _25123_compiler,jule::Str _25138_compiler_cmd) {
	jule::Str _2529_path = _14011c2a0_get_compile_path();
	_14011c2a0_write_output(_2529_path,_25113_obj);
	{
		auto &_match_expr{ _136e09180_MODE };
		if (!((0LLU) == _match_expr)) { goto _case_end_5152773264; }
		_case_begin_5152773264:;
		{
			_14011c2a0_compile_ir(_25123_compiler,_25138_compiler_cmd);
		}
		goto _match_end_5152772976;
		_case_end_5152773264:;
		_match_end_5152772976:;
	}
}



inline void _14011c2a0_check_mode(void) {
	if ((_136e09180_MODE != 1LLU) && (_136e09180_MODE != 0LLU)) {
		jule::outln(_136e8b750_errorf(jule::Str("invalid_value_for_key", 21),jule::Slice<jule::Any>({jule::Any(_136e09180_MODE),jule::Any(jule::Str("mode", 4))})));
		_136e09180_exit_err(jule::Str("", 0));
	}
}



inline void _14011c2a0_check_compiler(void) {
	if ((_136e09180_COMPILER != jule::Str("gcc", 3)) && (_136e09180_COMPILER != jule::Str("clang", 5))) {
		jule::outln(_136e8b750_errorf(jule::Str("invalid_value_for_key", 21),jule::Slice<jule::Any>({jule::Any(_136e09180_COMPILER),jule::Any(jule::Str("compiler", 8))})));
		_136e09180_exit_err(jule::Str("", 0));
	}
}



inline void _14011c2a0_set(void) {
	_14011c2a0_check_mode();
	_14011c2a0_check_compiler();
}



inline void _14011c2a0_print_logs(jule::Slice<_136e99d00_Log> _28115_logs) {
	jule::Str _28213_s = jule::Str("", 0);
	{
		auto &__julec_range_expr = _28115_logs;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			_136e99d00_Log _14011c2a0_l = *__julec_range_begin;
			_iter_begin_5152786688:;
			{
				_28213_s+=_14011c2a0_l._method_to_str() + jule::Str("\n", 1);
			}
			_iter_next_5152786688:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _14011c2a0_l = *__julec_range_begin; goto _iter_begin_5152786688; }
			_iter_end_5152786688:;
		}
	}
	jule::out(_28213_s);
}



inline jule::Bool _14011c2a0_is_cpp_source_file(jule::Str _28923_path) {
	jule::Int _2909_offset = _28923_path.rfind(jule::Str(".", 1));
	if (_2909_offset == -1LL) {
		return false;
	}
	return _136f04bd0_is_valid_cpp_ext(_28923_path.slice(static_cast<jule::Int>(_2909_offset)));
}



inline std::tuple<jule::Str,jule::Str> _14011c2a0_gen_compile_cmd(jule::Str _29720_source_path,jule::Ref<_136f09c40_IR> _29738_ir) {
	jule::Str _2989_compiler = _136e09180_COMPILER_PATH;
	
	
	
	
	jule::Str _30513_cmd = jule::Str("-O0 ", 4);
	{
		auto &_match_expr{ _136e09180_COMPILER };
		if (!((jule::Str("gcc", 3)) == _match_expr)) { goto _case_end_5152804128; }
		_case_begin_5152804128:;
		{
			_30513_cmd+=jule::Str("-w ", 3);
		}
		goto _match_end_5152803488;
		_case_end_5152804128:;
		if (!((jule::Str("clang", 5)) == _match_expr)) { goto _case_end_5152804240; }
		_case_begin_5152804240:;
		{
			_30513_cmd+=jule::Str("-Wno-everything ", 16);
		}
		goto _match_end_5152803488;
		_case_end_5152804240:;
		_match_end_5152803488:;
	}
	_30513_cmd+=jule::Str("--std=c++14 ", 12);
	{
		auto &__julec_range_expr = _29738_ir->_field_passes;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Str _14011c2a0_pass = *__julec_range_begin;
			_iter_begin_5152801232:;
			{
				_30513_cmd+=_14011c2a0_pass + jule::Str(" ", 1);
			}
			_iter_next_5152801232:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _14011c2a0_pass = *__julec_range_begin; goto _iter_begin_5152801232; }
			_iter_end_5152801232:;
		}
	}
	{
		auto &__julec_range_expr = _29738_ir->_field_used;
		if (__julec_range_expr.begin() != __julec_range_expr.end()) {
			auto __julec_range_begin = __julec_range_expr.begin();
			const auto __julec_range_end = __julec_range_expr.end();
			jule::Ref<_1300a4650_ImportInfo> _14011c2a0_u = *__julec_range_begin;
			_iter_begin_5152810768:;
			{
				if (_14011c2a0_u->_field_cpp_linked && _14011c2a0_is_cpp_source_file(_14011c2a0_u->_field_path)) {
					_30513_cmd+=_14011c2a0_u->_field_path + jule::Str(" ", 1);
				}
			}
			_iter_next_5152810768:;
			++__julec_range_begin;
			if (__julec_range_begin != __julec_range_end) { _14011c2a0_u = *__julec_range_begin; goto _iter_begin_5152810768; }
			_iter_end_5152810768:;
		}
	}
	if (_136e09180_OUT != jule::Str("", 0)) {
		_30513_cmd+=(jule::Str("-o ", 3) + _136e09180_OUT) + jule::Str(" ", 1);
	}
	_30513_cmd+=_29720_source_path;
	return std::make_tuple(_2989_compiler,_30513_cmd);
}



inline jule::Str _14011c2a0_get_compile_path(void) {
	return _136ec98d0_join(jule::Slice<jule::Str>({_136e09180_OUT_DIR,_136e09180_OUT_NAME}));
}



inline void _14011c2a0_apply_target_independent_optimizations(jule::Ref<_136f09c40_IR> _34647_ir) {
	if (_127cdea20_is_opt_enabled(jule::Str("--opt-deadcode", 14))) {
		_136f12120_eliminate_dead_code(_34647_ir);
	}
}



inline void _14011c2a0_compile_command(void) {
	jule::Str _3539_path = _14011c2a0_parse_options(_126e23f30_ARGS);
	if (_3539_path == jule::Str("", 0)) {
		_136e09180_exit_err(_136e8b750_errorf(jule::Str("missing_compile_path", 20),jule::Slice<jule::Any>({})));
	}
	jule::Ref<_1275e3c20_Status> _35910_inf;
	jule::Int _35915_err;
	std::tie(_35910_inf,_35915_err) = _136e09ef0_stat(_136e9f470_PATH_STDLIB);
	if ((_35915_err != 0LLU) || (!(_35910_inf->_method_is_dir()))) {
		_136e09180_exit_err(_136e8b750_errorf(jule::Str("stdlib_not_exist", 16),jule::Slice<jule::Any>({})));
	}
	_14011c2a0_set();
	jule::Ref<_136f09c40_IR> _36614_ir;
	jule::Slice<_136e99d00_Log> _36618_logs;
	std::tie(_36614_ir,_36618_logs) = _136f09c40_build_ir(_3539_path);
	if ((!(jule::real(_36614_ir))) && (_36618_logs == nullptr)) {
		_136e09180_exit_err(_136e8b750_errorf(jule::Str("no_file_in_entry_package", 24),jule::Slice<jule::Any>({jule::Any(_3539_path)})));
	}
	if (_36618_logs != nullptr) {
		_14011c2a0_print_logs(_36618_logs);
		_136e09180_exit_err(jule::Str("", 0));
	}
	
	jule::Ref<_127ed52e0_Fn> _3789_f = _36614_ir->_field_main->_method_find_fn(jule::Str("main", 4),false);
	if ((!(jule::real(_3789_f)))) {
		_136e09180_exit_err(_136e8b750_errorf(jule::Str("no_entry_point", 14),jule::Slice<jule::Any>({})));
	}
	_14011c2a0_apply_target_independent_optimizations(_36614_ir);
	jule::Str _38510_compiler;
	jule::Str _38520_compiler_cmd;
	std::tie(_38510_compiler,_38520_compiler_cmd) = _14011c2a0_gen_compile_cmd(_14011c2a0_get_compile_path(),_36614_ir);
	jule::Str _38713_obj = _130f8bbe0_gen(_36614_ir);
	_130f8bbe0_append_standard(_38713_obj,_38510_compiler,_38520_compiler_cmd);
	_14011c2a0_do_spell(_38713_obj,_38510_compiler,_38520_compiler_cmd);
}




void __jule_call_initializers(void) {
	_126e23f30_init();
	_136e9f470_init();
	_130cb2be0_init();
	_130b8f5f0_init();
	_136e09180_init();
}

int main(int argc, char *argv[], char *envp[]) {
	std::set_terminate(&jule::terminate_handler);
	jule::set_sig_handler(jule::signal_handler);
	jule::setup_command_line_args(argc, argv);
	jule::setup_environment_variables(envp);

	__jule_call_initializers();
	entry_point();

	return EXIT_SUCCESS;
}